#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventBase

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "Engine_structs.hpp"
#include "EventVoiceFixData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ChangeFadeVolume_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_EVENT_SELECTION_EX_TYPE_structs.hpp"
#include "EventVisibleLevel_structs.hpp"
#include "DebugEventTextTiming_structs.hpp"
#include "EventChangeMaterialTable_structs.hpp"
#include "E_IK_TYPE_LIST_structs.hpp"
#include "E_PLAYER_MANAGER_TYPE_structs.hpp"
#include "EventTableStrInt_structs.hpp"
#include "EventRateTable_structs.hpp"
#include "EventSelection_structs.hpp"
#include "EventImportantSelectionLR_structs.hpp"
#include "EventMessage_structs.hpp"
#include "MovieScene_structs.hpp"


namespace SDK::Params
{

// Function BP_EventBase.BP_EventBase_C.BI_EB_PlayStart
// 0x0001 (0x0001 - 0x0000)
struct BP_EventBase_C_BI_EB_PlayStart final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_BI_EB_PlayStart) == 0x000001, "Wrong alignment on BP_EventBase_C_BI_EB_PlayStart");
static_assert(sizeof(BP_EventBase_C_BI_EB_PlayStart) == 0x000001, "Wrong size on BP_EventBase_C_BI_EB_PlayStart");
static_assert(offsetof(BP_EventBase_C_BI_EB_PlayStart, NoUse) == 0x000000, "Member 'BP_EventBase_C_BI_EB_PlayStart::NoUse' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.BI_EB_IsFinish
// 0x0002 (0x0002 - 0x0000)
struct BP_EventBase_C_BI_EB_IsFinish final
{
public:
	bool                                          Param_Finish;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFinish_Finish;                          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_BI_EB_IsFinish) == 0x000001, "Wrong alignment on BP_EventBase_C_BI_EB_IsFinish");
static_assert(sizeof(BP_EventBase_C_BI_EB_IsFinish) == 0x000002, "Wrong size on BP_EventBase_C_BI_EB_IsFinish");
static_assert(offsetof(BP_EventBase_C_BI_EB_IsFinish, Param_Finish) == 0x000000, "Member 'BP_EventBase_C_BI_EB_IsFinish::Param_Finish' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_BI_EB_IsFinish, CallFunc_IsFinish_Finish) == 0x000001, "Member 'BP_EventBase_C_BI_EB_IsFinish::CallFunc_IsFinish_Finish' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlaySelectionSoundEnter
// 0x0018 (0x0018 - 0x0000)
struct BP_EventBase_C_PlaySelectionSoundEnter final
{
public:
	bool                                          SoundFlag;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C81[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_SpawnSound2D_ReturnValue_1;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_PlaySelectionSoundEnter) == 0x000008, "Wrong alignment on BP_EventBase_C_PlaySelectionSoundEnter");
static_assert(sizeof(BP_EventBase_C_PlaySelectionSoundEnter) == 0x000018, "Wrong size on BP_EventBase_C_PlaySelectionSoundEnter");
static_assert(offsetof(BP_EventBase_C_PlaySelectionSoundEnter, SoundFlag) == 0x000000, "Member 'BP_EventBase_C_PlaySelectionSoundEnter::SoundFlag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySelectionSoundEnter, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_PlaySelectionSoundEnter::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySelectionSoundEnter, CallFunc_SpawnSound2D_ReturnValue_1) == 0x000010, "Member 'BP_EventBase_C_PlaySelectionSoundEnter::CallFunc_SpawnSound2D_ReturnValue_1' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlaySelectionSoundSelect
// 0x0018 (0x0018 - 0x0000)
struct BP_EventBase_C_PlaySelectionSoundSelect final
{
public:
	bool                                          SoundFlag;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C82[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_SpawnSound2D_ReturnValue_1;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_PlaySelectionSoundSelect) == 0x000008, "Wrong alignment on BP_EventBase_C_PlaySelectionSoundSelect");
static_assert(sizeof(BP_EventBase_C_PlaySelectionSoundSelect) == 0x000018, "Wrong size on BP_EventBase_C_PlaySelectionSoundSelect");
static_assert(offsetof(BP_EventBase_C_PlaySelectionSoundSelect, SoundFlag) == 0x000000, "Member 'BP_EventBase_C_PlaySelectionSoundSelect::SoundFlag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySelectionSoundSelect, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_PlaySelectionSoundSelect::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySelectionSoundSelect, CallFunc_SpawnSound2D_ReturnValue_1) == 0x000010, "Member 'BP_EventBase_C_PlaySelectionSoundSelect::CallFunc_SpawnSound2D_ReturnValue_1' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.GetFinish
// 0x0001 (0x0001 - 0x0000)
struct BP_EventBase_C_GetFinish final
{
public:
	bool                                          IsFinish;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_GetFinish) == 0x000001, "Wrong alignment on BP_EventBase_C_GetFinish");
static_assert(sizeof(BP_EventBase_C_GetFinish) == 0x000001, "Wrong size on BP_EventBase_C_GetFinish");
static_assert(offsetof(BP_EventBase_C_GetFinish, IsFinish) == 0x000000, "Member 'BP_EventBase_C_GetFinish::IsFinish' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.IsTalkPart
// 0x0001 (0x0001 - 0x0000)
struct BP_EventBase_C_IsTalkPart final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_IsTalkPart) == 0x000001, "Wrong alignment on BP_EventBase_C_IsTalkPart");
static_assert(sizeof(BP_EventBase_C_IsTalkPart) == 0x000001, "Wrong size on BP_EventBase_C_IsTalkPart");
static_assert(offsetof(BP_EventBase_C_IsTalkPart, ReturnValue) == 0x000000, "Member 'BP_EventBase_C_IsTalkPart::ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetStaffSkip
// 0x0010 (0x0010 - 0x0000)
struct BP_EventBase_C_SetStaffSkip final
{
public:
	bool                                          Use;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C83[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_EventStaff;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_SetStaffSkip) == 0x000008, "Wrong alignment on BP_EventBase_C_SetStaffSkip");
static_assert(sizeof(BP_EventBase_C_SetStaffSkip) == 0x000010, "Wrong size on BP_EventBase_C_SetStaffSkip");
static_assert(offsetof(BP_EventBase_C_SetStaffSkip, Use) == 0x000000, "Member 'BP_EventBase_C_SetStaffSkip::Use' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetStaffSkip, Param_EventStaff) == 0x000008, "Member 'BP_EventBase_C_SetStaffSkip::Param_EventStaff' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetUniteSkip
// 0x0001 (0x0001 - 0x0000)
struct BP_EventBase_C_SetUniteSkip final
{
public:
	bool                                          Use;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_SetUniteSkip) == 0x000001, "Wrong alignment on BP_EventBase_C_SetUniteSkip");
static_assert(sizeof(BP_EventBase_C_SetUniteSkip) == 0x000001, "Wrong size on BP_EventBase_C_SetUniteSkip");
static_assert(offsetof(BP_EventBase_C_SetUniteSkip, Use) == 0x000000, "Member 'BP_EventBase_C_SetUniteSkip::Use' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.DebugOutputTextTime
// 0x0110 (0x0110 - 0x0000)
struct BP_EventBase_C_DebugOutputTextTime final
{
public:
	float                                         OutputTime;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTextFixTime_FixTime;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C84[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C85[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C86[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScriptMessage                         CallFunc_Array_Get_Item;                           // 0x0060(0x0040)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C87[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C88[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStrLenEvtDebug_ReturnValue;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C89[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVoiceAutoTime_ReturnValue;             // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C8A[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_DebugOutputTextTime) == 0x000008, "Wrong alignment on BP_EventBase_C_DebugOutputTextTime");
static_assert(sizeof(BP_EventBase_C_DebugOutputTextTime) == 0x000110, "Wrong size on BP_EventBase_C_DebugOutputTextTime");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, OutputTime) == 0x000000, "Member 'BP_EventBase_C_DebugOutputTextTime::OutputTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EventBase_C_DebugOutputTextTime::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_GetTextFixTime_FixTime) == 0x000008, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_GetTextFixTime_FixTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_Conv_FloatToString_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_EventBase_C_DebugOutputTextTime::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_Conv_TextToString_ReturnValue) == 0x0000A8, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000C0, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000D0, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_GetStrLenEvtDebug_ReturnValue) == 0x0000E0, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_GetStrLenEvtDebug_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000E8, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_GetVoiceAutoTime_ReturnValue) == 0x0000F8, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_GetVoiceAutoTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugOutputTextTime, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000100, "Member 'BP_EventBase_C_DebugOutputTextTime::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.IsPauseMovieEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_EventBase_C_IsPauseMovieEvent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_IsPauseMovieEvent) == 0x000001, "Wrong alignment on BP_EventBase_C_IsPauseMovieEvent");
static_assert(sizeof(BP_EventBase_C_IsPauseMovieEvent) == 0x000001, "Wrong size on BP_EventBase_C_IsPauseMovieEvent");
static_assert(offsetof(BP_EventBase_C_IsPauseMovieEvent, ReturnValue) == 0x000000, "Member 'BP_EventBase_C_IsPauseMovieEvent::ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.IsPlayingMovieEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_EventBase_C_IsPlayingMovieEvent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_IsPlayingMovieEvent) == 0x000001, "Wrong alignment on BP_EventBase_C_IsPlayingMovieEvent");
static_assert(sizeof(BP_EventBase_C_IsPlayingMovieEvent) == 0x000001, "Wrong size on BP_EventBase_C_IsPlayingMovieEvent");
static_assert(offsetof(BP_EventBase_C_IsPlayingMovieEvent, ReturnValue) == 0x000000, "Member 'BP_EventBase_C_IsPlayingMovieEvent::ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.DebugPrintAperture
// 0x0070 (0x0070 - 0x0000)
struct BP_EventBase_C_DebugPrintAperture final
{
public:
	bool                                          CallFunc_IsDebugPrintAperture_NewParam;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C8B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_DebugPrintAperture) == 0x000008, "Wrong alignment on BP_EventBase_C_DebugPrintAperture");
static_assert(sizeof(BP_EventBase_C_DebugPrintAperture) == 0x000070, "Wrong size on BP_EventBase_C_DebugPrintAperture");
static_assert(offsetof(BP_EventBase_C_DebugPrintAperture, CallFunc_IsDebugPrintAperture_NewParam) == 0x000000, "Member 'BP_EventBase_C_DebugPrintAperture::CallFunc_IsDebugPrintAperture_NewParam' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintAperture, CallFunc_GetCineCameraComponent_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_DebugPrintAperture::CallFunc_GetCineCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintAperture, CallFunc_Conv_FloatToString_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_DebugPrintAperture::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintAperture, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000020, "Member 'BP_EventBase_C_DebugPrintAperture::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintAperture, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_DebugPrintAperture::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintAperture, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'BP_EventBase_C_DebugPrintAperture::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintAperture, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000050, "Member 'BP_EventBase_C_DebugPrintAperture::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintAperture, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000060, "Member 'BP_EventBase_C_DebugPrintAperture::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.InterpolationEvent
// 0x0004 (0x0004 - 0x0000)
struct BP_EventBase_C_InterpolationEvent final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_InterpolationEvent) == 0x000004, "Wrong alignment on BP_EventBase_C_InterpolationEvent");
static_assert(sizeof(BP_EventBase_C_InterpolationEvent) == 0x000004, "Wrong size on BP_EventBase_C_InterpolationEvent");
static_assert(offsetof(BP_EventBase_C_InterpolationEvent, Type) == 0x000000, "Member 'BP_EventBase_C_InterpolationEvent::Type' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ChangeMovieLanguage
// 0x0030 (0x0030 - 0x0000)
struct BP_EventBase_C_ChangeMovieLanguage final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetVoiceLanguage_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C8C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCurrentAssetGroupCulture_ReturnValue;  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsJpEdition_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_ChangeMovieLanguage) == 0x000008, "Wrong alignment on BP_EventBase_C_ChangeMovieLanguage");
static_assert(sizeof(BP_EventBase_C_ChangeMovieLanguage) == 0x000030, "Wrong size on BP_EventBase_C_ChangeMovieLanguage");
static_assert(offsetof(BP_EventBase_C_ChangeMovieLanguage, Culture) == 0x000000, "Member 'BP_EventBase_C_ChangeMovieLanguage::Culture' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMovieLanguage, CallFunc_GetVoiceLanguage_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_ChangeMovieLanguage::CallFunc_GetVoiceLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMovieLanguage, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_ChangeMovieLanguage::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMovieLanguage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_ChangeMovieLanguage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMovieLanguage, CallFunc_SetCurrentAssetGroupCulture_ReturnValue) == 0x000029, "Member 'BP_EventBase_C_ChangeMovieLanguage::CallFunc_SetCurrentAssetGroupCulture_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMovieLanguage, CallFunc_IsJpEdition_ReturnValue) == 0x00002A, "Member 'BP_EventBase_C_ChangeMovieLanguage::CallFunc_IsJpEdition_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ChangeMapPostProcessEx
// 0x00E0 (0x00E0 - 0x0000)
struct BP_EventBase_C_ChangeMapPostProcessEx final
{
public:
	class UMaterialInterface*                     Param_PostProcessMaterial;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           ParameterName;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<float>                                 Value;                                             // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<float>                                 LValue;                                            // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           LName;                                             // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C8D[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C8E[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C8F[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APostProcessVolume*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0090(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C90[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APostProcessVolume*                     CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C91[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     CallFunc_Array_Get_Item_2;                         // 0x00B8(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C92[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x00D0(0x0010)(NoDestructor)
};
static_assert(alignof(BP_EventBase_C_ChangeMapPostProcessEx) == 0x000008, "Wrong alignment on BP_EventBase_C_ChangeMapPostProcessEx");
static_assert(sizeof(BP_EventBase_C_ChangeMapPostProcessEx) == 0x0000E0, "Wrong size on BP_EventBase_C_ChangeMapPostProcessEx");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, Param_PostProcessMaterial) == 0x000000, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::Param_PostProcessMaterial' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, ParameterName) == 0x000008, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::ParameterName' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, Value) == 0x000018, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::Value' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, LValue) == 0x000028, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::LValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, LName) == 0x000038, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::LName' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, Temp_int_Array_Index_Variable_1) == 0x000054, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, Temp_int_Array_Index_Variable_2) == 0x000060, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, CallFunc_Array_Get_Item) == 0x000064, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000070, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, Temp_int_Loop_Counter_Variable_2) == 0x00007C, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, CallFunc_Add_IntInt_ReturnValue_2) == 0x000088, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, CallFunc_GetAllActorsOfClass_OutActors) == 0x000090, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B0, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, CallFunc_Array_Length_ReturnValue_2) == 0x0000B4, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, CallFunc_Array_Get_Item_2) == 0x0000B8, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000C8, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000C9, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcessEx, K2Node_MakeStruct_WeightedBlendable) == 0x0000D0, "Member 'BP_EventBase_C_ChangeMapPostProcessEx::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.RevertMapPostProcess
// 0x0088 (0x0088 - 0x0000)
struct BP_EventBase_C_RevertMapPostProcess final
{
public:
	class UMaterialInterface*                     LMaterial;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C93[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C94[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APostProcessVolume*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	class APostProcessVolume*                     CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C95[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     CallFunc_Array_Get_Item_1;                         // 0x0048(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C96[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C97[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0070(0x0010)(NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_RevertMapPostProcess) == 0x000008, "Wrong alignment on BP_EventBase_C_RevertMapPostProcess");
static_assert(sizeof(BP_EventBase_C_RevertMapPostProcess) == 0x000088, "Wrong size on BP_EventBase_C_RevertMapPostProcess");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, LMaterial) == 0x000000, "Member 'BP_EventBase_C_RevertMapPostProcess::LMaterial' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EventBase_C_RevertMapPostProcess::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EventBase_C_RevertMapPostProcess::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EventBase_C_RevertMapPostProcess::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_EventBase_C_RevertMapPostProcess::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_EventBase_C_RevertMapPostProcess::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_EventBase_C_RevertMapPostProcess::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_EventBase_C_RevertMapPostProcess::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'BP_EventBase_C_RevertMapPostProcess::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_EventBase_C_RevertMapPostProcess::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_EventBase_C_RevertMapPostProcess::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_EventBase_C_RevertMapPostProcess::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BP_EventBase_C_RevertMapPostProcess::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_EventBase_C_RevertMapPostProcess::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_EventBase_C_RevertMapPostProcess::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000060, "Member 'BP_EventBase_C_RevertMapPostProcess::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_EventBase_C_RevertMapPostProcess::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, CallFunc_Array_Find_ReturnValue) == 0x00006C, "Member 'BP_EventBase_C_RevertMapPostProcess::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, K2Node_MakeStruct_WeightedBlendable) == 0x000070, "Member 'BP_EventBase_C_RevertMapPostProcess::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_EventBase_C_RevertMapPostProcess::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000081, "Member 'BP_EventBase_C_RevertMapPostProcess::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_RevertMapPostProcess, K2Node_SwitchInteger_CmpSuccess) == 0x000082, "Member 'BP_EventBase_C_RevertMapPostProcess::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ChangeMapPostProcess
// 0x0098 (0x0098 - 0x0000)
struct BP_EventBase_C_ChangeMapPostProcess final
{
public:
	int32                                         Daath;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DownIntensity;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TopIntensity;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C98[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     LMaterial;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C99[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C9A[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APostProcessVolume*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	class APostProcessVolume*                     CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C9B[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C9C[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C9D[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     CallFunc_Array_Get_Item_1;                         // 0x0070(0x0010)(NoDestructor)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0080(0x0010)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_ChangeMapPostProcess) == 0x000008, "Wrong alignment on BP_EventBase_C_ChangeMapPostProcess");
static_assert(sizeof(BP_EventBase_C_ChangeMapPostProcess) == 0x000098, "Wrong size on BP_EventBase_C_ChangeMapPostProcess");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, Daath) == 0x000000, "Member 'BP_EventBase_C_ChangeMapPostProcess::Daath' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, DownIntensity) == 0x000004, "Member 'BP_EventBase_C_ChangeMapPostProcess::DownIntensity' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, TopIntensity) == 0x000008, "Member 'BP_EventBase_C_ChangeMapPostProcess::TopIntensity' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, LMaterial) == 0x000010, "Member 'BP_EventBase_C_ChangeMapPostProcess::LMaterial' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'BP_EventBase_C_ChangeMapPostProcess::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_EventBase_C_ChangeMapPostProcess::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_ChangeMapPostProcess::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_EventBase_C_ChangeMapPostProcess::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_ChangeMapPostProcess::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'BP_EventBase_C_ChangeMapPostProcess::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_ChangeMapPostProcess::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_EventBase_C_ChangeMapPostProcess::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'BP_EventBase_C_ChangeMapPostProcess::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'BP_EventBase_C_ChangeMapPostProcess::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_EventBase_C_ChangeMapPostProcess::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_EventBase_C_ChangeMapPostProcess::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_EventBase_C_ChangeMapPostProcess::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_EventBase_C_ChangeMapPostProcess::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, CallFunc_Less_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_EventBase_C_ChangeMapPostProcess::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, Temp_int_Array_Index_Variable_1) == 0x000068, "Member 'BP_EventBase_C_ChangeMapPostProcess::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_EventBase_C_ChangeMapPostProcess::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, K2Node_MakeStruct_WeightedBlendable) == 0x000080, "Member 'BP_EventBase_C_ChangeMapPostProcess::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMapPostProcess, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000090, "Member 'BP_EventBase_C_ChangeMapPostProcess::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetMotionBlur
// 0x0001 (0x0001 - 0x0000)
struct BP_EventBase_C_SetMotionBlur final
{
public:
	bool                                          Switch;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_SetMotionBlur) == 0x000001, "Wrong alignment on BP_EventBase_C_SetMotionBlur");
static_assert(sizeof(BP_EventBase_C_SetMotionBlur) == 0x000001, "Wrong size on BP_EventBase_C_SetMotionBlur");
static_assert(offsetof(BP_EventBase_C_SetMotionBlur, Switch) == 0x000000, "Member 'BP_EventBase_C_SetMotionBlur::Switch' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.CheckPauseEvent
// 0x0002 (0x0002 - 0x0000)
struct BP_EventBase_C_CheckPauseEvent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_CheckPauseEvent) == 0x000001, "Wrong alignment on BP_EventBase_C_CheckPauseEvent");
static_assert(sizeof(BP_EventBase_C_CheckPauseEvent) == 0x000002, "Wrong size on BP_EventBase_C_CheckPauseEvent");
static_assert(offsetof(BP_EventBase_C_CheckPauseEvent, ReturnValue) == 0x000000, "Member 'BP_EventBase_C_CheckPauseEvent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_CheckPauseEvent, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_EventBase_C_CheckPauseEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetFontAlpha
// 0x0004 (0x0004 - 0x0000)
struct BP_EventBase_C_SetFontAlpha final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_SetFontAlpha) == 0x000004, "Wrong alignment on BP_EventBase_C_SetFontAlpha");
static_assert(sizeof(BP_EventBase_C_SetFontAlpha) == 0x000004, "Wrong size on BP_EventBase_C_SetFontAlpha");
static_assert(offsetof(BP_EventBase_C_SetFontAlpha, Alpha) == 0x000000, "Member 'BP_EventBase_C_SetFontAlpha::Alpha' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.FadeOutBattle
// 0x0040 (0x0040 - 0x0000)
struct BP_EventBase_C_FadeOutBattle final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EncountSceneCtrl_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_FadeOutBattle) == 0x000010, "Wrong alignment on BP_EventBase_C_FadeOutBattle");
static_assert(sizeof(BP_EventBase_C_FadeOutBattle) == 0x000040, "Wrong size on BP_EventBase_C_FadeOutBattle");
static_assert(offsetof(BP_EventBase_C_FadeOutBattle, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_EventBase_C_FadeOutBattle::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_FadeOutBattle, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_FadeOutBattle::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_FadeOutBattle, CallFunc_FinishSpawningActor_ReturnValue) == 0x000038, "Member 'BP_EventBase_C_FadeOutBattle::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ChangeCueVolumeEase
// 0x0040 (0x0040 - 0x0000)
struct BP_EventBase_C_ChangeCueVolumeEase final
{
public:
	EOptionVolumeCategory                         Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C9E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Volume;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C9F[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChangeFadeVolume                      K2Node_MakeStruct_ChangeFadeVolume;                // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FChangeFadeVolume                      CallFunc_Array_Get_Item;                           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CA0[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_ChangeCueVolumeEase) == 0x000004, "Wrong alignment on BP_EventBase_C_ChangeCueVolumeEase");
static_assert(sizeof(BP_EventBase_C_ChangeCueVolumeEase) == 0x000040, "Wrong size on BP_EventBase_C_ChangeCueVolumeEase");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeEase, Category) == 0x000000, "Member 'BP_EventBase_C_ChangeCueVolumeEase::Category' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeEase, Volume) == 0x000004, "Member 'BP_EventBase_C_ChangeCueVolumeEase::Volume' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeEase, Time) == 0x000008, "Member 'BP_EventBase_C_ChangeCueVolumeEase::Time' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeEase, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_EventBase_C_ChangeCueVolumeEase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeEase, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_ChangeCueVolumeEase::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeEase, K2Node_MakeStruct_ChangeFadeVolume) == 0x000014, "Member 'BP_EventBase_C_ChangeCueVolumeEase::K2Node_MakeStruct_ChangeFadeVolume' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeEase, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_ChangeCueVolumeEase::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeEase, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_EventBase_C_ChangeCueVolumeEase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeEase, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_ChangeCueVolumeEase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeEase, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_EventBase_C_ChangeCueVolumeEase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeEase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'BP_EventBase_C_ChangeCueVolumeEase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeEase, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BP_EventBase_C_ChangeCueVolumeEase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeEase, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EventBase_C_ChangeCueVolumeEase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.CheckMovieText
// 0x0001 (0x0001 - 0x0000)
struct BP_EventBase_C_CheckMovieText final
{
public:
	bool                                          CallFunc_IsMessageCompleted_IsComplet;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_CheckMovieText) == 0x000001, "Wrong alignment on BP_EventBase_C_CheckMovieText");
static_assert(sizeof(BP_EventBase_C_CheckMovieText) == 0x000001, "Wrong size on BP_EventBase_C_CheckMovieText");
static_assert(offsetof(BP_EventBase_C_CheckMovieText, CallFunc_IsMessageCompleted_IsComplet) == 0x000000, "Member 'BP_EventBase_C_CheckMovieText::CallFunc_IsMessageCompleted_IsComplet' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.MovieText
// 0x0008 (0x0008 - 0x0000)
struct BP_EventBase_C_MovieText final
{
public:
	int32                                         MessageID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTextFixTime_FixTime;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_MovieText) == 0x000004, "Wrong alignment on BP_EventBase_C_MovieText");
static_assert(sizeof(BP_EventBase_C_MovieText) == 0x000008, "Wrong size on BP_EventBase_C_MovieText");
static_assert(offsetof(BP_EventBase_C_MovieText, MessageID) == 0x000000, "Member 'BP_EventBase_C_MovieText::MessageID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MovieText, CallFunc_GetTextFixTime_FixTime) == 0x000004, "Member 'BP_EventBase_C_MovieText::CallFunc_GetTextFixTime_FixTime' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.GetMessageWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_EventBase_C_GetMessageWidget final
{
public:
	class UWB_Message_C*                          Param_MessageWidget;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_GetMessageWidget) == 0x000008, "Wrong alignment on BP_EventBase_C_GetMessageWidget");
static_assert(sizeof(BP_EventBase_C_GetMessageWidget) == 0x000008, "Wrong size on BP_EventBase_C_GetMessageWidget");
static_assert(offsetof(BP_EventBase_C_GetMessageWidget, Param_MessageWidget) == 0x000000, "Member 'BP_EventBase_C_GetMessageWidget::Param_MessageWidget' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.InitPlayerPosition
// 0x0090 (0x0090 - 0x0000)
struct BP_EventBase_C_InitPlayerPosition final
{
public:
	class AActor*                                 PositionActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapUICtrl_MapUICtrl;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_MapUICtrl_C>      K2Node_DynamicCast_AsBPI_Map_UICtrl;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CA1[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerBase_C*                          K2Node_DynamicCast_AsPlayer_Base;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_InitPlayerPosition) == 0x000010, "Wrong alignment on BP_EventBase_C_InitPlayerPosition");
static_assert(sizeof(BP_EventBase_C_InitPlayerPosition) == 0x000090, "Wrong size on BP_EventBase_C_InitPlayerPosition");
static_assert(offsetof(BP_EventBase_C_InitPlayerPosition, PositionActor) == 0x000000, "Member 'BP_EventBase_C_InitPlayerPosition::PositionActor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitPlayerPosition, CallFunc_GetMapUICtrl_MapUICtrl) == 0x000008, "Member 'BP_EventBase_C_InitPlayerPosition::CallFunc_GetMapUICtrl_MapUICtrl' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitPlayerPosition, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_InitPlayerPosition::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitPlayerPosition, K2Node_DynamicCast_AsBPI_Map_UICtrl) == 0x000040, "Member 'BP_EventBase_C_InitPlayerPosition::K2Node_DynamicCast_AsBPI_Map_UICtrl' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitPlayerPosition, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_EventBase_C_InitPlayerPosition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitPlayerPosition, CallFunc_BreakTransform_Location) == 0x000054, "Member 'BP_EventBase_C_InitPlayerPosition::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitPlayerPosition, CallFunc_BreakTransform_Rotation) == 0x000060, "Member 'BP_EventBase_C_InitPlayerPosition::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitPlayerPosition, CallFunc_BreakTransform_Scale) == 0x00006C, "Member 'BP_EventBase_C_InitPlayerPosition::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitPlayerPosition, CallFunc_GetPlayerPawn_ReturnValue) == 0x000078, "Member 'BP_EventBase_C_InitPlayerPosition::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitPlayerPosition, K2Node_DynamicCast_AsPlayer_Base) == 0x000080, "Member 'BP_EventBase_C_InitPlayerPosition::K2Node_DynamicCast_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitPlayerPosition, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_EventBase_C_InitPlayerPosition::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetSearchAssetPath
// 0x0010 (0x0010 - 0x0000)
struct BP_EventBase_C_SetSearchAssetPath final
{
public:
	class FName                                   Param_VoiceAssetPath;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Param_LipAssetPath;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_SetSearchAssetPath) == 0x000004, "Wrong alignment on BP_EventBase_C_SetSearchAssetPath");
static_assert(sizeof(BP_EventBase_C_SetSearchAssetPath) == 0x000010, "Wrong size on BP_EventBase_C_SetSearchAssetPath");
static_assert(offsetof(BP_EventBase_C_SetSearchAssetPath, Param_VoiceAssetPath) == 0x000000, "Member 'BP_EventBase_C_SetSearchAssetPath::Param_VoiceAssetPath' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetSearchAssetPath, Param_LipAssetPath) == 0x000008, "Member 'BP_EventBase_C_SetSearchAssetPath::Param_LipAssetPath' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.StartChooseSE
// 0x0010 (0x0010 - 0x0000)
struct BP_EventBase_C_StartChooseSE final
{
public:
	class USoundAtomCue*                          Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_StartChooseSE) == 0x000008, "Wrong alignment on BP_EventBase_C_StartChooseSE");
static_assert(sizeof(BP_EventBase_C_StartChooseSE) == 0x000010, "Wrong size on BP_EventBase_C_StartChooseSE");
static_assert(offsetof(BP_EventBase_C_StartChooseSE, Sound) == 0x000000, "Member 'BP_EventBase_C_StartChooseSE::Sound' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StartChooseSE, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_StartChooseSE::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.StopCueENV
// 0x0010 (0x0010 - 0x0000)
struct BP_EventBase_C_StopCueENV final
{
public:
	float                                         FadeTime;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoBGM;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CA2[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_StopCueENV) == 0x000008, "Wrong alignment on BP_EventBase_C_StopCueENV");
static_assert(sizeof(BP_EventBase_C_StopCueENV) == 0x000010, "Wrong size on BP_EventBase_C_StopCueENV");
static_assert(offsetof(BP_EventBase_C_StopCueENV, FadeTime) == 0x000000, "Member 'BP_EventBase_C_StopCueENV::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopCueENV, NoBGM) == 0x000004, "Member 'BP_EventBase_C_StopCueENV::NoBGM' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopCueENV, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_StopCueENV::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlayCueENV
// 0x0030 (0x0030 - 0x0000)
struct BP_EventBase_C_PlayCueENV final
{
public:
	class FString                                 SoundID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Volume;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CA3[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetSoundData_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_PlayCueENV) == 0x000008, "Wrong alignment on BP_EventBase_C_PlayCueENV");
static_assert(sizeof(BP_EventBase_C_PlayCueENV) == 0x000030, "Wrong size on BP_EventBase_C_PlayCueENV");
static_assert(offsetof(BP_EventBase_C_PlayCueENV, SoundID) == 0x000000, "Member 'BP_EventBase_C_PlayCueENV::SoundID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueENV, Volume) == 0x000010, "Member 'BP_EventBase_C_PlayCueENV::Volume' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueENV, Pitch) == 0x000014, "Member 'BP_EventBase_C_PlayCueENV::Pitch' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueENV, Time) == 0x000018, "Member 'BP_EventBase_C_PlayCueENV::Time' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueENV, CallFunc_Get_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_PlayCueENV::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueENV, CallFunc_GetSoundData_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_PlayCueENV::CallFunc_GetSoundData_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.DrawTemporaryText
// 0x0030 (0x0030 - 0x0000)
struct BP_EventBase_C_DrawTemporaryText final
{
public:
	int32                                         MessageID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CA4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0028)()
};
static_assert(alignof(BP_EventBase_C_DrawTemporaryText) == 0x000008, "Wrong alignment on BP_EventBase_C_DrawTemporaryText");
static_assert(sizeof(BP_EventBase_C_DrawTemporaryText) == 0x000030, "Wrong size on BP_EventBase_C_DrawTemporaryText");
static_assert(offsetof(BP_EventBase_C_DrawTemporaryText, MessageID) == 0x000000, "Member 'BP_EventBase_C_DrawTemporaryText::MessageID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawTemporaryText, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'BP_EventBase_C_DrawTemporaryText::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.VisibleLevelFinal
// 0x0110 (0x0110 - 0x0000)
struct BP_EventBase_C_VisibleLevelFinal final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CA5[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_EventMissionBaseCommon_C*>   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	TArray<class ABP_EventScriptBase_C*>          CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0030(0x0010)(ReferenceParm)
	class ABP_EventMissionBaseCommon_C*           CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventScriptBase_C*                  CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CA6[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CA7[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DevilPerformance_C> K2Node_DynamicCast_AsBPI_Devil_Performance;        // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CA8[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BI_GetNpcCollisionActor_NpcCollisionActor; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CA9[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CAA[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CAB[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CAC[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_DevilPerformance_C> K2Node_DynamicCast_AsBPI_Devil_Performance_1;      // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CAD[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BI_GetNpcCollisionActor_NpcCollisionActor_1; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CAE[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CAF[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventVisibleLevel                     CallFunc_Array_Get_Item_4;                         // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CB0[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_VisibleLevelFinal) == 0x000008, "Wrong alignment on BP_EventBase_C_VisibleLevelFinal");
static_assert(sizeof(BP_EventBase_C_VisibleLevelFinal) == 0x000110, "Wrong size on BP_EventBase_C_VisibleLevelFinal");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EventBase_C_VisibleLevelFinal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EventBase_C_VisibleLevelFinal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'BP_EventBase_C_VisibleLevelFinal::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_EventBase_C_VisibleLevelFinal::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, Temp_int_Array_Index_Variable_2) == 0x000018, "Member 'BP_EventBase_C_VisibleLevelFinal::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000030, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Array_Get_Item_2) == 0x000058, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, K2Node_DynamicCast_AsBPI_Devil_Performance) == 0x000068, "Member 'BP_EventBase_C_VisibleLevelFinal::K2Node_DynamicCast_AsBPI_Devil_Performance' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_EventBase_C_VisibleLevelFinal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Less_IntInt_ReturnValue) == 0x000079, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_BI_GetNpcCollisionActor_NpcCollisionActor) == 0x000080, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_BI_GetNpcCollisionActor_NpcCollisionActor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_IsValid_ReturnValue_1) == 0x000089, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Array_Length_ReturnValue_2) == 0x00008C, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Array_Length_ReturnValue_3) == 0x000090, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Less_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, Temp_int_Loop_Counter_Variable_2) == 0x000098, "Member 'BP_EventBase_C_VisibleLevelFinal::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Less_IntInt_ReturnValue_2) == 0x00009C, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A0, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, Temp_int_Array_Index_Variable_3) == 0x0000A4, "Member 'BP_EventBase_C_VisibleLevelFinal::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Array_Get_Item_3) == 0x0000B0, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, K2Node_DynamicCast_AsBPI_Devil_Performance_1) == 0x0000B8, "Member 'BP_EventBase_C_VisibleLevelFinal::K2Node_DynamicCast_AsBPI_Devil_Performance_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'BP_EventBase_C_VisibleLevelFinal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_IsValid_ReturnValue_2) == 0x0000C9, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_BI_GetNpcCollisionActor_NpcCollisionActor_1) == 0x0000D0, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_BI_GetNpcCollisionActor_NpcCollisionActor_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_IsValid_ReturnValue_3) == 0x0000D8, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, Temp_int_Loop_Counter_Variable_3) == 0x0000DC, "Member 'BP_EventBase_C_VisibleLevelFinal::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, Temp_int_Loop_Counter_Variable_4) == 0x0000E0, "Member 'BP_EventBase_C_VisibleLevelFinal::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000E4, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000E8, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000EC, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, Temp_int_Array_Index_Variable_4) == 0x0000F0, "Member 'BP_EventBase_C_VisibleLevelFinal::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Array_Length_ReturnValue_4) == 0x0000F4, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Array_Get_Item_4) == 0x0000F8, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_Less_IntInt_ReturnValue_4) == 0x000104, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelFinal, CallFunc_GetStreamingLevel_ReturnValue) == 0x000108, "Member 'BP_EventBase_C_VisibleLevelFinal::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.VisibleLevelInit
// 0x0038 (0x0038 - 0x0000)
struct BP_EventBase_C_VisibleLevelInit final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventVisibleLevel                     CallFunc_Array_Get_Item;                           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CB1[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetStreamingLevel_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventVisibleLevel                     K2Node_MakeStruct_EventVisibleLevel;               // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_VisibleLevelInit) == 0x000008, "Wrong alignment on BP_EventBase_C_VisibleLevelInit");
static_assert(sizeof(BP_EventBase_C_VisibleLevelInit) == 0x000038, "Wrong size on BP_EventBase_C_VisibleLevelInit");
static_assert(offsetof(BP_EventBase_C_VisibleLevelInit, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EventBase_C_VisibleLevelInit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelInit, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EventBase_C_VisibleLevelInit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelInit, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_VisibleLevelInit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelInit, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_EventBase_C_VisibleLevelInit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelInit, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_EventBase_C_VisibleLevelInit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelInit, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EventBase_C_VisibleLevelInit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelInit, CallFunc_Not_PreBool_ReturnValue) == 0x00001D, "Member 'BP_EventBase_C_VisibleLevelInit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelInit, CallFunc_GetStreamingLevel_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_VisibleLevelInit::CallFunc_GetStreamingLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelInit, K2Node_MakeStruct_EventVisibleLevel) == 0x000028, "Member 'BP_EventBase_C_VisibleLevelInit::K2Node_MakeStruct_EventVisibleLevel' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelInit, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_EventBase_C_VisibleLevelInit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_VisibleLevelInit, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000035, "Member 'BP_EventBase_C_VisibleLevelInit::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.AddVisibleLevel
// 0x001C (0x001C - 0x0000)
struct BP_EventBase_C_AddVisibleLevel final
{
public:
	class FName                                   LevelName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CB2[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventVisibleLevel                     K2Node_MakeStruct_EventVisibleLevel;               // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_AddVisibleLevel) == 0x000004, "Wrong alignment on BP_EventBase_C_AddVisibleLevel");
static_assert(sizeof(BP_EventBase_C_AddVisibleLevel) == 0x00001C, "Wrong size on BP_EventBase_C_AddVisibleLevel");
static_assert(offsetof(BP_EventBase_C_AddVisibleLevel, LevelName) == 0x000000, "Member 'BP_EventBase_C_AddVisibleLevel::LevelName' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AddVisibleLevel, Visible) == 0x000008, "Member 'BP_EventBase_C_AddVisibleLevel::Visible' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AddVisibleLevel, K2Node_MakeStruct_EventVisibleLevel) == 0x00000C, "Member 'BP_EventBase_C_AddVisibleLevel::K2Node_MakeStruct_EventVisibleLevel' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AddVisibleLevel, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_AddVisibleLevel::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ProcSelectionEx
// 0x002C (0x002C - 0x0000)
struct BP_EventBase_C_ProcSelectionEx final
{
public:
	bool                                          SoundFlag;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CB3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Return;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enter;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TmpSoundFlag;                                      // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ACTION_MAPPING_TYPE                         TmpDown;                                           // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ACTION_MAPPING_TYPE                         TmpUp;                                             // 0x000B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TmpVal;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_2;               // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_ProcSelectionEx) == 0x000004, "Wrong alignment on BP_EventBase_C_ProcSelectionEx");
static_assert(sizeof(BP_EventBase_C_ProcSelectionEx) == 0x00002C, "Wrong size on BP_EventBase_C_ProcSelectionEx");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, SoundFlag) == 0x000000, "Member 'BP_EventBase_C_ProcSelectionEx::SoundFlag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, Return) == 0x000004, "Member 'BP_EventBase_C_ProcSelectionEx::Return' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, Enter) == 0x000008, "Member 'BP_EventBase_C_ProcSelectionEx::Enter' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, TmpSoundFlag) == 0x000009, "Member 'BP_EventBase_C_ProcSelectionEx::TmpSoundFlag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, TmpDown) == 0x00000A, "Member 'BP_EventBase_C_ProcSelectionEx::TmpDown' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, TmpUp) == 0x00000B, "Member 'BP_EventBase_C_ProcSelectionEx::TmpUp' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, TmpVal) == 0x00000C, "Member 'BP_EventBase_C_ProcSelectionEx::TmpVal' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, Temp_int_Variable) == 0x000010, "Member 'BP_EventBase_C_ProcSelectionEx::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, Temp_int_Variable_1) == 0x000014, "Member 'BP_EventBase_C_ProcSelectionEx::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_ProcSelectionEx::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'BP_EventBase_C_ProcSelectionEx::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00001A, "Member 'BP_EventBase_C_ProcSelectionEx::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00001B, "Member 'BP_EventBase_C_ProcSelectionEx::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, CallFunc_IsActionPadCheck_Success) == 0x00001C, "Member 'BP_EventBase_C_ProcSelectionEx::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, CallFunc_IsActionPadCheck_Success_1) == 0x00001D, "Member 'BP_EventBase_C_ProcSelectionEx::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, CallFunc_IsActionPadCheck_Success_2) == 0x00001E, "Member 'BP_EventBase_C_ProcSelectionEx::CallFunc_IsActionPadCheck_Success_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, CallFunc_Greater_IntInt_ReturnValue) == 0x00001F, "Member 'BP_EventBase_C_ProcSelectionEx::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_ProcSelectionEx::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_EventBase_C_ProcSelectionEx::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionEx, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BP_EventBase_C_ProcSelectionEx::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.InitSelectionEx
// 0x0008 (0x0008 - 0x0000)
struct BP_EventBase_C_InitSelectionEx final
{
public:
	E_EVENT_SELECTION_EX_TYPE                     SelectType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CB4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SelectMax;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_InitSelectionEx) == 0x000004, "Wrong alignment on BP_EventBase_C_InitSelectionEx");
static_assert(sizeof(BP_EventBase_C_InitSelectionEx) == 0x000008, "Wrong size on BP_EventBase_C_InitSelectionEx");
static_assert(offsetof(BP_EventBase_C_InitSelectionEx, SelectType) == 0x000000, "Member 'BP_EventBase_C_InitSelectionEx::SelectType' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelectionEx, SelectMax) == 0x000004, "Member 'BP_EventBase_C_InitSelectionEx::SelectMax' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetSkipEnable
// 0x0002 (0x0002 - 0x0000)
struct BP_EventBase_C_SetSkipEnable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_SetSkipEnable) == 0x000001, "Wrong alignment on BP_EventBase_C_SetSkipEnable");
static_assert(sizeof(BP_EventBase_C_SetSkipEnable) == 0x000002, "Wrong size on BP_EventBase_C_SetSkipEnable");
static_assert(offsetof(BP_EventBase_C_SetSkipEnable, Enable) == 0x000000, "Member 'BP_EventBase_C_SetSkipEnable::Enable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetSkipEnable, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_EventBase_C_SetSkipEnable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.Set Event Pause
// 0x00B8 (0x00B8 - 0x0000)
struct BP_EventBase_C_Set_Event_Pause final
{
public:
	bool                                          Puase;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Stop;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_Stop;                                           // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CB5[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventStaff_C>     K2Node_DynamicCast_AsBPI_Event_Staff;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CB6[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventStaff_C>     K2Node_DynamicCast_AsBPI_Event_Staff_1;            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CB7[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAtomSound*                             CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CB8[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CB9[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CBA[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_Array_Get_Item_2;                         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventVoice_C*                       CallFunc_Array_Get_Item_3;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CBB[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_Set_Event_Pause) == 0x000008, "Wrong alignment on BP_EventBase_C_Set_Event_Pause");
static_assert(sizeof(BP_EventBase_C_Set_Event_Pause) == 0x0000B8, "Wrong size on BP_EventBase_C_Set_Event_Pause");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, Puase) == 0x000000, "Member 'BP_EventBase_C_Set_Event_Pause::Puase' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, Stop) == 0x000001, "Member 'BP_EventBase_C_Set_Event_Pause::Stop' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, Lo_Stop) == 0x000002, "Member 'BP_EventBase_C_Set_Event_Pause::Lo_Stop' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EventBase_C_Set_Event_Pause::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'BP_EventBase_C_Set_Event_Pause::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_EventBase_C_Set_Event_Pause::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, Temp_int_Loop_Counter_Variable_2) == 0x000018, "Member 'BP_EventBase_C_Set_Event_Pause::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_Add_IntInt_ReturnValue_2) == 0x00001C, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_EventBase_C_Set_Event_Pause::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, Temp_int_Loop_Counter_Variable_3) == 0x000024, "Member 'BP_EventBase_C_Set_Event_Pause::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_Add_IntInt_ReturnValue_3) == 0x000028, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, Temp_int_Array_Index_Variable_2) == 0x00002C, "Member 'BP_EventBase_C_Set_Event_Pause::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, K2Node_DynamicCast_AsBPI_Event_Staff) == 0x000030, "Member 'BP_EventBase_C_Set_Event_Pause::K2Node_DynamicCast_AsBPI_Event_Staff' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EventBase_C_Set_Event_Pause::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, K2Node_DynamicCast_AsBPI_Event_Staff_1) == 0x000048, "Member 'BP_EventBase_C_Set_Event_Pause::K2Node_DynamicCast_AsBPI_Event_Staff_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_EventBase_C_Set_Event_Pause::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, Temp_int_Array_Index_Variable_3) == 0x00005C, "Member 'BP_EventBase_C_Set_Event_Pause::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_IsPlaying_ReturnValue) == 0x000069, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_IsValid_ReturnValue_2) == 0x000071, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_Less_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_Array_Get_Item_2) == 0x000088, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_Array_Get_Item_3) == 0x000090, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_Array_Length_ReturnValue_2) == 0x000098, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_Array_Length_ReturnValue_3) == 0x00009C, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000A0, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000A1, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_Get_ReturnValue) == 0x0000A8, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Set_Event_Pause, CallFunc_IsValid_ReturnValue_3) == 0x0000B0, "Member 'BP_EventBase_C_Set_Event_Pause::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.GetTextFixTime
// 0x0070 (0x0070 - 0x0000)
struct BP_EventBase_C_GetTextFixTime final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FixTime;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnTime;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CBC[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventVoiceFixData                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0028)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CBD[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_GetTextFixTime) == 0x000008, "Wrong alignment on BP_EventBase_C_GetTextFixTime");
static_assert(sizeof(BP_EventBase_C_GetTextFixTime) == 0x000070, "Wrong size on BP_EventBase_C_GetTextFixTime");
static_assert(offsetof(BP_EventBase_C_GetTextFixTime, Param_Index) == 0x000000, "Member 'BP_EventBase_C_GetTextFixTime::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetTextFixTime, FixTime) == 0x000004, "Member 'BP_EventBase_C_GetTextFixTime::FixTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetTextFixTime, ReturnTime) == 0x000008, "Member 'BP_EventBase_C_GetTextFixTime::ReturnTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetTextFixTime, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_EventBase_C_GetTextFixTime::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetTextFixTime, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_EventBase_C_GetTextFixTime::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetTextFixTime, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_EventBase_C_GetTextFixTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetTextFixTime, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000018, "Member 'BP_EventBase_C_GetTextFixTime::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetTextFixTime, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_GetTextFixTime::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetTextFixTime, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_EventBase_C_GetTextFixTime::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetTextFixTime, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_EventBase_C_GetTextFixTime::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetTextFixTime, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'BP_EventBase_C_GetTextFixTime::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetTextFixTime, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000060, "Member 'BP_EventBase_C_GetTextFixTime::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetTextFixTime, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000061, "Member 'BP_EventBase_C_GetTextFixTime::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetTextFixTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_EventBase_C_GetTextFixTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetTextFixTime, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_EventBase_C_GetTextFixTime::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.DebugTextTime
// 0x00F8 (0x00F8 - 0x0000)
struct BP_EventBase_C_DebugTextTime final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CBE[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CBF[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_EventTest_C*                        CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0020(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDebugEventTextTiming                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CC0[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CC1[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0070(0x0018)()
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CC2[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CC3[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CC4[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00D8(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_DebugTextTime) == 0x000008, "Wrong alignment on BP_EventBase_C_DebugTextTime");
static_assert(sizeof(BP_EventBase_C_DebugTextTime) == 0x0000F8, "Wrong size on BP_EventBase_C_DebugTextTime");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EventBase_C_DebugTextTime::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EventBase_C_DebugTextTime::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_Percent_IntInt_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000020, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000050, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_Conv_StringToText_ReturnValue) == 0x000070, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00008C, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000090, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000098, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_FTrunc_ReturnValue) == 0x00009C, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_BooleanAND_ReturnValue) == 0x0000A0, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_Conv_IntToString_ReturnValue) == 0x0000A8, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B8, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000C8, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000D8, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextTime, CallFunc_IsValid_ReturnValue_1) == 0x0000F1, "Member 'BP_EventBase_C_DebugTextTime::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.DebugSlomoFunc
// 0x0002 (0x0002 - 0x0000)
struct BP_EventBase_C_DebugSlomoFunc final
{
public:
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_DebugSlomoFunc) == 0x000001, "Wrong alignment on BP_EventBase_C_DebugSlomoFunc");
static_assert(sizeof(BP_EventBase_C_DebugSlomoFunc) == 0x000002, "Wrong size on BP_EventBase_C_DebugSlomoFunc");
static_assert(offsetof(BP_EventBase_C_DebugSlomoFunc, CallFunc_IsActionPadCheck_Success) == 0x000000, "Member 'BP_EventBase_C_DebugSlomoFunc::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugSlomoFunc, CallFunc_IsActionPadCheck_Success_1) == 0x000001, "Member 'BP_EventBase_C_DebugSlomoFunc::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetUniteDevils
// 0x001C (0x001C - 0x0000)
struct BP_EventBase_C_SetUniteDevils final
{
public:
	bool                                          Accident;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CC5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ResultDevil;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Onest;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Twond;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Threerd;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Fourth;                                            // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_SetUniteDevils) == 0x000004, "Wrong alignment on BP_EventBase_C_SetUniteDevils");
static_assert(sizeof(BP_EventBase_C_SetUniteDevils) == 0x00001C, "Wrong size on BP_EventBase_C_SetUniteDevils");
static_assert(offsetof(BP_EventBase_C_SetUniteDevils, Accident) == 0x000000, "Member 'BP_EventBase_C_SetUniteDevils::Accident' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetUniteDevils, ResultDevil) == 0x000004, "Member 'BP_EventBase_C_SetUniteDevils::ResultDevil' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetUniteDevils, Onest) == 0x000008, "Member 'BP_EventBase_C_SetUniteDevils::Onest' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetUniteDevils, Twond) == 0x00000C, "Member 'BP_EventBase_C_SetUniteDevils::Twond' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetUniteDevils, Threerd) == 0x000010, "Member 'BP_EventBase_C_SetUniteDevils::Threerd' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetUniteDevils, Fourth) == 0x000014, "Member 'BP_EventBase_C_SetUniteDevils::Fourth' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetUniteDevils, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_SetUniteDevils::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetUniteDevils, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000019, "Member 'BP_EventBase_C_SetUniteDevils::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ChangeMaterialCore
// 0x0090 (0x0090 - 0x0000)
struct BP_EventBase_C_ChangeMaterialCore final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DataTable;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseColor;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CC6[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CC7[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0030(0x0010)(ReferenceParm)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CC8[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventChangeMaterialTable              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CC9[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CCA[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_ChangeMaterialCore) == 0x000008, "Wrong alignment on BP_EventBase_C_ChangeMaterialCore");
static_assert(sizeof(BP_EventBase_C_ChangeMaterialCore) == 0x000090, "Wrong size on BP_EventBase_C_ChangeMaterialCore");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, Mesh) == 0x000000, "Member 'BP_EventBase_C_ChangeMaterialCore::Mesh' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, DataTable) == 0x000008, "Member 'BP_EventBase_C_ChangeMaterialCore::DataTable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, UseColor) == 0x000010, "Member 'BP_EventBase_C_ChangeMaterialCore::UseColor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, Color) == 0x000014, "Member 'BP_EventBase_C_ChangeMaterialCore::Color' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_EventBase_C_ChangeMaterialCore::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_ChangeMaterialCore::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, CallFunc_GetMaterials_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_ChangeMaterialCore::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_EventBase_C_ChangeMaterialCore::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_EventBase_C_ChangeMaterialCore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, CallFunc_GetObjectName_ReturnValue) == 0x000050, "Member 'BP_EventBase_C_ChangeMaterialCore::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, CallFunc_Conv_StringToName_ReturnValue) == 0x000060, "Member 'BP_EventBase_C_ChangeMaterialCore::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'BP_EventBase_C_ChangeMaterialCore::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000070, "Member 'BP_EventBase_C_ChangeMaterialCore::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_EventBase_C_ChangeMaterialCore::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_EventBase_C_ChangeMaterialCore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_EventBase_C_ChangeMaterialCore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000080, "Member 'BP_EventBase_C_ChangeMaterialCore::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterialCore, CallFunc_Array_Add_ReturnValue) == 0x000088, "Member 'BP_EventBase_C_ChangeMaterialCore::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.AttachMesh
// 0x00D8 (0x00D8 - 0x0000)
struct BP_EventBase_C_AttachMesh final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SrcMesh;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DestMesh;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DestBone;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         DestMeshComponent;                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         SrcMeshComponent;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0050(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CCB[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UMeshComponent*                         CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CCC[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CCD[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CCE[0x1];                                     // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CCF[0x1];                                     // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_AttachMesh) == 0x000008, "Wrong alignment on BP_EventBase_C_AttachMesh");
static_assert(sizeof(BP_EventBase_C_AttachMesh) == 0x0000D8, "Wrong size on BP_EventBase_C_AttachMesh");
static_assert(offsetof(BP_EventBase_C_AttachMesh, Tag) == 0x000000, "Member 'BP_EventBase_C_AttachMesh::Tag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, SrcMesh) == 0x000008, "Member 'BP_EventBase_C_AttachMesh::SrcMesh' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, DestMesh) == 0x000010, "Member 'BP_EventBase_C_AttachMesh::DestMesh' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, DestBone) == 0x000018, "Member 'BP_EventBase_C_AttachMesh::DestBone' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, DestMeshComponent) == 0x000020, "Member 'BP_EventBase_C_AttachMesh::DestMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, SrcMeshComponent) == 0x000028, "Member 'BP_EventBase_C_AttachMesh::SrcMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_Conv_NameToString_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_AttachMesh::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000040, "Member 'BP_EventBase_C_AttachMesh::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_GetAllActorsWithTag_OutActors) == 0x000050, "Member 'BP_EventBase_C_AttachMesh::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BP_EventBase_C_AttachMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_EventBase_C_AttachMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_EventBase_C_AttachMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_EventBase_C_AttachMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_EventBase_C_AttachMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'BP_EventBase_C_AttachMesh::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_EventBase_C_AttachMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000080, "Member 'BP_EventBase_C_AttachMesh::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'BP_EventBase_C_AttachMesh::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'BP_EventBase_C_AttachMesh::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_GetObjectName_ReturnValue) == 0x0000A0, "Member 'BP_EventBase_C_AttachMesh::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000B0, "Member 'BP_EventBase_C_AttachMesh::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_GetObjectName_ReturnValue_1) == 0x0000B8, "Member 'BP_EventBase_C_AttachMesh::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0000C8, "Member 'BP_EventBase_C_AttachMesh::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000C9, "Member 'BP_EventBase_C_AttachMesh::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_IsValid_ReturnValue) == 0x0000CA, "Member 'BP_EventBase_C_AttachMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, Temp_int_Loop_Counter_Variable_1) == 0x0000CC, "Member 'BP_EventBase_C_AttachMesh::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_IsValid_ReturnValue_1) == 0x0000D0, "Member 'BP_EventBase_C_AttachMesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_BooleanAND_ReturnValue) == 0x0000D1, "Member 'BP_EventBase_C_AttachMesh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D2, "Member 'BP_EventBase_C_AttachMesh::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AttachMesh, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BP_EventBase_C_AttachMesh::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetIKEnable
// 0x0050 (0x0050 - 0x0000)
struct BP_EventBase_C_SetIKEnable final
{
public:
	E_IK_TYPE_LIST                                Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Immediately;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CD0[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Tag;                                               // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CD1[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Accessor;      // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CD2[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IKEnableFlag_NoUse;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CD3[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_SetIKEnable) == 0x000008, "Wrong alignment on BP_EventBase_C_SetIKEnable");
static_assert(sizeof(BP_EventBase_C_SetIKEnable) == 0x000050, "Wrong size on BP_EventBase_C_SetIKEnable");
static_assert(offsetof(BP_EventBase_C_SetIKEnable, Type) == 0x000000, "Member 'BP_EventBase_C_SetIKEnable::Type' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetIKEnable, Enable) == 0x000001, "Member 'BP_EventBase_C_SetIKEnable::Enable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetIKEnable, Immediately) == 0x000002, "Member 'BP_EventBase_C_SetIKEnable::Immediately' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetIKEnable, Tag) == 0x000004, "Member 'BP_EventBase_C_SetIKEnable::Tag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetIKEnable, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_EventBase_C_SetIKEnable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetIKEnable, CallFunc_GetAllActorsWithTag_OutActors) == 0x000010, "Member 'BP_EventBase_C_SetIKEnable::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetIKEnable, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EventBase_C_SetIKEnable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetIKEnable, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_SetIKEnable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetIKEnable, K2Node_DynamicCast_AsBPI_Chara_Base_Accessor) == 0x000030, "Member 'BP_EventBase_C_SetIKEnable::K2Node_DynamicCast_AsBPI_Chara_Base_Accessor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetIKEnable, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EventBase_C_SetIKEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetIKEnable, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_EventBase_C_SetIKEnable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetIKEnable, CallFunc_BI_IKEnableFlag_NoUse) == 0x000048, "Member 'BP_EventBase_C_SetIKEnable::CallFunc_BI_IKEnableFlag_NoUse' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetIKEnable, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BP_EventBase_C_SetIKEnable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetIKEnable, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_EventBase_C_SetIKEnable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ChangeColorFade
// 0x0018 (0x0018 - 0x0000)
struct BP_EventBase_C_ChangeColorFade final
{
public:
	struct FLinearColor                           FinalColor;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Additive;                                          // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_ChangeColorFade) == 0x000004, "Wrong alignment on BP_EventBase_C_ChangeColorFade");
static_assert(sizeof(BP_EventBase_C_ChangeColorFade) == 0x000018, "Wrong size on BP_EventBase_C_ChangeColorFade");
static_assert(offsetof(BP_EventBase_C_ChangeColorFade, FinalColor) == 0x000000, "Member 'BP_EventBase_C_ChangeColorFade::FinalColor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeColorFade, Time) == 0x000010, "Member 'BP_EventBase_C_ChangeColorFade::Time' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeColorFade, Additive) == 0x000014, "Member 'BP_EventBase_C_ChangeColorFade::Additive' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetColorFade
// 0x0028 (0x0028 - 0x0000)
struct BP_EventBase_C_SetColorFade final
{
public:
	struct FLinearColor                           FirstColor;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FinalColor;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Additive;                                          // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_SetColorFade) == 0x000004, "Wrong alignment on BP_EventBase_C_SetColorFade");
static_assert(sizeof(BP_EventBase_C_SetColorFade) == 0x000028, "Wrong size on BP_EventBase_C_SetColorFade");
static_assert(offsetof(BP_EventBase_C_SetColorFade, FirstColor) == 0x000000, "Member 'BP_EventBase_C_SetColorFade::FirstColor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetColorFade, FinalColor) == 0x000010, "Member 'BP_EventBase_C_SetColorFade::FinalColor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetColorFade, Time) == 0x000020, "Member 'BP_EventBase_C_SetColorFade::Time' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetColorFade, Additive) == 0x000024, "Member 'BP_EventBase_C_SetColorFade::Additive' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ChangeCueVolumeTime
// 0x0044 (0x0044 - 0x0000)
struct BP_EventBase_C_ChangeCueVolumeTime final
{
public:
	EOptionVolumeCategory                         Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CD4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Volume;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CD5[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChangeFadeVolume                      K2Node_MakeStruct_ChangeFadeVolume;                // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FChangeFadeVolume                      CallFunc_Array_Get_Item;                           // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CD6[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_ChangeCueVolumeTime) == 0x000004, "Wrong alignment on BP_EventBase_C_ChangeCueVolumeTime");
static_assert(sizeof(BP_EventBase_C_ChangeCueVolumeTime) == 0x000044, "Wrong size on BP_EventBase_C_ChangeCueVolumeTime");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeTime, Category) == 0x000000, "Member 'BP_EventBase_C_ChangeCueVolumeTime::Category' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeTime, Volume) == 0x000004, "Member 'BP_EventBase_C_ChangeCueVolumeTime::Volume' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeTime, Time) == 0x000008, "Member 'BP_EventBase_C_ChangeCueVolumeTime::Time' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeTime, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_EventBase_C_ChangeCueVolumeTime::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeTime, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_ChangeCueVolumeTime::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeTime, K2Node_MakeStruct_ChangeFadeVolume) == 0x000014, "Member 'BP_EventBase_C_ChangeCueVolumeTime::K2Node_MakeStruct_ChangeFadeVolume' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeTime, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_ChangeCueVolumeTime::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeTime, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_EventBase_C_ChangeCueVolumeTime::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeTime, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventBase_C_ChangeCueVolumeTime::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeTime, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_EventBase_C_ChangeCueVolumeTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeTime, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'BP_EventBase_C_ChangeCueVolumeTime::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeTime, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_EventBase_C_ChangeCueVolumeTime::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolumeTime, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_EventBase_C_ChangeCueVolumeTime::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.CheckSkip
// 0x0002 (0x0002 - 0x0000)
struct BP_EventBase_C_CheckSkip final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_CheckSkip) == 0x000001, "Wrong alignment on BP_EventBase_C_CheckSkip");
static_assert(sizeof(BP_EventBase_C_CheckSkip) == 0x000002, "Wrong size on BP_EventBase_C_CheckSkip");
static_assert(offsetof(BP_EventBase_C_CheckSkip, Return) == 0x000000, "Member 'BP_EventBase_C_CheckSkip::Return' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_CheckSkip, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_EventBase_C_CheckSkip::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.EnterSkip
// 0x0002 (0x0002 - 0x0000)
struct BP_EventBase_C_EnterSkip final
{
public:
	bool                                          CallFunc_FadeIn_Black_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_EnterSkip) == 0x000001, "Wrong alignment on BP_EventBase_C_EnterSkip");
static_assert(sizeof(BP_EventBase_C_EnterSkip) == 0x000002, "Wrong size on BP_EventBase_C_EnterSkip");
static_assert(offsetof(BP_EventBase_C_EnterSkip, CallFunc_FadeIn_Black_ReturnValue) == 0x000000, "Member 'BP_EventBase_C_EnterSkip::CallFunc_FadeIn_Black_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_EnterSkip, K2Node_SwitchInteger_CmpSuccess) == 0x000001, "Member 'BP_EventBase_C_EnterSkip::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.StopDefaultBlink
// 0x0048 (0x0048 - 0x0000)
struct BP_EventBase_C_StopDefaultBlink final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0008(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Accessor;      // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CD7[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_StopDefaultBlink_NoUse;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CD8[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_StopDefaultBlink) == 0x000008, "Wrong alignment on BP_EventBase_C_StopDefaultBlink");
static_assert(sizeof(BP_EventBase_C_StopDefaultBlink) == 0x000048, "Wrong size on BP_EventBase_C_StopDefaultBlink");
static_assert(offsetof(BP_EventBase_C_StopDefaultBlink, Tag) == 0x000000, "Member 'BP_EventBase_C_StopDefaultBlink::Tag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopDefaultBlink, CallFunc_GetAllActorsWithTag_OutActors) == 0x000008, "Member 'BP_EventBase_C_StopDefaultBlink::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopDefaultBlink, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_EventBase_C_StopDefaultBlink::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopDefaultBlink, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_EventBase_C_StopDefaultBlink::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopDefaultBlink, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EventBase_C_StopDefaultBlink::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopDefaultBlink, K2Node_DynamicCast_AsBPI_Chara_Base_Accessor) == 0x000028, "Member 'BP_EventBase_C_StopDefaultBlink::K2Node_DynamicCast_AsBPI_Chara_Base_Accessor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopDefaultBlink, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EventBase_C_StopDefaultBlink::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopDefaultBlink, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_EventBase_C_StopDefaultBlink::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopDefaultBlink, CallFunc_BI_StopDefaultBlink_NoUse) == 0x000040, "Member 'BP_EventBase_C_StopDefaultBlink::CallFunc_BI_StopDefaultBlink_NoUse' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopDefaultBlink, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BP_EventBase_C_StopDefaultBlink::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopDefaultBlink, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_EventBase_C_StopDefaultBlink::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlayDefaultBlink
// 0x0048 (0x0048 - 0x0000)
struct BP_EventBase_C_PlayDefaultBlink final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0008(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Accessor;      // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CD9[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_PlayDefaultBlink_NoUse;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CDA[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_PlayDefaultBlink) == 0x000008, "Wrong alignment on BP_EventBase_C_PlayDefaultBlink");
static_assert(sizeof(BP_EventBase_C_PlayDefaultBlink) == 0x000048, "Wrong size on BP_EventBase_C_PlayDefaultBlink");
static_assert(offsetof(BP_EventBase_C_PlayDefaultBlink, Tag) == 0x000000, "Member 'BP_EventBase_C_PlayDefaultBlink::Tag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayDefaultBlink, CallFunc_GetAllActorsWithTag_OutActors) == 0x000008, "Member 'BP_EventBase_C_PlayDefaultBlink::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayDefaultBlink, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_EventBase_C_PlayDefaultBlink::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayDefaultBlink, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_EventBase_C_PlayDefaultBlink::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayDefaultBlink, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EventBase_C_PlayDefaultBlink::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayDefaultBlink, K2Node_DynamicCast_AsBPI_Chara_Base_Accessor) == 0x000028, "Member 'BP_EventBase_C_PlayDefaultBlink::K2Node_DynamicCast_AsBPI_Chara_Base_Accessor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayDefaultBlink, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EventBase_C_PlayDefaultBlink::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayDefaultBlink, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_EventBase_C_PlayDefaultBlink::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayDefaultBlink, CallFunc_BI_PlayDefaultBlink_NoUse) == 0x000040, "Member 'BP_EventBase_C_PlayDefaultBlink::CallFunc_BI_PlayDefaultBlink_NoUse' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayDefaultBlink, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BP_EventBase_C_PlayDefaultBlink::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayDefaultBlink, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_EventBase_C_PlayDefaultBlink::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.GetEventTableItem
// 0x0058 (0x0058 - 0x0000)
struct BP_EventBase_C_GetEventTableItem final
{
public:
	TArray<struct FEventTableStrInt>              Table;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Object;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Find;                                              // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CDB[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value;                                             // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CDC[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventTableStrInt                      CallFunc_Array_Get_Item;                           // 0x0038(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CDD[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_GetEventTableItem) == 0x000008, "Wrong alignment on BP_EventBase_C_GetEventTableItem");
static_assert(sizeof(BP_EventBase_C_GetEventTableItem) == 0x000058, "Wrong size on BP_EventBase_C_GetEventTableItem");
static_assert(offsetof(BP_EventBase_C_GetEventTableItem, Table) == 0x000000, "Member 'BP_EventBase_C_GetEventTableItem::Table' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetEventTableItem, Object) == 0x000010, "Member 'BP_EventBase_C_GetEventTableItem::Object' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetEventTableItem, Find) == 0x000020, "Member 'BP_EventBase_C_GetEventTableItem::Find' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetEventTableItem, Value) == 0x000024, "Member 'BP_EventBase_C_GetEventTableItem::Value' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetEventTableItem, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_GetEventTableItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetEventTableItem, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_EventBase_C_GetEventTableItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetEventTableItem, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_EventBase_C_GetEventTableItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetEventTableItem, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_EventBase_C_GetEventTableItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetEventTableItem, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_EventBase_C_GetEventTableItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetEventTableItem, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000051, "Member 'BP_EventBase_C_GetEventTableItem::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetEventTableItem, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_EventBase_C_GetEventTableItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ClearCharaForcedLOD
// 0x0098 (0x0098 - 0x0000)
struct BP_EventBase_C_ClearCharaForcedLOD final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CDE[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharaBaseLight_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	class ACharaBaseLight_C*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CDF[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEventTableItem_Find;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CE0[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEventTableItem_Value;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CE1[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharaBase_C*>                   CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CE2[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CE3[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEventTableItem_Find_1;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CE4[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEventTableItem_Value_1;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_ClearCharaForcedLOD) == 0x000008, "Wrong alignment on BP_EventBase_C_ClearCharaForcedLOD");
static_assert(sizeof(BP_EventBase_C_ClearCharaForcedLOD) == 0x000098, "Wrong size on BP_EventBase_C_ClearCharaForcedLOD");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_EventBase_C_ClearCharaForcedLOD::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_EventBase_C_ClearCharaForcedLOD::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EventBase_C_ClearCharaForcedLOD::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_EventBase_C_ClearCharaForcedLOD::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_EventBase_C_ClearCharaForcedLOD::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BP_EventBase_C_ClearCharaForcedLOD::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventBase_C_ClearCharaForcedLOD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_ClearCharaForcedLOD::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, CallFunc_GetObjectName_ReturnValue) == 0x000038, "Member 'BP_EventBase_C_ClearCharaForcedLOD::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_EventBase_C_ClearCharaForcedLOD::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, CallFunc_GetEventTableItem_Find) == 0x000049, "Member 'BP_EventBase_C_ClearCharaForcedLOD::CallFunc_GetEventTableItem_Find' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, CallFunc_GetEventTableItem_Value) == 0x00004C, "Member 'BP_EventBase_C_ClearCharaForcedLOD::CallFunc_GetEventTableItem_Value' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_EventBase_C_ClearCharaForcedLOD::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000058, "Member 'BP_EventBase_C_ClearCharaForcedLOD::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'BP_EventBase_C_ClearCharaForcedLOD::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_EventBase_C_ClearCharaForcedLOD::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_EventBase_C_ClearCharaForcedLOD::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, CallFunc_GetObjectName_ReturnValue_1) == 0x000080, "Member 'BP_EventBase_C_ClearCharaForcedLOD::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, CallFunc_GetEventTableItem_Find_1) == 0x000090, "Member 'BP_EventBase_C_ClearCharaForcedLOD::CallFunc_GetEventTableItem_Find_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearCharaForcedLOD, CallFunc_GetEventTableItem_Value_1) == 0x000094, "Member 'BP_EventBase_C_ClearCharaForcedLOD::CallFunc_GetEventTableItem_Value_1' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetCharaForcedLOD
// 0x00D0 (0x00D0 - 0x0000)
struct BP_EventBase_C_SetCharaForcedLOD final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CE5[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharaBaseLight_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	class ACharaBaseLight_C*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CE6[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CE7[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventTableStrInt                      K2Node_MakeStruct_EventTableStrInt;                // 0x0050(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CE8[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharaBase_C*>                   CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0070(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CE9[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CEA[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CEB[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventTableStrInt                      K2Node_MakeStruct_EventTableStrInt_1;              // 0x00B0(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_SetCharaForcedLOD) == 0x000008, "Wrong alignment on BP_EventBase_C_SetCharaForcedLOD");
static_assert(sizeof(BP_EventBase_C_SetCharaForcedLOD) == 0x0000D0, "Wrong size on BP_EventBase_C_SetCharaForcedLOD");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EventBase_C_SetCharaForcedLOD::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EventBase_C_SetCharaForcedLOD::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_SetCharaForcedLOD::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_EventBase_C_SetCharaForcedLOD::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_EventBase_C_SetCharaForcedLOD::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BP_EventBase_C_SetCharaForcedLOD::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventBase_C_SetCharaForcedLOD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_SetCharaForcedLOD::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, CallFunc_GetObjectName_ReturnValue) == 0x000038, "Member 'BP_EventBase_C_SetCharaForcedLOD::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_EventBase_C_SetCharaForcedLOD::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_EventBase_C_SetCharaForcedLOD::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, K2Node_MakeStruct_EventTableStrInt) == 0x000050, "Member 'BP_EventBase_C_SetCharaForcedLOD::K2Node_MakeStruct_EventTableStrInt' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BP_EventBase_C_SetCharaForcedLOD::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00006C, "Member 'BP_EventBase_C_SetCharaForcedLOD::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000070, "Member 'BP_EventBase_C_SetCharaForcedLOD::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'BP_EventBase_C_SetCharaForcedLOD::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'BP_EventBase_C_SetCharaForcedLOD::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_EventBase_C_SetCharaForcedLOD::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, CallFunc_GetObjectName_ReturnValue_1) == 0x000098, "Member 'BP_EventBase_C_SetCharaForcedLOD::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_EventBase_C_SetCharaForcedLOD::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, K2Node_MakeStruct_EventTableStrInt_1) == 0x0000B0, "Member 'BP_EventBase_C_SetCharaForcedLOD::K2Node_MakeStruct_EventTableStrInt_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetCharaForcedLOD, CallFunc_Array_Add_ReturnValue_1) == 0x0000C8, "Member 'BP_EventBase_C_SetCharaForcedLOD::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.MakeRateTable
// 0x01B0 (0x01B0 - 0x0000)
struct BP_EventBase_C_MakeRateTable final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AMobBase_C*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	class AMobBase_C*                             CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CEC[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CED[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventRateTable                        K2Node_MakeStruct_EventRateTable;                  // 0x0068(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CEE[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharaBaseLight_C*>              CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0088(0x0010)(ReferenceParm)
	class ACharaBaseLight_C*                      CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CEF[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayRate_ReturnValue;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CF0[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class ASkeletalMeshActor*>             CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x00C0(0x0010)(ReferenceParm)
	struct FEventRateTable                        K2Node_MakeStruct_EventRateTable_1;                // 0x00D0(0x0018)(HasGetValueTypeHash)
	class ASkeletalMeshActor*                     CallFunc_Array_Get_Item_2;                         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CF1[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_2;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_ReturnValue_1;                // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CF2[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventRateTable                        K2Node_MakeStruct_EventRateTable_2;                // 0x0110(0x0018)(HasGetValueTypeHash)
	struct FEventRateTable                        K2Node_MakeStruct_EventRateTable_3;                // 0x0128(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CF3[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CF4[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharaBase_C*>                   CallFunc_GetAllActorsOfClass_OutActors_3;          // 0x0158(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CF5[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_Array_Get_Item_3;                         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CF6[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayRate_ReturnValue_2;                // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue_3;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FEventRateTable                        K2Node_MakeStruct_EventRateTable_4;                // 0x0190(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_MakeRateTable) == 0x000008, "Wrong alignment on BP_EventBase_C_MakeRateTable");
static_assert(sizeof(BP_EventBase_C_MakeRateTable) == 0x0001B0, "Wrong size on BP_EventBase_C_MakeRateTable");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EventBase_C_MakeRateTable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EventBase_C_MakeRateTable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, Temp_int_Loop_Counter_Variable_1) == 0x000008, "Member 'BP_EventBase_C_MakeRateTable::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_EventBase_C_MakeRateTable::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, Temp_int_Loop_Counter_Variable_2) == 0x000018, "Member 'BP_EventBase_C_MakeRateTable::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Add_IntInt_ReturnValue_2) == 0x00001C, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'BP_EventBase_C_MakeRateTable::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, Temp_int_Loop_Counter_Variable_3) == 0x000024, "Member 'BP_EventBase_C_MakeRateTable::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Add_IntInt_ReturnValue_3) == 0x000028, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, Temp_int_Array_Index_Variable_3) == 0x00002C, "Member 'BP_EventBase_C_MakeRateTable::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_GetObjectName_ReturnValue) == 0x000050, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, K2Node_MakeStruct_EventRateTable) == 0x000068, "Member 'BP_EventBase_C_MakeRateTable::K2Node_MakeStruct_EventRateTable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000088, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_GetPlayRate_ReturnValue) == 0x0000A8, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_GetPlayRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_GetObjectName_ReturnValue_1) == 0x0000B0, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x0000C0, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, K2Node_MakeStruct_EventRateTable_1) == 0x0000D0, "Member 'BP_EventBase_C_MakeRateTable::K2Node_MakeStruct_EventRateTable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Array_Get_Item_2) == 0x0000E8, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Array_Add_ReturnValue_1) == 0x0000F0, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_GetObjectName_ReturnValue_2) == 0x0000F8, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_GetObjectName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_GetPlayRate_ReturnValue_1) == 0x000108, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_GetPlayRate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, K2Node_MakeStruct_EventRateTable_2) == 0x000110, "Member 'BP_EventBase_C_MakeRateTable::K2Node_MakeStruct_EventRateTable_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, K2Node_MakeStruct_EventRateTable_3) == 0x000128, "Member 'BP_EventBase_C_MakeRateTable::K2Node_MakeStruct_EventRateTable_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Array_Add_ReturnValue_2) == 0x000140, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Array_Add_ReturnValue_3) == 0x000144, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000148, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Array_Length_ReturnValue_2) == 0x00014C, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Less_IntInt_ReturnValue_2) == 0x000150, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_GetAllActorsOfClass_OutActors_3) == 0x000158, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_GetAllActorsOfClass_OutActors_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Array_Length_ReturnValue_3) == 0x000168, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Array_Get_Item_3) == 0x000170, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Less_IntInt_ReturnValue_3) == 0x000178, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_GetPlayRate_ReturnValue_2) == 0x00017C, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_GetPlayRate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_GetObjectName_ReturnValue_3) == 0x000180, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_GetObjectName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, K2Node_MakeStruct_EventRateTable_4) == 0x000190, "Member 'BP_EventBase_C_MakeRateTable::K2Node_MakeStruct_EventRateTable_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_MakeRateTable, CallFunc_Array_Add_ReturnValue_4) == 0x0001A8, "Member 'BP_EventBase_C_MakeRateTable::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlayMotionMob
// 0x00E8 (0x00E8 - 0x0000)
struct BP_EventBase_C_PlayMotionMob final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 AnimSequence;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CF7[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OffsetTime;                                        // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EventTime;                                         // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_PlayRate;                                    // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      AnimAsset;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempOffset;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TmpRate;                                           // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CF8[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0050(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CF9[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CFA[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CFB[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CallFunc_GetAnimConv_ReturnValue;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CFC[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CFD[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTime_ReturnValue;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_PlayMotionMob) == 0x000008, "Wrong alignment on BP_EventBase_C_PlayMotionMob");
static_assert(sizeof(BP_EventBase_C_PlayMotionMob) == 0x0000E8, "Wrong size on BP_EventBase_C_PlayMotionMob");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, Tag) == 0x000000, "Member 'BP_EventBase_C_PlayMotionMob::Tag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, AnimSequence) == 0x000010, "Member 'BP_EventBase_C_PlayMotionMob::AnimSequence' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, IsLoop) == 0x000020, "Member 'BP_EventBase_C_PlayMotionMob::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, OffsetTime) == 0x000024, "Member 'BP_EventBase_C_PlayMotionMob::OffsetTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, EventTime) == 0x000028, "Member 'BP_EventBase_C_PlayMotionMob::EventTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, Param_PlayRate) == 0x00002C, "Member 'BP_EventBase_C_PlayMotionMob::Param_PlayRate' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, AnimAsset) == 0x000030, "Member 'BP_EventBase_C_PlayMotionMob::AnimAsset' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, TempOffset) == 0x000038, "Member 'BP_EventBase_C_PlayMotionMob::TempOffset' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, TmpRate) == 0x00003C, "Member 'BP_EventBase_C_PlayMotionMob::TmpRate' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_EventBase_C_PlayMotionMob::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000045, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_Conv_StringToName_ReturnValue) == 0x000048, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_GetAllActorsWithTag_OutActors) == 0x000050, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000070, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_EventBase_C_PlayMotionMob::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_GetAnimConv_ReturnValue) == 0x000098, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_GetAnimConv_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, Temp_int_Array_Index_Variable_1) == 0x0000A4, "Member 'BP_EventBase_C_PlayMotionMob::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_GetObjectName_ReturnValue) == 0x0000B0, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_GetObjectName_ReturnValue_1) == 0x0000C0, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000D0, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, Temp_int_Loop_Counter_Variable_1) == 0x0000D4, "Member 'BP_EventBase_C_PlayMotionMob::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D8, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000DC, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_GetPlayTime_ReturnValue) == 0x0000E0, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_GetPlayTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionMob, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000E4, "Member 'BP_EventBase_C_PlayMotionMob::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ClearBindingActors
// 0x0050 (0x0050 - 0x0000)
struct BP_EventBase_C_ClearBindingActors final
{
public:
	TArray<class FName>                           BindingActors;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8CFE[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CFF[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_ClearBindingActors) == 0x000008, "Wrong alignment on BP_EventBase_C_ClearBindingActors");
static_assert(sizeof(BP_EventBase_C_ClearBindingActors) == 0x000050, "Wrong size on BP_EventBase_C_ClearBindingActors");
static_assert(offsetof(BP_EventBase_C_ClearBindingActors, BindingActors) == 0x000000, "Member 'BP_EventBase_C_ClearBindingActors::BindingActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearBindingActors, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_ClearBindingActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearBindingActors, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_EventBase_C_ClearBindingActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearBindingActors, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_EventBase_C_ClearBindingActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearBindingActors, CallFunc_Array_Get_Item) == 0x00001C, "Member 'BP_EventBase_C_ClearBindingActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearBindingActors, CallFunc_GetAllActorsWithTag_OutActors) == 0x000028, "Member 'BP_EventBase_C_ClearBindingActors::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearBindingActors, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_EventBase_C_ClearBindingActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearBindingActors, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_EventBase_C_ClearBindingActors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearBindingActors, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_EventBase_C_ClearBindingActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetBindingActors
// 0x0068 (0x0068 - 0x0000)
struct BP_EventBase_C_SetBindingActors final
{
public:
	TArray<class FName>                           BindingActors;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AActor*                                 EventCtrl;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D00[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D01[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_SetBindingActors) == 0x000008, "Wrong alignment on BP_EventBase_C_SetBindingActors");
static_assert(sizeof(BP_EventBase_C_SetBindingActors) == 0x000068, "Wrong size on BP_EventBase_C_SetBindingActors");
static_assert(offsetof(BP_EventBase_C_SetBindingActors, BindingActors) == 0x000000, "Member 'BP_EventBase_C_SetBindingActors::BindingActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetBindingActors, EventCtrl) == 0x000010, "Member 'BP_EventBase_C_SetBindingActors::EventCtrl' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetBindingActors, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_SetBindingActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetBindingActors, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_EventBase_C_SetBindingActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetBindingActors, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_EventBase_C_SetBindingActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetBindingActors, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_EventBase_C_SetBindingActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetBindingActors, CallFunc_Conv_NameToString_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_SetBindingActors::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetBindingActors, CallFunc_GetAllActorsWithTag_OutActors) == 0x000040, "Member 'BP_EventBase_C_SetBindingActors::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetBindingActors, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_EventBase_C_SetBindingActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetBindingActors, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_EventBase_C_SetBindingActors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetBindingActors, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_EventBase_C_SetBindingActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetNormalUnite
// 0x0010 (0x0010 - 0x0000)
struct BP_EventBase_C_SetNormalUnite final
{
public:
	int32                                         OnestDevilID;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TwondDevilID;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ResultId;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Accident;                                          // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_SetNormalUnite) == 0x000004, "Wrong alignment on BP_EventBase_C_SetNormalUnite");
static_assert(sizeof(BP_EventBase_C_SetNormalUnite) == 0x000010, "Wrong size on BP_EventBase_C_SetNormalUnite");
static_assert(offsetof(BP_EventBase_C_SetNormalUnite, OnestDevilID) == 0x000000, "Member 'BP_EventBase_C_SetNormalUnite::OnestDevilID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetNormalUnite, TwondDevilID) == 0x000004, "Member 'BP_EventBase_C_SetNormalUnite::TwondDevilID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetNormalUnite, ResultId) == 0x000008, "Member 'BP_EventBase_C_SetNormalUnite::ResultId' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetNormalUnite, Accident) == 0x00000C, "Member 'BP_EventBase_C_SetNormalUnite::Accident' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.EventFlagSetUp
// 0x0018 (0x0018 - 0x0000)
struct BP_EventBase_C_EventFlagSetUp final
{
public:
	class FString                                 Param_EventId;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Last;                                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_EventFlagSetUp) == 0x000008, "Wrong alignment on BP_EventBase_C_EventFlagSetUp");
static_assert(sizeof(BP_EventBase_C_EventFlagSetUp) == 0x000018, "Wrong size on BP_EventBase_C_EventFlagSetUp");
static_assert(offsetof(BP_EventBase_C_EventFlagSetUp, Param_EventId) == 0x000000, "Member 'BP_EventBase_C_EventFlagSetUp::Param_EventId' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_EventFlagSetUp, Last) == 0x000010, "Member 'BP_EventBase_C_EventFlagSetUp::Last' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.StopShake
// 0x0020 (0x0020 - 0x0000)
struct BP_EventBase_C_StopShake final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D02[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPlayerController*                K2Node_DynamicCast_AsCustom_Player_Controller;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_StopShake) == 0x000008, "Wrong alignment on BP_EventBase_C_StopShake");
static_assert(sizeof(BP_EventBase_C_StopShake) == 0x000020, "Wrong size on BP_EventBase_C_StopShake");
static_assert(offsetof(BP_EventBase_C_StopShake, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_EventBase_C_StopShake::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopShake, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_StopShake::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopShake, K2Node_DynamicCast_AsCustom_Player_Controller) == 0x000010, "Member 'BP_EventBase_C_StopShake::K2Node_DynamicCast_AsCustom_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopShake, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EventBase_C_StopShake::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlayShake
// 0x0028 (0x0028 - 0x0000)
struct BP_EventBase_C_PlayShake final
{
public:
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D03[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPlayerController*                K2Node_DynamicCast_AsCustom_Player_Controller;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D04[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMatineeCameraShake*                    CallFunc_EventCameraPlayShake_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_PlayShake) == 0x000008, "Wrong alignment on BP_EventBase_C_PlayShake");
static_assert(sizeof(BP_EventBase_C_PlayShake) == 0x000028, "Wrong size on BP_EventBase_C_PlayShake");
static_assert(offsetof(BP_EventBase_C_PlayShake, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_EventBase_C_PlayShake::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayShake, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_PlayShake::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayShake, K2Node_DynamicCast_AsCustom_Player_Controller) == 0x000010, "Member 'BP_EventBase_C_PlayShake::K2Node_DynamicCast_AsCustom_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayShake, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EventBase_C_PlayShake::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayShake, CallFunc_EventCameraPlayShake_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_PlayShake::CallFunc_EventCameraPlayShake_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetRate
// 0x0060 (0x0060 - 0x0000)
struct BP_EventBase_C_SetRate final
{
public:
	class FString                                 ObjectName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D05[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventRateTable                        K2Node_MakeStruct_EventRateTable;                  // 0x0018(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D06[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventRateTable                        CallFunc_Array_Get_Item;                           // 0x0040(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_SetRate) == 0x000008, "Wrong alignment on BP_EventBase_C_SetRate");
static_assert(sizeof(BP_EventBase_C_SetRate) == 0x000060, "Wrong size on BP_EventBase_C_SetRate");
static_assert(offsetof(BP_EventBase_C_SetRate, ObjectName) == 0x000000, "Member 'BP_EventBase_C_SetRate::ObjectName' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetRate, Rate) == 0x000010, "Member 'BP_EventBase_C_SetRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetRate, K2Node_MakeStruct_EventRateTable) == 0x000018, "Member 'BP_EventBase_C_SetRate::K2Node_MakeStruct_EventRateTable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetRate, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_EventBase_C_SetRate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetRate, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_EventBase_C_SetRate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetRate, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_EventBase_C_SetRate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetRate, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_EventBase_C_SetRate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetRate, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_EventBase_C_SetRate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetRate, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_EventBase_C_SetRate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetRate, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00005D, "Member 'BP_EventBase_C_SetRate::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.GetRate
// 0x0048 (0x0048 - 0x0000)
struct BP_EventBase_C_GetRate final
{
public:
	class FString                                 ObjectName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D07[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventRateTable                        CallFunc_Array_Get_Item;                           // 0x0028(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_GetRate) == 0x000008, "Wrong alignment on BP_EventBase_C_GetRate");
static_assert(sizeof(BP_EventBase_C_GetRate) == 0x000048, "Wrong size on BP_EventBase_C_GetRate");
static_assert(offsetof(BP_EventBase_C_GetRate, ObjectName) == 0x000000, "Member 'BP_EventBase_C_GetRate::ObjectName' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetRate, Rate) == 0x000010, "Member 'BP_EventBase_C_GetRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetRate, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_EventBase_C_GetRate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetRate, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_EventBase_C_GetRate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetRate, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EventBase_C_GetRate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetRate, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_GetRate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetRate, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventBase_C_GetRate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetRate, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_EventBase_C_GetRate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetRate, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000041, "Member 'BP_EventBase_C_GetRate::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SimpleTextOff
// 0x0001 (0x0001 - 0x0000)
struct BP_EventBase_C_SimpleTextOff final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_SimpleTextOff) == 0x000001, "Wrong alignment on BP_EventBase_C_SimpleTextOff");
static_assert(sizeof(BP_EventBase_C_SimpleTextOff) == 0x000001, "Wrong size on BP_EventBase_C_SimpleTextOff");
static_assert(offsetof(BP_EventBase_C_SimpleTextOff, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_EventBase_C_SimpleTextOff::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SimpleTextOn
// 0x0068 (0x0068 - 0x0000)
struct BP_EventBase_C_SimpleTextOn final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D08[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_EventMessage_C*                    CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEventText_line;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D09[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEventText_ReturnValue;                 // 0x0018(0x0018)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D0A[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_SimpleTextOn) == 0x000008, "Wrong alignment on BP_EventBase_C_SimpleTextOn");
static_assert(sizeof(BP_EventBase_C_SimpleTextOn) == 0x000068, "Wrong size on BP_EventBase_C_SimpleTextOn");
static_assert(offsetof(BP_EventBase_C_SimpleTextOn, ID) == 0x000000, "Member 'BP_EventBase_C_SimpleTextOn::ID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SimpleTextOn, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_SimpleTextOn::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SimpleTextOn, CallFunc_GetEventText_line) == 0x000010, "Member 'BP_EventBase_C_SimpleTextOn::CallFunc_GetEventText_line' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SimpleTextOn, CallFunc_GetEventText_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_SimpleTextOn::CallFunc_GetEventText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SimpleTextOn, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_SimpleTextOn::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SimpleTextOn, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000034, "Member 'BP_EventBase_C_SimpleTextOn::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SimpleTextOn, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_EventBase_C_SimpleTextOn::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SimpleTextOn, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000040, "Member 'BP_EventBase_C_SimpleTextOn::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SimpleTextOn, CallFunc_MakeVector2D_ReturnValue) == 0x000048, "Member 'BP_EventBase_C_SimpleTextOn::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SimpleTextOn, CallFunc_Conv_IntToString_ReturnValue) == 0x000050, "Member 'BP_EventBase_C_SimpleTextOn::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SimpleTextOn, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_EventBase_C_SimpleTextOn::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.DebugPrintRate
// 0x0130 (0x0130 - 0x0000)
struct BP_EventBase_C_DebugPrintRate final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharaBase_C*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	TArray<class ASkeletalMeshActor*>             CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0028(0x0010)(ReferenceParm)
	class ACharaBase_C*                           CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkeletalMeshActor*                     CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_ReturnValue;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D0B[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_ReturnValue_1;                // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D0C[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D0D[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D0E[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_DebugPrintRate) == 0x000008, "Wrong alignment on BP_EventBase_C_DebugPrintRate");
static_assert(sizeof(BP_EventBase_C_DebugPrintRate) == 0x000130, "Wrong size on BP_EventBase_C_DebugPrintRate");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_EventBase_C_DebugPrintRate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EventBase_C_DebugPrintRate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'BP_EventBase_C_DebugPrintRate::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_EventBase_C_DebugPrintRate::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000028, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_GetObjectName_ReturnValue) == 0x000048, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_GetObjectName_ReturnValue_1) == 0x000058, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000088, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000098, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_GetPlayRate_ReturnValue) == 0x0000A8, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_GetPlayRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_IsVisible_ReturnValue) == 0x0000AC, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Conv_FloatToString_ReturnValue) == 0x0000B0, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000C0, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000D0, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_GetPlayRate_ReturnValue_1) == 0x0000E0, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_GetPlayRate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x0000E8, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000100, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000118, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Array_Length_ReturnValue_1) == 0x000128, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintRate, CallFunc_Less_IntInt_ReturnValue_1) == 0x00012C, "Member 'BP_EventBase_C_DebugPrintRate::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ChangeCueVolume
// 0x0018 (0x0018 - 0x0000)
struct BP_EventBase_C_ChangeCueVolume final
{
public:
	EOptionVolumeCategory                         Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D0F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Volume;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D10[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_ChangeCueVolume) == 0x000008, "Wrong alignment on BP_EventBase_C_ChangeCueVolume");
static_assert(sizeof(BP_EventBase_C_ChangeCueVolume) == 0x000018, "Wrong size on BP_EventBase_C_ChangeCueVolume");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolume, Category) == 0x000000, "Member 'BP_EventBase_C_ChangeCueVolume::Category' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolume, Volume) == 0x000004, "Member 'BP_EventBase_C_ChangeCueVolume::Volume' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolume, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'BP_EventBase_C_ChangeCueVolume::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeCueVolume, CallFunc_Get_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_ChangeCueVolume::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.StopCueBGM
// 0x0010 (0x0010 - 0x0000)
struct BP_EventBase_C_StopCueBGM final
{
public:
	float                                         FadeTime;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoBGM;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D11[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_StopCueBGM) == 0x000008, "Wrong alignment on BP_EventBase_C_StopCueBGM");
static_assert(sizeof(BP_EventBase_C_StopCueBGM) == 0x000010, "Wrong size on BP_EventBase_C_StopCueBGM");
static_assert(offsetof(BP_EventBase_C_StopCueBGM, FadeTime) == 0x000000, "Member 'BP_EventBase_C_StopCueBGM::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopCueBGM, NoBGM) == 0x000004, "Member 'BP_EventBase_C_StopCueBGM::NoBGM' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopCueBGM, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_StopCueBGM::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlayCueBGM
// 0x0030 (0x0030 - 0x0000)
struct BP_EventBase_C_PlayCueBGM final
{
public:
	class FString                                 SoundID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Volume;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D12[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetSoundData_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_PlayCueBGM) == 0x000008, "Wrong alignment on BP_EventBase_C_PlayCueBGM");
static_assert(sizeof(BP_EventBase_C_PlayCueBGM) == 0x000030, "Wrong size on BP_EventBase_C_PlayCueBGM");
static_assert(offsetof(BP_EventBase_C_PlayCueBGM, SoundID) == 0x000000, "Member 'BP_EventBase_C_PlayCueBGM::SoundID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueBGM, Volume) == 0x000010, "Member 'BP_EventBase_C_PlayCueBGM::Volume' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueBGM, Pitch) == 0x000014, "Member 'BP_EventBase_C_PlayCueBGM::Pitch' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueBGM, Time) == 0x000018, "Member 'BP_EventBase_C_PlayCueBGM::Time' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueBGM, CallFunc_Get_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_PlayCueBGM::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueBGM, CallFunc_GetSoundData_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_PlayCueBGM::CallFunc_GetSoundData_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.DebugPrintTime
// 0x0058 (0x0058 - 0x0000)
struct BP_EventBase_C_DebugPrintTime final
{
public:
	bool                                          CallFunc_IsDebugCutName_NewParam;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D13[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D14[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTime_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D15[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_DebugPrintTime) == 0x000008, "Wrong alignment on BP_EventBase_C_DebugPrintTime");
static_assert(sizeof(BP_EventBase_C_DebugPrintTime) == 0x000058, "Wrong size on BP_EventBase_C_DebugPrintTime");
static_assert(offsetof(BP_EventBase_C_DebugPrintTime, CallFunc_IsDebugCutName_NewParam) == 0x000000, "Member 'BP_EventBase_C_DebugPrintTime::CallFunc_IsDebugCutName_NewParam' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintTime, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'BP_EventBase_C_DebugPrintTime::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintTime, CallFunc_Conv_FloatToString_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_DebugPrintTime::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintTime, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_DebugPrintTime::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_DebugPrintTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintTime, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_EventBase_C_DebugPrintTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintTime, CallFunc_GetPlayTime_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_DebugPrintTime::CallFunc_GetPlayTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintTime, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000038, "Member 'BP_EventBase_C_DebugPrintTime::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintTime, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_EventBase_C_DebugPrintTime::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.CutFinalize
// 0x0AE0 (0x0AE0 - 0x0000)
struct BP_EventBase_C_CutFinalize final
{
public:
	class AActor*                                 LevelSelf;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D16[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D17[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x0020(0x0560)()
	struct FPostProcessSettings                   CallFunc_GetPostProcessSetting_ReturnValue;        // 0x0580(0x0560)()
};
static_assert(alignof(BP_EventBase_C_CutFinalize) == 0x000010, "Wrong alignment on BP_EventBase_C_CutFinalize");
static_assert(sizeof(BP_EventBase_C_CutFinalize) == 0x000AE0, "Wrong size on BP_EventBase_C_CutFinalize");
static_assert(offsetof(BP_EventBase_C_CutFinalize, LevelSelf) == 0x000000, "Member 'BP_EventBase_C_CutFinalize::LevelSelf' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_CutFinalize, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_CutFinalize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_CutFinalize, CallFunc_GetCineCameraComponent_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_CutFinalize::CallFunc_GetCineCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_CutFinalize, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_CutFinalize::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_CutFinalize, K2Node_MakeStruct_PostProcessSettings) == 0x000020, "Member 'BP_EventBase_C_CutFinalize::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_CutFinalize, CallFunc_GetPostProcessSetting_ReturnValue) == 0x000580, "Member 'BP_EventBase_C_CutFinalize::CallFunc_GetPostProcessSetting_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlayMotionProp
// 0x00B8 (0x00B8 - 0x0000)
struct BP_EventBase_C_PlayMotionProp final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 AnimSequence;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D18[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OffsetTime;                                        // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EventTime;                                         // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_PlayRate;                                    // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TmpRate;                                           // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D19[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      AnimAsset;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempOffset;                                        // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D1A[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CallFunc_GetAnimConv_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D1B[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D1C[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D1D[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTime_ReturnValue;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_PlayMotionProp) == 0x000008, "Wrong alignment on BP_EventBase_C_PlayMotionProp");
static_assert(sizeof(BP_EventBase_C_PlayMotionProp) == 0x0000B8, "Wrong size on BP_EventBase_C_PlayMotionProp");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, Tag) == 0x000000, "Member 'BP_EventBase_C_PlayMotionProp::Tag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, AnimSequence) == 0x000010, "Member 'BP_EventBase_C_PlayMotionProp::AnimSequence' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, IsLoop) == 0x000020, "Member 'BP_EventBase_C_PlayMotionProp::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, OffsetTime) == 0x000024, "Member 'BP_EventBase_C_PlayMotionProp::OffsetTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, EventTime) == 0x000028, "Member 'BP_EventBase_C_PlayMotionProp::EventTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, Param_PlayRate) == 0x00002C, "Member 'BP_EventBase_C_PlayMotionProp::Param_PlayRate' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, TmpRate) == 0x000030, "Member 'BP_EventBase_C_PlayMotionProp::TmpRate' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, AnimAsset) == 0x000038, "Member 'BP_EventBase_C_PlayMotionProp::AnimAsset' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, TempOffset) == 0x000040, "Member 'BP_EventBase_C_PlayMotionProp::TempOffset' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_EventBase_C_PlayMotionProp::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000045, "Member 'BP_EventBase_C_PlayMotionProp::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, CallFunc_Conv_StringToName_ReturnValue) == 0x000048, "Member 'BP_EventBase_C_PlayMotionProp::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, CallFunc_GetAllActorsWithTag_OutActors) == 0x000050, "Member 'BP_EventBase_C_PlayMotionProp::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_EventBase_C_PlayMotionProp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_EventBase_C_PlayMotionProp::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, CallFunc_GetAnimConv_ReturnValue) == 0x000068, "Member 'BP_EventBase_C_PlayMotionProp::CallFunc_GetAnimConv_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_EventBase_C_PlayMotionProp::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_EventBase_C_PlayMotionProp::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, CallFunc_GetComponentByClass_ReturnValue) == 0x000080, "Member 'BP_EventBase_C_PlayMotionProp::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_EventBase_C_PlayMotionProp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, CallFunc_Add_FloatFloat_ReturnValue) == 0x00008C, "Member 'BP_EventBase_C_PlayMotionProp::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, CallFunc_GetObjectName_ReturnValue) == 0x000090, "Member 'BP_EventBase_C_PlayMotionProp::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BP_EventBase_C_PlayMotionProp::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_EventBase_C_PlayMotionProp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_EventBase_C_PlayMotionProp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, CallFunc_GetPlayTime_ReturnValue) == 0x0000AC, "Member 'BP_EventBase_C_PlayMotionProp::CallFunc_GetPlayTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionProp, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BP_EventBase_C_PlayMotionProp::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlayMotionConv
// 0x0168 (0x0168 - 0x0000)
struct BP_EventBase_C_PlayMotionConv final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 AnimSequence;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D1E[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendTime;                                         // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetTime;                                        // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EventTime;                                         // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_PlayRate;                                    // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D1F[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 MeshComponent;                                     // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharaMotionPlayerComponent*            MotionComponent;                                   // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TmpRate;                                           // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempOffset;                                        // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      AnimAsset;                                         // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D20[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D21[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0068(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D22[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D23[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D24[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_CHARA_MOTION_ID>                     CallFunc_Update_OutputPlayingMotions;              // 0x0098(0x0010)(ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Accessor;      // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D25[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Accessor_1;    // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_EventPlayMotion_NoUse;                 // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_StopMotion_NoUse;                      // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D26[0x5];                                     // 0x00E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Accessor_2;    // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D27[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Accessor_3;    // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D28[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_BI_GetMeshComponent_MeshComp;             // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharaMotionPlayerComponent*            CallFunc_BI_GetMotionComponent_MotionComponent;    // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D29[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CallFunc_GetAnimConv_ReturnValue;                  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D2A[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTime_ReturnValue;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_PlayMotionConv) == 0x000008, "Wrong alignment on BP_EventBase_C_PlayMotionConv");
static_assert(sizeof(BP_EventBase_C_PlayMotionConv) == 0x000168, "Wrong size on BP_EventBase_C_PlayMotionConv");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, Tag) == 0x000000, "Member 'BP_EventBase_C_PlayMotionConv::Tag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, AnimSequence) == 0x000010, "Member 'BP_EventBase_C_PlayMotionConv::AnimSequence' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, IsLoop) == 0x000020, "Member 'BP_EventBase_C_PlayMotionConv::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, BlendTime) == 0x000024, "Member 'BP_EventBase_C_PlayMotionConv::BlendTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, OffsetTime) == 0x000028, "Member 'BP_EventBase_C_PlayMotionConv::OffsetTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, EventTime) == 0x00002C, "Member 'BP_EventBase_C_PlayMotionConv::EventTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, Param_PlayRate) == 0x000030, "Member 'BP_EventBase_C_PlayMotionConv::Param_PlayRate' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, MeshComponent) == 0x000038, "Member 'BP_EventBase_C_PlayMotionConv::MeshComponent' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, MotionComponent) == 0x000040, "Member 'BP_EventBase_C_PlayMotionConv::MotionComponent' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, TmpRate) == 0x000048, "Member 'BP_EventBase_C_PlayMotionConv::TmpRate' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, TempOffset) == 0x00004C, "Member 'BP_EventBase_C_PlayMotionConv::TempOffset' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, AnimAsset) == 0x000050, "Member 'BP_EventBase_C_PlayMotionConv::AnimAsset' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000059, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00005A, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_Conv_StringToName_ReturnValue) == 0x00005C, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_GetAllActorsWithTag_OutActors) == 0x000068, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_BooleanAND_ReturnValue) == 0x000080, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_GetAnimInstance_ReturnValue) == 0x000088, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_Update_OutputPlayingMotions) == 0x000098, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_Update_OutputPlayingMotions' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, Temp_int_Array_Index_Variable) == 0x0000AC, "Member 'BP_EventBase_C_PlayMotionConv::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, K2Node_DynamicCast_AsBPI_Chara_Base_Accessor) == 0x0000B8, "Member 'BP_EventBase_C_PlayMotionConv::K2Node_DynamicCast_AsBPI_Chara_Base_Accessor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_EventBase_C_PlayMotionConv::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, K2Node_DynamicCast_AsBPI_Chara_Base_Accessor_1) == 0x0000D0, "Member 'BP_EventBase_C_PlayMotionConv::K2Node_DynamicCast_AsBPI_Chara_Base_Accessor_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'BP_EventBase_C_PlayMotionConv::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_BI_EventPlayMotion_NoUse) == 0x0000E1, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_BI_EventPlayMotion_NoUse' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_BI_StopMotion_NoUse) == 0x0000E2, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_BI_StopMotion_NoUse' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, K2Node_DynamicCast_AsBPI_Chara_Base_Accessor_2) == 0x0000E8, "Member 'BP_EventBase_C_PlayMotionConv::K2Node_DynamicCast_AsBPI_Chara_Base_Accessor_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, K2Node_DynamicCast_bSuccess_2) == 0x0000F8, "Member 'BP_EventBase_C_PlayMotionConv::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, K2Node_DynamicCast_AsBPI_Chara_Base_Accessor_3) == 0x000100, "Member 'BP_EventBase_C_PlayMotionConv::K2Node_DynamicCast_AsBPI_Chara_Base_Accessor_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, K2Node_DynamicCast_bSuccess_3) == 0x000110, "Member 'BP_EventBase_C_PlayMotionConv::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_BI_GetMeshComponent_MeshComp) == 0x000118, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_BI_GetMeshComponent_MeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_BI_GetMotionComponent_MotionComponent) == 0x000120, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_BI_GetMotionComponent_MotionComponent' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000128, "Member 'BP_EventBase_C_PlayMotionConv::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, K2Node_DynamicCast_bSuccess_4) == 0x000130, "Member 'BP_EventBase_C_PlayMotionConv::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_GetObjectName_ReturnValue) == 0x000138, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_GetAnimConv_ReturnValue) == 0x000148, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_GetAnimConv_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_Add_FloatFloat_ReturnValue) == 0x000150, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, Temp_int_Loop_Counter_Variable) == 0x000154, "Member 'BP_EventBase_C_PlayMotionConv::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_Less_IntInt_ReturnValue) == 0x000158, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_Add_IntInt_ReturnValue) == 0x00015C, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_GetPlayTime_ReturnValue) == 0x000160, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_GetPlayTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionConv, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000164, "Member 'BP_EventBase_C_PlayMotionConv::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetVolumeCueLoop
// 0x0050 (0x0050 - 0x0000)
struct BP_EventBase_C_SetVolumeCueLoop final
{
public:
	class FString                                 SoundID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Volume;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D2B[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D2C[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCueName_ReturnValue;                   // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_SetVolumeCueLoop) == 0x000008, "Wrong alignment on BP_EventBase_C_SetVolumeCueLoop");
static_assert(sizeof(BP_EventBase_C_SetVolumeCueLoop) == 0x000050, "Wrong size on BP_EventBase_C_SetVolumeCueLoop");
static_assert(offsetof(BP_EventBase_C_SetVolumeCueLoop, SoundID) == 0x000000, "Member 'BP_EventBase_C_SetVolumeCueLoop::SoundID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetVolumeCueLoop, Volume) == 0x000010, "Member 'BP_EventBase_C_SetVolumeCueLoop::Volume' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetVolumeCueLoop, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_EventBase_C_SetVolumeCueLoop::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetVolumeCueLoop, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_EventBase_C_SetVolumeCueLoop::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetVolumeCueLoop, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EventBase_C_SetVolumeCueLoop::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetVolumeCueLoop, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_SetVolumeCueLoop::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetVolumeCueLoop, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventBase_C_SetVolumeCueLoop::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetVolumeCueLoop, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_SetVolumeCueLoop::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetVolumeCueLoop, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_EventBase_C_SetVolumeCueLoop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetVolumeCueLoop, CallFunc_GetCueName_ReturnValue) == 0x000038, "Member 'BP_EventBase_C_SetVolumeCueLoop::CallFunc_GetCueName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetVolumeCueLoop, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000048, "Member 'BP_EventBase_C_SetVolumeCueLoop::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.StopCueLoop
// 0x0048 (0x0048 - 0x0000)
struct BP_EventBase_C_StopCueLoop final
{
public:
	class FString                                 SoundID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D2D[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCueName_ReturnValue;                   // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_StopCueLoop) == 0x000008, "Wrong alignment on BP_EventBase_C_StopCueLoop");
static_assert(sizeof(BP_EventBase_C_StopCueLoop) == 0x000048, "Wrong size on BP_EventBase_C_StopCueLoop");
static_assert(offsetof(BP_EventBase_C_StopCueLoop, SoundID) == 0x000000, "Member 'BP_EventBase_C_StopCueLoop::SoundID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopCueLoop, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EventBase_C_StopCueLoop::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopCueLoop, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_EventBase_C_StopCueLoop::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopCueLoop, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_StopCueLoop::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopCueLoop, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_EventBase_C_StopCueLoop::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopCueLoop, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EventBase_C_StopCueLoop::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopCueLoop, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_StopCueLoop::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopCueLoop, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_EventBase_C_StopCueLoop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopCueLoop, CallFunc_GetCueName_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_StopCueLoop::CallFunc_GetCueName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopCueLoop, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000040, "Member 'BP_EventBase_C_StopCueLoop::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlayCueLoop
// 0x0048 (0x0048 - 0x0000)
struct BP_EventBase_C_PlayCueLoop final
{
public:
	class FString                                 SoundID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Volume;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TmpPitch;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTime_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D2E[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetSoundData_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_SpawnSound2D_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_PlayCueLoop) == 0x000008, "Wrong alignment on BP_EventBase_C_PlayCueLoop");
static_assert(sizeof(BP_EventBase_C_PlayCueLoop) == 0x000048, "Wrong size on BP_EventBase_C_PlayCueLoop");
static_assert(offsetof(BP_EventBase_C_PlayCueLoop, SoundID) == 0x000000, "Member 'BP_EventBase_C_PlayCueLoop::SoundID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueLoop, Volume) == 0x000010, "Member 'BP_EventBase_C_PlayCueLoop::Volume' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueLoop, Pitch) == 0x000014, "Member 'BP_EventBase_C_PlayCueLoop::Pitch' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueLoop, TmpPitch) == 0x000018, "Member 'BP_EventBase_C_PlayCueLoop::TmpPitch' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueLoop, CallFunc_GetPlayTime_ReturnValue) == 0x00001C, "Member 'BP_EventBase_C_PlayCueLoop::CallFunc_GetPlayTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueLoop, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_PlayCueLoop::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueLoop, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_EventBase_C_PlayCueLoop::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueLoop, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_PlayCueLoop::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueLoop, CallFunc_GetSoundData_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_PlayCueLoop::CallFunc_GetSoundData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueLoop, CallFunc_SpawnSound2D_ReturnValue) == 0x000038, "Member 'BP_EventBase_C_PlayCueLoop::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCueLoop, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BP_EventBase_C_PlayCueLoop::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlayCue
// 0x0050 (0x0050 - 0x0000)
struct BP_EventBase_C_PlayCue final
{
public:
	class FString                                 SoundID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Volume;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TmpPitch;                                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D2F[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTime_ReturnValue;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D30[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetSoundData_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D31[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_SpawnSound2D_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_PlayCue) == 0x000008, "Wrong alignment on BP_EventBase_C_PlayCue");
static_assert(sizeof(BP_EventBase_C_PlayCue) == 0x000050, "Wrong size on BP_EventBase_C_PlayCue");
static_assert(offsetof(BP_EventBase_C_PlayCue, SoundID) == 0x000000, "Member 'BP_EventBase_C_PlayCue::SoundID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCue, Volume) == 0x000010, "Member 'BP_EventBase_C_PlayCue::Volume' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCue, Pitch) == 0x000014, "Member 'BP_EventBase_C_PlayCue::Pitch' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCue, Time) == 0x000018, "Member 'BP_EventBase_C_PlayCue::Time' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCue, TmpPitch) == 0x00001C, "Member 'BP_EventBase_C_PlayCue::TmpPitch' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCue, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_PlayCue::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCue, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'BP_EventBase_C_PlayCue::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCue, CallFunc_GetPlayTime_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_PlayCue::CallFunc_GetPlayTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCue, CallFunc_GetSoundData_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_PlayCue::CallFunc_GetSoundData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCue, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_EventBase_C_PlayCue::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCue, CallFunc_SpawnSound2D_ReturnValue) == 0x000040, "Member 'BP_EventBase_C_PlayCue::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayCue, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'BP_EventBase_C_PlayCue::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.DebugForceFinish
// 0x00B0 (0x00B0 - 0x0000)
struct BP_EventBase_C_DebugForceFinish final
{
public:
	bool                                          CallFunc_FadeOut_Black_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNextMessage_Next;                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D32[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTime_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D33[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_DebugForceFinish) == 0x000008, "Wrong alignment on BP_EventBase_C_DebugForceFinish");
static_assert(sizeof(BP_EventBase_C_DebugForceFinish) == 0x0000B0, "Wrong size on BP_EventBase_C_DebugForceFinish");
static_assert(offsetof(BP_EventBase_C_DebugForceFinish, CallFunc_FadeOut_Black_ReturnValue) == 0x000000, "Member 'BP_EventBase_C_DebugForceFinish::CallFunc_FadeOut_Black_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugForceFinish, CallFunc_IsNextMessage_Next) == 0x000001, "Member 'BP_EventBase_C_DebugForceFinish::CallFunc_IsNextMessage_Next' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugForceFinish, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_EventBase_C_DebugForceFinish::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugForceFinish, CallFunc_Conv_BoolToString_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_DebugForceFinish::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugForceFinish, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_DebugForceFinish::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugForceFinish, CallFunc_GetSequencePlayer_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_DebugForceFinish::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugForceFinish, CallFunc_GetPlayTime_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_DebugForceFinish::CallFunc_GetPlayTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugForceFinish, CallFunc_IsPlaying_ReturnValue) == 0x000034, "Member 'BP_EventBase_C_DebugForceFinish::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugForceFinish, CallFunc_Conv_FloatToString_ReturnValue) == 0x000038, "Member 'BP_EventBase_C_DebugForceFinish::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugForceFinish, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x000048, "Member 'BP_EventBase_C_DebugForceFinish::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugForceFinish, CallFunc_GetObjectName_ReturnValue) == 0x000058, "Member 'BP_EventBase_C_DebugForceFinish::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugForceFinish, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'BP_EventBase_C_DebugForceFinish::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugForceFinish, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'BP_EventBase_C_DebugForceFinish::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugForceFinish, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000088, "Member 'BP_EventBase_C_DebugForceFinish::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugForceFinish, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000098, "Member 'BP_EventBase_C_DebugForceFinish::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugForceFinish, CallFunc_IsActionPadCheck_Success) == 0x0000A8, "Member 'BP_EventBase_C_DebugForceFinish::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugForceFinish, CallFunc_IsActionPadCheck_Success_1) == 0x0000A9, "Member 'BP_EventBase_C_DebugForceFinish::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ResetBlurInvalid
// 0x0AE0 (0x0AE0 - 0x0000)
struct BP_EventBase_C_ResetBlurInvalid final
{
public:
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x0000(0x0560)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D34[0x7];                                     // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue;       // 0x0568(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPostProcessSettings                   CallFunc_GetPostProcessSetting_ReturnValue;        // 0x0570(0x0560)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_ResetBlurInvalid) == 0x000010, "Wrong alignment on BP_EventBase_C_ResetBlurInvalid");
static_assert(sizeof(BP_EventBase_C_ResetBlurInvalid) == 0x000AE0, "Wrong size on BP_EventBase_C_ResetBlurInvalid");
static_assert(offsetof(BP_EventBase_C_ResetBlurInvalid, K2Node_MakeStruct_PostProcessSettings) == 0x000000, "Member 'BP_EventBase_C_ResetBlurInvalid::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ResetBlurInvalid, CallFunc_IsValid_ReturnValue) == 0x000560, "Member 'BP_EventBase_C_ResetBlurInvalid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ResetBlurInvalid, CallFunc_GetCineCameraComponent_ReturnValue) == 0x000568, "Member 'BP_EventBase_C_ResetBlurInvalid::CallFunc_GetCineCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ResetBlurInvalid, CallFunc_GetPostProcessSetting_ReturnValue) == 0x000570, "Member 'BP_EventBase_C_ResetBlurInvalid::CallFunc_GetPostProcessSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ResetBlurInvalid, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000AD0, "Member 'BP_EventBase_C_ResetBlurInvalid::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetBlurInvalid
// 0x0001 (0x0001 - 0x0000)
struct BP_EventBase_C_SetBlurInvalid final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_SetBlurInvalid) == 0x000001, "Wrong alignment on BP_EventBase_C_SetBlurInvalid");
static_assert(sizeof(BP_EventBase_C_SetBlurInvalid) == 0x000001, "Wrong size on BP_EventBase_C_SetBlurInvalid");
static_assert(offsetof(BP_EventBase_C_SetBlurInvalid, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_EventBase_C_SetBlurInvalid::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ClearMaterial
// 0x0078 (0x0078 - 0x0000)
struct BP_EventBase_C_ClearMaterial final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D35[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D36[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Accessor;      // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D37[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_BI_GetMeshComponent_MeshComp;             // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_ClearMaterial) == 0x000008, "Wrong alignment on BP_EventBase_C_ClearMaterial");
static_assert(sizeof(BP_EventBase_C_ClearMaterial) == 0x000078, "Wrong size on BP_EventBase_C_ClearMaterial");
static_assert(offsetof(BP_EventBase_C_ClearMaterial, Tag) == 0x000000, "Member 'BP_EventBase_C_ClearMaterial::Tag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearMaterial, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EventBase_C_ClearMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearMaterial, CallFunc_GetAllActorsWithTag_OutActors) == 0x000010, "Member 'BP_EventBase_C_ClearMaterial::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearMaterial, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_ClearMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearMaterial, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_EventBase_C_ClearMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_ClearMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EventBase_C_ClearMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearMaterial, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'BP_EventBase_C_ClearMaterial::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearMaterial, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BP_EventBase_C_ClearMaterial::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearMaterial, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_EventBase_C_ClearMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearMaterial, K2Node_DynamicCast_AsBPI_Chara_Base_Accessor) == 0x000040, "Member 'BP_EventBase_C_ClearMaterial::K2Node_DynamicCast_AsBPI_Chara_Base_Accessor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearMaterial, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_EventBase_C_ClearMaterial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearMaterial, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_EventBase_C_ClearMaterial::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearMaterial, CallFunc_BI_GetMeshComponent_MeshComp) == 0x000058, "Member 'BP_EventBase_C_ClearMaterial::CallFunc_BI_GetMeshComponent_MeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearMaterial, CallFunc_GetMaterials_ReturnValue) == 0x000060, "Member 'BP_EventBase_C_ClearMaterial::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearMaterial, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'BP_EventBase_C_ClearMaterial::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ClearMaterial, CallFunc_Less_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_EventBase_C_ClearMaterial::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ChangeMaterial
// 0x0098 (0x0098 - 0x0000)
struct BP_EventBase_C_ChangeMaterial final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Table;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Accessor;      // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D38[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMobBase_C*                             K2Node_DynamicCast_AsMob_Base;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D39[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_BI_GetMeshComponent_MeshComp;             // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkeletalMeshActor*                     K2Node_DynamicCast_AsSkeletal_Mesh_Actor;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D3A[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBaseLight_C*                      K2Node_DynamicCast_AsChara_Base_Light;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D3B[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D3C[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D3D[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_ChangeMaterial) == 0x000008, "Wrong alignment on BP_EventBase_C_ChangeMaterial");
static_assert(sizeof(BP_EventBase_C_ChangeMaterial) == 0x000098, "Wrong size on BP_EventBase_C_ChangeMaterial");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, Tag) == 0x000000, "Member 'BP_EventBase_C_ChangeMaterial::Tag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, Table) == 0x000008, "Member 'BP_EventBase_C_ChangeMaterial::Table' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, CallFunc_GetAllActorsWithTag_OutActors) == 0x000010, "Member 'BP_EventBase_C_ChangeMaterial::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_EventBase_C_ChangeMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_EventBase_C_ChangeMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventBase_C_ChangeMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, K2Node_DynamicCast_AsBPI_Chara_Base_Accessor) == 0x000030, "Member 'BP_EventBase_C_ChangeMaterial::K2Node_DynamicCast_AsBPI_Chara_Base_Accessor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EventBase_C_ChangeMaterial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, K2Node_DynamicCast_AsMob_Base) == 0x000048, "Member 'BP_EventBase_C_ChangeMaterial::K2Node_DynamicCast_AsMob_Base' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_EventBase_C_ChangeMaterial::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, CallFunc_BI_GetMeshComponent_MeshComp) == 0x000058, "Member 'BP_EventBase_C_ChangeMaterial::CallFunc_BI_GetMeshComponent_MeshComp' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, K2Node_DynamicCast_AsSkeletal_Mesh_Actor) == 0x000060, "Member 'BP_EventBase_C_ChangeMaterial::K2Node_DynamicCast_AsSkeletal_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'BP_EventBase_C_ChangeMaterial::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, K2Node_DynamicCast_AsChara_Base_Light) == 0x000070, "Member 'BP_EventBase_C_ChangeMaterial::K2Node_DynamicCast_AsChara_Base_Light' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, K2Node_DynamicCast_bSuccess_3) == 0x000078, "Member 'BP_EventBase_C_ChangeMaterial::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, K2Node_DynamicCast_AsChara_Base) == 0x000080, "Member 'BP_EventBase_C_ChangeMaterial::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, K2Node_DynamicCast_bSuccess_4) == 0x000088, "Member 'BP_EventBase_C_ChangeMaterial::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'BP_EventBase_C_ChangeMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_EventBase_C_ChangeMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_EventBase_C_ChangeMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.AutoMotion
// 0x0028 (0x0028 - 0x0000)
struct BP_EventBase_C_AutoMotion final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D3E[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendTime;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EventTime;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      AnimAsset;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempOffset;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_AutoMotion) == 0x000008, "Wrong alignment on BP_EventBase_C_AutoMotion");
static_assert(sizeof(BP_EventBase_C_AutoMotion) == 0x000028, "Wrong size on BP_EventBase_C_AutoMotion");
static_assert(offsetof(BP_EventBase_C_AutoMotion, Tag) == 0x000000, "Member 'BP_EventBase_C_AutoMotion::Tag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AutoMotion, IsLoop) == 0x000008, "Member 'BP_EventBase_C_AutoMotion::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AutoMotion, BlendTime) == 0x00000C, "Member 'BP_EventBase_C_AutoMotion::BlendTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AutoMotion, OffsetTime) == 0x000010, "Member 'BP_EventBase_C_AutoMotion::OffsetTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AutoMotion, EventTime) == 0x000014, "Member 'BP_EventBase_C_AutoMotion::EventTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AutoMotion, AnimAsset) == 0x000018, "Member 'BP_EventBase_C_AutoMotion::AnimAsset' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AutoMotion, TempOffset) == 0x000020, "Member 'BP_EventBase_C_AutoMotion::TempOffset' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.AddSelection
// 0x00A0 (0x00A0 - 0x0000)
struct BP_EventBase_C_AddSelection final
{
public:
	class UImage*                                 Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventLookAt_C*                      LookAt;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Facial;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          Motion;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEmitter*                               Emitter;                                           // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NextStep;                                          // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ACTION_MAPPING_TYPE                         InputKey;                                          // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D3F[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AAtomSound*>                     VoiceSE;                                           // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventSelection                        K2Node_MakeStruct_EventSelection;                  // 0x0050(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_AddSelection) == 0x000008, "Wrong alignment on BP_EventBase_C_AddSelection");
static_assert(sizeof(BP_EventBase_C_AddSelection) == 0x0000A0, "Wrong size on BP_EventBase_C_AddSelection");
static_assert(offsetof(BP_EventBase_C_AddSelection, Image) == 0x000000, "Member 'BP_EventBase_C_AddSelection::Image' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AddSelection, LookAt) == 0x000008, "Member 'BP_EventBase_C_AddSelection::LookAt' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AddSelection, Facial) == 0x000010, "Member 'BP_EventBase_C_AddSelection::Facial' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AddSelection, Motion) == 0x000018, "Member 'BP_EventBase_C_AddSelection::Motion' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AddSelection, Emitter) == 0x000020, "Member 'BP_EventBase_C_AddSelection::Emitter' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AddSelection, NextStep) == 0x000028, "Member 'BP_EventBase_C_AddSelection::NextStep' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AddSelection, InputKey) == 0x00002C, "Member 'BP_EventBase_C_AddSelection::InputKey' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AddSelection, VoiceSE) == 0x000030, "Member 'BP_EventBase_C_AddSelection::VoiceSE' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AddSelection, K2Node_MakeStruct_LinearColor) == 0x000040, "Member 'BP_EventBase_C_AddSelection::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AddSelection, K2Node_MakeStruct_EventSelection) == 0x000050, "Member 'BP_EventBase_C_AddSelection::K2Node_MakeStruct_EventSelection' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AddSelection, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'BP_EventBase_C_AddSelection::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ProcSelection
// 0x04F0 (0x04F0 - 0x0000)
struct BP_EventBase_C_ProcSelection final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnd;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D40[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Next;                                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangeCursor;                                      // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D41[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SelectStep;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SelectEnd;                                         // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D42[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurve_ReturnValue;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D43[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharaFaceComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D44[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D45[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurve_ReturnValue_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D46[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_2;                   // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurve_ReturnValue_2;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D47[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_3;                   // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_4;                   // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D48[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharaFaceComponent*                    CallFunc_GetComponentByClass_ReturnValue_1;        // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D49[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D4A[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D4B[0x3];                                     // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D4C[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventSelection                        CallFunc_Array_Get_Item;                           // 0x0128(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D4D[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D4E[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventSelection                        CallFunc_Array_Get_Item_1;                         // 0x0190(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D4F[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventSelection                        K2Node_SetFieldsInStruct_StructOut;                // 0x01E0(0x0048)(HasGetValueTypeHash)
	struct FEventSelection                        K2Node_SetFieldsInStruct_StructOut_1;              // 0x0228(0x0048)(HasGetValueTypeHash)
	class AAtomSound*                             CallFunc__GetSelectionVoiceArray_Voice;            // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D50[0x2];                                     // 0x027A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D51[0x3];                                     // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurve_ReturnValue_3;                   // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D52[0x2];                                     // 0x0292(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventSelection                        CallFunc_Array_Get_Item_2;                         // 0x02A0(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D53[0x2];                                     // 0x02EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurve_ReturnValue_4;                   // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D54[0x3];                                     // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D55[0x3];                                     // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D56[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventSelection                        CallFunc_Array_Get_Item_3;                         // 0x0308(0x0048)(HasGetValueTypeHash)
	struct FEventSelection                        K2Node_SetFieldsInStruct_StructOut_2;              // 0x0350(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D57[0x3];                                     // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D58[0x3];                                     // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventSelection                        CallFunc_Array_Get_Item_4;                         // 0x03A8(0x0048)(HasGetValueTypeHash)
	struct FEventSelection                        CallFunc_Array_Get_Item_5;                         // 0x03F0(0x0048)(HasGetValueTypeHash)
	struct FEventSelection                        K2Node_SetFieldsInStruct_StructOut_3;              // 0x0438(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x0482(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0483(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0485(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D59[0x2];                                     // 0x0486(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D5A[0x3];                                     // 0x048D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventSelection                        CallFunc_Array_Get_Item_6;                         // 0x0490(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x04DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D5B[0x3];                                     // 0x04DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAtomSound*                             CallFunc__GetSelectionVoiceArray_Voice_1;          // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x04EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x04EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_ProcSelection) == 0x000008, "Wrong alignment on BP_EventBase_C_ProcSelection");
static_assert(sizeof(BP_EventBase_C_ProcSelection) == 0x0004F0, "Wrong size on BP_EventBase_C_ProcSelection");
static_assert(offsetof(BP_EventBase_C_ProcSelection, DeltaSeconds) == 0x000000, "Member 'BP_EventBase_C_ProcSelection::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, IsEnd) == 0x000004, "Member 'BP_EventBase_C_ProcSelection::IsEnd' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, Next) == 0x000008, "Member 'BP_EventBase_C_ProcSelection::Next' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, ChangeCursor) == 0x00000C, "Member 'BP_EventBase_C_ProcSelection::ChangeCursor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, SelectStep) == 0x000010, "Member 'BP_EventBase_C_ProcSelection::SelectStep' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, SelectEnd) == 0x000014, "Member 'BP_EventBase_C_ProcSelection::SelectEnd' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_GetCurve_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_ProcSelection::CallFunc_GetCurve_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_ProcSelection::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_EventBase_C_ProcSelection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_MakeVector2D_ReturnValue) == 0x000034, "Member 'BP_EventBase_C_ProcSelection::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_EventBase_C_ProcSelection::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000040, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, K2Node_MakeStruct_LinearColor) == 0x000044, "Member 'BP_EventBase_C_ProcSelection::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, K2Node_MakeStruct_LinearColor_1) == 0x000054, "Member 'BP_EventBase_C_ProcSelection::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Add_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_GetCurve_ReturnValue_1) == 0x000068, "Member 'BP_EventBase_C_ProcSelection::CallFunc_GetCurve_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_MakeVector2D_ReturnValue_1) == 0x00006C, "Member 'BP_EventBase_C_ProcSelection::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000074, "Member 'BP_EventBase_C_ProcSelection::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, K2Node_MakeStruct_LinearColor_2) == 0x000078, "Member 'BP_EventBase_C_ProcSelection::K2Node_MakeStruct_LinearColor_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000088, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_GetCurve_ReturnValue_2) == 0x00008C, "Member 'BP_EventBase_C_ProcSelection::CallFunc_GetCurve_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000090, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000094, "Member 'BP_EventBase_C_ProcSelection::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_MakeVector2D_ReturnValue_2) == 0x000098, "Member 'BP_EventBase_C_ProcSelection::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000A0, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000A4, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0000A8, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x0000AC, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, K2Node_MakeStruct_LinearColor_3) == 0x0000B0, "Member 'BP_EventBase_C_ProcSelection::K2Node_MakeStruct_LinearColor_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_MakeVector2D_ReturnValue_3) == 0x0000C0, "Member 'BP_EventBase_C_ProcSelection::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000C8, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000CC, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_MakeVector2D_ReturnValue_4) == 0x0000D0, "Member 'BP_EventBase_C_ProcSelection::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, K2Node_MakeStruct_LinearColor_4) == 0x0000D8, "Member 'BP_EventBase_C_ProcSelection::K2Node_MakeStruct_LinearColor_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, Temp_int_Array_Index_Variable) == 0x0000E8, "Member 'BP_EventBase_C_ProcSelection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_IsValid_ReturnValue_1) == 0x0000EC, "Member 'BP_EventBase_C_ProcSelection::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0000F0, "Member 'BP_EventBase_C_ProcSelection::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, Temp_int_Loop_Counter_Variable) == 0x0000F8, "Member 'BP_EventBase_C_ProcSelection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_IsValid_ReturnValue_2) == 0x0000FC, "Member 'BP_EventBase_C_ProcSelection::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, Temp_int_Array_Index_Variable_1) == 0x000104, "Member 'BP_EventBase_C_ProcSelection::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, Temp_int_Loop_Counter_Variable_1) == 0x000110, "Member 'BP_EventBase_C_ProcSelection::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_IsValid_ReturnValue_3) == 0x000114, "Member 'BP_EventBase_C_ProcSelection::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Add_IntInt_ReturnValue_1) == 0x000118, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, Temp_int_Loop_Counter_Variable_2) == 0x00011C, "Member 'BP_EventBase_C_ProcSelection::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Add_IntInt_ReturnValue_2) == 0x000120, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Array_Get_Item) == 0x000128, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Array_Length_ReturnValue_1) == 0x000170, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, Temp_int_Array_Index_Variable_2) == 0x000174, "Member 'BP_EventBase_C_ProcSelection::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, Temp_int_Loop_Counter_Variable_3) == 0x000178, "Member 'BP_EventBase_C_ProcSelection::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Array_Length_ReturnValue_2) == 0x00017C, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Less_IntInt_ReturnValue_1) == 0x000180, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Add_IntInt_ReturnValue_3) == 0x000184, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, Temp_int_Array_Index_Variable_3) == 0x000188, "Member 'BP_EventBase_C_ProcSelection::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Array_Get_Item_1) == 0x000190, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Array_Length_ReturnValue_3) == 0x0001D8, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, K2Node_SetFieldsInStruct_StructOut) == 0x0001E0, "Member 'BP_EventBase_C_ProcSelection::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, K2Node_SetFieldsInStruct_StructOut_1) == 0x000228, "Member 'BP_EventBase_C_ProcSelection::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc__GetSelectionVoiceArray_Voice) == 0x000270, "Member 'BP_EventBase_C_ProcSelection::CallFunc__GetSelectionVoiceArray_Voice' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000278, "Member 'BP_EventBase_C_ProcSelection::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000279, "Member 'BP_EventBase_C_ProcSelection::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, Temp_int_Loop_Counter_Variable_4) == 0x00027C, "Member 'BP_EventBase_C_ProcSelection::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Less_IntInt_ReturnValue_2) == 0x000280, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Add_IntInt_ReturnValue_4) == 0x000284, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_GetCurve_ReturnValue_3) == 0x000288, "Member 'BP_EventBase_C_ProcSelection::CallFunc_GetCurve_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, Temp_int_Array_Index_Variable_4) == 0x00028C, "Member 'BP_EventBase_C_ProcSelection::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_IsValid_ReturnValue_4) == 0x000290, "Member 'BP_EventBase_C_ProcSelection::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_IsValid_ReturnValue_5) == 0x000291, "Member 'BP_EventBase_C_ProcSelection::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, Temp_int_Loop_Counter_Variable_5) == 0x000294, "Member 'BP_EventBase_C_ProcSelection::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Add_IntInt_ReturnValue_5) == 0x000298, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, Temp_int_Array_Index_Variable_5) == 0x00029C, "Member 'BP_EventBase_C_ProcSelection::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Array_Get_Item_2) == 0x0002A0, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_IsValid_ReturnValue_6) == 0x0002E8, "Member 'BP_EventBase_C_ProcSelection::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0002E9, "Member 'BP_EventBase_C_ProcSelection::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_GetCurve_ReturnValue_4) == 0x0002EC, "Member 'BP_EventBase_C_ProcSelection::CallFunc_GetCurve_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_IsActionPadCheck_Success) == 0x0002F0, "Member 'BP_EventBase_C_ProcSelection::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, Temp_int_Loop_Counter_Variable_6) == 0x0002F4, "Member 'BP_EventBase_C_ProcSelection::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Less_IntInt_ReturnValue_3) == 0x0002F8, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Add_IntInt_ReturnValue_6) == 0x0002FC, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_IsValid_ReturnValue_7) == 0x000300, "Member 'BP_EventBase_C_ProcSelection::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Array_Get_Item_3) == 0x000308, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, K2Node_SetFieldsInStruct_StructOut_2) == 0x000350, "Member 'BP_EventBase_C_ProcSelection::K2Node_SetFieldsInStruct_StructOut_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000398, "Member 'BP_EventBase_C_ProcSelection::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Array_Length_ReturnValue_4) == 0x00039C, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Less_IntInt_ReturnValue_4) == 0x0003A0, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, Temp_int_Array_Index_Variable_6) == 0x0003A4, "Member 'BP_EventBase_C_ProcSelection::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Array_Get_Item_4) == 0x0003A8, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Array_Get_Item_5) == 0x0003F0, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, K2Node_SetFieldsInStruct_StructOut_3) == 0x000438, "Member 'BP_EventBase_C_ProcSelection::K2Node_SetFieldsInStruct_StructOut_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000480, "Member 'BP_EventBase_C_ProcSelection::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000481, "Member 'BP_EventBase_C_ProcSelection::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_IsActionPadCheck_Success_1) == 0x000482, "Member 'BP_EventBase_C_ProcSelection::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_IsValid_ReturnValue_8) == 0x000483, "Member 'BP_EventBase_C_ProcSelection::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_IsValid_ReturnValue_9) == 0x000484, "Member 'BP_EventBase_C_ProcSelection::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000485, "Member 'BP_EventBase_C_ProcSelection::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Array_Length_ReturnValue_5) == 0x000488, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Less_IntInt_ReturnValue_5) == 0x00048C, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Array_Get_Item_6) == 0x000490, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Array_Length_ReturnValue_6) == 0x0004D8, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_Less_IntInt_ReturnValue_6) == 0x0004DC, "Member 'BP_EventBase_C_ProcSelection::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc__GetSelectionVoiceArray_Voice_1) == 0x0004E0, "Member 'BP_EventBase_C_ProcSelection::CallFunc__GetSelectionVoiceArray_Voice_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0004E8, "Member 'BP_EventBase_C_ProcSelection::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_IsValid_ReturnValue_10) == 0x0004E9, "Member 'BP_EventBase_C_ProcSelection::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, CallFunc_IsPlaying_ReturnValue) == 0x0004EA, "Member 'BP_EventBase_C_ProcSelection::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelection, K2Node_SwitchInteger_CmpSuccess) == 0x0004EB, "Member 'BP_EventBase_C_ProcSelection::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.InitSelection
// 0x0058 (0x0058 - 0x0000)
struct BP_EventBase_C_InitSelection final
{
public:
	class FName                                   CharaTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAtomSound*                             BaseVoiceSE;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D5C[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D5D[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D5E[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D5F[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurve_ReturnValue;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_InitSelection) == 0x000008, "Wrong alignment on BP_EventBase_C_InitSelection");
static_assert(sizeof(BP_EventBase_C_InitSelection) == 0x000058, "Wrong size on BP_EventBase_C_InitSelection");
static_assert(offsetof(BP_EventBase_C_InitSelection, CharaTag) == 0x000000, "Member 'BP_EventBase_C_InitSelection::CharaTag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelection, BaseVoiceSE) == 0x000008, "Member 'BP_EventBase_C_InitSelection::BaseVoiceSE' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelection, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EventBase_C_InitSelection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelection, CallFunc_GetAllActorsWithTag_OutActors) == 0x000018, "Member 'BP_EventBase_C_InitSelection::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelection, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_EventBase_C_InitSelection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelection, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_EventBase_C_InitSelection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelection, K2Node_DynamicCast_AsChara_Base) == 0x000038, "Member 'BP_EventBase_C_InitSelection::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelection, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EventBase_C_InitSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelection, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_EventBase_C_InitSelection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelection, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_EventBase_C_InitSelection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelection, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_EventBase_C_InitSelection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelection, CallFunc_GetCurve_ReturnValue) == 0x000050, "Member 'BP_EventBase_C_InitSelection::CallFunc_GetCurve_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C._GetSelectionVoiceArray
// 0x0040 (0x0040 - 0x0000)
struct BP_EventBase_C__GetSelectionVoiceArray final
{
public:
	TArray<class AAtomSound*>                     VoiceArray;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AAtomSound*                             Voice;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAtomSound*                             ReturnVoice;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D60[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAtomSound*                             CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C__GetSelectionVoiceArray) == 0x000008, "Wrong alignment on BP_EventBase_C__GetSelectionVoiceArray");
static_assert(sizeof(BP_EventBase_C__GetSelectionVoiceArray) == 0x000040, "Wrong size on BP_EventBase_C__GetSelectionVoiceArray");
static_assert(offsetof(BP_EventBase_C__GetSelectionVoiceArray, VoiceArray) == 0x000000, "Member 'BP_EventBase_C__GetSelectionVoiceArray::VoiceArray' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C__GetSelectionVoiceArray, Voice) == 0x000010, "Member 'BP_EventBase_C__GetSelectionVoiceArray::Voice' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C__GetSelectionVoiceArray, ReturnVoice) == 0x000018, "Member 'BP_EventBase_C__GetSelectionVoiceArray::ReturnVoice' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C__GetSelectionVoiceArray, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_EventBase_C__GetSelectionVoiceArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C__GetSelectionVoiceArray, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_EventBase_C__GetSelectionVoiceArray::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C__GetSelectionVoiceArray, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'BP_EventBase_C__GetSelectionVoiceArray::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C__GetSelectionVoiceArray, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventBase_C__GetSelectionVoiceArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C__GetSelectionVoiceArray, Temp_int_Variable) == 0x00002C, "Member 'BP_EventBase_C__GetSelectionVoiceArray::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C__GetSelectionVoiceArray, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_EventBase_C__GetSelectionVoiceArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C__GetSelectionVoiceArray, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_EventBase_C__GetSelectionVoiceArray::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetSelectionLRVoiceRight
// 0x0010 (0x0010 - 0x0000)
struct BP_EventBase_C_SetSelectionLRVoiceRight final
{
public:
	class AAtomSound*                             Voice;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_SetSelectionLRVoiceRight) == 0x000008, "Wrong alignment on BP_EventBase_C_SetSelectionLRVoiceRight");
static_assert(sizeof(BP_EventBase_C_SetSelectionLRVoiceRight) == 0x000010, "Wrong size on BP_EventBase_C_SetSelectionLRVoiceRight");
static_assert(offsetof(BP_EventBase_C_SetSelectionLRVoiceRight, Voice) == 0x000000, "Member 'BP_EventBase_C_SetSelectionLRVoiceRight::Voice' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetSelectionLRVoiceRight, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_SetSelectionLRVoiceRight::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetSelectionLRVoiceLeft
// 0x0010 (0x0010 - 0x0000)
struct BP_EventBase_C_SetSelectionLRVoiceLeft final
{
public:
	class AAtomSound*                             Voice;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_SetSelectionLRVoiceLeft) == 0x000008, "Wrong alignment on BP_EventBase_C_SetSelectionLRVoiceLeft");
static_assert(sizeof(BP_EventBase_C_SetSelectionLRVoiceLeft) == 0x000010, "Wrong size on BP_EventBase_C_SetSelectionLRVoiceLeft");
static_assert(offsetof(BP_EventBase_C_SetSelectionLRVoiceLeft, Voice) == 0x000000, "Member 'BP_EventBase_C_SetSelectionLRVoiceLeft::Voice' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetSelectionLRVoiceLeft, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_SetSelectionLRVoiceLeft::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetSelectionLRVoiceBase
// 0x0008 (0x0008 - 0x0000)
struct BP_EventBase_C_SetSelectionLRVoiceBase final
{
public:
	class AAtomSound*                             Voice;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_SetSelectionLRVoiceBase) == 0x000008, "Wrong alignment on BP_EventBase_C_SetSelectionLRVoiceBase");
static_assert(sizeof(BP_EventBase_C_SetSelectionLRVoiceBase) == 0x000008, "Wrong size on BP_EventBase_C_SetSelectionLRVoiceBase");
static_assert(offsetof(BP_EventBase_C_SetSelectionLRVoiceBase, Voice) == 0x000000, "Member 'BP_EventBase_C_SetSelectionLRVoiceBase::Voice' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ProcSelectionLR
// 0x0120 (0x0120 - 0x0000)
struct BP_EventBase_C_ProcSelectionLR final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnd;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D61[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Next;                                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectVal;                                         // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SelectEnd;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D62[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurve_ReturnValue;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D63[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurve_ReturnValue_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D64[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_2;                   // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurve_ReturnValue_2;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D65[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_3;                   // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_4;                   // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurve_ReturnValue_3;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D66[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAtomSound*                             CallFunc__GetSelectionVoiceArray_Voice;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAtomSound*                             CallFunc__GetSelectionVoiceArray_Voice_1;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetCurve_ReturnValue_4;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_2;               // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AAtomSound*                             CallFunc__GetSelectionVoiceArray_Voice_2;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_2;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D67[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAtomSound*                             CallFunc__GetSelectionVoiceArray_Voice_3;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_3;                 // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_ProcSelectionLR) == 0x000008, "Wrong alignment on BP_EventBase_C_ProcSelectionLR");
static_assert(sizeof(BP_EventBase_C_ProcSelectionLR) == 0x000120, "Wrong size on BP_EventBase_C_ProcSelectionLR");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, DeltaSeconds) == 0x000000, "Member 'BP_EventBase_C_ProcSelectionLR::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, IsEnd) == 0x000004, "Member 'BP_EventBase_C_ProcSelectionLR::IsEnd' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, Next) == 0x000008, "Member 'BP_EventBase_C_ProcSelectionLR::Next' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, SelectVal) == 0x00000C, "Member 'BP_EventBase_C_ProcSelectionLR::SelectVal' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, SelectEnd) == 0x000010, "Member 'BP_EventBase_C_ProcSelectionLR::SelectEnd' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_GetCurve_ReturnValue) == 0x000014, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_GetCurve_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000019, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, K2Node_MakeStruct_LinearColor) == 0x000024, "Member 'BP_EventBase_C_ProcSelectionLR::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_MakeVector2D_ReturnValue) == 0x000034, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, K2Node_MakeStruct_LinearColor_1) == 0x00003C, "Member 'BP_EventBase_C_ProcSelectionLR::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_GetCurve_ReturnValue_1) == 0x000050, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_GetCurve_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000054, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000058, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_MakeVector2D_ReturnValue_1) == 0x00005C, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, K2Node_MakeStruct_LinearColor_2) == 0x000064, "Member 'BP_EventBase_C_ProcSelectionLR::K2Node_MakeStruct_LinearColor_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000074, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_GetCurve_ReturnValue_2) == 0x000078, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_GetCurve_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00007C, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000080, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_MakeVector2D_ReturnValue_2) == 0x000084, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00008C, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000090, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000094, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000098, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, K2Node_MakeStruct_LinearColor_3) == 0x00009C, "Member 'BP_EventBase_C_ProcSelectionLR::K2Node_MakeStruct_LinearColor_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_MakeVector2D_ReturnValue_3) == 0x0000AC, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000B4, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x0000B8, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_MakeVector2D_ReturnValue_4) == 0x0000BC, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, K2Node_MakeStruct_LinearColor_4) == 0x0000C4, "Member 'BP_EventBase_C_ProcSelectionLR::K2Node_MakeStruct_LinearColor_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_GetCurve_ReturnValue_3) == 0x0000D4, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_GetCurve_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000D8, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_IsValid_ReturnValue) == 0x0000D9, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, K2Node_SwitchInteger_CmpSuccess) == 0x0000DA, "Member 'BP_EventBase_C_ProcSelectionLR::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_IsValid_ReturnValue_1) == 0x0000DB, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc__GetSelectionVoiceArray_Voice) == 0x0000E0, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc__GetSelectionVoiceArray_Voice' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc__GetSelectionVoiceArray_Voice_1) == 0x0000E8, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc__GetSelectionVoiceArray_Voice_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_IsValid_ReturnValue_2) == 0x0000F0, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_IsValid_ReturnValue_3) == 0x0000F1, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_IsActionPadCheck_Success) == 0x0000F2, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000F3, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_GetCurve_ReturnValue_4) == 0x0000F4, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_GetCurve_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_IsValid_ReturnValue_4) == 0x0000F8, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0000F9, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_IsPlaying_ReturnValue) == 0x0000FA, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x0000FB, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_IsActionPadCheck_Success_1) == 0x0000FC, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_IsValid_ReturnValue_5) == 0x0000FD, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_IsActionPadCheck_Success_2) == 0x0000FE, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_IsActionPadCheck_Success_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, K2Node_SwitchInteger_CmpSuccess_1) == 0x0000FF, "Member 'BP_EventBase_C_ProcSelectionLR::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc__GetSelectionVoiceArray_Voice_2) == 0x000100, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc__GetSelectionVoiceArray_Voice_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, K2Node_SwitchInteger_CmpSuccess_2) == 0x000108, "Member 'BP_EventBase_C_ProcSelectionLR::K2Node_SwitchInteger_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc__GetSelectionVoiceArray_Voice_3) == 0x000110, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc__GetSelectionVoiceArray_Voice_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, CallFunc_IsValid_ReturnValue_6) == 0x000118, "Member 'BP_EventBase_C_ProcSelectionLR::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ProcSelectionLR, K2Node_SwitchInteger_CmpSuccess_3) == 0x000119, "Member 'BP_EventBase_C_ProcSelectionLR::K2Node_SwitchInteger_CmpSuccess_3' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.InitSelectionLR
// 0x00A8 (0x00A8 - 0x0000)
struct BP_EventBase_C_InitSelectionLR final
{
public:
	class ACharaBase_C*                           Chara;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 LeftImage;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 RightImage;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventLookAt_C*                      LeftLookAt;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventLookAt_C*                      RightLookAt;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEmitter*                               LeftEffect;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEmitter*                               RightEffect;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LeftGoToStep;                                      // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RightGoToStep;                                     // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ACTION_MAPPING_TYPE                         LeftKey;                                           // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ACTION_MAPPING_TYPE                         RightKey;                                          // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D68[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventImportantSelectionLR             K2Node_MakeStruct_EventImportantSelectionLR;       // 0x0048(0x0048)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurve_ReturnValue;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_InitSelectionLR) == 0x000008, "Wrong alignment on BP_EventBase_C_InitSelectionLR");
static_assert(sizeof(BP_EventBase_C_InitSelectionLR) == 0x0000A8, "Wrong size on BP_EventBase_C_InitSelectionLR");
static_assert(offsetof(BP_EventBase_C_InitSelectionLR, Chara) == 0x000000, "Member 'BP_EventBase_C_InitSelectionLR::Chara' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelectionLR, LeftImage) == 0x000008, "Member 'BP_EventBase_C_InitSelectionLR::LeftImage' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelectionLR, RightImage) == 0x000010, "Member 'BP_EventBase_C_InitSelectionLR::RightImage' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelectionLR, LeftLookAt) == 0x000018, "Member 'BP_EventBase_C_InitSelectionLR::LeftLookAt' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelectionLR, RightLookAt) == 0x000020, "Member 'BP_EventBase_C_InitSelectionLR::RightLookAt' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelectionLR, LeftEffect) == 0x000028, "Member 'BP_EventBase_C_InitSelectionLR::LeftEffect' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelectionLR, RightEffect) == 0x000030, "Member 'BP_EventBase_C_InitSelectionLR::RightEffect' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelectionLR, LeftGoToStep) == 0x000038, "Member 'BP_EventBase_C_InitSelectionLR::LeftGoToStep' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelectionLR, RightGoToStep) == 0x00003C, "Member 'BP_EventBase_C_InitSelectionLR::RightGoToStep' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelectionLR, LeftKey) == 0x000040, "Member 'BP_EventBase_C_InitSelectionLR::LeftKey' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelectionLR, RightKey) == 0x000041, "Member 'BP_EventBase_C_InitSelectionLR::RightKey' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelectionLR, K2Node_MakeStruct_EventImportantSelectionLR) == 0x000048, "Member 'BP_EventBase_C_InitSelectionLR::K2Node_MakeStruct_EventImportantSelectionLR' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelectionLR, CallFunc_GetCurve_ReturnValue) == 0x000090, "Member 'BP_EventBase_C_InitSelectionLR::CallFunc_GetCurve_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_InitSelectionLR, K2Node_MakeStruct_LinearColor) == 0x000094, "Member 'BP_EventBase_C_InitSelectionLR::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.DebugPrintInfo
// 0x0070 (0x0070 - 0x0000)
struct BP_EventBase_C_DebugPrintInfo final
{
public:
	class FString                                 UserData;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTime_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D69[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_DebugPrintInfo) == 0x000008, "Wrong alignment on BP_EventBase_C_DebugPrintInfo");
static_assert(sizeof(BP_EventBase_C_DebugPrintInfo) == 0x000070, "Wrong size on BP_EventBase_C_DebugPrintInfo");
static_assert(offsetof(BP_EventBase_C_DebugPrintInfo, UserData) == 0x000000, "Member 'BP_EventBase_C_DebugPrintInfo::UserData' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_DebugPrintInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintInfo, CallFunc_GetPlayTime_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_DebugPrintInfo::CallFunc_GetPlayTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintInfo, CallFunc_GetDisplayName_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_DebugPrintInfo::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintInfo, CallFunc_Conv_FloatToString_ReturnValue) == 0x000038, "Member 'BP_EventBase_C_DebugPrintInfo::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintInfo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_EventBase_C_DebugPrintInfo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintInfo, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000058, "Member 'BP_EventBase_C_DebugPrintInfo::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugPrintInfo, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_EventBase_C_DebugPrintInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.DebugFlagControl
// 0x0050 (0x0050 - 0x0000)
struct BP_EventBase_C_DebugFlagControl final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FName                                   Left;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_Flag;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D6A[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Right;                                             // 0x0024(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          R_Flag;                                            // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D6B[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Up;                                                // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          U_Flag;                                            // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D6C[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Down;                                              // 0x003C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          D_Flag;                                            // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Next;                                              // 0x0045(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnFlag;                                        // 0x0046(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_2;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_3;          // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_2;               // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_3;               // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_DebugFlagControl) == 0x000008, "Wrong alignment on BP_EventBase_C_DebugFlagControl");
static_assert(sizeof(BP_EventBase_C_DebugFlagControl) == 0x000050, "Wrong size on BP_EventBase_C_DebugFlagControl");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, Text) == 0x000000, "Member 'BP_EventBase_C_DebugFlagControl::Text' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, Left) == 0x000018, "Member 'BP_EventBase_C_DebugFlagControl::Left' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, L_Flag) == 0x000020, "Member 'BP_EventBase_C_DebugFlagControl::L_Flag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, Right) == 0x000024, "Member 'BP_EventBase_C_DebugFlagControl::Right' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, R_Flag) == 0x00002C, "Member 'BP_EventBase_C_DebugFlagControl::R_Flag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, Up) == 0x000030, "Member 'BP_EventBase_C_DebugFlagControl::Up' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, U_Flag) == 0x000038, "Member 'BP_EventBase_C_DebugFlagControl::U_Flag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, Down) == 0x00003C, "Member 'BP_EventBase_C_DebugFlagControl::Down' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, D_Flag) == 0x000044, "Member 'BP_EventBase_C_DebugFlagControl::D_Flag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, Next) == 0x000045, "Member 'BP_EventBase_C_DebugFlagControl::Next' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, ReturnFlag) == 0x000046, "Member 'BP_EventBase_C_DebugFlagControl::ReturnFlag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, CallFunc_NotEqual_NameName_ReturnValue) == 0x000047, "Member 'BP_EventBase_C_DebugFlagControl::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x000048, "Member 'BP_EventBase_C_DebugFlagControl::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, CallFunc_NotEqual_NameName_ReturnValue_2) == 0x000049, "Member 'BP_EventBase_C_DebugFlagControl::CallFunc_NotEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, CallFunc_NotEqual_NameName_ReturnValue_3) == 0x00004A, "Member 'BP_EventBase_C_DebugFlagControl::CallFunc_NotEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, CallFunc_IsActionPadCheck_Success) == 0x00004B, "Member 'BP_EventBase_C_DebugFlagControl::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, CallFunc_IsActionPadCheck_Success_1) == 0x00004C, "Member 'BP_EventBase_C_DebugFlagControl::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, CallFunc_IsActionPadCheck_Success_2) == 0x00004D, "Member 'BP_EventBase_C_DebugFlagControl::CallFunc_IsActionPadCheck_Success_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugFlagControl, CallFunc_IsActionPadCheck_Success_3) == 0x00004E, "Member 'BP_EventBase_C_DebugFlagControl::CallFunc_IsActionPadCheck_Success_3' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.DebugTextOff
// 0x0001 (0x0001 - 0x0000)
struct BP_EventBase_C_DebugTextOff final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_DebugTextOff) == 0x000001, "Wrong alignment on BP_EventBase_C_DebugTextOff");
static_assert(sizeof(BP_EventBase_C_DebugTextOff) == 0x000001, "Wrong size on BP_EventBase_C_DebugTextOff");
static_assert(offsetof(BP_EventBase_C_DebugTextOff, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_EventBase_C_DebugTextOff::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.DebugTextOn
// 0x0028 (0x0028 - 0x0000)
struct BP_EventBase_C_DebugTextOn final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D6D[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_EventTest_C*                        CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_DebugTextOn) == 0x000008, "Wrong alignment on BP_EventBase_C_DebugTextOn");
static_assert(sizeof(BP_EventBase_C_DebugTextOn) == 0x000028, "Wrong size on BP_EventBase_C_DebugTextOn");
static_assert(offsetof(BP_EventBase_C_DebugTextOn, Text) == 0x000000, "Member 'BP_EventBase_C_DebugTextOn::Text' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextOn, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_DebugTextOn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DebugTextOn, CallFunc_Create_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_DebugTextOn::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.GetInput
// 0x0004 (0x0004 - 0x0000)
struct BP_EventBase_C_GetInput final
{
public:
	E_ACTION_MAPPING_TYPE                         Action;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Input;                                             // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_GetInput) == 0x000001, "Wrong alignment on BP_EventBase_C_GetInput");
static_assert(sizeof(BP_EventBase_C_GetInput) == 0x000004, "Wrong size on BP_EventBase_C_GetInput");
static_assert(offsetof(BP_EventBase_C_GetInput, Action) == 0x000000, "Member 'BP_EventBase_C_GetInput::Action' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetInput, Return) == 0x000001, "Member 'BP_EventBase_C_GetInput::Return' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetInput, Input) == 0x000002, "Member 'BP_EventBase_C_GetInput::Input' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetInput, CallFunc_IsActionPadCheck_Success) == 0x000003, "Member 'BP_EventBase_C_GetInput::CallFunc_IsActionPadCheck_Success' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.TerminateSE
// 0x0008 (0x0008 - 0x0000)
struct BP_EventBase_C_TerminateSE final
{
public:
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_TerminateSE) == 0x000008, "Wrong alignment on BP_EventBase_C_TerminateSE");
static_assert(sizeof(BP_EventBase_C_TerminateSE) == 0x000008, "Wrong size on BP_EventBase_C_TerminateSE");
static_assert(offsetof(BP_EventBase_C_TerminateSE, CallFunc_Get_ReturnValue) == 0x000000, "Member 'BP_EventBase_C_TerminateSE::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.TerminateVoice
// 0x0020 (0x0020 - 0x0000)
struct BP_EventBase_C_TerminateVoice final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventVoice_C*                       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_TerminateVoice) == 0x000008, "Wrong alignment on BP_EventBase_C_TerminateVoice");
static_assert(sizeof(BP_EventBase_C_TerminateVoice) == 0x000020, "Wrong size on BP_EventBase_C_TerminateVoice");
static_assert(offsetof(BP_EventBase_C_TerminateVoice, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EventBase_C_TerminateVoice::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_TerminateVoice, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EventBase_C_TerminateVoice::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_TerminateVoice, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_TerminateVoice::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_TerminateVoice, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_EventBase_C_TerminateVoice::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_TerminateVoice, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_EventBase_C_TerminateVoice::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_TerminateVoice, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_TerminateVoice::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.UpdateVoice
// 0x0020 (0x0020 - 0x0000)
struct BP_EventBase_C_UpdateVoice final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventVoice_C*                       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEnd_End;                               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_UpdateVoice) == 0x000008, "Wrong alignment on BP_EventBase_C_UpdateVoice");
static_assert(sizeof(BP_EventBase_C_UpdateVoice) == 0x000020, "Wrong size on BP_EventBase_C_UpdateVoice");
static_assert(offsetof(BP_EventBase_C_UpdateVoice, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EventBase_C_UpdateVoice::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_UpdateVoice, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EventBase_C_UpdateVoice::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_UpdateVoice, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_UpdateVoice::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_UpdateVoice, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_EventBase_C_UpdateVoice::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_UpdateVoice, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_EventBase_C_UpdateVoice::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_UpdateVoice, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_UpdateVoice::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_UpdateVoice, CallFunc_GetEnd_End) == 0x000019, "Member 'BP_EventBase_C_UpdateVoice::CallFunc_GetEnd_End' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlayVoice
// 0x0090 (0x0090 - 0x0000)
struct BP_EventBase_C_PlayVoice final
{
public:
	class FName                                   Voice;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CharaTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D6E[0xF];                                     // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventVoice_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_PlayVoice) == 0x000010, "Wrong alignment on BP_EventBase_C_PlayVoice");
static_assert(sizeof(BP_EventBase_C_PlayVoice) == 0x000090, "Wrong size on BP_EventBase_C_PlayVoice");
static_assert(offsetof(BP_EventBase_C_PlayVoice, Voice) == 0x000000, "Member 'BP_EventBase_C_PlayVoice::Voice' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayVoice, CharaTag) == 0x000008, "Member 'BP_EventBase_C_PlayVoice::CharaTag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayVoice, CallFunc_GetAllActorsWithTag_OutActors) == 0x000010, "Member 'BP_EventBase_C_PlayVoice::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayVoice, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EventBase_C_PlayVoice::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayVoice, K2Node_DynamicCast_AsChara_Base) == 0x000028, "Member 'BP_EventBase_C_PlayVoice::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayVoice, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_EventBase_C_PlayVoice::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayVoice, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BP_EventBase_C_PlayVoice::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayVoice, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'BP_EventBase_C_PlayVoice::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayVoice, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'BP_EventBase_C_PlayVoice::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayVoice, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'BP_EventBase_C_PlayVoice::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ChangeVolume
// 0x0010 (0x0010 - 0x0000)
struct BP_EventBase_C_ChangeVolume final
{
public:
	EGameVolumeCategory                           Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D6F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Volume;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_ChangeVolume) == 0x000008, "Wrong alignment on BP_EventBase_C_ChangeVolume");
static_assert(sizeof(BP_EventBase_C_ChangeVolume) == 0x000010, "Wrong size on BP_EventBase_C_ChangeVolume");
static_assert(offsetof(BP_EventBase_C_ChangeVolume, Category) == 0x000000, "Member 'BP_EventBase_C_ChangeVolume::Category' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeVolume, Volume) == 0x000004, "Member 'BP_EventBase_C_ChangeVolume::Volume' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangeVolume, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_ChangeVolume::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.StopPriorityBGM
// 0x0010 (0x0010 - 0x0000)
struct BP_EventBase_C_StopPriorityBGM final
{
public:
	float                                         FadeTime;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D70[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_StopPriorityBGM) == 0x000008, "Wrong alignment on BP_EventBase_C_StopPriorityBGM");
static_assert(sizeof(BP_EventBase_C_StopPriorityBGM) == 0x000010, "Wrong size on BP_EventBase_C_StopPriorityBGM");
static_assert(offsetof(BP_EventBase_C_StopPriorityBGM, FadeTime) == 0x000000, "Member 'BP_EventBase_C_StopPriorityBGM::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StopPriorityBGM, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_StopPriorityBGM::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlayPriorityBGM
// 0x0078 (0x0078 - 0x0000)
struct BP_EventBase_C_PlayPriorityBGM final
{
public:
	class FName                                   SoundID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeTime;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D71[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D72[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D73[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AAtomSound*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	class AAtomSound*                             CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D74[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_PlayPriorityBGM) == 0x000008, "Wrong alignment on BP_EventBase_C_PlayPriorityBGM");
static_assert(sizeof(BP_EventBase_C_PlayPriorityBGM) == 0x000078, "Wrong size on BP_EventBase_C_PlayPriorityBGM");
static_assert(offsetof(BP_EventBase_C_PlayPriorityBGM, SoundID) == 0x000000, "Member 'BP_EventBase_C_PlayPriorityBGM::SoundID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayPriorityBGM, FadeTime) == 0x000008, "Member 'BP_EventBase_C_PlayPriorityBGM::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayPriorityBGM, Temp_bool_Has_Been_Initd_Variable) == 0x00000C, "Member 'BP_EventBase_C_PlayPriorityBGM::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayPriorityBGM, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_PlayPriorityBGM::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayPriorityBGM, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_EventBase_C_PlayPriorityBGM::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayPriorityBGM, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_EventBase_C_PlayPriorityBGM::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayPriorityBGM, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_EventBase_C_PlayPriorityBGM::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayPriorityBGM, CallFunc_Get_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_PlayPriorityBGM::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayPriorityBGM, Temp_bool_IsClosed_Variable) == 0x000038, "Member 'BP_EventBase_C_PlayPriorityBGM::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayPriorityBGM, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'BP_EventBase_C_PlayPriorityBGM::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayPriorityBGM, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_EventBase_C_PlayPriorityBGM::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayPriorityBGM, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_EventBase_C_PlayPriorityBGM::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayPriorityBGM, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_EventBase_C_PlayPriorityBGM::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayPriorityBGM, CallFunc_GetObjectName_ReturnValue) == 0x000060, "Member 'BP_EventBase_C_PlayPriorityBGM::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayPriorityBGM, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000070, "Member 'BP_EventBase_C_PlayPriorityBGM::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlayBGM
// 0x0070 (0x0070 - 0x0000)
struct BP_EventBase_C_PlayBGM final
{
public:
	class FName                                   SoundID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeTime;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D75[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AAtomSound*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D76[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAtomSound*                             CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D77[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_PlayBGM) == 0x000008, "Wrong alignment on BP_EventBase_C_PlayBGM");
static_assert(sizeof(BP_EventBase_C_PlayBGM) == 0x000070, "Wrong size on BP_EventBase_C_PlayBGM");
static_assert(offsetof(BP_EventBase_C_PlayBGM, SoundID) == 0x000000, "Member 'BP_EventBase_C_PlayBGM::SoundID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayBGM, FadeTime) == 0x000008, "Member 'BP_EventBase_C_PlayBGM::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayBGM, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_EventBase_C_PlayBGM::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayBGM, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_PlayBGM::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayBGM, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_PlayBGM::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayBGM, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_EventBase_C_PlayBGM::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayBGM, Temp_bool_Has_Been_Initd_Variable) == 0x000028, "Member 'BP_EventBase_C_PlayBGM::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayBGM, Temp_bool_IsClosed_Variable) == 0x000029, "Member 'BP_EventBase_C_PlayBGM::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayBGM, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'BP_EventBase_C_PlayBGM::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayBGM, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_EventBase_C_PlayBGM::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayBGM, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_EventBase_C_PlayBGM::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayBGM, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_EventBase_C_PlayBGM::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayBGM, CallFunc_GetObjectName_ReturnValue) == 0x000058, "Member 'BP_EventBase_C_PlayBGM::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayBGM, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000068, "Member 'BP_EventBase_C_PlayBGM::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.Facial
// 0x0060 (0x0060 - 0x0000)
struct BP_EventBase_C_Facial final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Param_Facial;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaFacialComponent_C> K2Node_DynamicCast_AsBPI_Chara_Facial_Component;   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D78[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharaFaceComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D79[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D7A[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_Facial) == 0x000008, "Wrong alignment on BP_EventBase_C_Facial");
static_assert(sizeof(BP_EventBase_C_Facial) == 0x000060, "Wrong size on BP_EventBase_C_Facial");
static_assert(offsetof(BP_EventBase_C_Facial, Tag) == 0x000000, "Member 'BP_EventBase_C_Facial::Tag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Facial, Param_Facial) == 0x000008, "Member 'BP_EventBase_C_Facial::Param_Facial' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Facial, CallFunc_GetAllActorsWithTag_OutActors) == 0x000010, "Member 'BP_EventBase_C_Facial::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Facial, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_EventBase_C_Facial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Facial, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_EventBase_C_Facial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Facial, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EventBase_C_Facial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Facial, K2Node_DynamicCast_AsBPI_Chara_Facial_Component) == 0x000030, "Member 'BP_EventBase_C_Facial::K2Node_DynamicCast_AsBPI_Chara_Facial_Component' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Facial, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EventBase_C_Facial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Facial, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'BP_EventBase_C_Facial::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Facial, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_EventBase_C_Facial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Facial, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_EventBase_C_Facial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Facial, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_EventBase_C_Facial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Facial, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_EventBase_C_Facial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlayMotionID
// 0x0030 (0x0030 - 0x0000)
struct BP_EventBase_C_PlayMotionID final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      AnimSequence;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D7B[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendTime;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetTime;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EventTime;                                         // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempOffset;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D7C[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      AnimAsset;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_PlayMotionID) == 0x000008, "Wrong alignment on BP_EventBase_C_PlayMotionID");
static_assert(sizeof(BP_EventBase_C_PlayMotionID) == 0x000030, "Wrong size on BP_EventBase_C_PlayMotionID");
static_assert(offsetof(BP_EventBase_C_PlayMotionID, Tag) == 0x000000, "Member 'BP_EventBase_C_PlayMotionID::Tag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionID, AnimSequence) == 0x000008, "Member 'BP_EventBase_C_PlayMotionID::AnimSequence' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionID, IsLoop) == 0x000010, "Member 'BP_EventBase_C_PlayMotionID::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionID, BlendTime) == 0x000014, "Member 'BP_EventBase_C_PlayMotionID::BlendTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionID, OffsetTime) == 0x000018, "Member 'BP_EventBase_C_PlayMotionID::OffsetTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionID, EventTime) == 0x00001C, "Member 'BP_EventBase_C_PlayMotionID::EventTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionID, TempOffset) == 0x000020, "Member 'BP_EventBase_C_PlayMotionID::TempOffset' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotionID, AnimAsset) == 0x000028, "Member 'BP_EventBase_C_PlayMotionID::AnimAsset' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SelectBranch
// 0x0020 (0x0020 - 0x0000)
struct BP_EventBase_C_SelectBranch final
{
public:
	int32                                         Select1;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Select2;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Select3;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Select4;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Return;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnVal;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_SelectBranch) == 0x000004, "Wrong alignment on BP_EventBase_C_SelectBranch");
static_assert(sizeof(BP_EventBase_C_SelectBranch) == 0x000020, "Wrong size on BP_EventBase_C_SelectBranch");
static_assert(offsetof(BP_EventBase_C_SelectBranch, Select1) == 0x000000, "Member 'BP_EventBase_C_SelectBranch::Select1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SelectBranch, Select2) == 0x000004, "Member 'BP_EventBase_C_SelectBranch::Select2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SelectBranch, Select3) == 0x000008, "Member 'BP_EventBase_C_SelectBranch::Select3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SelectBranch, Select4) == 0x00000C, "Member 'BP_EventBase_C_SelectBranch::Select4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SelectBranch, Return) == 0x000010, "Member 'BP_EventBase_C_SelectBranch::Return' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SelectBranch, ReturnVal) == 0x000014, "Member 'BP_EventBase_C_SelectBranch::ReturnVal' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SelectBranch, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_SelectBranch::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SelectBranch, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000019, "Member 'BP_EventBase_C_SelectBranch::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SelectBranch, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00001A, "Member 'BP_EventBase_C_SelectBranch::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SelectBranch, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00001B, "Member 'BP_EventBase_C_SelectBranch::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SelectBranch, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x00001C, "Member 'BP_EventBase_C_SelectBranch::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.LookAtChara
// 0x0090 (0x0090 - 0x0000)
struct BP_EventBase_C_LookAtChara final
{
public:
	class FName                                   CharaTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TargetTag;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D7D[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D7E[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors_1;          // 0x0038(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D7F[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D80[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base_1;                 // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D81[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_LookAtChara) == 0x000008, "Wrong alignment on BP_EventBase_C_LookAtChara");
static_assert(sizeof(BP_EventBase_C_LookAtChara) == 0x000090, "Wrong size on BP_EventBase_C_LookAtChara");
static_assert(offsetof(BP_EventBase_C_LookAtChara, CharaTag) == 0x000000, "Member 'BP_EventBase_C_LookAtChara::CharaTag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, TargetTag) == 0x000008, "Member 'BP_EventBase_C_LookAtChara::TargetTag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, Socket) == 0x000010, "Member 'BP_EventBase_C_LookAtChara::Socket' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, Immediately) == 0x000018, "Member 'BP_EventBase_C_LookAtChara::Immediately' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, CallFunc_GetAllActorsWithTag_OutActors) == 0x000020, "Member 'BP_EventBase_C_LookAtChara::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_LookAtChara::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_EventBase_C_LookAtChara::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, CallFunc_GetAllActorsWithTag_OutActors_1) == 0x000038, "Member 'BP_EventBase_C_LookAtChara::CallFunc_GetAllActorsWithTag_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_EventBase_C_LookAtChara::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BP_EventBase_C_LookAtChara::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_EventBase_C_LookAtChara::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, K2Node_DynamicCast_AsChara_Base) == 0x000058, "Member 'BP_EventBase_C_LookAtChara::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_EventBase_C_LookAtChara::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_EventBase_C_LookAtChara::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_EventBase_C_LookAtChara::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_EventBase_C_LookAtChara::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, Temp_int_Array_Index_Variable_1) == 0x000070, "Member 'BP_EventBase_C_LookAtChara::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, Temp_int_Loop_Counter_Variable_1) == 0x000074, "Member 'BP_EventBase_C_LookAtChara::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_EventBase_C_LookAtChara::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, K2Node_DynamicCast_AsChara_Base_1) == 0x000080, "Member 'BP_EventBase_C_LookAtChara::K2Node_DynamicCast_AsChara_Base_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_EventBase_C_LookAtChara::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, CallFunc_Less_IntInt_ReturnValue_1) == 0x000089, "Member 'BP_EventBase_C_LookAtChara::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtChara, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_EventBase_C_LookAtChara::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.LookAtActor
// 0x00C8 (0x00C8 - 0x0000)
struct BP_EventBase_C_LookAtActor final
{
public:
	class FName                                   CharaTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TargetTag;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D82[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D83[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D84[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventLookAt_C*                      K2Node_DynamicCast_AsBP_Event_Look_At;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D85[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors_1;          // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D86[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Accessor;      // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D87[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Accessor_1;    // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_InvokeLookAtIKImmediately_NoUse;       // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_LookAt_NoUse;                          // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D88[0x5];                                     // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Accessor_2;    // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_LookAt_NoUse_1;                        // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D89[0x1];                                     // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_LookAtActor) == 0x000008, "Wrong alignment on BP_EventBase_C_LookAtActor");
static_assert(sizeof(BP_EventBase_C_LookAtActor) == 0x0000C8, "Wrong size on BP_EventBase_C_LookAtActor");
static_assert(offsetof(BP_EventBase_C_LookAtActor, CharaTag) == 0x000000, "Member 'BP_EventBase_C_LookAtActor::CharaTag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, TargetTag) == 0x000008, "Member 'BP_EventBase_C_LookAtActor::TargetTag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, Immediately) == 0x000010, "Member 'BP_EventBase_C_LookAtActor::Immediately' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_EventBase_C_LookAtActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_LookAtActor::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, CallFunc_GetAllActorsWithTag_OutActors) == 0x000020, "Member 'BP_EventBase_C_LookAtActor::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_EventBase_C_LookAtActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_EventBase_C_LookAtActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, K2Node_DynamicCast_AsBP_Event_Look_At) == 0x000040, "Member 'BP_EventBase_C_LookAtActor::K2Node_DynamicCast_AsBP_Event_Look_At' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_EventBase_C_LookAtActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, CallFunc_GetAllActorsWithTag_OutActors_1) == 0x000050, "Member 'BP_EventBase_C_LookAtActor::CallFunc_GetAllActorsWithTag_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_EventBase_C_LookAtActor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_EventBase_C_LookAtActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_EventBase_C_LookAtActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_EventBase_C_LookAtActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, Temp_int_Array_Index_Variable_1) == 0x000070, "Member 'BP_EventBase_C_LookAtActor::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, Temp_int_Loop_Counter_Variable_1) == 0x000074, "Member 'BP_EventBase_C_LookAtActor::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_EventBase_C_LookAtActor::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, K2Node_DynamicCast_AsBPI_Chara_Base_Accessor) == 0x000080, "Member 'BP_EventBase_C_LookAtActor::K2Node_DynamicCast_AsBPI_Chara_Base_Accessor' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_EventBase_C_LookAtActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, K2Node_DynamicCast_AsBPI_Chara_Base_Accessor_1) == 0x000098, "Member 'BP_EventBase_C_LookAtActor::K2Node_DynamicCast_AsBPI_Chara_Base_Accessor_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'BP_EventBase_C_LookAtActor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, CallFunc_BI_InvokeLookAtIKImmediately_NoUse) == 0x0000A9, "Member 'BP_EventBase_C_LookAtActor::CallFunc_BI_InvokeLookAtIKImmediately_NoUse' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, CallFunc_BI_LookAt_NoUse) == 0x0000AA, "Member 'BP_EventBase_C_LookAtActor::CallFunc_BI_LookAt_NoUse' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, K2Node_DynamicCast_AsBPI_Chara_Base_Accessor_2) == 0x0000B0, "Member 'BP_EventBase_C_LookAtActor::K2Node_DynamicCast_AsBPI_Chara_Base_Accessor_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, K2Node_DynamicCast_bSuccess_3) == 0x0000C0, "Member 'BP_EventBase_C_LookAtActor::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C1, "Member 'BP_EventBase_C_LookAtActor::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, CallFunc_BI_LookAt_NoUse_1) == 0x0000C2, "Member 'BP_EventBase_C_LookAtActor::CallFunc_BI_LookAt_NoUse_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_LookAtActor, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C4, "Member 'BP_EventBase_C_LookAtActor::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlayMotion
// 0x0030 (0x0030 - 0x0000)
struct BP_EventBase_C_PlayMotion final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimSequence;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D8A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendTime;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetTime;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EventTime;                                         // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempOffset;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D8B[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      AnimAsset;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_PlayMotion) == 0x000008, "Wrong alignment on BP_EventBase_C_PlayMotion");
static_assert(sizeof(BP_EventBase_C_PlayMotion) == 0x000030, "Wrong size on BP_EventBase_C_PlayMotion");
static_assert(offsetof(BP_EventBase_C_PlayMotion, Tag) == 0x000000, "Member 'BP_EventBase_C_PlayMotion::Tag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotion, AnimSequence) == 0x000008, "Member 'BP_EventBase_C_PlayMotion::AnimSequence' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotion, IsLoop) == 0x000010, "Member 'BP_EventBase_C_PlayMotion::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotion, BlendTime) == 0x000014, "Member 'BP_EventBase_C_PlayMotion::BlendTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotion, OffsetTime) == 0x000018, "Member 'BP_EventBase_C_PlayMotion::OffsetTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotion, EventTime) == 0x00001C, "Member 'BP_EventBase_C_PlayMotion::EventTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotion, TempOffset) == 0x000020, "Member 'BP_EventBase_C_PlayMotion::TempOffset' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlayMotion, AnimAsset) == 0x000028, "Member 'BP_EventBase_C_PlayMotion::AnimAsset' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlaySE
// 0x0068 (0x0068 - 0x0000)
struct BP_EventBase_C_PlaySE final
{
public:
	class FName                                   SoundID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D8C[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D8D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AAtomSound*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	class AAtomSound*                             CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D8E[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_PlaySE) == 0x000008, "Wrong alignment on BP_EventBase_C_PlaySE");
static_assert(sizeof(BP_EventBase_C_PlaySE) == 0x000068, "Wrong size on BP_EventBase_C_PlaySE");
static_assert(offsetof(BP_EventBase_C_PlaySE, SoundID) == 0x000000, "Member 'BP_EventBase_C_PlaySE::SoundID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySE, CallFunc_Conv_NameToString_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_PlaySE::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySE, Temp_bool_Has_Been_Initd_Variable) == 0x000018, "Member 'BP_EventBase_C_PlaySE::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySE, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_EventBase_C_PlaySE::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySE, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EventBase_C_PlaySE::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySE, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_EventBase_C_PlaySE::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySE, Temp_bool_IsClosed_Variable) == 0x000028, "Member 'BP_EventBase_C_PlaySE::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySE, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'BP_EventBase_C_PlaySE::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySE, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_EventBase_C_PlaySE::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySE, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_EventBase_C_PlaySE::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySE, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_EventBase_C_PlaySE::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySE, CallFunc_GetObjectName_ReturnValue) == 0x000050, "Member 'BP_EventBase_C_PlaySE::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySE, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000060, "Member 'BP_EventBase_C_PlaySE::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetDummyMessage
// 0x003C (0x003C - 0x0000)
struct BP_EventBase_C_SetDummyMessage final
{
public:
	float                                         StartTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventMessage                          K2Node_MakeStruct_EventMessage;                    // 0x0004(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_SetDummyMessage) == 0x000004, "Wrong alignment on BP_EventBase_C_SetDummyMessage");
static_assert(sizeof(BP_EventBase_C_SetDummyMessage) == 0x00003C, "Wrong size on BP_EventBase_C_SetDummyMessage");
static_assert(offsetof(BP_EventBase_C_SetDummyMessage, StartTime) == 0x000000, "Member 'BP_EventBase_C_SetDummyMessage::StartTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetDummyMessage, K2Node_MakeStruct_EventMessage) == 0x000004, "Member 'BP_EventBase_C_SetDummyMessage::K2Node_MakeStruct_EventMessage' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetDummyMessage, Temp_int_Variable) == 0x000034, "Member 'BP_EventBase_C_SetDummyMessage::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetDummyMessage, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_EventBase_C_SetDummyMessage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.IsEndSequence
// 0x0002 (0x0002 - 0x0000)
struct BP_EventBase_C_IsEndSequence final
{
public:
	bool                                          End;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_IsEndSequence) == 0x000001, "Wrong alignment on BP_EventBase_C_IsEndSequence");
static_assert(sizeof(BP_EventBase_C_IsEndSequence) == 0x000002, "Wrong size on BP_EventBase_C_IsEndSequence");
static_assert(offsetof(BP_EventBase_C_IsEndSequence, End) == 0x000000, "Member 'BP_EventBase_C_IsEndSequence::End' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_IsEndSequence, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_EventBase_C_IsEndSequence::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetSelectMessage
// 0x0048 (0x0048 - 0x0000)
struct BP_EventBase_C_SetSelectMessage final
{
public:
	int32                                         MessageID_1;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MessageID_2;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MessageID_3;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MessageID_4;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventMessage                          K2Node_MakeStruct_EventMessage;                    // 0x0010(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_SetSelectMessage) == 0x000004, "Wrong alignment on BP_EventBase_C_SetSelectMessage");
static_assert(sizeof(BP_EventBase_C_SetSelectMessage) == 0x000048, "Wrong size on BP_EventBase_C_SetSelectMessage");
static_assert(offsetof(BP_EventBase_C_SetSelectMessage, MessageID_1) == 0x000000, "Member 'BP_EventBase_C_SetSelectMessage::MessageID_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetSelectMessage, MessageID_2) == 0x000004, "Member 'BP_EventBase_C_SetSelectMessage::MessageID_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetSelectMessage, MessageID_3) == 0x000008, "Member 'BP_EventBase_C_SetSelectMessage::MessageID_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetSelectMessage, MessageID_4) == 0x00000C, "Member 'BP_EventBase_C_SetSelectMessage::MessageID_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetSelectMessage, K2Node_MakeStruct_EventMessage) == 0x000010, "Member 'BP_EventBase_C_SetSelectMessage::K2Node_MakeStruct_EventMessage' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetSelectMessage, Temp_int_Variable) == 0x000040, "Member 'BP_EventBase_C_SetSelectMessage::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetSelectMessage, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_EventBase_C_SetSelectMessage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetMessage
// 0x0054 (0x0054 - 0x0000)
struct BP_EventBase_C_SetMessage final
{
public:
	int32                                         MessageID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTime;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_SkipBlock;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          System;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D8F[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CharaTag;                                          // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceAuto;                                         // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D90[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Param_AutoDelay;                                   // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventMessage                          K2Node_MakeStruct_EventMessage;                    // 0x001C(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_SetMessage) == 0x000004, "Wrong alignment on BP_EventBase_C_SetMessage");
static_assert(sizeof(BP_EventBase_C_SetMessage) == 0x000054, "Wrong size on BP_EventBase_C_SetMessage");
static_assert(offsetof(BP_EventBase_C_SetMessage, MessageID) == 0x000000, "Member 'BP_EventBase_C_SetMessage::MessageID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetMessage, StartTime) == 0x000004, "Member 'BP_EventBase_C_SetMessage::StartTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetMessage, Param_SkipBlock) == 0x000008, "Member 'BP_EventBase_C_SetMessage::Param_SkipBlock' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetMessage, System) == 0x000009, "Member 'BP_EventBase_C_SetMessage::System' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetMessage, CharaTag) == 0x00000C, "Member 'BP_EventBase_C_SetMessage::CharaTag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetMessage, ForceAuto) == 0x000014, "Member 'BP_EventBase_C_SetMessage::ForceAuto' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetMessage, Param_AutoDelay) == 0x000018, "Member 'BP_EventBase_C_SetMessage::Param_AutoDelay' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetMessage, K2Node_MakeStruct_EventMessage) == 0x00001C, "Member 'BP_EventBase_C_SetMessage::K2Node_MakeStruct_EventMessage' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetMessage, Temp_int_Variable) == 0x00004C, "Member 'BP_EventBase_C_SetMessage::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_SetMessage, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_EventBase_C_SetMessage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.IsNextSelect
// 0x0020 (0x0020 - 0x0000)
struct BP_EventBase_C_IsNextSelect final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D91[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNextMessageID_MessageID;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNextMessageID_SkipBlock;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNextMessageID_system;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D92[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetNextMessageID_CharaTag;                // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNextMessageID_ForceAuto;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D93[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetNextMessageID_AutoDelay;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_IsNextSelect) == 0x000004, "Wrong alignment on BP_EventBase_C_IsNextSelect");
static_assert(sizeof(BP_EventBase_C_IsNextSelect) == 0x000020, "Wrong size on BP_EventBase_C_IsNextSelect");
static_assert(offsetof(BP_EventBase_C_IsNextSelect, Return) == 0x000000, "Member 'BP_EventBase_C_IsNextSelect::Return' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_IsNextSelect, CallFunc_GetNextMessageID_MessageID) == 0x000004, "Member 'BP_EventBase_C_IsNextSelect::CallFunc_GetNextMessageID_MessageID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_IsNextSelect, CallFunc_GetNextMessageID_SkipBlock) == 0x000008, "Member 'BP_EventBase_C_IsNextSelect::CallFunc_GetNextMessageID_SkipBlock' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_IsNextSelect, CallFunc_GetNextMessageID_system) == 0x000009, "Member 'BP_EventBase_C_IsNextSelect::CallFunc_GetNextMessageID_system' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_IsNextSelect, CallFunc_GetNextMessageID_CharaTag) == 0x00000C, "Member 'BP_EventBase_C_IsNextSelect::CallFunc_GetNextMessageID_CharaTag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_IsNextSelect, CallFunc_GetNextMessageID_ForceAuto) == 0x000014, "Member 'BP_EventBase_C_IsNextSelect::CallFunc_GetNextMessageID_ForceAuto' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_IsNextSelect, CallFunc_GetNextMessageID_AutoDelay) == 0x000018, "Member 'BP_EventBase_C_IsNextSelect::CallFunc_GetNextMessageID_AutoDelay' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_IsNextSelect, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EventBase_C_IsNextSelect::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.IsNextMessage
// 0x0002 (0x0002 - 0x0000)
struct BP_EventBase_C_IsNextMessage final
{
public:
	bool                                          Next;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_IsNextMessage) == 0x000001, "Wrong alignment on BP_EventBase_C_IsNextMessage");
static_assert(sizeof(BP_EventBase_C_IsNextMessage) == 0x000002, "Wrong size on BP_EventBase_C_IsNextMessage");
static_assert(offsetof(BP_EventBase_C_IsNextMessage, Next) == 0x000000, "Member 'BP_EventBase_C_IsNextMessage::Next' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_IsNextMessage, CallFunc_Less_IntInt_ReturnValue) == 0x000001, "Member 'BP_EventBase_C_IsNextMessage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.GetNextMessageID
// 0x004C (0x004C - 0x0000)
struct BP_EventBase_C_GetNextMessageID final
{
public:
	int32                                         MessageID;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_SkipBlock;                                   // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          System;                                            // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D94[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CharaTag;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceAuto;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D95[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Param_AutoDelay;                                   // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D96[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventMessage                          CallFunc_Array_Get_Item;                           // 0x001C(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_GetNextMessageID) == 0x000004, "Wrong alignment on BP_EventBase_C_GetNextMessageID");
static_assert(sizeof(BP_EventBase_C_GetNextMessageID) == 0x00004C, "Wrong size on BP_EventBase_C_GetNextMessageID");
static_assert(offsetof(BP_EventBase_C_GetNextMessageID, MessageID) == 0x000000, "Member 'BP_EventBase_C_GetNextMessageID::MessageID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetNextMessageID, Param_SkipBlock) == 0x000004, "Member 'BP_EventBase_C_GetNextMessageID::Param_SkipBlock' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetNextMessageID, System) == 0x000005, "Member 'BP_EventBase_C_GetNextMessageID::System' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetNextMessageID, CharaTag) == 0x000008, "Member 'BP_EventBase_C_GetNextMessageID::CharaTag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetNextMessageID, ForceAuto) == 0x000010, "Member 'BP_EventBase_C_GetNextMessageID::ForceAuto' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetNextMessageID, Param_AutoDelay) == 0x000014, "Member 'BP_EventBase_C_GetNextMessageID::Param_AutoDelay' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetNextMessageID, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_EventBase_C_GetNextMessageID::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetNextMessageID, CallFunc_Array_Get_Item) == 0x00001C, "Member 'BP_EventBase_C_GetNextMessageID::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.GetNextMessageTime
// 0x0038 (0x0038 - 0x0000)
struct BP_EventBase_C_GetNextMessageTime final
{
public:
	float                                         NextTime;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D97[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventMessage                          CallFunc_Array_Get_Item;                           // 0x0008(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_GetNextMessageTime) == 0x000004, "Wrong alignment on BP_EventBase_C_GetNextMessageTime");
static_assert(sizeof(BP_EventBase_C_GetNextMessageTime) == 0x000038, "Wrong size on BP_EventBase_C_GetNextMessageTime");
static_assert(offsetof(BP_EventBase_C_GetNextMessageTime, NextTime) == 0x000000, "Member 'BP_EventBase_C_GetNextMessageTime::NextTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetNextMessageTime, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_EventBase_C_GetNextMessageTime::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_GetNextMessageTime, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_EventBase_C_GetNextMessageTime::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ChangePlayRate
// 0x01B0 (0x01B0 - 0x0000)
struct BP_EventBase_C_ChangePlayRate final
{
public:
	float                                         Param_PlayRate;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D98[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AMobBase_C*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D99[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMobBase_C*                             CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_Rate;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACharaBaseLight_C*>              CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0070(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D9A[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASkeletalMeshActor*>             CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x0090(0x0010)(ReferenceParm)
	class ASkeletalMeshActor*                     CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D9B[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D9C[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_Rate_1;                           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D9D[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharaBase_C*>                   CallFunc_GetAllActorsOfClass_OutActors_3;          // 0x00D0(0x0010)(ReferenceParm)
	class ACharaBase_C*                           CallFunc_Array_Get_Item_2;                         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue_2;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_Rate_2;                           // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D9E[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D9F[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBaseLight_C*                      CallFunc_Array_Get_Item_3;                         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue_3;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_Rate_3;                           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNextPage_ret;                           // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DA0[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNextMessageID_MessageID;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNextMessageID_SkipBlock;               // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNextMessageID_system;                  // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DA1[0x2];                                     // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetNextMessageID_CharaTag;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNextMessageID_ForceAuto;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DA2[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetNextMessageID_AutoDelay;               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DA3[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AEmitter*>                       CallFunc_GetAllActorsOfClass_OutActors_4;          // 0x0168(0x0010)(ReferenceParm)
	float                                         CallFunc_CheckEventEmitterRate_ReturnValue;        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DA4[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEmitter*                               CallFunc_Array_Get_Item_4;                         // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DA5[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DA6[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DA7[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_ChangePlayRate) == 0x000008, "Wrong alignment on BP_EventBase_C_ChangePlayRate");
static_assert(sizeof(BP_EventBase_C_ChangePlayRate) == 0x0001B0, "Wrong size on BP_EventBase_C_ChangePlayRate");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, Param_PlayRate) == 0x000000, "Member 'BP_EventBase_C_ChangePlayRate::Param_PlayRate' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EventBase_C_ChangePlayRate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_EventBase_C_ChangePlayRate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_EventBase_C_ChangePlayRate::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_EventBase_C_ChangePlayRate::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'BP_EventBase_C_ChangePlayRate::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, Temp_int_Loop_Counter_Variable_2) == 0x000024, "Member 'BP_EventBase_C_ChangePlayRate::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, Temp_int_Array_Index_Variable_3) == 0x00002C, "Member 'BP_EventBase_C_ChangePlayRate::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, Temp_int_Loop_Counter_Variable_3) == 0x000040, "Member 'BP_EventBase_C_ChangePlayRate::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetObjectName_ReturnValue) == 0x000050, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetRate_Rate) == 0x000060, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetRate_Rate' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Add_IntInt_ReturnValue_3) == 0x000064, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000070, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, Temp_int_Variable) == 0x000084, "Member 'BP_EventBase_C_ChangePlayRate::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x000090, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Array_Length_ReturnValue_2) == 0x0000A8, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetObjectName_ReturnValue_1) == 0x0000B0, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetRate_Rate_1) == 0x0000C4, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetRate_Rate_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000C8, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetAllActorsOfClass_OutActors_3) == 0x0000D0, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetAllActorsOfClass_OutActors_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Array_Get_Item_2) == 0x0000E0, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetObjectName_ReturnValue_2) == 0x0000E8, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetObjectName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetRate_Rate_2) == 0x0000F8, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetRate_Rate_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Array_Length_ReturnValue_3) == 0x0000FC, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000100, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Less_IntInt_ReturnValue_2) == 0x000104, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, Temp_int_Array_Index_Variable_4) == 0x000108, "Member 'BP_EventBase_C_ChangePlayRate::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Array_Get_Item_3) == 0x000110, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetObjectName_ReturnValue_3) == 0x000118, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetObjectName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetRate_Rate_3) == 0x000128, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetRate_Rate_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Add_IntInt_ReturnValue_4) == 0x00012C, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000130, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_IsNextPage_ret) == 0x000134, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_IsNextPage_ret' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetNextMessageID_MessageID) == 0x000138, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetNextMessageID_MessageID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetNextMessageID_SkipBlock) == 0x00013C, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetNextMessageID_SkipBlock' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetNextMessageID_system) == 0x00013D, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetNextMessageID_system' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetNextMessageID_CharaTag) == 0x000140, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetNextMessageID_CharaTag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetNextMessageID_ForceAuto) == 0x000148, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetNextMessageID_ForceAuto' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetNextMessageID_AutoDelay) == 0x00014C, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetNextMessageID_AutoDelay' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000150, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Conv_FloatToString_ReturnValue) == 0x000158, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetAllActorsOfClass_OutActors_4) == 0x000168, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetAllActorsOfClass_OutActors_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_CheckEventEmitterRate_ReturnValue) == 0x000178, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_CheckEventEmitterRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Array_Get_Item_4) == 0x000180, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Array_Length_ReturnValue_4) == 0x000188, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Less_IntInt_ReturnValue_3) == 0x00018C, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, Temp_int_Loop_Counter_Variable_4) == 0x000190, "Member 'BP_EventBase_C_ChangePlayRate::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_GetSequencePlayer_ReturnValue) == 0x000198, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Less_IntInt_ReturnValue_4) == 0x0001A0, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_Add_IntInt_ReturnValue_5) == 0x0001A4, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ChangePlayRate, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x0001A8, "Member 'BP_EventBase_C_ChangePlayRate::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.DrawSelect
// 0x0040 (0x0040 - 0x0000)
struct BP_EventBase_C_DrawSelect final
{
public:
	struct FEventMessage                          CallFunc_Array_Get_Item;                           // 0x0000(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_EventBase_C_DrawSelect) == 0x000008, "Wrong alignment on BP_EventBase_C_DrawSelect");
static_assert(sizeof(BP_EventBase_C_DrawSelect) == 0x000040, "Wrong size on BP_EventBase_C_DrawSelect");
static_assert(offsetof(BP_EventBase_C_DrawSelect, CallFunc_Array_Get_Item) == 0x000000, "Member 'BP_EventBase_C_DrawSelect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawSelect, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_EventBase_C_DrawSelect::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ClearText
// 0x0001 (0x0001 - 0x0000)
struct BP_EventBase_C_ClearText final
{
public:
	bool                                          VoiceOnlyStop;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_ClearText) == 0x000001, "Wrong alignment on BP_EventBase_C_ClearText");
static_assert(sizeof(BP_EventBase_C_ClearText) == 0x000001, "Wrong size on BP_EventBase_C_ClearText");
static_assert(offsetof(BP_EventBase_C_ClearText, VoiceOnlyStop) == 0x000000, "Member 'BP_EventBase_C_ClearText::VoiceOnlyStop' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.DrawText
// 0x0128 (0x0128 - 0x0000)
struct BP_EventBase_C_DrawText final
{
public:
	int32                                         MessageID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          System;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DA8[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CharaTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceAuto;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DA9[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Param_AutoDelay;                                   // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaLipSync_C>   LipSyncChara;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MESSAGE_TYPE                                MessType;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DAA[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTextFixTime_FixTime;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DAB[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBaseLight_C*                      K2Node_DynamicCast_AsChara_Base_Light;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DAC[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DAD[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IS_SHIPPING_BUILD_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DAE[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScriptMessage                         CallFunc_Array_Get_Item_1;                         // 0x0088(0x0040)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DAF[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DB0[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DB1[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_DrawText) == 0x000008, "Wrong alignment on BP_EventBase_C_DrawText");
static_assert(sizeof(BP_EventBase_C_DrawText) == 0x000128, "Wrong size on BP_EventBase_C_DrawText");
static_assert(offsetof(BP_EventBase_C_DrawText, MessageID) == 0x000000, "Member 'BP_EventBase_C_DrawText::MessageID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, System) == 0x000004, "Member 'BP_EventBase_C_DrawText::System' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CharaTag) == 0x000008, "Member 'BP_EventBase_C_DrawText::CharaTag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, ForceAuto) == 0x000010, "Member 'BP_EventBase_C_DrawText::ForceAuto' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, Param_AutoDelay) == 0x000014, "Member 'BP_EventBase_C_DrawText::Param_AutoDelay' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, LipSyncChara) == 0x000018, "Member 'BP_EventBase_C_DrawText::LipSyncChara' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, MessType) == 0x000028, "Member 'BP_EventBase_C_DrawText::MessType' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CallFunc_GetAllActorsWithTag_OutActors) == 0x000030, "Member 'BP_EventBase_C_DrawText::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_EventBase_C_DrawText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CallFunc_GetTextFixTime_FixTime) == 0x000044, "Member 'BP_EventBase_C_DrawText::CallFunc_GetTextFixTime_FixTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_EventBase_C_DrawText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_EventBase_C_DrawText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, K2Node_DynamicCast_AsChara_Base_Light) == 0x000058, "Member 'BP_EventBase_C_DrawText::K2Node_DynamicCast_AsChara_Base_Light' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_EventBase_C_DrawText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, K2Node_DynamicCast_AsChara_Base) == 0x000068, "Member 'BP_EventBase_C_DrawText::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_EventBase_C_DrawText::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'BP_EventBase_C_DrawText::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BP_EventBase_C_DrawText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_EventBase_C_DrawText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CallFunc_IS_SHIPPING_BUILD_ReturnValue) == 0x000080, "Member 'BP_EventBase_C_DrawText::CallFunc_IS_SHIPPING_BUILD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, Temp_int_Loop_Counter_Variable_1) == 0x000084, "Member 'BP_EventBase_C_DrawText::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'BP_EventBase_C_DrawText::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_EventBase_C_DrawText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CallFunc_Conv_NameToString_ReturnValue) == 0x0000D0, "Member 'BP_EventBase_C_DrawText::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_EventBase_C_DrawText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E4, "Member 'BP_EventBase_C_DrawText::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'BP_EventBase_C_DrawText::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000EC, "Member 'BP_EventBase_C_DrawText::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CallFunc_Conv_FloatToString_ReturnValue) == 0x0000F0, "Member 'BP_EventBase_C_DrawText::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CallFunc_Concat_StrStr_ReturnValue) == 0x000100, "Member 'BP_EventBase_C_DrawText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000110, "Member 'BP_EventBase_C_DrawText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_DrawText, CallFunc_Array_Add_ReturnValue) == 0x000120, "Member 'BP_EventBase_C_DrawText::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.WaitSequence
// 0x0220 (0x0220 - 0x0000)
struct BP_EventBase_C_WaitSequence final
{
public:
	bool                                          PrintTime;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DB2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DB3[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DB4[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DB5[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_3;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInput_Return;                          // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInput_Return_1;                        // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInput_Return_2;                        // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInput_Return_3;                        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DB6[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DB7[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DB8[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_4;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DB9[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DBA[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNextMessageID_MessageID;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNextMessageID_SkipBlock;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNextMessageID_system;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DBB[0x2];                                     // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetNextMessageID_CharaTag;                // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNextMessageID_ForceAuto;               // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DBC[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetNextMessageID_AutoDelay;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DBD[0x1];                                     // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetNextMessageTime_NextTime;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_5;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_2;                  // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNextPage_ret;                           // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DBE[0x1];                                     // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetNextMessageTime_NextTime_1;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DBF[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNextMessageID_MessageID_1;             // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNextMessageID_SkipBlock_1;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNextMessageID_system_1;                // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DC0[0x2];                                     // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetNextMessageID_CharaTag_1;              // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNextMessageID_ForceAuto_1;             // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DC1[0x3];                                     // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetNextMessageID_AutoDelay_1;             // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetNextMessageTime_NextTime_2;            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DC2[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DC3[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_6;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTime_ReturnValue;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNextMessage_Next;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DC4[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DC5[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DC6[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAtomSound*                             CallFunc_Array_Get_Item;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DC7[0x2];                                     // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Choice_GetSelData_CursorIndex;            // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Choice_GetSelData_MessageId;              // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Choice_GetSelData_MessageLabel;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Choice_MoveCursor_IsMove;                 // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Choice_MoveCursor_IsMove_1;               // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DC8[0x2];                                     // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNextSelect_return;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DC9[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNextSelect_return_1;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebugCutName_NewParam;                  // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DCA[0x5];                                     // 0x018B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPageCompleted_IsComplet;                // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DCB[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetViewportSize_SizeX;                    // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeY;                    // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DCC[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMessageCompleted_IsComplet;             // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNextMessage_Next_1;                     // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNextMessage_Next_2;                     // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DCD[0x1];                                     // 0x01DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DCE[0x4];                                     // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetNextMessageTime_NextTime_3;            // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTime_ReturnValue_1;                // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_3;    // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DCF[0x3];                                     // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_7;          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_3;                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DD0[0x3];                                     // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTime_ReturnValue_2;                // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_WaitSequence) == 0x000008, "Wrong alignment on BP_EventBase_C_WaitSequence");
static_assert(sizeof(BP_EventBase_C_WaitSequence) == 0x000220, "Wrong size on BP_EventBase_C_WaitSequence");
static_assert(offsetof(BP_EventBase_C_WaitSequence, PrintTime) == 0x000000, "Member 'BP_EventBase_C_WaitSequence::PrintTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_EventBase_C_WaitSequence::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000002, "Member 'BP_EventBase_C_WaitSequence::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_EventBase_C_WaitSequence::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetSequencePlayer_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsPlaying_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000018, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000020, "Member 'BP_EventBase_C_WaitSequence::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000021, "Member 'BP_EventBase_C_WaitSequence::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_BooleanOR_ReturnValue_1) == 0x000022, "Member 'BP_EventBase_C_WaitSequence::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_BooleanOR_ReturnValue_2) == 0x000023, "Member 'BP_EventBase_C_WaitSequence::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x000030, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_EventBase_C_WaitSequence::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetSequencePlayer_ReturnValue_3) == 0x000040, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetSequencePlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000048, "Member 'BP_EventBase_C_WaitSequence::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x00004A, "Member 'BP_EventBase_C_WaitSequence::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_BooleanOR_ReturnValue_3) == 0x00004B, "Member 'BP_EventBase_C_WaitSequence::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsValid_ReturnValue_1) == 0x00004C, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetInput_Return) == 0x00004D, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetInput_Return' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetInput_Return_1) == 0x00004E, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetInput_Return_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetInput_Return_2) == 0x00004F, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetInput_Return_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetInput_Return_3) == 0x000050, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetInput_Return_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'BP_EventBase_C_WaitSequence::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetDisplayName_ReturnValue) == 0x000058, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsValid_ReturnValue_2) == 0x000068, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000080, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetPlayerController_ReturnValue) == 0x000090, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, Temp_int_Array_Index_Variable) == 0x000098, "Member 'BP_EventBase_C_WaitSequence::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetSequencePlayer_ReturnValue_4) == 0x0000A0, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetSequencePlayer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsPlaying_ReturnValue_1) == 0x0000A8, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000B0, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsValid_ReturnValue_3) == 0x0000B8, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, Temp_int_Variable) == 0x0000BC, "Member 'BP_EventBase_C_WaitSequence::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetNextMessageID_MessageID) == 0x0000C4, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetNextMessageID_MessageID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetNextMessageID_SkipBlock) == 0x0000C8, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetNextMessageID_SkipBlock' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetNextMessageID_system) == 0x0000C9, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetNextMessageID_system' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetNextMessageID_CharaTag) == 0x0000CC, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetNextMessageID_CharaTag' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetNextMessageID_ForceAuto) == 0x0000D4, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetNextMessageID_ForceAuto' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetNextMessageID_AutoDelay) == 0x0000D8, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetNextMessageID_AutoDelay' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000DC, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x0000E0, "Member 'BP_EventBase_C_WaitSequence::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_BooleanOR_ReturnValue_4) == 0x0000E1, "Member 'BP_EventBase_C_WaitSequence::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsValid_ReturnValue_4) == 0x0000E2, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetNextMessageTime_NextTime) == 0x0000E4, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetNextMessageTime_NextTime' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetSequencePlayer_ReturnValue_5) == 0x0000E8, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetSequencePlayer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000F0, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsPlaying_ReturnValue_2) == 0x0000F1, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsNextPage_ret) == 0x0000F2, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsNextPage_ret' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetNextMessageTime_NextTime_1) == 0x0000F4, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetNextMessageTime_NextTime_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Abs_ReturnValue) == 0x0000F8, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000FC, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000100, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetNextMessageID_MessageID_1) == 0x000104, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetNextMessageID_MessageID_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetNextMessageID_SkipBlock_1) == 0x000108, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetNextMessageID_SkipBlock_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetNextMessageID_system_1) == 0x000109, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetNextMessageID_system_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetNextMessageID_CharaTag_1) == 0x00010C, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetNextMessageID_CharaTag_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetNextMessageID_ForceAuto_1) == 0x000114, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetNextMessageID_ForceAuto_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetNextMessageID_AutoDelay_1) == 0x000118, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetNextMessageID_AutoDelay_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetNextMessageTime_NextTime_2) == 0x00011C, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetNextMessageTime_NextTime_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000120, "Member 'BP_EventBase_C_WaitSequence::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Abs_ReturnValue_1) == 0x000124, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000128, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00012C, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetSequencePlayer_ReturnValue_6) == 0x000130, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetSequencePlayer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000138, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetPlayTime_ReturnValue) == 0x00013C, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetPlayTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsNextMessage_Next) == 0x000140, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsNextMessage_Next' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000144, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000148, "Member 'BP_EventBase_C_WaitSequence::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, Temp_int_Loop_Counter_Variable) == 0x00014C, "Member 'BP_EventBase_C_WaitSequence::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Add_IntInt_ReturnValue_4) == 0x000150, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Array_Get_Item) == 0x000158, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsValid_ReturnValue_5) == 0x000164, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Less_IntInt_ReturnValue) == 0x000165, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Choice_GetSelData_CursorIndex) == 0x000168, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Choice_GetSelData_CursorIndex' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Choice_GetSelData_MessageId) == 0x00016C, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Choice_GetSelData_MessageId' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Choice_GetSelData_MessageLabel) == 0x000170, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Choice_GetSelData_MessageLabel' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Choice_MoveCursor_IsMove) == 0x000178, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Choice_MoveCursor_IsMove' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Choice_MoveCursor_IsMove_1) == 0x000179, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Choice_MoveCursor_IsMove_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, Temp_int_Variable_1) == 0x00017C, "Member 'BP_EventBase_C_WaitSequence::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsNextSelect_return) == 0x000180, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsNextSelect_return' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Add_IntInt_ReturnValue_5) == 0x000184, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsNextSelect_return_1) == 0x000188, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsNextSelect_return_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsDebugCutName_NewParam) == 0x000189, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsDebugCutName_NewParam' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_BooleanOR_ReturnValue_5) == 0x00018A, "Member 'BP_EventBase_C_WaitSequence::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetPlayerController_ReturnValue_2) == 0x000190, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsPageCompleted_IsComplet) == 0x000198, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsPageCompleted_IsComplet' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetViewportSize_SizeX) == 0x00019C, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetViewportSize_SizeX' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetViewportSize_SizeY) == 0x0001A0, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetViewportSize_SizeY' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Conv_IntToString_ReturnValue) == 0x0001A8, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001B8, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0001C8, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, Temp_int_Variable_2) == 0x0001D8, "Member 'BP_EventBase_C_WaitSequence::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsMessageCompleted_IsComplet) == 0x0001DC, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsMessageCompleted_IsComplet' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsNextMessage_Next_1) == 0x0001DD, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsNextMessage_Next_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsNextMessage_Next_2) == 0x0001DE, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsNextMessage_Next_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, Temp_int_Variable_3) == 0x0001E0, "Member 'BP_EventBase_C_WaitSequence::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetPlayerController_ReturnValue_3) == 0x0001E8, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, Temp_int_Variable_4) == 0x0001F0, "Member 'BP_EventBase_C_WaitSequence::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetNextMessageTime_NextTime_3) == 0x0001F4, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetNextMessageTime_NextTime_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetPlayTime_ReturnValue_1) == 0x0001F8, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetPlayTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GreaterEqual_FloatFloat_ReturnValue_3) == 0x0001FC, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GreaterEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetSequencePlayer_ReturnValue_7) == 0x000200, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetSequencePlayer_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_IsPlaying_ReturnValue_3) == 0x000208, "Member 'BP_EventBase_C_WaitSequence::CallFunc_IsPlaying_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_GetPlayTime_ReturnValue_2) == 0x00020C, "Member 'BP_EventBase_C_WaitSequence::CallFunc_GetPlayTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_WaitSequence, CallFunc_Conv_FloatToString_ReturnValue) == 0x000210, "Member 'BP_EventBase_C_WaitSequence::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.PlaySequence
// 0x0050 (0x0050 - 0x0000)
struct BP_EventBase_C_PlaySequence final
{
public:
	class ALevelSequenceActor*                    Sequencer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACineCameraActor*                       CineCamera;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneObjectBindingID             BindID;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_FadeEnd;                                     // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Play;                                              // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DD1[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FadeIn_BeforeColor_ReturnValue;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_PlaySequence) == 0x000008, "Wrong alignment on BP_EventBase_C_PlaySequence");
static_assert(sizeof(BP_EventBase_C_PlaySequence) == 0x000050, "Wrong size on BP_EventBase_C_PlaySequence");
static_assert(offsetof(BP_EventBase_C_PlaySequence, Sequencer) == 0x000000, "Member 'BP_EventBase_C_PlaySequence::Sequencer' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySequence, CineCamera) == 0x000008, "Member 'BP_EventBase_C_PlaySequence::CineCamera' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySequence, BindID) == 0x000010, "Member 'BP_EventBase_C_PlaySequence::BindID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySequence, Param_FadeEnd) == 0x000028, "Member 'BP_EventBase_C_PlaySequence::Param_FadeEnd' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySequence, Play) == 0x000029, "Member 'BP_EventBase_C_PlaySequence::Play' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySequence, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'BP_EventBase_C_PlaySequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySequence, CallFunc_GetObjectName_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_PlaySequence::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySequence, CallFunc_GetSequencePlayer_ReturnValue) == 0x000040, "Member 'BP_EventBase_C_PlaySequence::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySequence, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_EventBase_C_PlaySequence::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_PlaySequence, CallFunc_FadeIn_BeforeColor_ReturnValue) == 0x000049, "Member 'BP_EventBase_C_PlaySequence::CallFunc_FadeIn_BeforeColor_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.Set Activate
// 0x0001 (0x0001 - 0x0000)
struct BP_EventBase_C_Set_Activate final
{
public:
	bool                                          Param_Activate;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_Set_Activate) == 0x000001, "Wrong alignment on BP_EventBase_C_Set_Activate");
static_assert(sizeof(BP_EventBase_C_Set_Activate) == 0x000001, "Wrong size on BP_EventBase_C_Set_Activate");
static_assert(offsetof(BP_EventBase_C_Set_Activate, Param_Activate) == 0x000000, "Member 'BP_EventBase_C_Set_Activate::Param_Activate' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.StepFinal
// 0x0100 (0x0100 - 0x0000)
struct BP_EventBase_C_StepFinal final
{
public:
	bool                                          IsFade;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AutoFadeOut;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoResetVolume;                                     // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoStopPrioBGM;                                     // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_UI_FADE_STATE                               CallFunc_GetFadeState_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DD2[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DD3[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DD4[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_DGPostProcessControl_C> K2Node_DynamicCast_AsBPI_DGPost_Process_Control;   // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DD5[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_SetEnableRate_Dummy;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DD6[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMouseCursorState                      CallFunc_PopShowMouseCursor_ReturnValue;           // 0x0058(0x0018)()
	bool                                          CallFunc_BPL_ReadyEncountSceneFade_Ready;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FadeOut_Black_ReturnValue;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DD7[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventInstance_C>  K2Node_DynamicCast_AsBPI_Event_Instance;           // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_SetEventBase_NoUse;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_UI_FADE_STATE                               CallFunc_GetFadeState_ReturnValue_1;               // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DD8[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectGCManager*                      CallFunc_Get_ReturnValue_1;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerBase_C*                          K2Node_DynamicCast_AsPlayer_Base;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IS_SHIPPING_BUILD_ReturnValue;            // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DD9[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue_2;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DDA[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_UI_FADE_STATE                               CallFunc_GetFadeState_ReturnValue_2;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DDB[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FadeOut_Black_ReturnValue_1;              // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DDC[0x1];                                     // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DDD[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_StepFinal) == 0x000008, "Wrong alignment on BP_EventBase_C_StepFinal");
static_assert(sizeof(BP_EventBase_C_StepFinal) == 0x000100, "Wrong size on BP_EventBase_C_StepFinal");
static_assert(offsetof(BP_EventBase_C_StepFinal, IsFade) == 0x000000, "Member 'BP_EventBase_C_StepFinal::IsFade' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, AutoFadeOut) == 0x000001, "Member 'BP_EventBase_C_StepFinal::AutoFadeOut' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, NoResetVolume) == 0x000002, "Member 'BP_EventBase_C_StepFinal::NoResetVolume' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, NoStopPrioBGM) == 0x000003, "Member 'BP_EventBase_C_StepFinal::NoStopPrioBGM' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_EventBase_C_StepFinal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_GetFadeState_ReturnValue) == 0x000005, "Member 'BP_EventBase_C_StepFinal::CallFunc_GetFadeState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'BP_EventBase_C_StepFinal::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_StepFinal::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_StepFinal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000018, "Member 'BP_EventBase_C_StepFinal::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'BP_EventBase_C_StepFinal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_EventBase_C_StepFinal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, K2Node_DynamicCast_AsBPI_DGPost_Process_Control) == 0x000038, "Member 'BP_EventBase_C_StepFinal::K2Node_DynamicCast_AsBPI_DGPost_Process_Control' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_EventBase_C_StepFinal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_EventBase_C_StepFinal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_BPI_SetEnableRate_Dummy) == 0x000050, "Member 'BP_EventBase_C_StepFinal::CallFunc_BPI_SetEnableRate_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_Greater_IntInt_ReturnValue) == 0x000051, "Member 'BP_EventBase_C_StepFinal::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_PopShowMouseCursor_ReturnValue) == 0x000058, "Member 'BP_EventBase_C_StepFinal::CallFunc_PopShowMouseCursor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_BPL_ReadyEncountSceneFade_Ready) == 0x000070, "Member 'BP_EventBase_C_StepFinal::CallFunc_BPL_ReadyEncountSceneFade_Ready' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_FadeOut_Black_ReturnValue) == 0x000071, "Member 'BP_EventBase_C_StepFinal::CallFunc_FadeOut_Black_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_GetGameInstance_ReturnValue) == 0x000078, "Member 'BP_EventBase_C_StepFinal::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, K2Node_DynamicCast_AsBPI_Event_Instance) == 0x000080, "Member 'BP_EventBase_C_StepFinal::K2Node_DynamicCast_AsBPI_Event_Instance' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_EventBase_C_StepFinal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_BPI_SetEventBase_NoUse) == 0x000091, "Member 'BP_EventBase_C_StepFinal::CallFunc_BPI_SetEventBase_NoUse' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_GetFadeState_ReturnValue_1) == 0x000092, "Member 'BP_EventBase_C_StepFinal::CallFunc_GetFadeState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000093, "Member 'BP_EventBase_C_StepFinal::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_BooleanOR_ReturnValue) == 0x000094, "Member 'BP_EventBase_C_StepFinal::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_GetPlayerPawn_ReturnValue) == 0x000098, "Member 'BP_EventBase_C_StepFinal::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_Get_ReturnValue_1) == 0x0000A0, "Member 'BP_EventBase_C_StepFinal::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, K2Node_DynamicCast_AsPlayer_Base) == 0x0000A8, "Member 'BP_EventBase_C_StepFinal::K2Node_DynamicCast_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'BP_EventBase_C_StepFinal::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_IS_SHIPPING_BUILD_ReturnValue) == 0x0000B1, "Member 'BP_EventBase_C_StepFinal::CallFunc_IS_SHIPPING_BUILD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_Array_Length_ReturnValue_1) == 0x0000B4, "Member 'BP_EventBase_C_StepFinal::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_Get_ReturnValue_2) == 0x0000B8, "Member 'BP_EventBase_C_StepFinal::CallFunc_Get_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'BP_EventBase_C_StepFinal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'BP_EventBase_C_StepFinal::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_GetFadeState_ReturnValue_2) == 0x0000D8, "Member 'BP_EventBase_C_StepFinal::CallFunc_GetFadeState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000E0, "Member 'BP_EventBase_C_StepFinal::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000F0, "Member 'BP_EventBase_C_StepFinal::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_FadeOut_Black_ReturnValue_1) == 0x0000F1, "Member 'BP_EventBase_C_StepFinal::CallFunc_FadeOut_Black_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_IsValid_ReturnValue_1) == 0x0000F2, "Member 'BP_EventBase_C_StepFinal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, Temp_int_Loop_Counter_Variable) == 0x0000F4, "Member 'BP_EventBase_C_StepFinal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_EventBase_C_StepFinal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFinal, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_EventBase_C_StepFinal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.StepFirst
// 0x0160 (0x0160 - 0x0000)
struct BP_EventBase_C_StepFirst final
{
public:
	class FString                                 Param_EventId;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          NoBGM;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoChangeScene;                                     // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoAutoFade;                                        // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PlayerHidden;                                      // 0x0013(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Param_MaxFPS;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Next;                                              // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DDE[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DDF[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_DGPostProcessControl_C> K2Node_DynamicCast_AsBPI_DGPost_Process_Control;   // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DE0[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_SetEnableRate_Dummy;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DE1[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventInstance_C>  K2Node_DynamicCast_AsBPI_Event_Instance;           // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DE2[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventDefaultAO_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_SetEventBase_NoUse;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DE3[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetECSActorsThisLevel_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DE4[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAtomSound*                             K2Node_DynamicCast_AsAtom_Sound;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DE5[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectGCManager*                      CallFunc_Get_ReturnValue;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCueSheet*                     CallFunc_LoadAtomCueSheet_ReturnValue;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue_1;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameVolume_ReturnValue;                // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameVolume_ReturnValue_1;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameVolume_ReturnValue_2;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxFPS_ReturnValue;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetMovieSubtitleType_ReturnValue;         // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DE6[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerBase_C*                          CallFunc_GetActivePlayer_Player;                   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PLAYER_MANAGER_TYPE                         CallFunc_GetActivePlayer_E_Type;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_UI_FADE_STATE                               CallFunc_GetFadeState_ReturnValue;                 // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DE7[0x2];                                     // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue_2;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetBGM_ReturnValue;                       // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetQuestMapBGM_ReturnValue;               // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetCurrentBGM_ReturnValue;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DE8[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          K2Node_Select_Default;                             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_StepFirst) == 0x000010, "Wrong alignment on BP_EventBase_C_StepFirst");
static_assert(sizeof(BP_EventBase_C_StepFirst) == 0x000160, "Wrong size on BP_EventBase_C_StepFirst");
static_assert(offsetof(BP_EventBase_C_StepFirst, Param_EventId) == 0x000000, "Member 'BP_EventBase_C_StepFirst::Param_EventId' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, NoBGM) == 0x000010, "Member 'BP_EventBase_C_StepFirst::NoBGM' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, NoChangeScene) == 0x000011, "Member 'BP_EventBase_C_StepFirst::NoChangeScene' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, NoAutoFade) == 0x000012, "Member 'BP_EventBase_C_StepFirst::NoAutoFade' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, PlayerHidden) == 0x000013, "Member 'BP_EventBase_C_StepFirst::PlayerHidden' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, Param_MaxFPS) == 0x000014, "Member 'BP_EventBase_C_StepFirst::Param_MaxFPS' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, Next) == 0x000018, "Member 'BP_EventBase_C_StepFirst::Next' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_EventBase_C_StepFirst::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000020, "Member 'BP_EventBase_C_StepFirst::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_StepFirst::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_EventBase_C_StepFirst::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, K2Node_DynamicCast_AsBPI_DGPost_Process_Control) == 0x000040, "Member 'BP_EventBase_C_StepFirst::K2Node_DynamicCast_AsBPI_DGPost_Process_Control' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_EventBase_C_StepFirst::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_EventBase_C_StepFirst::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_BPI_SetEnableRate_Dummy) == 0x000058, "Member 'BP_EventBase_C_StepFirst::CallFunc_BPI_SetEnableRate_Dummy' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_Greater_IntInt_ReturnValue) == 0x000059, "Member 'BP_EventBase_C_StepFirst::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_EventBase_C_StepFirst::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_GetGameInstance_ReturnValue) == 0x000090, "Member 'BP_EventBase_C_StepFirst::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000098, "Member 'BP_EventBase_C_StepFirst::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, K2Node_DynamicCast_AsBPI_Event_Instance) == 0x0000A0, "Member 'BP_EventBase_C_StepFirst::K2Node_DynamicCast_AsBPI_Event_Instance' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'BP_EventBase_C_StepFirst::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B8, "Member 'BP_EventBase_C_StepFirst::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_BPI_SetEventBase_NoUse) == 0x0000C0, "Member 'BP_EventBase_C_StepFirst::CallFunc_BPI_SetEventBase_NoUse' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_GetECSActorsThisLevel_ReturnValue) == 0x0000C8, "Member 'BP_EventBase_C_StepFirst::CallFunc_GetECSActorsThisLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'BP_EventBase_C_StepFirst::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, K2Node_DynamicCast_AsAtom_Sound) == 0x0000D8, "Member 'BP_EventBase_C_StepFirst::K2Node_DynamicCast_AsAtom_Sound' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, K2Node_DynamicCast_bSuccess_2) == 0x0000E0, "Member 'BP_EventBase_C_StepFirst::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_Get_ReturnValue) == 0x0000E8, "Member 'BP_EventBase_C_StepFirst::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_LoadAtomCueSheet_ReturnValue) == 0x0000F0, "Member 'BP_EventBase_C_StepFirst::CallFunc_LoadAtomCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_Get_ReturnValue_1) == 0x0000F8, "Member 'BP_EventBase_C_StepFirst::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_GetGameVolume_ReturnValue) == 0x000100, "Member 'BP_EventBase_C_StepFirst::CallFunc_GetGameVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_GetGameVolume_ReturnValue_1) == 0x000104, "Member 'BP_EventBase_C_StepFirst::CallFunc_GetGameVolume_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_GetGameVolume_ReturnValue_2) == 0x000108, "Member 'BP_EventBase_C_StepFirst::CallFunc_GetGameVolume_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_GetMaxFPS_ReturnValue) == 0x00010C, "Member 'BP_EventBase_C_StepFirst::CallFunc_GetMaxFPS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_GetMovieSubtitleType_ReturnValue) == 0x000110, "Member 'BP_EventBase_C_StepFirst::CallFunc_GetMovieSubtitleType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000111, "Member 'BP_EventBase_C_StepFirst::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_GetActivePlayer_Player) == 0x000118, "Member 'BP_EventBase_C_StepFirst::CallFunc_GetActivePlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_GetActivePlayer_E_Type) == 0x000120, "Member 'BP_EventBase_C_StepFirst::CallFunc_GetActivePlayer_E_Type' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_BooleanAND_ReturnValue_1) == 0x000121, "Member 'BP_EventBase_C_StepFirst::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_GetFadeState_ReturnValue) == 0x000122, "Member 'BP_EventBase_C_StepFirst::CallFunc_GetFadeState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_IsValid_ReturnValue_1) == 0x000123, "Member 'BP_EventBase_C_StepFirst::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000124, "Member 'BP_EventBase_C_StepFirst::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, Temp_bool_Variable) == 0x000125, "Member 'BP_EventBase_C_StepFirst::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_Get_ReturnValue_2) == 0x000128, "Member 'BP_EventBase_C_StepFirst::CallFunc_Get_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_GetBGM_ReturnValue) == 0x000130, "Member 'BP_EventBase_C_StepFirst::CallFunc_GetBGM_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_GetQuestMapBGM_ReturnValue) == 0x000138, "Member 'BP_EventBase_C_StepFirst::CallFunc_GetQuestMapBGM_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_GetCurrentBGM_ReturnValue) == 0x000140, "Member 'BP_EventBase_C_StepFirst::CallFunc_GetCurrentBGM_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000148, "Member 'BP_EventBase_C_StepFirst::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_StepFirst, K2Node_Select_Default) == 0x000150, "Member 'BP_EventBase_C_StepFirst::K2Node_Select_Default' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetMessageAsset
// 0x0008 (0x0008 - 0x0000)
struct BP_EventBase_C_SetMessageAsset final
{
public:
	class UScriptMessageAsset*                    NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_SetMessageAsset) == 0x000008, "Wrong alignment on BP_EventBase_C_SetMessageAsset");
static_assert(sizeof(BP_EventBase_C_SetMessageAsset) == 0x000008, "Wrong size on BP_EventBase_C_SetMessageAsset");
static_assert(offsetof(BP_EventBase_C_SetMessageAsset, NewParam) == 0x000000, "Member 'BP_EventBase_C_SetMessageAsset::NewParam' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.Initialize
// 0x0028 (0x0028 - 0x0000)
struct BP_EventBase_C_Initialize final
{
public:
	class UScriptMessageAsset*                    Param_MessageAsset;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_EventColorFade_C*                   CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DE9[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Message_C*                          CallFunc_Create_ReturnValue_1;                     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue_1;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_Initialize) == 0x000008, "Wrong alignment on BP_EventBase_C_Initialize");
static_assert(sizeof(BP_EventBase_C_Initialize) == 0x000028, "Wrong size on BP_EventBase_C_Initialize");
static_assert(offsetof(BP_EventBase_C_Initialize, Param_MessageAsset) == 0x000000, "Member 'BP_EventBase_C_Initialize::Param_MessageAsset' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Initialize, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_EventBase_C_Initialize::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Initialize, CallFunc_AddToWidgetPrio_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_Initialize::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Initialize, CallFunc_Create_ReturnValue_1) == 0x000018, "Member 'BP_EventBase_C_Initialize::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_Initialize, CallFunc_AddToWidgetPrio_ReturnValue_1) == 0x000020, "Member 'BP_EventBase_C_Initialize::CallFunc_AddToWidgetPrio_ReturnValue_1' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.SetPosition
// 0x0008 (0x0008 - 0x0000)
struct BP_EventBase_C_SetPosition final
{
public:
	class AActor*                                 PositionActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_SetPosition) == 0x000008, "Wrong alignment on BP_EventBase_C_SetPosition");
static_assert(sizeof(BP_EventBase_C_SetPosition) == 0x000008, "Wrong size on BP_EventBase_C_SetPosition");
static_assert(offsetof(BP_EventBase_C_SetPosition, PositionActor) == 0x000000, "Member 'BP_EventBase_C_SetPosition::PositionActor' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.IsFinish
// 0x0001 (0x0001 - 0x0000)
struct BP_EventBase_C_IsFinish final
{
public:
	bool                                          Param_Finish;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_IsFinish) == 0x000001, "Wrong alignment on BP_EventBase_C_IsFinish");
static_assert(sizeof(BP_EventBase_C_IsFinish) == 0x000001, "Wrong size on BP_EventBase_C_IsFinish");
static_assert(offsetof(BP_EventBase_C_IsFinish, Param_Finish) == 0x000000, "Member 'BP_EventBase_C_IsFinish::Param_Finish' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_EventBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_EventBase_C_ReceiveTick");
static_assert(sizeof(BP_EventBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_EventBase_C_ReceiveTick");
static_assert(offsetof(BP_EventBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_EventBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_EventBase_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_EventBase_C_ReceiveEndPlay");
static_assert(sizeof(BP_EventBase_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_EventBase_C_ReceiveEndPlay");
static_assert(offsetof(BP_EventBase_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_EventBase_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.AutoPlaySE
// 0x0020 (0x0020 - 0x0000)
struct BP_EventBase_C_AutoPlaySE final
{
public:
	class FString                                 SoundID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Volume;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventBase_C_AutoPlaySE) == 0x000008, "Wrong alignment on BP_EventBase_C_AutoPlaySE");
static_assert(sizeof(BP_EventBase_C_AutoPlaySE) == 0x000020, "Wrong size on BP_EventBase_C_AutoPlaySE");
static_assert(offsetof(BP_EventBase_C_AutoPlaySE, SoundID) == 0x000000, "Member 'BP_EventBase_C_AutoPlaySE::SoundID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AutoPlaySE, Volume) == 0x000010, "Member 'BP_EventBase_C_AutoPlaySE::Volume' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AutoPlaySE, Pitch) == 0x000014, "Member 'BP_EventBase_C_AutoPlaySE::Pitch' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_AutoPlaySE, Time) == 0x000018, "Member 'BP_EventBase_C_AutoPlaySE::Time' has a wrong offset!");

// Function BP_EventBase.BP_EventBase_C.ExecuteUbergraph_BP_EventBase
// 0x2310 (0x2310 - 0x0000)
struct BP_EventBase_C_ExecuteUbergraph_BP_EventBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DEA[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebugEventCutSkip_IsUse;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebugVoiceTiming_IsUse;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DEB[0xA];                                     // 0x0026(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DEC[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventPause_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_SoundID;                        // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Volume;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Pitch;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DED[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetActorsThisLevel_ReturnValue;           // 0x00A0(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebugTextAlpha0_IsUse;                  // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DEE[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTime_ReturnValue;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IS_SHIPPING_BUILD_ReturnValue;            // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DEF[0x2];                                     // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDebugEventMaxFPS_MaxFPS;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DF0[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DF1[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DF2[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFrameRateManager*                      CallFunc_Get_ReturnValue;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DF3[0x8];                                     // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x0100(0x0560)()
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0665(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DF4[0x2];                                     // 0x0666(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DF5[0x4];                                     // 0x066C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue;       // 0x0670(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DF6[0x8];                                     // 0x0678(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   CallFunc_GetPostProcessSetting_ReturnValue;        // 0x0680(0x0560)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DF7[0x7];                                     // 0x0BE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue_1;                        // 0x0BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameVolume_ReturnValue;                // 0x0BF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0BF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FChangeFadeVolume                      CallFunc_Array_Get_Item_1;                         // 0x0BF8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0C04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0C08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0C0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0C0D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DF8[0x2];                                     // 0x0C0E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0C10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0C14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0C18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0C19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DF9[0x2];                                     // 0x0C1A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0C1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0C20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0C21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DFA[0x2];                                     // 0x0C22(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0C24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0C28(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0C38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DFB[0x4];                                     // 0x0C3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings_1;           // 0x0C40(0x0560)()
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x11A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DFC[0x7];                                     // 0x11A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_1;     // 0x11A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPostProcessSettings                   CallFunc_GetPostProcessSetting_ReturnValue_1;      // 0x11B0(0x0560)()
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x1710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DFD[0xC];                                     // 0x1714(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings_2;           // 0x1720(0x0560)()
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x1C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DFE[0x7];                                     // 0x1C81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_2;     // 0x1C88(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPostProcessSettings                   CallFunc_GetPostProcessSetting_ReturnValue_2;      // 0x1C90(0x0560)()
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x21F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x21F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x21F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DFF[0x1];                                     // 0x21F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_Constant_ReturnValue_1;         // 0x21F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x21F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E00[0x7];                                     // 0x21F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue_2;                        // 0x2200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_GetBGMComponent_ReturnValue;              // 0x2208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x2210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E01[0x3];                                     // 0x2211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_Constant_ReturnValue_2;         // 0x2214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue_3;         // 0x2218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x221C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E02[0x3];                                     // 0x221D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x2220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x2224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E03[0x3];                                     // 0x2225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_Array_Get_Item_2;                         // 0x2228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x2230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E04[0x7];                                     // 0x2231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAtomSound*                             CallFunc_Array_Get_Item_3;                         // 0x2238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x2240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x2241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E05[0x2];                                     // 0x2242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x2244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x2248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FChangeFadeVolume                      CallFunc_Array_Get_Item_4;                         // 0x224C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x2258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x225C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x225D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E06[0x2];                                     // 0x225E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x2260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x2264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x2265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E07[0x2];                                     // 0x2266(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x2268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E08[0x4];                                     // 0x226C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue_3;                        // 0x2270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameVolume_ReturnValue_1;              // 0x2278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x227C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x2280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E09[0x4];                                     // 0x2284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_5;                         // 0x2288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x2290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E0A[0x7];                                     // 0x2291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAtomSound*                             K2Node_DynamicCast_AsAtom_Sound;                   // 0x2298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x22A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E0B[0x3];                                     // 0x22A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x22A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x22A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x22AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E0C[0x3];                                     // 0x22AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x22B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeX;                    // 0x22B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeY;                    // 0x22BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_3;     // 0x22C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x22C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x22CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x22D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x22D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x22D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E0D[0x3];                                     // 0x22D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x22DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x22E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_6;                         // 0x22E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x22EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E0E[0x3];                                     // 0x22ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x22F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x22F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E0F[0x3];                                     // 0x22F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x22F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E10[0x4];                                     // 0x22FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCineCameraComponent*                   CallFunc_GetCineCameraComponent_ReturnValue_4;     // 0x2300(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x2308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x2309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase) == 0x000010, "Wrong alignment on BP_EventBase_C_ExecuteUbergraph_BP_EventBase");
static_assert(sizeof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase) == 0x002310, "Wrong size on BP_EventBase_C_ExecuteUbergraph_BP_EventBase");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, EntryPoint) == 0x000000, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Array_Length_ReturnValue_1) == 0x000018, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IsDebugEventCutSkip_IsUse) == 0x000024, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IsDebugEventCutSkip_IsUse' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IsDebugVoiceTiming_IsUse) == 0x000025, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IsDebugVoiceTiming_IsUse' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, K2Node_Event_EndPlayReason) == 0x000060, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000068, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_FinishSpawningActor_ReturnValue) == 0x000070, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, K2Node_CustomEvent_SoundID) == 0x000078, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::K2Node_CustomEvent_SoundID' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, K2Node_CustomEvent_Volume) == 0x000088, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::K2Node_CustomEvent_Volume' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, K2Node_CustomEvent_Pitch) == 0x00008C, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::K2Node_CustomEvent_Pitch' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, K2Node_CustomEvent_Time) == 0x000090, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Conv_StringToName_ReturnValue) == 0x000094, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetActorsThisLevel_ReturnValue) == 0x0000A0, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetActorsThisLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, Temp_int_Array_Index_Variable_2) == 0x0000B0, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Array_Length_ReturnValue_2) == 0x0000B4, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IsPlaying_ReturnValue) == 0x0000C1, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IsDebugTextAlpha0_IsUse) == 0x0000C2, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IsDebugTextAlpha0_IsUse' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000C3, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IsValid_ReturnValue) == 0x0000C4, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetPlayTime_ReturnValue) == 0x0000C8, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetPlayTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IsValid_ReturnValue_1) == 0x0000CC, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IS_SHIPPING_BUILD_ReturnValue) == 0x0000CD, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IS_SHIPPING_BUILD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetDebugEventMaxFPS_MaxFPS) == 0x0000D0, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetDebugEventMaxFPS_MaxFPS' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000D5, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, Temp_int_Loop_Counter_Variable_1) == 0x0000D8, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000DC, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000E4, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0000E8, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Get_ReturnValue) == 0x0000F0, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, K2Node_MakeStruct_PostProcessSettings) == 0x000100, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, Temp_int_Loop_Counter_Variable_2) == 0x000660, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IsValid_ReturnValue_2) == 0x000664, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Less_IntInt_ReturnValue_1) == 0x000665, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Add_IntInt_ReturnValue_2) == 0x000668, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetCineCameraComponent_ReturnValue) == 0x000670, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetCineCameraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetPostProcessSetting_ReturnValue) == 0x000680, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetPostProcessSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000BE0, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Get_ReturnValue_1) == 0x000BE8, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetGameVolume_ReturnValue) == 0x000BF0, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetGameVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, Temp_int_Loop_Counter_Variable_3) == 0x000BF4, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Array_Get_Item_1) == 0x000BF8, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Add_IntInt_ReturnValue_3) == 0x000C04, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000C08, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000C0C, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, K2Node_SwitchEnum_CmpSuccess) == 0x000C0D, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Array_Length_ReturnValue_3) == 0x000C10, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Array_Length_ReturnValue_4) == 0x000C14, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Less_IntInt_ReturnValue_2) == 0x000C18, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000C19, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000C1C, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000C20, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000C21, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000C24, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_LinearColorLerp_ReturnValue) == 0x000C28, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Add_FloatFloat_ReturnValue) == 0x000C38, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, K2Node_MakeStruct_PostProcessSettings_1) == 0x000C40, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::K2Node_MakeStruct_PostProcessSettings_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IsValid_ReturnValue_3) == 0x0011A0, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetCineCameraComponent_ReturnValue_1) == 0x0011A8, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetCineCameraComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetPostProcessSetting_ReturnValue_1) == 0x0011B0, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetPostProcessSetting_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, Temp_int_Array_Index_Variable_3) == 0x001710, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, K2Node_MakeStruct_PostProcessSettings_2) == 0x001720, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::K2Node_MakeStruct_PostProcessSettings_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IsValid_ReturnValue_4) == 0x001C80, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetCineCameraComponent_ReturnValue_2) == 0x001C88, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetCineCameraComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetPostProcessSetting_ReturnValue_2) == 0x001C90, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetPostProcessSetting_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0021F0, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0021F1, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IsValid_ReturnValue_5) == 0x0021F2, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_FInterpTo_Constant_ReturnValue_1) == 0x0021F4, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_FInterpTo_Constant_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IsValid_ReturnValue_6) == 0x0021F8, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Get_ReturnValue_2) == 0x002200, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Get_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetBGMComponent_ReturnValue) == 0x002208, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetBGMComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IsValid_ReturnValue_7) == 0x002210, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_FInterpTo_Constant_ReturnValue_2) == 0x002214, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_FInterpTo_Constant_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_FInterpTo_Constant_ReturnValue_3) == 0x002218, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_FInterpTo_Constant_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, K2Node_SwitchInteger_CmpSuccess) == 0x00221C, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, Temp_int_Array_Index_Variable_4) == 0x002220, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x002224, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Array_Get_Item_2) == 0x002228, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IsValid_ReturnValue_8) == 0x002230, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Array_Get_Item_3) == 0x002238, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IsValid_ReturnValue_9) == 0x002240, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IsPlaying_ReturnValue_1) == 0x002241, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Array_Length_ReturnValue_5) == 0x002244, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, Temp_int_Loop_Counter_Variable_4) == 0x002248, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Array_Get_Item_4) == 0x00224C, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Array_Length_ReturnValue_6) == 0x002258, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Less_IntInt_ReturnValue_3) == 0x00225C, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, K2Node_SwitchEnum_CmpSuccess_1) == 0x00225D, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Array_Length_ReturnValue_7) == 0x002260, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Less_IntInt_ReturnValue_4) == 0x002264, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Greater_IntInt_ReturnValue_2) == 0x002265, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Add_IntInt_ReturnValue_4) == 0x002268, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Get_ReturnValue_3) == 0x002270, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Get_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetGameVolume_ReturnValue_1) == 0x002278, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetGameVolume_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, Temp_int_Array_Index_Variable_5) == 0x00227C, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Ease_ReturnValue) == 0x002280, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Array_Get_Item_5) == 0x002288, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IsValid_ReturnValue_10) == 0x002290, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, K2Node_DynamicCast_AsAtom_Sound) == 0x002298, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::K2Node_DynamicCast_AsAtom_Sound' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, K2Node_DynamicCast_bSuccess) == 0x0022A0, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Array_Add_ReturnValue) == 0x0022A4, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Array_Length_ReturnValue_8) == 0x0022A8, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x0022AC, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetPlayerController_ReturnValue) == 0x0022B0, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetViewportSize_SizeX) == 0x0022B8, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetViewportSize_SizeX' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetViewportSize_SizeY) == 0x0022BC, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetViewportSize_SizeY' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetCineCameraComponent_ReturnValue_3) == 0x0022C0, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetCineCameraComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0022C8, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0022CC, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0022D0, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, Temp_int_Loop_Counter_Variable_5) == 0x0022D4, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Less_IntInt_ReturnValue_5) == 0x0022D8, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Add_IntInt_ReturnValue_5) == 0x0022DC, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, Temp_int_Array_Index_Variable_6) == 0x0022E0, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Array_Get_Item_6) == 0x0022E4, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0022EC, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, Temp_int_Loop_Counter_Variable_6) == 0x0022F0, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Less_IntInt_ReturnValue_6) == 0x0022F4, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_Add_IntInt_ReturnValue_6) == 0x0022F8, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_GetCineCameraComponent_ReturnValue_4) == 0x002300, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_GetCineCameraComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_IsValid_ReturnValue_11) == 0x002308, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EventBase_C_ExecuteUbergraph_BP_EventBase, CallFunc_BooleanAND_ReturnValue) == 0x002309, "Member 'BP_EventBase_C_ExecuteUbergraph_BP_EventBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

