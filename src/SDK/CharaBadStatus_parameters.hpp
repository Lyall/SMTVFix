#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharaBadStatus

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BadStatusParticles_T_structs.hpp"
#include "Engine_structs.hpp"
#include "BadStatusDecal_T_structs.hpp"


namespace SDK::Params
{

// Function CharaBadStatus.CharaBadStatus_C.ExecuteUbergraph_CharaBadStatus
// 0x06E0 (0x06E0 - 0x0000)
struct CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BI_GetBadStatusEffectScale_Scale;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29A3[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_29A4[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_12;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29A5[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_11;                      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System_1;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29A6[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_10;                      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System_2;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29A7[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_9;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System_3;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29A8[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_8;                       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_4;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29A9[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_7;                       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_5;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BAD_STATUS                                  Temp_byte_Variable;                                // 0x0111(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  Temp_byte_Variable_1;                              // 0x0112(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  Temp_byte_Variable_2;                              // 0x0113(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29AA[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_6;                       // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_6;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System_4;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BAD_STATUS                                  Temp_byte_Variable_3;                              // 0x0131(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29AB[0x6];                                     // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_5;                       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_7;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System_5;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BAD_STATUS                                  Temp_byte_Variable_4;                              // 0x0151(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29AC[0x6];                                     // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_4;                       // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_8;                            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System_6;            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BAD_STATUS                                  Temp_byte_Variable_5;                              // 0x0171(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29AD[0x6];                                     // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_3;                       // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_9;                            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System_7;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BAD_STATUS                                  Temp_byte_Variable_6;                              // 0x0191(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  Temp_byte_Variable_7;                              // 0x0192(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29AE[0x5];                                     // 0x0193(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_10;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29AF[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_11;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System_8;            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29B0[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_12;                           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System_9;            // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BAD_STATUS                                  Temp_byte_Variable_8;                              // 0x01F1(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  Temp_byte_Variable_9;                              // 0x01F2(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29B1[0x5];                                     // 0x01F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UParticleSystem>         K2Node_CustomEvent_Asset_10;                       // 0x01F8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29B2[0x3];                                     // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_4;            // 0x0224(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_29B3[0x4];                                     // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UParticleSystem>         K2Node_CustomEvent_Asset_9;                        // 0x0238(0x0028)(HasGetValueTypeHash)
	E_BAD_STATUS                                  K2Node_CustomEvent_BadStatus;                      // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29B4[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UParticleSystem>         K2Node_CustomEvent_Asset_8;                        // 0x0268(0x0028)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29B5[0x6];                                     // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class UParticleSystemComponent*         K2Node_CustomEvent_PSComp;                         // 0x0298(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UParticleSystem>         K2Node_CustomEvent_Asset_7;                        // 0x02A0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_2; // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29B6[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UParticleSystem>         K2Node_CustomEvent_Asset_6;                        // 0x02D0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_3; // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29B7[0x3];                                     // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_5;            // 0x02FC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_29B8[0x4];                                     // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UParticleSystem>         K2Node_CustomEvent_Asset_5;                        // 0x0310(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_4; // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29B9[0x3];                                     // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasBadStatus_HasBadStatus;                // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29BA[0x7];                                     // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundAtomCue>           K2Node_CustomEvent_Sound;                          // 0x0348(0x0028)(HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_5; // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29BB[0x3];                                     // 0x037D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_6;            // 0x0380(0x0010)(ZeroConstructor, NoDestructor)
	struct FBadStatusDecal_T                      K2Node_CustomEvent_DecalSetting;                   // 0x0390(0x0058)(ContainsInstancedReference, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetTargetMesh_ParticleSettings;           // 0x03E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_6; // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29BC[0x3];                                     // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x03F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_Event_Accessor;                             // 0x0400(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UDecalComponent*                        CallFunc_SpawnDecalAttached_ReturnValue;           // 0x0410(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_BI_CreateBadStatusPSComp_PSComp;          // 0x0418(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_7;            // 0x0420(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_BI_GetBadStatusEffectScale_Scale_1;       // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29BD[0x4];                                     // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_BI_CreateBadStatusPSComp_PSComp_1;        // 0x0438(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_BI_CreateBadStatusPSComp_PSComp_2;        // 0x0440(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_BI_CreateBadStatusPSComp_PSComp_3;        // 0x0448(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_BI_CreateBadStatusPSComp_PSComp_4;        // 0x0450(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_BI_CreateBadStatusPSComp_PSComp_5;        // 0x0458(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_BI_CreateBadStatusPSComp_PSComp_6;        // 0x0460(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_BI_CreateBadStatusPSComp_PSComp_7;        // 0x0468(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_BI_CreateBadStatusPSComp_PSComp_8;        // 0x0470(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_BI_CreateBadStatusPSComp_PSComp_9;        // 0x0478(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue_1;     // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29BE[0x3];                                     // 0x0489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_8;            // 0x048C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_29BF[0x4];                                     // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UParticleSystem>         K2Node_CustomEvent_Asset_4;                        // 0x04A0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_7; // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29C0[0x7];                                     // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UParticleSystem>         K2Node_CustomEvent_Asset_3;                        // 0x04D0(0x0028)(HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Map_Find_Value;                           // 0x04F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_8; // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29C1[0x2];                                     // 0x0502(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_9;            // 0x0504(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_29C2[0x4];                                     // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UParticleSystem>         K2Node_CustomEvent_Asset_2;                        // 0x0518(0x0028)(HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Map_Find_Value_1;                         // 0x0540(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_9; // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29C3[0x6];                                     // 0x054A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UParticleSystem>         K2Node_CustomEvent_Asset_1;                        // 0x0550(0x0028)(HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Map_Find_Value_2;                         // 0x0578(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_10; // 0x0581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29C4[0x2];                                     // 0x0582(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_10;           // 0x0584(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_29C5[0x4];                                     // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Map_Find_Value_3;                         // 0x0598(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29C6[0x7];                                     // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusDecal_T                      K2Node_CustomEvent_DecalData;                      // 0x05A8(0x0058)(ContainsInstancedReference, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_11;           // 0x0600(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_11; // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29C7[0x7];                                     // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetTargetMesh_ParticleSettings_1;         // 0x0618(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0620(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0658(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C8[0x4];                                     // 0x0664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADevilSpawnDecal_C*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UParticleSystem>         K2Node_CustomEvent_Asset;                          // 0x0670(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_12; // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29C9[0x3];                                     // 0x0699(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_12;           // 0x069C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_29CA[0x4];                                     // 0x06AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Map_Find_Value_4;                         // 0x06B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29CB[0x7];                                     // 0x06B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               K2Node_CustomEvent_PSystem;                        // 0x06C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UParticleSystemComponent* PSystem)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x06C8(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus) == 0x000010, "Wrong alignment on CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus");
static_assert(sizeof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus) == 0x0006E0, "Wrong size on CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, EntryPoint) == 0x000000, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::EntryPoint' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_BI_GetBadStatusEffectScale_Scale) == 0x000004, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_BI_GetBadStatusEffectScale_Scale' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000018, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CreateDelegate_OutputDelegate_2) == 0x000034, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CreateDelegate_OutputDelegate_3) == 0x000044, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Loaded_12) == 0x000058, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Loaded_12' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_object_Variable) == 0x000060, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_AsParticle_System) == 0x000068, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_AsParticle_System' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Loaded_11) == 0x000078, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Loaded_11' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_object_Variable_1) == 0x000080, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_AsParticle_System_1) == 0x000088, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_AsParticle_System_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Loaded_10) == 0x000098, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Loaded_10' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_object_Variable_2) == 0x0000A0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_AsParticle_System_2) == 0x0000A8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_AsParticle_System_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Loaded_9) == 0x0000B8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Loaded_9' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_object_Variable_3) == 0x0000C0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_AsParticle_System_3) == 0x0000C8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_AsParticle_System_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_bSuccess_3) == 0x0000D0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Loaded_8) == 0x0000D8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Loaded_8' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_object_Variable_4) == 0x0000E0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x0000E8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_bSuccess_4) == 0x0000F0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Loaded_7) == 0x0000F8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Loaded_7' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_object_Variable_5) == 0x000100, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_AsMaterial_Interface) == 0x000108, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_bSuccess_5) == 0x000110, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_byte_Variable) == 0x000111, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_byte_Variable_1) == 0x000112, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_byte_Variable_2) == 0x000113, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Loaded_6) == 0x000118, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Loaded_6' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_object_Variable_6) == 0x000120, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_AsParticle_System_4) == 0x000128, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_AsParticle_System_4' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_bSuccess_6) == 0x000130, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_byte_Variable_3) == 0x000131, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Loaded_5) == 0x000138, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Loaded_5' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_object_Variable_7) == 0x000140, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_AsParticle_System_5) == 0x000148, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_AsParticle_System_5' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_bSuccess_7) == 0x000150, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_byte_Variable_4) == 0x000151, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Loaded_4) == 0x000158, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Loaded_4' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_object_Variable_8) == 0x000160, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_AsParticle_System_6) == 0x000168, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_AsParticle_System_6' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_bSuccess_8) == 0x000170, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_byte_Variable_5) == 0x000171, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Loaded_3) == 0x000178, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_object_Variable_9) == 0x000180, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_AsParticle_System_7) == 0x000188, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_AsParticle_System_7' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_bSuccess_9) == 0x000190, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_byte_Variable_6) == 0x000191, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_byte_Variable_7) == 0x000192, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Loaded_2) == 0x000198, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_object_Variable_10) == 0x0001A0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_AsMaterial_Instance) == 0x0001A8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_bSuccess_10) == 0x0001B0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Loaded_1) == 0x0001B8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_object_Variable_11) == 0x0001C0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_AsParticle_System_8) == 0x0001C8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_AsParticle_System_8' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_bSuccess_11) == 0x0001D0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Loaded) == 0x0001D8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_object_Variable_12) == 0x0001E0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_AsParticle_System_9) == 0x0001E8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_AsParticle_System_9' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_DynamicCast_bSuccess_12) == 0x0001F0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_byte_Variable_8) == 0x0001F1, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, Temp_byte_Variable_9) == 0x0001F2, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Asset_10) == 0x0001F8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Asset_10' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000220, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CreateDelegate_OutputDelegate_4) == 0x000224, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Asset_9) == 0x000238, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Asset_9' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_BadStatus) == 0x000260, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_BadStatus' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Asset_8) == 0x000268, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Asset_8' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_SwitchEnum_CmpSuccess) == 0x000290, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000291, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_PSComp) == 0x000298, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_PSComp' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Asset_7) == 0x0002A0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Asset_7' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_IsValidSoftObjectReference_ReturnValue_2) == 0x0002C8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_IsValidSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Asset_6) == 0x0002D0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Asset_6' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_IsValidSoftObjectReference_ReturnValue_3) == 0x0002F8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_IsValidSoftObjectReference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CreateDelegate_OutputDelegate_5) == 0x0002FC, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Asset_5) == 0x000310, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Asset_5' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_IsValidSoftObjectReference_ReturnValue_4) == 0x000338, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_IsValidSoftObjectReference_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_Event_DeltaSeconds) == 0x00033C, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_HasBadStatus_HasBadStatus) == 0x000340, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_HasBadStatus_HasBadStatus' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Sound) == 0x000348, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Sound' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Location) == 0x000370, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_IsValidSoftObjectReference_ReturnValue_5) == 0x00037C, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_IsValidSoftObjectReference_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CreateDelegate_OutputDelegate_6) == 0x000380, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_DecalSetting) == 0x000390, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_DecalSetting' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_GetTargetMesh_ParticleSettings) == 0x0003E8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_GetTargetMesh_ParticleSettings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_IsValidSoftObjectReference_ReturnValue_6) == 0x0003F0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_IsValidSoftObjectReference_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0003F4, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_Event_Accessor) == 0x000400, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_Event_Accessor' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_SpawnDecalAttached_ReturnValue) == 0x000410, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_SpawnDecalAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_BI_CreateBadStatusPSComp_PSComp) == 0x000418, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_BI_CreateBadStatusPSComp_PSComp' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CreateDelegate_OutputDelegate_7) == 0x000420, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_BI_GetBadStatusEffectScale_Scale_1) == 0x000430, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_BI_GetBadStatusEffectScale_Scale_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_BI_CreateBadStatusPSComp_PSComp_1) == 0x000438, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_BI_CreateBadStatusPSComp_PSComp_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_BI_CreateBadStatusPSComp_PSComp_2) == 0x000440, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_BI_CreateBadStatusPSComp_PSComp_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_BI_CreateBadStatusPSComp_PSComp_3) == 0x000448, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_BI_CreateBadStatusPSComp_PSComp_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_BI_CreateBadStatusPSComp_PSComp_4) == 0x000450, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_BI_CreateBadStatusPSComp_PSComp_4' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_BI_CreateBadStatusPSComp_PSComp_5) == 0x000458, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_BI_CreateBadStatusPSComp_PSComp_5' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_BI_CreateBadStatusPSComp_PSComp_6) == 0x000460, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_BI_CreateBadStatusPSComp_PSComp_6' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_BI_CreateBadStatusPSComp_PSComp_7) == 0x000468, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_BI_CreateBadStatusPSComp_PSComp_7' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_BI_CreateBadStatusPSComp_PSComp_8) == 0x000470, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_BI_CreateBadStatusPSComp_PSComp_8' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_BI_CreateBadStatusPSComp_PSComp_9) == 0x000478, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_BI_CreateBadStatusPSComp_PSComp_9' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_Conv_InterfaceToObject_ReturnValue_1) == 0x000480, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_Conv_InterfaceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_IsValid_ReturnValue_1) == 0x000488, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CreateDelegate_OutputDelegate_8) == 0x00048C, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Asset_4) == 0x0004A0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Asset_4' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_IsValidSoftObjectReference_ReturnValue_7) == 0x0004C8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_IsValidSoftObjectReference_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Asset_3) == 0x0004D0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Asset_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_Map_Find_Value) == 0x0004F8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_Map_Find_ReturnValue) == 0x000500, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_IsValidSoftObjectReference_ReturnValue_8) == 0x000501, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_IsValidSoftObjectReference_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CreateDelegate_OutputDelegate_9) == 0x000504, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Asset_2) == 0x000518, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Asset_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_Map_Find_Value_1) == 0x000540, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_Map_Find_ReturnValue_1) == 0x000548, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_IsValidSoftObjectReference_ReturnValue_9) == 0x000549, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_IsValidSoftObjectReference_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Asset_1) == 0x000550, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Asset_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_Map_Find_Value_2) == 0x000578, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_Map_Find_ReturnValue_2) == 0x000580, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_IsValidSoftObjectReference_ReturnValue_10) == 0x000581, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_IsValidSoftObjectReference_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CreateDelegate_OutputDelegate_10) == 0x000584, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_Map_Find_Value_3) == 0x000598, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_Map_Find_ReturnValue_3) == 0x0005A0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_DecalData) == 0x0005A8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_DecalData' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CreateDelegate_OutputDelegate_11) == 0x000600, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_IsValidSoftObjectReference_ReturnValue_11) == 0x000610, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_IsValidSoftObjectReference_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_GetTargetMesh_ParticleSettings_1) == 0x000618, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_GetTargetMesh_ParticleSettings_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_GetSocketTransform_ReturnValue) == 0x000620, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000650, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000658, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_FinishSpawningActor_ReturnValue) == 0x000668, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_Asset) == 0x000670, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_Asset' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_IsValidSoftObjectReference_ReturnValue_12) == 0x000698, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_IsValidSoftObjectReference_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CreateDelegate_OutputDelegate_12) == 0x00069C, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_Map_Find_Value_4) == 0x0006B0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, CallFunc_Map_Find_ReturnValue_4) == 0x0006B8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CustomEvent_PSystem) == 0x0006C0, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CustomEvent_PSystem' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus, K2Node_CreateDelegate_OutputDelegate_13) == 0x0006C8, "Member 'CharaBadStatus_C_ExecuteUbergraph_CharaBadStatus::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.OnInstantParticleFinished
// 0x0008 (0x0008 - 0x0000)
struct CharaBadStatus_C_OnInstantParticleFinished final
{
public:
	class UParticleSystemComponent*               PSystem;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_OnInstantParticleFinished) == 0x000008, "Wrong alignment on CharaBadStatus_C_OnInstantParticleFinished");
static_assert(sizeof(CharaBadStatus_C_OnInstantParticleFinished) == 0x000008, "Wrong size on CharaBadStatus_C_OnInstantParticleFinished");
static_assert(offsetof(CharaBadStatus_C_OnInstantParticleFinished, PSystem) == 0x000000, "Member 'CharaBadStatus_C_OnInstantParticleFinished::PSystem' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.SetBadParticle_TypeB_DARKNESS
// 0x0028 (0x0028 - 0x0000)
struct CharaBadStatus_C_SetBadParticle_TypeB_DARKNESS final
{
public:
	TSoftObjectPtr<class UParticleSystem>         Asset;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_SetBadParticle_TypeB_DARKNESS) == 0x000008, "Wrong alignment on CharaBadStatus_C_SetBadParticle_TypeB_DARKNESS");
static_assert(sizeof(CharaBadStatus_C_SetBadParticle_TypeB_DARKNESS) == 0x000028, "Wrong size on CharaBadStatus_C_SetBadParticle_TypeB_DARKNESS");
static_assert(offsetof(CharaBadStatus_C_SetBadParticle_TypeB_DARKNESS, Asset) == 0x000000, "Member 'CharaBadStatus_C_SetBadParticle_TypeB_DARKNESS::Asset' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.SpawnDecal_Instant
// 0x0058 (0x0058 - 0x0000)
struct CharaBadStatus_C_SpawnDecal_Instant final
{
public:
	struct FBadStatusDecal_T                      DecalData;                                         // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_SpawnDecal_Instant) == 0x000008, "Wrong alignment on CharaBadStatus_C_SpawnDecal_Instant");
static_assert(sizeof(CharaBadStatus_C_SpawnDecal_Instant) == 0x000058, "Wrong size on CharaBadStatus_C_SpawnDecal_Instant");
static_assert(offsetof(CharaBadStatus_C_SpawnDecal_Instant, DecalData) == 0x000000, "Member 'CharaBadStatus_C_SpawnDecal_Instant::DecalData' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.SetBadParticle_TypeB_MUD
// 0x0028 (0x0028 - 0x0000)
struct CharaBadStatus_C_SetBadParticle_TypeB_MUD final
{
public:
	TSoftObjectPtr<class UParticleSystem>         Asset;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_SetBadParticle_TypeB_MUD) == 0x000008, "Wrong alignment on CharaBadStatus_C_SetBadParticle_TypeB_MUD");
static_assert(sizeof(CharaBadStatus_C_SetBadParticle_TypeB_MUD) == 0x000028, "Wrong size on CharaBadStatus_C_SetBadParticle_TypeB_MUD");
static_assert(offsetof(CharaBadStatus_C_SetBadParticle_TypeB_MUD, Asset) == 0x000000, "Member 'CharaBadStatus_C_SetBadParticle_TypeB_MUD::Asset' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.SetBadParticle_TypeB_SHOCK
// 0x0028 (0x0028 - 0x0000)
struct CharaBadStatus_C_SetBadParticle_TypeB_SHOCK final
{
public:
	TSoftObjectPtr<class UParticleSystem>         Asset;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_SetBadParticle_TypeB_SHOCK) == 0x000008, "Wrong alignment on CharaBadStatus_C_SetBadParticle_TypeB_SHOCK");
static_assert(sizeof(CharaBadStatus_C_SetBadParticle_TypeB_SHOCK) == 0x000028, "Wrong size on CharaBadStatus_C_SetBadParticle_TypeB_SHOCK");
static_assert(offsetof(CharaBadStatus_C_SetBadParticle_TypeB_SHOCK, Asset) == 0x000000, "Member 'CharaBadStatus_C_SetBadParticle_TypeB_SHOCK::Asset' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.SetBadParticle_TypeB_BURN
// 0x0028 (0x0028 - 0x0000)
struct CharaBadStatus_C_SetBadParticle_TypeB_BURN final
{
public:
	TSoftObjectPtr<class UParticleSystem>         Asset;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_SetBadParticle_TypeB_BURN) == 0x000008, "Wrong alignment on CharaBadStatus_C_SetBadParticle_TypeB_BURN");
static_assert(sizeof(CharaBadStatus_C_SetBadParticle_TypeB_BURN) == 0x000028, "Wrong size on CharaBadStatus_C_SetBadParticle_TypeB_BURN");
static_assert(offsetof(CharaBadStatus_C_SetBadParticle_TypeB_BURN, Asset) == 0x000000, "Member 'CharaBadStatus_C_SetBadParticle_TypeB_BURN::Asset' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.SetBadParticle_TypeB_STAN
// 0x0028 (0x0028 - 0x0000)
struct CharaBadStatus_C_SetBadParticle_TypeB_STAN final
{
public:
	TSoftObjectPtr<class UParticleSystem>         Asset;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_SetBadParticle_TypeB_STAN) == 0x000008, "Wrong alignment on CharaBadStatus_C_SetBadParticle_TypeB_STAN");
static_assert(sizeof(CharaBadStatus_C_SetBadParticle_TypeB_STAN) == 0x000028, "Wrong size on CharaBadStatus_C_SetBadParticle_TypeB_STAN");
static_assert(offsetof(CharaBadStatus_C_SetBadParticle_TypeB_STAN, Asset) == 0x000000, "Member 'CharaBadStatus_C_SetBadParticle_TypeB_STAN::Asset' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.SetCharaBaseAccessor
// 0x0010 (0x0010 - 0x0000)
struct CharaBadStatus_C_SetCharaBaseAccessor final
{
public:
	TScriptInterface<class IBPI_CharaBaseAccessor_C> Accessor;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_SetCharaBaseAccessor) == 0x000008, "Wrong alignment on CharaBadStatus_C_SetCharaBaseAccessor");
static_assert(sizeof(CharaBadStatus_C_SetCharaBaseAccessor) == 0x000010, "Wrong size on CharaBadStatus_C_SetCharaBaseAccessor");
static_assert(offsetof(CharaBadStatus_C_SetCharaBaseAccessor, Accessor) == 0x000000, "Member 'CharaBadStatus_C_SetCharaBaseAccessor::Accessor' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.SpawnDecal
// 0x0058 (0x0058 - 0x0000)
struct CharaBadStatus_C_SpawnDecal final
{
public:
	struct FBadStatusDecal_T                      DecalSetting;                                      // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_SpawnDecal) == 0x000008, "Wrong alignment on CharaBadStatus_C_SpawnDecal");
static_assert(sizeof(CharaBadStatus_C_SpawnDecal) == 0x000058, "Wrong size on CharaBadStatus_C_SpawnDecal");
static_assert(offsetof(CharaBadStatus_C_SpawnDecal, DecalSetting) == 0x000000, "Member 'CharaBadStatus_C_SpawnDecal::DecalSetting' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.PlayBadStatusSound
// 0x0038 (0x0038 - 0x0000)
struct CharaBadStatus_C_PlayBadStatusSound final
{
public:
	TSoftObjectPtr<class USoundAtomCue>           Sound;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_PlayBadStatusSound) == 0x000008, "Wrong alignment on CharaBadStatus_C_PlayBadStatusSound");
static_assert(sizeof(CharaBadStatus_C_PlayBadStatusSound) == 0x000038, "Wrong size on CharaBadStatus_C_PlayBadStatusSound");
static_assert(offsetof(CharaBadStatus_C_PlayBadStatusSound, Sound) == 0x000000, "Member 'CharaBadStatus_C_PlayBadStatusSound::Sound' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PlayBadStatusSound, Location) == 0x000028, "Member 'CharaBadStatus_C_PlayBadStatusSound::Location' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct CharaBadStatus_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_ReceiveTick) == 0x000004, "Wrong alignment on CharaBadStatus_C_ReceiveTick");
static_assert(sizeof(CharaBadStatus_C_ReceiveTick) == 0x000004, "Wrong size on CharaBadStatus_C_ReceiveTick");
static_assert(offsetof(CharaBadStatus_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'CharaBadStatus_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.SetBadParticle_Instant
// 0x0028 (0x0028 - 0x0000)
struct CharaBadStatus_C_SetBadParticle_Instant final
{
public:
	TSoftObjectPtr<class UParticleSystem>         Asset;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_SetBadParticle_Instant) == 0x000008, "Wrong alignment on CharaBadStatus_C_SetBadParticle_Instant");
static_assert(sizeof(CharaBadStatus_C_SetBadParticle_Instant) == 0x000028, "Wrong size on CharaBadStatus_C_SetBadParticle_Instant");
static_assert(offsetof(CharaBadStatus_C_SetBadParticle_Instant, Asset) == 0x000000, "Member 'CharaBadStatus_C_SetBadParticle_Instant::Asset' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.SetBadParticle_TypeD
// 0x0028 (0x0028 - 0x0000)
struct CharaBadStatus_C_SetBadParticle_TypeD final
{
public:
	TSoftObjectPtr<class UParticleSystem>         Asset;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_SetBadParticle_TypeD) == 0x000008, "Wrong alignment on CharaBadStatus_C_SetBadParticle_TypeD");
static_assert(sizeof(CharaBadStatus_C_SetBadParticle_TypeD) == 0x000028, "Wrong size on CharaBadStatus_C_SetBadParticle_TypeD");
static_assert(offsetof(CharaBadStatus_C_SetBadParticle_TypeD, Asset) == 0x000000, "Member 'CharaBadStatus_C_SetBadParticle_TypeD::Asset' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.SetBadParticle
// 0x0030 (0x0030 - 0x0000)
struct CharaBadStatus_C_SetBadParticle final
{
public:
	const class UParticleSystemComponent*         PSComp;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UParticleSystem>         Asset;                                             // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_SetBadParticle) == 0x000008, "Wrong alignment on CharaBadStatus_C_SetBadParticle");
static_assert(sizeof(CharaBadStatus_C_SetBadParticle) == 0x000030, "Wrong size on CharaBadStatus_C_SetBadParticle");
static_assert(offsetof(CharaBadStatus_C_SetBadParticle, PSComp) == 0x000000, "Member 'CharaBadStatus_C_SetBadParticle::PSComp' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_SetBadParticle, Asset) == 0x000008, "Member 'CharaBadStatus_C_SetBadParticle::Asset' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.SetBadParticle_TypeC
// 0x0028 (0x0028 - 0x0000)
struct CharaBadStatus_C_SetBadParticle_TypeC final
{
public:
	TSoftObjectPtr<class UParticleSystem>         Asset;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_SetBadParticle_TypeC) == 0x000008, "Wrong alignment on CharaBadStatus_C_SetBadParticle_TypeC");
static_assert(sizeof(CharaBadStatus_C_SetBadParticle_TypeC) == 0x000028, "Wrong size on CharaBadStatus_C_SetBadParticle_TypeC");
static_assert(offsetof(CharaBadStatus_C_SetBadParticle_TypeC, Asset) == 0x000000, "Member 'CharaBadStatus_C_SetBadParticle_TypeC::Asset' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.SetBadParticle_TypeB
// 0x0030 (0x0030 - 0x0000)
struct CharaBadStatus_C_SetBadParticle_TypeB final
{
public:
	TSoftObjectPtr<class UParticleSystem>         Asset;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	E_BAD_STATUS                                  BadStatus;                                         // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_SetBadParticle_TypeB) == 0x000008, "Wrong alignment on CharaBadStatus_C_SetBadParticle_TypeB");
static_assert(sizeof(CharaBadStatus_C_SetBadParticle_TypeB) == 0x000030, "Wrong size on CharaBadStatus_C_SetBadParticle_TypeB");
static_assert(offsetof(CharaBadStatus_C_SetBadParticle_TypeB, Asset) == 0x000000, "Member 'CharaBadStatus_C_SetBadParticle_TypeB::Asset' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_SetBadParticle_TypeB, BadStatus) == 0x000028, "Member 'CharaBadStatus_C_SetBadParticle_TypeB::BadStatus' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.SetBadParticle_TypeA
// 0x0028 (0x0028 - 0x0000)
struct CharaBadStatus_C_SetBadParticle_TypeA final
{
public:
	TSoftObjectPtr<class UParticleSystem>         Asset;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_SetBadParticle_TypeA) == 0x000008, "Wrong alignment on CharaBadStatus_C_SetBadParticle_TypeA");
static_assert(sizeof(CharaBadStatus_C_SetBadParticle_TypeA) == 0x000028, "Wrong size on CharaBadStatus_C_SetBadParticle_TypeA");
static_assert(offsetof(CharaBadStatus_C_SetBadParticle_TypeA, Asset) == 0x000000, "Member 'CharaBadStatus_C_SetBadParticle_TypeA::Asset' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.OnLoaded_17CADA884A2180FB92BEC19804AFBD3A
// 0x0008 (0x0008 - 0x0000)
struct CharaBadStatus_C_OnLoaded_17CADA884A2180FB92BEC19804AFBD3A final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_OnLoaded_17CADA884A2180FB92BEC19804AFBD3A) == 0x000008, "Wrong alignment on CharaBadStatus_C_OnLoaded_17CADA884A2180FB92BEC19804AFBD3A");
static_assert(sizeof(CharaBadStatus_C_OnLoaded_17CADA884A2180FB92BEC19804AFBD3A) == 0x000008, "Wrong size on CharaBadStatus_C_OnLoaded_17CADA884A2180FB92BEC19804AFBD3A");
static_assert(offsetof(CharaBadStatus_C_OnLoaded_17CADA884A2180FB92BEC19804AFBD3A, Loaded) == 0x000000, "Member 'CharaBadStatus_C_OnLoaded_17CADA884A2180FB92BEC19804AFBD3A::Loaded' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.OnLoaded_AE7783DA4CD2C45175384C836E74C048
// 0x0008 (0x0008 - 0x0000)
struct CharaBadStatus_C_OnLoaded_AE7783DA4CD2C45175384C836E74C048 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_OnLoaded_AE7783DA4CD2C45175384C836E74C048) == 0x000008, "Wrong alignment on CharaBadStatus_C_OnLoaded_AE7783DA4CD2C45175384C836E74C048");
static_assert(sizeof(CharaBadStatus_C_OnLoaded_AE7783DA4CD2C45175384C836E74C048) == 0x000008, "Wrong size on CharaBadStatus_C_OnLoaded_AE7783DA4CD2C45175384C836E74C048");
static_assert(offsetof(CharaBadStatus_C_OnLoaded_AE7783DA4CD2C45175384C836E74C048, Loaded) == 0x000000, "Member 'CharaBadStatus_C_OnLoaded_AE7783DA4CD2C45175384C836E74C048::Loaded' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.OnLoaded_7A5D1D754EC45DD51350A6B17FB863A6
// 0x0008 (0x0008 - 0x0000)
struct CharaBadStatus_C_OnLoaded_7A5D1D754EC45DD51350A6B17FB863A6 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_OnLoaded_7A5D1D754EC45DD51350A6B17FB863A6) == 0x000008, "Wrong alignment on CharaBadStatus_C_OnLoaded_7A5D1D754EC45DD51350A6B17FB863A6");
static_assert(sizeof(CharaBadStatus_C_OnLoaded_7A5D1D754EC45DD51350A6B17FB863A6) == 0x000008, "Wrong size on CharaBadStatus_C_OnLoaded_7A5D1D754EC45DD51350A6B17FB863A6");
static_assert(offsetof(CharaBadStatus_C_OnLoaded_7A5D1D754EC45DD51350A6B17FB863A6, Loaded) == 0x000000, "Member 'CharaBadStatus_C_OnLoaded_7A5D1D754EC45DD51350A6B17FB863A6::Loaded' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.OnLoaded_ABCDB69641ACB22C071415A6671BEE5B
// 0x0008 (0x0008 - 0x0000)
struct CharaBadStatus_C_OnLoaded_ABCDB69641ACB22C071415A6671BEE5B final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_OnLoaded_ABCDB69641ACB22C071415A6671BEE5B) == 0x000008, "Wrong alignment on CharaBadStatus_C_OnLoaded_ABCDB69641ACB22C071415A6671BEE5B");
static_assert(sizeof(CharaBadStatus_C_OnLoaded_ABCDB69641ACB22C071415A6671BEE5B) == 0x000008, "Wrong size on CharaBadStatus_C_OnLoaded_ABCDB69641ACB22C071415A6671BEE5B");
static_assert(offsetof(CharaBadStatus_C_OnLoaded_ABCDB69641ACB22C071415A6671BEE5B, Loaded) == 0x000000, "Member 'CharaBadStatus_C_OnLoaded_ABCDB69641ACB22C071415A6671BEE5B::Loaded' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.OnLoaded_E49EE1F74CE66147C8411CAA664B967A
// 0x0008 (0x0008 - 0x0000)
struct CharaBadStatus_C_OnLoaded_E49EE1F74CE66147C8411CAA664B967A final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_OnLoaded_E49EE1F74CE66147C8411CAA664B967A) == 0x000008, "Wrong alignment on CharaBadStatus_C_OnLoaded_E49EE1F74CE66147C8411CAA664B967A");
static_assert(sizeof(CharaBadStatus_C_OnLoaded_E49EE1F74CE66147C8411CAA664B967A) == 0x000008, "Wrong size on CharaBadStatus_C_OnLoaded_E49EE1F74CE66147C8411CAA664B967A");
static_assert(offsetof(CharaBadStatus_C_OnLoaded_E49EE1F74CE66147C8411CAA664B967A, Loaded) == 0x000000, "Member 'CharaBadStatus_C_OnLoaded_E49EE1F74CE66147C8411CAA664B967A::Loaded' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.OnLoaded_33898C054AD70512867958B85BAA6FA6
// 0x0008 (0x0008 - 0x0000)
struct CharaBadStatus_C_OnLoaded_33898C054AD70512867958B85BAA6FA6 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_OnLoaded_33898C054AD70512867958B85BAA6FA6) == 0x000008, "Wrong alignment on CharaBadStatus_C_OnLoaded_33898C054AD70512867958B85BAA6FA6");
static_assert(sizeof(CharaBadStatus_C_OnLoaded_33898C054AD70512867958B85BAA6FA6) == 0x000008, "Wrong size on CharaBadStatus_C_OnLoaded_33898C054AD70512867958B85BAA6FA6");
static_assert(offsetof(CharaBadStatus_C_OnLoaded_33898C054AD70512867958B85BAA6FA6, Loaded) == 0x000000, "Member 'CharaBadStatus_C_OnLoaded_33898C054AD70512867958B85BAA6FA6::Loaded' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.OnLoaded_FB7B16F644F6116F18CDAE957629FA3D
// 0x0008 (0x0008 - 0x0000)
struct CharaBadStatus_C_OnLoaded_FB7B16F644F6116F18CDAE957629FA3D final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_OnLoaded_FB7B16F644F6116F18CDAE957629FA3D) == 0x000008, "Wrong alignment on CharaBadStatus_C_OnLoaded_FB7B16F644F6116F18CDAE957629FA3D");
static_assert(sizeof(CharaBadStatus_C_OnLoaded_FB7B16F644F6116F18CDAE957629FA3D) == 0x000008, "Wrong size on CharaBadStatus_C_OnLoaded_FB7B16F644F6116F18CDAE957629FA3D");
static_assert(offsetof(CharaBadStatus_C_OnLoaded_FB7B16F644F6116F18CDAE957629FA3D, Loaded) == 0x000000, "Member 'CharaBadStatus_C_OnLoaded_FB7B16F644F6116F18CDAE957629FA3D::Loaded' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.OnLoaded_2C36155A403C719208BED39CA1C10AB7
// 0x0008 (0x0008 - 0x0000)
struct CharaBadStatus_C_OnLoaded_2C36155A403C719208BED39CA1C10AB7 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_OnLoaded_2C36155A403C719208BED39CA1C10AB7) == 0x000008, "Wrong alignment on CharaBadStatus_C_OnLoaded_2C36155A403C719208BED39CA1C10AB7");
static_assert(sizeof(CharaBadStatus_C_OnLoaded_2C36155A403C719208BED39CA1C10AB7) == 0x000008, "Wrong size on CharaBadStatus_C_OnLoaded_2C36155A403C719208BED39CA1C10AB7");
static_assert(offsetof(CharaBadStatus_C_OnLoaded_2C36155A403C719208BED39CA1C10AB7, Loaded) == 0x000000, "Member 'CharaBadStatus_C_OnLoaded_2C36155A403C719208BED39CA1C10AB7::Loaded' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.OnLoaded_439024D14E39F2D1FD9BF28D508D3C01
// 0x0008 (0x0008 - 0x0000)
struct CharaBadStatus_C_OnLoaded_439024D14E39F2D1FD9BF28D508D3C01 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_OnLoaded_439024D14E39F2D1FD9BF28D508D3C01) == 0x000008, "Wrong alignment on CharaBadStatus_C_OnLoaded_439024D14E39F2D1FD9BF28D508D3C01");
static_assert(sizeof(CharaBadStatus_C_OnLoaded_439024D14E39F2D1FD9BF28D508D3C01) == 0x000008, "Wrong size on CharaBadStatus_C_OnLoaded_439024D14E39F2D1FD9BF28D508D3C01");
static_assert(offsetof(CharaBadStatus_C_OnLoaded_439024D14E39F2D1FD9BF28D508D3C01, Loaded) == 0x000000, "Member 'CharaBadStatus_C_OnLoaded_439024D14E39F2D1FD9BF28D508D3C01::Loaded' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.OnLoaded_7A18704E428AB0926DCD3B933D825CD7
// 0x0008 (0x0008 - 0x0000)
struct CharaBadStatus_C_OnLoaded_7A18704E428AB0926DCD3B933D825CD7 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_OnLoaded_7A18704E428AB0926DCD3B933D825CD7) == 0x000008, "Wrong alignment on CharaBadStatus_C_OnLoaded_7A18704E428AB0926DCD3B933D825CD7");
static_assert(sizeof(CharaBadStatus_C_OnLoaded_7A18704E428AB0926DCD3B933D825CD7) == 0x000008, "Wrong size on CharaBadStatus_C_OnLoaded_7A18704E428AB0926DCD3B933D825CD7");
static_assert(offsetof(CharaBadStatus_C_OnLoaded_7A18704E428AB0926DCD3B933D825CD7, Loaded) == 0x000000, "Member 'CharaBadStatus_C_OnLoaded_7A18704E428AB0926DCD3B933D825CD7::Loaded' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.OnLoaded_7DB2AD9B447B846D1310019C86FD0D65
// 0x0008 (0x0008 - 0x0000)
struct CharaBadStatus_C_OnLoaded_7DB2AD9B447B846D1310019C86FD0D65 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_OnLoaded_7DB2AD9B447B846D1310019C86FD0D65) == 0x000008, "Wrong alignment on CharaBadStatus_C_OnLoaded_7DB2AD9B447B846D1310019C86FD0D65");
static_assert(sizeof(CharaBadStatus_C_OnLoaded_7DB2AD9B447B846D1310019C86FD0D65) == 0x000008, "Wrong size on CharaBadStatus_C_OnLoaded_7DB2AD9B447B846D1310019C86FD0D65");
static_assert(offsetof(CharaBadStatus_C_OnLoaded_7DB2AD9B447B846D1310019C86FD0D65, Loaded) == 0x000000, "Member 'CharaBadStatus_C_OnLoaded_7DB2AD9B447B846D1310019C86FD0D65::Loaded' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.OnLoaded_BE1FD54A4ECED4921235E4BD64057F2C
// 0x0008 (0x0008 - 0x0000)
struct CharaBadStatus_C_OnLoaded_BE1FD54A4ECED4921235E4BD64057F2C final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_OnLoaded_BE1FD54A4ECED4921235E4BD64057F2C) == 0x000008, "Wrong alignment on CharaBadStatus_C_OnLoaded_BE1FD54A4ECED4921235E4BD64057F2C");
static_assert(sizeof(CharaBadStatus_C_OnLoaded_BE1FD54A4ECED4921235E4BD64057F2C) == 0x000008, "Wrong size on CharaBadStatus_C_OnLoaded_BE1FD54A4ECED4921235E4BD64057F2C");
static_assert(offsetof(CharaBadStatus_C_OnLoaded_BE1FD54A4ECED4921235E4BD64057F2C, Loaded) == 0x000000, "Member 'CharaBadStatus_C_OnLoaded_BE1FD54A4ECED4921235E4BD64057F2C::Loaded' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.OnLoaded_290DCAEC4D120EF6CEB47A8B9A9D2E3B
// 0x0008 (0x0008 - 0x0000)
struct CharaBadStatus_C_OnLoaded_290DCAEC4D120EF6CEB47A8B9A9D2E3B final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_OnLoaded_290DCAEC4D120EF6CEB47A8B9A9D2E3B) == 0x000008, "Wrong alignment on CharaBadStatus_C_OnLoaded_290DCAEC4D120EF6CEB47A8B9A9D2E3B");
static_assert(sizeof(CharaBadStatus_C_OnLoaded_290DCAEC4D120EF6CEB47A8B9A9D2E3B) == 0x000008, "Wrong size on CharaBadStatus_C_OnLoaded_290DCAEC4D120EF6CEB47A8B9A9D2E3B");
static_assert(offsetof(CharaBadStatus_C_OnLoaded_290DCAEC4D120EF6CEB47A8B9A9D2E3B, Loaded) == 0x000000, "Member 'CharaBadStatus_C_OnLoaded_290DCAEC4D120EF6CEB47A8B9A9D2E3B::Loaded' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.CalcBadStatus
// 0x00C8 (0x00C8 - 0x0000)
struct CharaBadStatus_C_CalcBadStatus final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29CC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          Lo_TypeD;                                          // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<E_BAD_STATUS>                          Lo_TypeC;                                          // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<E_BAD_STATUS>                          Lo_TypeB;                                          // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<E_BAD_STATUS>                          Lo_TypeA;                                          // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<E_BAD_STATUS>                          K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	TArray<E_BAD_STATUS>                          K2Node_MakeArray_Array_1;                          // 0x0058(0x0010)(ReferenceParm)
	TArray<E_BAD_STATUS>                          K2Node_MakeArray_Array_2;                          // 0x0068(0x0010)(ReferenceParm)
	TArray<E_BAD_STATUS>                          K2Node_MakeArray_Array_3;                          // 0x0078(0x0010)(ReferenceParm)
	TArray<E_BAD_STATUS>                          CallFunc_GetCurrentSurfaceMaterial_SurfaceMaterial; // 0x0088(0x0010)(ReferenceParm)
	int32                                         CallFunc_PickUpOffBit_Off;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29CD[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          CallFunc_PickupSurfaceStatusMaterial_ret;          // 0x00A0(0x0010)(ReferenceParm)
	bool                                          CallFunc_PickupSurfaceStatusMaterial_IsNeedResetMaterial; // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29CE[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SetUpState_State;                         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetUpState_State_1;                       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetUpState_State_2;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetUpState_State_3;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_CalcBadStatus) == 0x000008, "Wrong alignment on CharaBadStatus_C_CalcBadStatus");
static_assert(sizeof(CharaBadStatus_C_CalcBadStatus) == 0x0000C8, "Wrong size on CharaBadStatus_C_CalcBadStatus");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatus, State) == 0x000000, "Member 'CharaBadStatus_C_CalcBadStatus::State' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatus, Lo_TypeD) == 0x000008, "Member 'CharaBadStatus_C_CalcBadStatus::Lo_TypeD' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatus, Lo_TypeC) == 0x000018, "Member 'CharaBadStatus_C_CalcBadStatus::Lo_TypeC' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatus, Lo_TypeB) == 0x000028, "Member 'CharaBadStatus_C_CalcBadStatus::Lo_TypeB' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatus, Lo_TypeA) == 0x000038, "Member 'CharaBadStatus_C_CalcBadStatus::Lo_TypeA' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatus, K2Node_MakeArray_Array) == 0x000048, "Member 'CharaBadStatus_C_CalcBadStatus::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatus, K2Node_MakeArray_Array_1) == 0x000058, "Member 'CharaBadStatus_C_CalcBadStatus::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatus, K2Node_MakeArray_Array_2) == 0x000068, "Member 'CharaBadStatus_C_CalcBadStatus::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatus, K2Node_MakeArray_Array_3) == 0x000078, "Member 'CharaBadStatus_C_CalcBadStatus::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatus, CallFunc_GetCurrentSurfaceMaterial_SurfaceMaterial) == 0x000088, "Member 'CharaBadStatus_C_CalcBadStatus::CallFunc_GetCurrentSurfaceMaterial_SurfaceMaterial' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatus, CallFunc_PickUpOffBit_Off) == 0x000098, "Member 'CharaBadStatus_C_CalcBadStatus::CallFunc_PickUpOffBit_Off' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatus, CallFunc_PickupSurfaceStatusMaterial_ret) == 0x0000A0, "Member 'CharaBadStatus_C_CalcBadStatus::CallFunc_PickupSurfaceStatusMaterial_ret' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatus, CallFunc_PickupSurfaceStatusMaterial_IsNeedResetMaterial) == 0x0000B0, "Member 'CharaBadStatus_C_CalcBadStatus::CallFunc_PickupSurfaceStatusMaterial_IsNeedResetMaterial' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatus, CallFunc_SetUpState_State) == 0x0000B4, "Member 'CharaBadStatus_C_CalcBadStatus::CallFunc_SetUpState_State' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatus, CallFunc_SetUpState_State_1) == 0x0000B8, "Member 'CharaBadStatus_C_CalcBadStatus::CallFunc_SetUpState_State_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatus, CallFunc_SetUpState_State_2) == 0x0000BC, "Member 'CharaBadStatus_C_CalcBadStatus::CallFunc_SetUpState_State_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatus, CallFunc_SetUpState_State_3) == 0x0000C0, "Member 'CharaBadStatus_C_CalcBadStatus::CallFunc_SetUpState_State_3' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.SetUpState
// 0x0020 (0x0020 - 0x0000)
struct CharaBadStatus_C_SetUpState final
{
public:
	TArray<E_BAD_STATUS>                          BadStatus;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         State;                                             // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ret;                                               // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetUpState_inner_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_SetUpState) == 0x000008, "Wrong alignment on CharaBadStatus_C_SetUpState");
static_assert(sizeof(CharaBadStatus_C_SetUpState) == 0x000020, "Wrong size on CharaBadStatus_C_SetUpState");
static_assert(offsetof(CharaBadStatus_C_SetUpState, BadStatus) == 0x000000, "Member 'CharaBadStatus_C_SetUpState::BadStatus' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_SetUpState, State) == 0x000010, "Member 'CharaBadStatus_C_SetUpState::State' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_SetUpState, Ret) == 0x000014, "Member 'CharaBadStatus_C_SetUpState::Ret' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_SetUpState, CallFunc_SetUpState_inner_ReturnValue) == 0x000018, "Member 'CharaBadStatus_C_SetUpState::CallFunc_SetUpState_inner_ReturnValue' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.CalcBadStatusImpl
// 0x00D8 (0x00D8 - 0x0000)
struct CharaBadStatus_C_CalcBadStatusImpl final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29CF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          Current;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<E_BAD_STATUS>                          Added;                                             // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<E_BAD_STATUS>                          Remove;                                            // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<E_BAD_STATUS>                          Lo_Bst;                                            // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         BeforeBothExist;                                   // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentBothExist;                                  // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Differ;                                            // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PickUpBothExistBit_ret;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PickUpDifferenceBit_ret;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PickUpBothExistBit_ret_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<E_BAD_STATUS>                          CallFunc_PickUpStatus_inner_ReturnValue;           // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29D0[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          CallFunc_PickUpStatus_inner_ReturnValue_1;         // 0x0090(0x0010)(ReferenceParm)
	int32                                         CallFunc_And_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item;                           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29D1[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          CallFunc_PickUpStatus_inner_ReturnValue_2;         // 0x00A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item_1;                         // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29D2[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29D3[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_CalcBadStatusImpl) == 0x000008, "Wrong alignment on CharaBadStatus_C_CalcBadStatusImpl");
static_assert(sizeof(CharaBadStatus_C_CalcBadStatusImpl) == 0x0000D8, "Wrong size on CharaBadStatus_C_CalcBadStatusImpl");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, State) == 0x000000, "Member 'CharaBadStatus_C_CalcBadStatusImpl::State' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, Current) == 0x000008, "Member 'CharaBadStatus_C_CalcBadStatusImpl::Current' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, Added) == 0x000018, "Member 'CharaBadStatus_C_CalcBadStatusImpl::Added' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, Remove) == 0x000028, "Member 'CharaBadStatus_C_CalcBadStatusImpl::Remove' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, Lo_Bst) == 0x000038, "Member 'CharaBadStatus_C_CalcBadStatusImpl::Lo_Bst' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, BeforeBothExist) == 0x000048, "Member 'CharaBadStatus_C_CalcBadStatusImpl::BeforeBothExist' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CurrentBothExist) == 0x00004C, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CurrentBothExist' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, Differ) == 0x000050, "Member 'CharaBadStatus_C_CalcBadStatusImpl::Differ' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, Temp_int_Array_Index_Variable) == 0x000054, "Member 'CharaBadStatus_C_CalcBadStatusImpl::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'CharaBadStatus_C_CalcBadStatusImpl::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'CharaBadStatus_C_CalcBadStatusImpl::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, Temp_int_Loop_Counter_Variable_1) == 0x000064, "Member 'CharaBadStatus_C_CalcBadStatusImpl::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_PickUpBothExistBit_ret) == 0x00006C, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_PickUpBothExistBit_ret' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_PickUpDifferenceBit_ret) == 0x000070, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_PickUpDifferenceBit_ret' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_PickUpBothExistBit_ret_1) == 0x000074, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_PickUpBothExistBit_ret_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_PickUpStatus_inner_ReturnValue) == 0x000078, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_PickUpStatus_inner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_And_IntInt_ReturnValue) == 0x000088, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_PickUpStatus_inner_ReturnValue_1) == 0x000090, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_PickUpStatus_inner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_And_IntInt_ReturnValue_1) == 0x0000A0, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_And_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_Array_Get_Item) == 0x0000A4, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_PickUpStatus_inner_ReturnValue_2) == 0x0000A8, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_PickUpStatus_inner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_Array_AddUnique_ReturnValue) == 0x0000B8, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_Array_Get_Item_1) == 0x0000BC, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0000C4, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_Array_Length_ReturnValue_1) == 0x0000CC, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_CalcBadStatusImpl, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D0, "Member 'CharaBadStatus_C_CalcBadStatusImpl::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.ApplyCharaStatus
// 0x0048 (0x0048 - 0x0000)
struct CharaBadStatus_C_ApplyCharaStatus final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsNoCureEffect;                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Param_IsLacerationDamage;                          // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29D4[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          Lo_OnBadStatusMaterial;                            // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<E_BAD_STATUS>                          Lo_OffBadStatusMaterial;                           // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29D5[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_BadStatusMaterialOn_NoUse;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_BadStatusMaterialOff_NoUse;            // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29D6[0x1];                                     // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_ApplyCharaStatus) == 0x000008, "Wrong alignment on CharaBadStatus_C_ApplyCharaStatus");
static_assert(sizeof(CharaBadStatus_C_ApplyCharaStatus) == 0x000048, "Wrong size on CharaBadStatus_C_ApplyCharaStatus");
static_assert(offsetof(CharaBadStatus_C_ApplyCharaStatus, State) == 0x000000, "Member 'CharaBadStatus_C_ApplyCharaStatus::State' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ApplyCharaStatus, Param_IsNoCureEffect) == 0x000004, "Member 'CharaBadStatus_C_ApplyCharaStatus::Param_IsNoCureEffect' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ApplyCharaStatus, Param_IsLacerationDamage) == 0x000005, "Member 'CharaBadStatus_C_ApplyCharaStatus::Param_IsLacerationDamage' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ApplyCharaStatus, Lo_OnBadStatusMaterial) == 0x000008, "Member 'CharaBadStatus_C_ApplyCharaStatus::Lo_OnBadStatusMaterial' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ApplyCharaStatus, Lo_OffBadStatusMaterial) == 0x000018, "Member 'CharaBadStatus_C_ApplyCharaStatus::Lo_OffBadStatusMaterial' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ApplyCharaStatus, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'CharaBadStatus_C_ApplyCharaStatus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ApplyCharaStatus, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'CharaBadStatus_C_ApplyCharaStatus::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ApplyCharaStatus, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'CharaBadStatus_C_ApplyCharaStatus::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ApplyCharaStatus, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000034, "Member 'CharaBadStatus_C_ApplyCharaStatus::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ApplyCharaStatus, CallFunc_BI_BadStatusMaterialOn_NoUse) == 0x000035, "Member 'CharaBadStatus_C_ApplyCharaStatus::CallFunc_BI_BadStatusMaterialOn_NoUse' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ApplyCharaStatus, CallFunc_BI_BadStatusMaterialOff_NoUse) == 0x000036, "Member 'CharaBadStatus_C_ApplyCharaStatus::CallFunc_BI_BadStatusMaterialOff_NoUse' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ApplyCharaStatus, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000038, "Member 'CharaBadStatus_C_ApplyCharaStatus::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ApplyCharaStatus, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'CharaBadStatus_C_ApplyCharaStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.UpdateTypeA
// 0x0100 (0x0100 - 0x0000)
struct CharaBadStatus_C_UpdateTypeA final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_SeLocation;                                     // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBadStatusParticles_T>          L_Settings;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29D7[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusParticles_T                  CallFunc_Array_Get_Item;                           // 0x0038(0x0060)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29D8[0x2];                                     // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsIncludeStatus_IsInclude;                // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29D9[0x1];                                     // 0x00B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IsIncludeStatus_Index;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29DA[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29DB[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29DC[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBadStatusParticles_T>          CallFunc_PickUpParticleSettings_ParticleSettings;  // 0x00D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29DD[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue_1;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29DE[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_UpdateTypeA) == 0x000008, "Wrong alignment on CharaBadStatus_C_UpdateTypeA");
static_assert(sizeof(CharaBadStatus_C_UpdateTypeA) == 0x000100, "Wrong size on CharaBadStatus_C_UpdateTypeA");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, DeltaSec) == 0x000000, "Member 'CharaBadStatus_C_UpdateTypeA::DeltaSec' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, Lo_SeLocation) == 0x000004, "Member 'CharaBadStatus_C_UpdateTypeA::Lo_SeLocation' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, L_Settings) == 0x000010, "Member 'CharaBadStatus_C_UpdateTypeA::L_Settings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, Temp_int_Array_Index_Variable) == 0x000020, "Member 'CharaBadStatus_C_UpdateTypeA::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'CharaBadStatus_C_UpdateTypeA::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, Temp_int_Variable) == 0x000028, "Member 'CharaBadStatus_C_UpdateTypeA::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_Array_Get_Item) == 0x000038, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, K2Node_SwitchEnum_CmpSuccess) == 0x00009D, "Member 'CharaBadStatus_C_UpdateTypeA::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_GetOwner_ReturnValue) == 0x0000A0, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A8, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000B4, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_IsActive_ReturnValue) == 0x0000B5, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_IsIncludeStatus_IsInclude) == 0x0000B6, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_IsIncludeStatus_IsInclude' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_IsIncludeStatus_Index) == 0x0000B8, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_IsIncludeStatus_Index' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_Array_Length_ReturnValue_2) == 0x0000BC, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000C0, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_Array_Length_ReturnValue_3) == 0x0000C4, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000C8, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_Array_Length_ReturnValue_4) == 0x0000CC, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D4, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_PickUpParticleSettings_ParticleSettings) == 0x0000D8, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_PickUpParticleSettings_ParticleSettings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000E8, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000EC, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_IsActive_ReturnValue_1) == 0x0000F0, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_IsActive_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_Array_Length_ReturnValue_5) == 0x0000F4, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_BooleanOR_ReturnValue) == 0x0000F8, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeA, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0000F9, "Member 'CharaBadStatus_C_UpdateTypeA::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.UpdateTypeB
// 0x0170 (0x0170 - 0x0000)
struct CharaBadStatus_C_UpdateTypeB final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  Lo_AddBadStatus;                                   // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29DF[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Lo_SeLocation;                                     // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29E0[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBadStatusParticles_T>          Lo_Settings;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBadStatusParticles_T                  CallFunc_Array_Get_Item;                           // 0x0058(0x0060)(ContainsInstancedReference, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29E1[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Map_Find_Value;                           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29E2[0x2];                                     // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29E3[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UParticleSystemComponent*>       CallFunc_Map_Values_Values;                        // 0x00D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item_2;                         // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29E4[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29E5[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item_3;                         // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29E6[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SetUpState_State;                         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29E7[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          CallFunc_PickupSurfaceStatusMaterial_ret;          // 0x0130(0x0010)(ReferenceParm)
	bool                                          CallFunc_PickupSurfaceStatusMaterial_IsNeedResetMaterial; // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29E8[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBadStatusParticles_T>          CallFunc_PickUpParticleSettings_ParticleSettings;  // 0x0148(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsSameArray_IsSame;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29E9[0x2];                                     // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29EA[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_UpdateTypeB) == 0x000008, "Wrong alignment on CharaBadStatus_C_UpdateTypeB");
static_assert(sizeof(CharaBadStatus_C_UpdateTypeB) == 0x000170, "Wrong size on CharaBadStatus_C_UpdateTypeB");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, DeltaSec) == 0x000000, "Member 'CharaBadStatus_C_UpdateTypeB::DeltaSec' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, Lo_AddBadStatus) == 0x000004, "Member 'CharaBadStatus_C_UpdateTypeB::Lo_AddBadStatus' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, Lo_SeLocation) == 0x000008, "Member 'CharaBadStatus_C_UpdateTypeB::Lo_SeLocation' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, Lo_Settings) == 0x000018, "Member 'CharaBadStatus_C_UpdateTypeB::Lo_Settings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'CharaBadStatus_C_UpdateTypeB::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'CharaBadStatus_C_UpdateTypeB::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, Temp_int_Array_Index_Variable) == 0x000038, "Member 'CharaBadStatus_C_UpdateTypeB::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, Temp_int_Loop_Counter_Variable_2) == 0x00003C, "Member 'CharaBadStatus_C_UpdateTypeB::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, Temp_int_Loop_Counter_Variable_3) == 0x000044, "Member 'CharaBadStatus_C_UpdateTypeB::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Add_IntInt_ReturnValue_3) == 0x000048, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'CharaBadStatus_C_UpdateTypeB::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, Temp_int_Array_Index_Variable_2) == 0x000050, "Member 'CharaBadStatus_C_UpdateTypeB::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, Temp_int_Array_Index_Variable_3) == 0x000054, "Member 'CharaBadStatus_C_UpdateTypeB::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Array_Get_Item) == 0x000058, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Map_Find_Value) == 0x0000C0, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Map_Find_ReturnValue) == 0x0000C8, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, K2Node_SwitchEnum_CmpSuccess) == 0x0000C9, "Member 'CharaBadStatus_C_UpdateTypeB::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Array_Length_ReturnValue_1) == 0x0000D0, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D5, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Map_Values_Values) == 0x0000D8, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Array_Get_Item_2) == 0x0000E8, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Array_Length_ReturnValue_2) == 0x0000F0, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, K2Node_MakeArray_Array) == 0x0000F8, "Member 'CharaBadStatus_C_UpdateTypeB::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Less_IntInt_ReturnValue_2) == 0x000108, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_GetOwner_ReturnValue) == 0x000110, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000118, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Array_Get_Item_3) == 0x000124, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_SetUpState_State) == 0x000128, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_SetUpState_State' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_PickupSurfaceStatusMaterial_ret) == 0x000130, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_PickupSurfaceStatusMaterial_ret' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_PickupSurfaceStatusMaterial_IsNeedResetMaterial) == 0x000140, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_PickupSurfaceStatusMaterial_IsNeedResetMaterial' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_PickUpParticleSettings_ParticleSettings) == 0x000148, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_PickUpParticleSettings_ParticleSettings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_IsSameArray_IsSame) == 0x000158, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_IsSameArray_IsSame' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Not_PreBool_ReturnValue) == 0x000159, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Array_Length_ReturnValue_3) == 0x00015C, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Less_IntInt_ReturnValue_3) == 0x000160, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Array_Length_ReturnValue_4) == 0x000164, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeB, CallFunc_Greater_IntInt_ReturnValue) == 0x000168, "Member 'CharaBadStatus_C_UpdateTypeB::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.UpdateTypeC
// 0x0108 (0x0108 - 0x0000)
struct CharaBadStatus_C_UpdateTypeC final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_SeLocation;                                     // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBadStatusParticles_T>          Lo_Settings;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<E_BAD_STATUS>                          K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	struct FBadStatusParticles_T                  CallFunc_Array_Get_Item;                           // 0x0040(0x0060)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29EB[0x2];                                     // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29EC[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29ED[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SetUpState_State;                         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBadStatusParticles_T>          CallFunc_PickUpParticleSettings_ParticleSettings;  // 0x00D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<E_BAD_STATUS>                          CallFunc_PickupSurfaceStatusMaterial_ret;          // 0x00E0(0x0010)(ReferenceParm)
	bool                                          CallFunc_PickupSurfaceStatusMaterial_IsNeedResetMaterial; // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSameArray_IsSame;                       // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29EE[0x1];                                     // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29EF[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_UpdateTypeC) == 0x000008, "Wrong alignment on CharaBadStatus_C_UpdateTypeC");
static_assert(sizeof(CharaBadStatus_C_UpdateTypeC) == 0x000108, "Wrong size on CharaBadStatus_C_UpdateTypeC");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, DeltaSec) == 0x000000, "Member 'CharaBadStatus_C_UpdateTypeC::DeltaSec' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, Lo_SeLocation) == 0x000004, "Member 'CharaBadStatus_C_UpdateTypeC::Lo_SeLocation' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, Lo_Settings) == 0x000010, "Member 'CharaBadStatus_C_UpdateTypeC::Lo_Settings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, Temp_int_Array_Index_Variable) == 0x000020, "Member 'CharaBadStatus_C_UpdateTypeC::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'CharaBadStatus_C_UpdateTypeC::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'CharaBadStatus_C_UpdateTypeC::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, K2Node_MakeArray_Array) == 0x000030, "Member 'CharaBadStatus_C_UpdateTypeC::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_Array_Get_Item) == 0x000040, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, K2Node_SwitchEnum_CmpSuccess) == 0x0000A5, "Member 'CharaBadStatus_C_UpdateTypeC::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, Temp_int_Loop_Counter_Variable_1) == 0x0000A8, "Member 'CharaBadStatus_C_UpdateTypeC::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_GetOwner_ReturnValue) == 0x0000B0, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C4, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_SetUpState_State) == 0x0000CC, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_SetUpState_State' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_PickUpParticleSettings_ParticleSettings) == 0x0000D0, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_PickUpParticleSettings_ParticleSettings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_PickupSurfaceStatusMaterial_ret) == 0x0000E0, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_PickupSurfaceStatusMaterial_ret' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_PickupSurfaceStatusMaterial_IsNeedResetMaterial) == 0x0000F0, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_PickupSurfaceStatusMaterial_IsNeedResetMaterial' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_IsSameArray_IsSame) == 0x0000F1, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_IsSameArray_IsSame' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_Not_PreBool_ReturnValue) == 0x0000F2, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_Array_Length_ReturnValue_1) == 0x0000F4, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000F8, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_Array_Length_ReturnValue_2) == 0x0000FC, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeC, CallFunc_Greater_IntInt_ReturnValue) == 0x000100, "Member 'CharaBadStatus_C_UpdateTypeC::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.UpdateTypeD
// 0x00D0 (0x00D0 - 0x0000)
struct CharaBadStatus_C_UpdateTypeD final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_SeLocation;                                     // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBadStatusParticles_T>          Lo_Settings;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29F0[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBadStatusParticles_T>          CallFunc_PickUpParticleSettings_ParticleSettings;  // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetUpState_State;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_PickUpSurfaceStatus_ret;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PickUpSurfaceStatus_IsNeedResetMaterial;  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29F1[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusParticles_T                  CallFunc_Array_Get_Item;                           // 0x0060(0x0060)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29F2[0x1];                                     // 0x00C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_UpdateTypeD) == 0x000008, "Wrong alignment on CharaBadStatus_C_UpdateTypeD");
static_assert(sizeof(CharaBadStatus_C_UpdateTypeD) == 0x0000D0, "Wrong size on CharaBadStatus_C_UpdateTypeD");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, DeltaSec) == 0x000000, "Member 'CharaBadStatus_C_UpdateTypeD::DeltaSec' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, Lo_SeLocation) == 0x000004, "Member 'CharaBadStatus_C_UpdateTypeD::Lo_SeLocation' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, Lo_Settings) == 0x000010, "Member 'CharaBadStatus_C_UpdateTypeD::Lo_Settings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, Temp_int_Array_Index_Variable) == 0x000020, "Member 'CharaBadStatus_C_UpdateTypeD::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, CallFunc_PickUpParticleSettings_ParticleSettings) == 0x000028, "Member 'CharaBadStatus_C_UpdateTypeD::CallFunc_PickUpParticleSettings_ParticleSettings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'CharaBadStatus_C_UpdateTypeD::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'CharaBadStatus_C_UpdateTypeD::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'CharaBadStatus_C_UpdateTypeD::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'CharaBadStatus_C_UpdateTypeD::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, CallFunc_SetUpState_State) == 0x000054, "Member 'CharaBadStatus_C_UpdateTypeD::CallFunc_SetUpState_State' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, CallFunc_PickUpSurfaceStatus_ret) == 0x000058, "Member 'CharaBadStatus_C_UpdateTypeD::CallFunc_PickUpSurfaceStatus_ret' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, CallFunc_PickUpSurfaceStatus_IsNeedResetMaterial) == 0x000059, "Member 'CharaBadStatus_C_UpdateTypeD::CallFunc_PickUpSurfaceStatus_IsNeedResetMaterial' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, CallFunc_Array_Get_Item) == 0x000060, "Member 'CharaBadStatus_C_UpdateTypeD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'CharaBadStatus_C_UpdateTypeD::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'CharaBadStatus_C_UpdateTypeD::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, K2Node_SwitchEnum_CmpSuccess) == 0x0000C5, "Member 'CharaBadStatus_C_UpdateTypeD::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C6, "Member 'CharaBadStatus_C_UpdateTypeD::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'CharaBadStatus_C_UpdateTypeD::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateTypeD, CallFunc_Greater_IntInt_ReturnValue) == 0x0000CC, "Member 'CharaBadStatus_C_UpdateTypeD::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.UpdateDecal
// 0x00A8 (0x00A8 - 0x0000)
struct CharaBadStatus_C_UpdateDecal final
{
public:
	TArray<struct FBadStatusDecal_T>              Lo_LacerationData;                                 // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29F3[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusDecal_T                      CallFunc_Array_Get_Item;                           // 0x0018(0x0058)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29F4[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBadStatusDecal_T>              CallFunc_PickUpDecalSettings_DecalSettings;        // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsRegistered_IsRegistered;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29F5[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29F6[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_UpdateDecal) == 0x000008, "Wrong alignment on CharaBadStatus_C_UpdateDecal");
static_assert(sizeof(CharaBadStatus_C_UpdateDecal) == 0x0000A8, "Wrong size on CharaBadStatus_C_UpdateDecal");
static_assert(offsetof(CharaBadStatus_C_UpdateDecal, Lo_LacerationData) == 0x000000, "Member 'CharaBadStatus_C_UpdateDecal::Lo_LacerationData' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateDecal, Temp_int_Array_Index_Variable) == 0x000010, "Member 'CharaBadStatus_C_UpdateDecal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateDecal, CallFunc_Array_Get_Item) == 0x000018, "Member 'CharaBadStatus_C_UpdateDecal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateDecal, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'CharaBadStatus_C_UpdateDecal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateDecal, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'CharaBadStatus_C_UpdateDecal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateDecal, K2Node_SwitchEnum_CmpSuccess) == 0x000078, "Member 'CharaBadStatus_C_UpdateDecal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateDecal, CallFunc_Less_IntInt_ReturnValue) == 0x000079, "Member 'CharaBadStatus_C_UpdateDecal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateDecal, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'CharaBadStatus_C_UpdateDecal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateDecal, CallFunc_PickUpDecalSettings_DecalSettings) == 0x000080, "Member 'CharaBadStatus_C_UpdateDecal::CallFunc_PickUpDecalSettings_DecalSettings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateDecal, CallFunc_IsRegistered_IsRegistered) == 0x000090, "Member 'CharaBadStatus_C_UpdateDecal::CallFunc_IsRegistered_IsRegistered' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateDecal, CallFunc_Array_Length_ReturnValue_1) == 0x000094, "Member 'CharaBadStatus_C_UpdateDecal::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateDecal, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'CharaBadStatus_C_UpdateDecal::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateDecal, CallFunc_Array_Length_ReturnValue_2) == 0x00009C, "Member 'CharaBadStatus_C_UpdateDecal::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateDecal, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'CharaBadStatus_C_UpdateDecal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateDecal, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000A1, "Member 'CharaBadStatus_C_UpdateDecal::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.ResetPSComp
// 0x0010 (0x0010 - 0x0000)
struct CharaBadStatus_C_ResetPSComp final
{
public:
	class UParticleSystemComponent*               PSComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_ResetPSComp) == 0x000008, "Wrong alignment on CharaBadStatus_C_ResetPSComp");
static_assert(sizeof(CharaBadStatus_C_ResetPSComp) == 0x000010, "Wrong size on CharaBadStatus_C_ResetPSComp");
static_assert(offsetof(CharaBadStatus_C_ResetPSComp, PSComp) == 0x000000, "Member 'CharaBadStatus_C_ResetPSComp::PSComp' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ResetPSComp, CallFunc_IsActive_ReturnValue) == 0x000008, "Member 'CharaBadStatus_C_ResetPSComp::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.Update_PSLocation
// 0x00D0 (0x00D0 - 0x0000)
struct CharaBadStatus_C_Update_PSLocation final
{
public:
	class UParticleSystemComponent*               SPComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  State;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRegistered_IsRegistered;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29F7[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBadStatusParticles_T>          CallFunc_PickUpParticleSettings_ParticleSettings;  // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FName                                   CallFunc_FindBadStatusSocketName_SocketName;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetTargetMesh_ParticleSettings;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29F8[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29F9[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0044(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_Update_PSLocation) == 0x000008, "Wrong alignment on CharaBadStatus_C_Update_PSLocation");
static_assert(sizeof(CharaBadStatus_C_Update_PSLocation) == 0x0000D0, "Wrong size on CharaBadStatus_C_Update_PSLocation");
static_assert(offsetof(CharaBadStatus_C_Update_PSLocation, SPComp) == 0x000000, "Member 'CharaBadStatus_C_Update_PSLocation::SPComp' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_Update_PSLocation, State) == 0x000008, "Member 'CharaBadStatus_C_Update_PSLocation::State' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_Update_PSLocation, CallFunc_IsRegistered_IsRegistered) == 0x000009, "Member 'CharaBadStatus_C_Update_PSLocation::CallFunc_IsRegistered_IsRegistered' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_Update_PSLocation, CallFunc_PickUpParticleSettings_ParticleSettings) == 0x000010, "Member 'CharaBadStatus_C_Update_PSLocation::CallFunc_PickUpParticleSettings_ParticleSettings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_Update_PSLocation, CallFunc_FindBadStatusSocketName_SocketName) == 0x000020, "Member 'CharaBadStatus_C_Update_PSLocation::CallFunc_FindBadStatusSocketName_SocketName' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_Update_PSLocation, CallFunc_GetTargetMesh_ParticleSettings) == 0x000028, "Member 'CharaBadStatus_C_Update_PSLocation::CallFunc_GetTargetMesh_ParticleSettings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_Update_PSLocation, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000030, "Member 'CharaBadStatus_C_Update_PSLocation::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_Update_PSLocation, CallFunc_GetSocketLocation_ReturnValue) == 0x000034, "Member 'CharaBadStatus_C_Update_PSLocation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_Update_PSLocation, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000040, "Member 'CharaBadStatus_C_Update_PSLocation::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_Update_PSLocation, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000044, "Member 'CharaBadStatus_C_Update_PSLocation::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_Update_PSLocation, CallFunc_BooleanOR_ReturnValue) == 0x0000CC, "Member 'CharaBadStatus_C_Update_PSLocation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_Update_PSLocation, CallFunc_Not_PreBool_ReturnValue) == 0x0000CD, "Member 'CharaBadStatus_C_Update_PSLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.IsIncludeStatus
// 0x0038 (0x0038 - 0x0000)
struct CharaBadStatus_C_IsIncludeStatus final
{
public:
	E_BAD_STATUS                                  Data;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29FA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          List;                                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsInclude;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29FB[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item;                           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29FC[0x1];                                     // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_IsIncludeStatus) == 0x000008, "Wrong alignment on CharaBadStatus_C_IsIncludeStatus");
static_assert(sizeof(CharaBadStatus_C_IsIncludeStatus) == 0x000038, "Wrong size on CharaBadStatus_C_IsIncludeStatus");
static_assert(offsetof(CharaBadStatus_C_IsIncludeStatus, Data) == 0x000000, "Member 'CharaBadStatus_C_IsIncludeStatus::Data' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsIncludeStatus, List) == 0x000008, "Member 'CharaBadStatus_C_IsIncludeStatus::List' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsIncludeStatus, IsInclude) == 0x000018, "Member 'CharaBadStatus_C_IsIncludeStatus::IsInclude' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsIncludeStatus, Param_Index) == 0x00001C, "Member 'CharaBadStatus_C_IsIncludeStatus::Param_Index' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsIncludeStatus, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'CharaBadStatus_C_IsIncludeStatus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsIncludeStatus, Temp_int_Array_Index_Variable) == 0x000024, "Member 'CharaBadStatus_C_IsIncludeStatus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsIncludeStatus, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'CharaBadStatus_C_IsIncludeStatus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsIncludeStatus, CallFunc_Array_Get_Item) == 0x00002C, "Member 'CharaBadStatus_C_IsIncludeStatus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsIncludeStatus, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002D, "Member 'CharaBadStatus_C_IsIncludeStatus::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsIncludeStatus, CallFunc_Less_IntInt_ReturnValue) == 0x00002E, "Member 'CharaBadStatus_C_IsIncludeStatus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsIncludeStatus, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'CharaBadStatus_C_IsIncludeStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.UpdateBadStateDirectioin
// 0x0008 (0x0008 - 0x0000)
struct CharaBadStatus_C_UpdateBadStateDirectioin final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasBadStatus_HasBadStatus;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_UpdateBadStateDirectioin) == 0x000004, "Wrong alignment on CharaBadStatus_C_UpdateBadStateDirectioin");
static_assert(sizeof(CharaBadStatus_C_UpdateBadStateDirectioin) == 0x000008, "Wrong size on CharaBadStatus_C_UpdateBadStateDirectioin");
static_assert(offsetof(CharaBadStatus_C_UpdateBadStateDirectioin, DeltaSec) == 0x000000, "Member 'CharaBadStatus_C_UpdateBadStateDirectioin::DeltaSec' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateBadStateDirectioin, CallFunc_HasBadStatus_HasBadStatus) == 0x000004, "Member 'CharaBadStatus_C_UpdateBadStateDirectioin::CallFunc_HasBadStatus_HasBadStatus' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateBadStateDirectioin, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'CharaBadStatus_C_UpdateBadStateDirectioin::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.ResetEffectImpl
// 0x0001 (0x0001 - 0x0000)
struct CharaBadStatus_C_ResetEffectImpl final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_ResetEffectImpl) == 0x000001, "Wrong alignment on CharaBadStatus_C_ResetEffectImpl");
static_assert(sizeof(CharaBadStatus_C_ResetEffectImpl) == 0x000001, "Wrong size on CharaBadStatus_C_ResetEffectImpl");
static_assert(offsetof(CharaBadStatus_C_ResetEffectImpl, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'CharaBadStatus_C_ResetEffectImpl::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.UpdateAddStatusDirection
// 0x00E8 (0x00E8 - 0x0000)
struct CharaBadStatus_C_UpdateAddStatusDirection final
{
public:
	TArray<struct FBadStatusParticles_T>          Settings;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item_1;                         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29FD[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBadStatusDecal_T>              CallFunc_PickUpDecalSettings_DecalSettings;        // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FBadStatusDecal_T>              CallFunc_PickUpDecalSettings_DecalSettings_1;      // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FBadStatusParticles_T>          CallFunc_PickUpParticleSettings_ParticleSettings;  // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FBadStatusParticles_T>          CallFunc_PickUpParticleSettings_ParticleSettings_1; // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29FE[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item_2;                         // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item_3;                         // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29FF[0x1];                                     // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBadStatusDecal_T>              CallFunc_PickUpDecalSettings_DecalSettings_2;      // 0x0098(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FBadStatusDecal_T>              CallFunc_PickUpDecalSettings_DecalSettings_3;      // 0x00A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FBadStatusParticles_T>          CallFunc_PickUpParticleSettings_ParticleSettings_2; // 0x00B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FBadStatusParticles_T>          CallFunc_PickUpParticleSettings_ParticleSettings_3; // 0x00C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A00[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_UpdateAddStatusDirection) == 0x000008, "Wrong alignment on CharaBadStatus_C_UpdateAddStatusDirection");
static_assert(sizeof(CharaBadStatus_C_UpdateAddStatusDirection) == 0x0000E8, "Wrong size on CharaBadStatus_C_UpdateAddStatusDirection");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, Settings) == 0x000000, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::Settings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, Temp_int_Array_Index_Variable) == 0x000010, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, Temp_int_Loop_Counter_Variable_2) == 0x000020, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, Temp_int_Array_Index_Variable_2) == 0x000030, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, Temp_int_Loop_Counter_Variable_3) == 0x000034, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_Add_IntInt_ReturnValue_3) == 0x000038, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, Temp_int_Array_Index_Variable_3) == 0x00003C, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_Array_Get_Item) == 0x000040, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_Array_Get_Item_1) == 0x000041, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_PickUpDecalSettings_DecalSettings) == 0x000048, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_PickUpDecalSettings_DecalSettings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_PickUpDecalSettings_DecalSettings_1) == 0x000058, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_PickUpDecalSettings_DecalSettings_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_PickUpParticleSettings_ParticleSettings) == 0x000068, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_PickUpParticleSettings_ParticleSettings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_PickUpParticleSettings_ParticleSettings_1) == 0x000078, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_PickUpParticleSettings_ParticleSettings_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_Less_IntInt_ReturnValue_1) == 0x000094, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_Array_Get_Item_2) == 0x000095, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_Array_Get_Item_3) == 0x000096, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_PickUpDecalSettings_DecalSettings_2) == 0x000098, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_PickUpDecalSettings_DecalSettings_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_PickUpDecalSettings_DecalSettings_3) == 0x0000A8, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_PickUpDecalSettings_DecalSettings_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_PickUpParticleSettings_ParticleSettings_2) == 0x0000B8, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_PickUpParticleSettings_ParticleSettings_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_PickUpParticleSettings_ParticleSettings_3) == 0x0000C8, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_PickUpParticleSettings_ParticleSettings_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_Array_Length_ReturnValue_2) == 0x0000D8, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000DC, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_Array_Length_ReturnValue_3) == 0x0000E0, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirection, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000E4, "Member 'CharaBadStatus_C_UpdateAddStatusDirection::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.UpdateAddStatusDirectionImpl
// 0x01B8 (0x01B8 - 0x0000)
struct CharaBadStatus_C_UpdateAddStatusDirectionImpl final
{
public:
	TArray<struct FBadStatusParticles_T>          ParticleArray;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FBadStatusDecal_T>              DecalArray;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                Lo_SocketLocation;                                 // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A01[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusDecal_T                      CallFunc_Array_Get_Item;                           // 0x0038(0x0058)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A02[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A03[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBadStatusParticles_T                  CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0060)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A04[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A05[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetTargetMesh_ParticleSettings;           // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x012C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CharaBadStatus_C_UpdateAddStatusDirectionImpl) == 0x000008, "Wrong alignment on CharaBadStatus_C_UpdateAddStatusDirectionImpl");
static_assert(sizeof(CharaBadStatus_C_UpdateAddStatusDirectionImpl) == 0x0001B8, "Wrong size on CharaBadStatus_C_UpdateAddStatusDirectionImpl");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, ParticleArray) == 0x000000, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::ParticleArray' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, DecalArray) == 0x000010, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::DecalArray' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, Lo_SocketLocation) == 0x000020, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::Lo_SocketLocation' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, CallFunc_Array_Get_Item) == 0x000038, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, K2Node_SwitchEnum_CmpSuccess) == 0x000094, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, Temp_int_Array_Index_Variable_1) == 0x0000A4, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, K2Node_SwitchEnum_CmpSuccess_1) == 0x000108, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, Temp_int_Loop_Counter_Variable_1) == 0x00010C, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, CallFunc_Less_IntInt_ReturnValue_1) == 0x000110, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, CallFunc_Add_IntInt_ReturnValue_1) == 0x000114, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, CallFunc_GetTargetMesh_ParticleSettings) == 0x000118, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::CallFunc_GetTargetMesh_ParticleSettings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, CallFunc_GetSocketLocation_ReturnValue) == 0x000120, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateAddStatusDirectionImpl, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x00012C, "Member 'CharaBadStatus_C_UpdateAddStatusDirectionImpl::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.UpdateRemoveStatusDirection
// 0x00A8 (0x00A8 - 0x0000)
struct CharaBadStatus_C_UpdateRemoveStatusDirection final
{
public:
	TArray<struct FBadStatusParticles_T>          Settings;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A06[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBadStatusParticles_T>          CallFunc_PickUpParticleSettings_ParticleSettings;  // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item_1;                         // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item_2;                         // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A07[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBadStatusParticles_T>          CallFunc_PickUpParticleSettings_ParticleSettings_1; // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FBadStatusParticles_T>          CallFunc_PickUpParticleSettings_ParticleSettings_2; // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A08[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item_3;                         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A09[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBadStatusParticles_T>          CallFunc_PickUpParticleSettings_ParticleSettings_3; // 0x0098(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(CharaBadStatus_C_UpdateRemoveStatusDirection) == 0x000008, "Wrong alignment on CharaBadStatus_C_UpdateRemoveStatusDirection");
static_assert(sizeof(CharaBadStatus_C_UpdateRemoveStatusDirection) == 0x0000A8, "Wrong size on CharaBadStatus_C_UpdateRemoveStatusDirection");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, Settings) == 0x000000, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::Settings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, Temp_int_Array_Index_Variable) == 0x000010, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, Temp_int_Loop_Counter_Variable_2) == 0x000020, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, Temp_int_Array_Index_Variable_2) == 0x000030, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, Temp_int_Loop_Counter_Variable_3) == 0x000034, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_Add_IntInt_ReturnValue_3) == 0x000038, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, Temp_int_Array_Index_Variable_3) == 0x00003C, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_Array_Get_Item) == 0x000040, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_PickUpParticleSettings_ParticleSettings) == 0x000048, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_PickUpParticleSettings_ParticleSettings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_Array_Get_Item_1) == 0x000059, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_Array_Get_Item_2) == 0x00005A, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_PickUpParticleSettings_ParticleSettings_1) == 0x000060, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_PickUpParticleSettings_ParticleSettings_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_PickUpParticleSettings_ParticleSettings_2) == 0x000070, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_PickUpParticleSettings_ParticleSettings_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_Array_Length_ReturnValue_2) == 0x000084, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_Less_IntInt_ReturnValue_2) == 0x000089, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_Array_Length_ReturnValue_3) == 0x00008C, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_Array_Get_Item_3) == 0x000090, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_Less_IntInt_ReturnValue_3) == 0x000091, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirection, CallFunc_PickUpParticleSettings_ParticleSettings_3) == 0x000098, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirection::CallFunc_PickUpParticleSettings_ParticleSettings_3' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.UpdateRemoveStatusDirectionImpl
// 0x0130 (0x0130 - 0x0000)
struct CharaBadStatus_C_UpdateRemoveStatusDirectionImpl final
{
public:
	TArray<struct FBadStatusParticles_T>          Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                Lo_SocketLocatin;                                  // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBadStatusParticles_T                  CallFunc_Array_Get_Item;                           // 0x0028(0x0060)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A0A[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetTargetMesh_ParticleSettings;           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CharaBadStatus_C_UpdateRemoveStatusDirectionImpl) == 0x000008, "Wrong alignment on CharaBadStatus_C_UpdateRemoveStatusDirectionImpl");
static_assert(sizeof(CharaBadStatus_C_UpdateRemoveStatusDirectionImpl) == 0x000130, "Wrong size on CharaBadStatus_C_UpdateRemoveStatusDirectionImpl");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirectionImpl, Array) == 0x000000, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirectionImpl::Array' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirectionImpl, Lo_SocketLocatin) == 0x000010, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirectionImpl::Lo_SocketLocatin' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirectionImpl, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirectionImpl::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirectionImpl, Temp_int_Array_Index_Variable) == 0x000020, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirectionImpl::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirectionImpl, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirectionImpl::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirectionImpl, CallFunc_Array_Get_Item) == 0x000028, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirectionImpl::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirectionImpl, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirectionImpl::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirectionImpl, K2Node_SwitchEnum_CmpSuccess) == 0x000089, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirectionImpl::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirectionImpl, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirectionImpl::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirectionImpl, CallFunc_GetTargetMesh_ParticleSettings) == 0x000090, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirectionImpl::CallFunc_GetTargetMesh_ParticleSettings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirectionImpl, CallFunc_GetSocketLocation_ReturnValue) == 0x000098, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirectionImpl::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveStatusDirectionImpl, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000A4, "Member 'CharaBadStatus_C_UpdateRemoveStatusDirectionImpl::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.PickupSurfaceStatusMaterial
// 0x0098 (0x0098 - 0x0000)
struct CharaBadStatus_C_PickupSurfaceStatusMaterial final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A0B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          BeforeState;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<E_BAD_STATUS>                          Ret;                                               // 0x0018(0x0010)(Parm, OutParm)
	bool                                          Param_IsNeedResetMaterial;                         // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A0C[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          Lo_PriorityList;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<E_BAD_STATUS>                          Top;                                               // 0x0040(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A0D[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A0E[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsSameArray_IsSame;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item;                           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A0F[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BIT_AND_ReturnValue;                      // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A10[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A11[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_PickupSurfaceStatusMaterial) == 0x000008, "Wrong alignment on CharaBadStatus_C_PickupSurfaceStatusMaterial");
static_assert(sizeof(CharaBadStatus_C_PickupSurfaceStatusMaterial) == 0x000098, "Wrong size on CharaBadStatus_C_PickupSurfaceStatusMaterial");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, State) == 0x000000, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::State' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, BeforeState) == 0x000008, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::BeforeState' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, Ret) == 0x000018, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::Ret' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, Param_IsNeedResetMaterial) == 0x000028, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::Param_IsNeedResetMaterial' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, Lo_PriorityList) == 0x000030, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::Lo_PriorityList' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, Top) == 0x000040, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::Top' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, Temp_bool_True_if_break_was_hit_Variable) == 0x000050, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, Temp_int_Array_Index_Variable) == 0x000054, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, K2Node_MakeArray_Array) == 0x000060, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, CallFunc_IsSameArray_IsSame) == 0x000070, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::CallFunc_IsSameArray_IsSame' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, CallFunc_Array_Get_Item) == 0x000071, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, CallFunc_Not_PreBool_ReturnValue_1) == 0x000072, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000073, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000074, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, CallFunc_BooleanOR_ReturnValue) == 0x00007C, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, CallFunc_BIT_AND_ReturnValue) == 0x00007D, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::CallFunc_BIT_AND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_PickupSurfaceStatusMaterial, CallFunc_BooleanAND_ReturnValue) == 0x000090, "Member 'CharaBadStatus_C_PickupSurfaceStatusMaterial::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.UpdateRemoveDamageDirectionImpl
// 0x0130 (0x0130 - 0x0000)
struct CharaBadStatus_C_UpdateRemoveDamageDirectionImpl final
{
public:
	TArray<struct FBadStatusParticles_T>          Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                Lo_SocketLocation;                                 // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBadStatusParticles_T                  CallFunc_Array_Get_Item;                           // 0x0028(0x0060)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A12[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetTargetMesh_ParticleSettings;           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(CharaBadStatus_C_UpdateRemoveDamageDirectionImpl) == 0x000008, "Wrong alignment on CharaBadStatus_C_UpdateRemoveDamageDirectionImpl");
static_assert(sizeof(CharaBadStatus_C_UpdateRemoveDamageDirectionImpl) == 0x000130, "Wrong size on CharaBadStatus_C_UpdateRemoveDamageDirectionImpl");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveDamageDirectionImpl, Array) == 0x000000, "Member 'CharaBadStatus_C_UpdateRemoveDamageDirectionImpl::Array' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveDamageDirectionImpl, Lo_SocketLocation) == 0x000010, "Member 'CharaBadStatus_C_UpdateRemoveDamageDirectionImpl::Lo_SocketLocation' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveDamageDirectionImpl, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'CharaBadStatus_C_UpdateRemoveDamageDirectionImpl::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveDamageDirectionImpl, Temp_int_Array_Index_Variable) == 0x000020, "Member 'CharaBadStatus_C_UpdateRemoveDamageDirectionImpl::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveDamageDirectionImpl, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'CharaBadStatus_C_UpdateRemoveDamageDirectionImpl::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveDamageDirectionImpl, CallFunc_Array_Get_Item) == 0x000028, "Member 'CharaBadStatus_C_UpdateRemoveDamageDirectionImpl::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveDamageDirectionImpl, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'CharaBadStatus_C_UpdateRemoveDamageDirectionImpl::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveDamageDirectionImpl, K2Node_SwitchEnum_CmpSuccess) == 0x000089, "Member 'CharaBadStatus_C_UpdateRemoveDamageDirectionImpl::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveDamageDirectionImpl, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'CharaBadStatus_C_UpdateRemoveDamageDirectionImpl::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveDamageDirectionImpl, CallFunc_GetTargetMesh_ParticleSettings) == 0x000090, "Member 'CharaBadStatus_C_UpdateRemoveDamageDirectionImpl::CallFunc_GetTargetMesh_ParticleSettings' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveDamageDirectionImpl, CallFunc_GetSocketLocation_ReturnValue) == 0x000098, "Member 'CharaBadStatus_C_UpdateRemoveDamageDirectionImpl::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_UpdateRemoveDamageDirectionImpl, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000A4, "Member 'CharaBadStatus_C_UpdateRemoveDamageDirectionImpl::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.HasBadStatus
// 0x0068 (0x0068 - 0x0000)
struct CharaBadStatus_C_HasBadStatus final
{
public:
	bool                                          Param_HasBadStatus;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A13[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasBadStatus_HasBadStatus;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A14[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_HasBadStatus) == 0x000004, "Wrong alignment on CharaBadStatus_C_HasBadStatus");
static_assert(sizeof(CharaBadStatus_C_HasBadStatus) == 0x000068, "Wrong size on CharaBadStatus_C_HasBadStatus");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, Param_HasBadStatus) == 0x000000, "Member 'CharaBadStatus_C_HasBadStatus::Param_HasBadStatus' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Array_Length_ReturnValue_1) == 0x000008, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Array_Length_ReturnValue_2) == 0x00000C, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Array_Length_ReturnValue_3) == 0x000010, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Array_Length_ReturnValue_4) == 0x000014, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Array_Length_ReturnValue_5) == 0x000018, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Array_Length_ReturnValue_6) == 0x00001C, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Array_Length_ReturnValue_7) == 0x000020, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Array_Length_ReturnValue_8) == 0x000024, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Array_Length_ReturnValue_9) == 0x000028, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Array_Length_ReturnValue_10) == 0x00002C, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_HasBadStatus_HasBadStatus) == 0x000030, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_HasBadStatus_HasBadStatus' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Array_Length_ReturnValue_11) == 0x000034, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Add_IntInt_ReturnValue_3) == 0x000044, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Add_IntInt_ReturnValue_4) == 0x000048, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Add_IntInt_ReturnValue_5) == 0x00004C, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Add_IntInt_ReturnValue_6) == 0x000050, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Add_IntInt_ReturnValue_7) == 0x000054, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Add_IntInt_ReturnValue_8) == 0x000058, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Add_IntInt_ReturnValue_9) == 0x00005C, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_Add_IntInt_ReturnValue_10) == 0x000060, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_HasBadStatus, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000064, "Member 'CharaBadStatus_C_HasBadStatus::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.IsSameArray
// 0x0050 (0x0050 - 0x0000)
struct CharaBadStatus_C_IsSameArray final
{
public:
	TArray<E_BAD_STATUS>                          A;                                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<E_BAD_STATUS>                          B;                                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsSame;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A15[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_Contains;                                       // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A16[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaBadStatus_C_IsSameArray) == 0x000008, "Wrong alignment on CharaBadStatus_C_IsSameArray");
static_assert(sizeof(CharaBadStatus_C_IsSameArray) == 0x000050, "Wrong size on CharaBadStatus_C_IsSameArray");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, A) == 0x000000, "Member 'CharaBadStatus_C_IsSameArray::A' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, B) == 0x000010, "Member 'CharaBadStatus_C_IsSameArray::B' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, IsSame) == 0x000020, "Member 'CharaBadStatus_C_IsSameArray::IsSame' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, Lo_Contains) == 0x000024, "Member 'CharaBadStatus_C_IsSameArray::Lo_Contains' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'CharaBadStatus_C_IsSameArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'CharaBadStatus_C_IsSameArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'CharaBadStatus_C_IsSameArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'CharaBadStatus_C_IsSameArray::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, CallFunc_Array_Length_ReturnValue_2) == 0x000038, "Member 'CharaBadStatus_C_IsSameArray::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'CharaBadStatus_C_IsSameArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003D, "Member 'CharaBadStatus_C_IsSameArray::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, Temp_int_Array_Index_Variable) == 0x000040, "Member 'CharaBadStatus_C_IsSameArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, Temp_int_Variable) == 0x000044, "Member 'CharaBadStatus_C_IsSameArray::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, CallFunc_Array_Get_Item) == 0x000048, "Member 'CharaBadStatus_C_IsSameArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, CallFunc_Array_Contains_ReturnValue) == 0x000049, "Member 'CharaBadStatus_C_IsSameArray::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00004A, "Member 'CharaBadStatus_C_IsSameArray::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, CallFunc_BooleanAND_ReturnValue) == 0x00004B, "Member 'CharaBadStatus_C_IsSameArray::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_IsSameArray, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'CharaBadStatus_C_IsSameArray::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.InstantEmitterCheck
// 0x0001 (0x0001 - 0x0000)
struct CharaBadStatus_C_InstantEmitterCheck final
{
public:
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_InstantEmitterCheck) == 0x000001, "Wrong alignment on CharaBadStatus_C_InstantEmitterCheck");
static_assert(sizeof(CharaBadStatus_C_InstantEmitterCheck) == 0x000001, "Wrong size on CharaBadStatus_C_InstantEmitterCheck");
static_assert(offsetof(CharaBadStatus_C_InstantEmitterCheck, CallFunc_IsActive_ReturnValue) == 0x000000, "Member 'CharaBadStatus_C_InstantEmitterCheck::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function CharaBadStatus.CharaBadStatus_C.ActivateBadStatusParticle
// 0x0048 (0x0048 - 0x0000)
struct CharaBadStatus_C_ActivateBadStatusParticle final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A17[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A18[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A19[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Map_Find_Value;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1A[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1B[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaBadStatus_C_ActivateBadStatusParticle) == 0x000008, "Wrong alignment on CharaBadStatus_C_ActivateBadStatusParticle");
static_assert(sizeof(CharaBadStatus_C_ActivateBadStatusParticle) == 0x000048, "Wrong size on CharaBadStatus_C_ActivateBadStatusParticle");
static_assert(offsetof(CharaBadStatus_C_ActivateBadStatusParticle, Temp_int_Array_Index_Variable) == 0x000000, "Member 'CharaBadStatus_C_ActivateBadStatusParticle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ActivateBadStatusParticle, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'CharaBadStatus_C_ActivateBadStatusParticle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ActivateBadStatusParticle, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'CharaBadStatus_C_ActivateBadStatusParticle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ActivateBadStatusParticle, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'CharaBadStatus_C_ActivateBadStatusParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ActivateBadStatusParticle, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'CharaBadStatus_C_ActivateBadStatusParticle::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ActivateBadStatusParticle, CallFunc_Array_Length_ReturnValue_1) == 0x000014, "Member 'CharaBadStatus_C_ActivateBadStatusParticle::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ActivateBadStatusParticle, CallFunc_Array_Get_Item) == 0x000018, "Member 'CharaBadStatus_C_ActivateBadStatusParticle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ActivateBadStatusParticle, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000019, "Member 'CharaBadStatus_C_ActivateBadStatusParticle::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ActivateBadStatusParticle, CallFunc_Array_Length_ReturnValue_2) == 0x00001C, "Member 'CharaBadStatus_C_ActivateBadStatusParticle::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ActivateBadStatusParticle, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'CharaBadStatus_C_ActivateBadStatusParticle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ActivateBadStatusParticle, CallFunc_Map_Find_Value) == 0x000028, "Member 'CharaBadStatus_C_ActivateBadStatusParticle::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ActivateBadStatusParticle, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'CharaBadStatus_C_ActivateBadStatusParticle::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ActivateBadStatusParticle, CallFunc_Array_Length_ReturnValue_3) == 0x000034, "Member 'CharaBadStatus_C_ActivateBadStatusParticle::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ActivateBadStatusParticle, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000038, "Member 'CharaBadStatus_C_ActivateBadStatusParticle::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ActivateBadStatusParticle, CallFunc_Array_Length_ReturnValue_4) == 0x00003C, "Member 'CharaBadStatus_C_ActivateBadStatusParticle::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaBadStatus_C_ActivateBadStatusParticle, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000040, "Member 'CharaBadStatus_C_ActivateBadStatusParticle::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");

}

