#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_DebugMenu_ItemBase

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.EvDis_CallAddPage__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_DebugMenu_ItemBase_C_EvDis_CallAddPage__DelegateSignature final
{
public:
	int32                                         NextPageId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDrawPlus;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_EvDis_CallAddPage__DelegateSignature) == 0x000004, "Wrong alignment on WB_DebugMenu_ItemBase_C_EvDis_CallAddPage__DelegateSignature");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_EvDis_CallAddPage__DelegateSignature) == 0x000008, "Wrong size on WB_DebugMenu_ItemBase_C_EvDis_CallAddPage__DelegateSignature");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_EvDis_CallAddPage__DelegateSignature, NextPageId) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_EvDis_CallAddPage__DelegateSignature::NextPageId' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_EvDis_CallAddPage__DelegateSignature, IsDrawPlus) == 0x000004, "Member 'WB_DebugMenu_ItemBase_C_EvDis_CallAddPage__DelegateSignature::IsDrawPlus' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.ExecuteUbergraph_WB_DebugMenu_ItemBase
// 0x01E8 (0x01E8 - 0x0000)
struct WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E92[0x4];                                      // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UClass*                                 K2Node_ClassDynamicCast_AsDebug_Func_Base_Obj;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E93[0x6];                                      // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetItemData_ItemData;                     // 0x0030(0x00D0)()
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E94[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetItemData_ItemData_1;                   // 0x0108(0x00D0)()
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded;                         // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_ExecFunc_ReturnValue;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase) == 0x000008, "Wrong alignment on WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase) == 0x0001E8, "Wrong size on WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase, EntryPoint) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase, Temp_class_Variable) == 0x000008, "Member 'WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase, K2Node_ClassDynamicCast_AsDebug_Func_Base_Obj) == 0x000020, "Member 'WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase::K2Node_ClassDynamicCast_AsDebug_Func_Base_Obj' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase, K2Node_ClassDynamicCast_bSuccess) == 0x000028, "Member 'WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase, CallFunc_IsValidClass_ReturnValue) == 0x000029, "Member 'WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase, CallFunc_GetItemData_ItemData) == 0x000030, "Member 'WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase::CallFunc_GetItemData_ItemData' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000100, "Member 'WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase, CallFunc_GetItemData_ItemData_1) == 0x000108, "Member 'WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase::CallFunc_GetItemData_ItemData_1' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase, K2Node_CustomEvent_Loaded) == 0x0001D8, "Member 'WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase, CallFunc_ExecFunc_ReturnValue) == 0x0001E0, "Member 'WB_DebugMenu_ItemBase_C_ExecuteUbergraph_WB_DebugMenu_ItemBase::CallFunc_ExecFunc_ReturnValue' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.OnLoaded_ED55EA6C4877D9145131349E084DD5A5
// 0x0008 (0x0008 - 0x0000)
struct WB_DebugMenu_ItemBase_C_OnLoaded_ED55EA6C4877D9145131349E084DD5A5 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_OnLoaded_ED55EA6C4877D9145131349E084DD5A5) == 0x000008, "Wrong alignment on WB_DebugMenu_ItemBase_C_OnLoaded_ED55EA6C4877D9145131349E084DD5A5");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_OnLoaded_ED55EA6C4877D9145131349E084DD5A5) == 0x000008, "Wrong size on WB_DebugMenu_ItemBase_C_OnLoaded_ED55EA6C4877D9145131349E084DD5A5");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_OnLoaded_ED55EA6C4877D9145131349E084DD5A5, Loaded) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_OnLoaded_ED55EA6C4877D9145131349E084DD5A5::Loaded' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.SetPageData
// 0x0018 (0x0018 - 0x0000)
struct WB_DebugMenu_ItemBase_C_SetPageData final
{
public:
	struct FDebugMenuPageData                     PageData;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_SetPageData) == 0x000004, "Wrong alignment on WB_DebugMenu_ItemBase_C_SetPageData");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_SetPageData) == 0x000018, "Wrong size on WB_DebugMenu_ItemBase_C_SetPageData");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_SetPageData, PageData) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_SetPageData::PageData' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.SetItemData
// 0x00D0 (0x00D0 - 0x0000)
struct WB_DebugMenu_ItemBase_C_SetItemData final
{
public:
	struct FDebugMenuItemData                     Param_ItemData;                                    // 0x0000(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_SetItemData) == 0x000008, "Wrong alignment on WB_DebugMenu_ItemBase_C_SetItemData");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_SetItemData) == 0x0000D0, "Wrong size on WB_DebugMenu_ItemBase_C_SetItemData");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_SetItemData, Param_ItemData) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_SetItemData::Param_ItemData' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.GetPageData
// 0x0018 (0x0018 - 0x0000)
struct WB_DebugMenu_ItemBase_C_GetPageData final
{
public:
	struct FDebugMenuPageData                     PageData;                                          // 0x0000(0x0018)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_GetPageData) == 0x000004, "Wrong alignment on WB_DebugMenu_ItemBase_C_GetPageData");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_GetPageData) == 0x000018, "Wrong size on WB_DebugMenu_ItemBase_C_GetPageData");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_GetPageData, PageData) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_GetPageData::PageData' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.GetItemData
// 0x00D0 (0x00D0 - 0x0000)
struct WB_DebugMenu_ItemBase_C_GetItemData final
{
public:
	struct FDebugMenuItemData                     Param_ItemData;                                    // 0x0000(0x00D0)(Parm, OutParm)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_GetItemData) == 0x000008, "Wrong alignment on WB_DebugMenu_ItemBase_C_GetItemData");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_GetItemData) == 0x0000D0, "Wrong size on WB_DebugMenu_ItemBase_C_GetItemData");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_GetItemData, Param_ItemData) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_GetItemData::Param_ItemData' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.InitPageData
// 0x0030 (0x0030 - 0x0000)
struct WB_DebugMenu_ItemBase_C_InitPageData final
{
public:
	TScriptInterface<class IBPI_DebugMenuUI_C>    BPIDebugMenu;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDebugMenuPageData                     PageData;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          IsDrawPlus;                                        // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_InitPageData) == 0x000008, "Wrong alignment on WB_DebugMenu_ItemBase_C_InitPageData");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_InitPageData) == 0x000030, "Wrong size on WB_DebugMenu_ItemBase_C_InitPageData");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_InitPageData, BPIDebugMenu) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_InitPageData::BPIDebugMenu' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_InitPageData, PageData) == 0x000010, "Member 'WB_DebugMenu_ItemBase_C_InitPageData::PageData' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_InitPageData, IsDrawPlus) == 0x000028, "Member 'WB_DebugMenu_ItemBase_C_InitPageData::IsDrawPlus' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.InitItemData
// 0x00E0 (0x00E0 - 0x0000)
struct WB_DebugMenu_ItemBase_C_InitItemData final
{
public:
	TScriptInterface<class IBPI_DebugMenuUI_C>    BPIDebugMenu;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDebugMenuItemData                     Param_ItemData;                                    // 0x0010(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_InitItemData) == 0x000008, "Wrong alignment on WB_DebugMenu_ItemBase_C_InitItemData");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_InitItemData) == 0x0000E0, "Wrong size on WB_DebugMenu_ItemBase_C_InitItemData");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_InitItemData, BPIDebugMenu) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_InitItemData::BPIDebugMenu' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_InitItemData, Param_ItemData) == 0x000010, "Member 'WB_DebugMenu_ItemBase_C_InitItemData::Param_ItemData' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.UpDataViewState
// 0x000C (0x000C - 0x0000)
struct WB_DebugMenu_ItemBase_C_UpDataViewState final
{
public:
	bool                                          IsView;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E95[0x3];                                      // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Pos;                                               // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_UpDataViewState) == 0x000004, "Wrong alignment on WB_DebugMenu_ItemBase_C_UpDataViewState");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_UpDataViewState) == 0x00000C, "Wrong size on WB_DebugMenu_ItemBase_C_UpDataViewState");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_UpDataViewState, IsView) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_UpDataViewState::IsView' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_UpDataViewState, Pos) == 0x000004, "Member 'WB_DebugMenu_ItemBase_C_UpDataViewState::Pos' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.UpLoadItemData
// 0x00D0 (0x00D0 - 0x0000)
struct WB_DebugMenu_ItemBase_C_UpLoadItemData final
{
public:
	struct FDebugMenuItemData                     Param_ItemData;                                    // 0x0000(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_UpLoadItemData) == 0x000008, "Wrong alignment on WB_DebugMenu_ItemBase_C_UpLoadItemData");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_UpLoadItemData) == 0x0000D0, "Wrong size on WB_DebugMenu_ItemBase_C_UpLoadItemData");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_UpLoadItemData, Param_ItemData) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_UpLoadItemData::Param_ItemData' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.ChangeAnimForcs
// 0x0001 (0x0001 - 0x0000)
struct WB_DebugMenu_ItemBase_C_ChangeAnimForcs final
{
public:
	bool                                          IsForcs;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_ChangeAnimForcs) == 0x000001, "Wrong alignment on WB_DebugMenu_ItemBase_C_ChangeAnimForcs");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_ChangeAnimForcs) == 0x000001, "Wrong size on WB_DebugMenu_ItemBase_C_ChangeAnimForcs");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_ChangeAnimForcs, IsForcs) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_ChangeAnimForcs::IsForcs' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.ChangePageState
// 0x000C (0x000C - 0x0000)
struct WB_DebugMenu_ItemBase_C_ChangePageState final
{
public:
	bool                                          IsView;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E96[0x3];                                      // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              PagePos;                                           // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_ChangePageState) == 0x000004, "Wrong alignment on WB_DebugMenu_ItemBase_C_ChangePageState");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_ChangePageState) == 0x00000C, "Wrong size on WB_DebugMenu_ItemBase_C_ChangePageState");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_ChangePageState, IsView) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_ChangePageState::IsView' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_ChangePageState, PagePos) == 0x000004, "Member 'WB_DebugMenu_ItemBase_C_ChangePageState::PagePos' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.GetItemData_ItemId
// 0x0004 (0x0004 - 0x0000)
struct WB_DebugMenu_ItemBase_C_GetItemData_ItemId final
{
public:
	int32                                         Item_Id;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_GetItemData_ItemId) == 0x000004, "Wrong alignment on WB_DebugMenu_ItemBase_C_GetItemData_ItemId");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_GetItemData_ItemId) == 0x000004, "Wrong size on WB_DebugMenu_ItemBase_C_GetItemData_ItemId");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_GetItemData_ItemId, Item_Id) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_GetItemData_ItemId::Item_Id' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.GetItemData_ItemType
// 0x0001 (0x0001 - 0x0000)
struct WB_DebugMenu_ItemBase_C_GetItemData_ItemType final
{
public:
	E_D_MENU_TYPE                                 Type;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_GetItemData_ItemType) == 0x000001, "Wrong alignment on WB_DebugMenu_ItemBase_C_GetItemData_ItemType");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_GetItemData_ItemType) == 0x000001, "Wrong size on WB_DebugMenu_ItemBase_C_GetItemData_ItemType");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_GetItemData_ItemType, Type) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_GetItemData_ItemType::Type' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.GetItemData_ItemIsLock
// 0x0001 (0x0001 - 0x0000)
struct WB_DebugMenu_ItemBase_C_GetItemData_ItemIsLock final
{
public:
	bool                                          Is_Lock;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_GetItemData_ItemIsLock) == 0x000001, "Wrong alignment on WB_DebugMenu_ItemBase_C_GetItemData_ItemIsLock");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_GetItemData_ItemIsLock) == 0x000001, "Wrong size on WB_DebugMenu_ItemBase_C_GetItemData_ItemIsLock");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_GetItemData_ItemIsLock, Is_Lock) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_GetItemData_ItemIsLock::Is_Lock' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.SetItemData_Text
// 0x00E8 (0x00E8 - 0x0000)
struct WB_DebugMenu_ItemBase_C_SetItemData_Text final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FDebugMenuItemData                     Param_ItemData;                                    // 0x0018(0x00D0)(Parm, OutParm)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_SetItemData_Text) == 0x000008, "Wrong alignment on WB_DebugMenu_ItemBase_C_SetItemData_Text");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_SetItemData_Text) == 0x0000E8, "Wrong size on WB_DebugMenu_ItemBase_C_SetItemData_Text");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_SetItemData_Text, Text) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_SetItemData_Text::Text' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_SetItemData_Text, Param_ItemData) == 0x000018, "Member 'WB_DebugMenu_ItemBase_C_SetItemData_Text::Param_ItemData' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.UpdateMenuWidth
// 0x0004 (0x0004 - 0x0000)
struct WB_DebugMenu_ItemBase_C_UpdateMenuWidth final
{
public:
	float                                         Width;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_UpdateMenuWidth) == 0x000004, "Wrong alignment on WB_DebugMenu_ItemBase_C_UpdateMenuWidth");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_UpdateMenuWidth) == 0x000004, "Wrong size on WB_DebugMenu_ItemBase_C_UpdateMenuWidth");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_UpdateMenuWidth, Width) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_UpdateMenuWidth::Width' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.GetMenuWidth
// 0x0004 (0x0004 - 0x0000)
struct WB_DebugMenu_ItemBase_C_GetMenuWidth final
{
public:
	float                                         Width;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_GetMenuWidth) == 0x000004, "Wrong alignment on WB_DebugMenu_ItemBase_C_GetMenuWidth");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_GetMenuWidth) == 0x000004, "Wrong size on WB_DebugMenu_ItemBase_C_GetMenuWidth");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_GetMenuWidth, Width) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_GetMenuWidth::Width' has a wrong offset!");

// Function WB_DebugMenu_ItemBase.WB_DebugMenu_ItemBase_C.GetIsKeyLock
// 0x0002 (0x0002 - 0x0000)
struct WB_DebugMenu_ItemBase_C_GetIsKeyLock final
{
public:
	bool                                          Param_IsKeyLock;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_DebugMenu_ItemBase_C_GetIsKeyLock) == 0x000001, "Wrong alignment on WB_DebugMenu_ItemBase_C_GetIsKeyLock");
static_assert(sizeof(WB_DebugMenu_ItemBase_C_GetIsKeyLock) == 0x000002, "Wrong size on WB_DebugMenu_ItemBase_C_GetIsKeyLock");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_GetIsKeyLock, Param_IsKeyLock) == 0x000000, "Member 'WB_DebugMenu_ItemBase_C_GetIsKeyLock::Param_IsKeyLock' has a wrong offset!");
static_assert(offsetof(WB_DebugMenu_ItemBase_C_GetIsKeyLock, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'WB_DebugMenu_ItemBase_C_GetIsKeyLock::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

