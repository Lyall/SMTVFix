#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CampHelpCtrl

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_CATEGORYWINDOW_MOUSE_EVENT_TYPE_structs.hpp"
#include "Project_structs.hpp"
#include "Project_classes.hpp"
#include "E_TutorialWindow_WidgetState_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CampHelpCtrl.BP_CampHelpCtrl_C
// 0x0050 (0x0318 - 0x02C8)
class ABP_CampHelpCtrl_C final : public ACampHelpCtrlBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCreateWidget;                                    // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_902D[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CampHelpWindow_C*                   WB_CampHelpWindow;                                 // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CAMPHELPCTRL_GSTATUS                        Mainstatus;                                        // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CAMPHELPCTRL_GSTATUS                        Changestatus;                                      // 0x02E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGstatusChange;                                   // 0x02EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFinished;                                        // 0x02EB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFadeOut;                                         // 0x02EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_902E[0x3];                                     // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CalcListHelpNumber;                                // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Padcursor;                                         // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Padbutton;                                         // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Padbuttond;                                        // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PadLR;                                             // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Substatus;                                         // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CATEGORYWINDOW_MOUSE_EVENT_TYPE             Mouse_Event_Type;                                  // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_902F[0x3];                                     // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Select_Category_Icon;                              // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCategoryWindow;                                  // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ICampHelpGetListFadeOut(bool* OutFlag);
	void ICampHelpProc(bool* OutFinished);
	bool IsExistDLCFlag(E_CAMPHELPLIST_CONDITIONTYPE InType);
	void SetHelpMessage(bool InNeedHelpText);
	void SetButtonHelp(bool Inactive);
	void ResetCategoryParameter();
	void Help_Category_Window_Clicked(E_CATEGORYWINDOW_MOUSE_EVENT_TYPE MouseEventType, int32 SelectCategoryIcon);
	void IsHelpListRectArea(bool* OutParam);
	void ResetMouseParameter();
	void MovingHelpTypeCursorCheck();
	void MovingCursorCheck();
	void Gstatus_FadeOut();
	void HelpTitleOff();
	void HelpTitleOn();
	void Gstatus_Tutorial();
	void Gstatus_MoveCursor();
	void PadCheck();
	void Gstatus_End();
	void Calc_Scroll_Bar_Rate();
	void CheckScrollBar();
	void Gstatus_Init();
	void ChangeGstatusParam(E_CAMPHELPCTRL_GSTATUS InParam, bool InMainFlag);
	void CalcGstatus();
	void BIESetHelpCursorAnimation(int32 InIndex, int32 InType, int32 InAnimeType, bool InCursorOn, bool InNewIcon);
	void BIESetHelpCursorAnimationByUseAnimeType(int32 InIndex, int32 InType);
	void InitializeListAnimation(bool InStartCursorAnimation, bool InCursorLoop, bool InDarkMaskOn);
	void BIESetInitializeListAnimation(int32 InIndex, int32 InType, int32 InAnimeType, bool InCursorOn, bool InCursorLoop, bool InNewIcon);
	void BIEStartNewIconAnimation(int32 InIndex);
	void CreateWidget();
	void StartCampHelp();
	void BIESetHelpNameColor(int32 InIndex, int32 InUseItem);
	void BIEPanelHelpDarkMaskDispOn(int32 InIndex);
	void BIEPanelHelpDarkMaskDispOff(int32 InIndex);
	void ICampHelpRemove();
	void BIEPanelHelpNoDataTextDispOn();
	void BIEPanelHelpNoDataTextDispOff();
	void BIEHelpPanelDispOn(int32 InIndex);
	void BIEHelpPanelDispOff(int32 InIndex);
	void BIESetHelpPanel(int32 InIndex, int32 InCategoryId, int32 InHelpId, int32 InUseHelpNo, bool InDispOnFlag);
	void ICampHelpCreate(E_WIDGET_PRIO InPrio);
	void RestartCampHelp();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_BP_CampHelpCtrl(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CampHelpCtrl_C">();
	}
	static class ABP_CampHelpCtrl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CampHelpCtrl_C>();
	}
};
static_assert(alignof(ABP_CampHelpCtrl_C) == 0x000008, "Wrong alignment on ABP_CampHelpCtrl_C");
static_assert(sizeof(ABP_CampHelpCtrl_C) == 0x000318, "Wrong size on ABP_CampHelpCtrl_C");
static_assert(offsetof(ABP_CampHelpCtrl_C, UberGraphFrame) == 0x0002C8, "Member 'ABP_CampHelpCtrl_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CampHelpCtrl_C, DefaultSceneRoot) == 0x0002D0, "Member 'ABP_CampHelpCtrl_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CampHelpCtrl_C, IsCreateWidget) == 0x0002D8, "Member 'ABP_CampHelpCtrl_C::IsCreateWidget' has a wrong offset!");
static_assert(offsetof(ABP_CampHelpCtrl_C, WB_CampHelpWindow) == 0x0002E0, "Member 'ABP_CampHelpCtrl_C::WB_CampHelpWindow' has a wrong offset!");
static_assert(offsetof(ABP_CampHelpCtrl_C, Mainstatus) == 0x0002E8, "Member 'ABP_CampHelpCtrl_C::Mainstatus' has a wrong offset!");
static_assert(offsetof(ABP_CampHelpCtrl_C, Changestatus) == 0x0002E9, "Member 'ABP_CampHelpCtrl_C::Changestatus' has a wrong offset!");
static_assert(offsetof(ABP_CampHelpCtrl_C, IsGstatusChange) == 0x0002EA, "Member 'ABP_CampHelpCtrl_C::IsGstatusChange' has a wrong offset!");
static_assert(offsetof(ABP_CampHelpCtrl_C, IsFinished) == 0x0002EB, "Member 'ABP_CampHelpCtrl_C::IsFinished' has a wrong offset!");
static_assert(offsetof(ABP_CampHelpCtrl_C, IsFadeOut) == 0x0002EC, "Member 'ABP_CampHelpCtrl_C::IsFadeOut' has a wrong offset!");
static_assert(offsetof(ABP_CampHelpCtrl_C, CalcListHelpNumber) == 0x0002F0, "Member 'ABP_CampHelpCtrl_C::CalcListHelpNumber' has a wrong offset!");
static_assert(offsetof(ABP_CampHelpCtrl_C, Padcursor) == 0x0002F4, "Member 'ABP_CampHelpCtrl_C::Padcursor' has a wrong offset!");
static_assert(offsetof(ABP_CampHelpCtrl_C, Padbutton) == 0x0002F8, "Member 'ABP_CampHelpCtrl_C::Padbutton' has a wrong offset!");
static_assert(offsetof(ABP_CampHelpCtrl_C, Padbuttond) == 0x0002FC, "Member 'ABP_CampHelpCtrl_C::Padbuttond' has a wrong offset!");
static_assert(offsetof(ABP_CampHelpCtrl_C, PadLR) == 0x000300, "Member 'ABP_CampHelpCtrl_C::PadLR' has a wrong offset!");
static_assert(offsetof(ABP_CampHelpCtrl_C, Substatus) == 0x000304, "Member 'ABP_CampHelpCtrl_C::Substatus' has a wrong offset!");
static_assert(offsetof(ABP_CampHelpCtrl_C, Mouse_Event_Type) == 0x000308, "Member 'ABP_CampHelpCtrl_C::Mouse_Event_Type' has a wrong offset!");
static_assert(offsetof(ABP_CampHelpCtrl_C, Select_Category_Icon) == 0x00030C, "Member 'ABP_CampHelpCtrl_C::Select_Category_Icon' has a wrong offset!");
static_assert(offsetof(ABP_CampHelpCtrl_C, IsCategoryWindow) == 0x000310, "Member 'ABP_CampHelpCtrl_C::IsCategoryWindow' has a wrong offset!");

}

