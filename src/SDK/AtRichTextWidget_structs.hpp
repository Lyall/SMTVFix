#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AtRichTextWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// ScriptStruct AtRichTextWidget.RichText_InsertBrushInfo
// 0x00A0 (0x00A0 - 0x0000)
struct FRichText_InsertBrushInfo final
{
public:
	struct FSlateBrush                            Brush_Resource;                                    // 0x0000(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	struct FVector2D                              Brush_Size;                                        // 0x0088(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Brush_Color;                                       // 0x0090(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRichText_InsertBrushInfo) == 0x000008, "Wrong alignment on FRichText_InsertBrushInfo");
static_assert(sizeof(FRichText_InsertBrushInfo) == 0x0000A0, "Wrong size on FRichText_InsertBrushInfo");
static_assert(offsetof(FRichText_InsertBrushInfo, Brush_Resource) == 0x000000, "Member 'FRichText_InsertBrushInfo::Brush_Resource' has a wrong offset!");
static_assert(offsetof(FRichText_InsertBrushInfo, Brush_Size) == 0x000088, "Member 'FRichText_InsertBrushInfo::Brush_Size' has a wrong offset!");
static_assert(offsetof(FRichText_InsertBrushInfo, Brush_Color) == 0x000090, "Member 'FRichText_InsertBrushInfo::Brush_Color' has a wrong offset!");

// ScriptStruct AtRichTextWidget.RichText_TextAndBrushIconInfo
// 0x0130 (0x0130 - 0x0000)
struct FRichText_TextAndBrushIconInfo final
{
public:
	TArray<struct FRichText_InsertBrushInfo>      BrushList_BG;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FRichText_InsertBrushInfo              Brush_On_BG;                                       // 0x0010(0x00A0)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class FString                                 Text_On_BG;                                        // 0x00B0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Text_Color;                                        // 0x00C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Text_Offset;                                       // 0x00D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                         Text_Font;                                         // 0x00D8(0x0058)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRichText_TextAndBrushIconInfo) == 0x000008, "Wrong alignment on FRichText_TextAndBrushIconInfo");
static_assert(sizeof(FRichText_TextAndBrushIconInfo) == 0x000130, "Wrong size on FRichText_TextAndBrushIconInfo");
static_assert(offsetof(FRichText_TextAndBrushIconInfo, BrushList_BG) == 0x000000, "Member 'FRichText_TextAndBrushIconInfo::BrushList_BG' has a wrong offset!");
static_assert(offsetof(FRichText_TextAndBrushIconInfo, Brush_On_BG) == 0x000010, "Member 'FRichText_TextAndBrushIconInfo::Brush_On_BG' has a wrong offset!");
static_assert(offsetof(FRichText_TextAndBrushIconInfo, Text_On_BG) == 0x0000B0, "Member 'FRichText_TextAndBrushIconInfo::Text_On_BG' has a wrong offset!");
static_assert(offsetof(FRichText_TextAndBrushIconInfo, Text_Color) == 0x0000C0, "Member 'FRichText_TextAndBrushIconInfo::Text_Color' has a wrong offset!");
static_assert(offsetof(FRichText_TextAndBrushIconInfo, Text_Offset) == 0x0000D0, "Member 'FRichText_TextAndBrushIconInfo::Text_Offset' has a wrong offset!");
static_assert(offsetof(FRichText_TextAndBrushIconInfo, Text_Font) == 0x0000D8, "Member 'FRichText_TextAndBrushIconInfo::Text_Font' has a wrong offset!");

// ScriptStruct AtRichTextWidget.RichText_TextAndBrushIconListInfo
// 0x0038 (0x0038 - 0x0000)
struct FRichText_TextAndBrushIconListInfo final
{
public:
	struct FIntPoint                              InsertCharPos;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Offset;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IconIntervalSpace;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_162[0x4];                                      // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReplacementText;                                   // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRichText_TextAndBrushIconInfo> IconInfo;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRichText_TextAndBrushIconListInfo) == 0x000008, "Wrong alignment on FRichText_TextAndBrushIconListInfo");
static_assert(sizeof(FRichText_TextAndBrushIconListInfo) == 0x000038, "Wrong size on FRichText_TextAndBrushIconListInfo");
static_assert(offsetof(FRichText_TextAndBrushIconListInfo, InsertCharPos) == 0x000000, "Member 'FRichText_TextAndBrushIconListInfo::InsertCharPos' has a wrong offset!");
static_assert(offsetof(FRichText_TextAndBrushIconListInfo, Offset) == 0x000008, "Member 'FRichText_TextAndBrushIconListInfo::Offset' has a wrong offset!");
static_assert(offsetof(FRichText_TextAndBrushIconListInfo, IconIntervalSpace) == 0x000010, "Member 'FRichText_TextAndBrushIconListInfo::IconIntervalSpace' has a wrong offset!");
static_assert(offsetof(FRichText_TextAndBrushIconListInfo, ReplacementText) == 0x000018, "Member 'FRichText_TextAndBrushIconListInfo::ReplacementText' has a wrong offset!");
static_assert(offsetof(FRichText_TextAndBrushIconListInfo, IconInfo) == 0x000028, "Member 'FRichText_TextAndBrushIconListInfo::IconInfo' has a wrong offset!");

// ScriptStruct AtRichTextWidget.RichTextImageInfo
// 0x00D0 (0x00D0 - 0x0000)
struct FRichTextImageInfo final
{
public:
	struct FVector2D                              InsertCharPos;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Offset;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Size;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TagName;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReplacementText;                                   // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            Resource;                                          // 0x0048(0x0088)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRichTextImageInfo) == 0x000008, "Wrong alignment on FRichTextImageInfo");
static_assert(sizeof(FRichTextImageInfo) == 0x0000D0, "Wrong size on FRichTextImageInfo");
static_assert(offsetof(FRichTextImageInfo, InsertCharPos) == 0x000000, "Member 'FRichTextImageInfo::InsertCharPos' has a wrong offset!");
static_assert(offsetof(FRichTextImageInfo, Offset) == 0x000008, "Member 'FRichTextImageInfo::Offset' has a wrong offset!");
static_assert(offsetof(FRichTextImageInfo, Size) == 0x000010, "Member 'FRichTextImageInfo::Size' has a wrong offset!");
static_assert(offsetof(FRichTextImageInfo, Color) == 0x000018, "Member 'FRichTextImageInfo::Color' has a wrong offset!");
static_assert(offsetof(FRichTextImageInfo, TagName) == 0x000028, "Member 'FRichTextImageInfo::TagName' has a wrong offset!");
static_assert(offsetof(FRichTextImageInfo, ReplacementText) == 0x000038, "Member 'FRichTextImageInfo::ReplacementText' has a wrong offset!");
static_assert(offsetof(FRichTextImageInfo, Resource) == 0x000048, "Member 'FRichTextImageInfo::Resource' has a wrong offset!");

// ScriptStruct AtRichTextWidget.RubyData
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FRubyData final
{
public:
	uint8                                         Pad_163[0x38];                                     // 0x0000(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FRubyData) == 0x000008, "Wrong alignment on FRubyData");
static_assert(sizeof(FRubyData) == 0x000038, "Wrong size on FRubyData");

}

