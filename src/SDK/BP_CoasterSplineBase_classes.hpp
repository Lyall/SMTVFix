#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CoasterSplineBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CoasterSplineBase.BP_CoasterSplineBase_C
// 0x0058 (0x0278 - 0x0220)
class ABP_CoasterSplineBase_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpen;                                            // 0x0230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E2B[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             EvtDis_EndMoveSpline;                              // 0x0238(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             EvtDis_EndShowSpline;                              // 0x0248(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             EvtDis_EndActiveSpline;                            // 0x0258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             EvtDis_StartMoveSpline;                            // 0x0268(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void EvtDis_EndMoveSpline__DelegateSignature();
	void EvtDis_EndShowSpline__DelegateSignature();
	void EvtDis_EndActiveSpline__DelegateSignature();
	void EvtDis_StartMoveSpline__DelegateSignature();
	void ExecuteUbergraph_BP_CoasterSplineBase(int32 EntryPoint);
	void ShowSpline(bool Show, bool Anim);
	void ActiveSplineAnim(bool Active, bool Anim);
	void MoveSpline(bool FromStartGimmick);
	void SetOpen(bool Open, bool StartGimmick, bool EndGimmick, bool UpdateIcon, bool UpdateNaviDeactive, bool UpdateChain);
	void GetStartGimmick(class AActor** Actor);
	void GetEndGimmick(class AActor** Actor);
	void CalcOpen();
	void ChainOpen();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CoasterSplineBase_C">();
	}
	static class ABP_CoasterSplineBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CoasterSplineBase_C>();
	}
};
static_assert(alignof(ABP_CoasterSplineBase_C) == 0x000008, "Wrong alignment on ABP_CoasterSplineBase_C");
static_assert(sizeof(ABP_CoasterSplineBase_C) == 0x000278, "Wrong size on ABP_CoasterSplineBase_C");
static_assert(offsetof(ABP_CoasterSplineBase_C, UberGraphFrame) == 0x000220, "Member 'ABP_CoasterSplineBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CoasterSplineBase_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_CoasterSplineBase_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CoasterSplineBase_C, IsOpen) == 0x000230, "Member 'ABP_CoasterSplineBase_C::IsOpen' has a wrong offset!");
static_assert(offsetof(ABP_CoasterSplineBase_C, EvtDis_EndMoveSpline) == 0x000238, "Member 'ABP_CoasterSplineBase_C::EvtDis_EndMoveSpline' has a wrong offset!");
static_assert(offsetof(ABP_CoasterSplineBase_C, EvtDis_EndShowSpline) == 0x000248, "Member 'ABP_CoasterSplineBase_C::EvtDis_EndShowSpline' has a wrong offset!");
static_assert(offsetof(ABP_CoasterSplineBase_C, EvtDis_EndActiveSpline) == 0x000258, "Member 'ABP_CoasterSplineBase_C::EvtDis_EndActiveSpline' has a wrong offset!");
static_assert(offsetof(ABP_CoasterSplineBase_C, EvtDis_StartMoveSpline) == 0x000268, "Member 'ABP_CoasterSplineBase_C::EvtDis_StartMoveSpline' has a wrong offset!");

}

