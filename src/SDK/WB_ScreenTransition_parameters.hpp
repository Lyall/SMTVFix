#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ScreenTransition

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "E_ScreenTransitionFadeType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Project_structs.hpp"


namespace SDK::Params
{

// Function WB_ScreenTransition.WB_ScreenTransition_C.ExecuteUbergraph_WB_ScreenTransition
// 0x005C (0x005C - 0x0000)
struct WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateAnim_AnimEnd;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition) == 0x000004, "Wrong alignment on WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition");
static_assert(sizeof(WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition) == 0x00005C, "Wrong size on WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition");
static_assert(offsetof(WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition, EntryPoint) == 0x000000, "Member 'WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition, K2Node_Event_MyGeometry) == 0x000004, "Member 'WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition, K2Node_SwitchInteger_CmpSuccess) == 0x000040, "Member 'WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition, CallFunc_UpdateAnim_AnimEnd) == 0x000048, "Member 'WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition::CallFunc_UpdateAnim_AnimEnd' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000050, "Member 'WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition, Temp_int_Variable) == 0x000058, "Member 'WB_ScreenTransition_C_ExecuteUbergraph_WB_ScreenTransition::Temp_int_Variable' has a wrong offset!");

// Function WB_ScreenTransition.WB_ScreenTransition_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_ScreenTransition_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ScreenTransition_C_Tick) == 0x000004, "Wrong alignment on WB_ScreenTransition_C_Tick");
static_assert(sizeof(WB_ScreenTransition_C_Tick) == 0x00003C, "Wrong size on WB_ScreenTransition_C_Tick");
static_assert(offsetof(WB_ScreenTransition_C_Tick, MyGeometry) == 0x000000, "Member 'WB_ScreenTransition_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_ScreenTransition_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_ScreenTransition.WB_ScreenTransition_C.SetTransitionTexture
// 0x0008 (0x0008 - 0x0000)
struct WB_ScreenTransition_C_SetTransitionTexture final
{
public:
	class UTexture2D*                             InTexture;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ScreenTransition_C_SetTransitionTexture) == 0x000008, "Wrong alignment on WB_ScreenTransition_C_SetTransitionTexture");
static_assert(sizeof(WB_ScreenTransition_C_SetTransitionTexture) == 0x000008, "Wrong size on WB_ScreenTransition_C_SetTransitionTexture");
static_assert(offsetof(WB_ScreenTransition_C_SetTransitionTexture, InTexture) == 0x000000, "Member 'WB_ScreenTransition_C_SetTransitionTexture::InTexture' has a wrong offset!");

// Function WB_ScreenTransition.WB_ScreenTransition_C.FadeIn
// 0x0001 (0x0001 - 0x0000)
struct WB_ScreenTransition_C_FadeIn final
{
public:
	E_ScreenTransitionFadeType                    InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ScreenTransition_C_FadeIn) == 0x000001, "Wrong alignment on WB_ScreenTransition_C_FadeIn");
static_assert(sizeof(WB_ScreenTransition_C_FadeIn) == 0x000001, "Wrong size on WB_ScreenTransition_C_FadeIn");
static_assert(offsetof(WB_ScreenTransition_C_FadeIn, InType) == 0x000000, "Member 'WB_ScreenTransition_C_FadeIn::InType' has a wrong offset!");

// Function WB_ScreenTransition.WB_ScreenTransition_C.FadeOut
// 0x0001 (0x0001 - 0x0000)
struct WB_ScreenTransition_C_FadeOut final
{
public:
	E_ScreenTransitionFadeType                    InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ScreenTransition_C_FadeOut) == 0x000001, "Wrong alignment on WB_ScreenTransition_C_FadeOut");
static_assert(sizeof(WB_ScreenTransition_C_FadeOut) == 0x000001, "Wrong size on WB_ScreenTransition_C_FadeOut");
static_assert(offsetof(WB_ScreenTransition_C_FadeOut, InType) == 0x000000, "Member 'WB_ScreenTransition_C_FadeOut::InType' has a wrong offset!");

// Function WB_ScreenTransition.WB_ScreenTransition_C.Cover
// 0x0001 (0x0001 - 0x0000)
struct WB_ScreenTransition_C_Cover final
{
public:
	E_ScreenTransitionFadeType                    InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ScreenTransition_C_Cover) == 0x000001, "Wrong alignment on WB_ScreenTransition_C_Cover");
static_assert(sizeof(WB_ScreenTransition_C_Cover) == 0x000001, "Wrong size on WB_ScreenTransition_C_Cover");
static_assert(offsetof(WB_ScreenTransition_C_Cover, InType) == 0x000000, "Member 'WB_ScreenTransition_C_Cover::InType' has a wrong offset!");

// Function WB_ScreenTransition.WB_ScreenTransition_C.SetVectorValue
// 0x0038 (0x0038 - 0x0000)
struct WB_ScreenTransition_C_SetVectorValue final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Value;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ScreenTransition_C_SetVectorValue) == 0x000008, "Wrong alignment on WB_ScreenTransition_C_SetVectorValue");
static_assert(sizeof(WB_ScreenTransition_C_SetVectorValue) == 0x000038, "Wrong size on WB_ScreenTransition_C_SetVectorValue");
static_assert(offsetof(WB_ScreenTransition_C_SetVectorValue, ParameterName) == 0x000000, "Member 'WB_ScreenTransition_C_SetVectorValue::ParameterName' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_SetVectorValue, Value) == 0x000008, "Member 'WB_ScreenTransition_C_SetVectorValue::Value' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_SetVectorValue, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WB_ScreenTransition_C_SetVectorValue::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_SetVectorValue, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WB_ScreenTransition_C_SetVectorValue::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_SetVectorValue, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WB_ScreenTransition_C_SetVectorValue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_SetVectorValue, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WB_ScreenTransition_C_SetVectorValue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_SetVectorValue, CallFunc_Array_Get_Item) == 0x000028, "Member 'WB_ScreenTransition_C_SetVectorValue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_SetVectorValue, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WB_ScreenTransition_C_SetVectorValue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_ScreenTransition.WB_ScreenTransition_C.PlayStart
// 0x001C (0x001C - 0x0000)
struct WB_ScreenTransition_C_PlayStart final
{
public:
	int32                                         AnimType;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ScreenTransitionFadeType                    ScreenType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartFrame;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ScreenTransition_C_PlayStart) == 0x000004, "Wrong alignment on WB_ScreenTransition_C_PlayStart");
static_assert(sizeof(WB_ScreenTransition_C_PlayStart) == 0x00001C, "Wrong size on WB_ScreenTransition_C_PlayStart");
static_assert(offsetof(WB_ScreenTransition_C_PlayStart, AnimType) == 0x000000, "Member 'WB_ScreenTransition_C_PlayStart::AnimType' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_PlayStart, ScreenType) == 0x000004, "Member 'WB_ScreenTransition_C_PlayStart::ScreenType' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_PlayStart, StartFrame) == 0x000008, "Member 'WB_ScreenTransition_C_PlayStart::StartFrame' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_PlayStart, CallFunc_MakeColor_ReturnValue) == 0x00000C, "Member 'WB_ScreenTransition_C_PlayStart::CallFunc_MakeColor_ReturnValue' has a wrong offset!");

// Function WB_ScreenTransition.WB_ScreenTransition_C.UpdateAnim
// 0x0034 (0x0034 - 0x0000)
struct WB_ScreenTransition_C_UpdateAnim final
{
public:
	float                                         PastTime;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AnimEnd;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ScreenTransition_C_UpdateAnim) == 0x000004, "Wrong alignment on WB_ScreenTransition_C_UpdateAnim");
static_assert(sizeof(WB_ScreenTransition_C_UpdateAnim) == 0x000034, "Wrong size on WB_ScreenTransition_C_UpdateAnim");
static_assert(offsetof(WB_ScreenTransition_C_UpdateAnim, PastTime) == 0x000000, "Member 'WB_ScreenTransition_C_UpdateAnim::PastTime' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateAnim, AnimEnd) == 0x000004, "Member 'WB_ScreenTransition_C_UpdateAnim::AnimEnd' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateAnim, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'WB_ScreenTransition_C_UpdateAnim::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateAnim, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'WB_ScreenTransition_C_UpdateAnim::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateAnim, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000010, "Member 'WB_ScreenTransition_C_UpdateAnim::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateAnim, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000014, "Member 'WB_ScreenTransition_C_UpdateAnim::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateAnim, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000018, "Member 'WB_ScreenTransition_C_UpdateAnim::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateAnim, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'WB_ScreenTransition_C_UpdateAnim::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateAnim, CallFunc_MakeColor_ReturnValue) == 0x000020, "Member 'WB_ScreenTransition_C_UpdateAnim::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateAnim, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'WB_ScreenTransition_C_UpdateAnim::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function WB_ScreenTransition.WB_ScreenTransition_C.InitTexture
// 0x0028 (0x0028 - 0x0000)
struct WB_ScreenTransition_C_InitTexture final
{
public:
	E_ScreenTransitionFadeType                    ScreenType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ScreenTransition_C_InitTexture) == 0x000008, "Wrong alignment on WB_ScreenTransition_C_InitTexture");
static_assert(sizeof(WB_ScreenTransition_C_InitTexture) == 0x000028, "Wrong size on WB_ScreenTransition_C_InitTexture");
static_assert(offsetof(WB_ScreenTransition_C_InitTexture, ScreenType) == 0x000000, "Member 'WB_ScreenTransition_C_InitTexture::ScreenType' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_InitTexture, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WB_ScreenTransition_C_InitTexture::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_InitTexture, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'WB_ScreenTransition_C_InitTexture::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_InitTexture, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WB_ScreenTransition_C_InitTexture::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_InitTexture, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WB_ScreenTransition_C_InitTexture::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_InitTexture, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'WB_ScreenTransition_C_InitTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_InitTexture, CallFunc_Array_Get_Item) == 0x000018, "Member 'WB_ScreenTransition_C_InitTexture::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_InitTexture, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WB_ScreenTransition_C_InitTexture::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_InitTexture, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'WB_ScreenTransition_C_InitTexture::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_ScreenTransition.WB_ScreenTransition_C.PlaySsPlayer
// 0x0014 (0x0014 - 0x0000)
struct WB_ScreenTransition_C_PlaySsPlayer final
{
public:
	int32                                         AnimType;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartFrame;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_AnimName;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ScreenTransition_C_PlaySsPlayer) == 0x000004, "Wrong alignment on WB_ScreenTransition_C_PlaySsPlayer");
static_assert(sizeof(WB_ScreenTransition_C_PlaySsPlayer) == 0x000014, "Wrong size on WB_ScreenTransition_C_PlaySsPlayer");
static_assert(offsetof(WB_ScreenTransition_C_PlaySsPlayer, AnimType) == 0x000000, "Member 'WB_ScreenTransition_C_PlaySsPlayer::AnimType' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_PlaySsPlayer, StartFrame) == 0x000004, "Member 'WB_ScreenTransition_C_PlaySsPlayer::StartFrame' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_PlaySsPlayer, Lo_AnimName) == 0x000008, "Member 'WB_ScreenTransition_C_PlaySsPlayer::Lo_AnimName' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_PlaySsPlayer, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'WB_ScreenTransition_C_PlaySsPlayer::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_PlaySsPlayer, CallFunc_Play_ReturnValue) == 0x000011, "Member 'WB_ScreenTransition_C_PlaySsPlayer::CallFunc_Play_ReturnValue' has a wrong offset!");

// Function WB_ScreenTransition.WB_ScreenTransition_C.IsEndAnim
// 0x0002 (0x0002 - 0x0000)
struct WB_ScreenTransition_C_IsEndAnim final
{
public:
	bool                                          IsEnd;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ScreenTransition_C_IsEndAnim) == 0x000001, "Wrong alignment on WB_ScreenTransition_C_IsEndAnim");
static_assert(sizeof(WB_ScreenTransition_C_IsEndAnim) == 0x000002, "Wrong size on WB_ScreenTransition_C_IsEndAnim");
static_assert(offsetof(WB_ScreenTransition_C_IsEndAnim, IsEnd) == 0x000000, "Member 'WB_ScreenTransition_C_IsEndAnim::IsEnd' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_IsEndAnim, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'WB_ScreenTransition_C_IsEndAnim::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WB_ScreenTransition.WB_ScreenTransition_C.getFinishByFrame
// 0x001C (0x001C - 0x0000)
struct WB_ScreenTransition_C_GetFinishByFrame final
{
public:
	float                                         OutFrame;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ScreenTransition_C_GetFinishByFrame) == 0x000004, "Wrong alignment on WB_ScreenTransition_C_GetFinishByFrame");
static_assert(sizeof(WB_ScreenTransition_C_GetFinishByFrame) == 0x00001C, "Wrong size on WB_ScreenTransition_C_GetFinishByFrame");
static_assert(offsetof(WB_ScreenTransition_C_GetFinishByFrame, OutFrame) == 0x000000, "Member 'WB_ScreenTransition_C_GetFinishByFrame::OutFrame' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_GetFinishByFrame, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'WB_ScreenTransition_C_GetFinishByFrame::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_GetFinishByFrame, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'WB_ScreenTransition_C_GetFinishByFrame::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_GetFinishByFrame, CallFunc_FMax_ReturnValue) == 0x00000C, "Member 'WB_ScreenTransition_C_GetFinishByFrame::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_GetFinishByFrame, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000010, "Member 'WB_ScreenTransition_C_GetFinishByFrame::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_GetFinishByFrame, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'WB_ScreenTransition_C_GetFinishByFrame::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_GetFinishByFrame, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'WB_ScreenTransition_C_GetFinishByFrame::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_ScreenTransition.WB_ScreenTransition_C.GetFadeState
// 0x0001 (0x0001 - 0x0000)
struct WB_ScreenTransition_C_GetFadeState final
{
public:
	E_UI_FADE_STATE                               FadeState;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ScreenTransition_C_GetFadeState) == 0x000001, "Wrong alignment on WB_ScreenTransition_C_GetFadeState");
static_assert(sizeof(WB_ScreenTransition_C_GetFadeState) == 0x000001, "Wrong size on WB_ScreenTransition_C_GetFadeState");
static_assert(offsetof(WB_ScreenTransition_C_GetFadeState, FadeState) == 0x000000, "Member 'WB_ScreenTransition_C_GetFadeState::FadeState' has a wrong offset!");

// Function WB_ScreenTransition.WB_ScreenTransition_C.UpdateUV
// 0x0080 (0x0080 - 0x0000)
struct WB_ScreenTransition_C_UpdateUV final
{
public:
	bool                                          bForceUpdate;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0004(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_CalcScreenToWidgetUV_ReturnValue;         // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GeometryEquals_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakColor_R;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ScreenTransition_C_UpdateUV) == 0x000004, "Wrong alignment on WB_ScreenTransition_C_UpdateUV");
static_assert(sizeof(WB_ScreenTransition_C_UpdateUV) == 0x000080, "Wrong size on WB_ScreenTransition_C_UpdateUV");
static_assert(offsetof(WB_ScreenTransition_C_UpdateUV, bForceUpdate) == 0x000000, "Member 'WB_ScreenTransition_C_UpdateUV::bForceUpdate' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateUV, CallFunc_GetCachedGeometry_ReturnValue) == 0x000004, "Member 'WB_ScreenTransition_C_UpdateUV::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateUV, CallFunc_CalcScreenToWidgetUV_ReturnValue) == 0x00003C, "Member 'WB_ScreenTransition_C_UpdateUV::CallFunc_CalcScreenToWidgetUV_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateUV, CallFunc_GeometryEquals_ReturnValue) == 0x00004C, "Member 'WB_ScreenTransition_C_UpdateUV::CallFunc_GeometryEquals_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateUV, CallFunc_BreakColor_R) == 0x000050, "Member 'WB_ScreenTransition_C_UpdateUV::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateUV, CallFunc_BreakColor_G) == 0x000054, "Member 'WB_ScreenTransition_C_UpdateUV::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateUV, CallFunc_BreakColor_B) == 0x000058, "Member 'WB_ScreenTransition_C_UpdateUV::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateUV, CallFunc_BreakColor_A) == 0x00005C, "Member 'WB_ScreenTransition_C_UpdateUV::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateUV, CallFunc_FMax_ReturnValue) == 0x000060, "Member 'WB_ScreenTransition_C_UpdateUV::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateUV, CallFunc_FMax_ReturnValue_1) == 0x000064, "Member 'WB_ScreenTransition_C_UpdateUV::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateUV, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000068, "Member 'WB_ScreenTransition_C_UpdateUV::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateUV, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00006C, "Member 'WB_ScreenTransition_C_UpdateUV::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ScreenTransition_C_UpdateUV, CallFunc_MakeColor_ReturnValue) == 0x000070, "Member 'WB_ScreenTransition_C_UpdateUV::CallFunc_MakeColor_ReturnValue' has a wrong offset!");

}

