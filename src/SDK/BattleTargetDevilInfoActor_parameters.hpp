#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleTargetDevilInfoActor

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Project_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.ExecuteUbergraph_BattleTargetDevilInfoActor
// 0x03D0 (0x03D0 - 0x0000)
struct BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_5C68[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Aishou_C*            CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C69[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_AishouNotice_C*      CallFunc_Create_ReturnValue_1;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue_1;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C6A[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C6B[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_retValue;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue_2;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C6C[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_HP_C*                CallFunc_Create_ReturnValue_2;                     // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue_3;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C6D[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Info_C*              CallFunc_Create_ReturnValue_3;                     // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C6E[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetBIPartySystem_ret;                     // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(int32 PartyIndex)>             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_5C6F[0x8];                                     // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_BI_GetPartyData_retValue;                 // 0x00A0(0x0320)()
	TDelegate<void(int32 PartyIndex)>             K2Node_CreateDelegate_OutputDelegate_2;            // 0x03C0(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor) == 0x000010, "Wrong alignment on BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor");
static_assert(sizeof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor) == 0x0003D0, "Wrong size on BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, EntryPoint) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, CallFunc_AddToWidgetPrio_ReturnValue) == 0x000020, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, CallFunc_Create_ReturnValue_1) == 0x000028, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, CallFunc_AddToWidgetPrio_ReturnValue_1) == 0x000030, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::CallFunc_AddToWidgetPrio_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, K2Node_Event_DeltaSeconds) == 0x000034, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000038, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00003C, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, CallFunc_FindUnit_retValue) == 0x000048, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::CallFunc_FindUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, CallFunc_AddToWidgetPrio_ReturnValue_2) == 0x000050, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::CallFunc_AddToWidgetPrio_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, CallFunc_Create_ReturnValue_2) == 0x000058, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, CallFunc_AddToWidgetPrio_ReturnValue_3) == 0x000060, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::CallFunc_AddToWidgetPrio_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, CallFunc_Create_ReturnValue_3) == 0x000068, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, K2Node_Event_EndPlayReason) == 0x000070, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, CallFunc_GetBIPartySystem_ret) == 0x000078, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::CallFunc_GetBIPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, K2Node_CreateDelegate_OutputDelegate_1) == 0x000088, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, CallFunc_BI_GetPartyData_retValue) == 0x0000A0, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::CallFunc_BI_GetPartyData_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor, K2Node_CreateDelegate_OutputDelegate_2) == 0x0003C0, "Member 'BattleTargetDevilInfoActor_C_ExecuteUbergraph_BattleTargetDevilInfoActor::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BattleTargetDevilInfoActor_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BattleTargetDevilInfoActor_C_ReceiveEndPlay");
static_assert(sizeof(BattleTargetDevilInfoActor_C_ReceiveEndPlay) == 0x000001, "Wrong size on BattleTargetDevilInfoActor_C_ReceiveEndPlay");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BattleTargetDevilInfoActor_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_ReceiveTick) == 0x000004, "Wrong alignment on BattleTargetDevilInfoActor_C_ReceiveTick");
static_assert(sizeof(BattleTargetDevilInfoActor_C_ReceiveTick) == 0x000004, "Wrong size on BattleTargetDevilInfoActor_C_ReceiveTick");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.GetBIMainWork
// 0x0030 (0x0030 - 0x0000)
struct BattleTargetDevilInfoActor_C_GetBIMainWork final
{
public:
	TScriptInterface<class IBPI_BattleMain_C>     RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     K2Node_DynamicCast_AsBPI_Battle_Main;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_GetBIMainWork) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_GetBIMainWork");
static_assert(sizeof(BattleTargetDevilInfoActor_C_GetBIMainWork) == 0x000030, "Wrong size on BattleTargetDevilInfoActor_C_GetBIMainWork");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetBIMainWork, RetValue) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_GetBIMainWork::RetValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetBIMainWork, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_GetBIMainWork::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetBIMainWork, K2Node_DynamicCast_AsBPI_Battle_Main) == 0x000018, "Member 'BattleTargetDevilInfoActor_C_GetBIMainWork::K2Node_DynamicCast_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetBIMainWork, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleTargetDevilInfoActor_C_GetBIMainWork::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.GetBIPartySystem
// 0x0030 (0x0030 - 0x0000)
struct BattleTargetDevilInfoActor_C_GetBIPartySystem final
{
public:
	TScriptInterface<class IBPI_BattleParty_C>    Ret;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetBIMainWork_retValue;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_ret;                    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_GetBIPartySystem) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_GetBIPartySystem");
static_assert(sizeof(BattleTargetDevilInfoActor_C_GetBIPartySystem) == 0x000030, "Wrong size on BattleTargetDevilInfoActor_C_GetBIPartySystem");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetBIPartySystem, Ret) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_GetBIPartySystem::Ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetBIPartySystem, CallFunc_GetBIMainWork_retValue) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_GetBIPartySystem::CallFunc_GetBIMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetBIPartySystem, CallFunc_BI_GetPartySystem_ret) == 0x000020, "Member 'BattleTargetDevilInfoActor_C_GetBIPartySystem::CallFunc_BI_GetPartySystem_ret' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.PlayHpBar
// 0x0020 (0x0020 - 0x0000)
struct BattleTargetDevilInfoActor_C_PlayHpBar final
{
public:
	int32                                         AddParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimTime;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Overflow;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C70[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_HP_C*                CallFunc_GetWidget_HPBar_Widget;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_PlayHpBar) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_PlayHpBar");
static_assert(sizeof(BattleTargetDevilInfoActor_C_PlayHpBar) == 0x000020, "Wrong size on BattleTargetDevilInfoActor_C_PlayHpBar");
static_assert(offsetof(BattleTargetDevilInfoActor_C_PlayHpBar, AddParam) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_PlayHpBar::AddParam' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_PlayHpBar, AnimTime) == 0x000004, "Member 'BattleTargetDevilInfoActor_C_PlayHpBar::AnimTime' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_PlayHpBar, Overflow) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_PlayHpBar::Overflow' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_PlayHpBar, CallFunc_GetWidget_HPBar_Widget) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_PlayHpBar::CallFunc_GetWidget_HPBar_Widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_PlayHpBar, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BattleTargetDevilInfoActor_C_PlayHpBar::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.GetWidget_HPBar
// 0x0008 (0x0008 - 0x0000)
struct BattleTargetDevilInfoActor_C_GetWidget_HPBar final
{
public:
	class UWB_BtlTargetDevil_HP_C*                Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_GetWidget_HPBar) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_GetWidget_HPBar");
static_assert(sizeof(BattleTargetDevilInfoActor_C_GetWidget_HPBar) == 0x000008, "Wrong size on BattleTargetDevilInfoActor_C_GetWidget_HPBar");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetWidget_HPBar, Widget) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_GetWidget_HPBar::Widget' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.IsPlayHpBar
// 0x0018 (0x0018 - 0x0000)
struct BattleTargetDevilInfoActor_C_IsPlayHpBar final
{
public:
	bool                                          IsPlay;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C71[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_HP_C*                CallFunc_GetWidget_HPBar_Widget;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayDamageAnim_m_PlayDamageAnim;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_IsPlayHpBar) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_IsPlayHpBar");
static_assert(sizeof(BattleTargetDevilInfoActor_C_IsPlayHpBar) == 0x000018, "Wrong size on BattleTargetDevilInfoActor_C_IsPlayHpBar");
static_assert(offsetof(BattleTargetDevilInfoActor_C_IsPlayHpBar, IsPlay) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_IsPlayHpBar::IsPlay' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_IsPlayHpBar, CallFunc_GetWidget_HPBar_Widget) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_IsPlayHpBar::CallFunc_GetWidget_HPBar_Widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_IsPlayHpBar, CallFunc_IsPlayDamageAnim_m_PlayDamageAnim) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_IsPlayHpBar::CallFunc_IsPlayDamageAnim_m_PlayDamageAnim' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_IsPlayHpBar, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BattleTargetDevilInfoActor_C_IsPlayHpBar::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.StopPlayHpBar
// 0x0010 (0x0010 - 0x0000)
struct BattleTargetDevilInfoActor_C_StopPlayHpBar final
{
public:
	class UWB_BtlTargetDevil_HP_C*                CallFunc_GetWidget_HPBar_Widget;                   // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_StopPlayHpBar) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_StopPlayHpBar");
static_assert(sizeof(BattleTargetDevilInfoActor_C_StopPlayHpBar) == 0x000010, "Wrong size on BattleTargetDevilInfoActor_C_StopPlayHpBar");
static_assert(offsetof(BattleTargetDevilInfoActor_C_StopPlayHpBar, CallFunc_GetWidget_HPBar_Widget) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_StopPlayHpBar::CallFunc_GetWidget_HPBar_Widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_StopPlayHpBar, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_StopPlayHpBar::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.DrawSwitch_HpBar
// 0x0030 (0x0030 - 0x0000)
struct BattleTargetDevilInfoActor_C_DrawSwitch_HpBar final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UsingDamage;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Use2Line;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Immediately;                                       // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUseSkipTarget;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_Switch;                                         // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C72[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_HP_C*                CallFunc_GetWidget_HPBar_Widget;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Disappear_self_CastInput;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Appear_self_CastInput;                    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_DrawSwitch_HpBar) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_DrawSwitch_HpBar");
static_assert(sizeof(BattleTargetDevilInfoActor_C_DrawSwitch_HpBar) == 0x000030, "Wrong size on BattleTargetDevilInfoActor_C_DrawSwitch_HpBar");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_HpBar, Sw) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_HpBar::Sw' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_HpBar, UsingDamage) == 0x000001, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_HpBar::UsingDamage' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_HpBar, Use2Line) == 0x000002, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_HpBar::Use2Line' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_HpBar, Immediately) == 0x000003, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_HpBar::Immediately' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_HpBar, IsUseSkipTarget) == 0x000004, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_HpBar::IsUseSkipTarget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_HpBar, Lo_Switch) == 0x000005, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_HpBar::Lo_Switch' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_HpBar, CallFunc_GetWidget_HPBar_Widget) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_HpBar::CallFunc_GetWidget_HPBar_Widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_HpBar, CallFunc_Disappear_self_CastInput) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_HpBar::CallFunc_Disappear_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_HpBar, CallFunc_Appear_self_CastInput) == 0x000020, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_HpBar::CallFunc_Appear_self_CastInput' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.GetPartyData_Hp
// 0x04C0 (0x04C0 - 0x0000)
struct BattleTargetDevilInfoActor_C_GetPartyData_Hp final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Hp;                                                // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HpMax;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAnalyzed;                                        // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_Analyzed;                                       // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetBIMainWork_retValue;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBossRushChallengeMode_ret;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C73[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetBIPartySystem_ret;                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckMagatsuhiDevil_ret;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C74[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnalyzeData                           CallFunc_BI_GetMitamaAnalyzeData_analyzeData;      // 0x0040(0x0050)()
	bool                                          CallFunc_BI_CheckMitama_ret;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C75[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetBIPartySystem_ret_1;                   // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C76[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_BI_GetPartyData_retValue;                 // 0x00B0(0x0320)()
	bool                                          CallFunc_Analyze_CheckIsOpenAnalyze_ReturnValue;   // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C77[0x7];                                     // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnemyData                             CallFunc_GetEnemyBaseData_ReturnValue;             // 0x03D8(0x00D8)(ConstParm)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x04B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x04B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x04B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_GetPartyData_Hp) == 0x000010, "Wrong alignment on BattleTargetDevilInfoActor_C_GetPartyData_Hp");
static_assert(sizeof(BattleTargetDevilInfoActor_C_GetPartyData_Hp) == 0x0004C0, "Wrong size on BattleTargetDevilInfoActor_C_GetPartyData_Hp");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, PartyIndex) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, Hp) == 0x000004, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::Hp' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, HpMax) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::HpMax' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, IsAnalyzed) == 0x00000C, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::IsAnalyzed' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, Lo_Analyzed) == 0x00000D, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::Lo_Analyzed' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, Temp_bool_Variable) == 0x00000E, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, Temp_bool_Variable_1) == 0x00000F, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, CallFunc_GetBIMainWork_retValue) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::CallFunc_GetBIMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, CallFunc_BI_CheckBossRushChallengeMode_ret) == 0x000020, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::CallFunc_BI_CheckBossRushChallengeMode_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, CallFunc_GetBIPartySystem_ret) == 0x000028, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::CallFunc_GetBIPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, CallFunc_BI_CheckMagatsuhiDevil_ret) == 0x000038, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::CallFunc_BI_CheckMagatsuhiDevil_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, CallFunc_BI_GetMitamaAnalyzeData_analyzeData) == 0x000040, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::CallFunc_BI_GetMitamaAnalyzeData_analyzeData' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, CallFunc_BI_CheckMitama_ret) == 0x000090, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::CallFunc_BI_CheckMitama_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, CallFunc_BooleanOR_ReturnValue) == 0x000091, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, CallFunc_GetBIPartySystem_ret_1) == 0x000098, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::CallFunc_GetBIPartySystem_ret_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, CallFunc_BooleanOR_ReturnValue_1) == 0x0000A8, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, CallFunc_BI_GetPartyData_retValue) == 0x0000B0, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::CallFunc_BI_GetPartyData_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, CallFunc_Analyze_CheckIsOpenAnalyze_ReturnValue) == 0x0003D0, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::CallFunc_Analyze_CheckIsOpenAnalyze_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, CallFunc_GetEnemyBaseData_ReturnValue) == 0x0003D8, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::CallFunc_GetEnemyBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0004B0, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, CallFunc_Conv_IntToBool_ReturnValue) == 0x0004B4, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, CallFunc_Not_PreBool_ReturnValue) == 0x0004B5, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, CallFunc_BooleanAND_ReturnValue) == 0x0004B6, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetPartyData_Hp, K2Node_Select_Default) == 0x0004B7, "Member 'BattleTargetDevilInfoActor_C_GetPartyData_Hp::K2Node_Select_Default' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.UpDateHpBar
// 0x0020 (0x0020 - 0x0000)
struct BattleTargetDevilInfoActor_C_UpDateHpBar final
{
public:
	bool                                          UpdateHPGauge;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C78[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_HP_C*                CallFunc_GetWidget_HPBar_Widget;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C79[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPartyData_Hp_Hp;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPartyData_Hp_HpMax;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPartyData_Hp_IsAnalyzed;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_UpDateHpBar) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_UpDateHpBar");
static_assert(sizeof(BattleTargetDevilInfoActor_C_UpDateHpBar) == 0x000020, "Wrong size on BattleTargetDevilInfoActor_C_UpDateHpBar");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpDateHpBar, UpdateHPGauge) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_UpDateHpBar::UpdateHPGauge' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpDateHpBar, CallFunc_GetWidget_HPBar_Widget) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_UpDateHpBar::CallFunc_GetWidget_HPBar_Widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpDateHpBar, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_UpDateHpBar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpDateHpBar, CallFunc_GetPartyData_Hp_Hp) == 0x000014, "Member 'BattleTargetDevilInfoActor_C_UpDateHpBar::CallFunc_GetPartyData_Hp_Hp' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpDateHpBar, CallFunc_GetPartyData_Hp_HpMax) == 0x000018, "Member 'BattleTargetDevilInfoActor_C_UpDateHpBar::CallFunc_GetPartyData_Hp_HpMax' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpDateHpBar, CallFunc_GetPartyData_Hp_IsAnalyzed) == 0x00001C, "Member 'BattleTargetDevilInfoActor_C_UpDateHpBar::CallFunc_GetPartyData_Hp_IsAnalyzed' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.DrawSwitch_HpBarIsDraw
// 0x0030 (0x0030 - 0x0000)
struct BattleTargetDevilInfoActor_C_DrawSwitch_HpBarIsDraw final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C7A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_HP_C*                CallFunc_GetWidget_HPBar_Widget;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Disappear_self_CastInput;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Appear_self_CastInput;                    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_DrawSwitch_HpBarIsDraw) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_DrawSwitch_HpBarIsDraw");
static_assert(sizeof(BattleTargetDevilInfoActor_C_DrawSwitch_HpBarIsDraw) == 0x000030, "Wrong size on BattleTargetDevilInfoActor_C_DrawSwitch_HpBarIsDraw");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_HpBarIsDraw, Sw) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_HpBarIsDraw::Sw' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_HpBarIsDraw, CallFunc_GetWidget_HPBar_Widget) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_HpBarIsDraw::CallFunc_GetWidget_HPBar_Widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_HpBarIsDraw, CallFunc_Disappear_self_CastInput) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_HpBarIsDraw::CallFunc_Disappear_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_HpBarIsDraw, CallFunc_Appear_self_CastInput) == 0x000020, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_HpBarIsDraw::CallFunc_Appear_self_CastInput' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.SetCharaData
// 0x0520 (0x0520 - 0x0000)
struct BattleTargetDevilInfoActor_C_SetCharaData final
{
public:
	E_UI_STATUS_ESSENCE_ICON                      CallFunc_Calc_Utsusemi_status_Status;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUtsusemiInShop_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C7B[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPartyData_Hp_Hp;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPartyData_Hp_HpMax;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPartyData_Hp_IsAnalyzed;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckUniteBibleEntry_ReturnValue;         // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C7C[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_FindUnit_retValue;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C7D[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UWB_BtlTargetDevil_HP_C*                CallFunc_GetWidget_HPBar_Widget;                   // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UWB_BtlTargetDevil_Info_C*              CallFunc_GetWidget_Name_Widget;                    // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetBIPartySystem_ret;                     // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetBIPartySystem_ret_1;                   // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsUplifting_Ret;                       // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsExistInParty_IsExist;                // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C7E[0x2];                                     // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_GetBadStatus_retValue;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C7F[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_BI_GetPartyData_retValue;                 // 0x01D0(0x0320)()
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetCharaID_retValue;                   // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C80[0x4];                                     // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetBIPartySystem_ret_2;                   // 0x0500(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_side;                          // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_SetCharaData) == 0x000010, "Wrong alignment on BattleTargetDevilInfoActor_C_SetCharaData");
static_assert(sizeof(BattleTargetDevilInfoActor_C_SetCharaData) == 0x000520, "Wrong size on BattleTargetDevilInfoActor_C_SetCharaData");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_Calc_Utsusemi_status_Status) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_Calc_Utsusemi_status_Status' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_IsUtsusemiInShop_ReturnValue) == 0x000001, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_IsUtsusemiInShop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_GetPartyData_Hp_Hp) == 0x000018, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_GetPartyData_Hp_Hp' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_GetPartyData_Hp_HpMax) == 0x00001C, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_GetPartyData_Hp_HpMax' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_GetPartyData_Hp_IsAnalyzed) == 0x000020, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_GetPartyData_Hp_IsAnalyzed' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_Less_IntInt_ReturnValue) == 0x000022, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_CheckUniteBibleEntry_ReturnValue) == 0x000023, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_CheckUniteBibleEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_FindUnit_retValue) == 0x000028, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_FindUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_GetSocketTransform_ReturnValue) == 0x000060, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000090, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000118, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_GetSocketTransform_ReturnValue_1) == 0x000120, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_Conv_IntToString_ReturnValue) == 0x000150, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_GetWidget_HPBar_Widget) == 0x000160, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_GetWidget_HPBar_Widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_Concat_StrStr_ReturnValue) == 0x000168, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000178, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_GetWidget_Name_Widget) == 0x000188, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_GetWidget_Name_Widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000190, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_GetBIPartySystem_ret) == 0x0001A0, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_GetBIPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_GetBIPartySystem_ret_1) == 0x0001B0, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_GetBIPartySystem_ret_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_BI_IsUplifting_Ret) == 0x0001C0, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_BI_IsUplifting_Ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_BI_IsExistInParty_IsExist) == 0x0001C1, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_BI_IsExistInParty_IsExist' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_BI_GetBadStatus_retValue) == 0x0001C4, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_BI_GetBadStatus_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_SelectInt_ReturnValue) == 0x0001C8, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_BI_GetPartyData_retValue) == 0x0001D0, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_BI_GetPartyData_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_SelectInt_ReturnValue_1) == 0x0004F0, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_SelectInt_ReturnValue_2) == 0x0004F4, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_BI_GetCharaID_retValue) == 0x0004F8, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_BI_GetCharaID_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_GetBIPartySystem_ret_2) == 0x000500, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_GetBIPartySystem_ret_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetCharaData, CallFunc_BI_GetSide_side) == 0x000510, "Member 'BattleTargetDevilInfoActor_C_SetCharaData::CallFunc_BI_GetSide_side' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.GetWidget_Name
// 0x0008 (0x0008 - 0x0000)
struct BattleTargetDevilInfoActor_C_GetWidget_Name final
{
public:
	class UWB_BtlTargetDevil_Info_C*              Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_GetWidget_Name) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_GetWidget_Name");
static_assert(sizeof(BattleTargetDevilInfoActor_C_GetWidget_Name) == 0x000008, "Wrong size on BattleTargetDevilInfoActor_C_GetWidget_Name");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetWidget_Name, Widget) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_GetWidget_Name::Widget' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.DrawSwitch_Name
// 0x0030 (0x0030 - 0x0000)
struct BattleTargetDevilInfoActor_C_DrawSwitch_Name final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Immediately;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_Sw;                                             // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C81[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Info_C*              CallFunc_GetWidget_Name_Widget;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Disappear_self_CastInput;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Appear_self_CastInput;                    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_DrawSwitch_Name) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_DrawSwitch_Name");
static_assert(sizeof(BattleTargetDevilInfoActor_C_DrawSwitch_Name) == 0x000030, "Wrong size on BattleTargetDevilInfoActor_C_DrawSwitch_Name");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Name, Sw) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Name::Sw' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Name, Immediately) == 0x000001, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Name::Immediately' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Name, Lo_Sw) == 0x000002, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Name::Lo_Sw' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Name, CallFunc_GetWidget_Name_Widget) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Name::CallFunc_GetWidget_Name_Widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Name, CallFunc_Disappear_self_CastInput) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Name::CallFunc_Disappear_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Name, CallFunc_Appear_self_CastInput) == 0x000020, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Name::CallFunc_Appear_self_CastInput' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.DrawSwich_ComboHitLarge
// 0x0002 (0x0002 - 0x0000)
struct BattleTargetDevilInfoActor_C_DrawSwich_ComboHitLarge final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_Sw;                                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_DrawSwich_ComboHitLarge) == 0x000001, "Wrong alignment on BattleTargetDevilInfoActor_C_DrawSwich_ComboHitLarge");
static_assert(sizeof(BattleTargetDevilInfoActor_C_DrawSwich_ComboHitLarge) == 0x000002, "Wrong size on BattleTargetDevilInfoActor_C_DrawSwich_ComboHitLarge");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwich_ComboHitLarge, Sw) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_DrawSwich_ComboHitLarge::Sw' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwich_ComboHitLarge, Lo_Sw) == 0x000001, "Member 'BattleTargetDevilInfoActor_C_DrawSwich_ComboHitLarge::Lo_Sw' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.GetComboWidget
// 0x0008 (0x0008 - 0x0000)
struct BattleTargetDevilInfoActor_C_GetComboWidget final
{
public:
	class UWB_BtlTargetDevil_HitCombo_C*          AsBattle_Target_Devil_Hit_Combo;                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_GetComboWidget) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_GetComboWidget");
static_assert(sizeof(BattleTargetDevilInfoActor_C_GetComboWidget) == 0x000008, "Wrong size on BattleTargetDevilInfoActor_C_GetComboWidget");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetComboWidget, AsBattle_Target_Devil_Hit_Combo) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_GetComboWidget::AsBattle_Target_Devil_Hit_Combo' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.DrawSwich_ComboHitSmall
// 0x0002 (0x0002 - 0x0000)
struct BattleTargetDevilInfoActor_C_DrawSwich_ComboHitSmall final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_Sw;                                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_DrawSwich_ComboHitSmall) == 0x000001, "Wrong alignment on BattleTargetDevilInfoActor_C_DrawSwich_ComboHitSmall");
static_assert(sizeof(BattleTargetDevilInfoActor_C_DrawSwich_ComboHitSmall) == 0x000002, "Wrong size on BattleTargetDevilInfoActor_C_DrawSwich_ComboHitSmall");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwich_ComboHitSmall, Sw) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_DrawSwich_ComboHitSmall::Sw' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwich_ComboHitSmall, Lo_Sw) == 0x000001, "Member 'BattleTargetDevilInfoActor_C_DrawSwich_ComboHitSmall::Lo_Sw' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.AutoHide
// 0x0020 (0x0020 - 0x0000)
struct BattleTargetDevilInfoActor_C_AutoHide final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_AutoHide) == 0x000004, "Wrong alignment on BattleTargetDevilInfoActor_C_AutoHide");
static_assert(sizeof(BattleTargetDevilInfoActor_C_AutoHide) == 0x000020, "Wrong size on BattleTargetDevilInfoActor_C_AutoHide");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AutoHide, DeltaTime) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_AutoHide::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AutoHide, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'BattleTargetDevilInfoActor_C_AutoHide::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AutoHide, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_AutoHide::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AutoHide, CallFunc_GetTimeRange_MinTime) == 0x00000C, "Member 'BattleTargetDevilInfoActor_C_AutoHide::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AutoHide, CallFunc_GetTimeRange_MaxTime) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_AutoHide::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AutoHide, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BattleTargetDevilInfoActor_C_AutoHide::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AutoHide, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000018, "Member 'BattleTargetDevilInfoActor_C_AutoHide::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AutoHide, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'BattleTargetDevilInfoActor_C_AutoHide::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.AttachToCameraManager
// 0x0001 (0x0001 - 0x0000)
struct BattleTargetDevilInfoActor_C_AttachToCameraManager final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_AttachToCameraManager) == 0x000001, "Wrong alignment on BattleTargetDevilInfoActor_C_AttachToCameraManager");
static_assert(sizeof(BattleTargetDevilInfoActor_C_AttachToCameraManager) == 0x000001, "Wrong size on BattleTargetDevilInfoActor_C_AttachToCameraManager");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AttachToCameraManager, Sw) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_AttachToCameraManager::Sw' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.UpdatePosition
// 0x0190 (0x0190 - 0x0000)
struct BattleTargetDevilInfoActor_C_UpdatePosition final
{
public:
	struct FTransform                             Lo_UIDamage;                                       // 0x0000(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector2D                              Lo_ScreenPos;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_RightVec;                                       // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_upvec;                                          // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C82[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetBIPartySystem_ret;                     // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalcScreenPos_ScreenPosition;             // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C83[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetPartyUnit_retValue;                 // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_BI_GetSocketTransform_RetVal;             // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_CalcScreenPos_ScreenPosition_1;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_BI_GetSocketTransform_RetVal_1;           // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_3;                     // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_UpdatePosition) == 0x000010, "Wrong alignment on BattleTargetDevilInfoActor_C_UpdatePosition");
static_assert(sizeof(BattleTargetDevilInfoActor_C_UpdatePosition) == 0x000190, "Wrong size on BattleTargetDevilInfoActor_C_UpdatePosition");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, Lo_UIDamage) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::Lo_UIDamage' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, Lo_ScreenPos) == 0x000030, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::Lo_ScreenPos' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, Lo_RightVec) == 0x000038, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::Lo_RightVec' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, Lo_upvec) == 0x000044, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::Lo_upvec' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, Temp_bool_Variable) == 0x000050, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, Temp_name_Variable) == 0x000054, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, Temp_name_Variable_1) == 0x00005C, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_BreakVector2D_X) == 0x000064, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_FTrunc_ReturnValue) == 0x00006C, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_GetBIPartySystem_ret) == 0x000070, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_GetBIPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000080, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_GetViewportSize_ReturnValue) == 0x000084, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_BreakVector2D_X_1) == 0x00008C, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_BreakVector2D_Y_1) == 0x000090, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, K2Node_Select_Default) == 0x000094, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00009C, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A0, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000A4, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000AC, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000B0, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_FClamp_ReturnValue) == 0x0000B4, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_SelectFloat_ReturnValue) == 0x0000B8, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_FTrunc_ReturnValue_1) == 0x0000BC, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_MakeVector2D_ReturnValue) == 0x0000C0, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000C8, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000CC, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_CalcScreenPos_ScreenPosition) == 0x0000D4, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_CalcScreenPos_ScreenPosition' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_BI_GetPartyUnit_retValue) == 0x0000E0, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_BI_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_BI_GetSocketTransform_RetVal) == 0x0000F0, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_BI_GetSocketTransform_RetVal' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_CalcScreenPos_ScreenPosition_1) == 0x000120, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_CalcScreenPos_ScreenPosition_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000128, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_BI_GetSocketTransform_RetVal_1) == 0x000130, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_BI_GetSocketTransform_RetVal_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000160, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_BreakVector2D_X_2) == 0x000168, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_BreakVector2D_Y_2) == 0x00016C, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_FTrunc_ReturnValue_2) == 0x000170, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_FTrunc_ReturnValue_3) == 0x000174, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_FTrunc_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000178, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x00017C, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdatePosition, CallFunc_MakeVector2D_ReturnValue_2) == 0x000180, "Member 'BattleTargetDevilInfoActor_C_UpdatePosition::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.UpdateHPBarPosition
// 0x0018 (0x0018 - 0x0000)
struct BattleTargetDevilInfoActor_C_UpdateHPBarPosition final
{
public:
	struct FVector                                Lo_RightVec;                                       // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_upvec;                                          // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_UpdateHPBarPosition) == 0x000004, "Wrong alignment on BattleTargetDevilInfoActor_C_UpdateHPBarPosition");
static_assert(sizeof(BattleTargetDevilInfoActor_C_UpdateHPBarPosition) == 0x000018, "Wrong size on BattleTargetDevilInfoActor_C_UpdateHPBarPosition");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdateHPBarPosition, Lo_RightVec) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_UpdateHPBarPosition::Lo_RightVec' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdateHPBarPosition, Lo_upvec) == 0x00000C, "Member 'BattleTargetDevilInfoActor_C_UpdateHPBarPosition::Lo_upvec' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.GetWidget_Aishou
// 0x0008 (0x0008 - 0x0000)
struct BattleTargetDevilInfoActor_C_GetWidget_Aishou final
{
public:
	class UWB_BtlTargetDevil_Aishou_C*            Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_GetWidget_Aishou) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_GetWidget_Aishou");
static_assert(sizeof(BattleTargetDevilInfoActor_C_GetWidget_Aishou) == 0x000008, "Wrong size on BattleTargetDevilInfoActor_C_GetWidget_Aishou");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetWidget_Aishou, Widget) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_GetWidget_Aishou::Widget' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.DrawSwitch_Aishou
// 0x0780 (0x0780 - 0x0000)
struct BattleTargetDevilInfoActor_C_DrawSwitch_Aishou final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Immediately;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsBreak;                                        // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsKarn;                                         // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C84[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_BarrirDefenceAishou;                            // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_Cnt;                                            // 0x0018(0x0010)(Edit, BlueprintVisible)
	E_ATTRIBUTE_TYPE                              Lo_Attr;                                           // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C85[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_ArrayIndex;                                     // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsOpenedAishou;                                 // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C86[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_ApplyAttr;                                      // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<E_ATTRIBUTE_TYPE>                      Lo_AttrType;                                       // 0x0048(0x0010)(Edit, BlueprintVisible)
	TArray<bool>                                  Lo_AttrOpen;                                       // 0x0058(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_Flip;                                           // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C87[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              Lo_PartyData;                                      // 0x0070(0x0320)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_BaseAttr;                                       // 0x0390(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_Switch;                                         // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C88[0x3];                                     // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x03A4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x03A8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C89[0x3];                                     // 0x03A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x03AC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x03B0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x03B4(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x03B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C8A[0x2];                                     // 0x03B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_ATTRIBUTE_TYPE>                      K2Node_MakeArray_Array;                            // 0x03B8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AnalyzeCheck_IsOpened;                    // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x03CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBreakAishou_Break;                   // 0x03CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckKarnAishou_Karn;                     // 0x03CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C8B[0x3];                                     // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x03EC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x03F5(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C8C[0x2];                                     // 0x03F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C8D[0x3];                                     // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ATTRIBUTE_TYPE                              CallFunc_Array_Get_Item;                           // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C8E[0x3];                                     // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C8F[0x7];                                     // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Aishou_C*            CallFunc_GetWidget_Aishou_widget;                  // 0x0420(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Disappear_self_CastInput;                 // 0x0428(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Appear_self_CastInput;                    // 0x0438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetBIPartySystem_ret;                     // 0x0448(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C90[0x8];                                     // 0x0458(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_BI_GetPartyData_retValue;                 // 0x0460(0x0320)()
};
static_assert(alignof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou) == 0x000010, "Wrong alignment on BattleTargetDevilInfoActor_C_DrawSwitch_Aishou");
static_assert(sizeof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou) == 0x000780, "Wrong size on BattleTargetDevilInfoActor_C_DrawSwitch_Aishou");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Sw) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Sw' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Immediately) == 0x000001, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Immediately' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Lo_IsBreak) == 0x000002, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Lo_IsBreak' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Lo_IsKarn) == 0x000003, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Lo_IsKarn' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Lo_BarrirDefenceAishou) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Lo_BarrirDefenceAishou' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Lo_Cnt) == 0x000018, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Lo_Cnt' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Lo_Attr) == 0x000028, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Lo_Attr' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Lo_ArrayIndex) == 0x00002C, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Lo_ArrayIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Lo_IsOpenedAishou) == 0x000030, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Lo_IsOpenedAishou' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Lo_ApplyAttr) == 0x000038, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Lo_ApplyAttr' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Lo_AttrType) == 0x000048, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Lo_AttrType' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Lo_AttrOpen) == 0x000058, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Lo_AttrOpen' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Lo_Flip) == 0x000068, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Lo_Flip' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Lo_PartyData) == 0x000070, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Lo_PartyData' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Lo_BaseAttr) == 0x000390, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Lo_BaseAttr' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Lo_Switch) == 0x0003A0, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Lo_Switch' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Temp_int_Variable) == 0x0003A4, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Temp_bool_Variable) == 0x0003A8, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Temp_int_Variable_1) == 0x0003AC, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Temp_int_Variable_2) == 0x0003B0, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Temp_bool_Variable_1) == 0x0003B4, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Temp_bool_Variable_2) == 0x0003B5, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, K2Node_MakeArray_Array) == 0x0003B8, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Temp_int_Array_Index_Variable) == 0x0003C8, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_AnalyzeCheck_IsOpened) == 0x0003CC, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_AnalyzeCheck_IsOpened' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_BooleanOR_ReturnValue) == 0x0003CD, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_CheckBreakAishou_Break) == 0x0003CE, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_CheckBreakAishou_Break' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_CheckKarnAishou_Karn) == 0x0003CF, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_CheckKarnAishou_Karn' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_Array_Add_ReturnValue) == 0x0003D0, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_Array_Add_ReturnValue_1) == 0x0003D4, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_Array_Add_ReturnValue_2) == 0x0003D8, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_Array_Add_ReturnValue_3) == 0x0003DC, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_Array_Add_ReturnValue_4) == 0x0003E0, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_SelectInt_ReturnValue) == 0x0003E4, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_MakeLiteralBool_ReturnValue) == 0x0003E8, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Temp_int_Variable_3) == 0x0003EC, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_Array_Add_ReturnValue_5) == 0x0003F0, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003F4, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, K2Node_Select_Default) == 0x0003F5, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_Array_Add_ReturnValue_6) == 0x0003F8, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_Array_Add_ReturnValue_7) == 0x0003FC, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_BooleanAND_ReturnValue) == 0x000400, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, Temp_int_Loop_Counter_Variable) == 0x000404, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_Add_IntInt_ReturnValue) == 0x000408, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_Array_Add_ReturnValue_8) == 0x00040C, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_Array_Get_Item) == 0x000410, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_Array_Length_ReturnValue) == 0x000414, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_Less_IntInt_ReturnValue) == 0x000418, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_GetWidget_Aishou_widget) == 0x000420, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_GetWidget_Aishou_widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_Disappear_self_CastInput) == 0x000428, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_Disappear_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_Appear_self_CastInput) == 0x000438, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_Appear_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_GetBIPartySystem_ret) == 0x000448, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_GetBIPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_Aishou, CallFunc_BI_GetPartyData_retValue) == 0x000460, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_Aishou::CallFunc_BI_GetPartyData_retValue' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.IsNextAct
// 0x0020 (0x0020 - 0x0000)
struct BattleTargetDevilInfoActor_C_IsNextAct final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C91[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetBIPartySystem_ret;                     // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckFlag_retValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_IsNextAct) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_IsNextAct");
static_assert(sizeof(BattleTargetDevilInfoActor_C_IsNextAct) == 0x000020, "Wrong size on BattleTargetDevilInfoActor_C_IsNextAct");
static_assert(offsetof(BattleTargetDevilInfoActor_C_IsNextAct, PartyIndex) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_IsNextAct::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_IsNextAct, RetValue) == 0x000004, "Member 'BattleTargetDevilInfoActor_C_IsNextAct::RetValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_IsNextAct, CallFunc_GetBIPartySystem_ret) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_IsNextAct::CallFunc_GetBIPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_IsNextAct, CallFunc_BI_CheckFlag_retValue) == 0x000018, "Member 'BattleTargetDevilInfoActor_C_IsNextAct::CallFunc_BI_CheckFlag_retValue' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.GetBIMainInterface
// 0x0030 (0x0030 - 0x0000)
struct BattleTargetDevilInfoActor_C_GetBIMainInterface final
{
public:
	TScriptInterface<class IBPI_MainInterface>    RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MainInterface>    K2Node_DynamicCast_AsBPI_Main_Interface;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_GetBIMainInterface) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_GetBIMainInterface");
static_assert(sizeof(BattleTargetDevilInfoActor_C_GetBIMainInterface) == 0x000030, "Wrong size on BattleTargetDevilInfoActor_C_GetBIMainInterface");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetBIMainInterface, RetValue) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_GetBIMainInterface::RetValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetBIMainInterface, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_GetBIMainInterface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetBIMainInterface, K2Node_DynamicCast_AsBPI_Main_Interface) == 0x000018, "Member 'BattleTargetDevilInfoActor_C_GetBIMainInterface::K2Node_DynamicCast_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetBIMainInterface, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleTargetDevilInfoActor_C_GetBIMainInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.GetBIMemInterface
// 0x0030 (0x0030 - 0x0000)
struct BattleTargetDevilInfoActor_C_GetBIMemInterface final
{
public:
	TScriptInterface<class IBPI_PTMemDataInterface> RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTMemDataInterface> K2Node_DynamicCast_AsBPI_PTMem_Data_Interface;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_GetBIMemInterface) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_GetBIMemInterface");
static_assert(sizeof(BattleTargetDevilInfoActor_C_GetBIMemInterface) == 0x000030, "Wrong size on BattleTargetDevilInfoActor_C_GetBIMemInterface");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetBIMemInterface, RetValue) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_GetBIMemInterface::RetValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetBIMemInterface, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_GetBIMemInterface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetBIMemInterface, K2Node_DynamicCast_AsBPI_PTMem_Data_Interface) == 0x000018, "Member 'BattleTargetDevilInfoActor_C_GetBIMemInterface::K2Node_DynamicCast_AsBPI_PTMem_Data_Interface' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetBIMemInterface, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleTargetDevilInfoActor_C_GetBIMemInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.FindUnit
// 0x0040 (0x0040 - 0x0000)
struct BattleTargetDevilInfoActor_C_FindUnit final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C92[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetBIPartySystem_ret;                     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetPartyUnit_retValue;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_FindUnit) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_FindUnit");
static_assert(sizeof(BattleTargetDevilInfoActor_C_FindUnit) == 0x000040, "Wrong size on BattleTargetDevilInfoActor_C_FindUnit");
static_assert(offsetof(BattleTargetDevilInfoActor_C_FindUnit, PartyIndex) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_FindUnit::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_FindUnit, RetValue) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_FindUnit::RetValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_FindUnit, CallFunc_GetBIPartySystem_ret) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_FindUnit::CallFunc_GetBIPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_FindUnit, CallFunc_BI_GetPartyUnit_retValue) == 0x000020, "Member 'BattleTargetDevilInfoActor_C_FindUnit::CallFunc_BI_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_FindUnit, K2Node_DynamicCast_AsChara_Base) == 0x000030, "Member 'BattleTargetDevilInfoActor_C_FindUnit::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_FindUnit, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BattleTargetDevilInfoActor_C_FindUnit::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.SetAllWidgetMasterVisibility
// 0x00A8 (0x00A8 - 0x0000)
struct BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Lo_WidgetVisibility;                               // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C93[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Info_C*              CallFunc_GetWidget_Name_Widget;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtlTargetDevil_HP_C*                CallFunc_GetWidget_HPBar_Widget;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Disappear_self_CastInput;                 // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Disappear_self_CastInput_1;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Appear_self_CastInput;                    // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Appear_self_CastInput_1;                  // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWB_BtlTargetDevil_AishouNotice_C*      CallFunc_GetWidget_AishouNotice_widget;            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtlTargetDevil_Aishou_C*            CallFunc_GetWidget_Aishou_widget;                  // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Disappear_self_CastInput_2;               // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Disappear_self_CastInput_3;               // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Appear_self_CastInput_2;                  // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Appear_self_CastInput_3;                  // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility");
static_assert(sizeof(BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility) == 0x0000A8, "Wrong size on BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility, IsVisible) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility::IsVisible' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility, Lo_WidgetVisibility) == 0x000001, "Member 'BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility::Lo_WidgetVisibility' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility, CallFunc_GetWidget_Name_Widget) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility::CallFunc_GetWidget_Name_Widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility, CallFunc_GetWidget_HPBar_Widget) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility::CallFunc_GetWidget_HPBar_Widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility, CallFunc_Disappear_self_CastInput) == 0x000018, "Member 'BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility::CallFunc_Disappear_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility, CallFunc_Disappear_self_CastInput_1) == 0x000028, "Member 'BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility::CallFunc_Disappear_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility, CallFunc_Appear_self_CastInput) == 0x000038, "Member 'BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility::CallFunc_Appear_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility, CallFunc_Appear_self_CastInput_1) == 0x000048, "Member 'BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility::CallFunc_Appear_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility, CallFunc_GetWidget_AishouNotice_widget) == 0x000058, "Member 'BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility::CallFunc_GetWidget_AishouNotice_widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility, CallFunc_GetWidget_Aishou_widget) == 0x000060, "Member 'BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility::CallFunc_GetWidget_Aishou_widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility, CallFunc_Disappear_self_CastInput_2) == 0x000068, "Member 'BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility::CallFunc_Disappear_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility, CallFunc_Disappear_self_CastInput_3) == 0x000078, "Member 'BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility::CallFunc_Disappear_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility, CallFunc_Appear_self_CastInput_2) == 0x000088, "Member 'BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility::CallFunc_Appear_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility, CallFunc_Appear_self_CastInput_3) == 0x000098, "Member 'BattleTargetDevilInfoActor_C_SetAllWidgetMasterVisibility::CallFunc_Appear_self_CastInput_3' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.GetWidget_AishouNotice
// 0x0008 (0x0008 - 0x0000)
struct BattleTargetDevilInfoActor_C_GetWidget_AishouNotice final
{
public:
	class UWB_BtlTargetDevil_AishouNotice_C*      Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_GetWidget_AishouNotice) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_GetWidget_AishouNotice");
static_assert(sizeof(BattleTargetDevilInfoActor_C_GetWidget_AishouNotice) == 0x000008, "Wrong size on BattleTargetDevilInfoActor_C_GetWidget_AishouNotice");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetWidget_AishouNotice, Widget) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_GetWidget_AishouNotice::Widget' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.DrawSwitch_AishouNotice
// 0x0710 (0x0710 - 0x0000)
struct BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice final
{
public:
	E_ATTRIBUTE_TYPE                              DefenceAishou;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShowAll;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Sw;                                                // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSelected;                                        // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Immediately;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPenetration;                                     // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C94[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_BtlCnt;                                         // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_BarriorDefenceAishou;                           // 0x0018(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_IsKnown;                                        // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C95[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_DefenceAishou;                                  // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlParty                              Lo_PartyData;                                      // 0x0030(0x0320)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0352(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0353(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0355(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0356(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBreakAishou_Break;                   // 0x0357(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C96[0x7];                                     // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckKarnAishou_Karn;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C97[0x3];                                     // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x037A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x037B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C98[0x3];                                     // 0x037D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C99[0x3];                                     // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_3;                  // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AnalyzeCheck_IsOpened;                    // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C9A[0x7];                                     // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetBIPartySystem_ret;                     // 0x03A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWB_BtlTargetDevil_AishouNotice_C*      CallFunc_GetWidget_AishouNotice_widget;            // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9B[0x8];                                     // 0x03B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_BI_GetPartyData_retValue;                 // 0x03C0(0x0320)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C9C[0x7];                                     // 0x06E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Disappear_self_CastInput;                 // 0x06E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Appear_self_CastInput;                    // 0x06F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice) == 0x000010, "Wrong alignment on BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice");
static_assert(sizeof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice) == 0x000710, "Wrong size on BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, DefenceAishou) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::DefenceAishou' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, IsShowAll) == 0x000001, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::IsShowAll' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, Sw) == 0x000002, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::Sw' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, IsSelected) == 0x000003, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::IsSelected' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, Immediately) == 0x000004, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::Immediately' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, IsPenetration) == 0x000005, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::IsPenetration' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, Lo_BtlCnt) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::Lo_BtlCnt' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, Lo_BarriorDefenceAishou) == 0x000018, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::Lo_BarriorDefenceAishou' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, Lo_IsKnown) == 0x000028, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::Lo_IsKnown' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, Lo_DefenceAishou) == 0x00002C, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::Lo_DefenceAishou' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, Lo_PartyData) == 0x000030, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::Lo_PartyData' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, Temp_bool_Variable) == 0x000350, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, Temp_bool_Variable_1) == 0x000351, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, Temp_bool_Variable_2) == 0x000352, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, Temp_bool_Variable_3) == 0x000353, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, Temp_bool_Variable_4) == 0x000354, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, Temp_bool_Variable_5) == 0x000355, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, K2Node_Select_Default) == 0x000356, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_CheckBreakAishou_Break) == 0x000357, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_CheckBreakAishou_Break' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, K2Node_Select_Default_1) == 0x000358, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000360, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_CheckKarnAishou_Karn) == 0x000370, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_CheckKarnAishou_Karn' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000374, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_Less_IntInt_ReturnValue) == 0x000378, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000379, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_Less_IntInt_ReturnValue_1) == 0x00037A, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_Less_IntInt_ReturnValue_2) == 0x00037B, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_BooleanOR_ReturnValue) == 0x00037C, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_SelectInt_ReturnValue) == 0x000380, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_Greater_IntInt_ReturnValue) == 0x000384, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_SelectInt_ReturnValue_1) == 0x000388, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_Clamp_ReturnValue) == 0x00038C, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_SelectInt_ReturnValue_2) == 0x000390, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_SelectInt_ReturnValue_3) == 0x000394, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_SelectInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_AnalyzeCheck_IsOpened) == 0x000398, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_AnalyzeCheck_IsOpened' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_GetBIPartySystem_ret) == 0x0003A0, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_GetBIPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_GetWidget_AishouNotice_widget) == 0x0003B0, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_GetWidget_AishouNotice_widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_BI_GetPartyData_retValue) == 0x0003C0, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_BI_GetPartyData_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_IsValid_ReturnValue) == 0x0006E0, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_Disappear_self_CastInput) == 0x0006E8, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_Disappear_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice, CallFunc_Appear_self_CastInput) == 0x0006F8, "Member 'BattleTargetDevilInfoActor_C_DrawSwitch_AishouNotice::CallFunc_Appear_self_CastInput' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.UpdateDevilInfo
// 0x0350 (0x0350 - 0x0000)
struct BattleTargetDevilInfoActor_C_UpdateDevilInfo final
{
public:
	E_UI_STATUS_ESSENCE_ICON                      CallFunc_Calc_Utsusemi_status_Status;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUtsusemiInShop_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C9D[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Info_C*              CallFunc_GetWidget_Name_Widget;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetBIPartySystem_ret;                     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBtlParty                              CallFunc_BI_GetPartyData_retValue;                 // 0x0020(0x0320)()
	bool                                          CallFunc_BI_IsUplifting_Ret;                       // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C9E[0x3];                                     // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_GetBadStatus_retValue;                 // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_UpdateDevilInfo) == 0x000010, "Wrong alignment on BattleTargetDevilInfoActor_C_UpdateDevilInfo");
static_assert(sizeof(BattleTargetDevilInfoActor_C_UpdateDevilInfo) == 0x000350, "Wrong size on BattleTargetDevilInfoActor_C_UpdateDevilInfo");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdateDevilInfo, CallFunc_Calc_Utsusemi_status_Status) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_UpdateDevilInfo::CallFunc_Calc_Utsusemi_status_Status' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdateDevilInfo, CallFunc_IsUtsusemiInShop_ReturnValue) == 0x000001, "Member 'BattleTargetDevilInfoActor_C_UpdateDevilInfo::CallFunc_IsUtsusemiInShop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdateDevilInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BattleTargetDevilInfoActor_C_UpdateDevilInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdateDevilInfo, CallFunc_GetWidget_Name_Widget) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_UpdateDevilInfo::CallFunc_GetWidget_Name_Widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdateDevilInfo, CallFunc_GetBIPartySystem_ret) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_UpdateDevilInfo::CallFunc_GetBIPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdateDevilInfo, CallFunc_BI_GetPartyData_retValue) == 0x000020, "Member 'BattleTargetDevilInfoActor_C_UpdateDevilInfo::CallFunc_BI_GetPartyData_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdateDevilInfo, CallFunc_BI_IsUplifting_Ret) == 0x000340, "Member 'BattleTargetDevilInfoActor_C_UpdateDevilInfo::CallFunc_BI_IsUplifting_Ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_UpdateDevilInfo, CallFunc_BI_GetBadStatus_retValue) == 0x000344, "Member 'BattleTargetDevilInfoActor_C_UpdateDevilInfo::CallFunc_BI_GetBadStatus_retValue' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.CalcScreenPos
// 0x0070 (0x0070 - 0x0000)
struct BattleTargetDevilInfoActor_C_CalcScreenPos final
{
public:
	struct FTransform                             InTransform;                                       // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              ScreenPosition;                                    // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_CalcScreenPos) == 0x000010, "Wrong alignment on BattleTargetDevilInfoActor_C_CalcScreenPos");
static_assert(sizeof(BattleTargetDevilInfoActor_C_CalcScreenPos) == 0x000070, "Wrong size on BattleTargetDevilInfoActor_C_CalcScreenPos");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CalcScreenPos, InTransform) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_CalcScreenPos::InTransform' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CalcScreenPos, ScreenPosition) == 0x000030, "Member 'BattleTargetDevilInfoActor_C_CalcScreenPos::ScreenPosition' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CalcScreenPos, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'BattleTargetDevilInfoActor_C_CalcScreenPos::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CalcScreenPos, CallFunc_BreakTransform_Location) == 0x000040, "Member 'BattleTargetDevilInfoActor_C_CalcScreenPos::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CalcScreenPos, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'BattleTargetDevilInfoActor_C_CalcScreenPos::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CalcScreenPos, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'BattleTargetDevilInfoActor_C_CalcScreenPos::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CalcScreenPos, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x000064, "Member 'BattleTargetDevilInfoActor_C_CalcScreenPos::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CalcScreenPos, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x00006C, "Member 'BattleTargetDevilInfoActor_C_CalcScreenPos::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.SetEnableUpdatePosition
// 0x0001 (0x0001 - 0x0000)
struct BattleTargetDevilInfoActor_C_SetEnableUpdatePosition final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_SetEnableUpdatePosition) == 0x000001, "Wrong alignment on BattleTargetDevilInfoActor_C_SetEnableUpdatePosition");
static_assert(sizeof(BattleTargetDevilInfoActor_C_SetEnableUpdatePosition) == 0x000001, "Wrong size on BattleTargetDevilInfoActor_C_SetEnableUpdatePosition");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetEnableUpdatePosition, Enable) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_SetEnableUpdatePosition::Enable' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.ShowCureExpection
// 0x0018 (0x0018 - 0x0000)
struct BattleTargetDevilInfoActor_C_ShowCureExpection final
{
public:
	int32                                         ExpectedHP;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_HP_C*                CallFunc_GetWidget_HPBar_Widget;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_ShowCureExpection) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_ShowCureExpection");
static_assert(sizeof(BattleTargetDevilInfoActor_C_ShowCureExpection) == 0x000018, "Wrong size on BattleTargetDevilInfoActor_C_ShowCureExpection");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ShowCureExpection, ExpectedHP) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_ShowCureExpection::ExpectedHP' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ShowCureExpection, CallFunc_GetWidget_HPBar_Widget) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_ShowCureExpection::CallFunc_GetWidget_HPBar_Widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_ShowCureExpection, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_ShowCureExpection::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.Reregister
// 0x0003 (0x0003 - 0x0000)
struct BattleTargetDevilInfoActor_C_Reregister final
{
public:
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue_1;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue_2;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_Reregister) == 0x000001, "Wrong alignment on BattleTargetDevilInfoActor_C_Reregister");
static_assert(sizeof(BattleTargetDevilInfoActor_C_Reregister) == 0x000003, "Wrong size on BattleTargetDevilInfoActor_C_Reregister");
static_assert(offsetof(BattleTargetDevilInfoActor_C_Reregister, CallFunc_AddToWidgetPrio_ReturnValue) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_Reregister::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_Reregister, CallFunc_AddToWidgetPrio_ReturnValue_1) == 0x000001, "Member 'BattleTargetDevilInfoActor_C_Reregister::CallFunc_AddToWidgetPrio_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_Reregister, CallFunc_AddToWidgetPrio_ReturnValue_2) == 0x000002, "Member 'BattleTargetDevilInfoActor_C_Reregister::CallFunc_AddToWidgetPrio_ReturnValue_2' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.CheckBarriorAishou
// 0x0020 (0x0020 - 0x0000)
struct BattleTargetDevilInfoActor_C_CheckBarriorAishou final
{
public:
	TArray<int32>                                 BtlCnt;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	E_BTL_CNT                                     BtlCntAttr;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Barriored;                                         // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CA0[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_CheckBarriorAishou) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_CheckBarriorAishou");
static_assert(sizeof(BattleTargetDevilInfoActor_C_CheckBarriorAishou) == 0x000020, "Wrong size on BattleTargetDevilInfoActor_C_CheckBarriorAishou");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBarriorAishou, BtlCnt) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_CheckBarriorAishou::BtlCnt' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBarriorAishou, BtlCntAttr) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_CheckBarriorAishou::BtlCntAttr' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBarriorAishou, Barriored) == 0x000011, "Member 'BattleTargetDevilInfoActor_C_CheckBarriorAishou::Barriored' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBarriorAishou, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'BattleTargetDevilInfoActor_C_CheckBarriorAishou::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBarriorAishou, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'BattleTargetDevilInfoActor_C_CheckBarriorAishou::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.CheckKarnAishou
// 0x0030 (0x0030 - 0x0000)
struct BattleTargetDevilInfoActor_C_CheckKarnAishou final
{
public:
	E_ATTRIBUTE_TYPE                              Attr;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CA1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 BtlCnt;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Karn;                                              // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBarriorAishou_Barriored;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBarriorAishou_Barriored_1;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_CheckKarnAishou) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_CheckKarnAishou");
static_assert(sizeof(BattleTargetDevilInfoActor_C_CheckKarnAishou) == 0x000030, "Wrong size on BattleTargetDevilInfoActor_C_CheckKarnAishou");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, Attr) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::Attr' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, BtlCnt) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::BtlCnt' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, Karn) == 0x000018, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::Karn' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, CallFunc_CheckBarriorAishou_Barriored) == 0x000019, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::CallFunc_CheckBarriorAishou_Barriored' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001B, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00001C, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00001D, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00001E, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00001F, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, CallFunc_CheckBarriorAishou_Barriored_1) == 0x000021, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::CallFunc_CheckBarriorAishou_Barriored_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, CallFunc_BooleanOR_ReturnValue_1) == 0x000022, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, CallFunc_BooleanOR_ReturnValue_2) == 0x000023, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000024, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, CallFunc_BooleanOR_ReturnValue_3) == 0x000025, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, CallFunc_BooleanAND_ReturnValue) == 0x000026, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, CallFunc_BooleanOR_ReturnValue_4) == 0x000027, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, CallFunc_BooleanAND_ReturnValue_1) == 0x000028, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckKarnAishou, CallFunc_BooleanOR_ReturnValue_5) == 0x000029, "Member 'BattleTargetDevilInfoActor_C_CheckKarnAishou::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.CheckBreakAishou
// 0x0038 (0x0038 - 0x0000)
struct BattleTargetDevilInfoActor_C_CheckBreakAishou final
{
public:
	E_ATTRIBUTE_TYPE                              Attr;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CA2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 BtlCnt;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Break;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBarriorAishou_Barriored;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBarriorAishou_Barriored_1;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBarriorAishou_Barriored_2;           // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBarriorAishou_Barriored_3;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBarriorAishou_Barriored_4;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBarriorAishou_Barriored_5;           // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBarriorAishou_Barriored_6;           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_CheckBreakAishou) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_CheckBreakAishou");
static_assert(sizeof(BattleTargetDevilInfoActor_C_CheckBreakAishou) == 0x000038, "Wrong size on BattleTargetDevilInfoActor_C_CheckBreakAishou");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, Attr) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::Attr' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, BtlCnt) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::BtlCnt' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, Break) == 0x000018, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::Break' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_CheckBarriorAishou_Barriored) == 0x000019, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_CheckBarriorAishou_Barriored' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_CheckBarriorAishou_Barriored_1) == 0x00001C, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_CheckBarriorAishou_Barriored_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001D, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_CheckBarriorAishou_Barriored_2) == 0x00001E, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_CheckBarriorAishou_Barriored_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_BooleanAND_ReturnValue_1) == 0x00001F, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000020, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_CheckBarriorAishou_Barriored_3) == 0x000021, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_CheckBarriorAishou_Barriored_3' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_BooleanAND_ReturnValue_2) == 0x000022, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000023, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_CheckBarriorAishou_Barriored_4) == 0x000024, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_CheckBarriorAishou_Barriored_4' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_BooleanAND_ReturnValue_3) == 0x000025, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000026, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_CheckBarriorAishou_Barriored_5) == 0x000027, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_CheckBarriorAishou_Barriored_5' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_BooleanAND_ReturnValue_4) == 0x000028, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000029, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_CheckBarriorAishou_Barriored_6) == 0x00002A, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_CheckBarriorAishou_Barriored_6' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_BooleanAND_ReturnValue_5) == 0x00002B, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x00002C, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_BooleanAND_ReturnValue_6) == 0x00002D, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_BooleanOR_ReturnValue) == 0x00002E, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_BooleanOR_ReturnValue_1) == 0x00002F, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_BooleanOR_ReturnValue_2) == 0x000030, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_BooleanOR_ReturnValue_3) == 0x000031, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_BooleanOR_ReturnValue_4) == 0x000032, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_CheckBreakAishou, CallFunc_BooleanOR_ReturnValue_5) == 0x000033, "Member 'BattleTargetDevilInfoActor_C_CheckBreakAishou::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.AnalyzeCheck
// 0x0098 (0x0098 - 0x0000)
struct BattleTargetDevilInfoActor_C_AnalyzeCheck final
{
public:
	int32                                         DevID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ATTRIBUTE_TYPE                              Attribute;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpened;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CA3[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetBIMainWork_retValue;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBossRushChallengeMode_ret;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CA4[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetBIPartySystem_ret;                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Analyze_CheckIsOpenDefenceAisyou_ReturnValue; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckMagatsuhiDevil_ret;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CA5[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnalyzeData                           CallFunc_BI_GetMitamaAnalyzeData_analyzeData;      // 0x0040(0x0050)()
	bool                                          CallFunc_BI_CheckMitama_ret;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_AnalyzeCheck) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_AnalyzeCheck");
static_assert(sizeof(BattleTargetDevilInfoActor_C_AnalyzeCheck) == 0x000098, "Wrong size on BattleTargetDevilInfoActor_C_AnalyzeCheck");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AnalyzeCheck, DevID) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_AnalyzeCheck::DevID' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AnalyzeCheck, PartyIndex) == 0x000004, "Member 'BattleTargetDevilInfoActor_C_AnalyzeCheck::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AnalyzeCheck, Attribute) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_AnalyzeCheck::Attribute' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AnalyzeCheck, IsOpened) == 0x000009, "Member 'BattleTargetDevilInfoActor_C_AnalyzeCheck::IsOpened' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AnalyzeCheck, CallFunc_GetBIMainWork_retValue) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_AnalyzeCheck::CallFunc_GetBIMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AnalyzeCheck, CallFunc_BI_CheckBossRushChallengeMode_ret) == 0x000020, "Member 'BattleTargetDevilInfoActor_C_AnalyzeCheck::CallFunc_BI_CheckBossRushChallengeMode_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AnalyzeCheck, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000024, "Member 'BattleTargetDevilInfoActor_C_AnalyzeCheck::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AnalyzeCheck, CallFunc_GetBIPartySystem_ret) == 0x000028, "Member 'BattleTargetDevilInfoActor_C_AnalyzeCheck::CallFunc_GetBIPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AnalyzeCheck, CallFunc_Analyze_CheckIsOpenDefenceAisyou_ReturnValue) == 0x000038, "Member 'BattleTargetDevilInfoActor_C_AnalyzeCheck::CallFunc_Analyze_CheckIsOpenDefenceAisyou_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AnalyzeCheck, CallFunc_BI_CheckMagatsuhiDevil_ret) == 0x000039, "Member 'BattleTargetDevilInfoActor_C_AnalyzeCheck::CallFunc_BI_CheckMagatsuhiDevil_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AnalyzeCheck, CallFunc_BI_GetMitamaAnalyzeData_analyzeData) == 0x000040, "Member 'BattleTargetDevilInfoActor_C_AnalyzeCheck::CallFunc_BI_GetMitamaAnalyzeData_analyzeData' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AnalyzeCheck, CallFunc_BI_CheckMitama_ret) == 0x000090, "Member 'BattleTargetDevilInfoActor_C_AnalyzeCheck::CallFunc_BI_CheckMitama_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AnalyzeCheck, CallFunc_BooleanOR_ReturnValue) == 0x000091, "Member 'BattleTargetDevilInfoActor_C_AnalyzeCheck::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AnalyzeCheck, CallFunc_BooleanOR_ReturnValue_1) == 0x000092, "Member 'BattleTargetDevilInfoActor_C_AnalyzeCheck::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_AnalyzeCheck, CallFunc_BooleanOR_ReturnValue_2) == 0x000093, "Member 'BattleTargetDevilInfoActor_C_AnalyzeCheck::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.GetInfoHP
// 0x0018 (0x0018 - 0x0000)
struct BattleTargetDevilInfoActor_C_GetInfoHP final
{
public:
	int32                                         Hp;                                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CA6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_HP_C*                CallFunc_GetWidget_HPBar_Widget;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CA7[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentHP_HP;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_GetInfoHP) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_GetInfoHP");
static_assert(sizeof(BattleTargetDevilInfoActor_C_GetInfoHP) == 0x000018, "Wrong size on BattleTargetDevilInfoActor_C_GetInfoHP");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetInfoHP, Hp) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_GetInfoHP::Hp' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetInfoHP, CallFunc_GetWidget_HPBar_Widget) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_GetInfoHP::CallFunc_GetWidget_HPBar_Widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetInfoHP, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_GetInfoHP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_GetInfoHP, CallFunc_GetCurrentHP_HP) == 0x000014, "Member 'BattleTargetDevilInfoActor_C_GetInfoHP::CallFunc_GetCurrentHP_HP' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.IsUtsusemiInShop
// 0x000C (0x000C - 0x0000)
struct BattleTargetDevilInfoActor_C_IsUtsusemiInShop final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CA8[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UtsusemiDevilIDToItemID_ReturnValue;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExistItemInShop_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_IsUtsusemiInShop) == 0x000004, "Wrong alignment on BattleTargetDevilInfoActor_C_IsUtsusemiInShop");
static_assert(sizeof(BattleTargetDevilInfoActor_C_IsUtsusemiInShop) == 0x00000C, "Wrong size on BattleTargetDevilInfoActor_C_IsUtsusemiInShop");
static_assert(offsetof(BattleTargetDevilInfoActor_C_IsUtsusemiInShop, ReturnValue) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_IsUtsusemiInShop::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_IsUtsusemiInShop, CallFunc_UtsusemiDevilIDToItemID_ReturnValue) == 0x000004, "Member 'BattleTargetDevilInfoActor_C_IsUtsusemiInShop::CallFunc_UtsusemiDevilIDToItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_IsUtsusemiInShop, CallFunc_IsExistItemInShop_ReturnValue) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_IsUtsusemiInShop::CallFunc_IsExistItemInShop_ReturnValue' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.Calc Utsusemi status
// 0x0014 (0x0014 - 0x0000)
struct BattleTargetDevilInfoActor_C_Calc_Utsusemi_status final
{
public:
	E_UI_STATUS_ESSENCE_ICON                      Status;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CA9[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_ItemID;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CAA[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UtsusemiDevilIDToItemID_ReturnValue;      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DidUseItemInUtsusemi_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ItemIsHave_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_Calc_Utsusemi_status) == 0x000004, "Wrong alignment on BattleTargetDevilInfoActor_C_Calc_Utsusemi_status");
static_assert(sizeof(BattleTargetDevilInfoActor_C_Calc_Utsusemi_status) == 0x000014, "Wrong size on BattleTargetDevilInfoActor_C_Calc_Utsusemi_status");
static_assert(offsetof(BattleTargetDevilInfoActor_C_Calc_Utsusemi_status, Status) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_Calc_Utsusemi_status::Status' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_Calc_Utsusemi_status, Lo_ItemID) == 0x000004, "Member 'BattleTargetDevilInfoActor_C_Calc_Utsusemi_status::Lo_ItemID' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_Calc_Utsusemi_status, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_Calc_Utsusemi_status::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_Calc_Utsusemi_status, CallFunc_UtsusemiDevilIDToItemID_ReturnValue) == 0x00000C, "Member 'BattleTargetDevilInfoActor_C_Calc_Utsusemi_status::CallFunc_UtsusemiDevilIDToItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_Calc_Utsusemi_status, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_Calc_Utsusemi_status::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_Calc_Utsusemi_status, CallFunc_DidUseItemInUtsusemi_ReturnValue) == 0x000011, "Member 'BattleTargetDevilInfoActor_C_Calc_Utsusemi_status::CallFunc_DidUseItemInUtsusemi_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_Calc_Utsusemi_status, CallFunc_ItemIsHave_ReturnValue) == 0x000012, "Member 'BattleTargetDevilInfoActor_C_Calc_Utsusemi_status::CallFunc_ItemIsHave_ReturnValue' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.OnUnitSelected
// 0x0028 (0x0028 - 0x0000)
struct BattleTargetDevilInfoActor_C_OnUnitSelected final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CAB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetBIMainWork_retValue;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetBattleTargetSelect_BPI;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_OnUnitSelected) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_OnUnitSelected");
static_assert(sizeof(BattleTargetDevilInfoActor_C_OnUnitSelected) == 0x000028, "Wrong size on BattleTargetDevilInfoActor_C_OnUnitSelected");
static_assert(offsetof(BattleTargetDevilInfoActor_C_OnUnitSelected, PartyIndex) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_OnUnitSelected::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_OnUnitSelected, CallFunc_GetBIMainWork_retValue) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_OnUnitSelected::CallFunc_GetBIMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_OnUnitSelected, CallFunc_BI_GetBattleTargetSelect_BPI) == 0x000018, "Member 'BattleTargetDevilInfoActor_C_OnUnitSelected::CallFunc_BI_GetBattleTargetSelect_BPI' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.OnUnitDicided
// 0x0028 (0x0028 - 0x0000)
struct BattleTargetDevilInfoActor_C_OnUnitDicided final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CAC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetBIMainWork_retValue;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetBattleTargetSelect_BPI;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_OnUnitDicided) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_OnUnitDicided");
static_assert(sizeof(BattleTargetDevilInfoActor_C_OnUnitDicided) == 0x000028, "Wrong size on BattleTargetDevilInfoActor_C_OnUnitDicided");
static_assert(offsetof(BattleTargetDevilInfoActor_C_OnUnitDicided, PartyIndex) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_OnUnitDicided::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_OnUnitDicided, CallFunc_GetBIMainWork_retValue) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_OnUnitDicided::CallFunc_GetBIMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_OnUnitDicided, CallFunc_BI_GetBattleTargetSelect_BPI) == 0x000018, "Member 'BattleTargetDevilInfoActor_C_OnUnitDicided::CallFunc_BI_GetBattleTargetSelect_BPI' has a wrong offset!");

// Function BattleTargetDevilInfoActor.BattleTargetDevilInfoActor_C.SetButtonVisibility
// 0x0018 (0x0018 - 0x0000)
struct BattleTargetDevilInfoActor_C_SetButtonVisibility final
{
public:
	ESlateVisibility                              Vilibility;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CAD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlTargetDevil_Info_C*              CallFunc_GetWidget_Name_Widget;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetDevilInfoActor_C_SetButtonVisibility) == 0x000008, "Wrong alignment on BattleTargetDevilInfoActor_C_SetButtonVisibility");
static_assert(sizeof(BattleTargetDevilInfoActor_C_SetButtonVisibility) == 0x000018, "Wrong size on BattleTargetDevilInfoActor_C_SetButtonVisibility");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetButtonVisibility, Vilibility) == 0x000000, "Member 'BattleTargetDevilInfoActor_C_SetButtonVisibility::Vilibility' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetButtonVisibility, CallFunc_GetWidget_Name_Widget) == 0x000008, "Member 'BattleTargetDevilInfoActor_C_SetButtonVisibility::CallFunc_GetWidget_Name_Widget' has a wrong offset!");
static_assert(offsetof(BattleTargetDevilInfoActor_C_SetButtonVisibility, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BattleTargetDevilInfoActor_C_SetButtonVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

