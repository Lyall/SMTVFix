#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharaEyeComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function CharaEyeComponent.CharaEyeComponent_C.Update
// 0x0040 (0x0040 - 0x0000)
struct CharaEyeComponent_C_Update final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IKEnable;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26C1[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GazePoint;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GazePointEnable;                                   // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26C2[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation;                                          // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_UpdateEyeRotation_Rotation;               // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaEyeComponent_C_Update) == 0x000008, "Wrong alignment on CharaEyeComponent_C_Update");
static_assert(sizeof(CharaEyeComponent_C_Update) == 0x000040, "Wrong size on CharaEyeComponent_C_Update");
static_assert(offsetof(CharaEyeComponent_C_Update, DeltaTime) == 0x000000, "Member 'CharaEyeComponent_C_Update::DeltaTime' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_Update, Mesh) == 0x000008, "Member 'CharaEyeComponent_C_Update::Mesh' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_Update, IKEnable) == 0x000010, "Member 'CharaEyeComponent_C_Update::IKEnable' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_Update, GazePoint) == 0x000014, "Member 'CharaEyeComponent_C_Update::GazePoint' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_Update, GazePointEnable) == 0x000020, "Member 'CharaEyeComponent_C_Update::GazePointEnable' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_Update, Rotation) == 0x000024, "Member 'CharaEyeComponent_C_Update::Rotation' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_Update, CallFunc_UpdateEyeRotation_Rotation) == 0x000030, "Member 'CharaEyeComponent_C_Update::CallFunc_UpdateEyeRotation_Rotation' has a wrong offset!");

// Function CharaEyeComponent.CharaEyeComponent_C.UpdateEyeRotation
// 0x0540 (0x0540 - 0x0000)
struct CharaEyeComponent_C_UpdateEyeRotation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IKEnable;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26C4[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GazePoint;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GazePointEnable;                                   // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26C5[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation;                                          // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               EyeRotationTarget;                                 // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         AngleHorizontalTarget;                             // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleVerticalTarget;                               // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IrisOffsetDefault;                                 // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GazePointLocal;                                    // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C6[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ViewPointRelativeTransform;                        // 0x0060(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	float                                         DeltaTimeCache;                                    // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26C7[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMinElement_ReturnValue;                // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetRefPoseTransform_ReturnValue;          // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_1;    // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_2;    // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromAtoB_ReturnValue;              // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0184(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_1;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_3;    // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26C8[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromAtoB_ReturnValue_1;            // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_2;            // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetParentBone_ReturnValue;                // 0x0244(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_2;                   // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_FCeil_ReturnValue_2;                      // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetComposedRefPoseTransform_ReturnValue;  // 0x02A0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize2D_ReturnValue_1;                    // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C9[0xC];                                     // 0x02D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRefPoseTransform_ReturnValue_1;        // 0x02E0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegAtan2_ReturnValue_3;                   // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_3;                      // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_3;            // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26CA[0x4];                                     // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0390(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x03D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x0400(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26CB[0x4];                                     // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetComposedRefPoseTransform_ReturnValue_1; // 0x0410(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26CC[0x4];                                     // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0450(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0480(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26CD[0x4];                                     // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRefPoseTransform_ReturnValue_2;        // 0x0490(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x04C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x04CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x04D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x04E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x04F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x04FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0508(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0514(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0520(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x052C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaEyeComponent_C_UpdateEyeRotation) == 0x000010, "Wrong alignment on CharaEyeComponent_C_UpdateEyeRotation");
static_assert(sizeof(CharaEyeComponent_C_UpdateEyeRotation) == 0x000540, "Wrong size on CharaEyeComponent_C_UpdateEyeRotation");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, DeltaTime) == 0x000000, "Member 'CharaEyeComponent_C_UpdateEyeRotation::DeltaTime' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, Mesh) == 0x000008, "Member 'CharaEyeComponent_C_UpdateEyeRotation::Mesh' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, IKEnable) == 0x000010, "Member 'CharaEyeComponent_C_UpdateEyeRotation::IKEnable' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, GazePoint) == 0x000014, "Member 'CharaEyeComponent_C_UpdateEyeRotation::GazePoint' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, GazePointEnable) == 0x000020, "Member 'CharaEyeComponent_C_UpdateEyeRotation::GazePointEnable' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, Rotation) == 0x000024, "Member 'CharaEyeComponent_C_UpdateEyeRotation::Rotation' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, EyeRotationTarget) == 0x000030, "Member 'CharaEyeComponent_C_UpdateEyeRotation::EyeRotationTarget' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, AngleHorizontalTarget) == 0x00003C, "Member 'CharaEyeComponent_C_UpdateEyeRotation::AngleHorizontalTarget' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, AngleVerticalTarget) == 0x000040, "Member 'CharaEyeComponent_C_UpdateEyeRotation::AngleVerticalTarget' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, IrisOffsetDefault) == 0x000044, "Member 'CharaEyeComponent_C_UpdateEyeRotation::IrisOffsetDefault' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, GazePointLocal) == 0x000050, "Member 'CharaEyeComponent_C_UpdateEyeRotation::GazePointLocal' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, ViewPointRelativeTransform) == 0x000060, "Member 'CharaEyeComponent_C_UpdateEyeRotation::ViewPointRelativeTransform' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, DeltaTimeCache) == 0x000090, "Member 'CharaEyeComponent_C_UpdateEyeRotation::DeltaTimeCache' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BooleanAND_ReturnValue) == 0x000094, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000098, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_GetMinElement_ReturnValue) == 0x0000A4, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_GetMinElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_VSize_ReturnValue) == 0x0000A8, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000AC, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_SelectFloat_ReturnValue) == 0x0000B0, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_RInterpTo_ReturnValue) == 0x0000B4, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_GetRefPoseTransform_ReturnValue) == 0x0000C0, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_GetRefPoseTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_MakeVector_ReturnValue) == 0x0000F0, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakTransform_Location) == 0x0000FC, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakTransform_Rotation) == 0x000108, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakTransform_Scale) == 0x000114, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x000120, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue_1) == 0x00012C, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_ComposeRotators_ReturnValue) == 0x000138, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakVector_X) == 0x000144, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakVector_Y) == 0x000148, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakVector_Z) == 0x00014C, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000150, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_DegAtan2_ReturnValue) == 0x00015C, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_TransformLocation_ReturnValue) == 0x000160, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue_2) == 0x00016C, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_MakeRotFromAtoB_ReturnValue) == 0x000178, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_MakeRotFromAtoB_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_MakeVector2D_ReturnValue) == 0x000184, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_VSize2D_ReturnValue) == 0x00018C, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_DegAtan2_ReturnValue_1) == 0x000190, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_DegAtan2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_FCeil_ReturnValue) == 0x000194, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue_3) == 0x000198, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_Conv_IntToString_ReturnValue) == 0x0001A8, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_ComposeRotators_ReturnValue_1) == 0x0001B8, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_FCeil_ReturnValue_1) == 0x0001C4, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0001C8, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_Concat_StrStr_ReturnValue) == 0x0001D8, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001E8, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001F8, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_MakeRotFromAtoB_ReturnValue_1) == 0x000208, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_MakeRotFromAtoB_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_NegateRotator_ReturnValue) == 0x000214, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_ComposeRotators_ReturnValue_2) == 0x000220, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_ComposeRotators_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x00022C, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakVector_X_1) == 0x000238, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakVector_Y_1) == 0x00023C, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakVector_Z_1) == 0x000240, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_GetParentBone_ReturnValue) == 0x000244, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_GetParentBone_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_DegAtan2_ReturnValue_2) == 0x00024C, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_DegAtan2_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_GetSocketTransform_ReturnValue) == 0x000250, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_FCeil_ReturnValue_2) == 0x000280, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_FCeil_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_FClamp_ReturnValue) == 0x000284, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000288, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_MakeVector2D_ReturnValue_1) == 0x000298, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_GetComposedRefPoseTransform_ReturnValue) == 0x0002A0, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_GetComposedRefPoseTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_VSize2D_ReturnValue_1) == 0x0002D0, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_VSize2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_GetRefPoseTransform_ReturnValue_1) == 0x0002E0, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_GetRefPoseTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_DegAtan2_ReturnValue_3) == 0x000310, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_DegAtan2_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakTransform_Location_1) == 0x000314, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakTransform_Rotation_1) == 0x000320, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakTransform_Scale_1) == 0x00032C, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_FCeil_ReturnValue_3) == 0x000338, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_FCeil_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_ComposeRotators_ReturnValue_3) == 0x00033C, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_ComposeRotators_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000348, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000358, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_FClamp_ReturnValue_1) == 0x000368, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000370, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000380, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_ComposeTransforms_ReturnValue) == 0x000390, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0003C0, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_ComposeTransforms_ReturnValue_1) == 0x0003D0, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_TransformDirection_ReturnValue) == 0x000400, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_GetComposedRefPoseTransform_ReturnValue_1) == 0x000410, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_GetComposedRefPoseTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_Normal_ReturnValue) == 0x000440, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000450, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000480, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_GetRefPoseTransform_ReturnValue_2) == 0x000490, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_GetRefPoseTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakTransform_Location_2) == 0x0004C0, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakTransform_Rotation_2) == 0x0004CC, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakTransform_Scale_2) == 0x0004D8, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakTransform_Location_3) == 0x0004E4, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakTransform_Rotation_3) == 0x0004F0, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_BreakTransform_Scale_3) == 0x0004FC, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000508, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000514, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x000520, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaEyeComponent_C_UpdateEyeRotation, CallFunc_InverseTransformLocation_ReturnValue) == 0x00052C, "Member 'CharaEyeComponent_C_UpdateEyeRotation::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");

}

