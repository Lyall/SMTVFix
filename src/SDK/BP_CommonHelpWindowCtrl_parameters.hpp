#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CommonHelpWindowCtrl

#include "Basic.hpp"

#include "E_COMMONHELPWINDOW_CTRL_structs.hpp"
#include "UMG_structs.hpp"
#include "Project_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.ExecuteUbergraph_BP_CommonHelpWindowCtrl
// 0x0080 (0x0080 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64B8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CommonHelpWindow_C*                 CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InSkillId;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InChangeAnime;                        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64B9[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptMessageAsset*                    K2Node_Event_InScriptMessageAsset;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InLabel;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InChangeAnime_1;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InExecutionText;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InBuildText;                          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpendWindow_Outparam;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpendWindow_Outparam_1;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64BA[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InItemId;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WIDGET_PRIO                                 K2Node_Event_InPrio_1;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Event_InVisibility;                         // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WIDGET_PRIO                                 K2Node_Event_InPrio;                               // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue_1;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64BB[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptMessageAsset*                    K2Node_Event_InScriptMessageAsset_1;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InIndex;                              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InChangeAnime_2;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InExecutionText_1;                    // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_InBuildText_1;                        // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64BC[0x1];                                     // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InIndex_1;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InParam;                              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InIndex_2;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64BD[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_InString;                             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl) == 0x000008, "Wrong alignment on BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl) == 0x000080, "Wrong size on BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, EntryPoint) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InSkillId) == 0x000010, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InSkillId' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InChangeAnime) == 0x000014, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InChangeAnime' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InScriptMessageAsset) == 0x000018, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InLabel) == 0x000020, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InLabel' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InChangeAnime_1) == 0x000028, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InChangeAnime_1' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InExecutionText) == 0x000029, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InExecutionText' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InBuildText) == 0x00002A, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InBuildText' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, CallFunc_IsOpendWindow_Outparam) == 0x00002B, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::CallFunc_IsOpendWindow_Outparam' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, CallFunc_IsOpendWindow_Outparam_1) == 0x00002C, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::CallFunc_IsOpendWindow_Outparam_1' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InItemId) == 0x000030, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InItemId' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InPrio_1) == 0x000034, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InPrio_1' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, CallFunc_AddToWidgetPrio_ReturnValue) == 0x000035, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InVisibility) == 0x000036, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InVisibility' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InPrio) == 0x000037, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InPrio' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, CallFunc_AddToWidgetPrio_ReturnValue_1) == 0x000038, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::CallFunc_AddToWidgetPrio_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InScriptMessageAsset_1) == 0x000040, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InScriptMessageAsset_1' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InIndex) == 0x000048, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InIndex' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InChangeAnime_2) == 0x00004C, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InChangeAnime_2' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InExecutionText_1) == 0x00004D, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InExecutionText_1' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InBuildText_1) == 0x00004E, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InBuildText_1' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InIndex_1) == 0x000050, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InIndex_1' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InParam) == 0x000054, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InParam' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InIndex_2) == 0x000058, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InIndex_2' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_InString) == 0x000060, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_InString' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_DeltaSeconds) == 0x000070, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_Event_EndPlayReason) == 0x000074, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000075, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, CallFunc_IsValid_ReturnValue) == 0x000076, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, K2Node_SwitchEnum_CmpSuccess) == 0x000077, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000078, "Member 'BP_CommonHelpWindowCtrl_C_ExecuteUbergraph_BP_CommonHelpWindowCtrl::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_CommonHelpWindowCtrl_C_ReceiveEndPlay");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_CommonHelpWindowCtrl_C_ReceiveEndPlay");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_CommonHelpWindowCtrl_C_ReceiveTick");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_ReceiveTick) == 0x000004, "Wrong size on BP_CommonHelpWindowCtrl_C_ReceiveTick");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.ICommonHelpWindowExecutionOpen
// 0x0001 (0x0001 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_ICommonHelpWindowExecutionOpen final
{
public:
	E_WIDGET_PRIO                                 InPrio;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowExecutionOpen) == 0x000001, "Wrong alignment on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowExecutionOpen");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowExecutionOpen) == 0x000001, "Wrong size on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowExecutionOpen");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowExecutionOpen, InPrio) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowExecutionOpen::InPrio' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.ICommonHelpWindowSetWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetWidgetVisibility final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetWidgetVisibility) == 0x000001, "Wrong alignment on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetWidgetVisibility");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetWidgetVisibility) == 0x000001, "Wrong size on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetWidgetVisibility");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetWidgetVisibility, InVisibility) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetWidgetVisibility::InVisibility' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.ICommonHelpWindowOpen
// 0x0001 (0x0001 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_ICommonHelpWindowOpen final
{
public:
	E_WIDGET_PRIO                                 InPrio;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowOpen) == 0x000001, "Wrong alignment on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowOpen");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowOpen) == 0x000001, "Wrong size on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowOpen");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowOpen, InPrio) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowOpen::InPrio' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.ICommonHelpWindowClearRichText
// 0x0001 (0x0001 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_ICommonHelpWindowClearRichText final
{
public:
	bool                                          InChangeAnime;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowClearRichText) == 0x000001, "Wrong alignment on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowClearRichText");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowClearRichText) == 0x000001, "Wrong size on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowClearRichText");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowClearRichText, InChangeAnime) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowClearRichText::InChangeAnime' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.ICommonHelpWindowSetSkillId
// 0x0004 (0x0004 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetSkillId final
{
public:
	int32                                         InSkillId;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetSkillId) == 0x000004, "Wrong alignment on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetSkillId");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetSkillId) == 0x000004, "Wrong size on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetSkillId");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetSkillId, InSkillId) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetSkillId::InSkillId' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.ICommonHelpWindowSetRichTextByLabel
// 0x0018 (0x0018 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel final
{
public:
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InLabel;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InChangeAnime;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InExecutionText;                                   // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InBuildText;                                       // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel) == 0x000008, "Wrong alignment on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel) == 0x000018, "Wrong size on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel, InScriptMessageAsset) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel, InLabel) == 0x000008, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel::InLabel' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel, InChangeAnime) == 0x000010, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel::InChangeAnime' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel, InExecutionText) == 0x000011, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel::InExecutionText' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel, InBuildText) == 0x000012, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel::InBuildText' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.ICommonHelpWindowSetItemId
// 0x0004 (0x0004 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetItemId final
{
public:
	int32                                         InItemId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetItemId) == 0x000004, "Wrong alignment on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetItemId");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetItemId) == 0x000004, "Wrong size on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetItemId");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetItemId, InItemId) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetItemId::InItemId' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.ICommonHelpWindowSetRichTextByIndex
// 0x0010 (0x0010 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex final
{
public:
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIndex;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InChangeAnime;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InExecutionText;                                   // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InBuildText;                                       // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex) == 0x000008, "Wrong alignment on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex) == 0x000010, "Wrong size on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex, InScriptMessageAsset) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex, InIndex) == 0x000008, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex::InIndex' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex, InChangeAnime) == 0x00000C, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex::InChangeAnime' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex, InExecutionText) == 0x00000D, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex::InExecutionText' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex, InBuildText) == 0x00000E, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex::InBuildText' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.ICommonHelpWindowSetValueParam
// 0x0008 (0x0008 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InParam;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam) == 0x000004, "Wrong alignment on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam) == 0x000008, "Wrong size on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam, InIndex) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam::InIndex' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam, InParam) == 0x000004, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam::InParam' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.ICommonHelpWindowSetProgramValue
// 0x0018 (0x0018 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64BE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InString;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue) == 0x000008, "Wrong alignment on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue) == 0x000018, "Wrong size on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue, InIndex) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue::InIndex' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue, InString) == 0x000008, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue::InString' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.ChangeGstatusParam
// 0x0002 (0x0002 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_ChangeGstatusParam final
{
public:
	E_COMMONHELPWINDOW_CTRL                       InGStatus;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InMain;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_ChangeGstatusParam) == 0x000001, "Wrong alignment on BP_CommonHelpWindowCtrl_C_ChangeGstatusParam");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_ChangeGstatusParam) == 0x000002, "Wrong size on BP_CommonHelpWindowCtrl_C_ChangeGstatusParam");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ChangeGstatusParam, InGStatus) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_ChangeGstatusParam::InGStatus' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ChangeGstatusParam, InMain) == 0x000001, "Member 'BP_CommonHelpWindowCtrl_C_ChangeGstatusParam::InMain' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.Gstatus_WaitOpenWindow
// 0x0001 (0x0001 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_Gstatus_WaitOpenWindow final
{
public:
	bool                                          CallFunc_IsFinishedOpenWindow_OutFinished;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_Gstatus_WaitOpenWindow) == 0x000001, "Wrong alignment on BP_CommonHelpWindowCtrl_C_Gstatus_WaitOpenWindow");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_Gstatus_WaitOpenWindow) == 0x000001, "Wrong size on BP_CommonHelpWindowCtrl_C_Gstatus_WaitOpenWindow");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_Gstatus_WaitOpenWindow, CallFunc_IsFinishedOpenWindow_OutFinished) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_Gstatus_WaitOpenWindow::CallFunc_IsFinishedOpenWindow_OutFinished' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.Gstatus_WaitCloseWindow
// 0x0001 (0x0001 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_Gstatus_WaitCloseWindow final
{
public:
	bool                                          CallFunc_IsFinishedCloseWindow_OutFinished;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_Gstatus_WaitCloseWindow) == 0x000001, "Wrong alignment on BP_CommonHelpWindowCtrl_C_Gstatus_WaitCloseWindow");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_Gstatus_WaitCloseWindow) == 0x000001, "Wrong size on BP_CommonHelpWindowCtrl_C_Gstatus_WaitCloseWindow");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_Gstatus_WaitCloseWindow, CallFunc_IsFinishedCloseWindow_OutFinished) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_Gstatus_WaitCloseWindow::CallFunc_IsFinishedCloseWindow_OutFinished' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.IsOpendWindow
// 0x0004 (0x0004 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_IsOpendWindow final
{
public:
	bool                                          OutParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_IsOpendWindow) == 0x000001, "Wrong alignment on BP_CommonHelpWindowCtrl_C_IsOpendWindow");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_IsOpendWindow) == 0x000004, "Wrong size on BP_CommonHelpWindowCtrl_C_IsOpendWindow");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_IsOpendWindow, OutParam) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_IsOpendWindow::OutParam' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_IsOpendWindow, RetValue) == 0x000001, "Member 'BP_CommonHelpWindowCtrl_C_IsOpendWindow::RetValue' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_IsOpendWindow, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'BP_CommonHelpWindowCtrl_C_IsOpendWindow::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_IsOpendWindow, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_CommonHelpWindowCtrl_C_IsOpendWindow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.ICommonHelpWindowIsClosed
// 0x0001 (0x0001 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_ICommonHelpWindowIsClosed final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowIsClosed) == 0x000001, "Wrong alignment on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowIsClosed");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowIsClosed) == 0x000001, "Wrong size on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowIsClosed");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowIsClosed, OutFinished) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowIsClosed::OutFinished' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.ICommonHelpWindowIsOpened
// 0x0001 (0x0001 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_ICommonHelpWindowIsOpened final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowIsOpened) == 0x000001, "Wrong alignment on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowIsOpened");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowIsOpened) == 0x000001, "Wrong size on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowIsOpened");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowIsOpened, OutFinished) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowIsOpened::OutFinished' has a wrong offset!");

// Function BP_CommonHelpWindowCtrl.BP_CommonHelpWindowCtrl_C.ICommonHelpWindowGetWidgetVisibility
// 0x0002 (0x0002 - 0x0000)
struct BP_CommonHelpWindowCtrl_C_ICommonHelpWindowGetWidgetVisibility final
{
public:
	ESlateVisibility                              Visibility;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowGetWidgetVisibility) == 0x000001, "Wrong alignment on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowGetWidgetVisibility");
static_assert(sizeof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowGetWidgetVisibility) == 0x000002, "Wrong size on BP_CommonHelpWindowCtrl_C_ICommonHelpWindowGetWidgetVisibility");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowGetWidgetVisibility, Visibility) == 0x000000, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowGetWidgetVisibility::Visibility' has a wrong offset!");
static_assert(offsetof(BP_CommonHelpWindowCtrl_C_ICommonHelpWindowGetWidgetVisibility, CallFunc_GetVisibility_ReturnValue) == 0x000001, "Member 'BP_CommonHelpWindowCtrl_C_ICommonHelpWindowGetWidgetVisibility::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");

}

