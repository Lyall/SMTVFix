#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LV_MapCommonCtrl

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LV_MapCommonCtrl.LV_MapCommonCtrl_C
// 0x0018 (0x0240 - 0x0228)
class ALV_MapCommonCtrl_C final : public ALevelScriptActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0228(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_MapUICtrl_C*                        BP_MapUICtrl_4_ExecuteUbergraph_LV_MapCommonCtrl_RefProperty; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMapCommonCtrl_C*                       MapCommonCtrl_34_ExecuteUbergraph_LV_MapCommonCtrl_RefProperty; // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_LV_MapCommonCtrl(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LV_MapCommonCtrl_C">();
	}
	static class ALV_MapCommonCtrl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALV_MapCommonCtrl_C>();
	}
};
static_assert(alignof(ALV_MapCommonCtrl_C) == 0x000008, "Wrong alignment on ALV_MapCommonCtrl_C");
static_assert(sizeof(ALV_MapCommonCtrl_C) == 0x000240, "Wrong size on ALV_MapCommonCtrl_C");
static_assert(offsetof(ALV_MapCommonCtrl_C, UberGraphFrame) == 0x000228, "Member 'ALV_MapCommonCtrl_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALV_MapCommonCtrl_C, BP_MapUICtrl_4_ExecuteUbergraph_LV_MapCommonCtrl_RefProperty) == 0x000230, "Member 'ALV_MapCommonCtrl_C::BP_MapUICtrl_4_ExecuteUbergraph_LV_MapCommonCtrl_RefProperty' has a wrong offset!");
static_assert(offsetof(ALV_MapCommonCtrl_C, MapCommonCtrl_34_ExecuteUbergraph_LV_MapCommonCtrl_RefProperty) == 0x000238, "Member 'ALV_MapCommonCtrl_C::MapCommonCtrl_34_ExecuteUbergraph_LV_MapCommonCtrl_RefProperty' has a wrong offset!");

}

