#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ResidentSound

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ResidentSound.BP_ResidentSound_C.UserConstructionScript
// 0x0014 (0x0014 - 0x0000)
struct BP_ResidentSound_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94B9[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCullingBoundaryDistanceToUse_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResidentSound_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_ResidentSound_C_UserConstructionScript");
static_assert(sizeof(BP_ResidentSound_C_UserConstructionScript) == 0x000014, "Wrong size on BP_ResidentSound_C_UserConstructionScript");
static_assert(offsetof(BP_ResidentSound_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_ResidentSound_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResidentSound_C_UserConstructionScript, CallFunc_GetCullingBoundaryDistanceToUse_ReturnValue) == 0x000004, "Member 'BP_ResidentSound_C_UserConstructionScript::CallFunc_GetCullingBoundaryDistanceToUse_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResidentSound_C_UserConstructionScript, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000008, "Member 'BP_ResidentSound_C_UserConstructionScript::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");

}

