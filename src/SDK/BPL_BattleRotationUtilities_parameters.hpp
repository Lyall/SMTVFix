#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_BattleRotationUtilities

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPL_BattleRotationUtilities.BPL_BattleRotationUtilities_C.Find Look at Rotation with UpVec
// 0x0058 (0x0058 - 0x0000)
struct BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                UpVec;                                             // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ReturnValue;                                       // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec) == 0x000008, "Wrong alignment on BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec");
static_assert(sizeof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec) == 0x000058, "Wrong size on BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec, Start) == 0x000000, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec::Start' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec, Target) == 0x00000C, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec::Target' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec, UpVec) == 0x000018, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec::UpVec' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec, __WorldContext) == 0x000028, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec, ReturnValue) == 0x000030, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00003C, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000048, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");

// Function BPL_BattleRotationUtilities.BPL_BattleRotationUtilities_C.RInterp To with UpVec
// 0x00A0 (0x00A0 - 0x0000)
struct BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec final
{
public:
	struct FRotator                               Current;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Target;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Delta_time;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Interp_Speed;                                      // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Up_Vec;                                            // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Return_Value;                                      // 0x0038(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec) == 0x000008, "Wrong alignment on BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec");
static_assert(sizeof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec) == 0x0000A0, "Wrong size on BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, Current) == 0x000000, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::Current' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, Target) == 0x00000C, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::Target' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, Delta_time) == 0x000018, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::Delta_time' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, Interp_Speed) == 0x00001C, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::Interp_Speed' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, Up_Vec) == 0x000020, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::Up_Vec' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, __WorldContext) == 0x000030, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, Return_Value) == 0x000038, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::Return_Value' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, CallFunc_GetForwardVector_ReturnValue) == 0x000044, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000054, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00005C, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, CallFunc_GetForwardVector_ReturnValue_1) == 0x000060, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00006C, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000084, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000094, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");

// Function BPL_BattleRotationUtilities.BPL_BattleRotationUtilities_C.RInterp To with UpVec Fix
// 0x00A0 (0x00A0 - 0x0000)
struct BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix final
{
public:
	struct FRotator                               Current;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Target;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Delta_time;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Interp_Speed;                                      // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Up_Vec;                                            // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Return_Value;                                      // 0x0038(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix) == 0x000008, "Wrong alignment on BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix");
static_assert(sizeof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix) == 0x0000A0, "Wrong size on BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, Current) == 0x000000, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::Current' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, Target) == 0x00000C, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::Target' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, Delta_time) == 0x000018, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::Delta_time' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, Interp_Speed) == 0x00001C, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::Interp_Speed' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, Up_Vec) == 0x000020, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::Up_Vec' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, __WorldContext) == 0x000030, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, Return_Value) == 0x000038, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::Return_Value' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, CallFunc_GetForwardVector_ReturnValue) == 0x000044, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000054, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00005C, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, CallFunc_GetForwardVector_ReturnValue_1) == 0x000060, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00006C, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000084, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix, CallFunc_MakeRotFromZX_ReturnValue) == 0x000094, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");

// Function BPL_BattleRotationUtilities.BPL_BattleRotationUtilities_C.Find Look at Rotation with UpVec Fix
// 0x0058 (0x0058 - 0x0000)
struct BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                UpVec;                                             // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ReturnValue;                                       // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix) == 0x000008, "Wrong alignment on BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix");
static_assert(sizeof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix) == 0x000058, "Wrong size on BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix, Start) == 0x000000, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix::Start' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix, Target) == 0x00000C, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix::Target' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix, UpVec) == 0x000018, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix::UpVec' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix, __WorldContext) == 0x000028, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix, ReturnValue) == 0x000030, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00003C, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix, CallFunc_MakeRotFromZX_ReturnValue) == 0x000048, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");

// Function BPL_BattleRotationUtilities.BPL_BattleRotationUtilities_C.RotateTransformByAxisAndDeg
// 0x00F0 (0x00F0 - 0x0000)
struct BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg final
{
public:
	struct FTransform                             InTrans;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                Axis;                                              // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Deg;                                               // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RotatedTrans;                                      // 0x0050(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg) == 0x000010, "Wrong alignment on BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg");
static_assert(sizeof(BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg) == 0x0000F0, "Wrong size on BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg, InTrans) == 0x000000, "Member 'BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg::InTrans' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg, Axis) == 0x000030, "Member 'BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg::Axis' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg, Deg) == 0x00003C, "Member 'BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg::Deg' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg, __WorldContext) == 0x000040, "Member 'BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg, RotatedTrans) == 0x000050, "Member 'BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg::RotatedTrans' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x000080, "Member 'BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg, CallFunc_ComposeTransforms_ReturnValue) == 0x0000C0, "Member 'BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");

// Function BPL_BattleRotationUtilities.BPL_BattleRotationUtilities_C.RInterp To UpVec Considered
// 0x00C8 (0x00C8 - 0x0000)
struct BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered final
{
public:
	struct FRotator                               Current;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Target;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Delta_time;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Interp_Speed;                                      // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Return_Value;                                      // 0x0028(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered) == 0x000008, "Wrong alignment on BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered");
static_assert(sizeof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered) == 0x0000C8, "Wrong size on BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, Current) == 0x000000, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::Current' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, Target) == 0x00000C, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::Target' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, Delta_time) == 0x000018, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::Delta_time' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, Interp_Speed) == 0x00001C, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::Interp_Speed' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, __WorldContext) == 0x000020, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, Return_Value) == 0x000028, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::Return_Value' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, CallFunc_GetForwardVector_ReturnValue) == 0x000034, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000044, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00004C, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, CallFunc_GetUpVector_ReturnValue) == 0x000050, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, CallFunc_GetForwardVector_ReturnValue_1) == 0x00005C, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, CallFunc_GetUpVector_ReturnValue_1) == 0x000068, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000074, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000080, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00008C, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000098, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A4, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000B0, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered, CallFunc_MakeRotFromZX_ReturnValue) == 0x0000BC, "Member 'BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");

// Function BPL_BattleRotationUtilities.BPL_BattleRotationUtilities_C.Find Look at Rotation ZOnly
// 0x0070 (0x0070 - 0x0000)
struct BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                UpVec;                                             // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ZOnly;                                             // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ReturnValue;                                       // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue; // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_ProjectPointOnToPlane_ReturnValue;        // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue_1; // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default;                             // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly) == 0x000008, "Wrong alignment on BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly");
static_assert(sizeof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly) == 0x000070, "Wrong size on BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly, Start) == 0x000000, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly::Start' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly, Target) == 0x00000C, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly::Target' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly, UpVec) == 0x000018, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly::UpVec' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly, ZOnly) == 0x000024, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly::ZOnly' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly, __WorldContext) == 0x000028, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly, ReturnValue) == 0x000030, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly, Temp_bool_Variable) == 0x00003C, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly, CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue) == 0x000040, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly::CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly, CallFunc_ProjectPointOnToPlane_ReturnValue) == 0x00004C, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly::CallFunc_ProjectPointOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly, CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue_1) == 0x000058, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly::CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly, K2Node_Select_Default) == 0x000064, "Member 'BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly::K2Node_Select_Default' has a wrong offset!");

}

