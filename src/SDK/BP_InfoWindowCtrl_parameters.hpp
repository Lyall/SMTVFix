#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InfoWindowCtrl

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "E_INFOWINDOWCTRL_structs.hpp"
#include "Project_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.ExecuteUbergraph_BP_InfoWindowCtrl
// 0x0080 (0x0080 - 0x0000)
struct BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WIDGET_PRIO                                 K2Node_Event_InPrio;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptMessageAsset*                    K2Node_Event_InScriptMessageAsset_1;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InLabel;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InExecutionText_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InFrame_1;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptMessageAsset*                    K2Node_Event_InScriptMessageAsset;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InIndex_2;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InExecutionText;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InFrame;                              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InIndex_1;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InValueParam;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InIndex;                              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_InString;                             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Event_InVisibility;                         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_InfoWindow_C*                       CallFunc_Create_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x1];                                       // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl) == 0x000008, "Wrong alignment on BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl");
static_assert(sizeof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl) == 0x000080, "Wrong size on BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, EntryPoint) == 0x000000, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, K2Node_Event_InPrio) == 0x000004, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::K2Node_Event_InPrio' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, K2Node_Event_InScriptMessageAsset_1) == 0x000008, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::K2Node_Event_InScriptMessageAsset_1' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, K2Node_Event_InLabel) == 0x000010, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::K2Node_Event_InLabel' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, K2Node_Event_InExecutionText_1) == 0x000018, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::K2Node_Event_InExecutionText_1' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, K2Node_Event_InFrame_1) == 0x00001C, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::K2Node_Event_InFrame_1' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, K2Node_Event_InScriptMessageAsset) == 0x000028, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::K2Node_Event_InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, K2Node_Event_InIndex_2) == 0x000030, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::K2Node_Event_InIndex_2' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, K2Node_Event_InExecutionText) == 0x000034, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::K2Node_Event_InExecutionText' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, K2Node_Event_InFrame) == 0x000038, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::K2Node_Event_InFrame' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, K2Node_Event_InIndex_1) == 0x000040, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::K2Node_Event_InIndex_1' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, K2Node_Event_InValueParam) == 0x000044, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::K2Node_Event_InValueParam' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, K2Node_Event_InIndex) == 0x000048, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::K2Node_Event_InIndex' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, K2Node_Event_InString) == 0x000050, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::K2Node_Event_InString' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, K2Node_Event_InVisibility) == 0x000060, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::K2Node_Event_InVisibility' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, CallFunc_AddToWidgetPrio_ReturnValue) == 0x000061, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, CallFunc_Create_ReturnValue) == 0x000068, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, K2Node_Event_EndPlayReason) == 0x000070, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000071, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, CallFunc_IsValid_ReturnValue_1) == 0x000072, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, K2Node_Event_DeltaSeconds) == 0x000074, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000078, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl, K2Node_SwitchEnum_CmpSuccess) == 0x000079, "Member 'BP_InfoWindowCtrl_C_ExecuteUbergraph_BP_InfoWindowCtrl::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_InfoWindowCtrl_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InfoWindowCtrl_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_InfoWindowCtrl_C_ReceiveTick");
static_assert(sizeof(BP_InfoWindowCtrl_C_ReceiveTick) == 0x000004, "Wrong size on BP_InfoWindowCtrl_C_ReceiveTick");
static_assert(offsetof(BP_InfoWindowCtrl_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_InfoWindowCtrl_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_InfoWindowCtrl_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InfoWindowCtrl_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_InfoWindowCtrl_C_ReceiveEndPlay");
static_assert(sizeof(BP_InfoWindowCtrl_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_InfoWindowCtrl_C_ReceiveEndPlay");
static_assert(offsetof(BP_InfoWindowCtrl_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_InfoWindowCtrl_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowSetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_InfoWindowCtrl_C_IInfoWindowSetVisibility final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InfoWindowCtrl_C_IInfoWindowSetVisibility) == 0x000001, "Wrong alignment on BP_InfoWindowCtrl_C_IInfoWindowSetVisibility");
static_assert(sizeof(BP_InfoWindowCtrl_C_IInfoWindowSetVisibility) == 0x000001, "Wrong size on BP_InfoWindowCtrl_C_IInfoWindowSetVisibility");
static_assert(offsetof(BP_InfoWindowCtrl_C_IInfoWindowSetVisibility, InVisibility) == 0x000000, "Member 'BP_InfoWindowCtrl_C_IInfoWindowSetVisibility::InVisibility' has a wrong offset!");

// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowSetRichTextProgramValue
// 0x0018 (0x0018 - 0x0000)
struct BP_InfoWindowCtrl_C_IInfoWindowSetRichTextProgramValue final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InString;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InfoWindowCtrl_C_IInfoWindowSetRichTextProgramValue) == 0x000008, "Wrong alignment on BP_InfoWindowCtrl_C_IInfoWindowSetRichTextProgramValue");
static_assert(sizeof(BP_InfoWindowCtrl_C_IInfoWindowSetRichTextProgramValue) == 0x000018, "Wrong size on BP_InfoWindowCtrl_C_IInfoWindowSetRichTextProgramValue");
static_assert(offsetof(BP_InfoWindowCtrl_C_IInfoWindowSetRichTextProgramValue, InIndex) == 0x000000, "Member 'BP_InfoWindowCtrl_C_IInfoWindowSetRichTextProgramValue::InIndex' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_IInfoWindowSetRichTextProgramValue, InString) == 0x000008, "Member 'BP_InfoWindowCtrl_C_IInfoWindowSetRichTextProgramValue::InString' has a wrong offset!");

// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowSetRichTextValueParam
// 0x0008 (0x0008 - 0x0000)
struct BP_InfoWindowCtrl_C_IInfoWindowSetRichTextValueParam final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InValueParam;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InfoWindowCtrl_C_IInfoWindowSetRichTextValueParam) == 0x000004, "Wrong alignment on BP_InfoWindowCtrl_C_IInfoWindowSetRichTextValueParam");
static_assert(sizeof(BP_InfoWindowCtrl_C_IInfoWindowSetRichTextValueParam) == 0x000008, "Wrong size on BP_InfoWindowCtrl_C_IInfoWindowSetRichTextValueParam");
static_assert(offsetof(BP_InfoWindowCtrl_C_IInfoWindowSetRichTextValueParam, InIndex) == 0x000000, "Member 'BP_InfoWindowCtrl_C_IInfoWindowSetRichTextValueParam::InIndex' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_IInfoWindowSetRichTextValueParam, InValueParam) == 0x000004, "Member 'BP_InfoWindowCtrl_C_IInfoWindowSetRichTextValueParam::InValueParam' has a wrong offset!");

// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowSetMessageByIndex
// 0x0018 (0x0018 - 0x0000)
struct BP_InfoWindowCtrl_C_IInfoWindowSetMessageByIndex final
{
public:
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIndex;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InExecutionText;                                   // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InFrame;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InfoWindowCtrl_C_IInfoWindowSetMessageByIndex) == 0x000008, "Wrong alignment on BP_InfoWindowCtrl_C_IInfoWindowSetMessageByIndex");
static_assert(sizeof(BP_InfoWindowCtrl_C_IInfoWindowSetMessageByIndex) == 0x000018, "Wrong size on BP_InfoWindowCtrl_C_IInfoWindowSetMessageByIndex");
static_assert(offsetof(BP_InfoWindowCtrl_C_IInfoWindowSetMessageByIndex, InScriptMessageAsset) == 0x000000, "Member 'BP_InfoWindowCtrl_C_IInfoWindowSetMessageByIndex::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_IInfoWindowSetMessageByIndex, InIndex) == 0x000008, "Member 'BP_InfoWindowCtrl_C_IInfoWindowSetMessageByIndex::InIndex' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_IInfoWindowSetMessageByIndex, InExecutionText) == 0x00000C, "Member 'BP_InfoWindowCtrl_C_IInfoWindowSetMessageByIndex::InExecutionText' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_IInfoWindowSetMessageByIndex, InFrame) == 0x000010, "Member 'BP_InfoWindowCtrl_C_IInfoWindowSetMessageByIndex::InFrame' has a wrong offset!");

// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowSetMessage
// 0x0018 (0x0018 - 0x0000)
struct BP_InfoWindowCtrl_C_IInfoWindowSetMessage final
{
public:
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InLabel;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InExecutionText;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InFrame;                                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InfoWindowCtrl_C_IInfoWindowSetMessage) == 0x000008, "Wrong alignment on BP_InfoWindowCtrl_C_IInfoWindowSetMessage");
static_assert(sizeof(BP_InfoWindowCtrl_C_IInfoWindowSetMessage) == 0x000018, "Wrong size on BP_InfoWindowCtrl_C_IInfoWindowSetMessage");
static_assert(offsetof(BP_InfoWindowCtrl_C_IInfoWindowSetMessage, InScriptMessageAsset) == 0x000000, "Member 'BP_InfoWindowCtrl_C_IInfoWindowSetMessage::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_IInfoWindowSetMessage, InLabel) == 0x000008, "Member 'BP_InfoWindowCtrl_C_IInfoWindowSetMessage::InLabel' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_IInfoWindowSetMessage, InExecutionText) == 0x000010, "Member 'BP_InfoWindowCtrl_C_IInfoWindowSetMessage::InExecutionText' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_IInfoWindowSetMessage, InFrame) == 0x000014, "Member 'BP_InfoWindowCtrl_C_IInfoWindowSetMessage::InFrame' has a wrong offset!");

// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowCreate
// 0x0001 (0x0001 - 0x0000)
struct BP_InfoWindowCtrl_C_IInfoWindowCreate final
{
public:
	E_WIDGET_PRIO                                 InPrio;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InfoWindowCtrl_C_IInfoWindowCreate) == 0x000001, "Wrong alignment on BP_InfoWindowCtrl_C_IInfoWindowCreate");
static_assert(sizeof(BP_InfoWindowCtrl_C_IInfoWindowCreate) == 0x000001, "Wrong size on BP_InfoWindowCtrl_C_IInfoWindowCreate");
static_assert(offsetof(BP_InfoWindowCtrl_C_IInfoWindowCreate, InPrio) == 0x000000, "Member 'BP_InfoWindowCtrl_C_IInfoWindowCreate::InPrio' has a wrong offset!");

// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.ChangeGstatusParam
// 0x0002 (0x0002 - 0x0000)
struct BP_InfoWindowCtrl_C_ChangeGstatusParam final
{
public:
	E_INFOWINDOWCTRL                              InGStatus;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InMain;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InfoWindowCtrl_C_ChangeGstatusParam) == 0x000001, "Wrong alignment on BP_InfoWindowCtrl_C_ChangeGstatusParam");
static_assert(sizeof(BP_InfoWindowCtrl_C_ChangeGstatusParam) == 0x000002, "Wrong size on BP_InfoWindowCtrl_C_ChangeGstatusParam");
static_assert(offsetof(BP_InfoWindowCtrl_C_ChangeGstatusParam, InGStatus) == 0x000000, "Member 'BP_InfoWindowCtrl_C_ChangeGstatusParam::InGStatus' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_ChangeGstatusParam, InMain) == 0x000001, "Member 'BP_InfoWindowCtrl_C_ChangeGstatusParam::InMain' has a wrong offset!");

// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.Gstatus_WaitWindowOpen
// 0x0001 (0x0001 - 0x0000)
struct BP_InfoWindowCtrl_C_Gstatus_WaitWindowOpen final
{
public:
	bool                                          CallFunc_IsFinishedOpenWindow_OutFinished;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InfoWindowCtrl_C_Gstatus_WaitWindowOpen) == 0x000001, "Wrong alignment on BP_InfoWindowCtrl_C_Gstatus_WaitWindowOpen");
static_assert(sizeof(BP_InfoWindowCtrl_C_Gstatus_WaitWindowOpen) == 0x000001, "Wrong size on BP_InfoWindowCtrl_C_Gstatus_WaitWindowOpen");
static_assert(offsetof(BP_InfoWindowCtrl_C_Gstatus_WaitWindowOpen, CallFunc_IsFinishedOpenWindow_OutFinished) == 0x000000, "Member 'BP_InfoWindowCtrl_C_Gstatus_WaitWindowOpen::CallFunc_IsFinishedOpenWindow_OutFinished' has a wrong offset!");

// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.Gstatus_WaitMessage
// 0x0008 (0x0008 - 0x0000)
struct BP_InfoWindowCtrl_C_Gstatus_WaitMessage final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InfoWindowCtrl_C_Gstatus_WaitMessage) == 0x000004, "Wrong alignment on BP_InfoWindowCtrl_C_Gstatus_WaitMessage");
static_assert(sizeof(BP_InfoWindowCtrl_C_Gstatus_WaitMessage) == 0x000008, "Wrong size on BP_InfoWindowCtrl_C_Gstatus_WaitMessage");
static_assert(offsetof(BP_InfoWindowCtrl_C_Gstatus_WaitMessage, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'BP_InfoWindowCtrl_C_Gstatus_WaitMessage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_Gstatus_WaitMessage, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_InfoWindowCtrl_C_Gstatus_WaitMessage::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.Gstatus_WaitWindowClose
// 0x0001 (0x0001 - 0x0000)
struct BP_InfoWindowCtrl_C_Gstatus_WaitWindowClose final
{
public:
	bool                                          CallFunc_IsFinishedCloseWindow_OutFinished;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InfoWindowCtrl_C_Gstatus_WaitWindowClose) == 0x000001, "Wrong alignment on BP_InfoWindowCtrl_C_Gstatus_WaitWindowClose");
static_assert(sizeof(BP_InfoWindowCtrl_C_Gstatus_WaitWindowClose) == 0x000001, "Wrong size on BP_InfoWindowCtrl_C_Gstatus_WaitWindowClose");
static_assert(offsetof(BP_InfoWindowCtrl_C_Gstatus_WaitWindowClose, CallFunc_IsFinishedCloseWindow_OutFinished) == 0x000000, "Member 'BP_InfoWindowCtrl_C_Gstatus_WaitWindowClose::CallFunc_IsFinishedCloseWindow_OutFinished' has a wrong offset!");

// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IIsFinishedInfoWindowClose
// 0x0001 (0x0001 - 0x0000)
struct BP_InfoWindowCtrl_C_IIsFinishedInfoWindowClose final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InfoWindowCtrl_C_IIsFinishedInfoWindowClose) == 0x000001, "Wrong alignment on BP_InfoWindowCtrl_C_IIsFinishedInfoWindowClose");
static_assert(sizeof(BP_InfoWindowCtrl_C_IIsFinishedInfoWindowClose) == 0x000001, "Wrong size on BP_InfoWindowCtrl_C_IIsFinishedInfoWindowClose");
static_assert(offsetof(BP_InfoWindowCtrl_C_IIsFinishedInfoWindowClose, OutFinished) == 0x000000, "Member 'BP_InfoWindowCtrl_C_IIsFinishedInfoWindowClose::OutFinished' has a wrong offset!");

// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IIsFinishedInfoWindowOpen
// 0x0001 (0x0001 - 0x0000)
struct BP_InfoWindowCtrl_C_IIsFinishedInfoWindowOpen final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_InfoWindowCtrl_C_IIsFinishedInfoWindowOpen) == 0x000001, "Wrong alignment on BP_InfoWindowCtrl_C_IIsFinishedInfoWindowOpen");
static_assert(sizeof(BP_InfoWindowCtrl_C_IIsFinishedInfoWindowOpen) == 0x000001, "Wrong size on BP_InfoWindowCtrl_C_IIsFinishedInfoWindowOpen");
static_assert(offsetof(BP_InfoWindowCtrl_C_IIsFinishedInfoWindowOpen, OutFinished) == 0x000000, "Member 'BP_InfoWindowCtrl_C_IIsFinishedInfoWindowOpen::OutFinished' has a wrong offset!");

// Function BP_InfoWindowCtrl.BP_InfoWindowCtrl_C.IInfoWindowGetVisibility
// 0x0002 (0x0002 - 0x0000)
struct BP_InfoWindowCtrl_C_IInfoWindowGetVisibility final
{
public:
	ESlateVisibility                              Visibility;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InfoWindowCtrl_C_IInfoWindowGetVisibility) == 0x000001, "Wrong alignment on BP_InfoWindowCtrl_C_IInfoWindowGetVisibility");
static_assert(sizeof(BP_InfoWindowCtrl_C_IInfoWindowGetVisibility) == 0x000002, "Wrong size on BP_InfoWindowCtrl_C_IInfoWindowGetVisibility");
static_assert(offsetof(BP_InfoWindowCtrl_C_IInfoWindowGetVisibility, Visibility) == 0x000000, "Member 'BP_InfoWindowCtrl_C_IInfoWindowGetVisibility::Visibility' has a wrong offset!");
static_assert(offsetof(BP_InfoWindowCtrl_C_IInfoWindowGetVisibility, CallFunc_GetVisibility_ReturnValue) == 0x000001, "Member 'BP_InfoWindowCtrl_C_IInfoWindowGetVisibility::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");

}

