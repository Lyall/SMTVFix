#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_BtlListMenuPart

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Project_structs.hpp"


namespace SDK::Params
{

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.Evt_OnClicked__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_BtlListMenuPart_C_Evt_OnClicked__DelegateSignature final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlListMenuPart_C_Evt_OnClicked__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlListMenuPart_C_Evt_OnClicked__DelegateSignature");
static_assert(sizeof(WB_BtlListMenuPart_C_Evt_OnClicked__DelegateSignature) == 0x000004, "Wrong size on WB_BtlListMenuPart_C_Evt_OnClicked__DelegateSignature");
static_assert(offsetof(WB_BtlListMenuPart_C_Evt_OnClicked__DelegateSignature, Param_Index) == 0x000000, "Member 'WB_BtlListMenuPart_C_Evt_OnClicked__DelegateSignature::Param_Index' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.ExecuteUbergraph_WB_BtlListMenuPart
// 0x0050 (0x0050 - 0x0000)
struct WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delta;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_547F[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Rate_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Immediately_1;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5480[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Rate;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Immediately;                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5481[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5482[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos;                    // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV;                     // 0x0048(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart) == 0x000004, "Wrong alignment on WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart");
static_assert(sizeof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart) == 0x000050, "Wrong size on WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart");
static_assert(offsetof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart, EntryPoint) == 0x000000, "Member 'WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart, K2Node_Event_Delta) == 0x000004, "Member 'WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart::K2Node_Event_Delta' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart, K2Node_Event_IsDesignTime) == 0x000008, "Member 'WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart, K2Node_Event_Rate_1) == 0x00000C, "Member 'WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart::K2Node_Event_Rate_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart, K2Node_Event_Immediately_1) == 0x000010, "Member 'WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart::K2Node_Event_Immediately_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart, K2Node_Event_Rate) == 0x000014, "Member 'WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart::K2Node_Event_Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart, K2Node_Event_Immediately) == 0x000018, "Member 'WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart::K2Node_Event_Immediately' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart, K2Node_ComponentBoundEvent_AnimPackName) == 0x000020, "Member 'WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart::K2Node_ComponentBoundEvent_AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart, K2Node_ComponentBoundEvent_AnimationName) == 0x000028, "Member 'WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart::K2Node_ComponentBoundEvent_AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart, K2Node_ComponentBoundEvent_AnimPackIndex) == 0x000030, "Member 'WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart::K2Node_ComponentBoundEvent_AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart, K2Node_ComponentBoundEvent_AnimationIndex) == 0x000034, "Member 'WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart::K2Node_ComponentBoundEvent_AnimationIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003C, "Member 'WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart, K2Node_ComponentBoundEvent_Pos) == 0x000040, "Member 'WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart::K2Node_ComponentBoundEvent_Pos' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart, K2Node_ComponentBoundEvent_UV) == 0x000048, "Member 'WB_BtlListMenuPart_C_ExecuteUbergraph_WB_BtlListMenuPart::K2Node_ComponentBoundEvent_UV' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.BndEvt__WB_BtlListMenuPart_ButtonS5_List_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_BtlListMenuPart_C_BndEvt__WB_BtlListMenuPart_ButtonS5_List_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlListMenuPart_C_BndEvt__WB_BtlListMenuPart_ButtonS5_List_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlListMenuPart_C_BndEvt__WB_BtlListMenuPart_ButtonS5_List_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_BtlListMenuPart_C_BndEvt__WB_BtlListMenuPart_ButtonS5_List_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_BtlListMenuPart_C_BndEvt__WB_BtlListMenuPart_ButtonS5_List_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_BtlListMenuPart_C_BndEvt__WB_BtlListMenuPart_ButtonS5_List_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_BtlListMenuPart_C_BndEvt__WB_BtlListMenuPart_ButtonS5_List_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_BndEvt__WB_BtlListMenuPart_ButtonS5_List_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_BtlListMenuPart_C_BndEvt__WB_BtlListMenuPart_ButtonS5_List_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlListMenuPart_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlListMenuPart_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlListMenuPart_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_BtlListMenuPart_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_BtlListMenuPart_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_BtlListMenuPart_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_BtlListMenuPart_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_BtlListMenuPart_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_BtlListMenuPart_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_BtlListMenuPart_C_BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.Disappear
// 0x0008 (0x0008 - 0x0000)
struct WB_BtlListMenuPart_C_Disappear final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlListMenuPart_C_Disappear) == 0x000004, "Wrong alignment on WB_BtlListMenuPart_C_Disappear");
static_assert(sizeof(WB_BtlListMenuPart_C_Disappear) == 0x000008, "Wrong size on WB_BtlListMenuPart_C_Disappear");
static_assert(offsetof(WB_BtlListMenuPart_C_Disappear, Rate) == 0x000000, "Member 'WB_BtlListMenuPart_C_Disappear::Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_Disappear, Immediately) == 0x000004, "Member 'WB_BtlListMenuPart_C_Disappear::Immediately' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.Appear
// 0x0008 (0x0008 - 0x0000)
struct WB_BtlListMenuPart_C_Appear final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlListMenuPart_C_Appear) == 0x000004, "Wrong alignment on WB_BtlListMenuPart_C_Appear");
static_assert(sizeof(WB_BtlListMenuPart_C_Appear) == 0x000008, "Wrong size on WB_BtlListMenuPart_C_Appear");
static_assert(offsetof(WB_BtlListMenuPart_C_Appear, Rate) == 0x000000, "Member 'WB_BtlListMenuPart_C_Appear::Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_Appear, Immediately) == 0x000004, "Member 'WB_BtlListMenuPart_C_Appear::Immediately' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlListMenuPart_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlListMenuPart_C_PreConstruct) == 0x000001, "Wrong alignment on WB_BtlListMenuPart_C_PreConstruct");
static_assert(sizeof(WB_BtlListMenuPart_C_PreConstruct) == 0x000001, "Wrong size on WB_BtlListMenuPart_C_PreConstruct");
static_assert(offsetof(WB_BtlListMenuPart_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_BtlListMenuPart_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.CallTick
// 0x0004 (0x0004 - 0x0000)
struct WB_BtlListMenuPart_C_CallTick final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlListMenuPart_C_CallTick) == 0x000004, "Wrong alignment on WB_BtlListMenuPart_C_CallTick");
static_assert(sizeof(WB_BtlListMenuPart_C_CallTick) == 0x000004, "Wrong size on WB_BtlListMenuPart_C_CallTick");
static_assert(offsetof(WB_BtlListMenuPart_C_CallTick, Delta) == 0x000000, "Member 'WB_BtlListMenuPart_C_CallTick::Delta' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.SetSkill
// 0x0128 (0x0128 - 0x0000)
struct WB_BtlListMenuPart_C_SetSkill final
{
public:
	int32                                         SkillId;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Cost;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Usable;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5483[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Aptitude;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_CostOK;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5484[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_DataIndex;                                   // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotEnoughMember;                                   // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5485[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0020(0x0100)(ConstParm)
	bool                                          CallFunc_SkillBaseDataGetValue_IsMagatsuhiSkill_ReturnValue; // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlListMenuPart_C_SetSkill) == 0x000008, "Wrong alignment on WB_BtlListMenuPart_C_SetSkill");
static_assert(sizeof(WB_BtlListMenuPart_C_SetSkill) == 0x000128, "Wrong size on WB_BtlListMenuPart_C_SetSkill");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkill, SkillId) == 0x000000, "Member 'WB_BtlListMenuPart_C_SetSkill::SkillId' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkill, Cost) == 0x000004, "Member 'WB_BtlListMenuPart_C_SetSkill::Cost' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkill, Param_Usable) == 0x000008, "Member 'WB_BtlListMenuPart_C_SetSkill::Param_Usable' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkill, Aptitude) == 0x00000C, "Member 'WB_BtlListMenuPart_C_SetSkill::Aptitude' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkill, Param_CostOK) == 0x000010, "Member 'WB_BtlListMenuPart_C_SetSkill::Param_CostOK' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkill, Param_DataIndex) == 0x000014, "Member 'WB_BtlListMenuPart_C_SetSkill::Param_DataIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkill, NotEnoughMember) == 0x000018, "Member 'WB_BtlListMenuPart_C_SetSkill::NotEnoughMember' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkill, CallFunc_GetSkillBaseData_ReturnValue) == 0x000020, "Member 'WB_BtlListMenuPart_C_SetSkill::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkill, CallFunc_SkillBaseDataGetValue_IsMagatsuhiSkill_ReturnValue) == 0x000120, "Member 'WB_BtlListMenuPart_C_SetSkill::CallFunc_SkillBaseDataGetValue_IsMagatsuhiSkill_ReturnValue' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.SetItem
// 0x0014 (0x0014 - 0x0000)
struct WB_BtlListMenuPart_C_SetItem final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Numerator;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Denominator;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_Usable;                                      // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5486[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_DataIndex;                                   // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlListMenuPart_C_SetItem) == 0x000004, "Wrong alignment on WB_BtlListMenuPart_C_SetItem");
static_assert(sizeof(WB_BtlListMenuPart_C_SetItem) == 0x000014, "Wrong size on WB_BtlListMenuPart_C_SetItem");
static_assert(offsetof(WB_BtlListMenuPart_C_SetItem, ItemId) == 0x000000, "Member 'WB_BtlListMenuPart_C_SetItem::ItemId' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetItem, Numerator) == 0x000004, "Member 'WB_BtlListMenuPart_C_SetItem::Numerator' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetItem, Denominator) == 0x000008, "Member 'WB_BtlListMenuPart_C_SetItem::Denominator' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetItem, Param_Usable) == 0x00000C, "Member 'WB_BtlListMenuPart_C_SetItem::Param_Usable' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetItem, Param_DataIndex) == 0x000010, "Member 'WB_BtlListMenuPart_C_SetItem::Param_DataIndex' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.ApplyParam
// 0x0120 (0x0120 - 0x0000)
struct WB_BtlListMenuPart_C_ApplyParam final
{
public:
	int32                                         Lo_FontColor;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5487[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5488[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemIconIdByItemId_ReturnValue;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5489[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0018(0x0100)(ConstParm)
	uint8                                         CallFunc_SkillBaseDataGetValue_Icon_ReturnValue;   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_548A[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlListMenuPart_C_ApplyParam) == 0x000008, "Wrong alignment on WB_BtlListMenuPart_C_ApplyParam");
static_assert(sizeof(WB_BtlListMenuPart_C_ApplyParam) == 0x000120, "Wrong size on WB_BtlListMenuPart_C_ApplyParam");
static_assert(offsetof(WB_BtlListMenuPart_C_ApplyParam, Lo_FontColor) == 0x000000, "Member 'WB_BtlListMenuPart_C_ApplyParam::Lo_FontColor' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ApplyParam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'WB_BtlListMenuPart_C_ApplyParam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ApplyParam, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000005, "Member 'WB_BtlListMenuPart_C_ApplyParam::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ApplyParam, CallFunc_SelectInt_ReturnValue) == 0x000008, "Member 'WB_BtlListMenuPart_C_ApplyParam::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ApplyParam, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'WB_BtlListMenuPart_C_ApplyParam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ApplyParam, CallFunc_GetItemIconIdByItemId_ReturnValue) == 0x000010, "Member 'WB_BtlListMenuPart_C_ApplyParam::CallFunc_GetItemIconIdByItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ApplyParam, CallFunc_GetSkillBaseData_ReturnValue) == 0x000018, "Member 'WB_BtlListMenuPart_C_ApplyParam::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ApplyParam, CallFunc_SkillBaseDataGetValue_Icon_ReturnValue) == 0x000118, "Member 'WB_BtlListMenuPart_C_ApplyParam::CallFunc_SkillBaseDataGetValue_Icon_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ApplyParam, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00011C, "Member 'WB_BtlListMenuPart_C_ApplyParam::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.ApplyUsable
// 0x0070 (0x0070 - 0x0000)
struct WB_BtlListMenuPart_C_ApplyUsable final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_548B[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0040(0x0028)()
	bool                                          K2Node_Select_Default;                             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlListMenuPart_C_ApplyUsable) == 0x000008, "Wrong alignment on WB_BtlListMenuPart_C_ApplyUsable");
static_assert(sizeof(WB_BtlListMenuPart_C_ApplyUsable) == 0x000070, "Wrong size on WB_BtlListMenuPart_C_ApplyUsable");
static_assert(offsetof(WB_BtlListMenuPart_C_ApplyUsable, Temp_bool_Variable) == 0x000000, "Member 'WB_BtlListMenuPart_C_ApplyUsable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ApplyUsable, Temp_bool_Variable_1) == 0x000001, "Member 'WB_BtlListMenuPart_C_ApplyUsable::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ApplyUsable, CallFunc_SelectInt_ReturnValue) == 0x000004, "Member 'WB_BtlListMenuPart_C_ApplyUsable::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ApplyUsable, CallFunc_SelectColor_ReturnValue) == 0x000008, "Member 'WB_BtlListMenuPart_C_ApplyUsable::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ApplyUsable, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'WB_BtlListMenuPart_C_ApplyUsable::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ApplyUsable, K2Node_MakeStruct_SlateColor_1) == 0x000040, "Member 'WB_BtlListMenuPart_C_ApplyUsable::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_ApplyUsable, K2Node_Select_Default) == 0x000068, "Member 'WB_BtlListMenuPart_C_ApplyUsable::K2Node_Select_Default' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.PlayBG Anim
// 0x0180 (0x0180 - 0x0000)
struct WB_BtlListMenuPart_C_PlayBG_Anim final
{
public:
	int32                                         AnimIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_548C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class FName>                      SelectedAnimNames;                                 // 0x0008(0x0050)(Edit, BlueprintVisible)
	TMap<int32, class FName>                      AnimNames;                                         // 0x0058(0x0050)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_548D[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_548E[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class FName>                      K2Node_MakeVariable_MakeVariableOutput;            // 0x00B8(0x0050)()
	TMap<int32, class FName>                      K2Node_MakeVariable_MakeVariableOutput_1;          // 0x0108(0x0050)()
	class FName                                   CallFunc_Map_Find_Value;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_548F[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value_1;                         // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5490[0x2];                                     // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlListMenuPart_C_PlayBG_Anim) == 0x000008, "Wrong alignment on WB_BtlListMenuPart_C_PlayBG_Anim");
static_assert(sizeof(WB_BtlListMenuPart_C_PlayBG_Anim) == 0x000180, "Wrong size on WB_BtlListMenuPart_C_PlayBG_Anim");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayBG_Anim, AnimIndex) == 0x000000, "Member 'WB_BtlListMenuPart_C_PlayBG_Anim::AnimIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayBG_Anim, IsLoop) == 0x000004, "Member 'WB_BtlListMenuPart_C_PlayBG_Anim::IsLoop' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayBG_Anim, SelectedAnimNames) == 0x000008, "Member 'WB_BtlListMenuPart_C_PlayBG_Anim::SelectedAnimNames' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayBG_Anim, AnimNames) == 0x000058, "Member 'WB_BtlListMenuPart_C_PlayBG_Anim::AnimNames' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayBG_Anim, Temp_bool_Variable) == 0x0000A8, "Member 'WB_BtlListMenuPart_C_PlayBG_Anim::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayBG_Anim, CallFunc_SelectInt_ReturnValue) == 0x0000AC, "Member 'WB_BtlListMenuPart_C_PlayBG_Anim::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayBG_Anim, Temp_bool_Variable_1) == 0x0000B0, "Member 'WB_BtlListMenuPart_C_PlayBG_Anim::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayBG_Anim, K2Node_MakeVariable_MakeVariableOutput) == 0x0000B8, "Member 'WB_BtlListMenuPart_C_PlayBG_Anim::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayBG_Anim, K2Node_MakeVariable_MakeVariableOutput_1) == 0x000108, "Member 'WB_BtlListMenuPart_C_PlayBG_Anim::K2Node_MakeVariable_MakeVariableOutput_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayBG_Anim, CallFunc_Map_Find_Value) == 0x000158, "Member 'WB_BtlListMenuPart_C_PlayBG_Anim::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayBG_Anim, CallFunc_Map_Find_ReturnValue) == 0x000160, "Member 'WB_BtlListMenuPart_C_PlayBG_Anim::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayBG_Anim, CallFunc_Map_Find_Value_1) == 0x000164, "Member 'WB_BtlListMenuPart_C_PlayBG_Anim::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayBG_Anim, CallFunc_Map_Find_ReturnValue_1) == 0x00016C, "Member 'WB_BtlListMenuPart_C_PlayBG_Anim::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayBG_Anim, K2Node_Select_Default) == 0x00016D, "Member 'WB_BtlListMenuPart_C_PlayBG_Anim::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayBG_Anim, K2Node_Select_Default_1) == 0x000170, "Member 'WB_BtlListMenuPart_C_PlayBG_Anim::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayBG_Anim, CallFunc_Play_ReturnValue) == 0x000178, "Member 'WB_BtlListMenuPart_C_PlayBG_Anim::CallFunc_Play_ReturnValue' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.GetResult
// 0x0008 (0x0008 - 0x0000)
struct WB_BtlListMenuPart_C_GetResult final
{
public:
	int32                                         Param_ID;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUsable;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlListMenuPart_C_GetResult) == 0x000004, "Wrong alignment on WB_BtlListMenuPart_C_GetResult");
static_assert(sizeof(WB_BtlListMenuPart_C_GetResult) == 0x000008, "Wrong size on WB_BtlListMenuPart_C_GetResult");
static_assert(offsetof(WB_BtlListMenuPart_C_GetResult, Param_ID) == 0x000000, "Member 'WB_BtlListMenuPart_C_GetResult::Param_ID' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_GetResult, IsUsable) == 0x000004, "Member 'WB_BtlListMenuPart_C_GetResult::IsUsable' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_GetResult, Temp_bool_Variable) == 0x000005, "Member 'WB_BtlListMenuPart_C_GetResult::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_GetResult, Temp_bool_Variable_1) == 0x000006, "Member 'WB_BtlListMenuPart_C_GetResult::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_GetResult, K2Node_Select_Default) == 0x000007, "Member 'WB_BtlListMenuPart_C_GetResult::K2Node_Select_Default' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.SetSelected
// 0x00F0 (0x00F0 - 0x0000)
struct WB_BtlListMenuPart_C_SetSelected final
{
public:
	bool                                          Param_Selected;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoPlayAnim;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5491[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5492[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5493[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5494[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USsPlayerSlot*                          K2Node_DynamicCast_AsSs_Player_Slot;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5495[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USsPlayerSlot*                          K2Node_DynamicCast_AsSs_Player_Slot_1;             // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5496[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_2;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0088(0x0058)(HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_3;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlListMenuPart_C_SetSelected) == 0x000008, "Wrong alignment on WB_BtlListMenuPart_C_SetSelected");
static_assert(sizeof(WB_BtlListMenuPart_C_SetSelected) == 0x0000F0, "Wrong size on WB_BtlListMenuPart_C_SetSelected");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, Param_Selected) == 0x000000, "Member 'WB_BtlListMenuPart_C_SetSelected::Param_Selected' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, NoPlayAnim) == 0x000001, "Member 'WB_BtlListMenuPart_C_SetSelected::NoPlayAnim' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, Temp_bool_Variable) == 0x000002, "Member 'WB_BtlListMenuPart_C_SetSelected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, Temp_name_Variable) == 0x000004, "Member 'WB_BtlListMenuPart_C_SetSelected::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, Temp_name_Variable_1) == 0x00000C, "Member 'WB_BtlListMenuPart_C_SetSelected::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, Temp_bool_Variable_1) == 0x000014, "Member 'WB_BtlListMenuPart_C_SetSelected::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, Temp_struct_Variable) == 0x000018, "Member 'WB_BtlListMenuPart_C_SetSelected::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, Temp_struct_Variable_1) == 0x000020, "Member 'WB_BtlListMenuPart_C_SetSelected::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, Temp_bool_Variable_2) == 0x000028, "Member 'WB_BtlListMenuPart_C_SetSelected::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, Temp_struct_Variable_2) == 0x00002C, "Member 'WB_BtlListMenuPart_C_SetSelected::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, Temp_struct_Variable_3) == 0x000034, "Member 'WB_BtlListMenuPart_C_SetSelected::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, Temp_bool_Variable_3) == 0x00003C, "Member 'WB_BtlListMenuPart_C_SetSelected::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, Temp_struct_Variable_4) == 0x000040, "Member 'WB_BtlListMenuPart_C_SetSelected::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, Temp_struct_Variable_5) == 0x000048, "Member 'WB_BtlListMenuPart_C_SetSelected::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, K2Node_DynamicCast_AsSs_Player_Slot) == 0x000050, "Member 'WB_BtlListMenuPart_C_SetSelected::K2Node_DynamicCast_AsSs_Player_Slot' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WB_BtlListMenuPart_C_SetSelected::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, K2Node_DynamicCast_AsSs_Player_Slot_1) == 0x000060, "Member 'WB_BtlListMenuPart_C_SetSelected::K2Node_DynamicCast_AsSs_Player_Slot_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'WB_BtlListMenuPart_C_SetSelected::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, K2Node_Select_Default) == 0x00006C, "Member 'WB_BtlListMenuPart_C_SetSelected::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, CallFunc_SelectInt_ReturnValue) == 0x000074, "Member 'WB_BtlListMenuPart_C_SetSelected::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, K2Node_Select_Default_1) == 0x000078, "Member 'WB_BtlListMenuPart_C_SetSelected::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, K2Node_Select_Default_2) == 0x000080, "Member 'WB_BtlListMenuPart_C_SetSelected::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, K2Node_MakeStruct_SlateFontInfo) == 0x000088, "Member 'WB_BtlListMenuPart_C_SetSelected::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, K2Node_Select_Default_3) == 0x0000E0, "Member 'WB_BtlListMenuPart_C_SetSelected::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSelected, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000E8, "Member 'WB_BtlListMenuPart_C_SetSelected::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.SetLabelConceal
// 0x000B (0x000B - 0x0000)
struct WB_BtlListMenuPart_C_SetLabelConceal final
{
public:
	bool                                          IsConcealed;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlListMenuPart_C_SetLabelConceal) == 0x000001, "Wrong alignment on WB_BtlListMenuPart_C_SetLabelConceal");
static_assert(sizeof(WB_BtlListMenuPart_C_SetLabelConceal) == 0x00000B, "Wrong size on WB_BtlListMenuPart_C_SetLabelConceal");
static_assert(offsetof(WB_BtlListMenuPart_C_SetLabelConceal, IsConcealed) == 0x000000, "Member 'WB_BtlListMenuPart_C_SetLabelConceal::IsConcealed' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetLabelConceal, Temp_bool_Variable) == 0x000001, "Member 'WB_BtlListMenuPart_C_SetLabelConceal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetLabelConceal, Temp_byte_Variable) == 0x000002, "Member 'WB_BtlListMenuPart_C_SetLabelConceal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetLabelConceal, Temp_bool_Variable_1) == 0x000003, "Member 'WB_BtlListMenuPart_C_SetLabelConceal::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetLabelConceal, Temp_byte_Variable_1) == 0x000004, "Member 'WB_BtlListMenuPart_C_SetLabelConceal::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetLabelConceal, Temp_byte_Variable_2) == 0x000005, "Member 'WB_BtlListMenuPart_C_SetLabelConceal::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetLabelConceal, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'WB_BtlListMenuPart_C_SetLabelConceal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetLabelConceal, K2Node_Select_Default) == 0x000007, "Member 'WB_BtlListMenuPart_C_SetLabelConceal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetLabelConceal, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000008, "Member 'WB_BtlListMenuPart_C_SetLabelConceal::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetLabelConceal, K2Node_Select_Default_1) == 0x000009, "Member 'WB_BtlListMenuPart_C_SetLabelConceal::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetLabelConceal, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'WB_BtlListMenuPart_C_SetLabelConceal::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.IsLabelConcealed
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlListMenuPart_C_IsLabelConcealed final
{
public:
	bool                                          IsConcealed;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlListMenuPart_C_IsLabelConcealed) == 0x000001, "Wrong alignment on WB_BtlListMenuPart_C_IsLabelConcealed");
static_assert(sizeof(WB_BtlListMenuPart_C_IsLabelConcealed) == 0x000001, "Wrong size on WB_BtlListMenuPart_C_IsLabelConcealed");
static_assert(offsetof(WB_BtlListMenuPart_C_IsLabelConcealed, IsConcealed) == 0x000000, "Member 'WB_BtlListMenuPart_C_IsLabelConcealed::IsConcealed' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.SetAlpha
// 0x0008 (0x0008 - 0x0000)
struct WB_BtlListMenuPart_C_SetAlpha final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlListMenuPart_C_SetAlpha) == 0x000004, "Wrong alignment on WB_BtlListMenuPart_C_SetAlpha");
static_assert(sizeof(WB_BtlListMenuPart_C_SetAlpha) == 0x000008, "Wrong size on WB_BtlListMenuPart_C_SetAlpha");
static_assert(offsetof(WB_BtlListMenuPart_C_SetAlpha, Alpha) == 0x000000, "Member 'WB_BtlListMenuPart_C_SetAlpha::Alpha' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetAlpha, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'WB_BtlListMenuPart_C_SetAlpha::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.MakeSkillName
// 0x00C0 (0x00C0 - 0x0000)
struct WB_BtlListMenuPart_C_MakeSkillName final
{
public:
	class FText                                   Param_Name;                                        // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetSkillName_ReturnValue;                 // 0x0018(0x0018)(ConstParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5497[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSkillName_ReturnValue_1;               // 0x0038(0x0018)(ConstParm)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5498[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A8(0x0018)()
};
static_assert(alignof(WB_BtlListMenuPart_C_MakeSkillName) == 0x000008, "Wrong alignment on WB_BtlListMenuPart_C_MakeSkillName");
static_assert(sizeof(WB_BtlListMenuPart_C_MakeSkillName) == 0x0000C0, "Wrong size on WB_BtlListMenuPart_C_MakeSkillName");
static_assert(offsetof(WB_BtlListMenuPart_C_MakeSkillName, Param_Name) == 0x000000, "Member 'WB_BtlListMenuPart_C_MakeSkillName::Param_Name' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_MakeSkillName, CallFunc_GetSkillName_ReturnValue) == 0x000018, "Member 'WB_BtlListMenuPart_C_MakeSkillName::CallFunc_GetSkillName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_MakeSkillName, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'WB_BtlListMenuPart_C_MakeSkillName::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_MakeSkillName, CallFunc_Greater_IntInt_ReturnValue) == 0x000031, "Member 'WB_BtlListMenuPart_C_MakeSkillName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_MakeSkillName, CallFunc_GetSkillName_ReturnValue_1) == 0x000038, "Member 'WB_BtlListMenuPart_C_MakeSkillName::CallFunc_GetSkillName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_MakeSkillName, CallFunc_SelectString_ReturnValue) == 0x000050, "Member 'WB_BtlListMenuPart_C_MakeSkillName::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_MakeSkillName, CallFunc_Conv_TextToString_ReturnValue) == 0x000060, "Member 'WB_BtlListMenuPart_C_MakeSkillName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_MakeSkillName, CallFunc_Abs_Int_ReturnValue) == 0x000070, "Member 'WB_BtlListMenuPart_C_MakeSkillName::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_MakeSkillName, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'WB_BtlListMenuPart_C_MakeSkillName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_MakeSkillName, CallFunc_Conv_IntToString_ReturnValue) == 0x000088, "Member 'WB_BtlListMenuPart_C_MakeSkillName::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_MakeSkillName, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'WB_BtlListMenuPart_C_MakeSkillName::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_MakeSkillName, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A8, "Member 'WB_BtlListMenuPart_C_MakeSkillName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.PlayMagatsuhi Anim
// 0x00B8 (0x00B8 - 0x0000)
struct WB_BtlListMenuPart_C_PlayMagatsuhi_Anim final
{
public:
	TMap<int32, class FName>                      AnimNames;                                         // 0x0000(0x0050)(Edit, BlueprintVisible)
	TMap<int32, class FName>                      K2Node_MakeVariable_MakeVariableOutput;            // 0x0050(0x0050)()
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlListMenuPart_C_PlayMagatsuhi_Anim) == 0x000008, "Wrong alignment on WB_BtlListMenuPart_C_PlayMagatsuhi_Anim");
static_assert(sizeof(WB_BtlListMenuPart_C_PlayMagatsuhi_Anim) == 0x0000B8, "Wrong size on WB_BtlListMenuPart_C_PlayMagatsuhi_Anim");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayMagatsuhi_Anim, AnimNames) == 0x000000, "Member 'WB_BtlListMenuPart_C_PlayMagatsuhi_Anim::AnimNames' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayMagatsuhi_Anim, K2Node_MakeVariable_MakeVariableOutput) == 0x000050, "Member 'WB_BtlListMenuPart_C_PlayMagatsuhi_Anim::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayMagatsuhi_Anim, CallFunc_SelectInt_ReturnValue) == 0x0000A0, "Member 'WB_BtlListMenuPart_C_PlayMagatsuhi_Anim::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayMagatsuhi_Anim, CallFunc_SelectInt_ReturnValue_1) == 0x0000A4, "Member 'WB_BtlListMenuPart_C_PlayMagatsuhi_Anim::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayMagatsuhi_Anim, CallFunc_SelectInt_ReturnValue_2) == 0x0000A8, "Member 'WB_BtlListMenuPart_C_PlayMagatsuhi_Anim::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayMagatsuhi_Anim, CallFunc_Map_Find_Value) == 0x0000AC, "Member 'WB_BtlListMenuPart_C_PlayMagatsuhi_Anim::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayMagatsuhi_Anim, CallFunc_Map_Find_ReturnValue) == 0x0000B4, "Member 'WB_BtlListMenuPart_C_PlayMagatsuhi_Anim::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_PlayMagatsuhi_Anim, CallFunc_Play_ReturnValue) == 0x0000B5, "Member 'WB_BtlListMenuPart_C_PlayMagatsuhi_Anim::CallFunc_Play_ReturnValue' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.SetSkillText
// 0x00A0 (0x00A0 - 0x0000)
struct WB_BtlListMenuPart_C_SetSkillText final
{
public:
	TScriptInterface<class IMessageTagInterface>  CallFunc_BuildText_self_CastInput;                 // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByLabel_self_CastInput;   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5499[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetValueParam_self_CastInput;             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetValueParam_self_CastInput_1;           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByLabel_self_CastInput_1; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_549A[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByLabel_self_CastInput_2; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByLabel_self_CastInput_3; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_BuildText_self_CastInput_1;               // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetValueParam_self_CastInput_2;           // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlListMenuPart_C_SetSkillText) == 0x000008, "Wrong alignment on WB_BtlListMenuPart_C_SetSkillText");
static_assert(sizeof(WB_BtlListMenuPart_C_SetSkillText) == 0x0000A0, "Wrong size on WB_BtlListMenuPart_C_SetSkillText");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkillText, CallFunc_BuildText_self_CastInput) == 0x000000, "Member 'WB_BtlListMenuPart_C_SetSkillText::CallFunc_BuildText_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkillText, CallFunc_SetScriptMessageByLabel_self_CastInput) == 0x000010, "Member 'WB_BtlListMenuPart_C_SetSkillText::CallFunc_SetScriptMessageByLabel_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkillText, CallFunc_Abs_Int_ReturnValue) == 0x000020, "Member 'WB_BtlListMenuPart_C_SetSkillText::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkillText, CallFunc_SetValueParam_self_CastInput) == 0x000028, "Member 'WB_BtlListMenuPart_C_SetSkillText::CallFunc_SetValueParam_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkillText, CallFunc_SetValueParam_self_CastInput_1) == 0x000038, "Member 'WB_BtlListMenuPart_C_SetSkillText::CallFunc_SetValueParam_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkillText, CallFunc_SetScriptMessageByLabel_self_CastInput_1) == 0x000048, "Member 'WB_BtlListMenuPart_C_SetSkillText::CallFunc_SetScriptMessageByLabel_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkillText, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'WB_BtlListMenuPart_C_SetSkillText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkillText, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000059, "Member 'WB_BtlListMenuPart_C_SetSkillText::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkillText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00005A, "Member 'WB_BtlListMenuPart_C_SetSkillText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkillText, CallFunc_SetScriptMessageByLabel_self_CastInput_2) == 0x000060, "Member 'WB_BtlListMenuPart_C_SetSkillText::CallFunc_SetScriptMessageByLabel_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkillText, CallFunc_SetScriptMessageByLabel_self_CastInput_3) == 0x000070, "Member 'WB_BtlListMenuPart_C_SetSkillText::CallFunc_SetScriptMessageByLabel_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkillText, CallFunc_BuildText_self_CastInput_1) == 0x000080, "Member 'WB_BtlListMenuPart_C_SetSkillText::CallFunc_BuildText_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetSkillText, CallFunc_SetValueParam_self_CastInput_2) == 0x000090, "Member 'WB_BtlListMenuPart_C_SetSkillText::CallFunc_SetValueParam_self_CastInput_2' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.SetItemText
// 0x0030 (0x0030 - 0x0000)
struct WB_BtlListMenuPart_C_SetItemText final
{
public:
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByLabel_self_CastInput;   // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_BuildText_self_CastInput;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetValueParam_self_CastInput;             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlListMenuPart_C_SetItemText) == 0x000008, "Wrong alignment on WB_BtlListMenuPart_C_SetItemText");
static_assert(sizeof(WB_BtlListMenuPart_C_SetItemText) == 0x000030, "Wrong size on WB_BtlListMenuPart_C_SetItemText");
static_assert(offsetof(WB_BtlListMenuPart_C_SetItemText, CallFunc_SetScriptMessageByLabel_self_CastInput) == 0x000000, "Member 'WB_BtlListMenuPart_C_SetItemText::CallFunc_SetScriptMessageByLabel_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetItemText, CallFunc_BuildText_self_CastInput) == 0x000010, "Member 'WB_BtlListMenuPart_C_SetItemText::CallFunc_BuildText_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetItemText, CallFunc_SetValueParam_self_CastInput) == 0x000020, "Member 'WB_BtlListMenuPart_C_SetItemText::CallFunc_SetValueParam_self_CastInput' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.SetWidgetVisibility
// 0x0010 (0x0010 - 0x0000)
struct WB_BtlListMenuPart_C_SetWidgetVisibility final
{
public:
	class USsPlayerWidget*                        SsPlayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlListMenuPart_C_SetWidgetVisibility) == 0x000008, "Wrong alignment on WB_BtlListMenuPart_C_SetWidgetVisibility");
static_assert(sizeof(WB_BtlListMenuPart_C_SetWidgetVisibility) == 0x000010, "Wrong size on WB_BtlListMenuPart_C_SetWidgetVisibility");
static_assert(offsetof(WB_BtlListMenuPart_C_SetWidgetVisibility, SsPlayer) == 0x000000, "Member 'WB_BtlListMenuPart_C_SetWidgetVisibility::SsPlayer' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetWidgetVisibility, Visible) == 0x000008, "Member 'WB_BtlListMenuPart_C_SetWidgetVisibility::Visible' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetWidgetVisibility, Temp_bool_Variable) == 0x000009, "Member 'WB_BtlListMenuPart_C_SetWidgetVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetWidgetVisibility, Temp_byte_Variable) == 0x00000A, "Member 'WB_BtlListMenuPart_C_SetWidgetVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetWidgetVisibility, Temp_byte_Variable_1) == 0x00000B, "Member 'WB_BtlListMenuPart_C_SetWidgetVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlListMenuPart_C_SetWidgetVisibility, K2Node_Select_Default) == 0x00000C, "Member 'WB_BtlListMenuPart_C_SetWidgetVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.SetAllWidgedTick
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlListMenuPart_C_SetAllWidgedTick final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlListMenuPart_C_SetAllWidgedTick) == 0x000001, "Wrong alignment on WB_BtlListMenuPart_C_SetAllWidgedTick");
static_assert(sizeof(WB_BtlListMenuPart_C_SetAllWidgedTick) == 0x000001, "Wrong size on WB_BtlListMenuPart_C_SetAllWidgedTick");
static_assert(offsetof(WB_BtlListMenuPart_C_SetAllWidgedTick, Enable) == 0x000000, "Member 'WB_BtlListMenuPart_C_SetAllWidgedTick::Enable' has a wrong offset!");

// Function WB_BtlListMenuPart.WB_BtlListMenuPart_C.IsDisappeared
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlListMenuPart_C_IsDisappeared final
{
public:
	bool                                          Param_IsDisappeared;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlListMenuPart_C_IsDisappeared) == 0x000001, "Wrong alignment on WB_BtlListMenuPart_C_IsDisappeared");
static_assert(sizeof(WB_BtlListMenuPart_C_IsDisappeared) == 0x000001, "Wrong size on WB_BtlListMenuPart_C_IsDisappeared");
static_assert(offsetof(WB_BtlListMenuPart_C_IsDisappeared, Param_IsDisappeared) == 0x000000, "Member 'WB_BtlListMenuPart_C_IsDisappeared::Param_IsDisappeared' has a wrong offset!");

}

