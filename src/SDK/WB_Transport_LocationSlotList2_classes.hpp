#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Transport_LocationSlotList2

#include "Basic.hpp"

#include "E_SORTWINDOW_ANIM_STATE_structs.hpp"
#include "Engine_structs.hpp"
#include "Project_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Transport_LocationSlotList2.WB_Transport_LocationSlotList2_C
// 0x00D8 (0x0338 - 0x0260)
class UWB_Transport_LocationSlotList2_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           Canvas_Base;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Transport_LocationSlot2_C*          WB_Transport_LocationSlot;                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Transport_LocationSlot2_C*          WB_Transport_LocationSlot_1;                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Transport_LocationSlot2_C*          WB_Transport_LocationSlot_2;                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Transport_LocationSlot2_C*          WB_Transport_LocationSlot_3;                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Transport_LocationSlot2_C*          WB_Transport_LocationSlot_4;                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Transport_LocationSlot2_C*          WB_Transport_LocationSlot_5;                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Transport_LocationSlot2_C*          WB_Transport_LocationSlot_6;                       // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Transport_LocationSlot2_C*          WB_Transport_LocationSlot_7;                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Transport_LocationSlot2_C*          WB_Transport_LocationSlot_8;                       // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Transport_LocationSlot2_C*          WB_Transport_LocationSlot_9;                       // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Transport_LocationSlot2_C*          WB_Transport_LocationSlot_10;                      // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UWB_Transport_LocationSlot2_C*>  SlotList2;                                         // 0x02C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         SlotPaddingY;                                      // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotDispNum;                                       // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OnCursorIdx;                                       // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Debug_OnCursorIdx;                                 // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AppliedSlotIdx;                                    // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SORTWINDOW_ANIM_STATE                       AinmState;                                         // 0x02EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3356[0x3];                                     // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FrameIn_Interval;                                  // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrameIn_TimeCounter;                               // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FrameIn_SlotCounter;                               // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Debug_AppliedSlotIdx;                              // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug_IsTickPreConstruct;                          // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3357[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransportLocationSlotInfo>     Debug_SlotInfo;                                    // 0x0308(0x0010)(Edit, BlueprintVisible)
	FMulticastInlineDelegateProperty_             MouseEvent_OnHovered;                              // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             MouseEvent_OnClicked;                              // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void MouseEvent_OnHovered__DelegateSignature(int32 SlotIdx);
	void MouseEvent_OnClicked__DelegateSignature(int32 SlotIdx);
	void ExecuteUbergraph_WB_Transport_LocationSlotList2(int32 EntryPoint);
	void Destruct();
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Init();
	void SetSlotListInfo(TArray<struct FTransportLocationSlotInfo>& InListInfo3, bool IsUpdateAnim);
	void GetCursorIdx(int32* CursorIdx);
	void SetCursorIdx(int32 InSlotIdx, bool IsUpdateAnim);
	void SetAnimState(E_SORTWINDOW_ANIM_STATE InState);
	void Tick_Base();
	void Tick_FrameIn();
	void Tick_FrameOut();
	void CursorMove_Up();
	void GetSlotMaxNum(int32* SlotMaxNum);
	void CursorMove_Down();
	void CursorMove_Top();
	void CursorMove_Bottom();
	void CheckCursorPosAndSkipListIn();
	void GetAnimState(E_SORTWINDOW_ANIM_STATE* Param_AinmState);
	void SetAppliedSlotIdx(int32 InSlotIdx, bool IsUpdateAnim);
	void GetAppliedSlotIdx(int32* Param_AppliedSlotIdx);
	void SetAnimPlayRate(float InAnimPlayRate);
	void BindMouseInputEvent();
	void UnbindMouseInputEvent();
	void OnHoveredMouse(int32 InSlotIdx);
	void OnClickedMouse(int32 InSlotIdx);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Transport_LocationSlotList2_C">();
	}
	static class UWB_Transport_LocationSlotList2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Transport_LocationSlotList2_C>();
	}
};
static_assert(alignof(UWB_Transport_LocationSlotList2_C) == 0x000008, "Wrong alignment on UWB_Transport_LocationSlotList2_C");
static_assert(sizeof(UWB_Transport_LocationSlotList2_C) == 0x000338, "Wrong size on UWB_Transport_LocationSlotList2_C");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, UberGraphFrame) == 0x000260, "Member 'UWB_Transport_LocationSlotList2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, Canvas_Base) == 0x000268, "Member 'UWB_Transport_LocationSlotList2_C::Canvas_Base' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, WB_Transport_LocationSlot) == 0x000270, "Member 'UWB_Transport_LocationSlotList2_C::WB_Transport_LocationSlot' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, WB_Transport_LocationSlot_1) == 0x000278, "Member 'UWB_Transport_LocationSlotList2_C::WB_Transport_LocationSlot_1' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, WB_Transport_LocationSlot_2) == 0x000280, "Member 'UWB_Transport_LocationSlotList2_C::WB_Transport_LocationSlot_2' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, WB_Transport_LocationSlot_3) == 0x000288, "Member 'UWB_Transport_LocationSlotList2_C::WB_Transport_LocationSlot_3' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, WB_Transport_LocationSlot_4) == 0x000290, "Member 'UWB_Transport_LocationSlotList2_C::WB_Transport_LocationSlot_4' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, WB_Transport_LocationSlot_5) == 0x000298, "Member 'UWB_Transport_LocationSlotList2_C::WB_Transport_LocationSlot_5' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, WB_Transport_LocationSlot_6) == 0x0002A0, "Member 'UWB_Transport_LocationSlotList2_C::WB_Transport_LocationSlot_6' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, WB_Transport_LocationSlot_7) == 0x0002A8, "Member 'UWB_Transport_LocationSlotList2_C::WB_Transport_LocationSlot_7' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, WB_Transport_LocationSlot_8) == 0x0002B0, "Member 'UWB_Transport_LocationSlotList2_C::WB_Transport_LocationSlot_8' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, WB_Transport_LocationSlot_9) == 0x0002B8, "Member 'UWB_Transport_LocationSlotList2_C::WB_Transport_LocationSlot_9' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, WB_Transport_LocationSlot_10) == 0x0002C0, "Member 'UWB_Transport_LocationSlotList2_C::WB_Transport_LocationSlot_10' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, SlotList2) == 0x0002C8, "Member 'UWB_Transport_LocationSlotList2_C::SlotList2' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, SlotPaddingY) == 0x0002D8, "Member 'UWB_Transport_LocationSlotList2_C::SlotPaddingY' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, SlotDispNum) == 0x0002DC, "Member 'UWB_Transport_LocationSlotList2_C::SlotDispNum' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, OnCursorIdx) == 0x0002E0, "Member 'UWB_Transport_LocationSlotList2_C::OnCursorIdx' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, Debug_OnCursorIdx) == 0x0002E4, "Member 'UWB_Transport_LocationSlotList2_C::Debug_OnCursorIdx' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, AppliedSlotIdx) == 0x0002E8, "Member 'UWB_Transport_LocationSlotList2_C::AppliedSlotIdx' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, AinmState) == 0x0002EC, "Member 'UWB_Transport_LocationSlotList2_C::AinmState' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, FrameIn_Interval) == 0x0002F0, "Member 'UWB_Transport_LocationSlotList2_C::FrameIn_Interval' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, FrameIn_TimeCounter) == 0x0002F4, "Member 'UWB_Transport_LocationSlotList2_C::FrameIn_TimeCounter' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, FrameIn_SlotCounter) == 0x0002F8, "Member 'UWB_Transport_LocationSlotList2_C::FrameIn_SlotCounter' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, Debug_AppliedSlotIdx) == 0x0002FC, "Member 'UWB_Transport_LocationSlotList2_C::Debug_AppliedSlotIdx' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, Debug_IsTickPreConstruct) == 0x000300, "Member 'UWB_Transport_LocationSlotList2_C::Debug_IsTickPreConstruct' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, Debug_SlotInfo) == 0x000308, "Member 'UWB_Transport_LocationSlotList2_C::Debug_SlotInfo' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, MouseEvent_OnHovered) == 0x000318, "Member 'UWB_Transport_LocationSlotList2_C::MouseEvent_OnHovered' has a wrong offset!");
static_assert(offsetof(UWB_Transport_LocationSlotList2_C, MouseEvent_OnClicked) == 0x000328, "Member 'UWB_Transport_LocationSlotList2_C::MouseEvent_OnClicked' has a wrong offset!");

}

