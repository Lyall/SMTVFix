#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MakkaWindowNumber

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_MakkaWindowNumber.WB_MakkaWindowNumber_C
// 0x0058 (0x02B8 - 0x0260)
class UWB_MakkaWindowNumber_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           Canvas_Digit;                                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UImage*>                         DigitImageList;                                    // 0x0270(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FVector2D                              DigitSize;                                         // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxDigit;                                          // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinNumber;                                         // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxNumber;                                         // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CommaInterval;                                     // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DigitWidthInterval;                                // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDraw_PlusSign;                                   // 0x029C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsReflect_SignColor;                               // 0x029D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_826C[0x2];                                     // 0x029E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Debug_DispNumber;                                  // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Debug_NumberColor;                                 // 0x02A4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_MakkaWindowNumber(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Destruct();
	void Init();
	void SetNumber(int32 InNumber);
	void SetNumberColor(const struct FLinearColor& InColor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_MakkaWindowNumber_C">();
	}
	static class UWB_MakkaWindowNumber_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_MakkaWindowNumber_C>();
	}
};
static_assert(alignof(UWB_MakkaWindowNumber_C) == 0x000008, "Wrong alignment on UWB_MakkaWindowNumber_C");
static_assert(sizeof(UWB_MakkaWindowNumber_C) == 0x0002B8, "Wrong size on UWB_MakkaWindowNumber_C");
static_assert(offsetof(UWB_MakkaWindowNumber_C, UberGraphFrame) == 0x000260, "Member 'UWB_MakkaWindowNumber_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_MakkaWindowNumber_C, Canvas_Digit) == 0x000268, "Member 'UWB_MakkaWindowNumber_C::Canvas_Digit' has a wrong offset!");
static_assert(offsetof(UWB_MakkaWindowNumber_C, DigitImageList) == 0x000270, "Member 'UWB_MakkaWindowNumber_C::DigitImageList' has a wrong offset!");
static_assert(offsetof(UWB_MakkaWindowNumber_C, DigitSize) == 0x000280, "Member 'UWB_MakkaWindowNumber_C::DigitSize' has a wrong offset!");
static_assert(offsetof(UWB_MakkaWindowNumber_C, MaxDigit) == 0x000288, "Member 'UWB_MakkaWindowNumber_C::MaxDigit' has a wrong offset!");
static_assert(offsetof(UWB_MakkaWindowNumber_C, MinNumber) == 0x00028C, "Member 'UWB_MakkaWindowNumber_C::MinNumber' has a wrong offset!");
static_assert(offsetof(UWB_MakkaWindowNumber_C, MaxNumber) == 0x000290, "Member 'UWB_MakkaWindowNumber_C::MaxNumber' has a wrong offset!");
static_assert(offsetof(UWB_MakkaWindowNumber_C, CommaInterval) == 0x000294, "Member 'UWB_MakkaWindowNumber_C::CommaInterval' has a wrong offset!");
static_assert(offsetof(UWB_MakkaWindowNumber_C, DigitWidthInterval) == 0x000298, "Member 'UWB_MakkaWindowNumber_C::DigitWidthInterval' has a wrong offset!");
static_assert(offsetof(UWB_MakkaWindowNumber_C, IsDraw_PlusSign) == 0x00029C, "Member 'UWB_MakkaWindowNumber_C::IsDraw_PlusSign' has a wrong offset!");
static_assert(offsetof(UWB_MakkaWindowNumber_C, IsReflect_SignColor) == 0x00029D, "Member 'UWB_MakkaWindowNumber_C::IsReflect_SignColor' has a wrong offset!");
static_assert(offsetof(UWB_MakkaWindowNumber_C, Debug_DispNumber) == 0x0002A0, "Member 'UWB_MakkaWindowNumber_C::Debug_DispNumber' has a wrong offset!");
static_assert(offsetof(UWB_MakkaWindowNumber_C, Debug_NumberColor) == 0x0002A4, "Member 'UWB_MakkaWindowNumber_C::Debug_NumberColor' has a wrong offset!");

}

