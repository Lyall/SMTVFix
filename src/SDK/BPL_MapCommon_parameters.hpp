#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_MapCommon

#include "Basic.hpp"

#include "ST_MapB_EffectParam_structs.hpp"
#include "MapSubLevelTable_ST_structs.hpp"
#include "ST_LightParam_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Project_structs.hpp"


namespace SDK::Params
{

// Function BPL_MapCommon.BPL_MapCommon_C.SpawnSymbol_Event
// 0x0188 (0x0188 - 0x0000)
struct BPL_MapCommon_C_SpawnSymbol_Event final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3377[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 EnemyIdList;                                       // 0x0010(0x0010)(Parm, OutParm)
	int32                                         Encount_Id;                                        // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3378[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   ClassAssetID;                                      // 0x0028(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         SymbolID;                                          // 0x0050(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAfterEvent;                                      // 0x0054(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3379[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         M_After_Event_ID;                                  // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_337A[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 IdList;                                            // 0x0060(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 CallFunc_GetSymbolId_Event_EnemyIdList;            // 0x0070(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetSymbolId_Event_out_SymbolId;           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSymbolId_Event_symbolindex1;           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventEncountData                      CallFunc_GetEvtEncountData_ReturnValue;            // 0x0088(0x0068)(ConstParm)
	TSoftClassPtr<class UClass>                   CallFunc_GetDevilAssetClassData_ClassAssetID;      // 0x00F0(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetDevilAssetClassData_PlayerBaseAssetID; // 0x0118(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337B[0x1];                                     // 0x0147(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_337C[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337D[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_337E[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_MapCommon_C_SpawnSymbol_Event) == 0x000008, "Wrong alignment on BPL_MapCommon_C_SpawnSymbol_Event");
static_assert(sizeof(BPL_MapCommon_C_SpawnSymbol_Event) == 0x000188, "Wrong size on BPL_MapCommon_C_SpawnSymbol_Event");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, ID) == 0x000000, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::ID' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, __WorldContext) == 0x000008, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, EnemyIdList) == 0x000010, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::EnemyIdList' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, Encount_Id) == 0x000020, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::Encount_Id' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, ClassAssetID) == 0x000028, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::ClassAssetID' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, SymbolID) == 0x000050, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::SymbolID' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, IsAfterEvent) == 0x000054, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::IsAfterEvent' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, M_After_Event_ID) == 0x000058, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::M_After_Event_ID' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, IdList) == 0x000060, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::IdList' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, CallFunc_GetSymbolId_Event_EnemyIdList) == 0x000070, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::CallFunc_GetSymbolId_Event_EnemyIdList' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, CallFunc_GetSymbolId_Event_out_SymbolId) == 0x000080, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::CallFunc_GetSymbolId_Event_out_SymbolId' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, CallFunc_GetSymbolId_Event_symbolindex1) == 0x000084, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::CallFunc_GetSymbolId_Event_symbolindex1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, CallFunc_GetEvtEncountData_ReturnValue) == 0x000088, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::CallFunc_GetEvtEncountData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, CallFunc_GetDevilAssetClassData_ClassAssetID) == 0x0000F0, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::CallFunc_GetDevilAssetClassData_ClassAssetID' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, CallFunc_GetDevilAssetClassData_PlayerBaseAssetID) == 0x000118, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::CallFunc_GetDevilAssetClassData_PlayerBaseAssetID' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, CallFunc_Array_Length_ReturnValue) == 0x000140, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000144, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, Temp_bool_True_if_break_was_hit_Variable) == 0x000145, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, CallFunc_Not_PreBool_ReturnValue) == 0x000146, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, Temp_int_Array_Index_Variable) == 0x000148, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, Temp_int_Loop_Counter_Variable) == 0x00014C, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, CallFunc_Array_Get_Item) == 0x000150, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, CallFunc_Conv_IntToString_ReturnValue) == 0x000158, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, CallFunc_Less_IntInt_ReturnValue) == 0x000168, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, CallFunc_Concat_StrStr_ReturnValue) == 0x000170, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, CallFunc_BooleanAND_ReturnValue) == 0x000180, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_Event, CallFunc_Add_IntInt_ReturnValue) == 0x000184, "Member 'BPL_MapCommon_C_SpawnSymbol_Event::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BPL_MapCommon.BPL_MapCommon_C.SpawnSymbol_EncID
// 0x0138 (0x0138 - 0x0000)
struct BPL_MapCommon_C_SpawnSymbol_EncID final
{
public:
	int32                                         In_encount_id;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_337F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 EnemyIdList;                                       // 0x0010(0x0010)(Parm, OutParm)
	int32                                         Encount_Id;                                        // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3380[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   ClassAssetID;                                      // 0x0028(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         SymbolID;                                          // 0x0050(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3381[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 IdList;                                            // 0x0058(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 CallFunc_GetSymbolId_EnemyIdList;                  // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetSymbolId_out_SymbolId;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSymbolId_symbolindex1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetDevilAssetClassData_ClassAssetID;      // 0x00A0(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetDevilAssetClassData_PlayerBaseAssetID; // 0x00C8(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3382[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3383[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3384[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_MapCommon_C_SpawnSymbol_EncID) == 0x000008, "Wrong alignment on BPL_MapCommon_C_SpawnSymbol_EncID");
static_assert(sizeof(BPL_MapCommon_C_SpawnSymbol_EncID) == 0x000138, "Wrong size on BPL_MapCommon_C_SpawnSymbol_EncID");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, In_encount_id) == 0x000000, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::In_encount_id' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, __WorldContext) == 0x000008, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, EnemyIdList) == 0x000010, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::EnemyIdList' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, Encount_Id) == 0x000020, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::Encount_Id' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, ClassAssetID) == 0x000028, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::ClassAssetID' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, SymbolID) == 0x000050, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::SymbolID' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, IdList) == 0x000058, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::IdList' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, CallFunc_GetSymbolId_EnemyIdList) == 0x000068, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::CallFunc_GetSymbolId_EnemyIdList' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, CallFunc_GetSymbolId_out_SymbolId) == 0x000078, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::CallFunc_GetSymbolId_out_SymbolId' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, CallFunc_GetSymbolId_symbolindex1) == 0x00007C, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::CallFunc_GetSymbolId_symbolindex1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, CallFunc_Conv_IntToString_ReturnValue) == 0x000080, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, CallFunc_GetDevilAssetClassData_ClassAssetID) == 0x0000A0, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::CallFunc_GetDevilAssetClassData_ClassAssetID' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, CallFunc_GetDevilAssetClassData_PlayerBaseAssetID) == 0x0000C8, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::CallFunc_GetDevilAssetClassData_PlayerBaseAssetID' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, Temp_bool_True_if_break_was_hit_Variable) == 0x0000F4, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, Temp_int_Array_Index_Variable) == 0x0000F8, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, CallFunc_Array_Get_Item) == 0x0000FC, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000100, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, CallFunc_Not_PreBool_ReturnValue) == 0x000110, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000118, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, Temp_int_Loop_Counter_Variable) == 0x000128, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, CallFunc_Less_IntInt_ReturnValue) == 0x00012C, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, CallFunc_Add_IntInt_ReturnValue) == 0x000130, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SpawnSymbol_EncID, CallFunc_BooleanAND_ReturnValue) == 0x000134, "Member 'BPL_MapCommon_C_SpawnSymbol_EncID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPL_MapCommon.BPL_MapCommon_C.SymbolLookPlayer
// 0x0160 (0x0160 - 0x0000)
struct BPL_MapCommon_C_SymbolLookPlayer final
{
public:
	class AActor*                                 _____;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        _____1;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ReturnValue;                                       // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FRotator                               Save;                                              // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	class AActor*                                 Actor;                                             // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPL_MapCommon_C_SymbolLookPlayer) == 0x000008, "Wrong alignment on BPL_MapCommon_C_SymbolLookPlayer");
static_assert(sizeof(BPL_MapCommon_C_SymbolLookPlayer) == 0x000160, "Wrong size on BPL_MapCommon_C_SymbolLookPlayer");
static_assert(offsetof(BPL_MapCommon_C_SymbolLookPlayer, _____) == 0x000000, "Member 'BPL_MapCommon_C_SymbolLookPlayer::_____' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SymbolLookPlayer, _____1) == 0x000008, "Member 'BPL_MapCommon_C_SymbolLookPlayer::_____1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SymbolLookPlayer, __WorldContext) == 0x000010, "Member 'BPL_MapCommon_C_SymbolLookPlayer::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SymbolLookPlayer, ReturnValue) == 0x000018, "Member 'BPL_MapCommon_C_SymbolLookPlayer::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SymbolLookPlayer, Save) == 0x000024, "Member 'BPL_MapCommon_C_SymbolLookPlayer::Save' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SymbolLookPlayer, Actor) == 0x000030, "Member 'BPL_MapCommon_C_SymbolLookPlayer::Actor' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SymbolLookPlayer, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'BPL_MapCommon_C_SymbolLookPlayer::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SymbolLookPlayer, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000044, "Member 'BPL_MapCommon_C_SymbolLookPlayer::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SymbolLookPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000050, "Member 'BPL_MapCommon_C_SymbolLookPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SymbolLookPlayer, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000D8, "Member 'BPL_MapCommon_C_SymbolLookPlayer::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");

// Function BPL_MapCommon.BPL_MapCommon_C.SaveMapData
// 0x0050 (0x0050 - 0x0000)
struct BPL_MapCommon_C_SaveMapData final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_TransformToString_ReturnValue;       // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_MapCommon_C_SaveMapData) == 0x000010, "Wrong alignment on BPL_MapCommon_C_SaveMapData");
static_assert(sizeof(BPL_MapCommon_C_SaveMapData) == 0x000050, "Wrong size on BPL_MapCommon_C_SaveMapData");
static_assert(offsetof(BPL_MapCommon_C_SaveMapData, __WorldContext) == 0x000000, "Member 'BPL_MapCommon_C_SaveMapData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SaveMapData, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BPL_MapCommon_C_SaveMapData::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SaveMapData, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BPL_MapCommon_C_SaveMapData::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SaveMapData, CallFunc_Conv_TransformToString_ReturnValue) == 0x000040, "Member 'BPL_MapCommon_C_SaveMapData::CallFunc_Conv_TransformToString_ReturnValue' has a wrong offset!");

// Function BPL_MapCommon.BPL_MapCommon_C.LoadMapData
// 0x0008 (0x0008 - 0x0000)
struct BPL_MapCommon_C_LoadMapData final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_MapCommon_C_LoadMapData) == 0x000008, "Wrong alignment on BPL_MapCommon_C_LoadMapData");
static_assert(sizeof(BPL_MapCommon_C_LoadMapData) == 0x000008, "Wrong size on BPL_MapCommon_C_LoadMapData");
static_assert(offsetof(BPL_MapCommon_C_LoadMapData, __WorldContext) == 0x000000, "Member 'BPL_MapCommon_C_LoadMapData::__WorldContext' has a wrong offset!");

// Function BPL_MapCommon.BPL_MapCommon_C.MapOpen
// 0x0070 (0x0070 - 0x0000)
struct BPL_MapCommon_C_MapOpen final
{
public:
	int32                                         Map_id;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Area_id;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Old_AreaID;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Old_mapID;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPersistentName_Common_PersistentName;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_MapCommon_C_MapOpen) == 0x000008, "Wrong alignment on BPL_MapCommon_C_MapOpen");
static_assert(sizeof(BPL_MapCommon_C_MapOpen) == 0x000070, "Wrong size on BPL_MapCommon_C_MapOpen");
static_assert(offsetof(BPL_MapCommon_C_MapOpen, Map_id) == 0x000000, "Member 'BPL_MapCommon_C_MapOpen::Map_id' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapOpen, Area_id) == 0x000004, "Member 'BPL_MapCommon_C_MapOpen::Area_id' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapOpen, __WorldContext) == 0x000008, "Member 'BPL_MapCommon_C_MapOpen::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapOpen, Old_AreaID) == 0x000010, "Member 'BPL_MapCommon_C_MapOpen::Old_AreaID' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapOpen, Old_mapID) == 0x000014, "Member 'BPL_MapCommon_C_MapOpen::Old_mapID' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapOpen, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'BPL_MapCommon_C_MapOpen::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapOpen, CallFunc_GetPersistentName_Common_PersistentName) == 0x000028, "Member 'BPL_MapCommon_C_MapOpen::CallFunc_GetPersistentName_Common_PersistentName' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapOpen, CallFunc_Conv_NameToString_ReturnValue) == 0x000030, "Member 'BPL_MapCommon_C_MapOpen::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapOpen, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BPL_MapCommon_C_MapOpen::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapOpen, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BPL_MapCommon_C_MapOpen::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapOpen, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000060, "Member 'BPL_MapCommon_C_MapOpen::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BPL_MapCommon.BPL_MapCommon_C.MapChange
// 0x0078 (0x0078 - 0x0000)
struct BPL_MapCommon_C_MapChange final
{
public:
	int32                                         Map_id;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Area_id;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         M_WarpPoint;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FromEvent_;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherMapReturn_;                                   // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3385[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectGameInstance_C*                 K2Node_DynamicCast_AsProject_Game_Instance;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3386[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameMode_C>       K2Node_DynamicCast_AsBPI_Game_Mode;                // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3387[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_MapCommon_C_MapChange) == 0x000008, "Wrong alignment on BPL_MapCommon_C_MapChange");
static_assert(sizeof(BPL_MapCommon_C_MapChange) == 0x000078, "Wrong size on BPL_MapCommon_C_MapChange");
static_assert(offsetof(BPL_MapCommon_C_MapChange, Map_id) == 0x000000, "Member 'BPL_MapCommon_C_MapChange::Map_id' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapChange, Area_id) == 0x000004, "Member 'BPL_MapCommon_C_MapChange::Area_id' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapChange, M_WarpPoint) == 0x000008, "Member 'BPL_MapCommon_C_MapChange::M_WarpPoint' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapChange, FromEvent_) == 0x00000C, "Member 'BPL_MapCommon_C_MapChange::FromEvent_' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapChange, OtherMapReturn_) == 0x000010, "Member 'BPL_MapCommon_C_MapChange::OtherMapReturn_' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapChange, __WorldContext) == 0x000018, "Member 'BPL_MapCommon_C_MapChange::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapChange, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'BPL_MapCommon_C_MapChange::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapChange, CallFunc_GetGameMode_ReturnValue) == 0x000028, "Member 'BPL_MapCommon_C_MapChange::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapChange, K2Node_DynamicCast_AsProject_Game_Instance) == 0x000030, "Member 'BPL_MapCommon_C_MapChange::K2Node_DynamicCast_AsProject_Game_Instance' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapChange, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPL_MapCommon_C_MapChange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapChange, K2Node_DynamicCast_AsBPI_Game_Mode) == 0x000040, "Member 'BPL_MapCommon_C_MapChange::K2Node_DynamicCast_AsBPI_Game_Mode' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapChange, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BPL_MapCommon_C_MapChange::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapChange, CallFunc_GetGameInstance_ReturnValue_1) == 0x000058, "Member 'BPL_MapCommon_C_MapChange::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapChange, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000060, "Member 'BPL_MapCommon_C_MapChange::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapChange, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BPL_MapCommon_C_MapChange::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPL_MapCommon.BPL_MapCommon_C.SetPlayer
// 0x0038 (0x0038 - 0x0000)
struct BPL_MapCommon_C_SetPlayer final
{
public:
	class APawn*                                  InPawn;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_MapCommon_C_SetPlayer) == 0x000008, "Wrong alignment on BPL_MapCommon_C_SetPlayer");
static_assert(sizeof(BPL_MapCommon_C_SetPlayer) == 0x000038, "Wrong size on BPL_MapCommon_C_SetPlayer");
static_assert(offsetof(BPL_MapCommon_C_SetPlayer, InPawn) == 0x000000, "Member 'BPL_MapCommon_C_SetPlayer::InPawn' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayer, __WorldContext) == 0x000008, "Member 'BPL_MapCommon_C_SetPlayer::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayer, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'BPL_MapCommon_C_SetPlayer::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayer, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'BPL_MapCommon_C_SetPlayer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayer, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BPL_MapCommon_C_SetPlayer::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BPL_MapCommon.BPL_MapCommon_C.MapFlagCh
// 0x0028 (0x0028 - 0x0000)
struct BPL_MapCommon_C_MapFlagCh final
{
public:
	class FName                                   StFlag;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   EnFlag;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OK;                                                // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enable;                                            // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlag_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_2;          // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_3;          // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlag_ReturnValue_1;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_MapCommon_C_MapFlagCh) == 0x000008, "Wrong alignment on BPL_MapCommon_C_MapFlagCh");
static_assert(sizeof(BPL_MapCommon_C_MapFlagCh) == 0x000028, "Wrong size on BPL_MapCommon_C_MapFlagCh");
static_assert(offsetof(BPL_MapCommon_C_MapFlagCh, StFlag) == 0x000000, "Member 'BPL_MapCommon_C_MapFlagCh::StFlag' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapFlagCh, EnFlag) == 0x000008, "Member 'BPL_MapCommon_C_MapFlagCh::EnFlag' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapFlagCh, __WorldContext) == 0x000010, "Member 'BPL_MapCommon_C_MapFlagCh::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapFlagCh, OK) == 0x000018, "Member 'BPL_MapCommon_C_MapFlagCh::OK' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapFlagCh, Enable) == 0x000019, "Member 'BPL_MapCommon_C_MapFlagCh::Enable' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapFlagCh, CallFunc_NotEqual_NameName_ReturnValue) == 0x00001A, "Member 'BPL_MapCommon_C_MapFlagCh::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapFlagCh, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x00001B, "Member 'BPL_MapCommon_C_MapFlagCh::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapFlagCh, CallFunc_CheckEventFlag_ReturnValue) == 0x00001C, "Member 'BPL_MapCommon_C_MapFlagCh::CallFunc_CheckEventFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapFlagCh, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'BPL_MapCommon_C_MapFlagCh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapFlagCh, CallFunc_NotEqual_NameName_ReturnValue_2) == 0x00001E, "Member 'BPL_MapCommon_C_MapFlagCh::CallFunc_NotEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapFlagCh, CallFunc_NotEqual_NameName_ReturnValue_3) == 0x00001F, "Member 'BPL_MapCommon_C_MapFlagCh::CallFunc_NotEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapFlagCh, CallFunc_CheckEventFlag_ReturnValue_1) == 0x000020, "Member 'BPL_MapCommon_C_MapFlagCh::CallFunc_CheckEventFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapFlagCh, CallFunc_BooleanAND_ReturnValue_1) == 0x000021, "Member 'BPL_MapCommon_C_MapFlagCh::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BPL_MapCommon.BPL_MapCommon_C.SetPlayerEvent
// 0x0028 (0x0028 - 0x0000)
struct BPL_MapCommon_C_SetPlayerEvent final
{
public:
	class FName                                   StFlag;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   EnFlag;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  InPawn;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MapFlagCh_OK;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_MapCommon_C_SetPlayerEvent) == 0x000008, "Wrong alignment on BPL_MapCommon_C_SetPlayerEvent");
static_assert(sizeof(BPL_MapCommon_C_SetPlayerEvent) == 0x000028, "Wrong size on BPL_MapCommon_C_SetPlayerEvent");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerEvent, StFlag) == 0x000000, "Member 'BPL_MapCommon_C_SetPlayerEvent::StFlag' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerEvent, EnFlag) == 0x000008, "Member 'BPL_MapCommon_C_SetPlayerEvent::EnFlag' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerEvent, InPawn) == 0x000010, "Member 'BPL_MapCommon_C_SetPlayerEvent::InPawn' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerEvent, __WorldContext) == 0x000018, "Member 'BPL_MapCommon_C_SetPlayerEvent::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerEvent, CallFunc_MapFlagCh_OK) == 0x000020, "Member 'BPL_MapCommon_C_SetPlayerEvent::CallFunc_MapFlagCh_OK' has a wrong offset!");

// Function BPL_MapCommon.BPL_MapCommon_C.SetPlayerDef
// 0x0010 (0x0010 - 0x0000)
struct BPL_MapCommon_C_SetPlayerDef final
{
public:
	class APawn*                                  InPawn;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_MapCommon_C_SetPlayerDef) == 0x000008, "Wrong alignment on BPL_MapCommon_C_SetPlayerDef");
static_assert(sizeof(BPL_MapCommon_C_SetPlayerDef) == 0x000010, "Wrong size on BPL_MapCommon_C_SetPlayerDef");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDef, InPawn) == 0x000000, "Member 'BPL_MapCommon_C_SetPlayerDef::InPawn' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDef, __WorldContext) == 0x000008, "Member 'BPL_MapCommon_C_SetPlayerDef::__WorldContext' has a wrong offset!");

// Function BPL_MapCommon.BPL_MapCommon_C.SetPlayerDefPos
// 0x02D0 (0x02D0 - 0x0000)
struct BPL_MapCommon_C_SetPlayerDefPos final
{
public:
	class AActor*                                 FirstPos;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerStart*                           CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerBase_C*                          K2Node_DynamicCast_AsPlayer_Base;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3388[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0070(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3389[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerBase_C*                          K2Node_DynamicCast_AsPlayer_Base_1;                // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_338A[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_1;    // 0x015C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_1;       // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_338B[0x3];                                     // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_338C[0x2];                                     // 0x01EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x01F0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_2;    // 0x0220(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_2;       // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_338D[0x3];                                     // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_MapCommon_C_SetPlayerDefPos) == 0x000010, "Wrong alignment on BPL_MapCommon_C_SetPlayerDefPos");
static_assert(sizeof(BPL_MapCommon_C_SetPlayerDefPos) == 0x0002D0, "Wrong size on BPL_MapCommon_C_SetPlayerDefPos");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, FirstPos) == 0x000000, "Member 'BPL_MapCommon_C_SetPlayerDefPos::FirstPos' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, __WorldContext) == 0x000008, "Member 'BPL_MapCommon_C_SetPlayerDefPos::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_GetPlayerPawn_ReturnValue) == 0x000050, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_Array_Get_Item) == 0x000058, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, K2Node_DynamicCast_AsPlayer_Base) == 0x000060, "Member 'BPL_MapCommon_C_SetPlayerDefPos::K2Node_DynamicCast_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BPL_MapCommon_C_SetPlayerDefPos::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_GetTransform_ReturnValue) == 0x000070, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_BreakTransform_Location) == 0x0000A0, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_BreakTransform_Rotation) == 0x0000AC, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_BreakTransform_Scale) == 0x0000B8, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000C4, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_K2_SetActorTransform_ReturnValue) == 0x00014C, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, K2Node_DynamicCast_AsPlayer_Base_1) == 0x000150, "Member 'BPL_MapCommon_C_SetPlayerDefPos::K2Node_DynamicCast_AsPlayer_Base_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, K2Node_DynamicCast_bSuccess_1) == 0x000158, "Member 'BPL_MapCommon_C_SetPlayerDefPos::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_K2_SetActorTransform_SweepHitResult_1) == 0x00015C, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_K2_SetActorTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_K2_SetActorTransform_ReturnValue_1) == 0x0001E4, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_K2_SetActorTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_Array_Length_ReturnValue) == 0x0001E8, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_IsValid_ReturnValue_1) == 0x0001EC, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001ED, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_GetTransform_ReturnValue_1) == 0x0001F0, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_K2_SetActorTransform_SweepHitResult_2) == 0x000220, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_K2_SetActorTransform_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_K2_SetActorTransform_ReturnValue_2) == 0x0002A8, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_K2_SetActorTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_BreakTransform_Location_1) == 0x0002AC, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_BreakTransform_Rotation_1) == 0x0002B8, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetPlayerDefPos, CallFunc_BreakTransform_Scale_1) == 0x0002C4, "Member 'BPL_MapCommon_C_SetPlayerDefPos::CallFunc_BreakTransform_Scale_1' has a wrong offset!");

// Function BPL_MapCommon.BPL_MapCommon_C.MapEffectSupport
// 0x0600 (0x0600 - 0x0000)
struct BPL_MapCommon_C_MapEffectSupport final
{
public:
	class UParticleSystemComponent*               _____;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               LParticle;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_338E[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectGameInstance_C*                 K2Node_DynamicCast_AsProject_Game_Instance;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_338F[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_MapB_EffectParam                   CallFunc_GetMapBEffectParam_Index_EffectParam;     // 0x0064(0x0074)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ConstParm, ReferenceParm)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CurrentMapIsDaath_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3390[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3391[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CurrentMapIsDaath_ReturnValue_1;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3392[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectGameInstance_C*                 K2Node_DynamicCast_AsProject_Game_Instance_1;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3393[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3394[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0150(0x0010)(ConstParm, ReferenceParm)
	struct FST_LightParam                         CallFunc_GetDaathEnvCtrl_Index_LightParam;         // 0x0160(0x0318)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_1;    // 0x0478(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x0488(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0494(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x04A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x04AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0534(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3395[0x3];                                     // 0x0535(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x0538(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0544(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x055C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0568(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x0574(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x05FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_MapCommon_C_MapEffectSupport) == 0x000008, "Wrong alignment on BPL_MapCommon_C_MapEffectSupport");
static_assert(sizeof(BPL_MapCommon_C_MapEffectSupport) == 0x000600, "Wrong size on BPL_MapCommon_C_MapEffectSupport");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, _____) == 0x000000, "Member 'BPL_MapCommon_C_MapEffectSupport::_____' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, __WorldContext) == 0x000008, "Member 'BPL_MapCommon_C_MapEffectSupport::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, LParticle) == 0x000010, "Member 'BPL_MapCommon_C_MapEffectSupport::LParticle' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_GetUpVector_ReturnValue) == 0x000020, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, K2Node_DynamicCast_AsProject_Game_Instance) == 0x000030, "Member 'BPL_MapCommon_C_MapEffectSupport::K2Node_DynamicCast_AsProject_Game_Instance' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPL_MapCommon_C_MapEffectSupport::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00003C, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000048, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000054, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_Add_VectorVector_ReturnValue) == 0x000058, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_GetMapBEffectParam_Index_EffectParam) == 0x000064, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_GetMapBEffectParam_Index_EffectParam' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000D8, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, K2Node_MakeArray_Array) == 0x0000E0, "Member 'BPL_MapCommon_C_MapEffectSupport::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_GetVectorParameterValue_ReturnValue) == 0x0000F0, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_CurrentMapIsDaath_ReturnValue) == 0x000100, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_CurrentMapIsDaath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000104, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000110, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_GetGameInstance_ReturnValue_1) == 0x000120, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_CurrentMapIsDaath_ReturnValue_1) == 0x000128, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_CurrentMapIsDaath_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, K2Node_DynamicCast_AsProject_Game_Instance_1) == 0x000130, "Member 'BPL_MapCommon_C_MapEffectSupport::K2Node_DynamicCast_AsProject_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, K2Node_DynamicCast_bSuccess_1) == 0x000138, "Member 'BPL_MapCommon_C_MapEffectSupport::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000140, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000148, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, K2Node_MakeArray_Array_1) == 0x000150, "Member 'BPL_MapCommon_C_MapEffectSupport::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_GetDaathEnvCtrl_Index_LightParam) == 0x000160, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_GetDaathEnvCtrl_Index_LightParam' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_GetVectorParameterValue_ReturnValue_1) == 0x000478, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_GetVectorParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x000488, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000494, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0004A0, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_LineTraceSingle_OutHit) == 0x0004AC, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_LineTraceSingle_ReturnValue) == 0x000534, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_GetUpVector_ReturnValue_1) == 0x000538, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000544, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000550, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00055C, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000568, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_LineTraceSingle_OutHit_1) == 0x000574, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_MapEffectSupport, CallFunc_LineTraceSingle_ReturnValue_1) == 0x0005FC, "Member 'BPL_MapCommon_C_MapEffectSupport::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");

// Function BPL_MapCommon.BPL_MapCommon_C.SetDevelopmentAreaID
// 0x0048 (0x0048 - 0x0000)
struct BPL_MapCommon_C_SetDevelopmentAreaID final
{
public:
	int32                                         AreaId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3396[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectGameInstance_C*                 K2Node_DynamicCast_AsProject_Game_Instance;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetMapChange_IsMapChange;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3397[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMapChange_m_WarpPoint;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapChange_m_FromEvent;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapChange_m_OtherMapReturn;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      CallFunc_BI_IsEventView_self_CastInput;            // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsEventView_IsEventView;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_MapCommon_C_SetDevelopmentAreaID) == 0x000008, "Wrong alignment on BPL_MapCommon_C_SetDevelopmentAreaID");
static_assert(sizeof(BPL_MapCommon_C_SetDevelopmentAreaID) == 0x000048, "Wrong size on BPL_MapCommon_C_SetDevelopmentAreaID");
static_assert(offsetof(BPL_MapCommon_C_SetDevelopmentAreaID, AreaId) == 0x000000, "Member 'BPL_MapCommon_C_SetDevelopmentAreaID::AreaId' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetDevelopmentAreaID, __WorldContext) == 0x000008, "Member 'BPL_MapCommon_C_SetDevelopmentAreaID::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetDevelopmentAreaID, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPL_MapCommon_C_SetDevelopmentAreaID::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetDevelopmentAreaID, K2Node_DynamicCast_AsProject_Game_Instance) == 0x000018, "Member 'BPL_MapCommon_C_SetDevelopmentAreaID::K2Node_DynamicCast_AsProject_Game_Instance' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetDevelopmentAreaID, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPL_MapCommon_C_SetDevelopmentAreaID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetDevelopmentAreaID, CallFunc_GetMapChange_IsMapChange) == 0x000021, "Member 'BPL_MapCommon_C_SetDevelopmentAreaID::CallFunc_GetMapChange_IsMapChange' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetDevelopmentAreaID, CallFunc_GetMapChange_m_WarpPoint) == 0x000024, "Member 'BPL_MapCommon_C_SetDevelopmentAreaID::CallFunc_GetMapChange_m_WarpPoint' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetDevelopmentAreaID, CallFunc_GetMapChange_m_FromEvent) == 0x000028, "Member 'BPL_MapCommon_C_SetDevelopmentAreaID::CallFunc_GetMapChange_m_FromEvent' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetDevelopmentAreaID, CallFunc_GetMapChange_m_OtherMapReturn) == 0x00002C, "Member 'BPL_MapCommon_C_SetDevelopmentAreaID::CallFunc_GetMapChange_m_OtherMapReturn' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetDevelopmentAreaID, CallFunc_BI_IsEventView_self_CastInput) == 0x000030, "Member 'BPL_MapCommon_C_SetDevelopmentAreaID::CallFunc_BI_IsEventView_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_SetDevelopmentAreaID, CallFunc_BI_IsEventView_IsEventView) == 0x000040, "Member 'BPL_MapCommon_C_SetDevelopmentAreaID::CallFunc_BI_IsEventView_IsEventView' has a wrong offset!");

// Function BPL_MapCommon.BPL_MapCommon_C.GetPersistentName_Common
// 0x05D0 (0x05D0 - 0x0000)
struct BPL_MapCommon_C_GetPersistentName_Common final
{
public:
	int32                                         MapId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3398[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PersistentName;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_mapid;                                           // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3399[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339A[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339B[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0048(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339C[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSubLevelTable_ST                   CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0318(0x02A8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339D[0x3];                                     // 0x05C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x05C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x05CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_MapCommon_C_GetPersistentName_Common) == 0x000008, "Wrong alignment on BPL_MapCommon_C_GetPersistentName_Common");
static_assert(sizeof(BPL_MapCommon_C_GetPersistentName_Common) == 0x0005D0, "Wrong size on BPL_MapCommon_C_GetPersistentName_Common");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, MapId) == 0x000000, "Member 'BPL_MapCommon_C_GetPersistentName_Common::MapId' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, __WorldContext) == 0x000008, "Member 'BPL_MapCommon_C_GetPersistentName_Common::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, PersistentName) == 0x000010, "Member 'BPL_MapCommon_C_GetPersistentName_Common::PersistentName' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, L_index) == 0x000018, "Member 'BPL_MapCommon_C_GetPersistentName_Common::L_index' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, L_mapid) == 0x00001C, "Member 'BPL_MapCommon_C_GetPersistentName_Common::L_mapid' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BPL_MapCommon_C_GetPersistentName_Common::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BPL_MapCommon_C_GetPersistentName_Common::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BPL_MapCommon_C_GetPersistentName_Common::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BPL_MapCommon_C_GetPersistentName_Common::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000030, "Member 'BPL_MapCommon_C_GetPersistentName_Common::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BPL_MapCommon_C_GetPersistentName_Common::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000048, "Member 'BPL_MapCommon_C_GetPersistentName_Common::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, CallFunc_Array_Get_Item) == 0x000058, "Member 'BPL_MapCommon_C_GetPersistentName_Common::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BPL_MapCommon_C_GetPersistentName_Common::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'BPL_MapCommon_C_GetPersistentName_Common::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000310, "Member 'BPL_MapCommon_C_GetPersistentName_Common::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000318, "Member 'BPL_MapCommon_C_GetPersistentName_Common::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0005C0, "Member 'BPL_MapCommon_C_GetPersistentName_Common::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, CallFunc_Array_Length_ReturnValue) == 0x0005C4, "Member 'BPL_MapCommon_C_GetPersistentName_Common::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, CallFunc_Less_IntInt_ReturnValue) == 0x0005C8, "Member 'BPL_MapCommon_C_GetPersistentName_Common::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, CallFunc_BooleanAND_ReturnValue) == 0x0005C9, "Member 'BPL_MapCommon_C_GetPersistentName_Common::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapCommon_C_GetPersistentName_Common, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0005CA, "Member 'BPL_MapCommon_C_GetPersistentName_Common::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}

