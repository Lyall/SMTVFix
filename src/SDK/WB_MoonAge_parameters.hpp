#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MoonAge

#include "Basic.hpp"

#include "E_MoonAgeState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Project_structs.hpp"
#include "E_MoonAgeAnimationState_structs.hpp"


namespace SDK::Params
{

// Function WB_MoonAge.WB_MoonAge_C.onAnimationStateEvent__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WB_MoonAge_C_OnAnimationStateEvent__DelegateSignature final
{
public:
	E_MoonAgeAnimationState                       NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MoonAge_C_OnAnimationStateEvent__DelegateSignature) == 0x000001, "Wrong alignment on WB_MoonAge_C_OnAnimationStateEvent__DelegateSignature");
static_assert(sizeof(WB_MoonAge_C_OnAnimationStateEvent__DelegateSignature) == 0x000001, "Wrong size on WB_MoonAge_C_OnAnimationStateEvent__DelegateSignature");
static_assert(offsetof(WB_MoonAge_C_OnAnimationStateEvent__DelegateSignature, NewParam) == 0x000000, "Member 'WB_MoonAge_C_OnAnimationStateEvent__DelegateSignature::NewParam' has a wrong offset!");

// Function WB_MoonAge.WB_MoonAge_C.ExecuteUbergraph_WB_MoonAge
// 0x002C (0x002C - 0x0000)
struct WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MoonAgeState                                Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MoonAgeState                                Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_InAnimation_1;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_InAnimation;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8289[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName;           // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName;          // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MoonAgeState                                K2Node_Select_Default;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MoonAgeState                                Temp_byte_Variable_2;                              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MoonAgeState                                Temp_byte_Variable_3;                              // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MoonAgeState                                K2Node_Select_Default_1;                           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge) == 0x000004, "Wrong alignment on WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge");
static_assert(sizeof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge) == 0x00002C, "Wrong size on WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge");
static_assert(offsetof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge, EntryPoint) == 0x000000, "Member 'WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge, Temp_byte_Variable) == 0x000004, "Member 'WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge, Temp_byte_Variable_1) == 0x000005, "Member 'WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge, Temp_bool_Variable) == 0x000006, "Member 'WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge, K2Node_CustomEvent_InAnimation_1) == 0x000007, "Member 'WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge::K2Node_CustomEvent_InAnimation_1' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge, K2Node_CustomEvent_InAnimation) == 0x000008, "Member 'WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge::K2Node_CustomEvent_InAnimation' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge, K2Node_ComponentBoundEvent_AnimPackName) == 0x00000C, "Member 'WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge::K2Node_ComponentBoundEvent_AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge, K2Node_ComponentBoundEvent_AnimationName) == 0x000014, "Member 'WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge::K2Node_ComponentBoundEvent_AnimationName' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge, K2Node_ComponentBoundEvent_AnimPackIndex) == 0x00001C, "Member 'WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge::K2Node_ComponentBoundEvent_AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge, K2Node_ComponentBoundEvent_AnimationIndex) == 0x000020, "Member 'WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge::K2Node_ComponentBoundEvent_AnimationIndex' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge, K2Node_SwitchName_CmpSuccess) == 0x000024, "Member 'WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge, K2Node_Select_Default) == 0x000025, "Member 'WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge, Temp_byte_Variable_2) == 0x000026, "Member 'WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge, Temp_byte_Variable_3) == 0x000027, "Member 'WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge, K2Node_Event_IsDesignTime) == 0x000028, "Member 'WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge, Temp_bool_Variable_1) == 0x000029, "Member 'WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge, K2Node_Select_Default_1) == 0x00002A, "Member 'WB_MoonAge_C_ExecuteUbergraph_WB_MoonAge::K2Node_Select_Default_1' has a wrong offset!");

// Function WB_MoonAge.WB_MoonAge_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_MoonAge_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MoonAge_C_PreConstruct) == 0x000001, "Wrong alignment on WB_MoonAge_C_PreConstruct");
static_assert(sizeof(WB_MoonAge_C_PreConstruct) == 0x000001, "Wrong size on WB_MoonAge_C_PreConstruct");
static_assert(offsetof(WB_MoonAge_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_MoonAge_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_MoonAge.WB_MoonAge_C.BndEvt__SsPlayerWidget_MoonBG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_MoonAge_C_BndEvt__SsPlayerWidget_MoonBG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MoonAge_C_BndEvt__SsPlayerWidget_MoonBG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_MoonAge_C_BndEvt__SsPlayerWidget_MoonBG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_MoonAge_C_BndEvt__SsPlayerWidget_MoonBG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_MoonAge_C_BndEvt__SsPlayerWidget_MoonBG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_MoonAge_C_BndEvt__SsPlayerWidget_MoonBG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_MoonAge_C_BndEvt__SsPlayerWidget_MoonBG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_BndEvt__SsPlayerWidget_MoonBG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_MoonAge_C_BndEvt__SsPlayerWidget_MoonBG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_BndEvt__SsPlayerWidget_MoonBG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_MoonAge_C_BndEvt__SsPlayerWidget_MoonBG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_BndEvt__SsPlayerWidget_MoonBG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_MoonAge_C_BndEvt__SsPlayerWidget_MoonBG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_MoonAge.WB_MoonAge_C.Close
// 0x0001 (0x0001 - 0x0000)
struct WB_MoonAge_C_Close final
{
public:
	bool                                          InAnimation;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MoonAge_C_Close) == 0x000001, "Wrong alignment on WB_MoonAge_C_Close");
static_assert(sizeof(WB_MoonAge_C_Close) == 0x000001, "Wrong size on WB_MoonAge_C_Close");
static_assert(offsetof(WB_MoonAge_C_Close, InAnimation) == 0x000000, "Member 'WB_MoonAge_C_Close::InAnimation' has a wrong offset!");

// Function WB_MoonAge.WB_MoonAge_C.Open
// 0x0001 (0x0001 - 0x0000)
struct WB_MoonAge_C_Open final
{
public:
	bool                                          InAnimation;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MoonAge_C_Open) == 0x000001, "Wrong alignment on WB_MoonAge_C_Open");
static_assert(sizeof(WB_MoonAge_C_Open) == 0x000001, "Wrong size on WB_MoonAge_C_Open");
static_assert(offsetof(WB_MoonAge_C_Open, InAnimation) == 0x000000, "Member 'WB_MoonAge_C_Open::InAnimation' has a wrong offset!");

// Function WB_MoonAge.WB_MoonAge_C.playBGAnimation
// 0x0034 (0x0034 - 0x0000)
struct WB_MoonAge_C_PlayBGAnimation final
{
public:
	ESlateVisibility                              WidgetVisibility;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MoonAgeState                                Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_828A[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MoonAge_C_PlayBGAnimation) == 0x000004, "Wrong alignment on WB_MoonAge_C_PlayBGAnimation");
static_assert(sizeof(WB_MoonAge_C_PlayBGAnimation) == 0x000034, "Wrong size on WB_MoonAge_C_PlayBGAnimation");
static_assert(offsetof(WB_MoonAge_C_PlayBGAnimation, WidgetVisibility) == 0x000000, "Member 'WB_MoonAge_C_PlayBGAnimation::WidgetVisibility' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_PlayBGAnimation, Temp_byte_Variable) == 0x000001, "Member 'WB_MoonAge_C_PlayBGAnimation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_PlayBGAnimation, Temp_name_Variable) == 0x000004, "Member 'WB_MoonAge_C_PlayBGAnimation::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_PlayBGAnimation, Temp_name_Variable_1) == 0x00000C, "Member 'WB_MoonAge_C_PlayBGAnimation::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_PlayBGAnimation, Temp_name_Variable_2) == 0x000014, "Member 'WB_MoonAge_C_PlayBGAnimation::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_PlayBGAnimation, Temp_name_Variable_3) == 0x00001C, "Member 'WB_MoonAge_C_PlayBGAnimation::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_PlayBGAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000024, "Member 'WB_MoonAge_C_PlayBGAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_PlayBGAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000025, "Member 'WB_MoonAge_C_PlayBGAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_PlayBGAnimation, CallFunc_BooleanOR_ReturnValue) == 0x000026, "Member 'WB_MoonAge_C_PlayBGAnimation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_PlayBGAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000027, "Member 'WB_MoonAge_C_PlayBGAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_PlayBGAnimation, K2Node_Select_Default) == 0x000028, "Member 'WB_MoonAge_C_PlayBGAnimation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_PlayBGAnimation, CallFunc_Play_ReturnValue) == 0x000030, "Member 'WB_MoonAge_C_PlayBGAnimation::CallFunc_Play_ReturnValue' has a wrong offset!");

// Function WB_MoonAge.WB_MoonAge_C.getMoonAnimPackName
// 0x0098 (0x0098 - 0x0000)
struct WB_MoonAge_C_GetMoonAnimPackName final
{
public:
	E_MOON_AGE                                    InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_828B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   OutName;                                           // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MOON_AGE                                    Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_828C[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_14;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_15;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MoonAge_C_GetMoonAnimPackName) == 0x000004, "Wrong alignment on WB_MoonAge_C_GetMoonAnimPackName");
static_assert(sizeof(WB_MoonAge_C_GetMoonAnimPackName) == 0x000098, "Wrong size on WB_MoonAge_C_GetMoonAnimPackName");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, InType) == 0x000000, "Member 'WB_MoonAge_C_GetMoonAnimPackName::InType' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, OutName) == 0x000004, "Member 'WB_MoonAge_C_GetMoonAnimPackName::OutName' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, Temp_byte_Variable) == 0x00000C, "Member 'WB_MoonAge_C_GetMoonAnimPackName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, Temp_name_Variable) == 0x000010, "Member 'WB_MoonAge_C_GetMoonAnimPackName::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, Temp_name_Variable_1) == 0x000018, "Member 'WB_MoonAge_C_GetMoonAnimPackName::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, Temp_name_Variable_2) == 0x000020, "Member 'WB_MoonAge_C_GetMoonAnimPackName::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, Temp_name_Variable_3) == 0x000028, "Member 'WB_MoonAge_C_GetMoonAnimPackName::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, Temp_name_Variable_4) == 0x000030, "Member 'WB_MoonAge_C_GetMoonAnimPackName::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, Temp_name_Variable_5) == 0x000038, "Member 'WB_MoonAge_C_GetMoonAnimPackName::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, Temp_name_Variable_6) == 0x000040, "Member 'WB_MoonAge_C_GetMoonAnimPackName::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, Temp_name_Variable_7) == 0x000048, "Member 'WB_MoonAge_C_GetMoonAnimPackName::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, Temp_name_Variable_8) == 0x000050, "Member 'WB_MoonAge_C_GetMoonAnimPackName::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, Temp_name_Variable_9) == 0x000058, "Member 'WB_MoonAge_C_GetMoonAnimPackName::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, Temp_name_Variable_10) == 0x000060, "Member 'WB_MoonAge_C_GetMoonAnimPackName::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, Temp_name_Variable_11) == 0x000068, "Member 'WB_MoonAge_C_GetMoonAnimPackName::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, Temp_name_Variable_12) == 0x000070, "Member 'WB_MoonAge_C_GetMoonAnimPackName::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, Temp_name_Variable_13) == 0x000078, "Member 'WB_MoonAge_C_GetMoonAnimPackName::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, Temp_name_Variable_14) == 0x000080, "Member 'WB_MoonAge_C_GetMoonAnimPackName::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, Temp_name_Variable_15) == 0x000088, "Member 'WB_MoonAge_C_GetMoonAnimPackName::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonAnimPackName, K2Node_Select_Default) == 0x000090, "Member 'WB_MoonAge_C_GetMoonAnimPackName::K2Node_Select_Default' has a wrong offset!");

// Function WB_MoonAge.WB_MoonAge_C.changeMoonAge
// 0x0020 (0x0020 - 0x0000)
struct WB_MoonAge_C_ChangeMoonAge final
{
public:
	E_MOON_AGE                                    InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_828D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_getMoonAnimPackName_outName;              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_828E[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_getFontAnimPackName_outName;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_getMoonNumber_outNumber;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isShowNumber_outShow;                     // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MoonAge_C_ChangeMoonAge) == 0x000004, "Wrong alignment on WB_MoonAge_C_ChangeMoonAge");
static_assert(sizeof(WB_MoonAge_C_ChangeMoonAge) == 0x000020, "Wrong size on WB_MoonAge_C_ChangeMoonAge");
static_assert(offsetof(WB_MoonAge_C_ChangeMoonAge, InType) == 0x000000, "Member 'WB_MoonAge_C_ChangeMoonAge::InType' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ChangeMoonAge, CallFunc_getMoonAnimPackName_outName) == 0x000004, "Member 'WB_MoonAge_C_ChangeMoonAge::CallFunc_getMoonAnimPackName_outName' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ChangeMoonAge, CallFunc_Play_ReturnValue) == 0x00000C, "Member 'WB_MoonAge_C_ChangeMoonAge::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ChangeMoonAge, CallFunc_getFontAnimPackName_outName) == 0x000010, "Member 'WB_MoonAge_C_ChangeMoonAge::CallFunc_getFontAnimPackName_outName' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ChangeMoonAge, CallFunc_getMoonNumber_outNumber) == 0x000018, "Member 'WB_MoonAge_C_ChangeMoonAge::CallFunc_getMoonNumber_outNumber' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ChangeMoonAge, CallFunc_Play_ReturnValue_1) == 0x00001C, "Member 'WB_MoonAge_C_ChangeMoonAge::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_ChangeMoonAge, CallFunc_isShowNumber_outShow) == 0x00001D, "Member 'WB_MoonAge_C_ChangeMoonAge::CallFunc_isShowNumber_outShow' has a wrong offset!");

// Function WB_MoonAge.WB_MoonAge_C.setImageNumber
// 0x0030 (0x0030 - 0x0000)
struct WB_MoonAge_C_SetImageNumber final
{
public:
	class UImage*                                 InImage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InUPosition;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InVPosition;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MoonAge_C_SetImageNumber) == 0x000008, "Wrong alignment on WB_MoonAge_C_SetImageNumber");
static_assert(sizeof(WB_MoonAge_C_SetImageNumber) == 0x000030, "Wrong size on WB_MoonAge_C_SetImageNumber");
static_assert(offsetof(WB_MoonAge_C_SetImageNumber, InImage) == 0x000000, "Member 'WB_MoonAge_C_SetImageNumber::InImage' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_SetImageNumber, InUPosition) == 0x000008, "Member 'WB_MoonAge_C_SetImageNumber::InUPosition' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_SetImageNumber, InVPosition) == 0x00000C, "Member 'WB_MoonAge_C_SetImageNumber::InVPosition' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_SetImageNumber, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'WB_MoonAge_C_SetImageNumber::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_SetImageNumber, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000014, "Member 'WB_MoonAge_C_SetImageNumber::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_SetImageNumber, K2Node_MakeStruct_LinearColor) == 0x000018, "Member 'WB_MoonAge_C_SetImageNumber::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_SetImageNumber, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'WB_MoonAge_C_SetImageNumber::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WB_MoonAge.WB_MoonAge_C.getMoonNumber
// 0x0050 (0x0050 - 0x0000)
struct WB_MoonAge_C_GetMoonNumber final
{
public:
	E_MOON_AGE                                    InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_828F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OutNumber;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MOON_AGE                                    Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8290[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MoonAge_C_GetMoonNumber) == 0x000004, "Wrong alignment on WB_MoonAge_C_GetMoonNumber");
static_assert(sizeof(WB_MoonAge_C_GetMoonNumber) == 0x000050, "Wrong size on WB_MoonAge_C_GetMoonNumber");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, InType) == 0x000000, "Member 'WB_MoonAge_C_GetMoonNumber::InType' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, OutNumber) == 0x000004, "Member 'WB_MoonAge_C_GetMoonNumber::OutNumber' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, Temp_byte_Variable) == 0x000008, "Member 'WB_MoonAge_C_GetMoonNumber::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, Temp_int_Variable) == 0x00000C, "Member 'WB_MoonAge_C_GetMoonNumber::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, Temp_int_Variable_1) == 0x000010, "Member 'WB_MoonAge_C_GetMoonNumber::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, Temp_int_Variable_2) == 0x000014, "Member 'WB_MoonAge_C_GetMoonNumber::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, Temp_int_Variable_3) == 0x000018, "Member 'WB_MoonAge_C_GetMoonNumber::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, Temp_int_Variable_4) == 0x00001C, "Member 'WB_MoonAge_C_GetMoonNumber::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, Temp_int_Variable_5) == 0x000020, "Member 'WB_MoonAge_C_GetMoonNumber::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, Temp_int_Variable_6) == 0x000024, "Member 'WB_MoonAge_C_GetMoonNumber::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, Temp_int_Variable_7) == 0x000028, "Member 'WB_MoonAge_C_GetMoonNumber::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, Temp_int_Variable_8) == 0x00002C, "Member 'WB_MoonAge_C_GetMoonNumber::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, Temp_int_Variable_9) == 0x000030, "Member 'WB_MoonAge_C_GetMoonNumber::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, Temp_int_Variable_10) == 0x000034, "Member 'WB_MoonAge_C_GetMoonNumber::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, Temp_int_Variable_11) == 0x000038, "Member 'WB_MoonAge_C_GetMoonNumber::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, Temp_int_Variable_12) == 0x00003C, "Member 'WB_MoonAge_C_GetMoonNumber::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, Temp_int_Variable_13) == 0x000040, "Member 'WB_MoonAge_C_GetMoonNumber::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, Temp_int_Variable_14) == 0x000044, "Member 'WB_MoonAge_C_GetMoonNumber::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, Temp_int_Variable_15) == 0x000048, "Member 'WB_MoonAge_C_GetMoonNumber::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetMoonNumber, K2Node_Select_Default) == 0x00004C, "Member 'WB_MoonAge_C_GetMoonNumber::K2Node_Select_Default' has a wrong offset!");

// Function WB_MoonAge.WB_MoonAge_C.isShowNumber
// 0x0009 (0x0009 - 0x0000)
struct WB_MoonAge_C_IsShowNumber final
{
public:
	E_MOON_AGE                                    InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OutShow;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MoonAge_C_IsShowNumber) == 0x000001, "Wrong alignment on WB_MoonAge_C_IsShowNumber");
static_assert(sizeof(WB_MoonAge_C_IsShowNumber) == 0x000009, "Wrong size on WB_MoonAge_C_IsShowNumber");
static_assert(offsetof(WB_MoonAge_C_IsShowNumber, InType) == 0x000000, "Member 'WB_MoonAge_C_IsShowNumber::InType' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_IsShowNumber, OutShow) == 0x000001, "Member 'WB_MoonAge_C_IsShowNumber::OutShow' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_IsShowNumber, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'WB_MoonAge_C_IsShowNumber::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_IsShowNumber, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'WB_MoonAge_C_IsShowNumber::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_IsShowNumber, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000004, "Member 'WB_MoonAge_C_IsShowNumber::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_IsShowNumber, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x000005, "Member 'WB_MoonAge_C_IsShowNumber::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_IsShowNumber, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'WB_MoonAge_C_IsShowNumber::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_IsShowNumber, CallFunc_BooleanAND_ReturnValue_1) == 0x000007, "Member 'WB_MoonAge_C_IsShowNumber::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_IsShowNumber, CallFunc_BooleanAND_ReturnValue_2) == 0x000008, "Member 'WB_MoonAge_C_IsShowNumber::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function WB_MoonAge.WB_MoonAge_C.getFontAnimPackName
// 0x0098 (0x0098 - 0x0000)
struct WB_MoonAge_C_GetFontAnimPackName final
{
public:
	E_MOON_AGE                                    InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8291[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   OutName;                                           // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MOON_AGE                                    Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8292[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_14;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_15;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MoonAge_C_GetFontAnimPackName) == 0x000004, "Wrong alignment on WB_MoonAge_C_GetFontAnimPackName");
static_assert(sizeof(WB_MoonAge_C_GetFontAnimPackName) == 0x000098, "Wrong size on WB_MoonAge_C_GetFontAnimPackName");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, InType) == 0x000000, "Member 'WB_MoonAge_C_GetFontAnimPackName::InType' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, OutName) == 0x000004, "Member 'WB_MoonAge_C_GetFontAnimPackName::OutName' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, Temp_byte_Variable) == 0x00000C, "Member 'WB_MoonAge_C_GetFontAnimPackName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, Temp_name_Variable) == 0x000010, "Member 'WB_MoonAge_C_GetFontAnimPackName::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, Temp_name_Variable_1) == 0x000018, "Member 'WB_MoonAge_C_GetFontAnimPackName::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, Temp_name_Variable_2) == 0x000020, "Member 'WB_MoonAge_C_GetFontAnimPackName::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, Temp_name_Variable_3) == 0x000028, "Member 'WB_MoonAge_C_GetFontAnimPackName::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, Temp_name_Variable_4) == 0x000030, "Member 'WB_MoonAge_C_GetFontAnimPackName::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, Temp_name_Variable_5) == 0x000038, "Member 'WB_MoonAge_C_GetFontAnimPackName::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, Temp_name_Variable_6) == 0x000040, "Member 'WB_MoonAge_C_GetFontAnimPackName::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, Temp_name_Variable_7) == 0x000048, "Member 'WB_MoonAge_C_GetFontAnimPackName::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, Temp_name_Variable_8) == 0x000050, "Member 'WB_MoonAge_C_GetFontAnimPackName::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, Temp_name_Variable_9) == 0x000058, "Member 'WB_MoonAge_C_GetFontAnimPackName::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, Temp_name_Variable_10) == 0x000060, "Member 'WB_MoonAge_C_GetFontAnimPackName::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, Temp_name_Variable_11) == 0x000068, "Member 'WB_MoonAge_C_GetFontAnimPackName::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, Temp_name_Variable_12) == 0x000070, "Member 'WB_MoonAge_C_GetFontAnimPackName::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, Temp_name_Variable_13) == 0x000078, "Member 'WB_MoonAge_C_GetFontAnimPackName::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, Temp_name_Variable_14) == 0x000080, "Member 'WB_MoonAge_C_GetFontAnimPackName::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, Temp_name_Variable_15) == 0x000088, "Member 'WB_MoonAge_C_GetFontAnimPackName::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_GetFontAnimPackName, K2Node_Select_Default) == 0x000090, "Member 'WB_MoonAge_C_GetFontAnimPackName::K2Node_Select_Default' has a wrong offset!");

// Function WB_MoonAge.WB_MoonAge_C.checkVisibility
// 0x0007 (0x0007 - 0x0000)
struct WB_MoonAge_C_CheckVisibility final
{
public:
	ESlateVisibility                              WidgetVisibility;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MoonAgeState                                Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MoonAge_C_CheckVisibility) == 0x000001, "Wrong alignment on WB_MoonAge_C_CheckVisibility");
static_assert(sizeof(WB_MoonAge_C_CheckVisibility) == 0x000007, "Wrong size on WB_MoonAge_C_CheckVisibility");
static_assert(offsetof(WB_MoonAge_C_CheckVisibility, WidgetVisibility) == 0x000000, "Member 'WB_MoonAge_C_CheckVisibility::WidgetVisibility' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_CheckVisibility, Temp_byte_Variable) == 0x000001, "Member 'WB_MoonAge_C_CheckVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_CheckVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'WB_MoonAge_C_CheckVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_CheckVisibility, Temp_byte_Variable_2) == 0x000003, "Member 'WB_MoonAge_C_CheckVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_CheckVisibility, Temp_byte_Variable_3) == 0x000004, "Member 'WB_MoonAge_C_CheckVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_CheckVisibility, Temp_byte_Variable_4) == 0x000005, "Member 'WB_MoonAge_C_CheckVisibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_CheckVisibility, K2Node_Select_Default) == 0x000006, "Member 'WB_MoonAge_C_CheckVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WB_MoonAge.WB_MoonAge_C.changeState
// 0x0001 (0x0001 - 0x0000)
struct WB_MoonAge_C_ChangeState final
{
public:
	E_MoonAgeState                                InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MoonAge_C_ChangeState) == 0x000001, "Wrong alignment on WB_MoonAge_C_ChangeState");
static_assert(sizeof(WB_MoonAge_C_ChangeState) == 0x000001, "Wrong size on WB_MoonAge_C_ChangeState");
static_assert(offsetof(WB_MoonAge_C_ChangeState, InState) == 0x000000, "Member 'WB_MoonAge_C_ChangeState::InState' has a wrong offset!");

// Function WB_MoonAge.WB_MoonAge_C.IsPlayAnimation
// 0x0001 (0x0001 - 0x0000)
struct WB_MoonAge_C_IsPlayAnimation final
{
public:
	bool                                          OutPlay;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MoonAge_C_IsPlayAnimation) == 0x000001, "Wrong alignment on WB_MoonAge_C_IsPlayAnimation");
static_assert(sizeof(WB_MoonAge_C_IsPlayAnimation) == 0x000001, "Wrong size on WB_MoonAge_C_IsPlayAnimation");
static_assert(offsetof(WB_MoonAge_C_IsPlayAnimation, OutPlay) == 0x000000, "Member 'WB_MoonAge_C_IsPlayAnimation::OutPlay' has a wrong offset!");

// Function WB_MoonAge.WB_MoonAge_C.initializePosition
// 0x0010 (0x0010 - 0x0000)
struct WB_MoonAge_C_InitializePosition final
{
public:
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MoonAge_C_InitializePosition) == 0x000008, "Wrong alignment on WB_MoonAge_C_InitializePosition");
static_assert(sizeof(WB_MoonAge_C_InitializePosition) == 0x000010, "Wrong size on WB_MoonAge_C_InitializePosition");
static_assert(offsetof(WB_MoonAge_C_InitializePosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000000, "Member 'WB_MoonAge_C_InitializePosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MoonAge_C_InitializePosition, CallFunc_GetSSPPositionDataByPartsName_OutVec) == 0x000008, "Member 'WB_MoonAge_C_InitializePosition::CallFunc_GetSSPPositionDataByPartsName_OutVec' has a wrong offset!");

}

