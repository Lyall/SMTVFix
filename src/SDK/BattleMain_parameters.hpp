#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleMain

#include "Basic.hpp"

#include "BattleBGMType_structs.hpp"
#include "Project_structs.hpp"
#include "E_BTL_PTYPNL_TYPE_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BattleResidentEffect_structs.hpp"
#include "UMG_structs.hpp"
#include "E_MoonAgeAnimationState_structs.hpp"
#include "Engine_structs.hpp"
#include "BTL_DESC_structs.hpp"


namespace SDK::Params
{

// Function BattleMain.BattleMain_C.ExecuteUbergraph_BattleMain
// 0x0660 (0x0660 - 0x0000)
struct BattleMain_C_ExecuteUbergraph_BattleMain final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsUser_Widget;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMessage_C>  K2Node_DynamicCast_AsBPI_Battle_Message;           // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_1;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_1;             // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_2;                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BPI_GetBossRushFieldCtrl_Actor;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_2;             // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetBossRushFieldCtrl_Actor_1;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_LoadBossRushField_C> K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field;     // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_1;                       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0128(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInitialized_retValue;                   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EncountSceneCtrl_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Temp_wildcard_Variable;                            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_LoadBossRushField_C> K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_1;   // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_LoadBossRushField_C> K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_2;   // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_Completed_ReadyBossRushField_Completed; // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_LoadBossRushField_C> K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_3;   // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0xF];                                      // 0x01D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BPI_GetBossRushFieldPos_EncountPos;       // 0x01E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_BPI_GetBossRushFieldPos_LevelPos;         // 0x0210(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_3;                    // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_3;             // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetBossRushFieldCtrl_Actor_2;         // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_LoadBossRushField_C> K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_4;   // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_Completed_FinishBossRushField_Completed; // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_283[0x1];                                      // 0x0283(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_EncountID;                      // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventEncountData                      CallFunc_GetEvtEncountData_ReturnValue;            // 0x0288(0x0068)(ConstParm)
	int32                                         CallFunc_EncountIsEvent_ReturnValue;               // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsWB_Btl_Info_Mess;        // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_2;                // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtlInfoMess_C*                      CallFunc_Create_ReturnValue_1;                     // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventEncountData                      CallFunc_GetEvtEncountData_ReturnValue_1;          // 0x0328(0x0068)(ConstParm)
	bool                                          CallFunc_IsGameOver_retValue;                      // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventEncountData                      CallFunc_GetEvtEncountData_ReturnValue_2;          // 0x0398(0x0068)(ConstParm)
	class AActor*                                 CallFunc_GetMapCommon_rerutn_4;                    // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_4;             // 0x0410(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetBossRushFieldCtrl_Actor_3;         // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_2;                       // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TScriptInterface<class IBPI_LoadBossRushField_C> K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_5;   // 0x0438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBattleResultEnable_ReturnValue;        // 0x044A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44B[0x5];                                      // 0x044B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_PopResultMainActor_ReturnValue;           // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ResultMain_C*                       K2Node_DynamicCast_AsBP_Result_Main;               // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEndInTransition_IsEnd;               // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Initialize_Success;                       // 0x0462(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0463(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_464[0xC];                                      // 0x0464(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0470(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ResultMain_C*                       CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_5;                    // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_5;             // 0x04C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetBossRushFieldCtrl_Actor_4;         // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_LoadBossRushField_C> K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_6;   // 0x04E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_Completed_FinishBossRushField_Completed_1; // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x04F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInitialized_retValue_1;                 // 0x04F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaTime;                            // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebugMenuOpen_retValue;                 // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_3;                             // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsActor_1;                 // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_3;                // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_SetBossRushFieldCtrl_NewParam;        // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_531[0x3];                                      // 0x0531(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugAutoFirstUnLock_Ret;           // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_3;                       // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IS_SHIPPING_BUILD_ReturnValue;            // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0550(0x0010)(ZeroConstructor, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMouseCursorState                      CallFunc_PopShowMouseCursor_ReturnValue;           // 0x0568(0x0018)()
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bActive;                              // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_589[0x3];                                      // 0x0589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x058C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_SetMainWork_mainWork_CastInput;           // 0x05A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x05B0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x05C0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BattleCharaPanelCtrl_C*             K2Node_DynamicCast_AsBP_Battle_Chara_Panel_Ctrl;   // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharaPanelCtrl_C> K2Node_DynamicCast_AsBPI_Battle_Chara_Panel_Ctrl;  // 0x0610(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_621[0x7];                                      // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_ret;                    // 0x0628(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0638(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_IBattleCharaPanelSetBattleInterface_InBPIBattleMain_CastInput; // 0x0648(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_ExecuteUbergraph_BattleMain) == 0x000010, "Wrong alignment on BattleMain_C_ExecuteUbergraph_BattleMain");
static_assert(sizeof(BattleMain_C_ExecuteUbergraph_BattleMain) == 0x000660, "Wrong size on BattleMain_C_ExecuteUbergraph_BattleMain");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, EntryPoint) == 0x000000, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, Temp_class_Variable) == 0x000008, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_ClassDynamicCast_AsActor) == 0x000010, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_ClassDynamicCast_bSuccess) == 0x000018, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_CustomEvent_Loaded) == 0x000020, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, Temp_class_Variable_1) == 0x000028, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_ClassDynamicCast_AsUser_Widget) == 0x000030, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_ClassDynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_ClassDynamicCast_bSuccess_1) == 0x000038, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_Create_ReturnValue) == 0x000040, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_GetMapCommon_rerutn) == 0x000048, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000050, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_AsBPI_Battle_Message) == 0x000068, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_AsBPI_Battle_Message' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_AddToWidgetPrio_ReturnValue) == 0x000079, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_GetMapCommon_rerutn_1) == 0x000080, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_GetMapCommon_rerutn_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_AsBPI_Map_Common_1) == 0x000088, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_AsBPI_Map_Common_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_GetMapCommon_rerutn_2) == 0x0000A0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_GetMapCommon_rerutn_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_BPI_GetBossRushFieldCtrl_Actor) == 0x0000A8, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_BPI_GetBossRushFieldCtrl_Actor' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_AsBPI_Map_Common_2) == 0x0000B0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_AsBPI_Map_Common_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_bSuccess_3) == 0x0000C0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_BPI_GetBossRushFieldCtrl_Actor_1) == 0x0000C8, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_BPI_GetBossRushFieldCtrl_Actor_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field) == 0x0000D8, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_bSuccess_4) == 0x0000E8, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_IsValid_ReturnValue_1) == 0x0000E9, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_CustomEvent_Loaded_1) == 0x000120, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_CreateDelegate_OutputDelegate) == 0x000128, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_MakeTransform_ReturnValue_1) == 0x000140, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_IsInitialized_retValue) == 0x000170, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_IsInitialized_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000178, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_FinishSpawningActor_ReturnValue) == 0x000180, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, Temp_wildcard_Variable) == 0x000188, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_1) == 0x000190, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_bSuccess_5) == 0x0001A0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_2) == 0x0001A8, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_bSuccess_6) == 0x0001B8, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_BPI_Completed_ReadyBossRushField_Completed) == 0x0001B9, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_BPI_Completed_ReadyBossRushField_Completed' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_3) == 0x0001C0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_bSuccess_7) == 0x0001D0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_BPI_GetBossRushFieldPos_EncountPos) == 0x0001E0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_BPI_GetBossRushFieldPos_EncountPos' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_BPI_GetBossRushFieldPos_LevelPos) == 0x000210, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_BPI_GetBossRushFieldPos_LevelPos' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_IsValid_ReturnValue_2) == 0x000240, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_GetMapCommon_rerutn_3) == 0x000248, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_GetMapCommon_rerutn_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_AsBPI_Map_Common_3) == 0x000250, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_AsBPI_Map_Common_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_bSuccess_8) == 0x000260, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_BPI_GetBossRushFieldCtrl_Actor_2) == 0x000268, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_BPI_GetBossRushFieldCtrl_Actor_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_4) == 0x000270, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_bSuccess_9) == 0x000280, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_IsValid_ReturnValue_3) == 0x000281, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_BPI_Completed_FinishBossRushField_Completed) == 0x000282, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_BPI_Completed_FinishBossRushField_Completed' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_CustomEvent_EncountID) == 0x000284, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_CustomEvent_EncountID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_GetEvtEncountData_ReturnValue) == 0x000288, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_GetEvtEncountData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_EncountIsEvent_ReturnValue) == 0x0002F0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_EncountIsEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0002F4, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_CustomEvent_DestroyedActor) == 0x0002F8, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, Temp_class_Variable_2) == 0x000300, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_ClassDynamicCast_AsWB_Btl_Info_Mess) == 0x000308, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_ClassDynamicCast_AsWB_Btl_Info_Mess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_ClassDynamicCast_bSuccess_2) == 0x000310, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_ClassDynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_Add_IntInt_ReturnValue) == 0x000314, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_Create_ReturnValue_1) == 0x000318, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_Greater_IntInt_ReturnValue) == 0x000320, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_GetEvtEncountData_ReturnValue_1) == 0x000328, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_GetEvtEncountData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_IsGameOver_retValue) == 0x000390, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_IsGameOver_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_GetEvtEncountData_ReturnValue_2) == 0x000398, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_GetEvtEncountData_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_GetMapCommon_rerutn_4) == 0x000400, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_GetMapCommon_rerutn_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000408, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_AsBPI_Map_Common_4) == 0x000410, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_AsBPI_Map_Common_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_bSuccess_10) == 0x000420, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_BPI_GetBossRushFieldCtrl_Actor_3) == 0x000428, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_BPI_GetBossRushFieldCtrl_Actor_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_CustomEvent_Loaded_2) == 0x000430, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_5) == 0x000438, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_bSuccess_11) == 0x000448, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_IsValid_ReturnValue_4) == 0x000449, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_GetBattleResultEnable_ReturnValue) == 0x00044A, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_GetBattleResultEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_PopResultMainActor_ReturnValue) == 0x000450, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_PopResultMainActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_AsBP_Result_Main) == 0x000458, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_AsBP_Result_Main' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_bSuccess_12) == 0x000460, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_GetIsEndInTransition_IsEnd) == 0x000461, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_GetIsEndInTransition_IsEnd' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_Initialize_Success) == 0x000462, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_Initialize_Success' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_IsValid_ReturnValue_5) == 0x000463, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_MakeTransform_ReturnValue_2) == 0x000470, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0004A0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0004A8, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_Add_IntInt_ReturnValue_1) == 0x0004B0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_GetMapCommon_rerutn_5) == 0x0004B8, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_GetMapCommon_rerutn_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_AsBPI_Map_Common_5) == 0x0004C0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_AsBPI_Map_Common_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_bSuccess_13) == 0x0004D0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_BPI_GetBossRushFieldCtrl_Actor_4) == 0x0004D8, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_BPI_GetBossRushFieldCtrl_Actor_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_6) == 0x0004E0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_AsBPI_Load_Boss_Rush_Field_6' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_bSuccess_14) == 0x0004F0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_BPI_Completed_FinishBossRushField_Completed_1) == 0x0004F1, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_BPI_Completed_FinishBossRushField_Completed_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_IsValid_ReturnValue_6) == 0x0004F2, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_IsInitialized_retValue_1) == 0x0004F3, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_IsInitialized_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_Event_DeltaTime) == 0x0004F4, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_IsDebugMenuOpen_retValue) == 0x0004F8, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_IsDebugMenuOpen_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, Temp_class_Variable_3) == 0x000500, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, Temp_int_Variable) == 0x000508, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_ClassDynamicCast_AsActor_1) == 0x000510, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_ClassDynamicCast_AsActor_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_ClassDynamicCast_bSuccess_3) == 0x000518, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_ClassDynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000520, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x000528, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_BPI_SetBossRushFieldCtrl_NewParam) == 0x000530, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_BPI_SetBossRushFieldCtrl_NewParam' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, Temp_int_Variable_1) == 0x000534, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_BattleDebugAutoFirstUnLock_Ret) == 0x000538, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_BattleDebugAutoFirstUnLock_Ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_CustomEvent_Loaded_3) == 0x000540, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_IS_SHIPPING_BUILD_ReturnValue) == 0x000548, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_IS_SHIPPING_BUILD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_Event_DeltaSeconds) == 0x00054C, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_CreateDelegate_OutputDelegate_1) == 0x000550, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_Event_EndPlayReason) == 0x000560, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_PopShowMouseCursor_ReturnValue) == 0x000568, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_PopShowMouseCursor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_Get_ReturnValue) == 0x000580, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_Event_bActive) == 0x000588, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_Event_bActive' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_CreateDelegate_OutputDelegate_2) == 0x00058C, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_SetMainWork_mainWork_CastInput) == 0x0005A0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_SetMainWork_mainWork_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_CreateDelegate_OutputDelegate_3) == 0x0005B0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_MakeTransform_ReturnValue_3) == 0x0005C0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x0005F0, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x0005F8, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_AsBP_Battle_Chara_Panel_Ctrl) == 0x000600, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_AsBP_Battle_Chara_Panel_Ctrl' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_bSuccess_15) == 0x000608, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_AsBPI_Battle_Chara_Panel_Ctrl) == 0x000610, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_AsBPI_Battle_Chara_Panel_Ctrl' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_DynamicCast_bSuccess_16) == 0x000620, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_BI_GetPartySystem_ret) == 0x000628, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_BI_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, K2Node_CreateDelegate_OutputDelegate_4) == 0x000638, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ExecuteUbergraph_BattleMain, CallFunc_IBattleCharaPanelSetBattleInterface_InBPIBattleMain_CastInput) == 0x000648, "Member 'BattleMain_C_ExecuteUbergraph_BattleMain::CallFunc_IBattleCharaPanelSetBattleInterface_InBPIBattleMain_CastInput' has a wrong offset!");

// Function BattleMain.BattleMain_C.OnWindowActivationChanged
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_OnWindowActivationChanged final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_OnWindowActivationChanged) == 0x000001, "Wrong alignment on BattleMain_C_OnWindowActivationChanged");
static_assert(sizeof(BattleMain_C_OnWindowActivationChanged) == 0x000001, "Wrong size on BattleMain_C_OnWindowActivationChanged");
static_assert(offsetof(BattleMain_C_OnWindowActivationChanged, bActive) == 0x000000, "Member 'BattleMain_C_OnWindowActivationChanged::bActive' has a wrong offset!");

// Function BattleMain.BattleMain_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BattleMain_C_ReceiveEndPlay");
static_assert(sizeof(BattleMain_C_ReceiveEndPlay) == 0x000001, "Wrong size on BattleMain_C_ReceiveEndPlay");
static_assert(offsetof(BattleMain_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BattleMain_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BattleMain.BattleMain_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BattleMain_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_ReceiveTick) == 0x000004, "Wrong alignment on BattleMain_C_ReceiveTick");
static_assert(sizeof(BattleMain_C_ReceiveTick) == 0x000004, "Wrong size on BattleMain_C_ReceiveTick");
static_assert(offsetof(BattleMain_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BattleMain_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BattleMain.BattleMain_C.BP_TickMainCalcAfter
// 0x0004 (0x0004 - 0x0000)
struct BattleMain_C_BP_TickMainCalcAfter final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BP_TickMainCalcAfter) == 0x000004, "Wrong alignment on BattleMain_C_BP_TickMainCalcAfter");
static_assert(sizeof(BattleMain_C_BP_TickMainCalcAfter) == 0x000004, "Wrong size on BattleMain_C_BP_TickMainCalcAfter");
static_assert(offsetof(BattleMain_C_BP_TickMainCalcAfter, DeltaTime) == 0x000000, "Member 'BattleMain_C_BP_TickMainCalcAfter::DeltaTime' has a wrong offset!");

// Function BattleMain.BattleMain_C.Evt_RenzokuEncountSceneCtrlFinished
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_Evt_RenzokuEncountSceneCtrlFinished final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_Evt_RenzokuEncountSceneCtrlFinished) == 0x000008, "Wrong alignment on BattleMain_C_Evt_RenzokuEncountSceneCtrlFinished");
static_assert(sizeof(BattleMain_C_Evt_RenzokuEncountSceneCtrlFinished) == 0x000008, "Wrong size on BattleMain_C_Evt_RenzokuEncountSceneCtrlFinished");
static_assert(offsetof(BattleMain_C_Evt_RenzokuEncountSceneCtrlFinished, DestroyedActor) == 0x000000, "Member 'BattleMain_C_Evt_RenzokuEncountSceneCtrlFinished::DestroyedActor' has a wrong offset!");

// Function BattleMain.BattleMain_C.Evt_LoadRenzokuBattleField
// 0x0004 (0x0004 - 0x0000)
struct BattleMain_C_Evt_LoadRenzokuBattleField final
{
public:
	int32                                         EncountID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_Evt_LoadRenzokuBattleField) == 0x000004, "Wrong alignment on BattleMain_C_Evt_LoadRenzokuBattleField");
static_assert(sizeof(BattleMain_C_Evt_LoadRenzokuBattleField) == 0x000004, "Wrong size on BattleMain_C_Evt_LoadRenzokuBattleField");
static_assert(offsetof(BattleMain_C_Evt_LoadRenzokuBattleField, EncountID) == 0x000000, "Member 'BattleMain_C_Evt_LoadRenzokuBattleField::EncountID' has a wrong offset!");

// Function BattleMain.BattleMain_C.OnLoaded_4F43FD914A42137B7BDAC2B2508E40A3
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_OnLoaded_4F43FD914A42137B7BDAC2B2508E40A3 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_OnLoaded_4F43FD914A42137B7BDAC2B2508E40A3) == 0x000008, "Wrong alignment on BattleMain_C_OnLoaded_4F43FD914A42137B7BDAC2B2508E40A3");
static_assert(sizeof(BattleMain_C_OnLoaded_4F43FD914A42137B7BDAC2B2508E40A3) == 0x000008, "Wrong size on BattleMain_C_OnLoaded_4F43FD914A42137B7BDAC2B2508E40A3");
static_assert(offsetof(BattleMain_C_OnLoaded_4F43FD914A42137B7BDAC2B2508E40A3, Loaded) == 0x000000, "Member 'BattleMain_C_OnLoaded_4F43FD914A42137B7BDAC2B2508E40A3::Loaded' has a wrong offset!");

// Function BattleMain.BattleMain_C.OnLoaded_835A81AF4678BE6200179DA326564AD5
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_OnLoaded_835A81AF4678BE6200179DA326564AD5 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_OnLoaded_835A81AF4678BE6200179DA326564AD5) == 0x000008, "Wrong alignment on BattleMain_C_OnLoaded_835A81AF4678BE6200179DA326564AD5");
static_assert(sizeof(BattleMain_C_OnLoaded_835A81AF4678BE6200179DA326564AD5) == 0x000008, "Wrong size on BattleMain_C_OnLoaded_835A81AF4678BE6200179DA326564AD5");
static_assert(offsetof(BattleMain_C_OnLoaded_835A81AF4678BE6200179DA326564AD5, Loaded) == 0x000000, "Member 'BattleMain_C_OnLoaded_835A81AF4678BE6200179DA326564AD5::Loaded' has a wrong offset!");

// Function BattleMain.BattleMain_C.OnLoaded_21384D1541B55E375CB766960F4D5D72
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_OnLoaded_21384D1541B55E375CB766960F4D5D72 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_OnLoaded_21384D1541B55E375CB766960F4D5D72) == 0x000008, "Wrong alignment on BattleMain_C_OnLoaded_21384D1541B55E375CB766960F4D5D72");
static_assert(sizeof(BattleMain_C_OnLoaded_21384D1541B55E375CB766960F4D5D72) == 0x000008, "Wrong size on BattleMain_C_OnLoaded_21384D1541B55E375CB766960F4D5D72");
static_assert(offsetof(BattleMain_C_OnLoaded_21384D1541B55E375CB766960F4D5D72, Loaded) == 0x000000, "Member 'BattleMain_C_OnLoaded_21384D1541B55E375CB766960F4D5D72::Loaded' has a wrong offset!");

// Function BattleMain.BattleMain_C.OnLoaded_57169B0B42D693905D24FCB1D48A2BBA
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_OnLoaded_57169B0B42D693905D24FCB1D48A2BBA final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_OnLoaded_57169B0B42D693905D24FCB1D48A2BBA) == 0x000008, "Wrong alignment on BattleMain_C_OnLoaded_57169B0B42D693905D24FCB1D48A2BBA");
static_assert(sizeof(BattleMain_C_OnLoaded_57169B0B42D693905D24FCB1D48A2BBA) == 0x000008, "Wrong size on BattleMain_C_OnLoaded_57169B0B42D693905D24FCB1D48A2BBA");
static_assert(offsetof(BattleMain_C_OnLoaded_57169B0B42D693905D24FCB1D48A2BBA, Loaded) == 0x000000, "Member 'BattleMain_C_OnLoaded_57169B0B42D693905D24FCB1D48A2BBA::Loaded' has a wrong offset!");

// Function BattleMain.BattleMain_C.UserConstructionScript
// 0x00A0 (0x00A0 - 0x0000)
struct BattleMain_C_UserConstructionScript final
{
public:
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0010(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_UserConstructionScript) == 0x000008, "Wrong alignment on BattleMain_C_UserConstructionScript");
static_assert(sizeof(BattleMain_C_UserConstructionScript) == 0x0000A0, "Wrong size on BattleMain_C_UserConstructionScript");
static_assert(offsetof(BattleMain_C_UserConstructionScript, CallFunc_GetObjectName_ReturnValue) == 0x000000, "Member 'BattleMain_C_UserConstructionScript::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UserConstructionScript, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000010, "Member 'BattleMain_C_UserConstructionScript::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UserConstructionScript, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000098, "Member 'BattleMain_C_UserConstructionScript::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.Seq Step Pre Func
// 0x00B8 (0x00B8 - 0x0000)
struct BattleMain_C_Seq_Step_Pre_Func final
{
public:
	class FString                                 Lo_label;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 NewLocalVar_1;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_taskWait;                                       // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 CallFunc_GetSideListDevilIDList_ReturnValue;       // 0x0030(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsExistUniqueSkill_Exsit;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IBattleCharaPanelIsFinishedInitialized_OutFinished; // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMID_BattleMapDark_MID;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_DrawPlayerUpliftingGauge_Ret;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EncountIsRoomBoss_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEnemyLeaderIndex_retValue;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInitialized_retValue;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_GetEncountID_EncountID;                // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_GetEncountID_IsEvent;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_Seq_Step_Pre_Func) == 0x000008, "Wrong alignment on BattleMain_C_Seq_Step_Pre_Func");
static_assert(sizeof(BattleMain_C_Seq_Step_Pre_Func) == 0x0000B8, "Wrong size on BattleMain_C_Seq_Step_Pre_Func");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, Lo_label) == 0x000000, "Member 'BattleMain_C_Seq_Step_Pre_Func::Lo_label' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, NewLocalVar_1) == 0x000010, "Member 'BattleMain_C_Seq_Step_Pre_Func::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, Lo_taskWait) == 0x000020, "Member 'BattleMain_C_Seq_Step_Pre_Func::Lo_taskWait' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_GetSideListDevilIDList_ReturnValue) == 0x000030, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_GetSideListDevilIDList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_IsExistUniqueSkill_Exsit) == 0x000040, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_IsExistUniqueSkill_Exsit' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_IBattleCharaPanelIsFinishedInitialized_OutFinished) == 0x000041, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_IBattleCharaPanelIsFinishedInitialized_OutFinished' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_GetMID_BattleMapDark_MID) == 0x000048, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_GetMID_BattleMapDark_MID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_BI_DrawPlayerUpliftingGauge_Ret) == 0x000050, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_BI_DrawPlayerUpliftingGauge_Ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000054, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000058, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, K2Node_DynamicCast_AsActor) == 0x000068, "Member 'BattleMain_C_Seq_Step_Pre_Func::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BattleMain_C_Seq_Step_Pre_Func::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_IsValid_ReturnValue_2) == 0x000072, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_BooleanAND_ReturnValue) == 0x000073, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000078, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_BooleanAND_ReturnValue_1) == 0x000088, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_Array_Get_Item) == 0x000090, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_EncountIsRoomBoss_ReturnValue) == 0x000098, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_EncountIsRoomBoss_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_GetEnemyLeaderIndex_retValue) == 0x00009C, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_GetEnemyLeaderIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_GetPartyUnit_retValue) == 0x0000A0, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_IsInitialized_retValue) == 0x0000A8, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_IsInitialized_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_BI_GetEncountID_EncountID) == 0x0000AC, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_BI_GetEncountID_EncountID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_BI_GetEncountID_IsEvent) == 0x0000B0, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_BI_GetEncountID_IsEvent' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Seq_Step_Pre_Func, CallFunc_BooleanAND_ReturnValue_2) == 0x0000B1, "Member 'BattleMain_C_Seq_Step_Pre_Func::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepRenzokuFunc
// 0x03B0 (0x03B0 - 0x0000)
struct BattleMain_C_SetStepRenzokuFunc final
{
public:
	TArray<struct FBtlParty>                      Lo_PartyData;                                      // 0x0000(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_IsEventBattle;                                  // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_EnemyNum;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_EnemyList;                                      // 0x0018(0x0010)(Edit, BlueprintVisible)
	class AEnemySidePat_C*                        Lo_Pos;                                            // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                Lo_PosActor;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<int32>                                 Lo_WaitTask;                                       // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_Array_Get_Item;                           // 0x0060(0x0320)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_PartyPanelUpDataChara_BtlPartyData_retValue; // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtlParty>                      CallFunc_GetSideIsInFieldPartyData_ReturnValue;    // 0x0390(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBattleFlag_ReturnValue;              // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_EndAutoBattle_NoUse;                   // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SetStepRenzokuFunc) == 0x000010, "Wrong alignment on BattleMain_C_SetStepRenzokuFunc");
static_assert(sizeof(BattleMain_C_SetStepRenzokuFunc) == 0x0003B0, "Wrong size on BattleMain_C_SetStepRenzokuFunc");
static_assert(offsetof(BattleMain_C_SetStepRenzokuFunc, Lo_PartyData) == 0x000000, "Member 'BattleMain_C_SetStepRenzokuFunc::Lo_PartyData' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepRenzokuFunc, Lo_IsEventBattle) == 0x000010, "Member 'BattleMain_C_SetStepRenzokuFunc::Lo_IsEventBattle' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepRenzokuFunc, Lo_EnemyNum) == 0x000014, "Member 'BattleMain_C_SetStepRenzokuFunc::Lo_EnemyNum' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepRenzokuFunc, Lo_EnemyList) == 0x000018, "Member 'BattleMain_C_SetStepRenzokuFunc::Lo_EnemyList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepRenzokuFunc, Lo_Pos) == 0x000028, "Member 'BattleMain_C_SetStepRenzokuFunc::Lo_Pos' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepRenzokuFunc, Lo_PosActor) == 0x000030, "Member 'BattleMain_C_SetStepRenzokuFunc::Lo_PosActor' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepRenzokuFunc, Lo_WaitTask) == 0x000040, "Member 'BattleMain_C_SetStepRenzokuFunc::Lo_WaitTask' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepRenzokuFunc, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BattleMain_C_SetStepRenzokuFunc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepRenzokuFunc, CallFunc_Array_Get_Item) == 0x000060, "Member 'BattleMain_C_SetStepRenzokuFunc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepRenzokuFunc, CallFunc_Array_Length_ReturnValue) == 0x000380, "Member 'BattleMain_C_SetStepRenzokuFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepRenzokuFunc, CallFunc_BI_PartyPanelUpDataChara_BtlPartyData_retValue) == 0x000384, "Member 'BattleMain_C_SetStepRenzokuFunc::CallFunc_BI_PartyPanelUpDataChara_BtlPartyData_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepRenzokuFunc, Temp_int_Loop_Counter_Variable) == 0x000388, "Member 'BattleMain_C_SetStepRenzokuFunc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepRenzokuFunc, CallFunc_GetSideIsInFieldPartyData_ReturnValue) == 0x000390, "Member 'BattleMain_C_SetStepRenzokuFunc::CallFunc_GetSideIsInFieldPartyData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepRenzokuFunc, CallFunc_Less_IntInt_ReturnValue) == 0x0003A0, "Member 'BattleMain_C_SetStepRenzokuFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepRenzokuFunc, CallFunc_Add_IntInt_ReturnValue) == 0x0003A4, "Member 'BattleMain_C_SetStepRenzokuFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepRenzokuFunc, CallFunc_CheckBattleFlag_ReturnValue) == 0x0003A8, "Member 'BattleMain_C_SetStepRenzokuFunc::CallFunc_CheckBattleFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepRenzokuFunc, CallFunc_BI_EndAutoBattle_NoUse) == 0x0003A9, "Member 'BattleMain_C_SetStepRenzokuFunc::CallFunc_BI_EndAutoBattle_NoUse' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepRenzokuFunc
// 0x0430 (0x0430 - 0x0000)
struct BattleMain_C_SeqStepRenzokuFunc final
{
public:
	bool                                          Lo_IsEventBattle;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_EnemyNum;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_EnemyList;                                      // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<class ACharaBase_C*>                   Lo_EnemyRaw;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentBGMID_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_DrawPlayerUpliftingGauge_Ret;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_CheckContinuousBGMBattle_IsContinuous; // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionDesc                       K2Node_MakeStruct_SkillActionDesc;                 // 0x0060(0x0090)()
	bool                                          CallFunc_IsExistUniqueSkill_Exsit;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleField_C>    CallFunc_GetBattleField_retValue;                  // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetCurrentBGMID_ReturnValue_1;            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleSoundManager_C> CallFunc_BI_ChangeBGM_self_CastInput;              // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_ChangeBGM_Valid;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBattleBGMType                                CallFunc_GetCurrentBGMType_Type;                   // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleSoundManager_C> CallFunc_BI_ChangeBGM_self_CastInput_1;            // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_ChangeBGM_Valid_1;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleSoundManager_C> CallFunc_BI_ChangeBGM_self_CastInput_2;            // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_ChangeBGM_Valid_2;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_EncountIsEvent_ReturnValue;               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBattleBGMID_BGM_ID;                    // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_EncountIsEvent_ReturnValue_1;             // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EncountActor_New_C> K2Node_DynamicCast_AsBPI_Encount_Actor_New;        // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_LoadEventSubLevel_NoUse;               // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EncountActor_New_C> K2Node_DynamicCast_AsBPI_Encount_Actor_New_1;      // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EncountActor_New_C> K2Node_DynamicCast_AsBPI_Encount_Actor_New_2;      // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x01C0(0x0010)(ReferenceParm)
	E_BTL_ENCOUNT_SPAWN                           CallFunc_BI_CheckType_Type;                        // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_SetEncountID_NoUse;                    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleField_C>    CallFunc_GetBattleField_retValue_1;                // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventEncountData                      CallFunc_GetEvtEncountData_ReturnValue;            // 0x0228(0x0068)(ConstParm)
	struct FOneEncountData                        CallFunc_GetEncountData_ReturnValue;               // 0x0290(0x0040)(ConstParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E2[0x2];                                      // 0x02E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFinished_retValue;                      // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0300(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABeginRenzokuEncount_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EncountActor_New_C> K2Node_DynamicCast_AsBPI_Encount_Actor_New_3;      // 0x0348(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_UnloadPreviousEventSubLevel_NoUse;     // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A[0x6];                                      // 0x035A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EncountActor_New_C> K2Node_DynamicCast_AsBPI_Encount_Actor_New_4;      // 0x0360(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetBossRoomBattle_NoUse;               // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372[0x6];                                      // 0x0372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EncountActor_New_C> K2Node_DynamicCast_AsBPI_Encount_Actor_New_5;      // 0x0378(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetBossRoomBattle_NoUse_1;             // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A[0x6];                                      // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EncountActor_New_C> K2Node_DynamicCast_AsBPI_Encount_Actor_New_6;      // 0x0390(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_NoLoadMakeEnemy_NoUse;                 // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2[0x6];                                      // 0x03A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_1;                    // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleField_C>    CallFunc_GetBattleField_retValue_2;                // 0x03B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_1;             // 0x03C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEndPrepareRenzokuBattle_IsDone;         // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D2[0x6];                                      // 0x03D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetEventBattleActor_List;                 // 0x03D8(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x3];                                      // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_405[0x3];                                      // 0x0405(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x040C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40D[0x3];                                      // 0x040D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharaBase_C*>                   CallFunc_GetRenzokuBattleEnemy_Enemy;              // 0x0410(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetRenzokuBattleEnemy_EncountID;          // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_EncountIsEvent_ReturnValue_2;             // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MakeRenzokuBattle_retValue;               // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SeqStepRenzokuFunc) == 0x000010, "Wrong alignment on BattleMain_C_SeqStepRenzokuFunc");
static_assert(sizeof(BattleMain_C_SeqStepRenzokuFunc) == 0x000430, "Wrong size on BattleMain_C_SeqStepRenzokuFunc");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, Lo_IsEventBattle) == 0x000000, "Member 'BattleMain_C_SeqStepRenzokuFunc::Lo_IsEventBattle' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, Lo_EnemyNum) == 0x000004, "Member 'BattleMain_C_SeqStepRenzokuFunc::Lo_EnemyNum' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, Lo_EnemyList) == 0x000008, "Member 'BattleMain_C_SeqStepRenzokuFunc::Lo_EnemyList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, Lo_EnemyRaw) == 0x000018, "Member 'BattleMain_C_SeqStepRenzokuFunc::Lo_EnemyRaw' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BattleMain_C_SeqStepRenzokuFunc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BattleMain_C_SeqStepRenzokuFunc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'BattleMain_C_SeqStepRenzokuFunc::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'BattleMain_C_SeqStepRenzokuFunc::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, Temp_int_Loop_Counter_Variable_2) == 0x000040, "Member 'BattleMain_C_SeqStepRenzokuFunc::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Add_IntInt_ReturnValue_2) == 0x000044, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, Temp_int_Array_Index_Variable_2) == 0x000048, "Member 'BattleMain_C_SeqStepRenzokuFunc::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GetCurrentBGMID_ReturnValue) == 0x00004C, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GetCurrentBGMID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_BI_DrawPlayerUpliftingGauge_Ret) == 0x000050, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_BI_DrawPlayerUpliftingGauge_Ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GetHeroIndex_ReturnValue) == 0x000054, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GetHeroIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_BI_CheckContinuousBGMBattle_IsContinuous) == 0x000058, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_BI_CheckContinuousBGMBattle_IsContinuous' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_MakeStruct_SkillActionDesc) == 0x000060, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_MakeStruct_SkillActionDesc' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_IsExistUniqueSkill_Exsit) == 0x0000F0, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_IsExistUniqueSkill_Exsit' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GetBattleField_retValue) == 0x0000F8, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GetBattleField_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GetCurrentBGMID_ReturnValue_1) == 0x000108, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GetCurrentBGMID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_BI_ChangeBGM_self_CastInput) == 0x000110, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_BI_ChangeBGM_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_BI_ChangeBGM_Valid) == 0x000120, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_BI_ChangeBGM_Valid' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GetCurrentBGMType_Type) == 0x000121, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GetCurrentBGMType_Type' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_BI_ChangeBGM_self_CastInput_1) == 0x000128, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_BI_ChangeBGM_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_BI_ChangeBGM_Valid_1) == 0x000138, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_BI_ChangeBGM_Valid_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000139, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_BI_ChangeBGM_self_CastInput_2) == 0x000140, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_BI_ChangeBGM_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_BI_ChangeBGM_Valid_2) == 0x000150, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_BI_ChangeBGM_Valid_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_EncountIsEvent_ReturnValue) == 0x000154, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_EncountIsEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000158, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GetBattleBGMID_BGM_ID) == 0x00015C, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GetBattleBGMID_BGM_ID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_BooleanAND_ReturnValue) == 0x000160, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Add_IntInt_ReturnValue_3) == 0x000164, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, Temp_int_Variable) == 0x000168, "Member 'BattleMain_C_SeqStepRenzokuFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_EncountIsEvent_ReturnValue_1) == 0x00016C, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_EncountIsEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000170, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_AsBPI_Encount_Actor_New) == 0x000178, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_AsBPI_Encount_Actor_New' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_bSuccess) == 0x000188, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_BI_LoadEventSubLevel_NoUse) == 0x000189, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_BI_LoadEventSubLevel_NoUse' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_AsBPI_Encount_Actor_New_1) == 0x000190, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_AsBPI_Encount_Actor_New_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_bSuccess_1) == 0x0001A0, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_AsBPI_Encount_Actor_New_2) == 0x0001A8, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_AsBPI_Encount_Actor_New_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_bSuccess_2) == 0x0001B8, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GetAllActorsWithInterface_OutActors) == 0x0001C0, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_BI_CheckType_Type) == 0x0001D0, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_BI_CheckType_Type' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Array_Get_Item) == 0x0001D8, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001E0, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GetMapCommon_rerutn) == 0x0001E8, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_AsBPI_Map_Common) == 0x0001F0, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_bSuccess_3) == 0x000200, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, Temp_int_Variable_1) == 0x000204, "Member 'BattleMain_C_SeqStepRenzokuFunc::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_BI_SetEncountID_NoUse) == 0x000208, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_BI_SetEncountID_NoUse' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GetBattleField_retValue_1) == 0x000210, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GetBattleField_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Array_Length_ReturnValue) == 0x000220, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Array_Length_ReturnValue_1) == 0x000224, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GetEvtEncountData_ReturnValue) == 0x000228, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GetEvtEncountData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GetEncountData_ReturnValue) == 0x000290, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GetEncountData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Array_Get_Item_1) == 0x0002D0, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Array_Add_ReturnValue) == 0x0002D4, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Array_Get_Item_2) == 0x0002D8, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Array_Length_ReturnValue_2) == 0x0002DC, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Greater_IntInt_ReturnValue) == 0x0002E0, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Less_IntInt_ReturnValue) == 0x0002E1, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Array_Add_ReturnValue_1) == 0x0002E4, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0002E8, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Array_Length_ReturnValue_3) == 0x0002EC, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002F0, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0002F4, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Add_IntInt_ReturnValue_4) == 0x0002F8, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_IsFinished_retValue) == 0x0002FC, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_IsFinished_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_MakeTransform_ReturnValue) == 0x000300, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000330, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_SwitchInteger_CmpSuccess) == 0x000338, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_FinishSpawningActor_ReturnValue) == 0x000340, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_AsBPI_Encount_Actor_New_3) == 0x000348, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_AsBPI_Encount_Actor_New_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_bSuccess_4) == 0x000358, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_BI_UnloadPreviousEventSubLevel_NoUse) == 0x000359, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_BI_UnloadPreviousEventSubLevel_NoUse' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_AsBPI_Encount_Actor_New_4) == 0x000360, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_AsBPI_Encount_Actor_New_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_bSuccess_5) == 0x000370, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_BI_SetBossRoomBattle_NoUse) == 0x000371, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_BI_SetBossRoomBattle_NoUse' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_AsBPI_Encount_Actor_New_5) == 0x000378, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_AsBPI_Encount_Actor_New_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_bSuccess_6) == 0x000388, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_BI_SetBossRoomBattle_NoUse_1) == 0x000389, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_BI_SetBossRoomBattle_NoUse_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_AsBPI_Encount_Actor_New_6) == 0x000390, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_AsBPI_Encount_Actor_New_6' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_bSuccess_7) == 0x0003A0, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_BI_NoLoadMakeEnemy_NoUse) == 0x0003A1, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_BI_NoLoadMakeEnemy_NoUse' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GetMapCommon_rerutn_1) == 0x0003A8, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GetMapCommon_rerutn_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GetBattleField_retValue_2) == 0x0003B0, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GetBattleField_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_AsBPI_Map_Common_1) == 0x0003C0, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_AsBPI_Map_Common_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_bSuccess_8) == 0x0003D0, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_IsEndPrepareRenzokuBattle_IsDone) == 0x0003D1, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_IsEndPrepareRenzokuBattle_IsDone' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GetEventBattleActor_List) == 0x0003D8, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GetEventBattleActor_List' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Array_Get_Item_3) == 0x0003E8, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_AsChara_Base) == 0x0003F0, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, K2Node_DynamicCast_bSuccess_9) == 0x0003F8, "Member 'BattleMain_C_SeqStepRenzokuFunc::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Array_Length_ReturnValue_4) == 0x0003FC, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Array_Add_ReturnValue_2) == 0x000400, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Less_IntInt_ReturnValue_2) == 0x000404, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Array_Length_ReturnValue_5) == 0x000408, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Greater_IntInt_ReturnValue_2) == 0x00040C, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GetRenzokuBattleEnemy_Enemy) == 0x000410, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GetRenzokuBattleEnemy_Enemy' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_GetRenzokuBattleEnemy_EncountID) == 0x000420, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_GetRenzokuBattleEnemy_EncountID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_EncountIsEvent_ReturnValue_2) == 0x000424, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_EncountIsEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000428, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepRenzokuFunc, CallFunc_MakeRenzokuBattle_retValue) == 0x000429, "Member 'BattleMain_C_SeqStepRenzokuFunc::CallFunc_MakeRenzokuBattle_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BattleStart
// 0x00D0 (0x00D0 - 0x0000)
struct BattleMain_C_BattleStart final
{
public:
	struct FBTL_DESC                              InDesc;                                            // 0x0000(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BattleStart) == 0x000010, "Wrong alignment on BattleMain_C_BattleStart");
static_assert(sizeof(BattleMain_C_BattleStart) == 0x0000D0, "Wrong size on BattleMain_C_BattleStart");
static_assert(offsetof(BattleMain_C_BattleStart, InDesc) == 0x000000, "Member 'BattleMain_C_BattleStart::InDesc' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepExitFunc
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_SetStepExitFunc final
{
public:
	bool                                          CallFunc_ExistPushedResultMainActor_ReturnValue;   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FadeOut_Black_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SetStepExitFunc) == 0x000001, "Wrong alignment on BattleMain_C_SetStepExitFunc");
static_assert(sizeof(BattleMain_C_SetStepExitFunc) == 0x000002, "Wrong size on BattleMain_C_SetStepExitFunc");
static_assert(offsetof(BattleMain_C_SetStepExitFunc, CallFunc_ExistPushedResultMainActor_ReturnValue) == 0x000000, "Member 'BattleMain_C_SetStepExitFunc::CallFunc_ExistPushedResultMainActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepExitFunc, CallFunc_FadeOut_Black_ReturnValue) == 0x000001, "Member 'BattleMain_C_SetStepExitFunc::CallFunc_FadeOut_Black_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepExitFunc
// 0x00C0 (0x00C0 - 0x0000)
struct BattleMain_C_SeqStepExitFunc final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGardenTalkPointManager*                CallFunc_GetGardenTalkPointManager_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_END                                     CallFunc_GetEndType_retValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_BI_SetBattlePlayRate_NoUse;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFadeOut_ReturnValue;                    // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetHeroUnit_retValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<E_BTL_CHAR_TYPE, class ACharaBase_C*>    CallFunc_DestroyUnitToMap_New_retValue;            // 0x0050(0x0050)()
	int32                                         CallFunc_GetBtlSubActorNum_retValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SeqStepExitFunc) == 0x000008, "Wrong alignment on BattleMain_C_SeqStepExitFunc");
static_assert(sizeof(BattleMain_C_SeqStepExitFunc) == 0x0000C0, "Wrong size on BattleMain_C_SeqStepExitFunc");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattleMain_C_SeqStepExitFunc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BattleMain_C_SeqStepExitFunc::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, CallFunc_GetGardenTalkPointManager_ReturnValue) == 0x000010, "Member 'BattleMain_C_SeqStepExitFunc::CallFunc_GetGardenTalkPointManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BattleMain_C_SeqStepExitFunc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BattleMain_C_SeqStepExitFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, CallFunc_GetEndType_retValue) == 0x000020, "Member 'BattleMain_C_SeqStepExitFunc::CallFunc_GetEndType_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'BattleMain_C_SeqStepExitFunc::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x000028, "Member 'BattleMain_C_SeqStepExitFunc::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, CallFunc_BI_SetBattlePlayRate_NoUse) == 0x000038, "Member 'BattleMain_C_SeqStepExitFunc::CallFunc_BI_SetBattlePlayRate_NoUse' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BattleMain_C_SeqStepExitFunc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BattleMain_C_SeqStepExitFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BattleMain_C_SeqStepExitFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, CallFunc_IsFadeOut_ReturnValue) == 0x000045, "Member 'BattleMain_C_SeqStepExitFunc::CallFunc_IsFadeOut_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, CallFunc_Not_PreBool_ReturnValue) == 0x000046, "Member 'BattleMain_C_SeqStepExitFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, CallFunc_GetHeroUnit_retValue) == 0x000048, "Member 'BattleMain_C_SeqStepExitFunc::CallFunc_GetHeroUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, CallFunc_DestroyUnitToMap_New_retValue) == 0x000050, "Member 'BattleMain_C_SeqStepExitFunc::CallFunc_DestroyUnitToMap_New_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, CallFunc_GetBtlSubActorNum_retValue) == 0x0000A0, "Member 'BattleMain_C_SeqStepExitFunc::CallFunc_GetBtlSubActorNum_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, CallFunc_Conv_IntToString_ReturnValue) == 0x0000A8, "Member 'BattleMain_C_SeqStepExitFunc::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepExitFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'BattleMain_C_SeqStepExitFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetBtlSubActorNum
// 0x0048 (0x0048 - 0x0000)
struct BattleMain_C_GetBtlSubActorNum final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_GetBtlSubActorNum) == 0x000008, "Wrong alignment on BattleMain_C_GetBtlSubActorNum");
static_assert(sizeof(BattleMain_C_GetBtlSubActorNum) == 0x000048, "Wrong size on BattleMain_C_GetBtlSubActorNum");
static_assert(offsetof(BattleMain_C_GetBtlSubActorNum, RetValue) == 0x000000, "Member 'BattleMain_C_GetBtlSubActorNum::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetBtlSubActorNum, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BattleMain_C_GetBtlSubActorNum::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetBtlSubActorNum, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattleMain_C_GetBtlSubActorNum::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetBtlSubActorNum, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattleMain_C_GetBtlSubActorNum::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetBtlSubActorNum, CallFunc_GetAllActorsWithTag_OutActors) == 0x000010, "Member 'BattleMain_C_GetBtlSubActorNum::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetBtlSubActorNum, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BattleMain_C_GetBtlSubActorNum::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetBtlSubActorNum, CallFunc_Array_Get_Item) == 0x000028, "Member 'BattleMain_C_GetBtlSubActorNum::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetBtlSubActorNum, CallFunc_GetObjectName_ReturnValue) == 0x000030, "Member 'BattleMain_C_GetBtlSubActorNum::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetBtlSubActorNum, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BattleMain_C_GetBtlSubActorNum::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetBtlSubActorNum, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BattleMain_C_GetBtlSubActorNum::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetPartyAccessor
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_GetPartyAccessor final
{
public:
	class UBattlePartySystem_C*                   RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetPartyAccessor) == 0x000008, "Wrong alignment on BattleMain_C_GetPartyAccessor");
static_assert(sizeof(BattleMain_C_GetPartyAccessor) == 0x000008, "Wrong size on BattleMain_C_GetPartyAccessor");
static_assert(offsetof(BattleMain_C_GetPartyAccessor, RetValue) == 0x000000, "Member 'BattleMain_C_GetPartyAccessor::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepTestFunc
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_SetStepTestFunc final
{
public:
	TArray<int32>                                 Lo_Wait;                                           // 0x0000(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(BattleMain_C_SetStepTestFunc) == 0x000008, "Wrong alignment on BattleMain_C_SetStepTestFunc");
static_assert(sizeof(BattleMain_C_SetStepTestFunc) == 0x000010, "Wrong size on BattleMain_C_SetStepTestFunc");
static_assert(offsetof(BattleMain_C_SetStepTestFunc, Lo_Wait) == 0x000000, "Member 'BattleMain_C_SetStepTestFunc::Lo_Wait' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepActionPreFunc
// 0x0024 (0x0024 - 0x0000)
struct BattleMain_C_SetStepActionPreFunc final
{
public:
	E_BTL_SIDE                                    Side;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IdxEnd;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IdxStart;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckExistActionStack_retValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlActionStack                        K2Node_MakeStruct_BtlActionStack;                  // 0x0010(0x0014)()
};
static_assert(alignof(BattleMain_C_SetStepActionPreFunc) == 0x000004, "Wrong alignment on BattleMain_C_SetStepActionPreFunc");
static_assert(sizeof(BattleMain_C_SetStepActionPreFunc) == 0x000024, "Wrong size on BattleMain_C_SetStepActionPreFunc");
static_assert(offsetof(BattleMain_C_SetStepActionPreFunc, Side) == 0x000000, "Member 'BattleMain_C_SetStepActionPreFunc::Side' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionPreFunc, IdxEnd) == 0x000004, "Member 'BattleMain_C_SetStepActionPreFunc::IdxEnd' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionPreFunc, IdxStart) == 0x000008, "Member 'BattleMain_C_SetStepActionPreFunc::IdxStart' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionPreFunc, CallFunc_CheckExistActionStack_retValue) == 0x00000C, "Member 'BattleMain_C_SetStepActionPreFunc::CallFunc_CheckExistActionStack_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionPreFunc, K2Node_MakeStruct_BtlActionStack) == 0x000010, "Member 'BattleMain_C_SetStepActionPreFunc::K2Node_MakeStruct_BtlActionStack' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepActionPreFunc
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_SeqStepActionPreFunc final
{
public:
	E_BTL_SIDE                                    Side;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IdxEnd;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IdxStart;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_SeqStepActionPreFunc) == 0x000004, "Wrong alignment on BattleMain_C_SeqStepActionPreFunc");
static_assert(sizeof(BattleMain_C_SeqStepActionPreFunc) == 0x00000C, "Wrong size on BattleMain_C_SeqStepActionPreFunc");
static_assert(offsetof(BattleMain_C_SeqStepActionPreFunc, Side) == 0x000000, "Member 'BattleMain_C_SeqStepActionPreFunc::Side' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepActionPreFunc, IdxEnd) == 0x000004, "Member 'BattleMain_C_SeqStepActionPreFunc::IdxEnd' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepActionPreFunc, IdxStart) == 0x000008, "Member 'BattleMain_C_SeqStepActionPreFunc::IdxStart' has a wrong offset!");

// Function BattleMain.BattleMain_C.PushAction
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_PushAction final
{
public:
	struct FBtlActionStack                        InDesc;                                            // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_PushAction) == 0x000004, "Wrong alignment on BattleMain_C_PushAction");
static_assert(sizeof(BattleMain_C_PushAction) == 0x000020, "Wrong size on BattleMain_C_PushAction");
static_assert(offsetof(BattleMain_C_PushAction, InDesc) == 0x000000, "Member 'BattleMain_C_PushAction::InDesc' has a wrong offset!");
static_assert(offsetof(BattleMain_C_PushAction, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BattleMain_C_PushAction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_PushAction, Temp_int_Variable) == 0x000018, "Member 'BattleMain_C_PushAction::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_PushAction, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BattleMain_C_PushAction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepActionFunc
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_SetStepActionFunc final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlActionStack                        CallFunc_PopAction_retValue;                       // 0x0008(0x0014)()
	bool                                          CallFunc_PopAction_isSuccess;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SetStepActionFunc) == 0x000004, "Wrong alignment on BattleMain_C_SetStepActionFunc");
static_assert(sizeof(BattleMain_C_SetStepActionFunc) == 0x000020, "Wrong size on BattleMain_C_SetStepActionFunc");
static_assert(offsetof(BattleMain_C_SetStepActionFunc, Temp_int_Variable) == 0x000000, "Member 'BattleMain_C_SetStepActionFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BattleMain_C_SetStepActionFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionFunc, CallFunc_PopAction_retValue) == 0x000008, "Member 'BattleMain_C_SetStepActionFunc::CallFunc_PopAction_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionFunc, CallFunc_PopAction_isSuccess) == 0x00001C, "Member 'BattleMain_C_SetStepActionFunc::CallFunc_PopAction_isSuccess' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepActionFunc
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_SeqStepActionFunc final
{
public:
	int32                                         Lo_BeforeIndex;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_Inochigoi;                                      // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleFlag2_ReturnValue;             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleFlag2_ReturnValue_1;           // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleFlag2_ReturnValue_2;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleFlag2_ReturnValue_3;           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectGCManager*                      CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_END                                     CallFunc_CheckBattleEnd_retValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AllActionIsFinished_retValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SeqStepActionFunc) == 0x000008, "Wrong alignment on BattleMain_C_SeqStepActionFunc");
static_assert(sizeof(BattleMain_C_SeqStepActionFunc) == 0x000028, "Wrong size on BattleMain_C_SeqStepActionFunc");
static_assert(offsetof(BattleMain_C_SeqStepActionFunc, Lo_BeforeIndex) == 0x000000, "Member 'BattleMain_C_SeqStepActionFunc::Lo_BeforeIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepActionFunc, Lo_Inochigoi) == 0x000004, "Member 'BattleMain_C_SeqStepActionFunc::Lo_Inochigoi' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepActionFunc, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'BattleMain_C_SeqStepActionFunc::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepActionFunc, CallFunc_CheckBattleFlag2_ReturnValue) == 0x000006, "Member 'BattleMain_C_SeqStepActionFunc::CallFunc_CheckBattleFlag2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepActionFunc, CallFunc_CheckBattleFlag2_ReturnValue_1) == 0x000007, "Member 'BattleMain_C_SeqStepActionFunc::CallFunc_CheckBattleFlag2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepActionFunc, CallFunc_CheckBattleFlag2_ReturnValue_2) == 0x000008, "Member 'BattleMain_C_SeqStepActionFunc::CallFunc_CheckBattleFlag2_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepActionFunc, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'BattleMain_C_SeqStepActionFunc::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepActionFunc, CallFunc_CheckBattleFlag2_ReturnValue_3) == 0x00000A, "Member 'BattleMain_C_SeqStepActionFunc::CallFunc_CheckBattleFlag2_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepActionFunc, CallFunc_Get_ReturnValue) == 0x000010, "Member 'BattleMain_C_SeqStepActionFunc::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepActionFunc, CallFunc_CheckBattleEnd_retValue) == 0x000018, "Member 'BattleMain_C_SeqStepActionFunc::CallFunc_CheckBattleEnd_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepActionFunc, CallFunc_Multiply_IntInt_ReturnValue) == 0x00001C, "Member 'BattleMain_C_SeqStepActionFunc::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepActionFunc, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'BattleMain_C_SeqStepActionFunc::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepActionFunc, CallFunc_AllActionIsFinished_retValue) == 0x000021, "Member 'BattleMain_C_SeqStepActionFunc::CallFunc_AllActionIsFinished_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.PopAction
// 0x0054 (0x0054 - 0x0000)
struct BattleMain_C_PopAction final
{
public:
	struct FBtlActionStack                        RetValue;                                          // 0x0000(0x0014)(Parm, OutParm)
	bool                                          IsSuccess;                                         // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlActionStack                        CallFunc_PopAction_retValue;                       // 0x0024(0x0014)()
	bool                                          CallFunc_PopAction_isSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlActionStack                        CallFunc_Array_Get_Item;                           // 0x003C(0x0014)()
	bool                                          CallFunc_CheckErrorActionAtack_retValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_PopAction) == 0x000004, "Wrong alignment on BattleMain_C_PopAction");
static_assert(sizeof(BattleMain_C_PopAction) == 0x000054, "Wrong size on BattleMain_C_PopAction");
static_assert(offsetof(BattleMain_C_PopAction, RetValue) == 0x000000, "Member 'BattleMain_C_PopAction::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_PopAction, IsSuccess) == 0x000014, "Member 'BattleMain_C_PopAction::IsSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_PopAction, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BattleMain_C_PopAction::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_PopAction, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BattleMain_C_PopAction::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_PopAction, Temp_int_Variable) == 0x000020, "Member 'BattleMain_C_PopAction::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_PopAction, CallFunc_PopAction_retValue) == 0x000024, "Member 'BattleMain_C_PopAction::CallFunc_PopAction_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_PopAction, CallFunc_PopAction_isSuccess) == 0x000038, "Member 'BattleMain_C_PopAction::CallFunc_PopAction_isSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_PopAction, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BattleMain_C_PopAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_PopAction, CallFunc_CheckErrorActionAtack_retValue) == 0x000050, "Member 'BattleMain_C_PopAction::CallFunc_CheckErrorActionAtack_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckErrorActionAtack
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckErrorActionAtack final
{
public:
	int32                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_PlayerIndex;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlActionStack                        CallFunc_Array_Get_Item;                           // 0x0010(0x0014)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckErrorActionAtack) == 0x000004, "Wrong alignment on BattleMain_C_CheckErrorActionAtack");
static_assert(sizeof(BattleMain_C_CheckErrorActionAtack) == 0x000028, "Wrong size on BattleMain_C_CheckErrorActionAtack");
static_assert(offsetof(BattleMain_C_CheckErrorActionAtack, InValue) == 0x000000, "Member 'BattleMain_C_CheckErrorActionAtack::InValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckErrorActionAtack, RetValue) == 0x000004, "Member 'BattleMain_C_CheckErrorActionAtack::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckErrorActionAtack, Lo_PlayerIndex) == 0x000008, "Member 'BattleMain_C_CheckErrorActionAtack::Lo_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckErrorActionAtack, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'BattleMain_C_CheckErrorActionAtack::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckErrorActionAtack, CallFunc_Array_Get_Item) == 0x000010, "Member 'BattleMain_C_CheckErrorActionAtack::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckErrorActionAtack, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000024, "Member 'BattleMain_C_CheckErrorActionAtack::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckErrorActionAtack, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'BattleMain_C_CheckErrorActionAtack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetCharAction
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_GetCharAction final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleCharAction_C*                    RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNowAction_isSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleCharAction_C*                    CallFunc_GetNowAction_retValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetCharAction) == 0x000008, "Wrong alignment on BattleMain_C_GetCharAction");
static_assert(sizeof(BattleMain_C_GetCharAction) == 0x000020, "Wrong size on BattleMain_C_GetCharAction");
static_assert(offsetof(BattleMain_C_GetCharAction, Success) == 0x000000, "Member 'BattleMain_C_GetCharAction::Success' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetCharAction, RetValue) == 0x000008, "Member 'BattleMain_C_GetCharAction::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetCharAction, CallFunc_GetNowAction_isSuccess) == 0x000010, "Member 'BattleMain_C_GetCharAction::CallFunc_GetNowAction_isSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetCharAction, CallFunc_GetNowAction_retValue) == 0x000018, "Member 'BattleMain_C_GetCharAction::CallFunc_GetNowAction_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetTaskFactory
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_GetTaskFactory final
{
public:
	class UBattleActionTaskFactory_C*             RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetTaskFactory) == 0x000008, "Wrong alignment on BattleMain_C_GetTaskFactory");
static_assert(sizeof(BattleMain_C_GetTaskFactory) == 0x000008, "Wrong size on BattleMain_C_GetTaskFactory");
static_assert(offsetof(BattleMain_C_GetTaskFactory, RetValue) == 0x000000, "Member 'BattleMain_C_GetTaskFactory::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepCheckEndFunc
// 0x0078 (0x0078 - 0x0000)
struct BattleMain_C_SetStepCheckEndFunc final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_END                                     CallFunc_CheckBattleEnd_retValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlApllyResultData                    K2Node_MakeStruct_BtlApllyResultData;              // 0x0008(0x0070)()
};
static_assert(alignof(BattleMain_C_SetStepCheckEndFunc) == 0x000008, "Wrong alignment on BattleMain_C_SetStepCheckEndFunc");
static_assert(sizeof(BattleMain_C_SetStepCheckEndFunc) == 0x000078, "Wrong size on BattleMain_C_SetStepCheckEndFunc");
static_assert(offsetof(BattleMain_C_SetStepCheckEndFunc, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BattleMain_C_SetStepCheckEndFunc::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepCheckEndFunc, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BattleMain_C_SetStepCheckEndFunc::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepCheckEndFunc, CallFunc_CheckBattleEnd_retValue) == 0x000002, "Member 'BattleMain_C_SetStepCheckEndFunc::CallFunc_CheckBattleEnd_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepCheckEndFunc, K2Node_MakeStruct_BtlApllyResultData) == 0x000008, "Member 'BattleMain_C_SetStepCheckEndFunc::K2Node_MakeStruct_BtlApllyResultData' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepCheckEndFunc
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_SeqStepCheckEndFunc final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_CheckRenzokuEncount_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SeqStepCheckEndFunc) == 0x000004, "Wrong alignment on BattleMain_C_SeqStepCheckEndFunc");
static_assert(sizeof(BattleMain_C_SeqStepCheckEndFunc) == 0x000010, "Wrong size on BattleMain_C_SeqStepCheckEndFunc");
static_assert(offsetof(BattleMain_C_SeqStepCheckEndFunc, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BattleMain_C_SeqStepCheckEndFunc::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepCheckEndFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'BattleMain_C_SeqStepCheckEndFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepCheckEndFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000002, "Member 'BattleMain_C_SeqStepCheckEndFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepCheckEndFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000003, "Member 'BattleMain_C_SeqStepCheckEndFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepCheckEndFunc, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'BattleMain_C_SeqStepCheckEndFunc::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepCheckEndFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000005, "Member 'BattleMain_C_SeqStepCheckEndFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepCheckEndFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000006, "Member 'BattleMain_C_SeqStepCheckEndFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepCheckEndFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000007, "Member 'BattleMain_C_SeqStepCheckEndFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepCheckEndFunc, CallFunc_CheckRenzokuEncount_ReturnValue) == 0x000008, "Member 'BattleMain_C_SeqStepCheckEndFunc::CallFunc_CheckRenzokuEncount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepCheckEndFunc, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BattleMain_C_SeqStepCheckEndFunc::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckExistActionStack
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_CheckExistActionStack final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckErrorActionAtack_retValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CheckExistActionStack) == 0x000004, "Wrong alignment on BattleMain_C_CheckExistActionStack");
static_assert(sizeof(BattleMain_C_CheckExistActionStack) == 0x000018, "Wrong size on BattleMain_C_CheckExistActionStack");
static_assert(offsetof(BattleMain_C_CheckExistActionStack, RetValue) == 0x000000, "Member 'BattleMain_C_CheckExistActionStack::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckExistActionStack, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BattleMain_C_CheckExistActionStack::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckExistActionStack, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000008, "Member 'BattleMain_C_CheckExistActionStack::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckExistActionStack, Temp_int_Variable) == 0x00000C, "Member 'BattleMain_C_CheckExistActionStack::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckExistActionStack, CallFunc_CheckErrorActionAtack_retValue) == 0x000010, "Member 'BattleMain_C_CheckExistActionStack::CallFunc_CheckErrorActionAtack_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckExistActionStack, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000011, "Member 'BattleMain_C_CheckExistActionStack::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckExistActionStack, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BattleMain_C_CheckExistActionStack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetCheckTurnFunc
// 0x0108 (0x0108 - 0x0000)
struct BattleMain_C_SetCheckTurnFunc final
{
public:
	class FString                                 Lo_label;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_PartyIndexList;                                 // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_TaskWaitList;                                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_CheckBattleFlag2_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInfoMessByLabelTask_RetPecID;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleFlag2_ReturnValue_1;           // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetSideIsBossFlagList_ReturnValue;     // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_MakeUpliftingTask_retPecID;               // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_MakeUpliftingTask_retPecID_1;             // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_CheckBattleFlag_ReturnValue;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddDrawPlayerUpliftingGaugeTask_RetPecID; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_CalcUpliftingGauge_ReturnValue;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_UseUpliftingGauge_ReturnValue;         // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetAllIsInFieldList_ReturnValue;          // 0x00A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetReqCureBadStatus_ReturnValue;          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_MakeBadCureTask_retValue;                 // 0x00C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateMoonAgeCount_ReturnValue;           // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCommand                            CallFunc_BI_GetNowCommand_ReturnValue;             // 0x00D4(0x0010)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBattleDebugFlag_ReturnValue;         // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleFlag_ReturnValue_1;            // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F6[0x2];                                       // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPressIcon_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckExistActionStack_retValue;           // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SetCheckTurnFunc) == 0x000008, "Wrong alignment on BattleMain_C_SetCheckTurnFunc");
static_assert(sizeof(BattleMain_C_SetCheckTurnFunc) == 0x000108, "Wrong size on BattleMain_C_SetCheckTurnFunc");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, Lo_label) == 0x000000, "Member 'BattleMain_C_SetCheckTurnFunc::Lo_label' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, Lo_PartyIndexList) == 0x000010, "Member 'BattleMain_C_SetCheckTurnFunc::Lo_PartyIndexList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, Lo_TaskWaitList) == 0x000020, "Member 'BattleMain_C_SetCheckTurnFunc::Lo_TaskWaitList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_CheckBattleFlag2_ReturnValue) == 0x000030, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_CheckBattleFlag2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_Array_Get_Item) == 0x000034, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_AddInfoMessByLabelTask_RetPecID) == 0x000038, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_AddInfoMessByLabelTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000045, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_CheckBattleFlag2_ReturnValue_1) == 0x000046, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_CheckBattleFlag2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000047, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_BI_GetSideIsBossFlagList_ReturnValue) == 0x000048, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_BI_GetSideIsBossFlagList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00005C, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_MakeUpliftingTask_retPecID) == 0x000060, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_MakeUpliftingTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_BooleanOR_ReturnValue) == 0x000070, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_MakeUpliftingTask_retPecID_1) == 0x000078, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_MakeUpliftingTask_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_CheckBattleFlag_ReturnValue) == 0x000088, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_CheckBattleFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_AddDrawPlayerUpliftingGaugeTask_RetPecID) == 0x00008C, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_AddDrawPlayerUpliftingGaugeTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_Array_Add_ReturnValue_1) == 0x000090, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_BI_CalcUpliftingGauge_ReturnValue) == 0x000094, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_BI_CalcUpliftingGauge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, Temp_int_Array_Index_Variable) == 0x000098, "Member 'BattleMain_C_SetCheckTurnFunc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_BI_UseUpliftingGauge_ReturnValue) == 0x00009C, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_BI_UseUpliftingGauge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_GetAllIsInFieldList_ReturnValue) == 0x0000A0, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_GetAllIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_Array_Length_ReturnValue_2) == 0x0000B4, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_Array_Add_ReturnValue_2) == 0x0000B8, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_GetReqCureBadStatus_ReturnValue) == 0x0000BC, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_GetReqCureBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_MakeBadCureTask_retValue) == 0x0000C0, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_MakeBadCureTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_UpdateMoonAgeCount_ReturnValue) == 0x0000D1, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_UpdateMoonAgeCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_BI_GetNowCommand_ReturnValue) == 0x0000D4, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_BI_GetNowCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E4, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_CheckBattleDebugFlag_ReturnValue) == 0x0000EC, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_CheckBattleDebugFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, Temp_int_Variable) == 0x0000F0, "Member 'BattleMain_C_SetCheckTurnFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_Not_PreBool_ReturnValue) == 0x0000F4, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_CheckBattleFlag_ReturnValue_1) == 0x0000F5, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_CheckBattleFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, Temp_int_Loop_Counter_Variable) == 0x0000F8, "Member 'BattleMain_C_SetCheckTurnFunc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_Add_IntInt_ReturnValue_1) == 0x000100, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_IsPressIcon_ReturnValue) == 0x000104, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_IsPressIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetCheckTurnFunc, CallFunc_CheckExistActionStack_retValue) == 0x000105, "Member 'BattleMain_C_SetCheckTurnFunc::CallFunc_CheckExistActionStack_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetCameraAccessor
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_GetCameraAccessor final
{
public:
	class ABattleCamera_C*                        RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetCameraAccessor) == 0x000008, "Wrong alignment on BattleMain_C_GetCameraAccessor");
static_assert(sizeof(BattleMain_C_GetCameraAccessor) == 0x000008, "Wrong size on BattleMain_C_GetCameraAccessor");
static_assert(offsetof(BattleMain_C_GetCameraAccessor, RetValue) == 0x000000, "Member 'BattleMain_C_GetCameraAccessor::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetRandom
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_GetRandom final
{
public:
	int32                                         Max;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_BattleRand_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetRandom) == 0x000004, "Wrong alignment on BattleMain_C_GetRandom");
static_assert(sizeof(BattleMain_C_GetRandom) == 0x00000C, "Wrong size on BattleMain_C_GetRandom");
static_assert(offsetof(BattleMain_C_GetRandom, Max) == 0x000000, "Member 'BattleMain_C_GetRandom::Max' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetRandom, RetValue) == 0x000004, "Member 'BattleMain_C_GetRandom::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetRandom, CallFunc_BI_BattleRand_ReturnValue) == 0x000008, "Member 'BattleMain_C_GetRandom::CallFunc_BI_BattleRand_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepResultFunc
// 0x02F0 (0x02F0 - 0x0000)
struct BattleMain_C_SetStepResultFunc final
{
public:
	TArray<EAchievementFlag>                      Lo_achievements;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSkillActionTargetInfo>         Lo_ReflexList;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSkillActionExtend>             Lo_ExtendAction;                                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_SkillMasterExecList;                            // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSkillActionTargetInfo>         Lo_SkillActionTarget;                              // 0x0040(0x0010)(Edit, BlueprintVisible)
	struct FSkillActionDesc                       Lo_SkillActionDesc;                                // 0x0050(0x0090)(Edit, BlueprintVisible)
	struct FSkillActionDesc                       Lo_EffectData;                                     // 0x00E0(0x0090)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_ActList;                                        // 0x0170(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_PoisonBad;                                      // 0x0180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_End;                                            // 0x0184(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x0188(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0190(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWhiteOutFinishBlow_ReturnValue;         // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAchievementFlag                              CallFunc_Array_Get_Item_1;                         // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBattleDebugFlag_ReturnValue;         // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionDesc                       K2Node_MakeStruct_SkillActionDesc;                 // 0x01E8(0x0090)()
	uint8                                         Pad_278[0x8];                                      // 0x0278(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0280(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x02B8(0x0010)(ReferenceParm)
	class AEndOfBattle_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_END                                     CallFunc_GetEndType_retValue;                      // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2[0x2];                                      // 0x02D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddDeltaWaitTask_retPecID;                // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_SetStepResultFunc) == 0x000010, "Wrong alignment on BattleMain_C_SetStepResultFunc");
static_assert(sizeof(BattleMain_C_SetStepResultFunc) == 0x0002F0, "Wrong size on BattleMain_C_SetStepResultFunc");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, Lo_achievements) == 0x000000, "Member 'BattleMain_C_SetStepResultFunc::Lo_achievements' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, Lo_ReflexList) == 0x000010, "Member 'BattleMain_C_SetStepResultFunc::Lo_ReflexList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, Lo_ExtendAction) == 0x000020, "Member 'BattleMain_C_SetStepResultFunc::Lo_ExtendAction' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, Lo_SkillMasterExecList) == 0x000030, "Member 'BattleMain_C_SetStepResultFunc::Lo_SkillMasterExecList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, Lo_SkillActionTarget) == 0x000040, "Member 'BattleMain_C_SetStepResultFunc::Lo_SkillActionTarget' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, Lo_SkillActionDesc) == 0x000050, "Member 'BattleMain_C_SetStepResultFunc::Lo_SkillActionDesc' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, Lo_EffectData) == 0x0000E0, "Member 'BattleMain_C_SetStepResultFunc::Lo_EffectData' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, Lo_ActList) == 0x000170, "Member 'BattleMain_C_SetStepResultFunc::Lo_ActList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, Lo_PoisonBad) == 0x000180, "Member 'BattleMain_C_SetStepResultFunc::Lo_PoisonBad' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, Lo_End) == 0x000184, "Member 'BattleMain_C_SetStepResultFunc::Lo_End' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, Lo_Start) == 0x000188, "Member 'BattleMain_C_SetStepResultFunc::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, Lo_WaitTaskList) == 0x000190, "Member 'BattleMain_C_SetStepResultFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, Temp_int_Array_Index_Variable) == 0x0001A0, "Member 'BattleMain_C_SetStepResultFunc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_Array_Length_ReturnValue) == 0x0001A4, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, Temp_int_Loop_Counter_Variable) == 0x0001A8, "Member 'BattleMain_C_SetStepResultFunc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_Less_IntInt_ReturnValue) == 0x0001AC, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_Add_IntInt_ReturnValue) == 0x0001B0, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, Temp_int_Array_Index_Variable_1) == 0x0001B4, "Member 'BattleMain_C_SetStepResultFunc::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_IsWhiteOutFinishBlow_ReturnValue) == 0x0001B8, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_IsWhiteOutFinishBlow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_Array_Get_Item) == 0x0001BC, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_Array_Get_Item_1) == 0x0001C0, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_Array_Length_ReturnValue_1) == 0x0001C4, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_Greater_IntInt_ReturnValue) == 0x0001C8, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_Array_Length_ReturnValue_2) == 0x0001CC, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_CheckBattleDebugFlag_ReturnValue) == 0x0001D0, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_CheckBattleDebugFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_Get_ReturnValue) == 0x0001D8, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_Not_PreBool_ReturnValue) == 0x0001E0, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, K2Node_MakeStruct_SkillActionDesc) == 0x0001E8, "Member 'BattleMain_C_SetStepResultFunc::K2Node_MakeStruct_SkillActionDesc' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_MakeTransform_ReturnValue) == 0x000280, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0002B0, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x0002B8, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_FinishSpawningActor_ReturnValue) == 0x0002C8, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_GetEndType_retValue) == 0x0002D0, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_GetEndType_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0002D1, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_AddDeltaWaitTask_retPecID) == 0x0002D4, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_AddDeltaWaitTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, Temp_int_Loop_Counter_Variable_1) == 0x0002D8, "Member 'BattleMain_C_SetStepResultFunc::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002DC, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepResultFunc, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002E0, "Member 'BattleMain_C_SetStepResultFunc::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepResultFunc
// 0x0048 (0x0048 - 0x0000)
struct BattleMain_C_SeqStepResultFunc final
{
public:
	int32                                         Lo_End;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWhiteOutFinishBlow_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionPadCheck_Success_2;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_3;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_4;               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFinished_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFinished_retValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetParentNameTaskCnt_retCnt;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SeqStepResultFunc) == 0x000008, "Wrong alignment on BattleMain_C_SeqStepResultFunc");
static_assert(sizeof(BattleMain_C_SeqStepResultFunc) == 0x000048, "Wrong size on BattleMain_C_SeqStepResultFunc");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, Lo_End) == 0x000000, "Member 'BattleMain_C_SeqStepResultFunc::Lo_End' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, Lo_Start) == 0x000004, "Member 'BattleMain_C_SeqStepResultFunc::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_IsWhiteOutFinishBlow_ReturnValue) == 0x000008, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_IsWhiteOutFinishBlow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_IsActionPadCheck_Success) == 0x000009, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_IsActionPadCheck_Success_1) == 0x00000A, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_Greater_IntInt_ReturnValue) == 0x00000B, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_IsActionPadCheck_Success_2) == 0x000010, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_IsActionPadCheck_Success_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_IsActionPadCheck_Success_3) == 0x000011, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_IsActionPadCheck_Success_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_IsActionPadCheck_Success_4) == 0x000012, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_IsActionPadCheck_Success_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, Temp_int_Variable) == 0x000014, "Member 'BattleMain_C_SeqStepResultFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, Temp_int_Variable_1) == 0x000018, "Member 'BattleMain_C_SeqStepResultFunc::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_Get_ReturnValue) == 0x000020, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_IsFinished_ReturnValue) == 0x000028, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_IsFinished_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, K2Node_SwitchInteger_CmpSuccess) == 0x000029, "Member 'BattleMain_C_SeqStepResultFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00002C, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_IsFinished_retValue) == 0x000031, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_IsFinished_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_GetParentNameTaskCnt_retCnt) == 0x000034, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_GetParentNameTaskCnt_retCnt' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_BooleanOR_ReturnValue_1) == 0x00003B, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_BooleanOR_ReturnValue_2) == 0x00003C, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_BooleanOR_ReturnValue_3) == 0x00003D, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_BooleanOR_ReturnValue_4) == 0x00003E, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_BooleanOR_ReturnValue_5) == 0x00003F, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepResultFunc, CallFunc_BooleanAND_ReturnValue_1) == 0x000040, "Member 'BattleMain_C_SeqStepResultFunc::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetTalkResult
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_GetTalkResult final
{
public:
	E_BTL_TALK_RET                                RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetTalkResult) == 0x000001, "Wrong alignment on BattleMain_C_GetTalkResult");
static_assert(sizeof(BattleMain_C_GetTalkResult) == 0x000001, "Wrong size on BattleMain_C_GetTalkResult");
static_assert(offsetof(BattleMain_C_GetTalkResult, RetValue) == 0x000000, "Member 'BattleMain_C_GetTalkResult::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetEndType
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_SetEndType final
{
public:
	E_BTL_END                                     Param_M_EndType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_SetEndType) == 0x000001, "Wrong alignment on BattleMain_C_SetEndType");
static_assert(sizeof(BattleMain_C_SetEndType) == 0x000001, "Wrong size on BattleMain_C_SetEndType");
static_assert(offsetof(BattleMain_C_SetEndType, Param_M_EndType) == 0x000000, "Member 'BattleMain_C_SetEndType::Param_M_EndType' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetEndType
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_GetEndType final
{
public:
	E_BTL_END                                     RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetEndType) == 0x000001, "Wrong alignment on BattleMain_C_GetEndType");
static_assert(sizeof(BattleMain_C_GetEndType) == 0x000001, "Wrong size on BattleMain_C_GetEndType");
static_assert(offsetof(BattleMain_C_GetEndType, RetValue) == 0x000000, "Member 'BattleMain_C_GetEndType::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetRandom2
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_GetRandom2 final
{
public:
	int32                                         Min;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_BattleRand2_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetRandom2) == 0x000004, "Wrong alignment on BattleMain_C_GetRandom2");
static_assert(sizeof(BattleMain_C_GetRandom2) == 0x000010, "Wrong size on BattleMain_C_GetRandom2");
static_assert(offsetof(BattleMain_C_GetRandom2, Min) == 0x000000, "Member 'BattleMain_C_GetRandom2::Min' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetRandom2, Max) == 0x000004, "Member 'BattleMain_C_GetRandom2::Max' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetRandom2, RetValue) == 0x000008, "Member 'BattleMain_C_GetRandom2::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetRandom2, CallFunc_BI_BattleRand2_ReturnValue) == 0x00000C, "Member 'BattleMain_C_GetRandom2::CallFunc_BI_BattleRand2_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetRandomF
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_GetRandomF final
{
public:
	float                                         Max;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BI_BattleRandF_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetRandomF) == 0x000004, "Wrong alignment on BattleMain_C_GetRandomF");
static_assert(sizeof(BattleMain_C_GetRandomF) == 0x000010, "Wrong size on BattleMain_C_GetRandomF");
static_assert(offsetof(BattleMain_C_GetRandomF, Max) == 0x000000, "Member 'BattleMain_C_GetRandomF::Max' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetRandomF, RetValue) == 0x000004, "Member 'BattleMain_C_GetRandomF::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetRandomF, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BattleMain_C_GetRandomF::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetRandomF, CallFunc_BI_BattleRandF_ReturnValue) == 0x00000C, "Member 'BattleMain_C_GetRandomF::CallFunc_BI_BattleRandF_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetRandomF2
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_GetRandomF2 final
{
public:
	float                                         Min;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RetValue;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BI_BattleRandF2_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetRandomF2) == 0x000004, "Wrong alignment on BattleMain_C_GetRandomF2");
static_assert(sizeof(BattleMain_C_GetRandomF2) == 0x000010, "Wrong size on BattleMain_C_GetRandomF2");
static_assert(offsetof(BattleMain_C_GetRandomF2, Min) == 0x000000, "Member 'BattleMain_C_GetRandomF2::Min' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetRandomF2, Max) == 0x000004, "Member 'BattleMain_C_GetRandomF2::Max' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetRandomF2, RetValue) == 0x000008, "Member 'BattleMain_C_GetRandomF2::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetRandomF2, CallFunc_BI_BattleRandF2_ReturnValue) == 0x00000C, "Member 'BattleMain_C_GetRandomF2::CallFunc_BI_BattleRandF2_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetCurrentCameraTransform
// 0x0080 (0x0080 - 0x0000)
struct BattleMain_C_GetCurrentCameraTransform final
{
public:
	struct FTransform                             RetValue;                                          // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_GetCurrentCameraTransform) == 0x000010, "Wrong alignment on BattleMain_C_GetCurrentCameraTransform");
static_assert(sizeof(BattleMain_C_GetCurrentCameraTransform) == 0x000080, "Wrong size on BattleMain_C_GetCurrentCameraTransform");
static_assert(offsetof(BattleMain_C_GetCurrentCameraTransform, RetValue) == 0x000000, "Member 'BattleMain_C_GetCurrentCameraTransform::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetCurrentCameraTransform, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000030, "Member 'BattleMain_C_GetCurrentCameraTransform::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetCurrentCameraTransform, CallFunc_GetCameraLocation_ReturnValue) == 0x000038, "Member 'BattleMain_C_GetCurrentCameraTransform::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetCurrentCameraTransform, CallFunc_GetCameraRotation_ReturnValue) == 0x000044, "Member 'BattleMain_C_GetCurrentCameraTransform::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetCurrentCameraTransform, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'BattleMain_C_GetCurrentCameraTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetTurnActValidNum
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_GetTurnActValidNum final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Cnt;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_GetTurnActValidNum) == 0x000004, "Wrong alignment on BattleMain_C_GetTurnActValidNum");
static_assert(sizeof(BattleMain_C_GetTurnActValidNum) == 0x000028, "Wrong size on BattleMain_C_GetTurnActValidNum");
static_assert(offsetof(BattleMain_C_GetTurnActValidNum, RetValue) == 0x000000, "Member 'BattleMain_C_GetTurnActValidNum::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetTurnActValidNum, Lo_Cnt) == 0x000004, "Member 'BattleMain_C_GetTurnActValidNum::Lo_Cnt' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetTurnActValidNum, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattleMain_C_GetTurnActValidNum::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetTurnActValidNum, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattleMain_C_GetTurnActValidNum::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetTurnActValidNum, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BattleMain_C_GetTurnActValidNum::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetTurnActValidNum, Temp_int_Variable) == 0x000014, "Member 'BattleMain_C_GetTurnActValidNum::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetTurnActValidNum, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BattleMain_C_GetTurnActValidNum::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetTurnActValidNum, CallFunc_Array_Get_Item) == 0x00001C, "Member 'BattleMain_C_GetTurnActValidNum::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetTurnActValidNum, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BattleMain_C_GetTurnActValidNum::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetTurnActValidNum, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'BattleMain_C_GetTurnActValidNum::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetTurnActValidNum, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'BattleMain_C_GetTurnActValidNum::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetCharActionFactory
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_GetCharActionFactory final
{
public:
	class UBattleCharActionFactory_C*             RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetCharActionFactory) == 0x000008, "Wrong alignment on BattleMain_C_GetCharActionFactory");
static_assert(sizeof(BattleMain_C_GetCharActionFactory) == 0x000008, "Wrong size on BattleMain_C_GetCharActionFactory");
static_assert(offsetof(BattleMain_C_GetCharActionFactory, RetValue) == 0x000000, "Member 'BattleMain_C_GetCharActionFactory::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetAICommand
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_GetAICommand final
{
public:
	class UBattleAICommand_C*                     RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetAICommand) == 0x000008, "Wrong alignment on BattleMain_C_GetAICommand");
static_assert(sizeof(BattleMain_C_GetAICommand) == 0x000008, "Wrong size on BattleMain_C_GetAICommand");
static_assert(offsetof(BattleMain_C_GetAICommand, RetValue) == 0x000000, "Member 'BattleMain_C_GetAICommand::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetCalc
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_GetCalc final
{
public:
	class UBattleCalc_C*                          RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetCalc) == 0x000008, "Wrong alignment on BattleMain_C_GetCalc");
static_assert(sizeof(BattleMain_C_GetCalc) == 0x000008, "Wrong size on BattleMain_C_GetCalc");
static_assert(offsetof(BattleMain_C_GetCalc, RetValue) == 0x000000, "Member 'BattleMain_C_GetCalc::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetTargetSelect
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_GetTargetSelect final
{
public:
	class UBattleTargetSelect_C*                  Param_BattleTargetSelect;                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetTargetSelect) == 0x000008, "Wrong alignment on BattleMain_C_GetTargetSelect");
static_assert(sizeof(BattleMain_C_GetTargetSelect) == 0x000008, "Wrong size on BattleMain_C_GetTargetSelect");
static_assert(offsetof(BattleMain_C_GetTargetSelect, Param_BattleTargetSelect) == 0x000000, "Member 'BattleMain_C_GetTargetSelect::Param_BattleTargetSelect' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepStartEventFunc
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_SetStepStartEventFunc final
{
public:
	class FName                                   CallFunc_CheckEventTrigger_EventName;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayEvent_ret;                            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SetStepStartEventFunc) == 0x000004, "Wrong alignment on BattleMain_C_SetStepStartEventFunc");
static_assert(sizeof(BattleMain_C_SetStepStartEventFunc) == 0x00000C, "Wrong size on BattleMain_C_SetStepStartEventFunc");
static_assert(offsetof(BattleMain_C_SetStepStartEventFunc, CallFunc_CheckEventTrigger_EventName) == 0x000000, "Member 'BattleMain_C_SetStepStartEventFunc::CallFunc_CheckEventTrigger_EventName' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepStartEventFunc, CallFunc_PlayEvent_ret) == 0x000008, "Member 'BattleMain_C_SetStepStartEventFunc::CallFunc_PlayEvent_ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepStartEventFunc
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_SeqStepStartEventFunc final
{
public:
	E_BTL_EVT_RESULT                              Lo_Next;                                           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_EVT_RESULT                              CallFunc_GetEventResult_retValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEventFinished_ret;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SeqStepStartEventFunc) == 0x000008, "Wrong alignment on BattleMain_C_SeqStepStartEventFunc");
static_assert(sizeof(BattleMain_C_SeqStepStartEventFunc) == 0x000020, "Wrong size on BattleMain_C_SeqStepStartEventFunc");
static_assert(offsetof(BattleMain_C_SeqStepStartEventFunc, Lo_Next) == 0x000000, "Member 'BattleMain_C_SeqStepStartEventFunc::Lo_Next' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepStartEventFunc, K2Node_MakeArray_Array) == 0x000008, "Member 'BattleMain_C_SeqStepStartEventFunc::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepStartEventFunc, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BattleMain_C_SeqStepStartEventFunc::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepStartEventFunc, CallFunc_GetEventResult_retValue) == 0x000019, "Member 'BattleMain_C_SeqStepStartEventFunc::CallFunc_GetEventResult_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepStartEventFunc, CallFunc_CheckEventFinished_ret) == 0x00001A, "Member 'BattleMain_C_SeqStepStartEventFunc::CallFunc_CheckEventFinished_ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepTurnStartEventFunc
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_SetStepTurnStartEventFunc final
{
public:
	bool                                          CallFunc_CheckBattleFlag_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_CheckEventTrigger_EventName;              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_CheckEventTrigger_EventName_1;            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayEvent_ret;                            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayEvent_ret_1;                          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SetStepTurnStartEventFunc) == 0x000004, "Wrong alignment on BattleMain_C_SetStepTurnStartEventFunc");
static_assert(sizeof(BattleMain_C_SetStepTurnStartEventFunc) == 0x000018, "Wrong size on BattleMain_C_SetStepTurnStartEventFunc");
static_assert(offsetof(BattleMain_C_SetStepTurnStartEventFunc, CallFunc_CheckBattleFlag_ReturnValue) == 0x000000, "Member 'BattleMain_C_SetStepTurnStartEventFunc::CallFunc_CheckBattleFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTurnStartEventFunc, CallFunc_CheckEventTrigger_EventName) == 0x000004, "Member 'BattleMain_C_SetStepTurnStartEventFunc::CallFunc_CheckEventTrigger_EventName' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTurnStartEventFunc, CallFunc_CheckEventTrigger_EventName_1) == 0x00000C, "Member 'BattleMain_C_SetStepTurnStartEventFunc::CallFunc_CheckEventTrigger_EventName_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTurnStartEventFunc, CallFunc_PlayEvent_ret) == 0x000014, "Member 'BattleMain_C_SetStepTurnStartEventFunc::CallFunc_PlayEvent_ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTurnStartEventFunc, CallFunc_PlayEvent_ret_1) == 0x000015, "Member 'BattleMain_C_SetStepTurnStartEventFunc::CallFunc_PlayEvent_ret_1' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepTurnStartEventFunc
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_SeqStepTurnStartEventFunc final
{
public:
	E_BTL_SIDE                                    Side;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IdxEnd;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IdxStart;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideIsBossFlagList_ReturnValue;     // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsUseUpliftingGauge_ReturnValue;       // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleFlag_ReturnValue;              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SeqStepTurnStartEventFunc) == 0x000008, "Wrong alignment on BattleMain_C_SeqStepTurnStartEventFunc");
static_assert(sizeof(BattleMain_C_SeqStepTurnStartEventFunc) == 0x000028, "Wrong size on BattleMain_C_SeqStepTurnStartEventFunc");
static_assert(offsetof(BattleMain_C_SeqStepTurnStartEventFunc, Side) == 0x000000, "Member 'BattleMain_C_SeqStepTurnStartEventFunc::Side' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnStartEventFunc, IdxEnd) == 0x000004, "Member 'BattleMain_C_SeqStepTurnStartEventFunc::IdxEnd' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnStartEventFunc, IdxStart) == 0x000008, "Member 'BattleMain_C_SeqStepTurnStartEventFunc::IdxStart' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnStartEventFunc, CallFunc_BI_GetSideIsBossFlagList_ReturnValue) == 0x000010, "Member 'BattleMain_C_SeqStepTurnStartEventFunc::CallFunc_BI_GetSideIsBossFlagList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnStartEventFunc, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BattleMain_C_SeqStepTurnStartEventFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnStartEventFunc, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'BattleMain_C_SeqStepTurnStartEventFunc::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnStartEventFunc, CallFunc_BI_IsUseUpliftingGauge_ReturnValue) == 0x000025, "Member 'BattleMain_C_SeqStepTurnStartEventFunc::CallFunc_BI_IsUseUpliftingGauge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnStartEventFunc, CallFunc_CheckBattleFlag_ReturnValue) == 0x000026, "Member 'BattleMain_C_SeqStepTurnStartEventFunc::CallFunc_CheckBattleFlag_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepInochigoiFunc
// 0x0060 (0x0060 - 0x0000)
struct BattleMain_C_SetStepInochigoiFunc final
{
public:
	struct FTalkStartInfo                         Lo_StartInfo;                                      // 0x0000(0x000C)(Edit, BlueprintVisible, NoDestructor)
	int32                                         CallFunc_GetCharaID_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTalkStartInfo                         K2Node_MakeStruct_TalkStartInfo;                   // 0x0010(0x000C)(NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TalkCtrl_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_SetStepInochigoiFunc) == 0x000010, "Wrong alignment on BattleMain_C_SetStepInochigoiFunc");
static_assert(sizeof(BattleMain_C_SetStepInochigoiFunc) == 0x000060, "Wrong size on BattleMain_C_SetStepInochigoiFunc");
static_assert(offsetof(BattleMain_C_SetStepInochigoiFunc, Lo_StartInfo) == 0x000000, "Member 'BattleMain_C_SetStepInochigoiFunc::Lo_StartInfo' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepInochigoiFunc, CallFunc_GetCharaID_ReturnValue) == 0x00000C, "Member 'BattleMain_C_SetStepInochigoiFunc::CallFunc_GetCharaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepInochigoiFunc, K2Node_MakeStruct_TalkStartInfo) == 0x000010, "Member 'BattleMain_C_SetStepInochigoiFunc::K2Node_MakeStruct_TalkStartInfo' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepInochigoiFunc, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BattleMain_C_SetStepInochigoiFunc::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepInochigoiFunc, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'BattleMain_C_SetStepInochigoiFunc::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepInochigoiFunc, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'BattleMain_C_SetStepInochigoiFunc::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepInochigoiFunc
// 0x0058 (0x0058 - 0x0000)
struct BattleMain_C_SeqStepInochigoiFunc final
{
public:
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	EBattleBGMType                                Lo_BGMType;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Side;                                              // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IdxEnd;                                            // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IdxStart;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPressIcon                             CallFunc_GetPressIcon_ReturnValue;                 // 0x001C(0x000C)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_CheckContinuousBGMBattle_IsContinuous; // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddPressIconTask_RetPecID;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentBGMID_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleSoundManager_C> CallFunc_BI_ChangeBGM_self_CastInput;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_ChangeBGM_Valid;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTalkResultInfo                        CallFunc_GetTalkResult_ReturnValue;                // 0x0051(0x0002)(NoDestructor)
	bool                                          CallFunc_CheckTalkEnd_IsEnd;                       // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SeqStepInochigoiFunc) == 0x000008, "Wrong alignment on BattleMain_C_SeqStepInochigoiFunc");
static_assert(sizeof(BattleMain_C_SeqStepInochigoiFunc) == 0x000058, "Wrong size on BattleMain_C_SeqStepInochigoiFunc");
static_assert(offsetof(BattleMain_C_SeqStepInochigoiFunc, Lo_WaitTaskList) == 0x000000, "Member 'BattleMain_C_SeqStepInochigoiFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepInochigoiFunc, Lo_BGMType) == 0x000010, "Member 'BattleMain_C_SeqStepInochigoiFunc::Lo_BGMType' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepInochigoiFunc, Side) == 0x000011, "Member 'BattleMain_C_SeqStepInochigoiFunc::Side' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepInochigoiFunc, IdxEnd) == 0x000014, "Member 'BattleMain_C_SeqStepInochigoiFunc::IdxEnd' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepInochigoiFunc, IdxStart) == 0x000018, "Member 'BattleMain_C_SeqStepInochigoiFunc::IdxStart' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepInochigoiFunc, CallFunc_GetPressIcon_ReturnValue) == 0x00001C, "Member 'BattleMain_C_SeqStepInochigoiFunc::CallFunc_GetPressIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepInochigoiFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BattleMain_C_SeqStepInochigoiFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepInochigoiFunc, CallFunc_BI_CheckContinuousBGMBattle_IsContinuous) == 0x00002C, "Member 'BattleMain_C_SeqStepInochigoiFunc::CallFunc_BI_CheckContinuousBGMBattle_IsContinuous' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepInochigoiFunc, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BattleMain_C_SeqStepInochigoiFunc::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepInochigoiFunc, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000034, "Member 'BattleMain_C_SeqStepInochigoiFunc::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepInochigoiFunc, CallFunc_AddPressIconTask_RetPecID) == 0x000038, "Member 'BattleMain_C_SeqStepInochigoiFunc::CallFunc_AddPressIconTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepInochigoiFunc, CallFunc_GetCurrentBGMID_ReturnValue) == 0x00003C, "Member 'BattleMain_C_SeqStepInochigoiFunc::CallFunc_GetCurrentBGMID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepInochigoiFunc, CallFunc_BI_ChangeBGM_self_CastInput) == 0x000040, "Member 'BattleMain_C_SeqStepInochigoiFunc::CallFunc_BI_ChangeBGM_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepInochigoiFunc, CallFunc_BI_ChangeBGM_Valid) == 0x000050, "Member 'BattleMain_C_SeqStepInochigoiFunc::CallFunc_BI_ChangeBGM_Valid' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepInochigoiFunc, CallFunc_GetTalkResult_ReturnValue) == 0x000051, "Member 'BattleMain_C_SeqStepInochigoiFunc::CallFunc_GetTalkResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepInochigoiFunc, CallFunc_CheckTalkEnd_IsEnd) == 0x000053, "Member 'BattleMain_C_SeqStepInochigoiFunc::CallFunc_CheckTalkEnd_IsEnd' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepInochigoiFunc, K2Node_SwitchEnum_CmpSuccess) == 0x000054, "Member 'BattleMain_C_SeqStepInochigoiFunc::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepEndEventFunc
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_SetStepEndEventFunc final
{
public:
	E_BTL_SIDE                                    Side;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IdxEnd;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IdxStart;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_CheckEventTrigger_EventName;              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayEvent_ret;                            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SetStepEndEventFunc) == 0x000004, "Wrong alignment on BattleMain_C_SetStepEndEventFunc");
static_assert(sizeof(BattleMain_C_SetStepEndEventFunc) == 0x000018, "Wrong size on BattleMain_C_SetStepEndEventFunc");
static_assert(offsetof(BattleMain_C_SetStepEndEventFunc, Side) == 0x000000, "Member 'BattleMain_C_SetStepEndEventFunc::Side' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEndEventFunc, IdxEnd) == 0x000004, "Member 'BattleMain_C_SetStepEndEventFunc::IdxEnd' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEndEventFunc, IdxStart) == 0x000008, "Member 'BattleMain_C_SetStepEndEventFunc::IdxStart' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEndEventFunc, CallFunc_CheckEventTrigger_EventName) == 0x00000C, "Member 'BattleMain_C_SetStepEndEventFunc::CallFunc_CheckEventTrigger_EventName' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEndEventFunc, CallFunc_PlayEvent_ret) == 0x000014, "Member 'BattleMain_C_SetStepEndEventFunc::CallFunc_PlayEvent_ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetDbgHitParc
// 0x0030 (0x0030 - 0x0000)
struct BattleMain_C_GetDbgHitParc final
{
public:
	bool                                          IsPlayer;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Lo_Print2;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetDbgHitParc) == 0x000008, "Wrong alignment on BattleMain_C_GetDbgHitParc");
static_assert(sizeof(BattleMain_C_GetDbgHitParc) == 0x000030, "Wrong size on BattleMain_C_GetDbgHitParc");
static_assert(offsetof(BattleMain_C_GetDbgHitParc, IsPlayer) == 0x000000, "Member 'BattleMain_C_GetDbgHitParc::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDbgHitParc, RetValue) == 0x000004, "Member 'BattleMain_C_GetDbgHitParc::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDbgHitParc, Lo_Print2) == 0x000008, "Member 'BattleMain_C_GetDbgHitParc::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDbgHitParc, Lo_Print) == 0x000018, "Member 'BattleMain_C_GetDbgHitParc::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDbgHitParc, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000028, "Member 'BattleMain_C_GetDbgHitParc::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDbgHitParc, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00002C, "Member 'BattleMain_C_GetDbgHitParc::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetDbgCriticalParc
// 0x0038 (0x0038 - 0x0000)
struct BattleMain_C_GetDbgCriticalParc final
{
public:
	bool                                          IsPlayer;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 RetValue;                                          // 0x0008(0x0010)(Parm, OutParm)
	class FString                                 Lo_Print2;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetDbgCriticalParc) == 0x000008, "Wrong alignment on BattleMain_C_GetDbgCriticalParc");
static_assert(sizeof(BattleMain_C_GetDbgCriticalParc) == 0x000038, "Wrong size on BattleMain_C_GetDbgCriticalParc");
static_assert(offsetof(BattleMain_C_GetDbgCriticalParc, IsPlayer) == 0x000000, "Member 'BattleMain_C_GetDbgCriticalParc::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDbgCriticalParc, RetValue) == 0x000008, "Member 'BattleMain_C_GetDbgCriticalParc::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDbgCriticalParc, Lo_Print2) == 0x000018, "Member 'BattleMain_C_GetDbgCriticalParc::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDbgCriticalParc, Lo_Print) == 0x000028, "Member 'BattleMain_C_GetDbgCriticalParc::Lo_Print' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetDbgCriticalBaseParc
// 0x0030 (0x0030 - 0x0000)
struct BattleMain_C_GetDbgCriticalBaseParc final
{
public:
	bool                                          IsPlayer;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Lo_Print2;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetDbgCriticalBaseParc) == 0x000008, "Wrong alignment on BattleMain_C_GetDbgCriticalBaseParc");
static_assert(sizeof(BattleMain_C_GetDbgCriticalBaseParc) == 0x000030, "Wrong size on BattleMain_C_GetDbgCriticalBaseParc");
static_assert(offsetof(BattleMain_C_GetDbgCriticalBaseParc, IsPlayer) == 0x000000, "Member 'BattleMain_C_GetDbgCriticalBaseParc::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDbgCriticalBaseParc, RetValue) == 0x000004, "Member 'BattleMain_C_GetDbgCriticalBaseParc::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDbgCriticalBaseParc, Lo_Print2) == 0x000008, "Member 'BattleMain_C_GetDbgCriticalBaseParc::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDbgCriticalBaseParc, Lo_Print) == 0x000018, "Member 'BattleMain_C_GetDbgCriticalBaseParc::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDbgCriticalBaseParc, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000028, "Member 'BattleMain_C_GetDbgCriticalBaseParc::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDbgCriticalBaseParc, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00002C, "Member 'BattleMain_C_GetDbgCriticalBaseParc::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetKuiUsedList
// 0x0340 (0x0340 - 0x0000)
struct BattleMain_C_SetKuiUsedList final
{
public:
	struct FBtlParty                              InParty;                                           // 0x0000(0x0320)(BlueprintVisible, BlueprintReadOnly, Parm)
	E_KUISHIBARI_LEVEL                            Level;                                             // 0x0320(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtlKuishibariData>             CallFunc_BattleMainSetKuishibariUsedList_ReturnValue; // 0x0328(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleMain_C_SetKuiUsedList) == 0x000010, "Wrong alignment on BattleMain_C_SetKuiUsedList");
static_assert(sizeof(BattleMain_C_SetKuiUsedList) == 0x000340, "Wrong size on BattleMain_C_SetKuiUsedList");
static_assert(offsetof(BattleMain_C_SetKuiUsedList, InParty) == 0x000000, "Member 'BattleMain_C_SetKuiUsedList::InParty' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetKuiUsedList, Level) == 0x000320, "Member 'BattleMain_C_SetKuiUsedList::Level' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetKuiUsedList, CallFunc_BattleMainSetKuishibariUsedList_ReturnValue) == 0x000328, "Member 'BattleMain_C_SetKuiUsedList::CallFunc_BattleMainSetKuishibariUsedList_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckKuiUsedList
// 0x0330 (0x0330 - 0x0000)
struct BattleMain_C_CheckKuiUsedList final
{
public:
	struct FBtlParty                              InParty;                                           // 0x0000(0x0320)(BlueprintVisible, BlueprintReadOnly, Parm)
	E_KUISHIBARI_LEVEL                            Level;                                             // 0x0320(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0321(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleMainCheckKuishibariUsedList_ReturnValue; // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckKuiUsedList) == 0x000010, "Wrong alignment on BattleMain_C_CheckKuiUsedList");
static_assert(sizeof(BattleMain_C_CheckKuiUsedList) == 0x000330, "Wrong size on BattleMain_C_CheckKuiUsedList");
static_assert(offsetof(BattleMain_C_CheckKuiUsedList, InParty) == 0x000000, "Member 'BattleMain_C_CheckKuiUsedList::InParty' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckKuiUsedList, Level) == 0x000320, "Member 'BattleMain_C_CheckKuiUsedList::Level' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckKuiUsedList, RetValue) == 0x000321, "Member 'BattleMain_C_CheckKuiUsedList::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckKuiUsedList, CallFunc_BattleMainCheckKuishibariUsedList_ReturnValue) == 0x000322, "Member 'BattleMain_C_CheckKuiUsedList::CallFunc_BattleMainCheckKuishibariUsedList_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.DelKuiUsedListHP1gift
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_DelKuiUsedListHP1gift final
{
public:
	bool                                          IsPlayer;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtlKuishibariData>             CallFunc_BattleMainDeleteKuishibariUsedList_ReturnValue; // 0x0008(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleMain_C_DelKuiUsedListHP1gift) == 0x000008, "Wrong alignment on BattleMain_C_DelKuiUsedListHP1gift");
static_assert(sizeof(BattleMain_C_DelKuiUsedListHP1gift) == 0x000018, "Wrong size on BattleMain_C_DelKuiUsedListHP1gift");
static_assert(offsetof(BattleMain_C_DelKuiUsedListHP1gift, IsPlayer) == 0x000000, "Member 'BattleMain_C_DelKuiUsedListHP1gift::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DelKuiUsedListHP1gift, CallFunc_BattleMainDeleteKuishibariUsedList_ReturnValue) == 0x000008, "Member 'BattleMain_C_DelKuiUsedListHP1gift::CallFunc_BattleMainDeleteKuishibariUsedList_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetEnemyKillList
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_SetEnemyKillList final
{
public:
	int32                                         EnemyID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtlKillData>                   CallFunc_BattleMainSetKillEnemy_ReturnValue;       // 0x0008(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleMain_C_SetEnemyKillList) == 0x000008, "Wrong alignment on BattleMain_C_SetEnemyKillList");
static_assert(sizeof(BattleMain_C_SetEnemyKillList) == 0x000018, "Wrong size on BattleMain_C_SetEnemyKillList");
static_assert(offsetof(BattleMain_C_SetEnemyKillList, EnemyID) == 0x000000, "Member 'BattleMain_C_SetEnemyKillList::EnemyID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetEnemyKillList, CallFunc_BattleMainSetKillEnemy_ReturnValue) == 0x000008, "Member 'BattleMain_C_SetEnemyKillList::CallFunc_BattleMainSetKillEnemy_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.AddResultData
// 0x0380 (0x0380 - 0x0000)
struct BattleMain_C_AddResultData final
{
public:
	struct FBtlParty                              InParty;                                           // 0x0000(0x0320)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlResultData                         CallFunc_GetExpMakkaItem_ReturnValue;              // 0x0328(0x0050)()
};
static_assert(alignof(BattleMain_C_AddResultData) == 0x000010, "Wrong alignment on BattleMain_C_AddResultData");
static_assert(sizeof(BattleMain_C_AddResultData) == 0x000380, "Wrong size on BattleMain_C_AddResultData");
static_assert(offsetof(BattleMain_C_AddResultData, InParty) == 0x000000, "Member 'BattleMain_C_AddResultData::InParty' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddResultData, CallFunc_Greater_IntInt_ReturnValue) == 0x000320, "Member 'BattleMain_C_AddResultData::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddResultData, CallFunc_GetExpMakkaItem_ReturnValue) == 0x000328, "Member 'BattleMain_C_AddResultData::CallFunc_GetExpMakkaItem_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckBattleEnd
// 0x00A0 (0x00A0 - 0x0000)
struct BattleMain_C_CheckBattleEnd final
{
public:
	E_BTL_END                                     RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_AndCnt;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_IndexList;                                      // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_Cnt;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBattleFlag_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBattleEndEnemyHPRate_ReturnValue;    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_EVTBTL_WIN_COND>                     CallFunc_Map_Keys_Keys;                            // 0x0038(0x0010)(ReferenceParm)
	E_EVTBTL_WIN_COND                             CallFunc_Array_Get_Item;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEvtBtlWinCond                         CallFunc_Map_Find_Value;                           // 0x0050(0x0003)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameOver_retValue;                      // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNowTurn_retValue;                      // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAllDeadSide_retValue;                   // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEnemyLeaderIndex_retValue;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAllDead_retValue;                       // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAllDeadSide_retValue_1;                 // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CheckBattleEnd) == 0x000008, "Wrong alignment on BattleMain_C_CheckBattleEnd");
static_assert(sizeof(BattleMain_C_CheckBattleEnd) == 0x0000A0, "Wrong size on BattleMain_C_CheckBattleEnd");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, RetValue) == 0x000000, "Member 'BattleMain_C_CheckBattleEnd::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, Lo_AndCnt) == 0x000004, "Member 'BattleMain_C_CheckBattleEnd::Lo_AndCnt' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, Lo_IndexList) == 0x000008, "Member 'BattleMain_C_CheckBattleEnd::Lo_IndexList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, Lo_Cnt) == 0x000018, "Member 'BattleMain_C_CheckBattleEnd::Lo_Cnt' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BattleMain_C_CheckBattleEnd::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BattleMain_C_CheckBattleEnd::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_CheckBattleFlag_ReturnValue) == 0x000028, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_CheckBattleFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00002A, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, Temp_int_Variable) == 0x00002C, "Member 'BattleMain_C_CheckBattleEnd::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, Temp_int_Variable_1) == 0x000030, "Member 'BattleMain_C_CheckBattleEnd::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_CheckBattleEndEnemyHPRate_ReturnValue) == 0x000034, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_CheckBattleEndEnemyHPRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000035, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_Map_Keys_Keys) == 0x000038, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_Array_Get_Item) == 0x000048, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_Map_Find_Value) == 0x000050, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_Map_Find_ReturnValue) == 0x000053, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000055, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000056, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000057, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000058, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00005C, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, K2Node_SwitchEnum_CmpSuccess) == 0x000060, "Member 'BattleMain_C_CheckBattleEnd::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_Greater_IntInt_ReturnValue) == 0x000061, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_IsGameOver_retValue) == 0x000062, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_IsGameOver_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, Temp_int_Variable_2) == 0x000064, "Member 'BattleMain_C_CheckBattleEnd::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000068, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, Temp_int_Variable_3) == 0x000070, "Member 'BattleMain_C_CheckBattleEnd::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_Add_IntInt_ReturnValue_2) == 0x000074, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_GetNowTurn_retValue) == 0x000078, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_GetNowTurn_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00007C, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_Add_IntInt_ReturnValue_3) == 0x000080, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_IsAllDeadSide_retValue) == 0x000084, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_IsAllDeadSide_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_GetEnemyLeaderIndex_retValue) == 0x000088, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_GetEnemyLeaderIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_BooleanAND_ReturnValue_1) == 0x00008C, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_Array_Add_ReturnValue) == 0x000090, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_IsAllDead_retValue) == 0x000094, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_IsAllDead_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_IsAllDeadSide_retValue_1) == 0x000095, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_IsAllDeadSide_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckBattleEnd, CallFunc_Add_IntInt_ReturnValue_4) == 0x000098, "Member 'BattleMain_C_CheckBattleEnd::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetCharActionForPartyIndex
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_GetCharActionForPartyIndex final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleCharAction_C*                    RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleCharAction_C*                    CallFunc_GetActionForPartyIndex_retValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetCharActionForPartyIndex) == 0x000008, "Wrong alignment on BattleMain_C_GetCharActionForPartyIndex");
static_assert(sizeof(BattleMain_C_GetCharActionForPartyIndex) == 0x000018, "Wrong size on BattleMain_C_GetCharActionForPartyIndex");
static_assert(offsetof(BattleMain_C_GetCharActionForPartyIndex, PartyIndex) == 0x000000, "Member 'BattleMain_C_GetCharActionForPartyIndex::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetCharActionForPartyIndex, RetValue) == 0x000008, "Member 'BattleMain_C_GetCharActionForPartyIndex::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetCharActionForPartyIndex, CallFunc_GetActionForPartyIndex_retValue) == 0x000010, "Member 'BattleMain_C_GetCharActionForPartyIndex::CallFunc_GetActionForPartyIndex_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetOriginTransform
// 0x0030 (0x0030 - 0x0000)
struct BattleMain_C_GetOriginTransform final
{
public:
	struct FTransform                             RetValue;                                          // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_GetOriginTransform) == 0x000010, "Wrong alignment on BattleMain_C_GetOriginTransform");
static_assert(sizeof(BattleMain_C_GetOriginTransform) == 0x000030, "Wrong size on BattleMain_C_GetOriginTransform");
static_assert(offsetof(BattleMain_C_GetOriginTransform, RetValue) == 0x000000, "Member 'BattleMain_C_GetOriginTransform::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetCamActorFactory
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_GetCamActorFactory final
{
public:
	class UBattleCamActorFactory_C*               RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetCamActorFactory) == 0x000008, "Wrong alignment on BattleMain_C_GetCamActorFactory");
static_assert(sizeof(BattleMain_C_GetCamActorFactory) == 0x000008, "Wrong size on BattleMain_C_GetCamActorFactory");
static_assert(offsetof(BattleMain_C_GetCamActorFactory, RetValue) == 0x000000, "Member 'BattleMain_C_GetCamActorFactory::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetEffectManager
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_GetEffectManager final
{
public:
	class UBattleEffectManager_C*                 RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetEffectManager) == 0x000008, "Wrong alignment on BattleMain_C_GetEffectManager");
static_assert(sizeof(BattleMain_C_GetEffectManager) == 0x000008, "Wrong size on BattleMain_C_GetEffectManager");
static_assert(offsetof(BattleMain_C_GetEffectManager, RetValue) == 0x000000, "Member 'BattleMain_C_GetEffectManager::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.RemoveBattleUI
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_RemoveBattleUI final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_RemoveBattleUI) == 0x000001, "Wrong alignment on BattleMain_C_RemoveBattleUI");
static_assert(sizeof(BattleMain_C_RemoveBattleUI) == 0x000001, "Wrong size on BattleMain_C_RemoveBattleUI");
static_assert(offsetof(BattleMain_C_RemoveBattleUI, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BattleMain_C_RemoveBattleUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.AddAIFlag
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_AddAIFlag final
{
public:
	uint8                                         In_Value;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BIT_ADD_ReturnValue;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_AddAIFlag) == 0x000004, "Wrong alignment on BattleMain_C_AddAIFlag");
static_assert(sizeof(BattleMain_C_AddAIFlag) == 0x000008, "Wrong size on BattleMain_C_AddAIFlag");
static_assert(offsetof(BattleMain_C_AddAIFlag, In_Value) == 0x000000, "Member 'BattleMain_C_AddAIFlag::In_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddAIFlag, CallFunc_BIT_ADD_ReturnValue) == 0x000004, "Member 'BattleMain_C_AddAIFlag::CallFunc_BIT_ADD_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckAIFlag
// 0x0003 (0x0003 - 0x0000)
struct BattleMain_C_CheckAIFlag final
{
public:
	uint8                                         In_Value;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret_Value;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BIT_AND_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckAIFlag) == 0x000001, "Wrong alignment on BattleMain_C_CheckAIFlag");
static_assert(sizeof(BattleMain_C_CheckAIFlag) == 0x000003, "Wrong size on BattleMain_C_CheckAIFlag");
static_assert(offsetof(BattleMain_C_CheckAIFlag, In_Value) == 0x000000, "Member 'BattleMain_C_CheckAIFlag::In_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckAIFlag, Ret_Value) == 0x000001, "Member 'BattleMain_C_CheckAIFlag::Ret_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckAIFlag, CallFunc_BIT_AND_ReturnValue) == 0x000002, "Member 'BattleMain_C_CheckAIFlag::CallFunc_BIT_AND_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.DelAIFlag
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_DelAIFlag final
{
public:
	uint8                                         In_Value;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BIT_DEL_ReturnValue;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_DelAIFlag) == 0x000004, "Wrong alignment on BattleMain_C_DelAIFlag");
static_assert(sizeof(BattleMain_C_DelAIFlag) == 0x000008, "Wrong size on BattleMain_C_DelAIFlag");
static_assert(offsetof(BattleMain_C_DelAIFlag, In_Value) == 0x000000, "Member 'BattleMain_C_DelAIFlag::In_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DelAIFlag, CallFunc_BIT_DEL_ReturnValue) == 0x000004, "Member 'BattleMain_C_DelAIFlag::CallFunc_BIT_DEL_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetNowTurn
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_GetNowTurn final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetNowTurn) == 0x000004, "Wrong alignment on BattleMain_C_GetNowTurn");
static_assert(sizeof(BattleMain_C_GetNowTurn) == 0x00000C, "Wrong size on BattleMain_C_GetNowTurn");
static_assert(offsetof(BattleMain_C_GetNowTurn, RetValue) == 0x000000, "Member 'BattleMain_C_GetNowTurn::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetNowTurn, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BattleMain_C_GetNowTurn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetNowTurn, CallFunc_Divide_IntInt_ReturnValue) == 0x000008, "Member 'BattleMain_C_GetNowTurn::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetBattleResult
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_GetBattleResult final
{
public:
	class UBattleResult_C*                        Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetBattleResult) == 0x000008, "Wrong alignment on BattleMain_C_GetBattleResult");
static_assert(sizeof(BattleMain_C_GetBattleResult) == 0x000008, "Wrong size on BattleMain_C_GetBattleResult");
static_assert(offsetof(BattleMain_C_GetBattleResult, Result) == 0x000000, "Member 'BattleMain_C_GetBattleResult::Result' has a wrong offset!");

// Function BattleMain.BattleMain_C.IsDebugMenuOpen
// 0x0040 (0x0040 - 0x0000)
struct BattleMain_C_IsDebugMenuOpen final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_Print2;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpenDebugMenu_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleDebugFlag_ReturnValue;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleDebugFlag_ReturnValue_1;       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetParentNameTaskCnt_retCnt;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetParentNameTaskCnt_retCnt_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_IsDebugMenuOpen) == 0x000008, "Wrong alignment on BattleMain_C_IsDebugMenuOpen");
static_assert(sizeof(BattleMain_C_IsDebugMenuOpen) == 0x000040, "Wrong size on BattleMain_C_IsDebugMenuOpen");
static_assert(offsetof(BattleMain_C_IsDebugMenuOpen, RetValue) == 0x000000, "Member 'BattleMain_C_IsDebugMenuOpen::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsDebugMenuOpen, Lo_Print2) == 0x000008, "Member 'BattleMain_C_IsDebugMenuOpen::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsDebugMenuOpen, Lo_Print) == 0x000018, "Member 'BattleMain_C_IsDebugMenuOpen::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsDebugMenuOpen, CallFunc_IsOpenDebugMenu_ReturnValue) == 0x000028, "Member 'BattleMain_C_IsDebugMenuOpen::CallFunc_IsOpenDebugMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsDebugMenuOpen, CallFunc_CheckBattleDebugFlag_ReturnValue) == 0x000029, "Member 'BattleMain_C_IsDebugMenuOpen::CallFunc_CheckBattleDebugFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsDebugMenuOpen, CallFunc_CheckBattleDebugFlag_ReturnValue_1) == 0x00002A, "Member 'BattleMain_C_IsDebugMenuOpen::CallFunc_CheckBattleDebugFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsDebugMenuOpen, CallFunc_GetParentNameTaskCnt_retCnt) == 0x00002C, "Member 'BattleMain_C_IsDebugMenuOpen::CallFunc_GetParentNameTaskCnt_retCnt' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsDebugMenuOpen, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'BattleMain_C_IsDebugMenuOpen::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsDebugMenuOpen, CallFunc_GetParentNameTaskCnt_retCnt_1) == 0x000034, "Member 'BattleMain_C_IsDebugMenuOpen::CallFunc_GetParentNameTaskCnt_retCnt_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsDebugMenuOpen, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BattleMain_C_IsDebugMenuOpen::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.ClearDebugMenu
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_ClearDebugMenu final
{
public:
	int32                                         CallFunc_BI_GetPlayerUpliftingGauge_ret;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUpliftingGaugeMax_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_ClearDebugMenu) == 0x000004, "Wrong alignment on BattleMain_C_ClearDebugMenu");
static_assert(sizeof(BattleMain_C_ClearDebugMenu) == 0x000008, "Wrong size on BattleMain_C_ClearDebugMenu");
static_assert(offsetof(BattleMain_C_ClearDebugMenu, CallFunc_BI_GetPlayerUpliftingGauge_ret) == 0x000000, "Member 'BattleMain_C_ClearDebugMenu::CallFunc_BI_GetPlayerUpliftingGauge_ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ClearDebugMenu, CallFunc_GetUpliftingGaugeMax_ReturnValue) == 0x000004, "Member 'BattleMain_C_ClearDebugMenu::CallFunc_GetUpliftingGaugeMax_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenu
// 0x0030 (0x0030 - 0x0000)
struct BattleMain_C_CheckDebugMenu final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CheckDebugMenu) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenu");
static_assert(sizeof(BattleMain_C_CheckDebugMenu) == 0x000030, "Wrong size on BattleMain_C_CheckDebugMenu");
static_assert(offsetof(BattleMain_C_CheckDebugMenu, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenu::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenu, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenu::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenu, Temp_int_Variable) == 0x000020, "Member 'BattleMain_C_CheckDebugMenu::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenu, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'BattleMain_C_CheckDebugMenu::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenu, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BattleMain_C_CheckDebugMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuEnemyAvoid
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuEnemyAvoid final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsEnemySideAvoid_ReturnValue;  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuEnemyAvoid) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuEnemyAvoid");
static_assert(sizeof(BattleMain_C_CheckDebugMenuEnemyAvoid) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuEnemyAvoid");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyAvoid, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuEnemyAvoid::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyAvoid, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuEnemyAvoid::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyAvoid, CallFunc_BattleDebugIsEnemySideAvoid_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuEnemyAvoid::CallFunc_BattleDebugIsEnemySideAvoid_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuPlayerAvoid
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuPlayerAvoid final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsPlayerSideAvoid_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuPlayerAvoid) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuPlayerAvoid");
static_assert(sizeof(BattleMain_C_CheckDebugMenuPlayerAvoid) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuPlayerAvoid");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerAvoid, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuPlayerAvoid::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerAvoid, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuPlayerAvoid::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerAvoid, CallFunc_BattleDebugIsPlayerSideAvoid_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuPlayerAvoid::CallFunc_BattleDebugIsPlayerSideAvoid_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuEnemyDamage0
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuEnemyDamage0 final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsEnemyDamage0_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuEnemyDamage0) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuEnemyDamage0");
static_assert(sizeof(BattleMain_C_CheckDebugMenuEnemyDamage0) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuEnemyDamage0");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyDamage0, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuEnemyDamage0::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyDamage0, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuEnemyDamage0::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyDamage0, CallFunc_BattleDebugIsEnemyDamage0_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuEnemyDamage0::CallFunc_BattleDebugIsEnemyDamage0_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuPlayerDamage0
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuPlayerDamage0 final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsPlayerDamage0_ReturnValue;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuPlayerDamage0) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuPlayerDamage0");
static_assert(sizeof(BattleMain_C_CheckDebugMenuPlayerDamage0) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuPlayerDamage0");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerDamage0, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuPlayerDamage0::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerDamage0, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuPlayerDamage0::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerDamage0, CallFunc_BattleDebugIsPlayerDamage0_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuPlayerDamage0::CallFunc_BattleDebugIsPlayerDamage0_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuDamageMax
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuDamageMax final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsDamageMax_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuDamageMax) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuDamageMax");
static_assert(sizeof(BattleMain_C_CheckDebugMenuDamageMax) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuDamageMax");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDamageMax, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuDamageMax::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDamageMax, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuDamageMax::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDamageMax, CallFunc_BattleDebugIsDamageMax_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuDamageMax::CallFunc_BattleDebugIsDamageMax_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetSkillInfoMess
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_GetSkillInfoMess final
{
public:
	class UWB_BtlInfoMess_C*                      RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetSkillInfoMess) == 0x000008, "Wrong alignment on BattleMain_C_GetSkillInfoMess");
static_assert(sizeof(BattleMain_C_GetSkillInfoMess) == 0x000008, "Wrong size on BattleMain_C_GetSkillInfoMess");
static_assert(offsetof(BattleMain_C_GetSkillInfoMess, RetValue) == 0x000000, "Member 'BattleMain_C_GetSkillInfoMess::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepEscapeFunc
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_SeqStepEscapeFunc final
{
public:
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_SeqStepEscapeFunc) == 0x000004, "Wrong alignment on BattleMain_C_SeqStepEscapeFunc");
static_assert(sizeof(BattleMain_C_SeqStepEscapeFunc) == 0x00000C, "Wrong size on BattleMain_C_SeqStepEscapeFunc");
static_assert(offsetof(BattleMain_C_SeqStepEscapeFunc, K2Node_SwitchInteger_CmpSuccess) == 0x000000, "Member 'BattleMain_C_SeqStepEscapeFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEscapeFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BattleMain_C_SeqStepEscapeFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEscapeFunc, Temp_int_Variable) == 0x000008, "Member 'BattleMain_C_SeqStepEscapeFunc::Temp_int_Variable' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepGameOverFunc
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_SetStepGameOverFunc final
{
public:
	class UGardenTalkPointManager*                CallFunc_GetGardenTalkPointManager_ReturnValue;    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_CheckEventTrigger_EventName;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UIManager_C*                        K2Node_DynamicCast_AsBP_UIManager;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayEvent_ret;                            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SetStepGameOverFunc) == 0x000008, "Wrong alignment on BattleMain_C_SetStepGameOverFunc");
static_assert(sizeof(BattleMain_C_SetStepGameOverFunc) == 0x000028, "Wrong size on BattleMain_C_SetStepGameOverFunc");
static_assert(offsetof(BattleMain_C_SetStepGameOverFunc, CallFunc_GetGardenTalkPointManager_ReturnValue) == 0x000000, "Member 'BattleMain_C_SetStepGameOverFunc::CallFunc_GetGardenTalkPointManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepGameOverFunc, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BattleMain_C_SetStepGameOverFunc::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepGameOverFunc, CallFunc_CheckEventTrigger_EventName) == 0x000010, "Member 'BattleMain_C_SetStepGameOverFunc::CallFunc_CheckEventTrigger_EventName' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepGameOverFunc, K2Node_DynamicCast_AsBP_UIManager) == 0x000018, "Member 'BattleMain_C_SetStepGameOverFunc::K2Node_DynamicCast_AsBP_UIManager' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepGameOverFunc, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BattleMain_C_SetStepGameOverFunc::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepGameOverFunc, CallFunc_PlayEvent_ret) == 0x000021, "Member 'BattleMain_C_SetStepGameOverFunc::CallFunc_PlayEvent_ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepGameOverFunc
// 0x0014 (0x0014 - 0x0000)
struct BattleMain_C_SeqStepGameOverFunc final
{
public:
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFadeAnim_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEventFinished_ret;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SeqStepGameOverFunc) == 0x000004, "Wrong alignment on BattleMain_C_SeqStepGameOverFunc");
static_assert(sizeof(BattleMain_C_SeqStepGameOverFunc) == 0x000014, "Wrong size on BattleMain_C_SeqStepGameOverFunc");
static_assert(offsetof(BattleMain_C_SeqStepGameOverFunc, K2Node_SwitchInteger_CmpSuccess) == 0x000000, "Member 'BattleMain_C_SeqStepGameOverFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepGameOverFunc, CallFunc_IsFadeAnim_ReturnValue) == 0x000001, "Member 'BattleMain_C_SeqStepGameOverFunc::CallFunc_IsFadeAnim_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepGameOverFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BattleMain_C_SeqStepGameOverFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepGameOverFunc, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BattleMain_C_SeqStepGameOverFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepGameOverFunc, Temp_int_Variable) == 0x00000C, "Member 'BattleMain_C_SeqStepGameOverFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepGameOverFunc, CallFunc_CheckEventFinished_ret) == 0x000010, "Member 'BattleMain_C_SeqStepGameOverFunc::CallFunc_CheckEventFinished_ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuEnemyBad0
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuEnemyBad0 final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsEnemySideBad0_ReturnValue;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuEnemyBad0) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuEnemyBad0");
static_assert(sizeof(BattleMain_C_CheckDebugMenuEnemyBad0) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuEnemyBad0");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyBad0, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuEnemyBad0::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyBad0, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuEnemyBad0::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyBad0, CallFunc_BattleDebugIsEnemySideBad0_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuEnemyBad0::CallFunc_BattleDebugIsEnemySideBad0_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuEnemyBad100
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuEnemyBad100 final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsEnemySideBad100_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuEnemyBad100) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuEnemyBad100");
static_assert(sizeof(BattleMain_C_CheckDebugMenuEnemyBad100) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuEnemyBad100");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyBad100, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuEnemyBad100::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyBad100, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuEnemyBad100::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyBad100, CallFunc_BattleDebugIsEnemySideBad100_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuEnemyBad100::CallFunc_BattleDebugIsEnemySideBad100_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuPlayerBad0
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuPlayerBad0 final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsPlayerSideBad0_ReturnValue;  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuPlayerBad0) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuPlayerBad0");
static_assert(sizeof(BattleMain_C_CheckDebugMenuPlayerBad0) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuPlayerBad0");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerBad0, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuPlayerBad0::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerBad0, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuPlayerBad0::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerBad0, CallFunc_BattleDebugIsPlayerSideBad0_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuPlayerBad0::CallFunc_BattleDebugIsPlayerSideBad0_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuPlayerBad100
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuPlayerBad100 final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsPlayerSideBad100_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuPlayerBad100) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuPlayerBad100");
static_assert(sizeof(BattleMain_C_CheckDebugMenuPlayerBad100) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuPlayerBad100");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerBad100, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuPlayerBad100::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerBad100, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuPlayerBad100::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerBad100, CallFunc_BattleDebugIsPlayerSideBad100_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuPlayerBad100::CallFunc_BattleDebugIsPlayerSideBad100_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SpawnDebugObj
// 0x0040 (0x0040 - 0x0000)
struct BattleMain_C_SpawnDebugObj final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_DebugNumber_C*                      CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SpawnDebugObj) == 0x000008, "Wrong alignment on BattleMain_C_SpawnDebugObj");
static_assert(sizeof(BattleMain_C_SpawnDebugObj) == 0x000040, "Wrong size on BattleMain_C_SpawnDebugObj");
static_assert(offsetof(BattleMain_C_SpawnDebugObj, Lo_Print2) == 0x000000, "Member 'BattleMain_C_SpawnDebugObj::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SpawnDebugObj, Lo_Print) == 0x000010, "Member 'BattleMain_C_SpawnDebugObj::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SpawnDebugObj, Temp_int_Variable) == 0x000020, "Member 'BattleMain_C_SpawnDebugObj::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SpawnDebugObj, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'BattleMain_C_SpawnDebugObj::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SpawnDebugObj, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BattleMain_C_SpawnDebugObj::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SpawnDebugObj, CallFunc_Create_ReturnValue) == 0x000030, "Member 'BattleMain_C_SpawnDebugObj::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SpawnDebugObj, CallFunc_AddToWidgetPrio_ReturnValue) == 0x000038, "Member 'BattleMain_C_SpawnDebugObj::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.RemoveDebugObj
// 0x0030 (0x0030 - 0x0000)
struct BattleMain_C_RemoveDebugObj final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_RemoveDebugObj) == 0x000008, "Wrong alignment on BattleMain_C_RemoveDebugObj");
static_assert(sizeof(BattleMain_C_RemoveDebugObj) == 0x000030, "Wrong size on BattleMain_C_RemoveDebugObj");
static_assert(offsetof(BattleMain_C_RemoveDebugObj, Lo_Print2) == 0x000000, "Member 'BattleMain_C_RemoveDebugObj::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_RemoveDebugObj, Lo_Print) == 0x000010, "Member 'BattleMain_C_RemoveDebugObj::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_RemoveDebugObj, Temp_int_Variable) == 0x000020, "Member 'BattleMain_C_RemoveDebugObj::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_RemoveDebugObj, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'BattleMain_C_RemoveDebugObj::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_RemoveDebugObj, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BattleMain_C_RemoveDebugObj::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuNumPartyIndex
// 0x0030 (0x0030 - 0x0000)
struct BattleMain_C_CheckDebugMenuNumPartyIndex final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Lo_Value;                                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_DebugNumber_C*                      CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDebugIsNumberPartyIndex_ReturnValue; // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuNumPartyIndex) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuNumPartyIndex");
static_assert(sizeof(BattleMain_C_CheckDebugMenuNumPartyIndex) == 0x000030, "Wrong size on BattleMain_C_CheckDebugMenuNumPartyIndex");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNumPartyIndex, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuNumPartyIndex::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNumPartyIndex, Lo_Value) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuNumPartyIndex::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNumPartyIndex, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BattleMain_C_CheckDebugMenuNumPartyIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNumPartyIndex, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BattleMain_C_CheckDebugMenuNumPartyIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNumPartyIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BattleMain_C_CheckDebugMenuNumPartyIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNumPartyIndex, CallFunc_Array_Get_Item) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuNumPartyIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNumPartyIndex, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BattleMain_C_CheckDebugMenuNumPartyIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNumPartyIndex, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BattleMain_C_CheckDebugMenuNumPartyIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNumPartyIndex, CallFunc_IsValid_ReturnValue) == 0x00002D, "Member 'BattleMain_C_CheckDebugMenuNumPartyIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNumPartyIndex, CallFunc_BattleDebugIsNumberPartyIndex_ReturnValue) == 0x00002E, "Member 'BattleMain_C_CheckDebugMenuNumPartyIndex::CallFunc_BattleDebugIsNumberPartyIndex_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuEnemyCritical
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuEnemyCritical final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsEnemySideCritical_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuEnemyCritical) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuEnemyCritical");
static_assert(sizeof(BattleMain_C_CheckDebugMenuEnemyCritical) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuEnemyCritical");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyCritical, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuEnemyCritical::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyCritical, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuEnemyCritical::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyCritical, CallFunc_BattleDebugIsEnemySideCritical_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuEnemyCritical::CallFunc_BattleDebugIsEnemySideCritical_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuPlayerCritical
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuPlayerCritical final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsPlayerSideCritical_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuPlayerCritical) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuPlayerCritical");
static_assert(sizeof(BattleMain_C_CheckDebugMenuPlayerCritical) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuPlayerCritical");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerCritical, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuPlayerCritical::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerCritical, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuPlayerCritical::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerCritical, CallFunc_BattleDebugIsPlayerSideCritical_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuPlayerCritical::CallFunc_BattleDebugIsPlayerSideCritical_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.DebugFrameWork
// 0x0038 (0x0038 - 0x0000)
struct BattleMain_C_DebugFrameWork final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_Print2;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_DebugFrameWork) == 0x000008, "Wrong alignment on BattleMain_C_DebugFrameWork");
static_assert(sizeof(BattleMain_C_DebugFrameWork) == 0x000038, "Wrong size on BattleMain_C_DebugFrameWork");
static_assert(offsetof(BattleMain_C_DebugFrameWork, Time) == 0x000000, "Member 'BattleMain_C_DebugFrameWork::Time' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugFrameWork, Lo_Print2) == 0x000008, "Member 'BattleMain_C_DebugFrameWork::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugFrameWork, Lo_Print) == 0x000018, "Member 'BattleMain_C_DebugFrameWork::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugFrameWork, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'BattleMain_C_DebugFrameWork::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugFrameWork, CallFunc_IsActionPadCheck_Success) == 0x000029, "Member 'BattleMain_C_DebugFrameWork::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugFrameWork, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'BattleMain_C_DebugFrameWork::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugFrameWork, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000030, "Member 'BattleMain_C_DebugFrameWork::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuPartnerAct100
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuPartnerAct100 final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsPartnerAct100_ReturnValue;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuPartnerAct100) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuPartnerAct100");
static_assert(sizeof(BattleMain_C_CheckDebugMenuPartnerAct100) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuPartnerAct100");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartnerAct100, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuPartnerAct100::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartnerAct100, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuPartnerAct100::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartnerAct100, CallFunc_BattleDebugIsPartnerAct100_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuPartnerAct100::CallFunc_BattleDebugIsPartnerAct100_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuLogOn
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuLogOn final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsLogOn_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuLogOn) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuLogOn");
static_assert(sizeof(BattleMain_C_CheckDebugMenuLogOn) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuLogOn");
static_assert(offsetof(BattleMain_C_CheckDebugMenuLogOn, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuLogOn::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuLogOn, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuLogOn::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuLogOn, CallFunc_BattleDebugIsLogOn_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuLogOn::CallFunc_BattleDebugIsLogOn_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuSetMagGauge
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuSetMagGauge final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_BattleDebugSetMagGauge_retValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuSetMagGauge) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuSetMagGauge");
static_assert(sizeof(BattleMain_C_CheckDebugMenuSetMagGauge) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuSetMagGauge");
static_assert(offsetof(BattleMain_C_CheckDebugMenuSetMagGauge, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuSetMagGauge::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuSetMagGauge, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuSetMagGauge::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuSetMagGauge, CallFunc_BattleDebugSetMagGauge_retValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuSetMagGauge::CallFunc_BattleDebugSetMagGauge_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuSetMagGauge, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'BattleMain_C_CheckDebugMenuSetMagGauge::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BattleLog
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_BattleLog final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBattleDebugFlag_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BattleLog) == 0x000008, "Wrong alignment on BattleMain_C_BattleLog");
static_assert(sizeof(BattleMain_C_BattleLog) == 0x000018, "Wrong size on BattleMain_C_BattleLog");
static_assert(offsetof(BattleMain_C_BattleLog, Text) == 0x000000, "Member 'BattleMain_C_BattleLog::Text' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleLog, CallFunc_CheckBattleDebugFlag_ReturnValue) == 0x000010, "Member 'BattleMain_C_BattleLog::CallFunc_CheckBattleDebugFlag_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.UpDateBattleTempo
// 0x0030 (0x0030 - 0x0000)
struct BattleMain_C_UpDateBattleTempo final
{
public:
	int32                                         Lo_Value;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_OPTION_CONTENT_SPEED_TYPE                   CallFunc_GetSkillSpeedNormal_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBattleFlag_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCompCommon_C> CallFunc_UpdateComponent_self_CastInput;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateComponent_ContinueUpdate;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_UpDateBattleTempo) == 0x000008, "Wrong alignment on BattleMain_C_UpDateBattleTempo");
static_assert(sizeof(BattleMain_C_UpDateBattleTempo) == 0x000030, "Wrong size on BattleMain_C_UpDateBattleTempo");
static_assert(offsetof(BattleMain_C_UpDateBattleTempo, Lo_Value) == 0x000000, "Member 'BattleMain_C_UpDateBattleTempo::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UpDateBattleTempo, CallFunc_GetSkillSpeedNormal_ReturnValue) == 0x000004, "Member 'BattleMain_C_UpDateBattleTempo::CallFunc_GetSkillSpeedNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UpDateBattleTempo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'BattleMain_C_UpDateBattleTempo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UpDateBattleTempo, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BattleMain_C_UpDateBattleTempo::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UpDateBattleTempo, CallFunc_Clamp_ReturnValue) == 0x00000C, "Member 'BattleMain_C_UpDateBattleTempo::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UpDateBattleTempo, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'BattleMain_C_UpDateBattleTempo::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UpDateBattleTempo, CallFunc_CheckBattleFlag_ReturnValue) == 0x000014, "Member 'BattleMain_C_UpDateBattleTempo::CallFunc_CheckBattleFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UpDateBattleTempo, CallFunc_UpdateComponent_self_CastInput) == 0x000018, "Member 'BattleMain_C_UpDateBattleTempo::CallFunc_UpdateComponent_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UpDateBattleTempo, CallFunc_UpdateComponent_ContinueUpdate) == 0x000028, "Member 'BattleMain_C_UpDateBattleTempo::CallFunc_UpdateComponent_ContinueUpdate' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuEnemyHit100
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuEnemyHit100 final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsEnemySideHit100_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuEnemyHit100) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuEnemyHit100");
static_assert(sizeof(BattleMain_C_CheckDebugMenuEnemyHit100) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuEnemyHit100");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyHit100, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuEnemyHit100::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyHit100, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuEnemyHit100::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyHit100, CallFunc_BattleDebugIsEnemySideHit100_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuEnemyHit100::CallFunc_BattleDebugIsEnemySideHit100_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuPlayerHit100
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuPlayerHit100 final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsPlayerSideHit100_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuPlayerHit100) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuPlayerHit100");
static_assert(sizeof(BattleMain_C_CheckDebugMenuPlayerHit100) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuPlayerHit100");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerHit100, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuPlayerHit100::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerHit100, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuPlayerHit100::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerHit100, CallFunc_BattleDebugIsPlayerSideHit100_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuPlayerHit100::CallFunc_BattleDebugIsPlayerSideHit100_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuPartyParam
// 0x1190 (0x1190 - 0x0000)
struct BattleMain_C_CheckDebugMenuPartyParam final
{
public:
	int32                                         Lo_tmpValue;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_DoUpdateUnitState;                              // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_IndexDrawMenuTopFull;                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_IndexDrawMenuTop;                               // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_ActList;                                        // 0x0028(0x0010)(Edit, BlueprintVisible)
	E_BTL_CNT                                     Lo_BarrierStart;                                   // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Lo_BarrierStr;                                     // 0x0040(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         Lo_BadStatusStr;                                   // 0x0050(0x0010)(Edit, BlueprintVisible)
	TArray<E_BAD_STATUS>                          Lo_BadStatus;                                      // 0x0060(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_Index;                                          // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_SKILL_TEKISEI_CATEGORY>              Lo_Tekisei;                                        // 0x0078(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         Lo_TekiseiStr;                                     // 0x0088(0x0010)(Edit, BlueprintVisible)
	TArray<E_ATTRIBUTE_TYPE>                      Lo_Attr;                                           // 0x0098(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         Lo_AishouStr;                                      // 0x00A8(0x0010)(Edit, BlueprintVisible)
	class FString                                 Lo_Menu;                                           // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_IndexMenuTopFull;                               // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_IndexMenuTop;                                   // 0x00D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	TArray<class FString>                         K2Node_MakeArray_Array_1;                          // 0x00F8(0x0010)(ReferenceParm)
	TArray<E_BAD_STATUS>                          K2Node_MakeArray_Array_2;                          // 0x0108(0x0010)(ReferenceParm)
	TArray<E_SKILL_TEKISEI_CATEGORY>              K2Node_MakeArray_Array_3;                          // 0x0118(0x0010)(ReferenceParm)
	TArray<class FString>                         K2Node_MakeArray_Array_4;                          // 0x0128(0x0010)(ReferenceParm)
	TArray<E_ATTRIBUTE_TYPE>                      K2Node_MakeArray_Array_5;                          // 0x0138(0x0010)(ReferenceParm)
	TArray<class FString>                         K2Node_MakeArray_Array_6;                          // 0x0148(0x0010)(ReferenceParm)
	struct FBtlCharData                           CallFunc_GetBtlCharaData_ReturnValue;              // 0x0158(0x0148)()
	class FText                                   CallFunc_GetSkillName_ReturnValue;                 // 0x02A0(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnitGetVisibility_IsVisible;              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x02EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue; // 0x0308(0x00D0)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x03D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3EB[0x1];                                      // 0x03EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x03F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0405(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue_1;                 // 0x0406(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_407[0x1];                                      // 0x0407(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys_1;                          // 0x0408(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0420(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0438(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebugMenuItemExistFromPathName_Name_ReturnValue; // 0x0464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_465[0x3];                                      // 0x0465(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_1; // 0x0468(0x00D0)()
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0540(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55C[0x4];                                      // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0560(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_574[0x4];                                      // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0578(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_GetSideFromIndex_ReturnValue;             // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0589(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58A[0x2];                                      // 0x058A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNowMP_ReturnValue;                     // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0590(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_2; // 0x05A8(0x00D0)()
	E_BTL_SIDE                                    CallFunc_GetSideFromIndex_ReturnValue_1;           // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0679(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_67A[0x2];                                      // 0x067A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x067C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_681[0x3];                                      // 0x0681(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNowHP_ReturnValue;                     // 0x0684(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0688(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_3;          // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A4[0x4];                                      // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_3; // 0x06A8(0x00D0)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x077C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_781[0x3];                                      // 0x0781(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0788(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0798(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x07A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item_1;                         // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B9[0x3];                                      // 0x07B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_4;          // 0x07BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x07C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C5[0x3];                                      // 0x07C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_4; // 0x07C8(0x00D0)()
	bool                                          CallFunc_CheckBadStatus_ReturnValue;               // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0899(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x089A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89B[0x5];                                      // 0x089B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x08A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x08B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x08B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B5[0x3];                                      // 0x08B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BC[0x4];                                      // 0x08BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x08C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBtlCharData                           CallFunc_GetBtlCharaData_ReturnValue_1;            // 0x08D0(0x0148)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0A18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0A28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2C[0x4];                                      // 0x0A2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0A30(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0A40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_5;          // 0x0A44(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0A4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A4D[0x3];                                      // 0x0A4D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_5; // 0x0A50(0x00D0)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0B20(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_3;            // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TEKISEI_CATEGORY                      CallFunc_Array_Get_Item_3;                         // 0x0B31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B32[0x6];                                      // 0x0B32(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_4;                         // 0x0B38(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0B48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0B4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B4D[0x3];                                      // 0x0B4D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCharData                           CallFunc_GetBtlCharaData_ReturnValue_2;            // 0x0B50(0x0148)()
	int32                                         CallFunc_Array_Get_Item_5;                         // 0x0C98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9C[0x4];                                      // 0x0C9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0CA0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x0CB0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_6;                         // 0x0CC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_6;          // 0x0CC4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CCC[0x4];                                      // 0x0CCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_6; // 0x0CD0(0x00D0)()
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0DA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0DA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_4;            // 0x0DA5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ATTRIBUTE_TYPE                              CallFunc_Array_Get_Item_7;                         // 0x0DA6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateBossAishou_ReturnValue;             // 0x0DA7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBtlCharData                           CallFunc_GetBtlCharaData_ReturnValue_3;            // 0x0DA8(0x0148)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x0EF0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_8;                         // 0x0F00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F04[0x4];                                      // 0x0F04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x0F08(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_9;                         // 0x0F18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x0F28(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_20;             // 0x0F38(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_7;          // 0x0F48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_8;          // 0x0F50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_7; // 0x0F58(0x00D0)()
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_8; // 0x1028(0x00D0)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_5;            // 0x10F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_6;            // 0x10F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10FA[0x2];                                     // 0x10FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x10FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x1100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1101[0x7];                                     // 0x1101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_21;             // 0x1108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetAllIsInFieldList_ReturnValue;          // 0x1118(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetNameAddID_self_CastInput;           // 0x1128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_BI_GetNameAddID_Name;                     // 0x1138(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x1150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x1160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_22;             // 0x1170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_23;             // 0x1180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuPartyParam) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuPartyParam");
static_assert(sizeof(BattleMain_C_CheckDebugMenuPartyParam) == 0x001190, "Wrong size on BattleMain_C_CheckDebugMenuPartyParam");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Lo_tmpValue) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Lo_tmpValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Lo_DoUpdateUnitState) == 0x000004, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Lo_DoUpdateUnitState' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Lo_IndexDrawMenuTopFull) == 0x000008, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Lo_IndexDrawMenuTopFull' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Lo_IndexDrawMenuTop) == 0x000018, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Lo_IndexDrawMenuTop' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Lo_ActList) == 0x000028, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Lo_ActList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Lo_BarrierStart) == 0x000038, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Lo_BarrierStart' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Lo_BarrierStr) == 0x000040, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Lo_BarrierStr' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Lo_BadStatusStr) == 0x000050, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Lo_BadStatusStr' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Lo_BadStatus) == 0x000060, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Lo_BadStatus' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Lo_Index) == 0x000070, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Lo_Tekisei) == 0x000078, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Lo_Tekisei' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Lo_TekiseiStr) == 0x000088, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Lo_TekiseiStr' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Lo_Attr) == 0x000098, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Lo_Attr' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Lo_AishouStr) == 0x0000A8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Lo_AishouStr' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Lo_Menu) == 0x0000B8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Lo_Menu' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Lo_IndexMenuTopFull) == 0x0000C8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Lo_IndexMenuTopFull' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Lo_IndexMenuTop) == 0x0000D8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Lo_IndexMenuTop' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, K2Node_MakeArray_Array) == 0x0000E8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, K2Node_MakeArray_Array_1) == 0x0000F8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, K2Node_MakeArray_Array_2) == 0x000108, "Member 'BattleMain_C_CheckDebugMenuPartyParam::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, K2Node_MakeArray_Array_3) == 0x000118, "Member 'BattleMain_C_CheckDebugMenuPartyParam::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, K2Node_MakeArray_Array_4) == 0x000128, "Member 'BattleMain_C_CheckDebugMenuPartyParam::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, K2Node_MakeArray_Array_5) == 0x000138, "Member 'BattleMain_C_CheckDebugMenuPartyParam::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, K2Node_MakeArray_Array_6) == 0x000148, "Member 'BattleMain_C_CheckDebugMenuPartyParam::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetBtlCharaData_ReturnValue) == 0x000158, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetBtlCharaData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetSkillName_ReturnValue) == 0x0002A0, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetSkillName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Conv_TextToString_ReturnValue) == 0x0002B8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue) == 0x0002C8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0002D8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_UnitGetVisibility_IsVisible) == 0x0002E8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_UnitGetVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Conv_StringToName_ReturnValue) == 0x0002EC, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Conv_IntToString_ReturnValue) == 0x0002F8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue) == 0x000308, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0003D8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Greater_IntInt_ReturnValue) == 0x0003E8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x0003E9, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Not_PreBool_ReturnValue) == 0x0003EA, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Temp_int_Array_Index_Variable) == 0x0003EC, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Map_Keys_Keys) == 0x0003F0, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Array_Find_ReturnValue) == 0x000400, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Map_Remove_ReturnValue) == 0x000404, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000405, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Map_Remove_ReturnValue_1) == 0x000406, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Map_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Map_Keys_Keys_1) == 0x000408, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Array_Find_ReturnValue_1) == 0x000418, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000420, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000430, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Temp_int_Array_Index_Variable_1) == 0x000434, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000438, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Temp_int_Loop_Counter_Variable) == 0x000448, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Temp_int_Array_Index_Variable_2) == 0x00044C, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Add_IntInt_ReturnValue) == 0x000450, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Temp_int_Loop_Counter_Variable_1) == 0x000454, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000458, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Add_IntInt_ReturnValue_1) == 0x000460, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_IsDebugMenuItemExistFromPathName_Name_ReturnValue) == 0x000464, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_IsDebugMenuItemExistFromPathName_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_1) == 0x000468, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Temp_int_Array_Index_Variable_3) == 0x000538, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000540, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000550, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Array_Length_ReturnValue) == 0x000554, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Temp_int_Loop_Counter_Variable_2) == 0x000558, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000560, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Add_IntInt_ReturnValue_2) == 0x000570, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000578, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetSideFromIndex_ReturnValue) == 0x000588, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetSideFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000589, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetNowMP_ReturnValue) == 0x00058C, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetNowMP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000590, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Conv_StringToName_ReturnValue_2) == 0x0005A0, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_2) == 0x0005A8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetSideFromIndex_ReturnValue_1) == 0x000678, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetSideFromIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000679, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Subtract_IntInt_ReturnValue) == 0x00067C, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000680, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetNowHP_ReturnValue) == 0x000684, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetNowHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000688, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Conv_StringToName_ReturnValue_3) == 0x000698, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Conv_StringToName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Temp_int_Loop_Counter_Variable_3) == 0x0006A0, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_3) == 0x0006A8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Add_IntInt_ReturnValue_3) == 0x000778, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00077C, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x000780, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Temp_int_Array_Index_Variable_4) == 0x000784, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000788, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Array_Get_Item) == 0x000798, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0007A8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Array_Get_Item_1) == 0x0007B8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Conv_StringToName_ReturnValue_4) == 0x0007BC, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Conv_StringToName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0007C4, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_4) == 0x0007C8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_CheckBadStatus_ReturnValue) == 0x000898, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_CheckBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000899, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00089A, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0008A0, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, Temp_int_Loop_Counter_Variable_4) == 0x0008B0, "Member 'BattleMain_C_CheckDebugMenuPartyParam::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Less_IntInt_ReturnValue) == 0x0008B4, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Add_IntInt_ReturnValue_4) == 0x0008B8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0008C0, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetBtlCharaData_ReturnValue_1) == 0x0008D0, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetBtlCharaData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000A18, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Array_Get_Item_2) == 0x000A28, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000A30, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Array_Length_ReturnValue_1) == 0x000A40, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Conv_StringToName_ReturnValue_5) == 0x000A44, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Conv_StringToName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Less_IntInt_ReturnValue_1) == 0x000A4C, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_5) == 0x000A50, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000B20, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_NotEqual_IntInt_ReturnValue_3) == 0x000B30, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_NotEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Array_Get_Item_3) == 0x000B31, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Array_Get_Item_4) == 0x000B38, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Array_Length_ReturnValue_2) == 0x000B48, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Less_IntInt_ReturnValue_2) == 0x000B4C, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetBtlCharaData_ReturnValue_2) == 0x000B50, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetBtlCharaData_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Array_Get_Item_5) == 0x000C98, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000CA0, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_16) == 0x000CB0, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Array_Get_Item_6) == 0x000CC0, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Conv_StringToName_ReturnValue_6) == 0x000CC4, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Conv_StringToName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_6) == 0x000CD0, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Array_Length_ReturnValue_3) == 0x000DA0, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Less_IntInt_ReturnValue_3) == 0x000DA4, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_NotEqual_IntInt_ReturnValue_4) == 0x000DA5, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_NotEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Array_Get_Item_7) == 0x000DA6, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_UpdateBossAishou_ReturnValue) == 0x000DA7, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_UpdateBossAishou_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetBtlCharaData_ReturnValue_3) == 0x000DA8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetBtlCharaData_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_17) == 0x000EF0, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Array_Get_Item_8) == 0x000F00, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_18) == 0x000F08, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Array_Get_Item_9) == 0x000F18, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_19) == 0x000F28, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_20) == 0x000F38, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Conv_StringToName_ReturnValue_7) == 0x000F48, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Conv_StringToName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Conv_StringToName_ReturnValue_8) == 0x000F50, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Conv_StringToName_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_7) == 0x000F58, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_8) == 0x001028, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_NotEqual_IntInt_ReturnValue_5) == 0x0010F8, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_NotEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_NotEqual_IntInt_ReturnValue_6) == 0x0010F9, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_NotEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Array_Length_ReturnValue_4) == 0x0010FC, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Less_IntInt_ReturnValue_4) == 0x001100, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_21) == 0x001108, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_GetAllIsInFieldList_ReturnValue) == 0x001118, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_GetAllIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_BI_GetNameAddID_self_CastInput) == 0x001128, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_BI_GetNameAddID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_BI_GetNameAddID_Name) == 0x001138, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_BI_GetNameAddID_Name' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Conv_TextToString_ReturnValue_1) == 0x001150, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Conv_TextToString_ReturnValue_2) == 0x001160, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_22) == 0x001170, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam, CallFunc_Concat_StrStr_ReturnValue_23) == 0x001180, "Member 'BattleMain_C_CheckDebugMenuPartyParam::CallFunc_Concat_StrStr_ReturnValue_23' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetPostProcessCtrl
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_GetPostProcessCtrl final
{
public:
	class UBattlePostProcessCtrl_C*               Param_BattlePostProcessCtrl;                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetPostProcessCtrl) == 0x000008, "Wrong alignment on BattleMain_C_GetPostProcessCtrl");
static_assert(sizeof(BattleMain_C_GetPostProcessCtrl) == 0x000008, "Wrong size on BattleMain_C_GetPostProcessCtrl");
static_assert(offsetof(BattleMain_C_GetPostProcessCtrl, Param_BattlePostProcessCtrl) == 0x000000, "Member 'BattleMain_C_GetPostProcessCtrl::Param_BattlePostProcessCtrl' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuInochigoi100
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuInochigoi100 final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_TalkDebug_CheckInochigoi100_IsContinue;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuInochigoi100) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuInochigoi100");
static_assert(sizeof(BattleMain_C_CheckDebugMenuInochigoi100) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuInochigoi100");
static_assert(offsetof(BattleMain_C_CheckDebugMenuInochigoi100, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuInochigoi100::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuInochigoi100, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuInochigoi100::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuInochigoi100, CallFunc_TalkDebug_CheckInochigoi100_IsContinue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuInochigoi100::CallFunc_TalkDebug_CheckInochigoi100_IsContinue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetSaveTargetIndex
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_SetSaveTargetIndex final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemy_retValue;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SetSaveTargetIndex) == 0x000004, "Wrong alignment on BattleMain_C_SetSaveTargetIndex");
static_assert(sizeof(BattleMain_C_SetSaveTargetIndex) == 0x000008, "Wrong size on BattleMain_C_SetSaveTargetIndex");
static_assert(offsetof(BattleMain_C_SetSaveTargetIndex, PartyIndex) == 0x000000, "Member 'BattleMain_C_SetSaveTargetIndex::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetSaveTargetIndex, CallFunc_IsEnemy_retValue) == 0x000004, "Member 'BattleMain_C_SetSaveTargetIndex::CallFunc_IsEnemy_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetSaveTargetIndex
// 0x0004 (0x0004 - 0x0000)
struct BattleMain_C_GetSaveTargetIndex final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetSaveTargetIndex) == 0x000004, "Wrong alignment on BattleMain_C_GetSaveTargetIndex");
static_assert(sizeof(BattleMain_C_GetSaveTargetIndex) == 0x000004, "Wrong size on BattleMain_C_GetSaveTargetIndex");
static_assert(offsetof(BattleMain_C_GetSaveTargetIndex, RetValue) == 0x000000, "Member 'BattleMain_C_GetSaveTargetIndex::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.EndSaveHeroType
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_EndSaveHeroType final
{
public:
	E_BTL_CHAR_TYPE                               CallFunc_GetHeroCharaType_retValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_EndSaveHeroType) == 0x000001, "Wrong alignment on BattleMain_C_EndSaveHeroType");
static_assert(sizeof(BattleMain_C_EndSaveHeroType) == 0x000002, "Wrong size on BattleMain_C_EndSaveHeroType");
static_assert(offsetof(BattleMain_C_EndSaveHeroType, CallFunc_GetHeroCharaType_retValue) == 0x000000, "Member 'BattleMain_C_EndSaveHeroType::CallFunc_GetHeroCharaType_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_EndSaveHeroType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BattleMain_C_EndSaveHeroType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.AddResultDataForTalk
// 0x0370 (0x0370 - 0x0000)
struct BattleMain_C_AddResultDataForTalk final
{
public:
	struct FBtlParty                              InParty;                                           // 0x0000(0x0320)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FBtlResultData                         CallFunc_GetExpMakkaItemForTalk_ReturnValue;       // 0x0320(0x0050)()
};
static_assert(alignof(BattleMain_C_AddResultDataForTalk) == 0x000010, "Wrong alignment on BattleMain_C_AddResultDataForTalk");
static_assert(sizeof(BattleMain_C_AddResultDataForTalk) == 0x000370, "Wrong size on BattleMain_C_AddResultDataForTalk");
static_assert(offsetof(BattleMain_C_AddResultDataForTalk, InParty) == 0x000000, "Member 'BattleMain_C_AddResultDataForTalk::InParty' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddResultDataForTalk, CallFunc_GetExpMakkaItemForTalk_ReturnValue) == 0x000320, "Member 'BattleMain_C_AddResultDataForTalk::CallFunc_GetExpMakkaItemForTalk_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetSoundManager
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_GetSoundManager final
{
public:
	class UBattleSoundManager_C*                  Param_BattleSoundManager;                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetSoundManager) == 0x000008, "Wrong alignment on BattleMain_C_GetSoundManager");
static_assert(sizeof(BattleMain_C_GetSoundManager) == 0x000008, "Wrong size on BattleMain_C_GetSoundManager");
static_assert(offsetof(BattleMain_C_GetSoundManager, Param_BattleSoundManager) == 0x000000, "Member 'BattleMain_C_GetSoundManager::Param_BattleSoundManager' has a wrong offset!");

// Function BattleMain.BattleMain_C.MakeRenzokuBattle
// 0x0150 (0x0150 - 0x0000)
struct BattleMain_C_MakeRenzokuBattle final
{
public:
	int32                                         EncID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEvent;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharaBase_C*>                   MemberUnitList;                                    // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          RetValue;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharaBase_C*>                   Lo_NewList;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Lo_End;                                            // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         NewLocalVar_0;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ACharaBase_C*>                   Lo_List;                                           // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Lo_EncID;                                          // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_EvtID;                                          // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckRenzokuEncountMagatsuhiDevil_ReturnValue; // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckTimeAttackBattle_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Change_BGM_valid;                         // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0xD];                                       // 0x0073(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlDescData                           K2Node_MakeStruct_BtlDescData;                     // 0x0080(0x0090)()
	class ACharaBase_C*                           CallFunc_Array_Get_Item;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11E[0x2];                                      // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_DestroyUnit_self_CastInput;            // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_DestroyUnit_retValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExist_ReturnValue;                      // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13B[0x1];                                      // 0x013B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyLoopMax_retValue;           // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyStart_retValue;             // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_MakeRenzokuBattle) == 0x000010, "Wrong alignment on BattleMain_C_MakeRenzokuBattle");
static_assert(sizeof(BattleMain_C_MakeRenzokuBattle) == 0x000150, "Wrong size on BattleMain_C_MakeRenzokuBattle");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, EncID) == 0x000000, "Member 'BattleMain_C_MakeRenzokuBattle::EncID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, IsEvent) == 0x000004, "Member 'BattleMain_C_MakeRenzokuBattle::IsEvent' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, MemberUnitList) == 0x000008, "Member 'BattleMain_C_MakeRenzokuBattle::MemberUnitList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, RetValue) == 0x000018, "Member 'BattleMain_C_MakeRenzokuBattle::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, Lo_NewList) == 0x000020, "Member 'BattleMain_C_MakeRenzokuBattle::Lo_NewList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, Lo_End) == 0x000030, "Member 'BattleMain_C_MakeRenzokuBattle::Lo_End' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, Lo_Start) == 0x000034, "Member 'BattleMain_C_MakeRenzokuBattle::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, NewLocalVar_0) == 0x000038, "Member 'BattleMain_C_MakeRenzokuBattle::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, Lo_List) == 0x000048, "Member 'BattleMain_C_MakeRenzokuBattle::Lo_List' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, Lo_EncID) == 0x000058, "Member 'BattleMain_C_MakeRenzokuBattle::Lo_EncID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, Lo_EvtID) == 0x00005C, "Member 'BattleMain_C_MakeRenzokuBattle::Lo_EvtID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'BattleMain_C_MakeRenzokuBattle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, CallFunc_CheckRenzokuEncountMagatsuhiDevil_ReturnValue) == 0x000061, "Member 'BattleMain_C_MakeRenzokuBattle::CallFunc_CheckRenzokuEncountMagatsuhiDevil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BattleMain_C_MakeRenzokuBattle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BattleMain_C_MakeRenzokuBattle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'BattleMain_C_MakeRenzokuBattle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, CallFunc_CheckTimeAttackBattle_ReturnValue) == 0x000070, "Member 'BattleMain_C_MakeRenzokuBattle::CallFunc_CheckTimeAttackBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, CallFunc_Change_BGM_valid) == 0x000071, "Member 'BattleMain_C_MakeRenzokuBattle::CallFunc_Change_BGM_valid' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000072, "Member 'BattleMain_C_MakeRenzokuBattle::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, K2Node_MakeStruct_BtlDescData) == 0x000080, "Member 'BattleMain_C_MakeRenzokuBattle::K2Node_MakeStruct_BtlDescData' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, CallFunc_Array_Get_Item) == 0x000110, "Member 'BattleMain_C_MakeRenzokuBattle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'BattleMain_C_MakeRenzokuBattle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, CallFunc_Less_IntInt_ReturnValue) == 0x00011C, "Member 'BattleMain_C_MakeRenzokuBattle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, CallFunc_Not_PreBool_ReturnValue_1) == 0x00011D, "Member 'BattleMain_C_MakeRenzokuBattle::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, Temp_int_Variable) == 0x000120, "Member 'BattleMain_C_MakeRenzokuBattle::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, CallFunc_BI_DestroyUnit_self_CastInput) == 0x000128, "Member 'BattleMain_C_MakeRenzokuBattle::CallFunc_BI_DestroyUnit_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, CallFunc_BI_DestroyUnit_retValue) == 0x000138, "Member 'BattleMain_C_MakeRenzokuBattle::CallFunc_BI_DestroyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, CallFunc_IsExist_ReturnValue) == 0x000139, "Member 'BattleMain_C_MakeRenzokuBattle::CallFunc_IsExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00013A, "Member 'BattleMain_C_MakeRenzokuBattle::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, CallFunc_Add_IntInt_ReturnValue_1) == 0x00013C, "Member 'BattleMain_C_MakeRenzokuBattle::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, CallFunc_const_GetEnemyLoopMax_retValue) == 0x000140, "Member 'BattleMain_C_MakeRenzokuBattle::CallFunc_const_GetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeRenzokuBattle, CallFunc_const_GetEnemyStart_retValue) == 0x000144, "Member 'BattleMain_C_MakeRenzokuBattle::CallFunc_const_GetEnemyStart_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BattleUISwitch
// 0x0068 (0x0068 - 0x0000)
struct BattleMain_C_BattleUISwitch final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IncludeMoonAge;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Lo_Visibility;                                     // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_PartyPanelSetVisibility_retValue;      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_PartyPanelSetVisibility_retValue_1;    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleUIManager_C> CallFunc_BI_PressIconSlideIn_self_CastInput;       // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_PressIconSlideIn_Ret;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleUIManager_C> CallFunc_BI_UpliftingGaugeSlideIn_self_CastInput;  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_UpliftingGaugeSlideIn_Ret;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleUIManager_C> CallFunc_BI_UpliftingGaugeSlideOut_self_CastInput; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_UpliftingGaugeSlideOut_Ret;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleUIManager_C> CallFunc_BI_PressIconSlideOut_self_CastInput;      // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_PressIconSlideOut_Ret;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BattleUISwitch) == 0x000008, "Wrong alignment on BattleMain_C_BattleUISwitch");
static_assert(sizeof(BattleMain_C_BattleUISwitch) == 0x000068, "Wrong size on BattleMain_C_BattleUISwitch");
static_assert(offsetof(BattleMain_C_BattleUISwitch, Sw) == 0x000000, "Member 'BattleMain_C_BattleUISwitch::Sw' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleUISwitch, IncludeMoonAge) == 0x000001, "Member 'BattleMain_C_BattleUISwitch::IncludeMoonAge' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleUISwitch, Lo_Visibility) == 0x000002, "Member 'BattleMain_C_BattleUISwitch::Lo_Visibility' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleUISwitch, CallFunc_BI_PartyPanelSetVisibility_retValue) == 0x000003, "Member 'BattleMain_C_BattleUISwitch::CallFunc_BI_PartyPanelSetVisibility_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleUISwitch, CallFunc_BI_PartyPanelSetVisibility_retValue_1) == 0x000004, "Member 'BattleMain_C_BattleUISwitch::CallFunc_BI_PartyPanelSetVisibility_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleUISwitch, CallFunc_BI_PressIconSlideIn_self_CastInput) == 0x000008, "Member 'BattleMain_C_BattleUISwitch::CallFunc_BI_PressIconSlideIn_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleUISwitch, CallFunc_BI_PressIconSlideIn_Ret) == 0x000018, "Member 'BattleMain_C_BattleUISwitch::CallFunc_BI_PressIconSlideIn_Ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleUISwitch, CallFunc_BI_UpliftingGaugeSlideIn_self_CastInput) == 0x000020, "Member 'BattleMain_C_BattleUISwitch::CallFunc_BI_UpliftingGaugeSlideIn_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleUISwitch, CallFunc_BI_UpliftingGaugeSlideIn_Ret) == 0x000030, "Member 'BattleMain_C_BattleUISwitch::CallFunc_BI_UpliftingGaugeSlideIn_Ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleUISwitch, CallFunc_BI_UpliftingGaugeSlideOut_self_CastInput) == 0x000038, "Member 'BattleMain_C_BattleUISwitch::CallFunc_BI_UpliftingGaugeSlideOut_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleUISwitch, CallFunc_BI_UpliftingGaugeSlideOut_Ret) == 0x000048, "Member 'BattleMain_C_BattleUISwitch::CallFunc_BI_UpliftingGaugeSlideOut_Ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleUISwitch, CallFunc_BI_PressIconSlideOut_self_CastInput) == 0x000050, "Member 'BattleMain_C_BattleUISwitch::CallFunc_BI_PressIconSlideOut_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleUISwitch, CallFunc_BI_PressIconSlideOut_Ret) == 0x000060, "Member 'BattleMain_C_BattleUISwitch::CallFunc_BI_PressIconSlideOut_Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.ClearSummonList
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_ClearSummonList final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlSummonData                         K2Node_MakeStruct_BtlSummonData;                   // 0x000C(0x000C)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_ClearSummonList) == 0x000004, "Wrong alignment on BattleMain_C_ClearSummonList");
static_assert(sizeof(BattleMain_C_ClearSummonList) == 0x000020, "Wrong size on BattleMain_C_ClearSummonList");
static_assert(offsetof(BattleMain_C_ClearSummonList, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattleMain_C_ClearSummonList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ClearSummonList, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattleMain_C_ClearSummonList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ClearSummonList, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattleMain_C_ClearSummonList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ClearSummonList, K2Node_MakeStruct_BtlSummonData) == 0x00000C, "Member 'BattleMain_C_ClearSummonList::K2Node_MakeStruct_BtlSummonData' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ClearSummonList, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BattleMain_C_ClearSummonList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ClearSummonList, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BattleMain_C_ClearSummonList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetSummonDevilID
// 0x0024 (0x0024 - 0x0000)
struct BattleMain_C_SetSummonDevilID final
{
public:
	int32                                         DevilID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SummonPosID;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlSummonData                         Lo_Data;                                           // 0x0008(0x000C)(Edit, BlueprintVisible)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlSummonData                         K2Node_MakeStruct_BtlSummonData;                   // 0x0018(0x000C)()
};
static_assert(alignof(BattleMain_C_SetSummonDevilID) == 0x000004, "Wrong alignment on BattleMain_C_SetSummonDevilID");
static_assert(sizeof(BattleMain_C_SetSummonDevilID) == 0x000024, "Wrong size on BattleMain_C_SetSummonDevilID");
static_assert(offsetof(BattleMain_C_SetSummonDevilID, DevilID) == 0x000000, "Member 'BattleMain_C_SetSummonDevilID::DevilID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetSummonDevilID, SummonPosID) == 0x000004, "Member 'BattleMain_C_SetSummonDevilID::SummonPosID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetSummonDevilID, Lo_Data) == 0x000008, "Member 'BattleMain_C_SetSummonDevilID::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetSummonDevilID, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'BattleMain_C_SetSummonDevilID::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetSummonDevilID, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000015, "Member 'BattleMain_C_SetSummonDevilID::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetSummonDevilID, CallFunc_Less_IntInt_ReturnValue) == 0x000016, "Member 'BattleMain_C_SetSummonDevilID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetSummonDevilID, K2Node_MakeStruct_BtlSummonData) == 0x000018, "Member 'BattleMain_C_SetSummonDevilID::K2Node_MakeStruct_BtlSummonData' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetSummonList
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_GetSummonList final
{
public:
	TArray<struct FBtlSummonData>                 RetValue;                                          // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BattleMain_C_GetSummonList) == 0x000008, "Wrong alignment on BattleMain_C_GetSummonList");
static_assert(sizeof(BattleMain_C_GetSummonList) == 0x000010, "Wrong size on BattleMain_C_GetSummonList");
static_assert(offsetof(BattleMain_C_GetSummonList, RetValue) == 0x000000, "Member 'BattleMain_C_GetSummonList::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetSummonPartyIndex
// 0x002C (0x002C - 0x0000)
struct BattleMain_C_SetSummonPartyIndex final
{
public:
	int32                                         ArrayIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlSummonData                         Lo_Data;                                           // 0x0008(0x000C)(Edit, BlueprintVisible)
	struct FBtlSummonData                         CallFunc_Array_Get_Item;                           // 0x0014(0x000C)()
	struct FBtlSummonData                         K2Node_MakeStruct_BtlSummonData;                   // 0x0020(0x000C)()
};
static_assert(alignof(BattleMain_C_SetSummonPartyIndex) == 0x000004, "Wrong alignment on BattleMain_C_SetSummonPartyIndex");
static_assert(sizeof(BattleMain_C_SetSummonPartyIndex) == 0x00002C, "Wrong size on BattleMain_C_SetSummonPartyIndex");
static_assert(offsetof(BattleMain_C_SetSummonPartyIndex, ArrayIndex) == 0x000000, "Member 'BattleMain_C_SetSummonPartyIndex::ArrayIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetSummonPartyIndex, PartyIndex) == 0x000004, "Member 'BattleMain_C_SetSummonPartyIndex::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetSummonPartyIndex, Lo_Data) == 0x000008, "Member 'BattleMain_C_SetSummonPartyIndex::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetSummonPartyIndex, CallFunc_Array_Get_Item) == 0x000014, "Member 'BattleMain_C_SetSummonPartyIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetSummonPartyIndex, K2Node_MakeStruct_BtlSummonData) == 0x000020, "Member 'BattleMain_C_SetSummonPartyIndex::K2Node_MakeStruct_BtlSummonData' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetSummonTaskID
// 0x002C (0x002C - 0x0000)
struct BattleMain_C_SetSummonTaskID final
{
public:
	int32                                         ArrayIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TaskID;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlSummonData                         Lo_Data;                                           // 0x0008(0x000C)(Edit, BlueprintVisible)
	struct FBtlSummonData                         CallFunc_Array_Get_Item;                           // 0x0014(0x000C)()
	struct FBtlSummonData                         K2Node_MakeStruct_BtlSummonData;                   // 0x0020(0x000C)()
};
static_assert(alignof(BattleMain_C_SetSummonTaskID) == 0x000004, "Wrong alignment on BattleMain_C_SetSummonTaskID");
static_assert(sizeof(BattleMain_C_SetSummonTaskID) == 0x00002C, "Wrong size on BattleMain_C_SetSummonTaskID");
static_assert(offsetof(BattleMain_C_SetSummonTaskID, ArrayIndex) == 0x000000, "Member 'BattleMain_C_SetSummonTaskID::ArrayIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetSummonTaskID, TaskID) == 0x000004, "Member 'BattleMain_C_SetSummonTaskID::TaskID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetSummonTaskID, Lo_Data) == 0x000008, "Member 'BattleMain_C_SetSummonTaskID::Lo_Data' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetSummonTaskID, CallFunc_Array_Get_Item) == 0x000014, "Member 'BattleMain_C_SetSummonTaskID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetSummonTaskID, K2Node_MakeStruct_BtlSummonData) == 0x000020, "Member 'BattleMain_C_SetSummonTaskID::K2Node_MakeStruct_BtlSummonData' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetSaveCommandPage
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_SetSaveCommandPage final
{
public:
	E_BTL_UI_COMM_STEP                            Command;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_SetSaveCommandPage) == 0x000001, "Wrong alignment on BattleMain_C_SetSaveCommandPage");
static_assert(sizeof(BattleMain_C_SetSaveCommandPage) == 0x000001, "Wrong size on BattleMain_C_SetSaveCommandPage");
static_assert(offsetof(BattleMain_C_SetSaveCommandPage, Command) == 0x000000, "Member 'BattleMain_C_SetSaveCommandPage::Command' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetSaveCommandPage
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_GetSaveCommandPage final
{
public:
	E_BTL_UI_COMM_STEP                            RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetSaveCommandPage) == 0x000001, "Wrong alignment on BattleMain_C_GetSaveCommandPage");
static_assert(sizeof(BattleMain_C_GetSaveCommandPage) == 0x000001, "Wrong size on BattleMain_C_GetSaveCommandPage");
static_assert(offsetof(BattleMain_C_GetSaveCommandPage, RetValue) == 0x000000, "Member 'BattleMain_C_GetSaveCommandPage::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetAIValue
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_SetAIValue final
{
public:
	int32                                         In_Value;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SetAIValue) == 0x000004, "Wrong alignment on BattleMain_C_SetAIValue");
static_assert(sizeof(BattleMain_C_SetAIValue) == 0x000010, "Wrong size on BattleMain_C_SetAIValue");
static_assert(offsetof(BattleMain_C_SetAIValue, In_Value) == 0x000000, "Member 'BattleMain_C_SetAIValue::In_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetAIValue, Param_Index) == 0x000004, "Member 'BattleMain_C_SetAIValue::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetAIValue, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BattleMain_C_SetAIValue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetAIValue, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BattleMain_C_SetAIValue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.DelAIValue
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_DelAIValue final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_DelAIValue) == 0x000004, "Wrong alignment on BattleMain_C_DelAIValue");
static_assert(sizeof(BattleMain_C_DelAIValue) == 0x000010, "Wrong size on BattleMain_C_DelAIValue");
static_assert(offsetof(BattleMain_C_DelAIValue, Param_Index) == 0x000000, "Member 'BattleMain_C_DelAIValue::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DelAIValue, Temp_int_Variable) == 0x000004, "Member 'BattleMain_C_DelAIValue::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DelAIValue, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BattleMain_C_DelAIValue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DelAIValue, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BattleMain_C_DelAIValue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.ClearAIValueAll
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_ClearAIValueAll final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_ClearAIValueAll) == 0x000004, "Wrong alignment on BattleMain_C_ClearAIValueAll");
static_assert(sizeof(BattleMain_C_ClearAIValueAll) == 0x000018, "Wrong size on BattleMain_C_ClearAIValueAll");
static_assert(offsetof(BattleMain_C_ClearAIValueAll, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattleMain_C_ClearAIValueAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ClearAIValueAll, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattleMain_C_ClearAIValueAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ClearAIValueAll, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattleMain_C_ClearAIValueAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ClearAIValueAll, Temp_int_Variable) == 0x00000C, "Member 'BattleMain_C_ClearAIValueAll::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ClearAIValueAll, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BattleMain_C_ClearAIValueAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ClearAIValueAll, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BattleMain_C_ClearAIValueAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetAIValue
// 0x0014 (0x0014 - 0x0000)
struct BattleMain_C_GetAIValue final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_GetAIValue) == 0x000004, "Wrong alignment on BattleMain_C_GetAIValue");
static_assert(sizeof(BattleMain_C_GetAIValue) == 0x000014, "Wrong size on BattleMain_C_GetAIValue");
static_assert(offsetof(BattleMain_C_GetAIValue, Param_Index) == 0x000000, "Member 'BattleMain_C_GetAIValue::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetAIValue, RetValue) == 0x000004, "Member 'BattleMain_C_GetAIValue::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetAIValue, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BattleMain_C_GetAIValue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetAIValue, CallFunc_Array_Get_Item) == 0x00000C, "Member 'BattleMain_C_GetAIValue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetAIValue, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BattleMain_C_GetAIValue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuEscapeSuccess
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuEscapeSuccess final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsEscapeSuccess_retValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuEscapeSuccess) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuEscapeSuccess");
static_assert(sizeof(BattleMain_C_CheckDebugMenuEscapeSuccess) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuEscapeSuccess");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEscapeSuccess, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuEscapeSuccess::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEscapeSuccess, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuEscapeSuccess::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEscapeSuccess, CallFunc_BattleDebugIsEscapeSuccess_retValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuEscapeSuccess::CallFunc_BattleDebugIsEscapeSuccess_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuEscapeFail
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuEscapeFail final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsEscapeFail_retValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuEscapeFail) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuEscapeFail");
static_assert(sizeof(BattleMain_C_CheckDebugMenuEscapeFail) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuEscapeFail");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEscapeFail, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuEscapeFail::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEscapeFail, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuEscapeFail::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEscapeFail, CallFunc_BattleDebugIsEscapeFail_retValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuEscapeFail::CallFunc_BattleDebugIsEscapeFail_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetCharActionNum
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_GetCharActionNum final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActionNum_retValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetCharActionNum) == 0x000004, "Wrong alignment on BattleMain_C_GetCharActionNum");
static_assert(sizeof(BattleMain_C_GetCharActionNum) == 0x000008, "Wrong size on BattleMain_C_GetCharActionNum");
static_assert(offsetof(BattleMain_C_GetCharActionNum, RetValue) == 0x000000, "Member 'BattleMain_C_GetCharActionNum::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetCharActionNum, CallFunc_GetActionNum_retValue) == 0x000004, "Member 'BattleMain_C_GetCharActionNum::CallFunc_GetActionNum_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.EventWaitSeq
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_EventWaitSeq final
{
public:
	E_BTL_STEP                                    Step;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        NewLocalVar_4;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_EVT_RESULT                              Lo_Next;                                           // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFinished_ret;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_EVT_RESULT                              CallFunc_GetEventResult_retValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_EventWaitSeq) == 0x000008, "Wrong alignment on BattleMain_C_EventWaitSeq");
static_assert(sizeof(BattleMain_C_EventWaitSeq) == 0x000018, "Wrong size on BattleMain_C_EventWaitSeq");
static_assert(offsetof(BattleMain_C_EventWaitSeq, Step) == 0x000000, "Member 'BattleMain_C_EventWaitSeq::Step' has a wrong offset!");
static_assert(offsetof(BattleMain_C_EventWaitSeq, NewLocalVar_4) == 0x000008, "Member 'BattleMain_C_EventWaitSeq::NewLocalVar_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_EventWaitSeq, Lo_Next) == 0x000010, "Member 'BattleMain_C_EventWaitSeq::Lo_Next' has a wrong offset!");
static_assert(offsetof(BattleMain_C_EventWaitSeq, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'BattleMain_C_EventWaitSeq::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_EventWaitSeq, CallFunc_CheckEventFinished_ret) == 0x000012, "Member 'BattleMain_C_EventWaitSeq::CallFunc_CheckEventFinished_ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_EventWaitSeq, CallFunc_GetEventResult_retValue) == 0x000013, "Member 'BattleMain_C_EventWaitSeq::CallFunc_GetEventResult_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.IsBattleLogON
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_IsBattleLogON final
{
public:
	bool                                          Ret_Value;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleDebugFlag_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_IsBattleLogON) == 0x000001, "Wrong alignment on BattleMain_C_IsBattleLogON");
static_assert(sizeof(BattleMain_C_IsBattleLogON) == 0x000002, "Wrong size on BattleMain_C_IsBattleLogON");
static_assert(offsetof(BattleMain_C_IsBattleLogON, Ret_Value) == 0x000000, "Member 'BattleMain_C_IsBattleLogON::Ret_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsBattleLogON, CallFunc_CheckBattleDebugFlag_ReturnValue) == 0x000001, "Member 'BattleMain_C_IsBattleLogON::CallFunc_CheckBattleDebugFlag_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuCriticalCnt
// 0x0040 (0x0040 - 0x0000)
struct BattleMain_C_CheckDebugMenuCriticalCnt final
{
public:
	int32                                         Lo_End;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Value;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BattleDebugGetPlayerCriticalCnt_retValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPlayerLoopMax_retValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartyStart_retValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_const_GetEnemyLoopMax_retValue;           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyStart_retValue;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BattleDebugGetEnemyCriticalCnt_retValue;  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuCriticalCnt) == 0x000004, "Wrong alignment on BattleMain_C_CheckDebugMenuCriticalCnt");
static_assert(sizeof(BattleMain_C_CheckDebugMenuCriticalCnt) == 0x000040, "Wrong size on BattleMain_C_CheckDebugMenuCriticalCnt");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCriticalCnt, Lo_End) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuCriticalCnt::Lo_End' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCriticalCnt, Lo_Start) == 0x000004, "Member 'BattleMain_C_CheckDebugMenuCriticalCnt::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCriticalCnt, Lo_Value) == 0x000008, "Member 'BattleMain_C_CheckDebugMenuCriticalCnt::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCriticalCnt, Temp_int_Variable) == 0x00000C, "Member 'BattleMain_C_CheckDebugMenuCriticalCnt::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCriticalCnt, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuCriticalCnt::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCriticalCnt, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BattleMain_C_CheckDebugMenuCriticalCnt::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCriticalCnt, Temp_int_Variable_1) == 0x000018, "Member 'BattleMain_C_CheckDebugMenuCriticalCnt::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCriticalCnt, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BattleMain_C_CheckDebugMenuCriticalCnt::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCriticalCnt, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuCriticalCnt::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCriticalCnt, CallFunc_BattleDebugGetPlayerCriticalCnt_retValue) == 0x000024, "Member 'BattleMain_C_CheckDebugMenuCriticalCnt::CallFunc_BattleDebugGetPlayerCriticalCnt_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCriticalCnt, CallFunc_const_GetPlayerLoopMax_retValue) == 0x000028, "Member 'BattleMain_C_CheckDebugMenuCriticalCnt::CallFunc_const_GetPlayerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCriticalCnt, CallFunc_const_GetPartyStart_retValue) == 0x00002C, "Member 'BattleMain_C_CheckDebugMenuCriticalCnt::CallFunc_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCriticalCnt, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000030, "Member 'BattleMain_C_CheckDebugMenuCriticalCnt::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCriticalCnt, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000031, "Member 'BattleMain_C_CheckDebugMenuCriticalCnt::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCriticalCnt, CallFunc_const_GetEnemyLoopMax_retValue) == 0x000034, "Member 'BattleMain_C_CheckDebugMenuCriticalCnt::CallFunc_const_GetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCriticalCnt, CallFunc_const_GetEnemyStart_retValue) == 0x000038, "Member 'BattleMain_C_CheckDebugMenuCriticalCnt::CallFunc_const_GetEnemyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCriticalCnt, CallFunc_BattleDebugGetEnemyCriticalCnt_retValue) == 0x00003C, "Member 'BattleMain_C_CheckDebugMenuCriticalCnt::CallFunc_BattleDebugGetEnemyCriticalCnt_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuOnlyMyTurn
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_CheckDebugMenuOnlyMyTurn final
{
public:
	int32                                         Lo_End;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Value;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsOnlyMyTurn_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuOnlyMyTurn) == 0x000004, "Wrong alignment on BattleMain_C_CheckDebugMenuOnlyMyTurn");
static_assert(sizeof(BattleMain_C_CheckDebugMenuOnlyMyTurn) == 0x000010, "Wrong size on BattleMain_C_CheckDebugMenuOnlyMyTurn");
static_assert(offsetof(BattleMain_C_CheckDebugMenuOnlyMyTurn, Lo_End) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuOnlyMyTurn::Lo_End' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuOnlyMyTurn, Lo_Start) == 0x000004, "Member 'BattleMain_C_CheckDebugMenuOnlyMyTurn::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuOnlyMyTurn, Lo_Value) == 0x000008, "Member 'BattleMain_C_CheckDebugMenuOnlyMyTurn::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuOnlyMyTurn, CallFunc_BattleDebugIsOnlyMyTurn_ReturnValue) == 0x00000C, "Member 'BattleMain_C_CheckDebugMenuOnlyMyTurn::CallFunc_BattleDebugIsOnlyMyTurn_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.IsGameOver
// 0x0058 (0x0058 - 0x0000)
struct BattleMain_C_IsGameOver final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_StoneCnt;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Cnt;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_HeroIsArrive;                                   // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_End;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHero_retValue;                          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_IsGameOver) == 0x000008, "Wrong alignment on BattleMain_C_IsGameOver");
static_assert(sizeof(BattleMain_C_IsGameOver) == 0x000058, "Wrong size on BattleMain_C_IsGameOver");
static_assert(offsetof(BattleMain_C_IsGameOver, RetValue) == 0x000000, "Member 'BattleMain_C_IsGameOver::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, Lo_StoneCnt) == 0x000004, "Member 'BattleMain_C_IsGameOver::Lo_StoneCnt' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, Lo_Cnt) == 0x000008, "Member 'BattleMain_C_IsGameOver::Lo_Cnt' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, Lo_HeroIsArrive) == 0x00000C, "Member 'BattleMain_C_IsGameOver::Lo_HeroIsArrive' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, Lo_End) == 0x000010, "Member 'BattleMain_C_IsGameOver::Lo_End' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, Lo_Start) == 0x000014, "Member 'BattleMain_C_IsGameOver::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BattleMain_C_IsGameOver::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BattleMain_C_IsGameOver::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BattleMain_C_IsGameOver::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BattleMain_C_IsGameOver::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'BattleMain_C_IsGameOver::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'BattleMain_C_IsGameOver::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, Temp_int_Variable) == 0x00002C, "Member 'BattleMain_C_IsGameOver::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BattleMain_C_IsGameOver::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x000038, "Member 'BattleMain_C_IsGameOver::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BattleMain_C_IsGameOver::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, CallFunc_Array_Get_Item) == 0x00004C, "Member 'BattleMain_C_IsGameOver::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BattleMain_C_IsGameOver::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsGameOver, CallFunc_IsHero_retValue) == 0x000051, "Member 'BattleMain_C_IsGameOver::CallFunc_IsHero_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetAutoBattleValid
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_SetAutoBattleValid final
{
public:
	bool                                          CallFunc_CheckBattleFlag_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SetAutoBattleValid) == 0x000001, "Wrong alignment on BattleMain_C_SetAutoBattleValid");
static_assert(sizeof(BattleMain_C_SetAutoBattleValid) == 0x000002, "Wrong size on BattleMain_C_SetAutoBattleValid");
static_assert(offsetof(BattleMain_C_SetAutoBattleValid, CallFunc_CheckBattleFlag_ReturnValue) == 0x000000, "Member 'BattleMain_C_SetAutoBattleValid::CallFunc_CheckBattleFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetAutoBattleValid, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BattleMain_C_SetAutoBattleValid::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenu_Close
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_CheckDebugMenu_Close final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CheckDebugMenu_Close) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenu_Close");
static_assert(sizeof(BattleMain_C_CheckDebugMenu_Close) == 0x000020, "Wrong size on BattleMain_C_CheckDebugMenu_Close");
static_assert(offsetof(BattleMain_C_CheckDebugMenu_Close, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenu_Close::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenu_Close, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenu_Close::Lo_Print' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuPartyParam_Close
// 0x02F0 (0x02F0 - 0x0000)
struct BattleMain_C_CheckDebugMenuPartyParam_Close final
{
public:
	TArray<int32>                                 Lo_ActList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         Lo_BadStatusStr;                                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<E_BAD_STATUS>                          Lo_BadStatus;                                      // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_Index;                                          // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_SKILL_TEKISEI_CATEGORY>              Lo_Tekisei;                                        // 0x0048(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         Lo_TekiseiStr;                                     // 0x0058(0x0010)(Edit, BlueprintVisible)
	TArray<E_ATTRIBUTE_TYPE>                      Lo_Attr;                                           // 0x0068(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         Lo_AishouStr;                                      // 0x0078(0x0010)(Edit, BlueprintVisible)
	class FString                                 Lo_Menu;                                           // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_IndexMenuTopFull;                               // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_IndexMenuTop;                                   // 0x00A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<E_BAD_STATUS>                          K2Node_MakeArray_Array_1;                          // 0x00D8(0x0010)(ReferenceParm)
	TArray<E_SKILL_TEKISEI_CATEGORY>              K2Node_MakeArray_Array_2;                          // 0x00E8(0x0010)(ReferenceParm)
	TArray<class FString>                         K2Node_MakeArray_Array_3;                          // 0x00F8(0x0010)(ReferenceParm)
	TArray<E_ATTRIBUTE_TYPE>                      K2Node_MakeArray_Array_4;                          // 0x0108(0x0010)(ReferenceParm)
	TArray<class FString>                         K2Node_MakeArray_Array_5;                          // 0x0118(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x013C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebugMenuItemExistFromPathName_Name_ReturnValue; // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue; // 0x0148(0x00D0)()
	int32                                         CallFunc_GetCharaID_ReturnValue;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0xF];                                      // 0x0231(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetHomeTransform_ReturnValue;             // 0x0240(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AddUnitModelLoadTask_retPecID;            // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetActListAll_retValue;                   // 0x0290(0x0010)(ReferenceParm)
	class FText                                   CallFunc_GetName_retValue;                         // 0x02A0(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuPartyParam_Close) == 0x000010, "Wrong alignment on BattleMain_C_CheckDebugMenuPartyParam_Close");
static_assert(sizeof(BattleMain_C_CheckDebugMenuPartyParam_Close) == 0x0002F0, "Wrong size on BattleMain_C_CheckDebugMenuPartyParam_Close");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, Lo_ActList) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::Lo_ActList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, Lo_WaitTaskList) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, Lo_BadStatusStr) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::Lo_BadStatusStr' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, Lo_BadStatus) == 0x000030, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::Lo_BadStatus' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, Lo_Index) == 0x000040, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, Lo_Tekisei) == 0x000048, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::Lo_Tekisei' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, Lo_TekiseiStr) == 0x000058, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::Lo_TekiseiStr' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, Lo_Attr) == 0x000068, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::Lo_Attr' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, Lo_AishouStr) == 0x000078, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::Lo_AishouStr' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, Lo_Menu) == 0x000088, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::Lo_Menu' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, Lo_IndexMenuTopFull) == 0x000098, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::Lo_IndexMenuTopFull' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, Lo_IndexMenuTop) == 0x0000A8, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::Lo_IndexMenuTop' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_Conv_IntToString_ReturnValue) == 0x0000C8, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, K2Node_MakeArray_Array_1) == 0x0000D8, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, K2Node_MakeArray_Array_2) == 0x0000E8, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, K2Node_MakeArray_Array_3) == 0x0000F8, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, K2Node_MakeArray_Array_4) == 0x000108, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, K2Node_MakeArray_Array_5) == 0x000118, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, Temp_int_Array_Index_Variable) == 0x000128, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, Temp_int_Loop_Counter_Variable) == 0x00012C, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_Add_IntInt_ReturnValue) == 0x000130, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_Conv_StringToName_ReturnValue) == 0x000134, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_Conv_StringToName_ReturnValue_1) == 0x00013C, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_IsDebugMenuItemExistFromPathName_Name_ReturnValue) == 0x000144, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_IsDebugMenuItemExistFromPathName_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue) == 0x000148, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_GetCharaID_ReturnValue) == 0x000218, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_GetCharaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_Concat_StrStr_ReturnValue) == 0x000220, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000230, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_GetHomeTransform_ReturnValue) == 0x000240, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_GetHomeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_AddUnitModelLoadTask_retPecID) == 0x000270, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_AddUnitModelLoadTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000278, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_Array_Get_Item) == 0x000288, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_GetActListAll_retValue) == 0x000290, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_GetActListAll_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_GetName_retValue) == 0x0002A0, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_GetName_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_Array_Length_ReturnValue) == 0x0002B8, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_Conv_TextToString_ReturnValue) == 0x0002C0, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_Less_IntInt_ReturnValue) == 0x0002D0, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPartyParam_Close, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0002D8, "Member 'BattleMain_C_CheckDebugMenuPartyParam_Close::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BattleMain.BattleMain_C.DebugChangeUnit
// 0x0490 (0x0490 - 0x0000)
struct BattleMain_C_DebugChangeUnit final
{
public:
	class ACharaBase_C*                           Lo_PartyUnit;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_ReserveDestroy;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PartyIndex;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_NkmIndex;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNkmData                               NewLocalVar_3;                                     // 0x0018(0x0120)(Edit, BlueprintVisible)
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_GetBtlPartyData_ReturnValue;              // 0x0140(0x0320)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x3];                                      // 0x0461(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_const_GetEnemyLoopMax_retValue;           // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetParentNameTaskCnt_retCnt;              // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartyStart_retValue;             // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_479[0x3];                                      // 0x0479(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_485[0x3];                                      // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetModelUnit_retValue;                    // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_DebugChangeUnit) == 0x000010, "Wrong alignment on BattleMain_C_DebugChangeUnit");
static_assert(sizeof(BattleMain_C_DebugChangeUnit) == 0x000490, "Wrong size on BattleMain_C_DebugChangeUnit");
static_assert(offsetof(BattleMain_C_DebugChangeUnit, Lo_PartyUnit) == 0x000000, "Member 'BattleMain_C_DebugChangeUnit::Lo_PartyUnit' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugChangeUnit, Lo_ReserveDestroy) == 0x000008, "Member 'BattleMain_C_DebugChangeUnit::Lo_ReserveDestroy' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugChangeUnit, Lo_PartyIndex) == 0x000010, "Member 'BattleMain_C_DebugChangeUnit::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugChangeUnit, Lo_NkmIndex) == 0x000014, "Member 'BattleMain_C_DebugChangeUnit::Lo_NkmIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugChangeUnit, NewLocalVar_3) == 0x000018, "Member 'BattleMain_C_DebugChangeUnit::NewLocalVar_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugChangeUnit, CallFunc_GetBtlPartyData_ReturnValue) == 0x000140, "Member 'BattleMain_C_DebugChangeUnit::CallFunc_GetBtlPartyData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugChangeUnit, CallFunc_IsValid_ReturnValue) == 0x000460, "Member 'BattleMain_C_DebugChangeUnit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugChangeUnit, CallFunc_const_GetEnemyLoopMax_retValue) == 0x000464, "Member 'BattleMain_C_DebugChangeUnit::CallFunc_const_GetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugChangeUnit, CallFunc_GetParentNameTaskCnt_retCnt) == 0x000468, "Member 'BattleMain_C_DebugChangeUnit::CallFunc_GetParentNameTaskCnt_retCnt' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugChangeUnit, CallFunc_const_GetPartyStart_retValue) == 0x00046C, "Member 'BattleMain_C_DebugChangeUnit::CallFunc_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugChangeUnit, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000470, "Member 'BattleMain_C_DebugChangeUnit::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugChangeUnit, Temp_int_Variable) == 0x000474, "Member 'BattleMain_C_DebugChangeUnit::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugChangeUnit, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000478, "Member 'BattleMain_C_DebugChangeUnit::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugChangeUnit, CallFunc_Add_IntInt_ReturnValue) == 0x00047C, "Member 'BattleMain_C_DebugChangeUnit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugChangeUnit, CallFunc_Map_Find_Value) == 0x000480, "Member 'BattleMain_C_DebugChangeUnit::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugChangeUnit, CallFunc_Map_Find_ReturnValue) == 0x000484, "Member 'BattleMain_C_DebugChangeUnit::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugChangeUnit, CallFunc_GetModelUnit_retValue) == 0x000488, "Member 'BattleMain_C_DebugChangeUnit::CallFunc_GetModelUnit_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckRenzokuBattle
// 0x0004 (0x0004 - 0x0000)
struct BattleMain_C_CheckRenzokuBattle final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CheckRenzokuBattle) == 0x000004, "Wrong alignment on BattleMain_C_CheckRenzokuBattle");
static_assert(sizeof(BattleMain_C_CheckRenzokuBattle) == 0x000004, "Wrong size on BattleMain_C_CheckRenzokuBattle");
static_assert(offsetof(BattleMain_C_CheckRenzokuBattle, RetValue) == 0x000000, "Member 'BattleMain_C_CheckRenzokuBattle::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuFreeEnemy
// 0x0070 (0x0070 - 0x0000)
struct BattleMain_C_CheckDebugMenuFreeEnemy final
{
public:
	int32                                         Lo_Blank;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_End;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Value;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPartyBlankIndex_ReturnValue;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetOriginTransform_retValue;              // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BattleDebugGetFreeEnemySummon_retValue;   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddUnitModelLoadTask_retPecID;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuFreeEnemy) == 0x000010, "Wrong alignment on BattleMain_C_CheckDebugMenuFreeEnemy");
static_assert(sizeof(BattleMain_C_CheckDebugMenuFreeEnemy) == 0x000070, "Wrong size on BattleMain_C_CheckDebugMenuFreeEnemy");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFreeEnemy, Lo_Blank) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuFreeEnemy::Lo_Blank' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFreeEnemy, Lo_WaitTaskList) == 0x000008, "Member 'BattleMain_C_CheckDebugMenuFreeEnemy::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFreeEnemy, Lo_End) == 0x000018, "Member 'BattleMain_C_CheckDebugMenuFreeEnemy::Lo_End' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFreeEnemy, Lo_Start) == 0x00001C, "Member 'BattleMain_C_CheckDebugMenuFreeEnemy::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFreeEnemy, Lo_Value) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuFreeEnemy::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFreeEnemy, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'BattleMain_C_CheckDebugMenuFreeEnemy::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFreeEnemy, CallFunc_GetPartyBlankIndex_ReturnValue) == 0x000028, "Member 'BattleMain_C_CheckDebugMenuFreeEnemy::CallFunc_GetPartyBlankIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFreeEnemy, CallFunc_GetOriginTransform_retValue) == 0x000030, "Member 'BattleMain_C_CheckDebugMenuFreeEnemy::CallFunc_GetOriginTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFreeEnemy, CallFunc_BattleDebugGetFreeEnemySummon_retValue) == 0x000060, "Member 'BattleMain_C_CheckDebugMenuFreeEnemy::CallFunc_BattleDebugGetFreeEnemySummon_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFreeEnemy, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000064, "Member 'BattleMain_C_CheckDebugMenuFreeEnemy::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFreeEnemy, CallFunc_AddUnitModelLoadTask_retPecID) == 0x000068, "Member 'BattleMain_C_CheckDebugMenuFreeEnemy::CallFunc_AddUnitModelLoadTask_retPecID' has a wrong offset!");

// Function BattleMain.BattleMain_C.ApplyDebugMenuTask
// 0x0080 (0x0080 - 0x0000)
struct BattleMain_C_ApplyDebugMenuTask final
{
public:
	int32                                         Lo_Blank;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_End;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Value;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           CallFunc_GetModelUnit_retValue;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADevilBase_C*                           K2Node_DynamicCast_AsDevil_Base;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_ApplyDebugMenuTask) == 0x000010, "Wrong alignment on BattleMain_C_ApplyDebugMenuTask");
static_assert(sizeof(BattleMain_C_ApplyDebugMenuTask) == 0x000080, "Wrong size on BattleMain_C_ApplyDebugMenuTask");
static_assert(offsetof(BattleMain_C_ApplyDebugMenuTask, Lo_Blank) == 0x000000, "Member 'BattleMain_C_ApplyDebugMenuTask::Lo_Blank' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ApplyDebugMenuTask, Lo_WaitTaskList) == 0x000008, "Member 'BattleMain_C_ApplyDebugMenuTask::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ApplyDebugMenuTask, Lo_End) == 0x000018, "Member 'BattleMain_C_ApplyDebugMenuTask::Lo_End' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ApplyDebugMenuTask, Lo_Start) == 0x00001C, "Member 'BattleMain_C_ApplyDebugMenuTask::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ApplyDebugMenuTask, Lo_Value) == 0x000020, "Member 'BattleMain_C_ApplyDebugMenuTask::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ApplyDebugMenuTask, CallFunc_GetPartyUnit_retValue) == 0x000028, "Member 'BattleMain_C_ApplyDebugMenuTask::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ApplyDebugMenuTask, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BattleMain_C_ApplyDebugMenuTask::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ApplyDebugMenuTask, CallFunc_GetModelUnit_retValue) == 0x000060, "Member 'BattleMain_C_ApplyDebugMenuTask::CallFunc_GetModelUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ApplyDebugMenuTask, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000068, "Member 'BattleMain_C_ApplyDebugMenuTask::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ApplyDebugMenuTask, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'BattleMain_C_ApplyDebugMenuTask::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ApplyDebugMenuTask, K2Node_DynamicCast_AsDevil_Base) == 0x000070, "Member 'BattleMain_C_ApplyDebugMenuTask::K2Node_DynamicCast_AsDevil_Base' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ApplyDebugMenuTask, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BattleMain_C_ApplyDebugMenuTask::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ApplyDebugMenuTask, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'BattleMain_C_ApplyDebugMenuTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.DebugTimeStart
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_DebugTimeStart final
{
public:
	int32                                         Lo_Blank;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_End;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Value;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_DebugTimeStart) == 0x000008, "Wrong alignment on BattleMain_C_DebugTimeStart");
static_assert(sizeof(BattleMain_C_DebugTimeStart) == 0x000028, "Wrong size on BattleMain_C_DebugTimeStart");
static_assert(offsetof(BattleMain_C_DebugTimeStart, Lo_Blank) == 0x000000, "Member 'BattleMain_C_DebugTimeStart::Lo_Blank' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugTimeStart, Lo_WaitTaskList) == 0x000008, "Member 'BattleMain_C_DebugTimeStart::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugTimeStart, Lo_End) == 0x000018, "Member 'BattleMain_C_DebugTimeStart::Lo_End' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugTimeStart, Lo_Start) == 0x00001C, "Member 'BattleMain_C_DebugTimeStart::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugTimeStart, Lo_Value) == 0x000020, "Member 'BattleMain_C_DebugTimeStart::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugTimeStart, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000024, "Member 'BattleMain_C_DebugTimeStart::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.DebugTimeEnd
// 0x0040 (0x0040 - 0x0000)
struct BattleMain_C_DebugTimeEnd final
{
public:
	int32                                         Lo_Blank;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_End;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Value;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_DebugTimeEnd) == 0x000008, "Wrong alignment on BattleMain_C_DebugTimeEnd");
static_assert(sizeof(BattleMain_C_DebugTimeEnd) == 0x000040, "Wrong size on BattleMain_C_DebugTimeEnd");
static_assert(offsetof(BattleMain_C_DebugTimeEnd, Lo_Blank) == 0x000000, "Member 'BattleMain_C_DebugTimeEnd::Lo_Blank' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugTimeEnd, Lo_WaitTaskList) == 0x000008, "Member 'BattleMain_C_DebugTimeEnd::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugTimeEnd, Lo_End) == 0x000018, "Member 'BattleMain_C_DebugTimeEnd::Lo_End' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugTimeEnd, Lo_Start) == 0x00001C, "Member 'BattleMain_C_DebugTimeEnd::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugTimeEnd, Lo_Value) == 0x000020, "Member 'BattleMain_C_DebugTimeEnd::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugTimeEnd, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000024, "Member 'BattleMain_C_DebugTimeEnd::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugTimeEnd, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000028, "Member 'BattleMain_C_DebugTimeEnd::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugTimeEnd, CallFunc_Conv_FloatToString_ReturnValue) == 0x000030, "Member 'BattleMain_C_DebugTimeEnd::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.DebugJsonLog
// 0x0198 (0x0198 - 0x0000)
struct BattleMain_C_DebugJsonLog final
{
public:
	struct FSkillActionDesc                       InDesc;                                            // 0x0000(0x0090)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsCounter;                                         // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsCritical;                                     // 0x0091(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_Target;                                         // 0x0098(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Temp_byte_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillActionTargetInfo                 CallFunc_Array_Get_Item;                           // 0x00D0(0x0098)()
	E_BTL_DAMAGE_HIT_TYPE                         CallFunc_Array_Get_Item_1;                         // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x2];                                      // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharID_Detail_retValue;                // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharID_Detail_retValue_1;              // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_GetSide_ReturnValue;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharID_Detail_retValue_2;              // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_DebugJsonLog) == 0x000008, "Wrong alignment on BattleMain_C_DebugJsonLog");
static_assert(sizeof(BattleMain_C_DebugJsonLog) == 0x000198, "Wrong size on BattleMain_C_DebugJsonLog");
static_assert(offsetof(BattleMain_C_DebugJsonLog, InDesc) == 0x000000, "Member 'BattleMain_C_DebugJsonLog::InDesc' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, IsCounter) == 0x000090, "Member 'BattleMain_C_DebugJsonLog::IsCounter' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, Lo_IsCritical) == 0x000091, "Member 'BattleMain_C_DebugJsonLog::Lo_IsCritical' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, Lo_Target) == 0x000098, "Member 'BattleMain_C_DebugJsonLog::Lo_Target' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, Temp_bool_Variable) == 0x0000A8, "Member 'BattleMain_C_DebugJsonLog::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, Temp_bool_Variable_1) == 0x0000A9, "Member 'BattleMain_C_DebugJsonLog::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, CallFunc_Array_Length_ReturnValue) == 0x0000AC, "Member 'BattleMain_C_DebugJsonLog::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, Temp_bool_Variable_2) == 0x0000B0, "Member 'BattleMain_C_DebugJsonLog::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, Temp_int_Array_Index_Variable) == 0x0000B4, "Member 'BattleMain_C_DebugJsonLog::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, Temp_byte_Variable) == 0x0000B8, "Member 'BattleMain_C_DebugJsonLog::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'BattleMain_C_DebugJsonLog::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'BattleMain_C_DebugJsonLog::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'BattleMain_C_DebugJsonLog::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, Temp_int_Array_Index_Variable_1) == 0x0000C8, "Member 'BattleMain_C_DebugJsonLog::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BattleMain_C_DebugJsonLog::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, CallFunc_Array_Get_Item_1) == 0x000168, "Member 'BattleMain_C_DebugJsonLog::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, CallFunc_Array_Length_ReturnValue_1) == 0x00016C, "Member 'BattleMain_C_DebugJsonLog::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000170, "Member 'BattleMain_C_DebugJsonLog::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, CallFunc_Not_PreBool_ReturnValue) == 0x000171, "Member 'BattleMain_C_DebugJsonLog::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, Temp_int_Loop_Counter_Variable_1) == 0x000174, "Member 'BattleMain_C_DebugJsonLog::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, CallFunc_Less_IntInt_ReturnValue_1) == 0x000178, "Member 'BattleMain_C_DebugJsonLog::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, CallFunc_Add_IntInt_ReturnValue_1) == 0x00017C, "Member 'BattleMain_C_DebugJsonLog::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, CallFunc_GetCharID_Detail_retValue) == 0x000180, "Member 'BattleMain_C_DebugJsonLog::CallFunc_GetCharID_Detail_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, CallFunc_GetCharID_Detail_retValue_1) == 0x000184, "Member 'BattleMain_C_DebugJsonLog::CallFunc_GetCharID_Detail_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, CallFunc_GetSide_ReturnValue) == 0x000188, "Member 'BattleMain_C_DebugJsonLog::CallFunc_GetSide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, CallFunc_Array_Add_ReturnValue) == 0x00018C, "Member 'BattleMain_C_DebugJsonLog::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, CallFunc_GetCharID_Detail_retValue_2) == 0x000190, "Member 'BattleMain_C_DebugJsonLog::CallFunc_GetCharID_Detail_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLog, K2Node_Select_Default) == 0x000194, "Member 'BattleMain_C_DebugJsonLog::K2Node_Select_Default' has a wrong offset!");

// Function BattleMain.BattleMain_C.DebugJsonLogTalkSuccess
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_DebugJsonLogTalkSuccess final
{
public:
	int32                                         DevilID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsCritical;                                     // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_Target;                                         // 0x0008(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(BattleMain_C_DebugJsonLogTalkSuccess) == 0x000008, "Wrong alignment on BattleMain_C_DebugJsonLogTalkSuccess");
static_assert(sizeof(BattleMain_C_DebugJsonLogTalkSuccess) == 0x000018, "Wrong size on BattleMain_C_DebugJsonLogTalkSuccess");
static_assert(offsetof(BattleMain_C_DebugJsonLogTalkSuccess, DevilID) == 0x000000, "Member 'BattleMain_C_DebugJsonLogTalkSuccess::DevilID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLogTalkSuccess, Lo_IsCritical) == 0x000004, "Member 'BattleMain_C_DebugJsonLogTalkSuccess::Lo_IsCritical' has a wrong offset!");
static_assert(offsetof(BattleMain_C_DebugJsonLogTalkSuccess, Lo_Target) == 0x000008, "Member 'BattleMain_C_DebugJsonLogTalkSuccess::Lo_Target' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugFovyOverride
// 0x0038 (0x0038 - 0x0000)
struct BattleMain_C_CheckDebugFovyOverride final
{
public:
	int32                                         Lo_Blank;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_End;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Value;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BattleDebugGetGetFovyOverride_retValue;   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugFovyOverride) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugFovyOverride");
static_assert(sizeof(BattleMain_C_CheckDebugFovyOverride) == 0x000038, "Wrong size on BattleMain_C_CheckDebugFovyOverride");
static_assert(offsetof(BattleMain_C_CheckDebugFovyOverride, Lo_Blank) == 0x000000, "Member 'BattleMain_C_CheckDebugFovyOverride::Lo_Blank' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugFovyOverride, Lo_WaitTaskList) == 0x000008, "Member 'BattleMain_C_CheckDebugFovyOverride::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugFovyOverride, Lo_End) == 0x000018, "Member 'BattleMain_C_CheckDebugFovyOverride::Lo_End' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugFovyOverride, Lo_Start) == 0x00001C, "Member 'BattleMain_C_CheckDebugFovyOverride::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugFovyOverride, Lo_Value) == 0x000020, "Member 'BattleMain_C_CheckDebugFovyOverride::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugFovyOverride, CallFunc_BattleDebugGetGetFovyOverride_retValue) == 0x000024, "Member 'BattleMain_C_CheckDebugFovyOverride::CallFunc_BattleDebugGetGetFovyOverride_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugFovyOverride, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BattleMain_C_CheckDebugFovyOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugFovyOverride, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00002C, "Member 'BattleMain_C_CheckDebugFovyOverride::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugFovyOverride, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'BattleMain_C_CheckDebugFovyOverride::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.ActionPreCamTask
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_ActionPreCamTask final
{
public:
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(BattleMain_C_ActionPreCamTask) == 0x000008, "Wrong alignment on BattleMain_C_ActionPreCamTask");
static_assert(sizeof(BattleMain_C_ActionPreCamTask) == 0x000010, "Wrong size on BattleMain_C_ActionPreCamTask");
static_assert(offsetof(BattleMain_C_ActionPreCamTask, Lo_WaitTaskList) == 0x000000, "Member 'BattleMain_C_ActionPreCamTask::Lo_WaitTaskList' has a wrong offset!");

// Function BattleMain.BattleMain_C.ActionPrevTaskWait
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_ActionPrevTaskWait final
{
public:
	int32                                         CallFunc_GetParentNameTaskCnt_retCnt;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_ActionPrevTaskWait) == 0x000004, "Wrong alignment on BattleMain_C_ActionPrevTaskWait");
static_assert(sizeof(BattleMain_C_ActionPrevTaskWait) == 0x000008, "Wrong size on BattleMain_C_ActionPrevTaskWait");
static_assert(offsetof(BattleMain_C_ActionPrevTaskWait, CallFunc_GetParentNameTaskCnt_retCnt) == 0x000000, "Member 'BattleMain_C_ActionPrevTaskWait::CallFunc_GetParentNameTaskCnt_retCnt' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevTaskWait, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'BattleMain_C_ActionPrevTaskWait::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.ActionPrevBadStatusCureTask
// 0x0088 (0x0088 - 0x0000)
struct BattleMain_C_ActionPrevBadStatusCureTask final
{
public:
	int32                                         Lo_PartyIndex;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_CureBst;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_ActList;                                        // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCamRailTask_retPecID;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_MakeBadCureTask_retValue;                 // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_AddInfoMessByLabelTask_RetPecID;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetReqCureBadStatus_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetCanActList_ReturnValue;                // 0x0068(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddDeltaWaitTask_retPecID;                // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_ActionPrevBadStatusCureTask) == 0x000008, "Wrong alignment on BattleMain_C_ActionPrevBadStatusCureTask");
static_assert(sizeof(BattleMain_C_ActionPrevBadStatusCureTask) == 0x000088, "Wrong size on BattleMain_C_ActionPrevBadStatusCureTask");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, Lo_PartyIndex) == 0x000000, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, Lo_WaitTaskList) == 0x000008, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, Lo_CureBst) == 0x000018, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::Lo_CureBst' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, Lo_ActList) == 0x000020, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::Lo_ActList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, CallFunc_Array_Get_Item) == 0x000034, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, CallFunc_AddCamRailTask_retPecID) == 0x00003C, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::CallFunc_AddCamRailTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000044, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, CallFunc_MakeBadCureTask_retValue) == 0x000048, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::CallFunc_MakeBadCureTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, CallFunc_AddInfoMessByLabelTask_RetPecID) == 0x000058, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::CallFunc_AddInfoMessByLabelTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, CallFunc_Array_Add_ReturnValue_1) == 0x00005C, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, CallFunc_GetReqCureBadStatus_ReturnValue) == 0x000060, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::CallFunc_GetReqCureBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, CallFunc_GetCanActList_ReturnValue) == 0x000068, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::CallFunc_GetCanActList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevBadStatusCureTask, CallFunc_AddDeltaWaitTask_retPecID) == 0x000084, "Member 'BattleMain_C_ActionPrevBadStatusCureTask::CallFunc_AddDeltaWaitTask_retPecID' has a wrong offset!");

// Function BattleMain.BattleMain_C.ActionPrevActEndTask
// 0x00E0 (0x00E0 - 0x0000)
struct BattleMain_C_ActionPrevActEndTask final
{
public:
	TArray<E_BAD_STATUS>                          Lo_BstList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_PartyIndex;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_RetTaskList;                                    // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_CureBst;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_ActList;                                        // 0x0040(0x0010)(Edit, BlueprintVisible)
	TArray<E_BAD_STATUS>                          K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetActList_ReturnValue;                   // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item_1;                         // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBadStatusMPDamage_ReturnValue;         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBadStatusDamage_ReturnValue;           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBadStatus_ReturnValue;               // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_MakeBadDamageTask_retPecID;               // 0x00A0(0x0010)(ReferenceParm)
	bool                                          CallFunc_MakeBadDamageTask_lo_ReqDead;             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_GetActEndByBadStatus_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_MakeActEndByBstTask_retPecID;             // 0x00C8(0x0010)(ReferenceParm)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_ActionPrevActEndTask) == 0x000008, "Wrong alignment on BattleMain_C_ActionPrevActEndTask");
static_assert(sizeof(BattleMain_C_ActionPrevActEndTask) == 0x0000E0, "Wrong size on BattleMain_C_ActionPrevActEndTask");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, Lo_BstList) == 0x000000, "Member 'BattleMain_C_ActionPrevActEndTask::Lo_BstList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, Lo_PartyIndex) == 0x000010, "Member 'BattleMain_C_ActionPrevActEndTask::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, Lo_RetTaskList) == 0x000018, "Member 'BattleMain_C_ActionPrevActEndTask::Lo_RetTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, Lo_WaitTaskList) == 0x000028, "Member 'BattleMain_C_ActionPrevActEndTask::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, Lo_CureBst) == 0x000038, "Member 'BattleMain_C_ActionPrevActEndTask::Lo_CureBst' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, Lo_ActList) == 0x000040, "Member 'BattleMain_C_ActionPrevActEndTask::Lo_ActList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, K2Node_MakeArray_Array) == 0x000050, "Member 'BattleMain_C_ActionPrevActEndTask::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BattleMain_C_ActionPrevActEndTask::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BattleMain_C_ActionPrevActEndTask::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BattleMain_C_ActionPrevActEndTask::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'BattleMain_C_ActionPrevActEndTask::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, CallFunc_Array_Get_Item) == 0x000070, "Member 'BattleMain_C_ActionPrevActEndTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, CallFunc_GetActList_ReturnValue) == 0x000078, "Member 'BattleMain_C_ActionPrevActEndTask::CallFunc_GetActList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BattleMain_C_ActionPrevActEndTask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BattleMain_C_ActionPrevActEndTask::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, CallFunc_Array_Get_Item_1) == 0x00008D, "Member 'BattleMain_C_ActionPrevActEndTask::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'BattleMain_C_ActionPrevActEndTask::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, CallFunc_GetBadStatusMPDamage_ReturnValue) == 0x000094, "Member 'BattleMain_C_ActionPrevActEndTask::CallFunc_GetBadStatusMPDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, CallFunc_GetBadStatusDamage_ReturnValue) == 0x000098, "Member 'BattleMain_C_ActionPrevActEndTask::CallFunc_GetBadStatusDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, CallFunc_CheckBadStatus_ReturnValue) == 0x00009C, "Member 'BattleMain_C_ActionPrevActEndTask::CallFunc_CheckBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, CallFunc_MakeBadDamageTask_retPecID) == 0x0000A0, "Member 'BattleMain_C_ActionPrevActEndTask::CallFunc_MakeBadDamageTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, CallFunc_MakeBadDamageTask_lo_ReqDead) == 0x0000B0, "Member 'BattleMain_C_ActionPrevActEndTask::CallFunc_MakeBadDamageTask_lo_ReqDead' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, Temp_int_Loop_Counter_Variable_1) == 0x0000B4, "Member 'BattleMain_C_ActionPrevActEndTask::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BattleMain_C_ActionPrevActEndTask::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BattleMain_C_ActionPrevActEndTask::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, CallFunc_GetActEndByBadStatus_ReturnValue) == 0x0000C0, "Member 'BattleMain_C_ActionPrevActEndTask::CallFunc_GetActEndByBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, CallFunc_MakeActEndByBstTask_retPecID) == 0x0000C8, "Member 'BattleMain_C_ActionPrevActEndTask::CallFunc_MakeActEndByBstTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevActEndTask, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000D8, "Member 'BattleMain_C_ActionPrevActEndTask::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepActionAfterFunc
// 0x0140 (0x0140 - 0x0000)
struct BattleMain_C_SetStepActionAfterFunc final
{
public:
	bool                                          Lo_IsNahobinoStan;                                 // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          Lo_BstDamage;                                      // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_IsNahobinoBreak;                                // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_IsLaceration;                                   // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsBurn;                                         // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsDead;                                         // 0x0032(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_ActorIndex;                                     // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnemyLeaderIndex_retValue;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHero_retValue;                          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCharaID_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_ReturnValue;                   // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_67[0x1];                                       // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGodParameterData                      CallFunc_GetGodParameterDataFromEnum_ReturnValue;  // 0x0068(0x0028)(ConstParm)
	bool                                          CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue; // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerMAGGauge_ReturnValue;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddApplyUnitStateTask_retPecID;           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<E_BAD_STATUS>                          K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item;                           // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBadStatusDamage_ReturnValue;           // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_MakeBadDamageTask_retPecID;               // 0x00F8(0x0010)(ReferenceParm)
	bool                                          CallFunc_MakeBadDamageTask_lo_ReqDead;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  CallFunc_Array_Get_Item_1;                         // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCamRailTask_retPecID;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBadStatus_ReturnValue;               // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SetStepActionAfterFunc) == 0x000008, "Wrong alignment on BattleMain_C_SetStepActionAfterFunc");
static_assert(sizeof(BattleMain_C_SetStepActionAfterFunc) == 0x000140, "Wrong size on BattleMain_C_SetStepActionAfterFunc");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, Lo_IsNahobinoStan) == 0x000000, "Member 'BattleMain_C_SetStepActionAfterFunc::Lo_IsNahobinoStan' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, Lo_BstDamage) == 0x000008, "Member 'BattleMain_C_SetStepActionAfterFunc::Lo_BstDamage' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, Lo_IsNahobinoBreak) == 0x000018, "Member 'BattleMain_C_SetStepActionAfterFunc::Lo_IsNahobinoBreak' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, Lo_WaitTaskList) == 0x000020, "Member 'BattleMain_C_SetStepActionAfterFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, Lo_IsLaceration) == 0x000030, "Member 'BattleMain_C_SetStepActionAfterFunc::Lo_IsLaceration' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, Lo_IsBurn) == 0x000031, "Member 'BattleMain_C_SetStepActionAfterFunc::Lo_IsBurn' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, Lo_IsDead) == 0x000032, "Member 'BattleMain_C_SetStepActionAfterFunc::Lo_IsDead' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, Lo_ActorIndex) == 0x000034, "Member 'BattleMain_C_SetStepActionAfterFunc::Lo_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BattleMain_C_SetStepActionAfterFunc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_GetPartyUnit_retValue) == 0x000040, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_GetEnemyLeaderIndex_retValue) == 0x000050, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_GetEnemyLeaderIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, Temp_int_Array_Index_Variable_1) == 0x000058, "Member 'BattleMain_C_SetStepActionAfterFunc::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_IsHero_retValue) == 0x00005C, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_IsHero_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_Not_PreBool_ReturnValue) == 0x00005D, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_GetCharaID_ReturnValue) == 0x000060, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_GetCharaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000064, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_BI_GetSide_ReturnValue) == 0x000065, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_BI_GetSide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000066, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_GetGodParameterDataFromEnum_ReturnValue) == 0x000068, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_GetGodParameterDataFromEnum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue) == 0x000090, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_BooleanAND_ReturnValue) == 0x000091, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_GetPlayerMAGGauge_ReturnValue) == 0x000094, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_GetPlayerMAGGauge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_Conv_IntToString_ReturnValue) == 0x000098, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, Temp_bool_True_if_break_was_hit_Variable) == 0x0000A8, "Member 'BattleMain_C_SetStepActionAfterFunc::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C0, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_AddApplyUnitStateTask_retPecID) == 0x0000C4, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_AddApplyUnitStateTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_Array_Add_ReturnValue) == 0x0000C8, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, Temp_int_Loop_Counter_Variable) == 0x0000CC, "Member 'BattleMain_C_SetStepActionAfterFunc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, K2Node_MakeArray_Array) == 0x0000D0, "Member 'BattleMain_C_SetStepActionAfterFunc::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000E0, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000E4, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_Array_Get_Item) == 0x0000E5, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_GetBadStatusDamage_ReturnValue) == 0x0000EC, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_GetBadStatusDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F0, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_MakeBadDamageTask_retPecID) == 0x0000F8, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_MakeBadDamageTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_MakeBadDamageTask_lo_ReqDead) == 0x000108, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_MakeBadDamageTask_lo_ReqDead' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_BooleanOR_ReturnValue) == 0x000109, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_Array_Length_ReturnValue_1) == 0x00010C, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_Array_Get_Item_1) == 0x000110, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_Array_Length_ReturnValue_2) == 0x000114, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000118, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_Max_ReturnValue) == 0x00011C, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_AddCamRailTask_retPecID) == 0x000120, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_AddCamRailTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_CheckBadStatus_ReturnValue) == 0x000124, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_CheckBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_Array_Add_ReturnValue_1) == 0x000128, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, Temp_int_Loop_Counter_Variable_1) == 0x00012C, "Member 'BattleMain_C_SetStepActionAfterFunc::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_Less_IntInt_ReturnValue) == 0x000130, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000134, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionAfterFunc, CallFunc_BooleanAND_ReturnValue_1) == 0x000138, "Member 'BattleMain_C_SetStepActionAfterFunc::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepActionAfterFunc
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_SeqStepActionAfterFunc final
{
public:
	int32                                         CallFunc_GetParentNameTaskCnt_retCnt;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_CheckInochigoi_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SeqStepActionAfterFunc) == 0x000008, "Wrong alignment on BattleMain_C_SeqStepActionAfterFunc");
static_assert(sizeof(BattleMain_C_SeqStepActionAfterFunc) == 0x000020, "Wrong size on BattleMain_C_SeqStepActionAfterFunc");
static_assert(offsetof(BattleMain_C_SeqStepActionAfterFunc, CallFunc_GetParentNameTaskCnt_retCnt) == 0x000000, "Member 'BattleMain_C_SeqStepActionAfterFunc::CallFunc_GetParentNameTaskCnt_retCnt' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepActionAfterFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'BattleMain_C_SeqStepActionAfterFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepActionAfterFunc, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x000008, "Member 'BattleMain_C_SeqStepActionAfterFunc::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepActionAfterFunc, CallFunc_CheckInochigoi_ReturnValue) == 0x000018, "Member 'BattleMain_C_SeqStepActionAfterFunc::CallFunc_CheckInochigoi_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.ActionPrevCheckBattleEnd
// 0x0068 (0x0068 - 0x0000)
struct BattleMain_C_ActionPrevCheckBattleEnd final
{
public:
	TArray<E_BAD_STATUS>                          Lo_BstList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_PartyIndex;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_RetTaskList;                                    // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_CureBst;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_ActList;                                        // 0x0040(0x0010)(Edit, BlueprintVisible)
	TArray<E_BAD_STATUS>                          K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_END                                     CallFunc_CheckBattleEnd_retValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_ActionPrevCheckBattleEnd) == 0x000008, "Wrong alignment on BattleMain_C_ActionPrevCheckBattleEnd");
static_assert(sizeof(BattleMain_C_ActionPrevCheckBattleEnd) == 0x000068, "Wrong size on BattleMain_C_ActionPrevCheckBattleEnd");
static_assert(offsetof(BattleMain_C_ActionPrevCheckBattleEnd, Lo_BstList) == 0x000000, "Member 'BattleMain_C_ActionPrevCheckBattleEnd::Lo_BstList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevCheckBattleEnd, Lo_PartyIndex) == 0x000010, "Member 'BattleMain_C_ActionPrevCheckBattleEnd::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevCheckBattleEnd, Lo_RetTaskList) == 0x000018, "Member 'BattleMain_C_ActionPrevCheckBattleEnd::Lo_RetTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevCheckBattleEnd, Lo_WaitTaskList) == 0x000028, "Member 'BattleMain_C_ActionPrevCheckBattleEnd::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevCheckBattleEnd, Lo_CureBst) == 0x000038, "Member 'BattleMain_C_ActionPrevCheckBattleEnd::Lo_CureBst' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevCheckBattleEnd, Lo_ActList) == 0x000040, "Member 'BattleMain_C_ActionPrevCheckBattleEnd::Lo_ActList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevCheckBattleEnd, K2Node_MakeArray_Array) == 0x000050, "Member 'BattleMain_C_ActionPrevCheckBattleEnd::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevCheckBattleEnd, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000060, "Member 'BattleMain_C_ActionPrevCheckBattleEnd::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevCheckBattleEnd, CallFunc_CheckBattleEnd_retValue) == 0x000061, "Member 'BattleMain_C_ActionPrevCheckBattleEnd::CallFunc_CheckBattleEnd_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.MatchToBattleCamera
// 0x0090 (0x0090 - 0x0000)
struct BattleMain_C_MatchToBattleCamera final
{
public:
	TArray<class AActor*>                         Lo_Actors;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetCurrentCameraTransform_retValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleCamera_C*                        K2Node_DynamicCast_AsBattle_Camera;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleCameraSeamless_C*                CallFunc_FinishSpawningActor_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_MatchToBattleCamera) == 0x000010, "Wrong alignment on BattleMain_C_MatchToBattleCamera");
static_assert(sizeof(BattleMain_C_MatchToBattleCamera) == 0x000090, "Wrong size on BattleMain_C_MatchToBattleCamera");
static_assert(offsetof(BattleMain_C_MatchToBattleCamera, Lo_Actors) == 0x000000, "Member 'BattleMain_C_MatchToBattleCamera::Lo_Actors' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MatchToBattleCamera, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BattleMain_C_MatchToBattleCamera::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MatchToBattleCamera, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BattleMain_C_MatchToBattleCamera::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MatchToBattleCamera, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BattleMain_C_MatchToBattleCamera::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MatchToBattleCamera, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BattleMain_C_MatchToBattleCamera::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MatchToBattleCamera, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BattleMain_C_MatchToBattleCamera::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MatchToBattleCamera, CallFunc_GetCurrentCameraTransform_retValue) == 0x000030, "Member 'BattleMain_C_MatchToBattleCamera::CallFunc_GetCurrentCameraTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MatchToBattleCamera, CallFunc_Array_Get_Item) == 0x000060, "Member 'BattleMain_C_MatchToBattleCamera::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MatchToBattleCamera, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000068, "Member 'BattleMain_C_MatchToBattleCamera::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MatchToBattleCamera, K2Node_DynamicCast_AsBattle_Camera) == 0x000070, "Member 'BattleMain_C_MatchToBattleCamera::K2Node_DynamicCast_AsBattle_Camera' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MatchToBattleCamera, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BattleMain_C_MatchToBattleCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MatchToBattleCamera, CallFunc_FinishSpawningActor_ReturnValue) == 0x000080, "Member 'BattleMain_C_MatchToBattleCamera::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MatchToBattleCamera, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BattleMain_C_MatchToBattleCamera::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MatchToBattleCamera, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BattleMain_C_MatchToBattleCamera::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MatchToBattleCamera, CallFunc_IsValid_ReturnValue) == 0x00008D, "Member 'BattleMain_C_MatchToBattleCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MatchToBattleCamera, CallFunc_BooleanAND_ReturnValue) == 0x00008E, "Member 'BattleMain_C_MatchToBattleCamera::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetEventSubLevel
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_SetEventSubLevel final
{
public:
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0000(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SetEventSubLevel) == 0x000008, "Wrong alignment on BattleMain_C_SetEventSubLevel");
static_assert(sizeof(BattleMain_C_SetEventSubLevel) == 0x000028, "Wrong size on BattleMain_C_SetEventSubLevel");
static_assert(offsetof(BattleMain_C_SetEventSubLevel, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000000, "Member 'BattleMain_C_SetEventSubLevel::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetEventSubLevel, CallFunc_Array_Get_Item) == 0x000010, "Member 'BattleMain_C_SetEventSubLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetEventSubLevel, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BattleMain_C_SetEventSubLevel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetEventSubLevel, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BattleMain_C_SetEventSubLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetEventSubLevel, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BattleMain_C_SetEventSubLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetEventSubLevel, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BattleMain_C_SetEventSubLevel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetEventSubLevel, CallFunc_TextIsEmpty_ReturnValue) == 0x000021, "Member 'BattleMain_C_SetEventSubLevel::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetEventSubLevel, CallFunc_Not_PreBool_ReturnValue_1) == 0x000022, "Member 'BattleMain_C_SetEventSubLevel::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetEventSubLevel, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'BattleMain_C_SetEventSubLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuCommandUIChange
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_CheckDebugMenuCommandUIChange final
{
public:
	bool                                          CallFunc_BattleDebugIsCommandUIChange_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuCommandUIChange) == 0x000001, "Wrong alignment on BattleMain_C_CheckDebugMenuCommandUIChange");
static_assert(sizeof(BattleMain_C_CheckDebugMenuCommandUIChange) == 0x000001, "Wrong size on BattleMain_C_CheckDebugMenuCommandUIChange");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCommandUIChange, CallFunc_BattleDebugIsCommandUIChange_ReturnValue) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuCommandUIChange::CallFunc_BattleDebugIsCommandUIChange_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuForceParty
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_CheckDebugMenuForceParty final
{
public:
	bool                                          CallFunc_BattleDebugIsForcePartyChange_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuForceParty) == 0x000001, "Wrong alignment on BattleMain_C_CheckDebugMenuForceParty");
static_assert(sizeof(BattleMain_C_CheckDebugMenuForceParty) == 0x000001, "Wrong size on BattleMain_C_CheckDebugMenuForceParty");
static_assert(offsetof(BattleMain_C_CheckDebugMenuForceParty, CallFunc_BattleDebugIsForcePartyChange_ReturnValue) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuForceParty::CallFunc_BattleDebugIsForcePartyChange_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuCycleLogOn
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuCycleLogOn final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsCycleLogOn_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuCycleLogOn) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuCycleLogOn");
static_assert(sizeof(BattleMain_C_CheckDebugMenuCycleLogOn) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuCycleLogOn");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCycleLogOn, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuCycleLogOn::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCycleLogOn, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuCycleLogOn::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCycleLogOn, CallFunc_BattleDebugIsCycleLogOn_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuCycleLogOn::CallFunc_BattleDebugIsCycleLogOn_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.UpdatePartyPanelData
// 0x0040 (0x0040 - 0x0000)
struct BattleMain_C_UpdatePartyPanelData final
{
public:
	TArray<int32>                                 Lo_PlayerList;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_UpdatePartyPanelData) == 0x000008, "Wrong alignment on BattleMain_C_UpdatePartyPanelData");
static_assert(sizeof(BattleMain_C_UpdatePartyPanelData) == 0x000040, "Wrong size on BattleMain_C_UpdatePartyPanelData");
static_assert(offsetof(BattleMain_C_UpdatePartyPanelData, Lo_PlayerList) == 0x000000, "Member 'BattleMain_C_UpdatePartyPanelData::Lo_PlayerList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UpdatePartyPanelData, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BattleMain_C_UpdatePartyPanelData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UpdatePartyPanelData, CallFunc_Array_Get_Item) == 0x000014, "Member 'BattleMain_C_UpdatePartyPanelData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UpdatePartyPanelData, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BattleMain_C_UpdatePartyPanelData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UpdatePartyPanelData, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BattleMain_C_UpdatePartyPanelData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UpdatePartyPanelData, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BattleMain_C_UpdatePartyPanelData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UpdatePartyPanelData, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BattleMain_C_UpdatePartyPanelData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UpdatePartyPanelData, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x000028, "Member 'BattleMain_C_UpdatePartyPanelData::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UpdatePartyPanelData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'BattleMain_C_UpdatePartyPanelData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.ChangeActorPartyPanel
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_ChangeActorPartyPanel final
{
public:
	int32                                         IntActiveIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_PlayerList;                                     // 0x0008(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(BattleMain_C_ChangeActorPartyPanel) == 0x000008, "Wrong alignment on BattleMain_C_ChangeActorPartyPanel");
static_assert(sizeof(BattleMain_C_ChangeActorPartyPanel) == 0x000018, "Wrong size on BattleMain_C_ChangeActorPartyPanel");
static_assert(offsetof(BattleMain_C_ChangeActorPartyPanel, IntActiveIndex) == 0x000000, "Member 'BattleMain_C_ChangeActorPartyPanel::IntActiveIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ChangeActorPartyPanel, Lo_PlayerList) == 0x000008, "Member 'BattleMain_C_ChangeActorPartyPanel::Lo_PlayerList' has a wrong offset!");

// Function BattleMain.BattleMain_C.ToCommandBox
// 0x03F0 (0x03F0 - 0x0000)
struct BattleMain_C_ToCommandBox final
{
public:
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_isVisible;                                      // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class ACharaBase_C*>              Lo_UnitMap;                                        // 0x0018(0x0050)(Edit, BlueprintVisible)
	int32                                         Lo_Index;                                          // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_PlayerList;                                     // 0x0070(0x0010)(Edit, BlueprintVisible)
	struct FTransform                             NewLocalVar_5;                                     // 0x0080(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                Lo_Location;                                       // 0x00B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Lo_Unit;                                           // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Lo_AddTransform;                                   // 0x00D0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FRotator                               Lo_RotSub;                                         // 0x0100(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsCommand;                                      // 0x010C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_AllList;                                        // 0x0110(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddBeHomeSideAllTask_RetPecID;            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilityTask_RetPecID;           // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharaBase_C*>                   CallFunc_Map_Values_Values;                        // 0x0150(0x0010)(ReferenceParm)
	class ACharaBase_C*                           CallFunc_Map_Find_Value;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x0188(0x0010)(ReferenceParm)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleField_C>    CallFunc_GetBattleField_retValue;                  // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0xC];                                      // 0x0204(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_GetCommandBoxTransform_Trans;          // 0x0210(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0294(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x031D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x031E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x031F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0328(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0368(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x039C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8[0x8];                                      // 0x03A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x03B0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AddSetActorTransformTask_RetPecID;        // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_ToCommandBox) == 0x000010, "Wrong alignment on BattleMain_C_ToCommandBox");
static_assert(sizeof(BattleMain_C_ToCommandBox) == 0x0003F0, "Wrong size on BattleMain_C_ToCommandBox");
static_assert(offsetof(BattleMain_C_ToCommandBox, Lo_WaitTaskList) == 0x000000, "Member 'BattleMain_C_ToCommandBox::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, Lo_isVisible) == 0x000010, "Member 'BattleMain_C_ToCommandBox::Lo_isVisible' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, Lo_UnitMap) == 0x000018, "Member 'BattleMain_C_ToCommandBox::Lo_UnitMap' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, Lo_Index) == 0x000068, "Member 'BattleMain_C_ToCommandBox::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, Lo_PlayerList) == 0x000070, "Member 'BattleMain_C_ToCommandBox::Lo_PlayerList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, NewLocalVar_5) == 0x000080, "Member 'BattleMain_C_ToCommandBox::NewLocalVar_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, Lo_Location) == 0x0000B0, "Member 'BattleMain_C_ToCommandBox::Lo_Location' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, Lo_Unit) == 0x0000C0, "Member 'BattleMain_C_ToCommandBox::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, Lo_AddTransform) == 0x0000D0, "Member 'BattleMain_C_ToCommandBox::Lo_AddTransform' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, Lo_RotSub) == 0x000100, "Member 'BattleMain_C_ToCommandBox::Lo_RotSub' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, Lo_IsCommand) == 0x00010C, "Member 'BattleMain_C_ToCommandBox::Lo_IsCommand' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, Lo_AllList) == 0x000110, "Member 'BattleMain_C_ToCommandBox::Lo_AllList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BattleMain_C_ToCommandBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_Array_Length_ReturnValue_1) == 0x000124, "Member 'BattleMain_C_ToCommandBox::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, Temp_int_Array_Index_Variable) == 0x000128, "Member 'BattleMain_C_ToCommandBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_Array_Get_Item) == 0x00012C, "Member 'BattleMain_C_ToCommandBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, Temp_int_Loop_Counter_Variable) == 0x000130, "Member 'BattleMain_C_ToCommandBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_Less_IntInt_ReturnValue) == 0x000134, "Member 'BattleMain_C_ToCommandBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_Add_IntInt_ReturnValue) == 0x000138, "Member 'BattleMain_C_ToCommandBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, Temp_int_Array_Index_Variable_1) == 0x00013C, "Member 'BattleMain_C_ToCommandBox::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'BattleMain_C_ToCommandBox::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_AddBeHomeSideAllTask_RetPecID) == 0x000144, "Member 'BattleMain_C_ToCommandBox::CallFunc_AddBeHomeSideAllTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_AddUnitVisibilityTask_RetPecID) == 0x000148, "Member 'BattleMain_C_ToCommandBox::CallFunc_AddUnitVisibilityTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_Map_Values_Values) == 0x000150, "Member 'BattleMain_C_ToCommandBox::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_Map_Find_Value) == 0x000160, "Member 'BattleMain_C_ToCommandBox::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_Map_Find_ReturnValue) == 0x000168, "Member 'BattleMain_C_ToCommandBox::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_GetPartyUnit_retValue) == 0x000170, "Member 'BattleMain_C_ToCommandBox::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, Temp_int_Loop_Counter_Variable_1) == 0x000178, "Member 'BattleMain_C_ToCommandBox::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_Less_IntInt_ReturnValue_1) == 0x00017C, "Member 'BattleMain_C_ToCommandBox::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_Add_IntInt_ReturnValue_1) == 0x000180, "Member 'BattleMain_C_ToCommandBox::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x000188, "Member 'BattleMain_C_ToCommandBox::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000198, "Member 'BattleMain_C_ToCommandBox::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_GetTransform_ReturnValue) == 0x0001A0, "Member 'BattleMain_C_ToCommandBox::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_GetBattleField_retValue) == 0x0001D0, "Member 'BattleMain_C_ToCommandBox::CallFunc_GetBattleField_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakTransform_Location) == 0x0001E0, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakTransform_Rotation) == 0x0001EC, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakTransform_Scale) == 0x0001F8, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BI_GetCommandBoxTransform_Trans) == 0x000210, "Member 'BattleMain_C_ToCommandBox::CallFunc_BI_GetCommandBoxTransform_Trans' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakTransform_Location_1) == 0x000240, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakTransform_Rotation_1) == 0x00024C, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakTransform_Scale_1) == 0x000258, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_GetUpVector_ReturnValue) == 0x000264, "Member 'BattleMain_C_ToCommandBox::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_Add_VectorVector_ReturnValue) == 0x000270, "Member 'BattleMain_C_ToCommandBox::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00027C, "Member 'BattleMain_C_ToCommandBox::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000288, "Member 'BattleMain_C_ToCommandBox::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_LineTraceSingle_OutHit) == 0x000294, "Member 'BattleMain_C_ToCommandBox::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_LineTraceSingle_ReturnValue) == 0x00031C, "Member 'BattleMain_C_ToCommandBox::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00031D, "Member 'BattleMain_C_ToCommandBox::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakHitResult_bBlockingHit) == 0x00031E, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakHitResult_bInitialOverlap) == 0x00031F, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakHitResult_Time) == 0x000320, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakHitResult_Distance) == 0x000324, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakHitResult_Location) == 0x000328, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakHitResult_ImpactPoint) == 0x000334, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakHitResult_Normal) == 0x000340, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakHitResult_ImpactNormal) == 0x00034C, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakHitResult_PhysMat) == 0x000358, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakHitResult_HitActor) == 0x000360, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakHitResult_HitComponent) == 0x000368, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakHitResult_HitBoneName) == 0x000370, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakHitResult_HitItem) == 0x000378, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakHitResult_ElementIndex) == 0x00037C, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakHitResult_FaceIndex) == 0x000380, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakHitResult_TraceStart) == 0x000384, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_BreakHitResult_TraceEnd) == 0x000390, "Member 'BattleMain_C_ToCommandBox::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00039C, "Member 'BattleMain_C_ToCommandBox::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_MakeTransform_ReturnValue) == 0x0003B0, "Member 'BattleMain_C_ToCommandBox::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ToCommandBox, CallFunc_AddSetActorTransformTask_RetPecID) == 0x0003E0, "Member 'BattleMain_C_ToCommandBox::CallFunc_AddSetActorTransformTask_RetPecID' has a wrong offset!");

// Function BattleMain.BattleMain_C.ActionPrevUpdateUnit
// 0x0038 (0x0038 - 0x0000)
struct BattleMain_C_ActionPrevUpdateUnit final
{
public:
	TArray<int32>                                 Lo_ActList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetCanActList_ReturnValue;                // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_ActionPrevUpdateUnit) == 0x000008, "Wrong alignment on BattleMain_C_ActionPrevUpdateUnit");
static_assert(sizeof(BattleMain_C_ActionPrevUpdateUnit) == 0x000038, "Wrong size on BattleMain_C_ActionPrevUpdateUnit");
static_assert(offsetof(BattleMain_C_ActionPrevUpdateUnit, Lo_ActList) == 0x000000, "Member 'BattleMain_C_ActionPrevUpdateUnit::Lo_ActList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevUpdateUnit, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BattleMain_C_ActionPrevUpdateUnit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevUpdateUnit, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BattleMain_C_ActionPrevUpdateUnit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevUpdateUnit, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BattleMain_C_ActionPrevUpdateUnit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevUpdateUnit, CallFunc_Array_Get_Item) == 0x00001C, "Member 'BattleMain_C_ActionPrevUpdateUnit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevUpdateUnit, CallFunc_GetCanActList_ReturnValue) == 0x000020, "Member 'BattleMain_C_ActionPrevUpdateUnit::CallFunc_GetCanActList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevUpdateUnit, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BattleMain_C_ActionPrevUpdateUnit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_ActionPrevUpdateUnit, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BattleMain_C_ActionPrevUpdateUnit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetDebugUseSkillID
// 0x0058 (0x0058 - 0x0000)
struct BattleMain_C_GetDebugUseSkillID final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Output;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Lo_Print2;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0028(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_Map_Values_Values;                        // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetDebugUseSkillID) == 0x000008, "Wrong alignment on BattleMain_C_GetDebugUseSkillID");
static_assert(sizeof(BattleMain_C_GetDebugUseSkillID) == 0x000058, "Wrong size on BattleMain_C_GetDebugUseSkillID");
static_assert(offsetof(BattleMain_C_GetDebugUseSkillID, PartyIndex) == 0x000000, "Member 'BattleMain_C_GetDebugUseSkillID::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDebugUseSkillID, Output) == 0x000004, "Member 'BattleMain_C_GetDebugUseSkillID::Output' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDebugUseSkillID, Lo_Print2) == 0x000008, "Member 'BattleMain_C_GetDebugUseSkillID::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDebugUseSkillID, Lo_Print) == 0x000018, "Member 'BattleMain_C_GetDebugUseSkillID::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDebugUseSkillID, CallFunc_Map_Keys_Keys) == 0x000028, "Member 'BattleMain_C_GetDebugUseSkillID::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDebugUseSkillID, CallFunc_Map_Values_Values) == 0x000038, "Member 'BattleMain_C_GetDebugUseSkillID::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDebugUseSkillID, CallFunc_Array_Find_ReturnValue) == 0x000048, "Member 'BattleMain_C_GetDebugUseSkillID::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDebugUseSkillID, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BattleMain_C_GetDebugUseSkillID::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetDebugUseSkillID, CallFunc_Array_Get_Item) == 0x000050, "Member 'BattleMain_C_GetDebugUseSkillID::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuNoCostOn
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuNoCostOn final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsNoCostOn_retValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuNoCostOn) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuNoCostOn");
static_assert(sizeof(BattleMain_C_CheckDebugMenuNoCostOn) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuNoCostOn");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNoCostOn, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuNoCostOn::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNoCostOn, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuNoCostOn::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNoCostOn, CallFunc_BattleDebugIsNoCostOn_retValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuNoCostOn::CallFunc_BattleDebugIsNoCostOn_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetBattleField
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_GetBattleField final
{
public:
	TScriptInterface<class IBPI_BattleField_C>    RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleField_C>    K2Node_DynamicCast_AsBPI_Battle_Field;             // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_GetBattleField) == 0x000008, "Wrong alignment on BattleMain_C_GetBattleField");
static_assert(sizeof(BattleMain_C_GetBattleField) == 0x000028, "Wrong size on BattleMain_C_GetBattleField");
static_assert(offsetof(BattleMain_C_GetBattleField, RetValue) == 0x000000, "Member 'BattleMain_C_GetBattleField::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetBattleField, K2Node_DynamicCast_AsBPI_Battle_Field) == 0x000010, "Member 'BattleMain_C_GetBattleField::K2Node_DynamicCast_AsBPI_Battle_Field' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GetBattleField, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BattleMain_C_GetBattleField::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuDrawUI
// 0x0040 (0x0040 - 0x0000)
struct BattleMain_C_CheckDebugMenuDrawUI final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_PartyPanelSetVisibility_retValue;      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_PartyPanelSetVisibility_retValue_1;    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDebugDrawUIFlag_Panel;              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDebugDrawUIFlag_EnemyUI;            // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDebugDrawUIFlag_Menu;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDebugDrawUIFlag_PressIcon;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDebugDrawUIFlag_Uplifting;          // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDebugDrawUIFlag_MoonAge;            // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDebugDrawUIFlag_Message;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDebugDrawUIFlag_Damage;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDebugDrawUIFlag_UI_Ctrl;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuDrawUI) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuDrawUI");
static_assert(sizeof(BattleMain_C_CheckDebugMenuDrawUI) == 0x000040, "Wrong size on BattleMain_C_CheckDebugMenuDrawUI");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuDrawUI::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuDrawUI::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, Temp_byte_Variable) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuDrawUI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, Temp_byte_Variable_1) == 0x000021, "Member 'BattleMain_C_CheckDebugMenuDrawUI::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, Temp_bool_Variable) == 0x000022, "Member 'BattleMain_C_CheckDebugMenuDrawUI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, CallFunc_BI_PartyPanelSetVisibility_retValue) == 0x000023, "Member 'BattleMain_C_CheckDebugMenuDrawUI::CallFunc_BI_PartyPanelSetVisibility_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, CallFunc_BI_PartyPanelSetVisibility_retValue_1) == 0x000024, "Member 'BattleMain_C_CheckDebugMenuDrawUI::CallFunc_BI_PartyPanelSetVisibility_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'BattleMain_C_CheckDebugMenuDrawUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, K2Node_DynamicCast_AsActor) == 0x000028, "Member 'BattleMain_C_CheckDebugMenuDrawUI::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BattleMain_C_CheckDebugMenuDrawUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BattleMain_C_CheckDebugMenuDrawUI::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, CallFunc_BattleDebugDrawUIFlag_Panel) == 0x000032, "Member 'BattleMain_C_CheckDebugMenuDrawUI::CallFunc_BattleDebugDrawUIFlag_Panel' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, CallFunc_BattleDebugDrawUIFlag_EnemyUI) == 0x000033, "Member 'BattleMain_C_CheckDebugMenuDrawUI::CallFunc_BattleDebugDrawUIFlag_EnemyUI' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, CallFunc_BattleDebugDrawUIFlag_Menu) == 0x000034, "Member 'BattleMain_C_CheckDebugMenuDrawUI::CallFunc_BattleDebugDrawUIFlag_Menu' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, CallFunc_BattleDebugDrawUIFlag_PressIcon) == 0x000035, "Member 'BattleMain_C_CheckDebugMenuDrawUI::CallFunc_BattleDebugDrawUIFlag_PressIcon' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, CallFunc_BattleDebugDrawUIFlag_Uplifting) == 0x000036, "Member 'BattleMain_C_CheckDebugMenuDrawUI::CallFunc_BattleDebugDrawUIFlag_Uplifting' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, CallFunc_BattleDebugDrawUIFlag_MoonAge) == 0x000037, "Member 'BattleMain_C_CheckDebugMenuDrawUI::CallFunc_BattleDebugDrawUIFlag_MoonAge' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, CallFunc_BattleDebugDrawUIFlag_Message) == 0x000038, "Member 'BattleMain_C_CheckDebugMenuDrawUI::CallFunc_BattleDebugDrawUIFlag_Message' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, CallFunc_BattleDebugDrawUIFlag_Damage) == 0x000039, "Member 'BattleMain_C_CheckDebugMenuDrawUI::CallFunc_BattleDebugDrawUIFlag_Damage' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, CallFunc_BattleDebugDrawUIFlag_UI_Ctrl) == 0x00003A, "Member 'BattleMain_C_CheckDebugMenuDrawUI::CallFunc_BattleDebugDrawUIFlag_UI_Ctrl' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuDrawUI, K2Node_Select_Default) == 0x00003B, "Member 'BattleMain_C_CheckDebugMenuDrawUI::K2Node_Select_Default' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuFieldEffect
// 0x0058 (0x0058 - 0x0000)
struct BattleMain_C_CheckDebugMenuFieldEffect final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_BattleDebugDrawFieldEffect_area;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CommonPostProcessBattle_C> K2Node_DynamicCast_AsBPI_Common_Post_Process_Battle; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_BattleAreaSwitch_retValue;             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuFieldEffect) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuFieldEffect");
static_assert(sizeof(BattleMain_C_CheckDebugMenuFieldEffect) == 0x000058, "Wrong size on BattleMain_C_CheckDebugMenuFieldEffect");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFieldEffect, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuFieldEffect::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFieldEffect, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuFieldEffect::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFieldEffect, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuFieldEffect::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFieldEffect, CallFunc_BattleDebugDrawFieldEffect_area) == 0x000030, "Member 'BattleMain_C_CheckDebugMenuFieldEffect::CallFunc_BattleDebugDrawFieldEffect_area' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFieldEffect, CallFunc_Array_Get_Item) == 0x000038, "Member 'BattleMain_C_CheckDebugMenuFieldEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFieldEffect, K2Node_DynamicCast_AsBPI_Common_Post_Process_Battle) == 0x000040, "Member 'BattleMain_C_CheckDebugMenuFieldEffect::K2Node_DynamicCast_AsBPI_Common_Post_Process_Battle' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFieldEffect, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BattleMain_C_CheckDebugMenuFieldEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuFieldEffect, CallFunc_BI_BattleAreaSwitch_retValue) == 0x000051, "Member 'BattleMain_C_CheckDebugMenuFieldEffect::CallFunc_BI_BattleAreaSwitch_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepTurnEndEventFunc
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_SetStepTurnEndEventFunc final
{
public:
	bool                                          CallFunc_CheckBattleFlag_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_CheckEventTrigger_EventName;              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_CheckEventTrigger_EventName_1;            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayEvent_ret;                            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayEvent_ret_1;                          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SetStepTurnEndEventFunc) == 0x000004, "Wrong alignment on BattleMain_C_SetStepTurnEndEventFunc");
static_assert(sizeof(BattleMain_C_SetStepTurnEndEventFunc) == 0x000018, "Wrong size on BattleMain_C_SetStepTurnEndEventFunc");
static_assert(offsetof(BattleMain_C_SetStepTurnEndEventFunc, CallFunc_CheckBattleFlag_ReturnValue) == 0x000000, "Member 'BattleMain_C_SetStepTurnEndEventFunc::CallFunc_CheckBattleFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTurnEndEventFunc, CallFunc_CheckEventTrigger_EventName) == 0x000004, "Member 'BattleMain_C_SetStepTurnEndEventFunc::CallFunc_CheckEventTrigger_EventName' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTurnEndEventFunc, CallFunc_CheckEventTrigger_EventName_1) == 0x00000C, "Member 'BattleMain_C_SetStepTurnEndEventFunc::CallFunc_CheckEventTrigger_EventName_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTurnEndEventFunc, CallFunc_PlayEvent_ret) == 0x000014, "Member 'BattleMain_C_SetStepTurnEndEventFunc::CallFunc_PlayEvent_ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTurnEndEventFunc, CallFunc_PlayEvent_ret_1) == 0x000015, "Member 'BattleMain_C_SetStepTurnEndEventFunc::CallFunc_PlayEvent_ret_1' has a wrong offset!");

// Function BattleMain.BattleMain_C.CastToCharaBaseList
// 0x0068 (0x0068 - 0x0000)
struct BattleMain_C_CastToCharaBaseList final
{
public:
	TArray<TScriptInterface<class IBPI_CharaBaseAccessor_C>> BPI_List;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ACharaBase_C*>                   Actor_List;                                        // 0x0010(0x0010)(Parm, OutParm)
	TArray<class ACharaBase_C*>                   Lo_List;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_Array_Get_Item;                           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CastToCharaBaseList) == 0x000008, "Wrong alignment on BattleMain_C_CastToCharaBaseList");
static_assert(sizeof(BattleMain_C_CastToCharaBaseList) == 0x000068, "Wrong size on BattleMain_C_CastToCharaBaseList");
static_assert(offsetof(BattleMain_C_CastToCharaBaseList, BPI_List) == 0x000000, "Member 'BattleMain_C_CastToCharaBaseList::BPI_List' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CastToCharaBaseList, Actor_List) == 0x000010, "Member 'BattleMain_C_CastToCharaBaseList::Actor_List' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CastToCharaBaseList, Lo_List) == 0x000020, "Member 'BattleMain_C_CastToCharaBaseList::Lo_List' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CastToCharaBaseList, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BattleMain_C_CastToCharaBaseList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CastToCharaBaseList, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BattleMain_C_CastToCharaBaseList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CastToCharaBaseList, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BattleMain_C_CastToCharaBaseList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CastToCharaBaseList, CallFunc_Array_Get_Item) == 0x000040, "Member 'BattleMain_C_CastToCharaBaseList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CastToCharaBaseList, K2Node_DynamicCast_AsChara_Base) == 0x000050, "Member 'BattleMain_C_CastToCharaBaseList::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CastToCharaBaseList, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BattleMain_C_CastToCharaBaseList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CastToCharaBaseList, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'BattleMain_C_CastToCharaBaseList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CastToCharaBaseList, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BattleMain_C_CastToCharaBaseList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CastToCharaBaseList, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'BattleMain_C_CastToCharaBaseList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepTurnEndEventFunc
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_SeqStepTurnEndEventFunc final
{
public:
	E_BTL_EVT_RESULT                              Lo_Next;                                           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Side;                                              // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IdxEnd;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IdxStart;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBattleFlag_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFinished_ret;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SeqStepTurnEndEventFunc) == 0x000004, "Wrong alignment on BattleMain_C_SeqStepTurnEndEventFunc");
static_assert(sizeof(BattleMain_C_SeqStepTurnEndEventFunc) == 0x000010, "Wrong size on BattleMain_C_SeqStepTurnEndEventFunc");
static_assert(offsetof(BattleMain_C_SeqStepTurnEndEventFunc, Lo_Next) == 0x000000, "Member 'BattleMain_C_SeqStepTurnEndEventFunc::Lo_Next' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnEndEventFunc, Side) == 0x000001, "Member 'BattleMain_C_SeqStepTurnEndEventFunc::Side' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnEndEventFunc, IdxEnd) == 0x000004, "Member 'BattleMain_C_SeqStepTurnEndEventFunc::IdxEnd' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnEndEventFunc, IdxStart) == 0x000008, "Member 'BattleMain_C_SeqStepTurnEndEventFunc::IdxStart' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnEndEventFunc, CallFunc_CheckBattleFlag_ReturnValue) == 0x00000C, "Member 'BattleMain_C_SeqStepTurnEndEventFunc::CallFunc_CheckBattleFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnEndEventFunc, CallFunc_CheckEventFinished_ret) == 0x00000D, "Member 'BattleMain_C_SeqStepTurnEndEventFunc::CallFunc_CheckEventFinished_ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepPressPreFunc
// 0x00B8 (0x00B8 - 0x0000)
struct BattleMain_C_SetStepPressPreFunc final
{
public:
	int32                                         Lo_MPCureValue;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_HPCureValue;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_PartyIndex;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	class UBattleActionTaskFactory_C*             CallFunc_GetTaskFactory_retValue;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPartyPanelCtrlTask_retPecID;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattleActionTaskFactory_C*             CallFunc_GetTaskFactory_retValue_1;                // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPartyPanelCtrlTask_retPecID_1;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattleActionTaskFactory_C*             CallFunc_GetTaskFactory_retValue_2;                // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_GetTaskFactory_retValue;               // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetCureMPValue_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetCureHPValue_ReturnValue;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideIsInFieldList_ReturnValue;      // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsUseUpliftingGauge_ReturnValue;       // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleFlag_ReturnValue;              // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue; // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_PRESS_TYPE                              CallFunc_AddPressIconTypeGodParam_ReturnValue;     // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AddPressIconTask_RetPecID;                // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_MakePartyPanelShowTask_RetPecID;       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_SetStepPressPreFunc) == 0x000008, "Wrong alignment on BattleMain_C_SetStepPressPreFunc");
static_assert(sizeof(BattleMain_C_SetStepPressPreFunc) == 0x0000B8, "Wrong size on BattleMain_C_SetStepPressPreFunc");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, Lo_MPCureValue) == 0x000000, "Member 'BattleMain_C_SetStepPressPreFunc::Lo_MPCureValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, Lo_HPCureValue) == 0x000004, "Member 'BattleMain_C_SetStepPressPreFunc::Lo_HPCureValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, Lo_PartyIndex) == 0x000008, "Member 'BattleMain_C_SetStepPressPreFunc::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, Lo_WaitTaskList) == 0x000010, "Member 'BattleMain_C_SetStepPressPreFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_GetTaskFactory_retValue) == 0x000020, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_GetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_AddPartyPanelCtrlTask_retPecID) == 0x000028, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_AddPartyPanelCtrlTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_GetTaskFactory_retValue_1) == 0x000030, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_GetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_AddPartyPanelCtrlTask_retPecID_1) == 0x000038, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_AddPartyPanelCtrlTask_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00003D, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_GetTaskFactory_retValue_2) == 0x000040, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_GetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_BI_GetTaskFactory_retValue) == 0x000048, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_BI_GetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_BI_GetCureMPValue_ReturnValue) == 0x000058, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_BI_GetCureMPValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_BI_GetCureHPValue_ReturnValue) == 0x00005C, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_BI_GetCureHPValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000060, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000061, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_BI_GetSideIsInFieldList_ReturnValue) == 0x000068, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_BI_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_BI_IsUseUpliftingGauge_ReturnValue) == 0x00007C, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_BI_IsUseUpliftingGauge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_CheckBattleFlag_ReturnValue) == 0x00007D, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_CheckBattleFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue) == 0x00007E, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_Not_PreBool_ReturnValue) == 0x00007F, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_BooleanAND_ReturnValue) == 0x000080, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_BooleanAND_ReturnValue_1) == 0x000081, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_AddPressIconTypeGodParam_ReturnValue) == 0x000082, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_AddPressIconTypeGodParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000083, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_AddPressIconTask_RetPecID) == 0x000084, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_AddPressIconTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'BattleMain_C_SetStepPressPreFunc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_BI_MakePartyPanelShowTask_RetPecID) == 0x000094, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_BI_MakePartyPanelShowTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, K2Node_MakeArray_Array) == 0x000098, "Member 'BattleMain_C_SetStepPressPreFunc::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, Temp_int_Array_Index_Variable) == 0x0000AC, "Member 'BattleMain_C_SetStepPressPreFunc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepPressPreFunc, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BattleMain_C_SetStepPressPreFunc::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepPressPreFunc
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_SeqStepPressPreFunc final
{
public:
	bool                                          CallFunc_CheckMercyTalk_OutIsMercyTalk;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTalkStartInfo                         CallFunc_CheckMercyTalk_OutStartInfo;              // 0x0004(0x000C)(NoDestructor)
	bool                                          CallFunc_CheckBattleFlag_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleFlag_ReturnValue_1;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SeqStepPressPreFunc) == 0x000008, "Wrong alignment on BattleMain_C_SeqStepPressPreFunc");
static_assert(sizeof(BattleMain_C_SeqStepPressPreFunc) == 0x000028, "Wrong size on BattleMain_C_SeqStepPressPreFunc");
static_assert(offsetof(BattleMain_C_SeqStepPressPreFunc, CallFunc_CheckMercyTalk_OutIsMercyTalk) == 0x000000, "Member 'BattleMain_C_SeqStepPressPreFunc::CallFunc_CheckMercyTalk_OutIsMercyTalk' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepPressPreFunc, CallFunc_CheckMercyTalk_OutStartInfo) == 0x000004, "Member 'BattleMain_C_SeqStepPressPreFunc::CallFunc_CheckMercyTalk_OutStartInfo' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepPressPreFunc, CallFunc_CheckBattleFlag_ReturnValue) == 0x000010, "Member 'BattleMain_C_SeqStepPressPreFunc::CallFunc_CheckBattleFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepPressPreFunc, CallFunc_CheckBattleFlag_ReturnValue_1) == 0x000011, "Member 'BattleMain_C_SeqStepPressPreFunc::CallFunc_CheckBattleFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepPressPreFunc, CallFunc_Get_ReturnValue) == 0x000018, "Member 'BattleMain_C_SeqStepPressPreFunc::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepPressPreFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'BattleMain_C_SeqStepPressPreFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepPressPreFunc, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'BattleMain_C_SeqStepPressPreFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.AddDrawPressIcon
// 0x0038 (0x0038 - 0x0000)
struct BattleMain_C_AddDrawPressIcon final
{
public:
	struct FPressIcon                             Lo_BeforeIcons;                                    // 0x0000(0x000C)(Edit, BlueprintVisible, NoDestructor)
	E_BTL_PRESS_TYPE                              CallFunc_GetPressType_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_END                                     CallFunc_CheckBattleEnd_retValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPressIcon                             CallFunc_GetPressIcon_ReturnValue;                 // 0x0010(0x000C)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPressIcon                             CallFunc_GetAddDrawPressIconNum_ReturnValue;       // 0x0020(0x000C)(NoDestructor)
	struct FPressIcon                             CallFunc_CalcDrawPressIconNum_ReturnValue;         // 0x002C(0x000C)(NoDestructor)
};
static_assert(alignof(BattleMain_C_AddDrawPressIcon) == 0x000004, "Wrong alignment on BattleMain_C_AddDrawPressIcon");
static_assert(sizeof(BattleMain_C_AddDrawPressIcon) == 0x000038, "Wrong size on BattleMain_C_AddDrawPressIcon");
static_assert(offsetof(BattleMain_C_AddDrawPressIcon, Lo_BeforeIcons) == 0x000000, "Member 'BattleMain_C_AddDrawPressIcon::Lo_BeforeIcons' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddDrawPressIcon, CallFunc_GetPressType_ReturnValue) == 0x00000C, "Member 'BattleMain_C_AddDrawPressIcon::CallFunc_GetPressType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddDrawPressIcon, CallFunc_CheckBattleEnd_retValue) == 0x00000D, "Member 'BattleMain_C_AddDrawPressIcon::CallFunc_CheckBattleEnd_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddDrawPressIcon, CallFunc_GetPressIcon_ReturnValue) == 0x000010, "Member 'BattleMain_C_AddDrawPressIcon::CallFunc_GetPressIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddDrawPressIcon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001C, "Member 'BattleMain_C_AddDrawPressIcon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddDrawPressIcon, CallFunc_GetAddDrawPressIconNum_ReturnValue) == 0x000020, "Member 'BattleMain_C_AddDrawPressIcon::CallFunc_GetAddDrawPressIconNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddDrawPressIcon, CallFunc_CalcDrawPressIconNum_ReturnValue) == 0x00002C, "Member 'BattleMain_C_AddDrawPressIcon::CallFunc_CalcDrawPressIconNum_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenu2NoPress
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_CheckDebugMenu2NoPress final
{
public:
	bool                                          CallFunc_BattleDebug2NoPress_Ret;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenu2NoPress) == 0x000001, "Wrong alignment on BattleMain_C_CheckDebugMenu2NoPress");
static_assert(sizeof(BattleMain_C_CheckDebugMenu2NoPress) == 0x000001, "Wrong size on BattleMain_C_CheckDebugMenu2NoPress");
static_assert(offsetof(BattleMain_C_CheckDebugMenu2NoPress, CallFunc_BattleDebug2NoPress_Ret) == 0x000000, "Member 'BattleMain_C_CheckDebugMenu2NoPress::CallFunc_BattleDebug2NoPress_Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugBattleSpeedOverride
// 0x0014 (0x0014 - 0x0000)
struct BattleMain_C_CheckDebugBattleSpeedOverride final
{
public:
	bool                                          CallFunc_BattleDebugGetBattleSpeedEnableBase_Enable; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BattleDebugGetBattleSpeedOverrideBase_BattleSpeed; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_SetBattlePlayRate_NoUse;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CheckDebugBattleSpeedOverride) == 0x000004, "Wrong alignment on BattleMain_C_CheckDebugBattleSpeedOverride");
static_assert(sizeof(BattleMain_C_CheckDebugBattleSpeedOverride) == 0x000014, "Wrong size on BattleMain_C_CheckDebugBattleSpeedOverride");
static_assert(offsetof(BattleMain_C_CheckDebugBattleSpeedOverride, CallFunc_BattleDebugGetBattleSpeedEnableBase_Enable) == 0x000000, "Member 'BattleMain_C_CheckDebugBattleSpeedOverride::CallFunc_BattleDebugGetBattleSpeedEnableBase_Enable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugBattleSpeedOverride, CallFunc_BattleDebugGetBattleSpeedOverrideBase_BattleSpeed) == 0x000004, "Member 'BattleMain_C_CheckDebugBattleSpeedOverride::CallFunc_BattleDebugGetBattleSpeedOverrideBase_BattleSpeed' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugBattleSpeedOverride, CallFunc_FTrunc_ReturnValue) == 0x000008, "Member 'BattleMain_C_CheckDebugBattleSpeedOverride::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugBattleSpeedOverride, CallFunc_BI_SetBattlePlayRate_NoUse) == 0x00000C, "Member 'BattleMain_C_CheckDebugBattleSpeedOverride::CallFunc_BI_SetBattlePlayRate_NoUse' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugBattleSpeedOverride, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BattleMain_C_CheckDebugBattleSpeedOverride::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugPlayerUpliftingGauge
// 0x0004 (0x0004 - 0x0000)
struct BattleMain_C_CheckDebugPlayerUpliftingGauge final
{
public:
	int32                                         CallFunc_BattleDebugPlayerUpliftingGauge_Ret;      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CheckDebugPlayerUpliftingGauge) == 0x000004, "Wrong alignment on BattleMain_C_CheckDebugPlayerUpliftingGauge");
static_assert(sizeof(BattleMain_C_CheckDebugPlayerUpliftingGauge) == 0x000004, "Wrong size on BattleMain_C_CheckDebugPlayerUpliftingGauge");
static_assert(offsetof(BattleMain_C_CheckDebugPlayerUpliftingGauge, CallFunc_BattleDebugPlayerUpliftingGauge_Ret) == 0x000000, "Member 'BattleMain_C_CheckDebugPlayerUpliftingGauge::CallFunc_BattleDebugPlayerUpliftingGauge_Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugEnemyUpliftingGauge
// 0x0004 (0x0004 - 0x0000)
struct BattleMain_C_CheckDebugEnemyUpliftingGauge final
{
public:
	int32                                         CallFunc_BattleDebugEnemyUpliftingGauge_Ret;       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CheckDebugEnemyUpliftingGauge) == 0x000004, "Wrong alignment on BattleMain_C_CheckDebugEnemyUpliftingGauge");
static_assert(sizeof(BattleMain_C_CheckDebugEnemyUpliftingGauge) == 0x000004, "Wrong size on BattleMain_C_CheckDebugEnemyUpliftingGauge");
static_assert(offsetof(BattleMain_C_CheckDebugEnemyUpliftingGauge, CallFunc_BattleDebugEnemyUpliftingGauge_Ret) == 0x000000, "Member 'BattleMain_C_CheckDebugEnemyUpliftingGauge::CallFunc_BattleDebugEnemyUpliftingGauge_Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.GetParticleManager
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_GetParticleManager final
{
public:
	class UBattleParticleManager_C*               ParticleManager;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_GetParticleManager) == 0x000008, "Wrong alignment on BattleMain_C_GetParticleManager");
static_assert(sizeof(BattleMain_C_GetParticleManager) == 0x000008, "Wrong size on BattleMain_C_GetParticleManager");
static_assert(offsetof(BattleMain_C_GetParticleManager, ParticleManager) == 0x000000, "Member 'BattleMain_C_GetParticleManager::ParticleManager' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuAllReflex
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuAllReflex final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsAllRefrex_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuAllReflex) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuAllReflex");
static_assert(sizeof(BattleMain_C_CheckDebugMenuAllReflex) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuAllReflex");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAllReflex, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuAllReflex::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAllReflex, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuAllReflex::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAllReflex, CallFunc_BattleDebugIsAllRefrex_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuAllReflex::CallFunc_BattleDebugIsAllRefrex_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuAllAbsorb
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuAllAbsorb final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsAllAbsorb_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuAllAbsorb) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuAllAbsorb");
static_assert(sizeof(BattleMain_C_CheckDebugMenuAllAbsorb) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuAllAbsorb");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAllAbsorb, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuAllAbsorb::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAllAbsorb, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuAllAbsorb::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAllAbsorb, CallFunc_BattleDebugIsAllAbsorb_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuAllAbsorb::CallFunc_BattleDebugIsAllAbsorb_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuAllBlock
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuAllBlock final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsAllBlock_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuAllBlock) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuAllBlock");
static_assert(sizeof(BattleMain_C_CheckDebugMenuAllBlock) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuAllBlock");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAllBlock, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuAllBlock::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAllBlock, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuAllBlock::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAllBlock, CallFunc_BattleDebugIsAllBlock_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuAllBlock::CallFunc_BattleDebugIsAllBlock_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepEnemyUpliftingFunc
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_SetStepEnemyUpliftingFunc final
{
public:
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetUpliftingPartyIndex_ReturnValue;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUpliftingTask_RetPecID;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_GetEnemyUpliftingPartyIndex_ReturnValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUpliftingTask_RetPecID_1;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_SetStepEnemyUpliftingFunc) == 0x000008, "Wrong alignment on BattleMain_C_SetStepEnemyUpliftingFunc");
static_assert(sizeof(BattleMain_C_SetStepEnemyUpliftingFunc) == 0x000028, "Wrong size on BattleMain_C_SetStepEnemyUpliftingFunc");
static_assert(offsetof(BattleMain_C_SetStepEnemyUpliftingFunc, Lo_WaitTaskList) == 0x000000, "Member 'BattleMain_C_SetStepEnemyUpliftingFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyUpliftingFunc, CallFunc_GetUpliftingPartyIndex_ReturnValue) == 0x000010, "Member 'BattleMain_C_SetStepEnemyUpliftingFunc::CallFunc_GetUpliftingPartyIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyUpliftingFunc, CallFunc_AddUpliftingTask_RetPecID) == 0x000014, "Member 'BattleMain_C_SetStepEnemyUpliftingFunc::CallFunc_AddUpliftingTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyUpliftingFunc, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'BattleMain_C_SetStepEnemyUpliftingFunc::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyUpliftingFunc, CallFunc_BI_GetEnemyUpliftingPartyIndex_ReturnValue) == 0x00001C, "Member 'BattleMain_C_SetStepEnemyUpliftingFunc::CallFunc_BI_GetEnemyUpliftingPartyIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyUpliftingFunc, CallFunc_AddUpliftingTask_RetPecID_1) == 0x000020, "Member 'BattleMain_C_SetStepEnemyUpliftingFunc::CallFunc_AddUpliftingTask_RetPecID_1' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepActionEventFunc
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_SetStepActionEventFunc final
{
public:
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	class FName                                   CallFunc_CheckEventTrigger_EventName;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayEvent_ret;                            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SetStepActionEventFunc) == 0x000008, "Wrong alignment on BattleMain_C_SetStepActionEventFunc");
static_assert(sizeof(BattleMain_C_SetStepActionEventFunc) == 0x000020, "Wrong size on BattleMain_C_SetStepActionEventFunc");
static_assert(offsetof(BattleMain_C_SetStepActionEventFunc, Lo_WaitTaskList) == 0x000000, "Member 'BattleMain_C_SetStepActionEventFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionEventFunc, CallFunc_CheckEventTrigger_EventName) == 0x000010, "Member 'BattleMain_C_SetStepActionEventFunc::CallFunc_CheckEventTrigger_EventName' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepActionEventFunc, CallFunc_PlayEvent_ret) == 0x000018, "Member 'BattleMain_C_SetStepActionEventFunc::CallFunc_PlayEvent_ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuNoDamage
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuNoDamage final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugNoDamage_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuNoDamage) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuNoDamage");
static_assert(sizeof(BattleMain_C_CheckDebugMenuNoDamage) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuNoDamage");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNoDamage, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuNoDamage::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNoDamage, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuNoDamage::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNoDamage, CallFunc_BattleDebugNoDamage_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuNoDamage::CallFunc_BattleDebugNoDamage_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuAllSkill
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuAllSkill final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugAllSkill_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuAllSkill) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuAllSkill");
static_assert(sizeof(BattleMain_C_CheckDebugMenuAllSkill) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuAllSkill");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAllSkill, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuAllSkill::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAllSkill, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuAllSkill::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAllSkill, CallFunc_BattleDebugAllSkill_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuAllSkill::CallFunc_BattleDebugAllSkill_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugExpRate
// 0x0004 (0x0004 - 0x0000)
struct BattleMain_C_CheckDebugExpRate final
{
public:
	int32                                         CallFunc_BattleDebugExpRate_Ret;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CheckDebugExpRate) == 0x000004, "Wrong alignment on BattleMain_C_CheckDebugExpRate");
static_assert(sizeof(BattleMain_C_CheckDebugExpRate) == 0x000004, "Wrong size on BattleMain_C_CheckDebugExpRate");
static_assert(offsetof(BattleMain_C_CheckDebugExpRate, CallFunc_BattleDebugExpRate_Ret) == 0x000000, "Member 'BattleMain_C_CheckDebugExpRate::CallFunc_BattleDebugExpRate_Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMakkaRate
// 0x0004 (0x0004 - 0x0000)
struct BattleMain_C_CheckDebugMakkaRate final
{
public:
	int32                                         CallFunc_BattleDebugMakkaRate_Ret;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CheckDebugMakkaRate) == 0x000004, "Wrong alignment on BattleMain_C_CheckDebugMakkaRate");
static_assert(sizeof(BattleMain_C_CheckDebugMakkaRate) == 0x000004, "Wrong size on BattleMain_C_CheckDebugMakkaRate");
static_assert(offsetof(BattleMain_C_CheckDebugMakkaRate, CallFunc_BattleDebugMakkaRate_Ret) == 0x000000, "Member 'BattleMain_C_CheckDebugMakkaRate::CallFunc_BattleDebugMakkaRate_Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuPlayerFirst
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuPlayerFirst final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugPlayerFirst_Ret;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuPlayerFirst) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuPlayerFirst");
static_assert(sizeof(BattleMain_C_CheckDebugMenuPlayerFirst) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuPlayerFirst");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerFirst, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuPlayerFirst::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerFirst, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuPlayerFirst::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuPlayerFirst, CallFunc_BattleDebugPlayerFirst_Ret) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuPlayerFirst::CallFunc_BattleDebugPlayerFirst_Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuEnemyFirst
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuEnemyFirst final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugEnemyFirst_Ret;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuEnemyFirst) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuEnemyFirst");
static_assert(sizeof(BattleMain_C_CheckDebugMenuEnemyFirst) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuEnemyFirst");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyFirst, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuEnemyFirst::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyFirst, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuEnemyFirst::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuEnemyFirst, CallFunc_BattleDebugEnemyFirst_Ret) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuEnemyFirst::CallFunc_BattleDebugEnemyFirst_Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuCanUseRecome
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuCanUseRecome final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugCanUseRecome_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuCanUseRecome) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuCanUseRecome");
static_assert(sizeof(BattleMain_C_CheckDebugMenuCanUseRecome) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuCanUseRecome");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCanUseRecome, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuCanUseRecome::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCanUseRecome, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuCanUseRecome::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCanUseRecome, CallFunc_BattleDebugCanUseRecome_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuCanUseRecome::CallFunc_BattleDebugCanUseRecome_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuCharm
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuCharm final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugCharm_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDebugCharm_ReturnValue_1;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDebugCharm_ReturnValue_2;           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDebugCharm_ReturnValue_3;           // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuCharm) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuCharm");
static_assert(sizeof(BattleMain_C_CheckDebugMenuCharm) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuCharm");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCharm, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuCharm::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCharm, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuCharm::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCharm, CallFunc_BattleDebugCharm_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuCharm::CallFunc_BattleDebugCharm_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCharm, CallFunc_BattleDebugCharm_ReturnValue_1) == 0x000021, "Member 'BattleMain_C_CheckDebugMenuCharm::CallFunc_BattleDebugCharm_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCharm, CallFunc_BattleDebugCharm_ReturnValue_2) == 0x000022, "Member 'BattleMain_C_CheckDebugMenuCharm::CallFunc_BattleDebugCharm_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCharm, CallFunc_BattleDebugCharm_ReturnValue_3) == 0x000023, "Member 'BattleMain_C_CheckDebugMenuCharm::CallFunc_BattleDebugCharm_ReturnValue_3' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuConfuse
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuConfuse final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugConfuse_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDebugConfuse_ReturnValue_1;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDebugConfuse_ReturnValue_2;         // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuConfuse) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuConfuse");
static_assert(sizeof(BattleMain_C_CheckDebugMenuConfuse) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuConfuse");
static_assert(offsetof(BattleMain_C_CheckDebugMenuConfuse, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuConfuse::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuConfuse, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuConfuse::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuConfuse, CallFunc_BattleDebugConfuse_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuConfuse::CallFunc_BattleDebugConfuse_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuConfuse, CallFunc_BattleDebugConfuse_ReturnValue_1) == 0x000021, "Member 'BattleMain_C_CheckDebugMenuConfuse::CallFunc_BattleDebugConfuse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuConfuse, CallFunc_BattleDebugConfuse_ReturnValue_2) == 0x000022, "Member 'BattleMain_C_CheckDebugMenuConfuse::CallFunc_BattleDebugConfuse_ReturnValue_2' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuNotCureBstTimeout
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuNotCureBstTimeout final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugNotCureBstTimeout_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuNotCureBstTimeout) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuNotCureBstTimeout");
static_assert(sizeof(BattleMain_C_CheckDebugMenuNotCureBstTimeout) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuNotCureBstTimeout");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNotCureBstTimeout, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuNotCureBstTimeout::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNotCureBstTimeout, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuNotCureBstTimeout::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNotCureBstTimeout, CallFunc_BattleDebugNotCureBstTimeout_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuNotCureBstTimeout::CallFunc_BattleDebugNotCureBstTimeout_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuMercyTalk100
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuMercyTalk100 final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_TalkDebug_CheckMercy100_IsContinue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuMercyTalk100) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuMercyTalk100");
static_assert(sizeof(BattleMain_C_CheckDebugMenuMercyTalk100) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuMercyTalk100");
static_assert(offsetof(BattleMain_C_CheckDebugMenuMercyTalk100, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuMercyTalk100::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuMercyTalk100, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuMercyTalk100::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuMercyTalk100, CallFunc_TalkDebug_CheckMercy100_IsContinue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuMercyTalk100::CallFunc_TalkDebug_CheckMercy100_IsContinue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepUpliftingTurnFunc
// 0x01D0 (0x01D0 - 0x0000)
struct BattleMain_C_SetStepUpliftingTurnFunc final
{
public:
	TArray<struct FSkillActionTargetInfo>         Lo_ReflexList;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSkillActionExtend>             Lo_ExtendAction;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_SkillMasterExecList;                            // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSkillActionTargetInfo>         Lo_SkillActionTarget;                              // 0x0030(0x0010)(Edit, BlueprintVisible)
	struct FSkillActionDesc                       Lo_SkillActionDesc;                                // 0x0040(0x0090)(Edit, BlueprintVisible)
	int32                                         Lo_PlayerIndex;                                    // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x00D8(0x0010)(Edit, BlueprintVisible)
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0xC];                                       // 0x00F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FSkillActionDesc                       K2Node_MakeStruct_SkillActionDesc;                 // 0x0130(0x0090)()
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOOMAGATOKI_C*                          CallFunc_FinishSpawningActor_ReturnValue;          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_SetStepUpliftingTurnFunc) == 0x000010, "Wrong alignment on BattleMain_C_SetStepUpliftingTurnFunc");
static_assert(sizeof(BattleMain_C_SetStepUpliftingTurnFunc) == 0x0001D0, "Wrong size on BattleMain_C_SetStepUpliftingTurnFunc");
static_assert(offsetof(BattleMain_C_SetStepUpliftingTurnFunc, Lo_ReflexList) == 0x000000, "Member 'BattleMain_C_SetStepUpliftingTurnFunc::Lo_ReflexList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepUpliftingTurnFunc, Lo_ExtendAction) == 0x000010, "Member 'BattleMain_C_SetStepUpliftingTurnFunc::Lo_ExtendAction' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepUpliftingTurnFunc, Lo_SkillMasterExecList) == 0x000020, "Member 'BattleMain_C_SetStepUpliftingTurnFunc::Lo_SkillMasterExecList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepUpliftingTurnFunc, Lo_SkillActionTarget) == 0x000030, "Member 'BattleMain_C_SetStepUpliftingTurnFunc::Lo_SkillActionTarget' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepUpliftingTurnFunc, Lo_SkillActionDesc) == 0x000040, "Member 'BattleMain_C_SetStepUpliftingTurnFunc::Lo_SkillActionDesc' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepUpliftingTurnFunc, Lo_PlayerIndex) == 0x0000D0, "Member 'BattleMain_C_SetStepUpliftingTurnFunc::Lo_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepUpliftingTurnFunc, Lo_WaitTaskList) == 0x0000D8, "Member 'BattleMain_C_SetStepUpliftingTurnFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepUpliftingTurnFunc, CallFunc_Get_ReturnValue) == 0x0000E8, "Member 'BattleMain_C_SetStepUpliftingTurnFunc::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepUpliftingTurnFunc, CallFunc_GetHeroIndex_ReturnValue) == 0x0000F0, "Member 'BattleMain_C_SetStepUpliftingTurnFunc::CallFunc_GetHeroIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepUpliftingTurnFunc, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'BattleMain_C_SetStepUpliftingTurnFunc::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepUpliftingTurnFunc, K2Node_MakeStruct_SkillActionDesc) == 0x000130, "Member 'BattleMain_C_SetStepUpliftingTurnFunc::K2Node_MakeStruct_SkillActionDesc' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepUpliftingTurnFunc, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001C0, "Member 'BattleMain_C_SetStepUpliftingTurnFunc::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepUpliftingTurnFunc, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001C8, "Member 'BattleMain_C_SetStepUpliftingTurnFunc::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepUpliftingTurnFunc
// 0x00F8 (0x00F8 - 0x0000)
struct BattleMain_C_SeqStepUpliftingTurnFunc final
{
public:
	bool                                          Lo_IsUseSkillInfoMes;                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_label;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Lo_PlayerIndex;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBadStatus_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBadStatus_ReturnValue_1;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetAllIsInFieldList_ReturnValue;          // 0x0040(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInfoMessByLabelTask_RetPecID;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetAllIsInFieldList_ReturnValue_1;        // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue_1; // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFinished_retValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAidCounter_ReturnValue;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAidCounter_ReturnValue_1;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAidCounter_ReturnValue_2;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAidCounter_ReturnValue_3;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAidCounter_ReturnValue_4;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue_2; // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue_3; // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF[0x1];                                       // 0x00BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x00C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBadStatus_ReturnValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_MakeBadCureTask_retValue;                 // 0x00E8(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleMain_C_SeqStepUpliftingTurnFunc) == 0x000008, "Wrong alignment on BattleMain_C_SeqStepUpliftingTurnFunc");
static_assert(sizeof(BattleMain_C_SeqStepUpliftingTurnFunc) == 0x0000F8, "Wrong size on BattleMain_C_SeqStepUpliftingTurnFunc");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, Lo_IsUseSkillInfoMes) == 0x000000, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::Lo_IsUseSkillInfoMes' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, Lo_label) == 0x000008, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::Lo_label' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, Lo_PlayerIndex) == 0x000018, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::Lo_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, Lo_WaitTaskList) == 0x000020, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_CheckBadStatus_ReturnValue) == 0x000034, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_CheckBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_CheckBadStatus_ReturnValue_1) == 0x000035, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_CheckBadStatus_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_Not_PreBool_ReturnValue) == 0x000036, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_Not_PreBool_ReturnValue_1) == 0x000037, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_GetAllIsInFieldList_ReturnValue) == 0x000040, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_GetAllIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_Array_Get_Item) == 0x000054, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_AddInfoMessByLabelTask_RetPecID) == 0x00005C, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_AddInfoMessByLabelTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_GetAllIsInFieldList_ReturnValue_1) == 0x000060, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_GetAllIsInFieldList_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue) == 0x000070, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000078, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue_1) == 0x000079, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_BooleanAND_ReturnValue_1) == 0x00007A, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_Get_ReturnValue) == 0x000080, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000088, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, K2Node_SwitchInteger_CmpSuccess) == 0x000090, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_IsFinished_retValue) == 0x000091, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_IsFinished_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, Temp_int_Variable) == 0x000094, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_GetAidCounter_ReturnValue) == 0x000098, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_GetAidCounter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_GetAidCounter_ReturnValue_1) == 0x0000A0, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_GetAidCounter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_GetAidCounter_ReturnValue_2) == 0x0000A8, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_GetAidCounter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000AC, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_GetAidCounter_ReturnValue_3) == 0x0000B0, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_GetAidCounter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000B4, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_GetAidCounter_ReturnValue_4) == 0x0000B8, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_GetAidCounter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_Less_IntInt_ReturnValue_4) == 0x0000BC, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue_2) == 0x0000BD, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue_3) == 0x0000BE, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x0000C0, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_Array_Length_ReturnValue_1) == 0x0000D0, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_Array_Get_Item_1) == 0x0000D4, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_Less_IntInt_ReturnValue_5) == 0x0000D8, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_GetBadStatus_ReturnValue) == 0x0000DC, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_GetBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000E0, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepUpliftingTurnFunc, CallFunc_MakeBadCureTask_retValue) == 0x0000E8, "Member 'BattleMain_C_SeqStepUpliftingTurnFunc::CallFunc_MakeBadCureTask_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepMercyTalkFunc
// 0x0060 (0x0060 - 0x0000)
struct BattleMain_C_SetStepMercyTalkFunc final
{
public:
	TArray<int32>                                 L_list;                                            // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TalkCtrl_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_SetStepMercyTalkFunc) == 0x000010, "Wrong alignment on BattleMain_C_SetStepMercyTalkFunc");
static_assert(sizeof(BattleMain_C_SetStepMercyTalkFunc) == 0x000060, "Wrong size on BattleMain_C_SetStepMercyTalkFunc");
static_assert(offsetof(BattleMain_C_SetStepMercyTalkFunc, L_list) == 0x000000, "Member 'BattleMain_C_SetStepMercyTalkFunc::L_list' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepMercyTalkFunc, Lo_WaitTaskList) == 0x000010, "Member 'BattleMain_C_SetStepMercyTalkFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepMercyTalkFunc, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BattleMain_C_SetStepMercyTalkFunc::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepMercyTalkFunc, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'BattleMain_C_SetStepMercyTalkFunc::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepMercyTalkFunc, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'BattleMain_C_SetStepMercyTalkFunc::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepMercyTalkFunc
// 0x0038 (0x0038 - 0x0000)
struct BattleMain_C_SeqStepMercyTalkFunc final
{
public:
	EBattleBGMType                                Lo_BGMType;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetCurrentBGMID_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_CheckContinuousBGMBattle_IsContinuous; // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleSoundManager_C> CallFunc_BI_ChangeBGM_self_CastInput;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_ChangeBGM_Valid;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTalkResultInfo                        CallFunc_GetTalkResult_ReturnValue;                // 0x0031(0x0002)(NoDestructor)
	bool                                          CallFunc_CheckTalkEnd_IsEnd;                       // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SeqStepMercyTalkFunc) == 0x000008, "Wrong alignment on BattleMain_C_SeqStepMercyTalkFunc");
static_assert(sizeof(BattleMain_C_SeqStepMercyTalkFunc) == 0x000038, "Wrong size on BattleMain_C_SeqStepMercyTalkFunc");
static_assert(offsetof(BattleMain_C_SeqStepMercyTalkFunc, Lo_BGMType) == 0x000000, "Member 'BattleMain_C_SeqStepMercyTalkFunc::Lo_BGMType' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepMercyTalkFunc, Lo_WaitTaskList) == 0x000008, "Member 'BattleMain_C_SeqStepMercyTalkFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepMercyTalkFunc, CallFunc_GetCurrentBGMID_ReturnValue) == 0x000018, "Member 'BattleMain_C_SeqStepMercyTalkFunc::CallFunc_GetCurrentBGMID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepMercyTalkFunc, CallFunc_BI_CheckContinuousBGMBattle_IsContinuous) == 0x00001C, "Member 'BattleMain_C_SeqStepMercyTalkFunc::CallFunc_BI_CheckContinuousBGMBattle_IsContinuous' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepMercyTalkFunc, CallFunc_BI_ChangeBGM_self_CastInput) == 0x000020, "Member 'BattleMain_C_SeqStepMercyTalkFunc::CallFunc_BI_ChangeBGM_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepMercyTalkFunc, CallFunc_BI_ChangeBGM_Valid) == 0x000030, "Member 'BattleMain_C_SeqStepMercyTalkFunc::CallFunc_BI_ChangeBGM_Valid' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepMercyTalkFunc, CallFunc_GetTalkResult_ReturnValue) == 0x000031, "Member 'BattleMain_C_SeqStepMercyTalkFunc::CallFunc_GetTalkResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepMercyTalkFunc, CallFunc_CheckTalkEnd_IsEnd) == 0x000033, "Member 'BattleMain_C_SeqStepMercyTalkFunc::CallFunc_CheckTalkEnd_IsEnd' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepMercyTalkFunc, K2Node_SwitchEnum_CmpSuccess) == 0x000034, "Member 'BattleMain_C_SeqStepMercyTalkFunc::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BattleMain.BattleMain_C.TakeOverCameraFromCurrent
// 0x00E0 (0x00E0 - 0x0000)
struct BattleMain_C_TakeOverCameraFromCurrent final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           K2Node_DynamicCast_AsCamera_Actor;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_TakeOverCameraFromCurrent) == 0x000010, "Wrong alignment on BattleMain_C_TakeOverCameraFromCurrent");
static_assert(sizeof(BattleMain_C_TakeOverCameraFromCurrent) == 0x0000E0, "Wrong size on BattleMain_C_TakeOverCameraFromCurrent");
static_assert(offsetof(BattleMain_C_TakeOverCameraFromCurrent, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BattleMain_C_TakeOverCameraFromCurrent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_TakeOverCameraFromCurrent, CallFunc_GetViewTarget_ReturnValue) == 0x000008, "Member 'BattleMain_C_TakeOverCameraFromCurrent::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_TakeOverCameraFromCurrent, K2Node_DynamicCast_AsCamera_Actor) == 0x000010, "Member 'BattleMain_C_TakeOverCameraFromCurrent::K2Node_DynamicCast_AsCamera_Actor' has a wrong offset!");
static_assert(offsetof(BattleMain_C_TakeOverCameraFromCurrent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BattleMain_C_TakeOverCameraFromCurrent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_TakeOverCameraFromCurrent, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BattleMain_C_TakeOverCameraFromCurrent::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_TakeOverCameraFromCurrent, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000050, "Member 'BattleMain_C_TakeOverCameraFromCurrent::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleMain_C_TakeOverCameraFromCurrent, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000D8, "Member 'BattleMain_C_TakeOverCameraFromCurrent::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepTurnChange
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_SetStepTurnChange final
{
public:
	TArray<int32>                                 L_list;                                            // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(BattleMain_C_SetStepTurnChange) == 0x000008, "Wrong alignment on BattleMain_C_SetStepTurnChange");
static_assert(sizeof(BattleMain_C_SetStepTurnChange) == 0x000020, "Wrong size on BattleMain_C_SetStepTurnChange");
static_assert(offsetof(BattleMain_C_SetStepTurnChange, L_list) == 0x000000, "Member 'BattleMain_C_SetStepTurnChange::L_list' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTurnChange, Lo_WaitTaskList) == 0x000010, "Member 'BattleMain_C_SetStepTurnChange::Lo_WaitTaskList' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepTurnChange
// 0x0098 (0x0098 - 0x0000)
struct BattleMain_C_SeqStepTurnChange final
{
public:
	TArray<int32>                                 L_list;                                            // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	class UProjectGCManager*                      CallFunc_Get_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetSkillDisplayPanelType_ReturnValue;     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleUIManager_C> CallFunc_BI_UpliftingGaugeSlideIn_self_CastInput;  // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_UpliftingGaugeSlideIn_Ret;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleFlag_ReturnValue;              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_SpawnSound2D_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_SpawnSound2D_ReturnValue_1;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_PartyPanelSetVisibility_retValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_PartyPanelSetVisibility_retValue_1;    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	E_MoonAgeAnimationState                       CallFunc_MoonAge_getAnimationState_outState;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetSkillDisplayPanelType_ReturnValue_1;   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleFlag_ReturnValue_1;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisappeared_IsDisappeared;              // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleFlag_ReturnValue_2;            // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPressIcon                             CallFunc_CalcDrawPressIconNum_ReturnValue;         // 0x0084(0x000C)(NoDestructor)
	bool                                          CallFunc_IsPlaying_Playing;                        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SeqStepTurnChange) == 0x000008, "Wrong alignment on BattleMain_C_SeqStepTurnChange");
static_assert(sizeof(BattleMain_C_SeqStepTurnChange) == 0x000098, "Wrong size on BattleMain_C_SeqStepTurnChange");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, L_list) == 0x000000, "Member 'BattleMain_C_SeqStepTurnChange::L_list' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, Lo_WaitTaskList) == 0x000010, "Member 'BattleMain_C_SeqStepTurnChange::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_Get_ReturnValue) == 0x000020, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_GetSkillDisplayPanelType_ReturnValue) == 0x000028, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_GetSkillDisplayPanelType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_BI_UpliftingGaugeSlideIn_self_CastInput) == 0x000030, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_BI_UpliftingGaugeSlideIn_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_BI_UpliftingGaugeSlideIn_Ret) == 0x000040, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_BI_UpliftingGaugeSlideIn_Ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_CheckBattleFlag_ReturnValue) == 0x000041, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_CheckBattleFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_SpawnSound2D_ReturnValue) == 0x000048, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_SpawnSound2D_ReturnValue_1) == 0x000050, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_SpawnSound2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_BI_PartyPanelSetVisibility_retValue) == 0x000058, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_BI_PartyPanelSetVisibility_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_BI_PartyPanelSetVisibility_retValue_1) == 0x000059, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_BI_PartyPanelSetVisibility_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, K2Node_MakeArray_Array) == 0x000060, "Member 'BattleMain_C_SeqStepTurnChange::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_MoonAge_getAnimationState_outState) == 0x000070, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_MoonAge_getAnimationState_outState' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000071, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_GetSkillDisplayPanelType_ReturnValue_1) == 0x000072, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_GetSkillDisplayPanelType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000073, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_CheckBattleFlag_ReturnValue_1) == 0x000074, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_CheckBattleFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, K2Node_SwitchInteger_CmpSuccess) == 0x00007C, "Member 'BattleMain_C_SeqStepTurnChange::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_IsDisappeared_IsDisappeared) == 0x00007D, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_IsDisappeared_IsDisappeared' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_CheckBattleFlag_ReturnValue_2) == 0x00007E, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_CheckBattleFlag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, Temp_int_Variable) == 0x000080, "Member 'BattleMain_C_SeqStepTurnChange::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_CalcDrawPressIconNum_ReturnValue) == 0x000084, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_CalcDrawPressIconNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTurnChange, CallFunc_IsPlaying_Playing) == 0x000090, "Member 'BattleMain_C_SeqStepTurnChange::CallFunc_IsPlaying_Playing' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepEnemyTurnEndReturnFunc
// 0x0150 (0x0150 - 0x0000)
struct BattleMain_C_SetStepEnemyTurnEndReturnFunc final
{
public:
	TArray<struct FSkillActionTargetInfo>         Lo_ReflexList;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSkillActionExtend>             Lo_ExtendAction;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_SkillMasterExecList;                            // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSkillActionTargetInfo>         Lo_SkillActionTarget;                              // 0x0030(0x0010)(Edit, BlueprintVisible)
	struct FSkillActionDesc                       Lo_SkillActionDesc;                                // 0x0040(0x0090)(Edit, BlueprintVisible)
	int32                                         Lo_PlayerIndex;                                    // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x00D8(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddBeHomeSideAllTask_RetPecID;            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilitySideAllTask_RetPecID;    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1;  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_BI_GetSideIsBossFlagList_ReturnValue;     // 0x0100(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_AddCamRailSkillTask_self_CastInput;    // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddCamRailSkillTask_retValue;          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitActionTask_retPecID;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_AddInfoMessTask_self_CastInput;        // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddInfoMessTask_retValue;              // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_SetStepEnemyTurnEndReturnFunc) == 0x000008, "Wrong alignment on BattleMain_C_SetStepEnemyTurnEndReturnFunc");
static_assert(sizeof(BattleMain_C_SetStepEnemyTurnEndReturnFunc) == 0x000150, "Wrong size on BattleMain_C_SetStepEnemyTurnEndReturnFunc");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, Lo_ReflexList) == 0x000000, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::Lo_ReflexList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, Lo_ExtendAction) == 0x000010, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::Lo_ExtendAction' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, Lo_SkillMasterExecList) == 0x000020, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::Lo_SkillMasterExecList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, Lo_SkillActionTarget) == 0x000030, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::Lo_SkillActionTarget' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, Lo_SkillActionDesc) == 0x000040, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::Lo_SkillActionDesc' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, Lo_PlayerIndex) == 0x0000D0, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::Lo_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, Lo_WaitTaskList) == 0x0000D8, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, Temp_int_Array_Index_Variable) == 0x0000E8, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, CallFunc_AddBeHomeSideAllTask_RetPecID) == 0x0000EC, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::CallFunc_AddBeHomeSideAllTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, CallFunc_AddUnitVisibilitySideAllTask_RetPecID) == 0x0000F0, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::CallFunc_AddUnitVisibilitySideAllTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1) == 0x0000F4, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, Temp_int_Loop_Counter_Variable) == 0x0000F8, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, CallFunc_BI_GetSideIsBossFlagList_ReturnValue) == 0x000100, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::CallFunc_BI_GetSideIsBossFlagList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, CallFunc_Array_Get_Item) == 0x000110, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, CallFunc_BI_AddCamRailSkillTask_self_CastInput) == 0x000118, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::CallFunc_BI_AddCamRailSkillTask_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, CallFunc_BI_AddCamRailSkillTask_retValue) == 0x000128, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::CallFunc_BI_AddCamRailSkillTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, CallFunc_AddUnitActionTask_retPecID) == 0x00012C, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::CallFunc_AddUnitActionTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, CallFunc_Array_Length_ReturnValue) == 0x000130, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, CallFunc_Less_IntInt_ReturnValue) == 0x000134, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, CallFunc_BI_AddInfoMessTask_self_CastInput) == 0x000138, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::CallFunc_BI_AddInfoMessTask_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnEndReturnFunc, CallFunc_BI_AddInfoMessTask_retValue) == 0x000148, "Member 'BattleMain_C_SetStepEnemyTurnEndReturnFunc::CallFunc_BI_AddInfoMessTask_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepEnemyTurnEndReturnFunc
// 0x0038 (0x0038 - 0x0000)
struct BattleMain_C_SeqStepEnemyTurnEndReturnFunc final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideIsBossFlagList_ReturnValue;     // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetParentNameTaskCnt_retCnt;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SeqStepEnemyTurnEndReturnFunc) == 0x000008, "Wrong alignment on BattleMain_C_SeqStepEnemyTurnEndReturnFunc");
static_assert(sizeof(BattleMain_C_SeqStepEnemyTurnEndReturnFunc) == 0x000038, "Wrong size on BattleMain_C_SeqStepEnemyTurnEndReturnFunc");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnEndReturnFunc, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattleMain_C_SeqStepEnemyTurnEndReturnFunc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnEndReturnFunc, CallFunc_BI_GetSideIsBossFlagList_ReturnValue) == 0x000008, "Member 'BattleMain_C_SeqStepEnemyTurnEndReturnFunc::CallFunc_BI_GetSideIsBossFlagList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnEndReturnFunc, CallFunc_Array_Get_Item) == 0x000018, "Member 'BattleMain_C_SeqStepEnemyTurnEndReturnFunc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnEndReturnFunc, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BattleMain_C_SeqStepEnemyTurnEndReturnFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnEndReturnFunc, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BattleMain_C_SeqStepEnemyTurnEndReturnFunc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnEndReturnFunc, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BattleMain_C_SeqStepEnemyTurnEndReturnFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnEndReturnFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BattleMain_C_SeqStepEnemyTurnEndReturnFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnEndReturnFunc, CallFunc_GetParentNameTaskCnt_retCnt) == 0x00002C, "Member 'BattleMain_C_SeqStepEnemyTurnEndReturnFunc::CallFunc_GetParentNameTaskCnt_retCnt' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnEndReturnFunc, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'BattleMain_C_SeqStepEnemyTurnEndReturnFunc::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuItemDropLoop100
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuItemDropLoop100 final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugItemDropLoop100_ReturnValue;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuItemDropLoop100) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuItemDropLoop100");
static_assert(sizeof(BattleMain_C_CheckDebugMenuItemDropLoop100) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuItemDropLoop100");
static_assert(offsetof(BattleMain_C_CheckDebugMenuItemDropLoop100, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuItemDropLoop100::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuItemDropLoop100, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuItemDropLoop100::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuItemDropLoop100, CallFunc_BattleDebugItemDropLoop100_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuItemDropLoop100::CallFunc_BattleDebugItemDropLoop100_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuParameter
// 0x0178 (0x0178 - 0x0000)
struct BattleMain_C_CheckDebugMenuParameter final
{
public:
	class FString                                 Pass;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Tmp;                                            // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Lo_ParameterName;                                  // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_Value;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Index;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Lo_Menu;                                           // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue; // 0x00A8(0x00D0)()
};
static_assert(alignof(BattleMain_C_CheckDebugMenuParameter) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuParameter");
static_assert(sizeof(BattleMain_C_CheckDebugMenuParameter) == 0x000178, "Wrong size on BattleMain_C_CheckDebugMenuParameter");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, Pass) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuParameter::Pass' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, PartyIndex) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuParameter::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, Lo_Tmp) == 0x000014, "Member 'BattleMain_C_CheckDebugMenuParameter::Lo_Tmp' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, Lo_ParameterName) == 0x000018, "Member 'BattleMain_C_CheckDebugMenuParameter::Lo_ParameterName' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, Lo_Value) == 0x000028, "Member 'BattleMain_C_CheckDebugMenuParameter::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, Lo_Index) == 0x00002C, "Member 'BattleMain_C_CheckDebugMenuParameter::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, Lo_Menu) == 0x000030, "Member 'BattleMain_C_CheckDebugMenuParameter::Lo_Menu' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, K2Node_MakeArray_Array) == 0x000040, "Member 'BattleMain_C_CheckDebugMenuParameter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BattleMain_C_CheckDebugMenuParameter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, CallFunc_Conv_IntToByte_ReturnValue) == 0x000060, "Member 'BattleMain_C_CheckDebugMenuParameter::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, CallFunc_GetValidValue_ReturnValue) == 0x000061, "Member 'BattleMain_C_CheckDebugMenuParameter::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BattleMain_C_CheckDebugMenuParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'BattleMain_C_CheckDebugMenuParameter::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, CallFunc_Array_Get_Item) == 0x000078, "Member 'BattleMain_C_CheckDebugMenuParameter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, Temp_int_Variable) == 0x000088, "Member 'BattleMain_C_CheckDebugMenuParameter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000090, "Member 'BattleMain_C_CheckDebugMenuParameter::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, CallFunc_Conv_StringToName_ReturnValue) == 0x0000A0, "Member 'BattleMain_C_CheckDebugMenuParameter::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuParameter, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue) == 0x0000A8, "Member 'BattleMain_C_CheckDebugMenuParameter::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuLevel
// 0x0118 (0x0118 - 0x0000)
struct BattleMain_C_CheckDebugMenuLevel final
{
public:
	class FString                                 Pass;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Lo_Menu;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Lo_Index;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue; // 0x0048(0x00D0)()
};
static_assert(alignof(BattleMain_C_CheckDebugMenuLevel) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuLevel");
static_assert(sizeof(BattleMain_C_CheckDebugMenuLevel) == 0x000118, "Wrong size on BattleMain_C_CheckDebugMenuLevel");
static_assert(offsetof(BattleMain_C_CheckDebugMenuLevel, Pass) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuLevel::Pass' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuLevel, PartyIndex) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuLevel::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuLevel, Lo_Menu) == 0x000018, "Member 'BattleMain_C_CheckDebugMenuLevel::Lo_Menu' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuLevel, Lo_Index) == 0x000028, "Member 'BattleMain_C_CheckDebugMenuLevel::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuLevel, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BattleMain_C_CheckDebugMenuLevel::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuLevel, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'BattleMain_C_CheckDebugMenuLevel::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuLevel, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue) == 0x000048, "Member 'BattleMain_C_CheckDebugMenuLevel::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuResultSkip
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuResultSkip final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugResultSkip_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuResultSkip) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuResultSkip");
static_assert(sizeof(BattleMain_C_CheckDebugMenuResultSkip) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuResultSkip");
static_assert(offsetof(BattleMain_C_CheckDebugMenuResultSkip, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuResultSkip::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuResultSkip, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuResultSkip::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuResultSkip, CallFunc_BattleDebugResultSkip_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuResultSkip::CallFunc_BattleDebugResultSkip_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuBstHitLoop100
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuBstHitLoop100 final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugBstHitLoop100_ReturnValue;     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuBstHitLoop100) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuBstHitLoop100");
static_assert(sizeof(BattleMain_C_CheckDebugMenuBstHitLoop100) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuBstHitLoop100");
static_assert(offsetof(BattleMain_C_CheckDebugMenuBstHitLoop100, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuBstHitLoop100::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuBstHitLoop100, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuBstHitLoop100::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuBstHitLoop100, CallFunc_BattleDebugBstHitLoop100_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuBstHitLoop100::CallFunc_BattleDebugBstHitLoop100_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.AddResultDataFujimi
// 0x0370 (0x0370 - 0x0000)
struct BattleMain_C_AddResultDataFujimi final
{
public:
	int32                                         Lo_PartyIndex;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCharID_retValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0xC];                                       // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_GetBtlPartyData_ReturnValue;              // 0x0020(0x0320)()
	bool                                          CallFunc_CheckFlag2_ReturnValue;                   // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideIsStat2List_ReturnValue;           // 0x0348(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_AddResultDataFujimi) == 0x000010, "Wrong alignment on BattleMain_C_AddResultDataFujimi");
static_assert(sizeof(BattleMain_C_AddResultDataFujimi) == 0x000370, "Wrong size on BattleMain_C_AddResultDataFujimi");
static_assert(offsetof(BattleMain_C_AddResultDataFujimi, Lo_PartyIndex) == 0x000000, "Member 'BattleMain_C_AddResultDataFujimi::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddResultDataFujimi, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BattleMain_C_AddResultDataFujimi::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddResultDataFujimi, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattleMain_C_AddResultDataFujimi::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddResultDataFujimi, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattleMain_C_AddResultDataFujimi::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddResultDataFujimi, CallFunc_GetCharID_retValue) == 0x000010, "Member 'BattleMain_C_AddResultDataFujimi::CallFunc_GetCharID_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddResultDataFujimi, CallFunc_GetBtlPartyData_ReturnValue) == 0x000020, "Member 'BattleMain_C_AddResultDataFujimi::CallFunc_GetBtlPartyData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddResultDataFujimi, CallFunc_CheckFlag2_ReturnValue) == 0x000340, "Member 'BattleMain_C_AddResultDataFujimi::CallFunc_CheckFlag2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddResultDataFujimi, CallFunc_GetSideIsStat2List_ReturnValue) == 0x000348, "Member 'BattleMain_C_AddResultDataFujimi::CallFunc_GetSideIsStat2List_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddResultDataFujimi, CallFunc_Array_Length_ReturnValue) == 0x000358, "Member 'BattleMain_C_AddResultDataFujimi::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddResultDataFujimi, CallFunc_Array_Get_Item) == 0x00035C, "Member 'BattleMain_C_AddResultDataFujimi::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_AddResultDataFujimi, CallFunc_Less_IntInt_ReturnValue) == 0x000360, "Member 'BattleMain_C_AddResultDataFujimi::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepTalkEndFriendFunc
// 0x01A0 (0x01A0 - 0x0000)
struct BattleMain_C_SetStepTalkEndFriendFunc final
{
public:
	TArray<struct FSkillActionTargetInfo>         Lo_ReflexList;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSkillActionExtend>             Lo_ExtendAction;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_SkillMasterExecList;                            // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSkillActionTargetInfo>         Lo_SkillActionTarget;                              // 0x0030(0x0010)(Edit, BlueprintVisible)
	struct FSkillActionDesc                       Lo_SkillActionDesc;                                // 0x0040(0x0090)(Edit, BlueprintVisible)
	int32                                         Lo_PlayerIndex;                                    // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x00D8(0x0010)(Edit, BlueprintVisible)
	E_BTL_END                                     CallFunc_CheckBattleEnd_retValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlApllyResultData                    K2Node_MakeStruct_BtlApllyResultData;              // 0x0128(0x0070)()
	class AEscapeSuccess_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_SetStepTalkEndFriendFunc) == 0x000010, "Wrong alignment on BattleMain_C_SetStepTalkEndFriendFunc");
static_assert(sizeof(BattleMain_C_SetStepTalkEndFriendFunc) == 0x0001A0, "Wrong size on BattleMain_C_SetStepTalkEndFriendFunc");
static_assert(offsetof(BattleMain_C_SetStepTalkEndFriendFunc, Lo_ReflexList) == 0x000000, "Member 'BattleMain_C_SetStepTalkEndFriendFunc::Lo_ReflexList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTalkEndFriendFunc, Lo_ExtendAction) == 0x000010, "Member 'BattleMain_C_SetStepTalkEndFriendFunc::Lo_ExtendAction' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTalkEndFriendFunc, Lo_SkillMasterExecList) == 0x000020, "Member 'BattleMain_C_SetStepTalkEndFriendFunc::Lo_SkillMasterExecList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTalkEndFriendFunc, Lo_SkillActionTarget) == 0x000030, "Member 'BattleMain_C_SetStepTalkEndFriendFunc::Lo_SkillActionTarget' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTalkEndFriendFunc, Lo_SkillActionDesc) == 0x000040, "Member 'BattleMain_C_SetStepTalkEndFriendFunc::Lo_SkillActionDesc' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTalkEndFriendFunc, Lo_PlayerIndex) == 0x0000D0, "Member 'BattleMain_C_SetStepTalkEndFriendFunc::Lo_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTalkEndFriendFunc, Lo_WaitTaskList) == 0x0000D8, "Member 'BattleMain_C_SetStepTalkEndFriendFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTalkEndFriendFunc, CallFunc_CheckBattleEnd_retValue) == 0x0000E8, "Member 'BattleMain_C_SetStepTalkEndFriendFunc::CallFunc_CheckBattleEnd_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTalkEndFriendFunc, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'BattleMain_C_SetStepTalkEndFriendFunc::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTalkEndFriendFunc, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000120, "Member 'BattleMain_C_SetStepTalkEndFriendFunc::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTalkEndFriendFunc, K2Node_MakeStruct_BtlApllyResultData) == 0x000128, "Member 'BattleMain_C_SetStepTalkEndFriendFunc::K2Node_MakeStruct_BtlApllyResultData' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepTalkEndFriendFunc, CallFunc_FinishSpawningActor_ReturnValue) == 0x000198, "Member 'BattleMain_C_SetStepTalkEndFriendFunc::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepTalkEndFriendFunc
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_SeqStepTalkEndFriendFunc final
{
public:
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFinished_retValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SeqStepTalkEndFriendFunc) == 0x000004, "Wrong alignment on BattleMain_C_SeqStepTalkEndFriendFunc");
static_assert(sizeof(BattleMain_C_SeqStepTalkEndFriendFunc) == 0x000008, "Wrong size on BattleMain_C_SeqStepTalkEndFriendFunc");
static_assert(offsetof(BattleMain_C_SeqStepTalkEndFriendFunc, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'BattleMain_C_SeqStepTalkEndFriendFunc::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepTalkEndFriendFunc, CallFunc_IsFinished_retValue) == 0x000004, "Member 'BattleMain_C_SeqStepTalkEndFriendFunc::CallFunc_IsFinished_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuAllUseSkill
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuAllUseSkill final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugAllUseSkill_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuAllUseSkill) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuAllUseSkill");
static_assert(sizeof(BattleMain_C_CheckDebugMenuAllUseSkill) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuAllUseSkill");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAllUseSkill, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuAllUseSkill::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAllUseSkill, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuAllUseSkill::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAllUseSkill, CallFunc_BattleDebugAllUseSkill_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuAllUseSkill::CallFunc_BattleDebugAllUseSkill_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SetStepEnemyTurnStartReturnFunc
// 0x0150 (0x0150 - 0x0000)
struct BattleMain_C_SetStepEnemyTurnStartReturnFunc final
{
public:
	TArray<struct FSkillActionTargetInfo>         Lo_ReflexList;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSkillActionExtend>             Lo_ExtendAction;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_SkillMasterExecList;                            // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSkillActionTargetInfo>         Lo_SkillActionTarget;                              // 0x0030(0x0010)(Edit, BlueprintVisible)
	struct FSkillActionDesc                       Lo_SkillActionDesc;                                // 0x0040(0x0090)(Edit, BlueprintVisible)
	int32                                         Lo_PlayerIndex;                                    // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x00D8(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddBeHomeSideAllTask_RetPecID;            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilitySideAllTask_RetPecID;    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1;  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_BI_GetSideIsBossFlagList_ReturnValue;     // 0x0100(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_AddCamRailSkillTask_self_CastInput;    // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddCamRailSkillTask_retValue;          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddUnitActionTask_retPecID;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_AddInfoMessTask_self_CastInput;        // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddInfoMessTask_retValue;              // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_SetStepEnemyTurnStartReturnFunc) == 0x000008, "Wrong alignment on BattleMain_C_SetStepEnemyTurnStartReturnFunc");
static_assert(sizeof(BattleMain_C_SetStepEnemyTurnStartReturnFunc) == 0x000150, "Wrong size on BattleMain_C_SetStepEnemyTurnStartReturnFunc");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, Lo_ReflexList) == 0x000000, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::Lo_ReflexList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, Lo_ExtendAction) == 0x000010, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::Lo_ExtendAction' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, Lo_SkillMasterExecList) == 0x000020, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::Lo_SkillMasterExecList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, Lo_SkillActionTarget) == 0x000030, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::Lo_SkillActionTarget' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, Lo_SkillActionDesc) == 0x000040, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::Lo_SkillActionDesc' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, Lo_PlayerIndex) == 0x0000D0, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::Lo_PlayerIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, Lo_WaitTaskList) == 0x0000D8, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, Temp_int_Array_Index_Variable) == 0x0000E8, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, CallFunc_AddBeHomeSideAllTask_RetPecID) == 0x0000EC, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::CallFunc_AddBeHomeSideAllTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, CallFunc_AddUnitVisibilitySideAllTask_RetPecID) == 0x0000F0, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::CallFunc_AddUnitVisibilitySideAllTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1) == 0x0000F4, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::CallFunc_AddUnitVisibilitySideAllTask_RetPecID_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, Temp_int_Loop_Counter_Variable) == 0x0000F8, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, CallFunc_BI_GetSideIsBossFlagList_ReturnValue) == 0x000100, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::CallFunc_BI_GetSideIsBossFlagList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, CallFunc_Array_Get_Item) == 0x000110, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, CallFunc_BI_AddCamRailSkillTask_self_CastInput) == 0x000118, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::CallFunc_BI_AddCamRailSkillTask_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, CallFunc_BI_AddCamRailSkillTask_retValue) == 0x000128, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::CallFunc_BI_AddCamRailSkillTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, CallFunc_AddUnitActionTask_retPecID) == 0x00012C, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::CallFunc_AddUnitActionTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, CallFunc_Array_Length_ReturnValue) == 0x000130, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, CallFunc_Less_IntInt_ReturnValue) == 0x000134, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, CallFunc_BI_AddInfoMessTask_self_CastInput) == 0x000138, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::CallFunc_BI_AddInfoMessTask_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SetStepEnemyTurnStartReturnFunc, CallFunc_BI_AddInfoMessTask_retValue) == 0x000148, "Member 'BattleMain_C_SetStepEnemyTurnStartReturnFunc::CallFunc_BI_AddInfoMessTask_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SeqStepEnemyTurnStartReturnFunc
// 0x0038 (0x0038 - 0x0000)
struct BattleMain_C_SeqStepEnemyTurnStartReturnFunc final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideIsBossFlagList_ReturnValue;     // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetParentNameTaskCnt_retCnt;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SeqStepEnemyTurnStartReturnFunc) == 0x000008, "Wrong alignment on BattleMain_C_SeqStepEnemyTurnStartReturnFunc");
static_assert(sizeof(BattleMain_C_SeqStepEnemyTurnStartReturnFunc) == 0x000038, "Wrong size on BattleMain_C_SeqStepEnemyTurnStartReturnFunc");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnStartReturnFunc, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattleMain_C_SeqStepEnemyTurnStartReturnFunc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnStartReturnFunc, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattleMain_C_SeqStepEnemyTurnStartReturnFunc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnStartReturnFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattleMain_C_SeqStepEnemyTurnStartReturnFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnStartReturnFunc, CallFunc_BI_GetSideIsBossFlagList_ReturnValue) == 0x000010, "Member 'BattleMain_C_SeqStepEnemyTurnStartReturnFunc::CallFunc_BI_GetSideIsBossFlagList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnStartReturnFunc, CallFunc_Array_Get_Item) == 0x000020, "Member 'BattleMain_C_SeqStepEnemyTurnStartReturnFunc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnStartReturnFunc, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BattleMain_C_SeqStepEnemyTurnStartReturnFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnStartReturnFunc, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BattleMain_C_SeqStepEnemyTurnStartReturnFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnStartReturnFunc, CallFunc_GetParentNameTaskCnt_retCnt) == 0x00002C, "Member 'BattleMain_C_SeqStepEnemyTurnStartReturnFunc::CallFunc_GetParentNameTaskCnt_retCnt' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SeqStepEnemyTurnStartReturnFunc, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'BattleMain_C_SeqStepEnemyTurnStartReturnFunc::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuNoDamageOnlyHero
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuNoDamageOnlyHero final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugNoDamageOnlyHero_ReturnValue;  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuNoDamageOnlyHero) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuNoDamageOnlyHero");
static_assert(sizeof(BattleMain_C_CheckDebugMenuNoDamageOnlyHero) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuNoDamageOnlyHero");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNoDamageOnlyHero, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuNoDamageOnlyHero::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNoDamageOnlyHero, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuNoDamageOnlyHero::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNoDamageOnlyHero, CallFunc_BattleDebugNoDamageOnlyHero_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuNoDamageOnlyHero::CallFunc_BattleDebugNoDamageOnlyHero_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuNoUpliftingGauge
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuNoUpliftingGauge final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugNoUpliftingGauge_ReturnValue;  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuNoUpliftingGauge) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuNoUpliftingGauge");
static_assert(sizeof(BattleMain_C_CheckDebugMenuNoUpliftingGauge) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuNoUpliftingGauge");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNoUpliftingGauge, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuNoUpliftingGauge::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNoUpliftingGauge, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuNoUpliftingGauge::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNoUpliftingGauge, CallFunc_BattleDebugNoUpliftingGauge_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuNoUpliftingGauge::CallFunc_BattleDebugNoUpliftingGauge_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CalcStatusListEnemyOrder
// 0x01B0 (0x01B0 - 0x0000)
struct BattleMain_C_CalcStatusListEnemyOrder final
{
public:
	TArray<int32>                                 PartyIndex;                                        // 0x0000(0x0010)(Parm, OutParm)
	TMap<int32, float>                            Lo_DotMap;                                         // 0x0010(0x0050)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_EnemyList;                                      // 0x0060(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0088(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_Map_Values_Values;                        // 0x0098(0x0010)(ReferenceParm)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetOriginTransform_retValue;              // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideIsTargetList_ReturnValue;          // 0x0118(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0xC];                                      // 0x0134(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetHomeTransform_ReturnValue;             // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CalcStatusListEnemyOrder) == 0x000010, "Wrong alignment on BattleMain_C_CalcStatusListEnemyOrder");
static_assert(sizeof(BattleMain_C_CalcStatusListEnemyOrder) == 0x0001B0, "Wrong size on BattleMain_C_CalcStatusListEnemyOrder");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, PartyIndex) == 0x000000, "Member 'BattleMain_C_CalcStatusListEnemyOrder::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, Lo_DotMap) == 0x000010, "Member 'BattleMain_C_CalcStatusListEnemyOrder::Lo_DotMap' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, Lo_EnemyList) == 0x000060, "Member 'BattleMain_C_CalcStatusListEnemyOrder::Lo_EnemyList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BattleMain_C_CalcStatusListEnemyOrder::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BattleMain_C_CalcStatusListEnemyOrder::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_Array_Get_Item) == 0x000084, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_Map_Keys_Keys) == 0x000088, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_Map_Values_Values) == 0x000098, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x0000A8, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_MinOfFloatArray_MinValue) == 0x0000AC, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_Map_Length_ReturnValue) == 0x0000B0, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_Map_Remove_ReturnValue) == 0x0000B4, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_Conv_IntToBool_ReturnValue) == 0x0000B5, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_GetOriginTransform_retValue) == 0x0000C0, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_GetOriginTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_BreakTransform_Location) == 0x0000F0, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_BreakTransform_Rotation) == 0x0000FC, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_BreakTransform_Scale) == 0x000108, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_GetSideIsTargetList_ReturnValue) == 0x000118, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_GetSideIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_GetRightVector_ReturnValue) == 0x000128, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_GetHomeTransform_ReturnValue) == 0x000140, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_GetHomeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_BreakTransform_Location_1) == 0x000170, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_BreakTransform_Rotation_1) == 0x00017C, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_BreakTransform_Scale_1) == 0x000188, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000194, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_Normal_ReturnValue) == 0x0001A0, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CalcStatusListEnemyOrder, CallFunc_Dot_VectorVector_ReturnValue) == 0x0001AC, "Member 'BattleMain_C_CalcStatusListEnemyOrder::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuCounter100
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuCounter100 final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugCounter100_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuCounter100) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuCounter100");
static_assert(sizeof(BattleMain_C_CheckDebugMenuCounter100) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuCounter100");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCounter100, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuCounter100::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCounter100, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuCounter100::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCounter100, CallFunc_BattleDebugCounter100_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuCounter100::CallFunc_BattleDebugCounter100_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BattleMainUpdate
// 0x0100 (0x0100 - 0x0000)
struct BattleMain_C_BattleMainUpdate final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_Delta;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_LoopCount;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_ActionEnd;                                      // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_EffectEnd;                                      // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCompCommon_C> CallFunc_UpdateComponent_self_CastInput;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateComponent_ContinueUpdate;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCompCommon_C> CallFunc_UpdateComponent_self_CastInput_1;         // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateComponent_ContinueUpdate_1;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCompCommon_C> CallFunc_UpdateComponent_self_CastInput_2;         // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateComponent_ContinueUpdate_2;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCompCommon_C> CallFunc_UpdateComponent_self_CastInput_3;         // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateComponent_ContinueUpdate_3;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCompCommon_C> CallFunc_UpdateComponent_self_CastInput_4;         // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateComponent_ContinueUpdate_4;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCompCommon_C> CallFunc_UpdateComponent_self_CastInput_5;         // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateComponent_ContinueUpdate_5;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCompCommon_C> CallFunc_UpdateComponent_self_CastInput_6;         // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateComponent_ContinueUpdate_6;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCompCommon_C> CallFunc_UpdateComponent_self_CastInput_7;         // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateComponent_ContinueUpdate_7;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCompCommon_C> CallFunc_UpdateComponent_self_CastInput_8;         // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateComponent_ContinueUpdate_8;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCompCommon_C> CallFunc_UpdateComponent_self_CastInput_9;         // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateComponent_ContinueUpdate_9;         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BattleMainUpdate) == 0x000008, "Wrong alignment on BattleMain_C_BattleMainUpdate");
static_assert(sizeof(BattleMain_C_BattleMainUpdate) == 0x000100, "Wrong size on BattleMain_C_BattleMainUpdate");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, DeltaTime) == 0x000000, "Member 'BattleMain_C_BattleMainUpdate::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, Lo_Delta) == 0x000004, "Member 'BattleMain_C_BattleMainUpdate::Lo_Delta' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, Lo_LoopCount) == 0x000008, "Member 'BattleMain_C_BattleMainUpdate::Lo_LoopCount' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, Lo_ActionEnd) == 0x00000C, "Member 'BattleMain_C_BattleMainUpdate::Lo_ActionEnd' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, Lo_EffectEnd) == 0x00000D, "Member 'BattleMain_C_BattleMainUpdate::Lo_EffectEnd' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_self_CastInput) == 0x000010, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_ContinueUpdate) == 0x000020, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_ContinueUpdate' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_self_CastInput_1) == 0x000028, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_ContinueUpdate_1) == 0x000038, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_ContinueUpdate_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_self_CastInput_2) == 0x000040, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_ContinueUpdate_2) == 0x000050, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_ContinueUpdate_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_self_CastInput_3) == 0x000058, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_ContinueUpdate_3) == 0x000068, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_ContinueUpdate_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_BooleanOR_ReturnValue) == 0x000069, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_self_CastInput_4) == 0x000070, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_ContinueUpdate_4) == 0x000080, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_ContinueUpdate_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_self_CastInput_5) == 0x000088, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_self_CastInput_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_ContinueUpdate_5) == 0x000098, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_ContinueUpdate_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_self_CastInput_6) == 0x0000A0, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_self_CastInput_6' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_ContinueUpdate_6) == 0x0000B0, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_ContinueUpdate_6' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_BooleanOR_ReturnValue_1) == 0x0000B1, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_self_CastInput_7) == 0x0000B8, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_self_CastInput_7' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_ContinueUpdate_7) == 0x0000C8, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_ContinueUpdate_7' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_self_CastInput_8) == 0x0000D0, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_self_CastInput_8' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_ContinueUpdate_8) == 0x0000E0, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_ContinueUpdate_8' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_self_CastInput_9) == 0x0000E8, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_self_CastInput_9' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BattleMainUpdate, CallFunc_UpdateComponent_ContinueUpdate_9) == 0x0000F8, "Member 'BattleMain_C_BattleMainUpdate::CallFunc_UpdateComponent_ContinueUpdate_9' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuAutoLogOn
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuAutoLogOn final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugIsAutoLogOn_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuAutoLogOn) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuAutoLogOn");
static_assert(sizeof(BattleMain_C_CheckDebugMenuAutoLogOn) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuAutoLogOn");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAutoLogOn, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuAutoLogOn::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAutoLogOn, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuAutoLogOn::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAutoLogOn, CallFunc_BattleDebugIsAutoLogOn_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuAutoLogOn::CallFunc_BattleDebugIsAutoLogOn_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuForceEncount
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuForceEncount final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugForceEncount_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuForceEncount) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuForceEncount");
static_assert(sizeof(BattleMain_C_CheckDebugMenuForceEncount) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuForceEncount");
static_assert(offsetof(BattleMain_C_CheckDebugMenuForceEncount, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuForceEncount::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuForceEncount, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuForceEncount::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuForceEncount, CallFunc_BattleDebugForceEncount_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuForceEncount::CallFunc_BattleDebugForceEncount_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuNotForceEncount
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuNotForceEncount final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugNotForceEncount_ReturnValue;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuNotForceEncount) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuNotForceEncount");
static_assert(sizeof(BattleMain_C_CheckDebugMenuNotForceEncount) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuNotForceEncount");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNotForceEncount, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuNotForceEncount::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNotForceEncount, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuNotForceEncount::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNotForceEncount, CallFunc_BattleDebugNotForceEncount_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuNotForceEncount::CallFunc_BattleDebugNotForceEncount_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuRenzokuEncountID
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_CheckDebugMenuRenzokuEncountID final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BattleDebugRenzokuEncountID_ReturnValue;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuRenzokuEncountID) == 0x000004, "Wrong alignment on BattleMain_C_CheckDebugMenuRenzokuEncountID");
static_assert(sizeof(BattleMain_C_CheckDebugMenuRenzokuEncountID) == 0x000008, "Wrong size on BattleMain_C_CheckDebugMenuRenzokuEncountID");
static_assert(offsetof(BattleMain_C_CheckDebugMenuRenzokuEncountID, Param_Index) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuRenzokuEncountID::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuRenzokuEncountID, CallFunc_BattleDebugRenzokuEncountID_ReturnValue) == 0x000004, "Member 'BattleMain_C_CheckDebugMenuRenzokuEncountID::CallFunc_BattleDebugRenzokuEncountID_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SettingMagatsuhiDevilData
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_SettingMagatsuhiDevilData final
{
public:
	bool                                          CallFunc_CheckBattleFlag_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SettingMagatsuhiDevilData) == 0x000001, "Wrong alignment on BattleMain_C_SettingMagatsuhiDevilData");
static_assert(sizeof(BattleMain_C_SettingMagatsuhiDevilData) == 0x000001, "Wrong size on BattleMain_C_SettingMagatsuhiDevilData");
static_assert(offsetof(BattleMain_C_SettingMagatsuhiDevilData, CallFunc_CheckBattleFlag_ReturnValue) == 0x000000, "Member 'BattleMain_C_SettingMagatsuhiDevilData::CallFunc_CheckBattleFlag_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.MakeUniqueSkillInfoMess
// 0x0500 (0x0500 - 0x0000)
struct BattleMain_C_MakeUniqueSkillInfoMess final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	E_SKILL_INFO_MESS_TIMING                      Timing;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_UniqueSkills;                                   // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_InformedSkill;                                  // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_SkillTargets;                                   // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_SkillUsers;                                     // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_UniqueSkillID;                                  // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0060(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleFlag_ReturnValue;              // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartyData_self_CastInput;           // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_BI_GetPartyData_retValue;                 // 0x00C0(0x0320)()
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FA[0x2];                                      // 0x03FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0400(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillAutoErupt                        CallFunc_GetSkillAutoEruptData_ReturnValue;        // 0x0408(0x0058)(ConstParm)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_AUTO_SKILL_EXTRA_EFFECT>             CallFunc_SkillAutoEruptGetExtraEffects_list;       // 0x0468(0x0010)(ReferenceParm)
	bool                                          CallFunc_BI_RetrieveUniqueSkillEfficacy_forInfo_ReturnValue; // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47A[0x6];                                      // 0x047A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideActList_ToDie_ReturnValue;         // 0x0480(0x0010)(ReferenceParm)
	struct FSkillInfoMess                         CallFunc_GetSkillInfoMessData_ReturnValue;         // 0x0490(0x001C)(ConstParm, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x04AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AE[0x2];                                      // 0x04AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideActList_ToDie_ReturnValue_1;       // 0x04B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x04C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C2[0x6];                                      // 0x04C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetActListAll_self_CastInput;          // 0x04C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetActListAll_retValue;                // 0x04D8(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_AddInfoMessTask_self_CastInput;        // 0x04E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddInfoMessTask_retValue;              // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_MakeUniqueSkillInfoMess) == 0x000010, "Wrong alignment on BattleMain_C_MakeUniqueSkillInfoMess");
static_assert(sizeof(BattleMain_C_MakeUniqueSkillInfoMess) == 0x000500, "Wrong size on BattleMain_C_MakeUniqueSkillInfoMess");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, WaitTaskList) == 0x000000, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, Timing) == 0x000010, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::Timing' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, Lo_UniqueSkills) == 0x000018, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::Lo_UniqueSkills' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, Lo_InformedSkill) == 0x000028, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::Lo_InformedSkill' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, Lo_SkillTargets) == 0x000038, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::Lo_SkillTargets' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, Lo_SkillUsers) == 0x000048, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::Lo_SkillUsers' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, Lo_UniqueSkillID) == 0x000058, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::Lo_UniqueSkillID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, Lo_WaitTaskList) == 0x000060, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, Temp_int_Array_Index_Variable_2) == 0x000080, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, Temp_int_Loop_Counter_Variable_1) == 0x000084, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00008C, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_CheckBattleFlag_ReturnValue) == 0x00008D, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_CheckBattleFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_Array_Get_Item) == 0x000090, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_Array_Get_Item_1) == 0x00009C, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_BI_GetPartyData_self_CastInput) == 0x0000A8, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_BI_GetPartyData_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_BI_GetPartyData_retValue) == 0x0000C0, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_BI_GetPartyData_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_Array_AddUnique_ReturnValue) == 0x0003E0, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0003E4, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_Array_Contains_ReturnValue) == 0x0003E8, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_Array_Get_Item_2) == 0x0003EC, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_Array_Length_ReturnValue_2) == 0x0003F0, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, Temp_int_Loop_Counter_Variable_2) == 0x0003F4, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003F8, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_Less_IntInt_ReturnValue_2) == 0x0003F9, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_Add_IntInt_ReturnValue_2) == 0x0003FC, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, Temp_int_Variable) == 0x000400, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_GetSkillAutoEruptData_ReturnValue) == 0x000408, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_GetSkillAutoEruptData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_Array_AddUnique_ReturnValue_2) == 0x000460, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_SkillAutoEruptGetExtraEffects_list) == 0x000468, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_SkillAutoEruptGetExtraEffects_list' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_BI_RetrieveUniqueSkillEfficacy_forInfo_ReturnValue) == 0x000478, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_BI_RetrieveUniqueSkillEfficacy_forInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000479, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_GetSideActList_ToDie_ReturnValue) == 0x000480, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_GetSideActList_ToDie_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_GetSkillInfoMessData_ReturnValue) == 0x000490, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_GetSkillInfoMessData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0004AC, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0004AD, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_GetSideActList_ToDie_ReturnValue_1) == 0x0004B0, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_GetSideActList_ToDie_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_BooleanAND_ReturnValue) == 0x0004C0, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_BooleanAND_ReturnValue_1) == 0x0004C1, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_BI_GetActListAll_self_CastInput) == 0x0004C8, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_BI_GetActListAll_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_BI_GetActListAll_retValue) == 0x0004D8, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_BI_GetActListAll_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_BI_AddInfoMessTask_self_CastInput) == 0x0004E8, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_BI_AddInfoMessTask_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_BI_AddInfoMessTask_retValue) == 0x0004F8, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_BI_AddInfoMessTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeUniqueSkillInfoMess, CallFunc_Array_Add_ReturnValue) == 0x0004FC, "Member 'BattleMain_C_MakeUniqueSkillInfoMess::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.Unique Skill Turn
// 0x0160 (0x0160 - 0x0000)
struct BattleMain_C_Unique_Skill_Turn final
{
public:
	bool                                          IsTurnStart;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_EnemyCureHP;                                    // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_EnemyIndex;                                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_is_turn_start;                                  // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_wait_list;                                      // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_cure_bst;                                       // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_cure_mp;                                        // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_cure_hp;                                        // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_party_index;                                    // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_GetTaskFactory_retValue;               // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddCamRailSkillTask_retValue;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_UniqueSkill_GetCureTurnStart_outCureHP; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_UniqueSkill_GetCureTurnStart_outCureMP; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_UniqueSkill_GetCureTurnStart_outCureBst; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddBeHomeSideAllTask_PecID;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitVisibilitySideAll_PecID;        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitVisibilitySideAll_PecID_1;      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddBeHomeSideAllTask_PecID_1;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddNumEffectTask_retValue;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_GetTaskFactory_retValue_1;             // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue;        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_ReturnValue;                   // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue_1;      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_GetTaskFactory_retValue_2;             // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_MakeCureTask_ret;                      // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_UniqueSkill_GetCureTurnEnd_outCureHP;  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_UniqueSkill_GetCureTurnEnd_outCureMP;  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_UniqueSkill_GetCureTurnEnd_outCureBst; // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetAllIsInFieldList_ReturnValue;       // 0x0140(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_Unique_Skill_Turn) == 0x000008, "Wrong alignment on BattleMain_C_Unique_Skill_Turn");
static_assert(sizeof(BattleMain_C_Unique_Skill_Turn) == 0x000160, "Wrong size on BattleMain_C_Unique_Skill_Turn");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, IsTurnStart) == 0x000000, "Member 'BattleMain_C_Unique_Skill_Turn::IsTurnStart' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, Lo_EnemyCureHP) == 0x000008, "Member 'BattleMain_C_Unique_Skill_Turn::Lo_EnemyCureHP' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, Lo_EnemyIndex) == 0x000018, "Member 'BattleMain_C_Unique_Skill_Turn::Lo_EnemyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, Lo_is_turn_start) == 0x000028, "Member 'BattleMain_C_Unique_Skill_Turn::Lo_is_turn_start' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, Lo_wait_list) == 0x000030, "Member 'BattleMain_C_Unique_Skill_Turn::Lo_wait_list' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, Lo_cure_bst) == 0x000040, "Member 'BattleMain_C_Unique_Skill_Turn::Lo_cure_bst' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, Lo_cure_mp) == 0x000044, "Member 'BattleMain_C_Unique_Skill_Turn::Lo_cure_mp' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, Lo_cure_hp) == 0x000048, "Member 'BattleMain_C_Unique_Skill_Turn::Lo_cure_hp' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, Lo_party_index) == 0x00004C, "Member 'BattleMain_C_Unique_Skill_Turn::Lo_party_index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BattleMain_C_Unique_Skill_Turn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BattleMain_C_Unique_Skill_Turn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'BattleMain_C_Unique_Skill_Turn::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_RandomBool_ReturnValue) == 0x000060, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_SelectString_ReturnValue) == 0x000068, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Greater_IntInt_ReturnValue) == 0x00008C, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Array_Get_Item) == 0x000090, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Array_Length_ReturnValue_1) == 0x000094, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Array_Length_ReturnValue_2) == 0x000098, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00009C, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Array_Add_ReturnValue_1) == 0x0000A4, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000A8, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_GetTaskFactory_retValue) == 0x0000B0, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_GetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_AddCamRailSkillTask_retValue) == 0x0000C0, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_AddCamRailSkillTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_UniqueSkill_GetCureTurnStart_outCureHP) == 0x0000C4, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_UniqueSkill_GetCureTurnStart_outCureHP' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_UniqueSkill_GetCureTurnStart_outCureMP) == 0x0000C8, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_UniqueSkill_GetCureTurnStart_outCureMP' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_UniqueSkill_GetCureTurnStart_outCureBst) == 0x0000CC, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_UniqueSkill_GetCureTurnStart_outCureBst' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_AddBeHomeSideAllTask_PecID) == 0x0000D0, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_AddBeHomeSideAllTask_PecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_AddUnitVisibilitySideAll_PecID) == 0x0000D4, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_AddUnitVisibilitySideAll_PecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_AddUnitVisibilitySideAll_PecID_1) == 0x0000D8, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_AddUnitVisibilitySideAll_PecID_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_AddBeHomeSideAllTask_PecID_1) == 0x0000DC, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_AddBeHomeSideAllTask_PecID_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_AddNumEffectTask_retValue) == 0x0000E0, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_AddNumEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_GetTaskFactory_retValue_1) == 0x0000E8, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_GetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_AddPartyPanelCtrlTask_retValue) == 0x0000F8, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_AddPartyPanelCtrlTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_GetSide_ReturnValue) == 0x0000FC, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_GetSide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_AddPartyPanelCtrlTask_retValue_1) == 0x000100, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_AddPartyPanelCtrlTask_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000104, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, Temp_int_Loop_Counter_Variable_1) == 0x000108, "Member 'BattleMain_C_Unique_Skill_Turn::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Add_IntInt_ReturnValue_1) == 0x000110, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_GetTaskFactory_retValue_2) == 0x000118, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_GetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_MakeCureTask_ret) == 0x000128, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_MakeCureTask_ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Greater_IntInt_ReturnValue_3) == 0x00012C, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Greater_IntInt_ReturnValue_4) == 0x00012D, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Greater_IntInt_ReturnValue_5) == 0x00012E, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BooleanOR_ReturnValue) == 0x00012F, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_UniqueSkill_GetCureTurnEnd_outCureHP) == 0x000130, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_UniqueSkill_GetCureTurnEnd_outCureHP' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_UniqueSkill_GetCureTurnEnd_outCureMP) == 0x000134, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_UniqueSkill_GetCureTurnEnd_outCureMP' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_UniqueSkill_GetCureTurnEnd_outCureBst) == 0x000138, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_UniqueSkill_GetCureTurnEnd_outCureBst' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BooleanOR_ReturnValue_1) == 0x00013C, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_BI_GetAllIsInFieldList_ReturnValue) == 0x000140, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_BI_GetAllIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Array_Length_ReturnValue_3) == 0x000150, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Array_Get_Item_1) == 0x000154, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_Unique_Skill_Turn, CallFunc_Less_IntInt_ReturnValue_1) == 0x000158, "Member 'BattleMain_C_Unique_Skill_Turn::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuForceChallengeMode
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuForceChallengeMode final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugForceChallengeMode_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuForceChallengeMode) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuForceChallengeMode");
static_assert(sizeof(BattleMain_C_CheckDebugMenuForceChallengeMode) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuForceChallengeMode");
static_assert(offsetof(BattleMain_C_CheckDebugMenuForceChallengeMode, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuForceChallengeMode::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuForceChallengeMode, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuForceChallengeMode::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuForceChallengeMode, CallFunc_BattleDebugForceChallengeMode_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuForceChallengeMode::CallFunc_BattleDebugForceChallengeMode_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.SettingStealSkillData
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_SettingStealSkillData final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_SettingStealSkillData) == 0x000004, "Wrong alignment on BattleMain_C_SettingStealSkillData");
static_assert(sizeof(BattleMain_C_SettingStealSkillData) == 0x000008, "Wrong size on BattleMain_C_SettingStealSkillData");
static_assert(offsetof(BattleMain_C_SettingStealSkillData, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'BattleMain_C_SettingStealSkillData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_SettingStealSkillData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'BattleMain_C_SettingStealSkillData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuProvoke100
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuProvoke100 final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugProvoke100_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuProvoke100) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuProvoke100");
static_assert(sizeof(BattleMain_C_CheckDebugMenuProvoke100) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuProvoke100");
static_assert(offsetof(BattleMain_C_CheckDebugMenuProvoke100, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuProvoke100::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuProvoke100, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuProvoke100::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuProvoke100, CallFunc_BattleDebugProvoke100_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuProvoke100::CallFunc_BattleDebugProvoke100_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuSkillSelectIcon
// 0x0040 (0x0040 - 0x0000)
struct BattleMain_C_CheckDebugMenuSkillSelectIcon final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugSkillSelectIcon_ReturnValue;   // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuSkillSelectIcon) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuSkillSelectIcon");
static_assert(sizeof(BattleMain_C_CheckDebugMenuSkillSelectIcon) == 0x000040, "Wrong size on BattleMain_C_CheckDebugMenuSkillSelectIcon");
static_assert(offsetof(BattleMain_C_CheckDebugMenuSkillSelectIcon, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuSkillSelectIcon::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuSkillSelectIcon, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuSkillSelectIcon::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuSkillSelectIcon, CallFunc_MakeLiteralInt_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuSkillSelectIcon::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuSkillSelectIcon, Temp_int_Variable) == 0x000024, "Member 'BattleMain_C_CheckDebugMenuSkillSelectIcon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuSkillSelectIcon, Temp_int_Variable_1) == 0x000028, "Member 'BattleMain_C_CheckDebugMenuSkillSelectIcon::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuSkillSelectIcon, CallFunc_Conv_IntToByte_ReturnValue) == 0x00002C, "Member 'BattleMain_C_CheckDebugMenuSkillSelectIcon::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuSkillSelectIcon, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BattleMain_C_CheckDebugMenuSkillSelectIcon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuSkillSelectIcon, CallFunc_GetValidValue_ReturnValue) == 0x000034, "Member 'BattleMain_C_CheckDebugMenuSkillSelectIcon::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuSkillSelectIcon, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000035, "Member 'BattleMain_C_CheckDebugMenuSkillSelectIcon::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuSkillSelectIcon, CallFunc_BattleDebugSkillSelectIcon_ReturnValue) == 0x000036, "Member 'BattleMain_C_CheckDebugMenuSkillSelectIcon::CallFunc_BattleDebugSkillSelectIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuSkillSelectIcon, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000037, "Member 'BattleMain_C_CheckDebugMenuSkillSelectIcon::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuSkillSelectIcon, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000038, "Member 'BattleMain_C_CheckDebugMenuSkillSelectIcon::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuSkillSelectIcon, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BattleMain_C_CheckDebugMenuSkillSelectIcon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.UniqueSkill_ActionEnd
// 0x01A8 (0x01A8 - 0x0000)
struct BattleMain_C_UniqueSkill_ActionEnd final
{
public:
	bool                                          IsAllAction;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsDeadOnly;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReserveDeadPartyIndex;                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_EnemyCureMP;                                    // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_reserve_party_index;                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_EnemyCureHP;                                    // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_EnemyIndex;                                     // 0x0030(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_IsAlreadyCheckPanel;                            // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_wait_list;                                      // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_cure_bst;                                       // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_cure_mp;                                        // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_cure_hp;                                        // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_party_index;                                    // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_is_dead_only;                                   // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_is_all_action;                                  // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_NUMEFF                                  Temp_byte_Variable;                                // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  Temp_byte_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWhiteOutFinishBlow_ReturnValue;         // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_GetTaskFactory_retValue;               // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddApplyUnitStateTask_retValue;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_NUMEFF                                  Temp_byte_Variable_2;                              // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_GetTaskFactory_retValue_1;             // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddCamRailSkillTask_retValue;          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_6;             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddBeHomeSideAllTask_PecID;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitVisibilitySideAll_PecID;        // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitVisibilitySideAll_PecID_1;      // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddBeHomeSideAllTask_PecID_1;          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_GetTaskFactory_retValue_2;             // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddApplyUnitStateTask_retValue_1;      // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_MakePartyPanelShowTask_RetPecID;       // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  K2Node_Select_Default;                             // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  K2Node_Select_Default_1;                           // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue;        // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddNumEffectTask_retValue;             // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue_1;      // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_ReturnValue;                   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15B[0x1];                                      // 0x015B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_7;             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_8;             // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_163[0x1];                                      // 0x0163(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_UniqueSkill_GetCureActionEnd_out_CureHP; // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_UniqueSkill_GetCureActionEnd_outCureMP; // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_UniqueSkill_GetCureActionEnd_outCureBst; // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_GetTaskFactory_retValue_3;             // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetAllIsInFieldList_ReturnValue;       // 0x0188(0x0010)(ReferenceParm)
	int32                                         CallFunc_BI_MakeCureTask_ret;                      // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_UniqueSkill_ActionEnd) == 0x000008, "Wrong alignment on BattleMain_C_UniqueSkill_ActionEnd");
static_assert(sizeof(BattleMain_C_UniqueSkill_ActionEnd) == 0x0001A8, "Wrong size on BattleMain_C_UniqueSkill_ActionEnd");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, IsAllAction) == 0x000000, "Member 'BattleMain_C_UniqueSkill_ActionEnd::IsAllAction' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, IsDeadOnly) == 0x000001, "Member 'BattleMain_C_UniqueSkill_ActionEnd::IsDeadOnly' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, ReserveDeadPartyIndex) == 0x000004, "Member 'BattleMain_C_UniqueSkill_ActionEnd::ReserveDeadPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Lo_EnemyCureMP) == 0x000008, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Lo_EnemyCureMP' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Lo_reserve_party_index) == 0x000018, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Lo_reserve_party_index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Lo_EnemyCureHP) == 0x000020, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Lo_EnemyCureHP' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Lo_EnemyIndex) == 0x000030, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Lo_EnemyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Lo_IsAlreadyCheckPanel) == 0x000040, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Lo_IsAlreadyCheckPanel' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Lo_wait_list) == 0x000048, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Lo_wait_list' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Lo_cure_bst) == 0x000058, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Lo_cure_bst' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Lo_cure_mp) == 0x00005C, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Lo_cure_mp' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Lo_cure_hp) == 0x000060, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Lo_cure_hp' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Lo_party_index) == 0x000064, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Lo_party_index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Lo_is_dead_only) == 0x000068, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Lo_is_dead_only' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Lo_is_all_action) == 0x000069, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Lo_is_all_action' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Temp_bool_Variable) == 0x00006A, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Temp_byte_Variable) == 0x00006B, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Temp_int_Array_Index_Variable) == 0x000074, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Temp_byte_Variable_1) == 0x000078, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_IsWhiteOutFinishBlow_ReturnValue) == 0x000079, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_IsWhiteOutFinishBlow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Not_PreBool_ReturnValue) == 0x00007A, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Greater_IntInt_ReturnValue) == 0x000080, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Temp_int_Array_Index_Variable_1) == 0x000084, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000088, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BooleanOR_ReturnValue) == 0x000089, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Greater_IntInt_ReturnValue_2) == 0x00008A, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_GetTaskFactory_retValue) == 0x000090, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_GetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_AddApplyUnitStateTask_retValue) == 0x0000A0, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_AddApplyUnitStateTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000A4, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BooleanAND_ReturnValue) == 0x0000A5, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Temp_byte_Variable_2) == 0x0000A6, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_RandomBool_ReturnValue) == 0x0000A7, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000A8, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_SelectString_ReturnValue) == 0x0000B0, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0000D4, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Greater_IntInt_ReturnValue_4) == 0x0000DC, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BooleanAND_ReturnValue_1) == 0x0000E4, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Array_Length_ReturnValue_2) == 0x0000E8, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Greater_IntInt_ReturnValue_5) == 0x0000EC, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Array_Add_ReturnValue_1) == 0x0000F0, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Array_Add_ReturnValue_2) == 0x0000F4, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_GetTaskFactory_retValue_1) == 0x0000F8, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_GetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_AddCamRailSkillTask_retValue) == 0x000108, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_AddCamRailSkillTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Greater_IntInt_ReturnValue_6) == 0x00010C, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Greater_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_AddBeHomeSideAllTask_PecID) == 0x000110, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_AddBeHomeSideAllTask_PecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_AddUnitVisibilitySideAll_PecID) == 0x000114, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_AddUnitVisibilitySideAll_PecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_AddUnitVisibilitySideAll_PecID_1) == 0x000118, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_AddUnitVisibilitySideAll_PecID_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_AddBeHomeSideAllTask_PecID_1) == 0x00011C, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_AddBeHomeSideAllTask_PecID_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_GetTaskFactory_retValue_2) == 0x000120, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_GetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Temp_bool_Variable_1) == 0x000130, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_AddApplyUnitStateTask_retValue_1) == 0x000134, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_AddApplyUnitStateTask_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_MakePartyPanelShowTask_RetPecID) == 0x000138, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_MakePartyPanelShowTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, K2Node_Select_Default) == 0x00013C, "Member 'BattleMain_C_UniqueSkill_ActionEnd::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Array_Add_ReturnValue_3) == 0x000140, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, K2Node_Select_Default_1) == 0x000144, "Member 'BattleMain_C_UniqueSkill_ActionEnd::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_AddPartyPanelCtrlTask_retValue) == 0x000148, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_AddPartyPanelCtrlTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_AddNumEffectTask_retValue) == 0x00014C, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_AddNumEffectTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_AddPartyPanelCtrlTask_retValue_1) == 0x000150, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_AddPartyPanelCtrlTask_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, Temp_int_Loop_Counter_Variable_1) == 0x000154, "Member 'BattleMain_C_UniqueSkill_ActionEnd::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_GetSide_ReturnValue) == 0x000158, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_GetSide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000159, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Less_IntInt_ReturnValue) == 0x00015A, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Add_IntInt_ReturnValue_1) == 0x00015C, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Greater_IntInt_ReturnValue_7) == 0x000160, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Greater_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Greater_IntInt_ReturnValue_8) == 0x000161, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Greater_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BooleanOR_ReturnValue_1) == 0x000162, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_UniqueSkill_GetCureActionEnd_out_CureHP) == 0x000164, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_UniqueSkill_GetCureActionEnd_out_CureHP' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_UniqueSkill_GetCureActionEnd_outCureMP) == 0x000168, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_UniqueSkill_GetCureActionEnd_outCureMP' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_UniqueSkill_GetCureActionEnd_outCureBst) == 0x00016C, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_UniqueSkill_GetCureActionEnd_outCureBst' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BooleanOR_ReturnValue_2) == 0x000170, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_GetTaskFactory_retValue_3) == 0x000178, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_GetTaskFactory_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_GetAllIsInFieldList_ReturnValue) == 0x000188, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_GetAllIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_BI_MakeCureTask_ret) == 0x000198, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_BI_MakeCureTask_ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Array_Get_Item_1) == 0x00019C, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Array_Length_ReturnValue_3) == 0x0001A0, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_UniqueSkill_ActionEnd, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001A4, "Member 'BattleMain_C_UniqueSkill_ActionEnd::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuNoDeath
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuNoDeath final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugNoDeath_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuNoDeath) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuNoDeath");
static_assert(sizeof(BattleMain_C_CheckDebugMenuNoDeath) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuNoDeath");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNoDeath, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuNoDeath::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNoDeath, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuNoDeath::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuNoDeath, CallFunc_BattleDebugNoDeath_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuNoDeath::CallFunc_BattleDebugNoDeath_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuCancelBadStatusTutorial
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuCancelBadStatusTutorial final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugCancelBadStatusTutorial_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuCancelBadStatusTutorial) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuCancelBadStatusTutorial");
static_assert(sizeof(BattleMain_C_CheckDebugMenuCancelBadStatusTutorial) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuCancelBadStatusTutorial");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCancelBadStatusTutorial, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuCancelBadStatusTutorial::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCancelBadStatusTutorial, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuCancelBadStatusTutorial::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuCancelBadStatusTutorial, CallFunc_BattleDebugCancelBadStatusTutorial_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuCancelBadStatusTutorial::CallFunc_BattleDebugCancelBadStatusTutorial_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.CheckDebugMenuAIProgramLog
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_CheckDebugMenuAIProgramLog final
{
public:
	class FString                                 Lo_Print2;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Lo_Print;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BattleDebugAIProgramLog_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_CheckDebugMenuAIProgramLog) == 0x000008, "Wrong alignment on BattleMain_C_CheckDebugMenuAIProgramLog");
static_assert(sizeof(BattleMain_C_CheckDebugMenuAIProgramLog) == 0x000028, "Wrong size on BattleMain_C_CheckDebugMenuAIProgramLog");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAIProgramLog, Lo_Print2) == 0x000000, "Member 'BattleMain_C_CheckDebugMenuAIProgramLog::Lo_Print2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAIProgramLog, Lo_Print) == 0x000010, "Member 'BattleMain_C_CheckDebugMenuAIProgramLog::Lo_Print' has a wrong offset!");
static_assert(offsetof(BattleMain_C_CheckDebugMenuAIProgramLog, CallFunc_BattleDebugAIProgramLog_ReturnValue) == 0x000020, "Member 'BattleMain_C_CheckDebugMenuAIProgramLog::CallFunc_BattleDebugAIProgramLog_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.MakeKamuiIhuInfoMess
// 0x0030 (0x0030 - 0x0000)
struct BattleMain_C_MakeKamuiIhuInfoMess final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Lo_label;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	E_BTL_CNT                                     CallFunc_GetGodSkillDownAidType_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddInfoMessByLabelTask_RetPecID;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue; // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_MakeKamuiIhuInfoMess) == 0x000008, "Wrong alignment on BattleMain_C_MakeKamuiIhuInfoMess");
static_assert(sizeof(BattleMain_C_MakeKamuiIhuInfoMess) == 0x000030, "Wrong size on BattleMain_C_MakeKamuiIhuInfoMess");
static_assert(offsetof(BattleMain_C_MakeKamuiIhuInfoMess, WaitTaskList) == 0x000000, "Member 'BattleMain_C_MakeKamuiIhuInfoMess::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeKamuiIhuInfoMess, Lo_label) == 0x000010, "Member 'BattleMain_C_MakeKamuiIhuInfoMess::Lo_label' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeKamuiIhuInfoMess, CallFunc_GetGodSkillDownAidType_ReturnValue) == 0x000020, "Member 'BattleMain_C_MakeKamuiIhuInfoMess::CallFunc_GetGodSkillDownAidType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeKamuiIhuInfoMess, CallFunc_AddInfoMessByLabelTask_RetPecID) == 0x000024, "Member 'BattleMain_C_MakeKamuiIhuInfoMess::CallFunc_AddInfoMessByLabelTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeKamuiIhuInfoMess, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'BattleMain_C_MakeKamuiIhuInfoMess::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeKamuiIhuInfoMess, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000029, "Member 'BattleMain_C_MakeKamuiIhuInfoMess::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeKamuiIhuInfoMess, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00002A, "Member 'BattleMain_C_MakeKamuiIhuInfoMess::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_MakeKamuiIhuInfoMess, CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue) == 0x00002B, "Member 'BattleMain_C_MakeKamuiIhuInfoMess::CallFunc_IsLearningGodParameterSkillFromEnum_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.IsExistUniqueSkill
// 0x0030 (0x0030 - 0x0000)
struct BattleMain_C_IsExistUniqueSkill final
{
public:
	TArray<int32>                                 DevilID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	E_AUTO_SKILL_EXTRA_EFFECT                     SkillExtraEffect;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Exsit;                                             // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckUniqueSkillEffect_ReturnValue;       // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_IsExistUniqueSkill) == 0x000008, "Wrong alignment on BattleMain_C_IsExistUniqueSkill");
static_assert(sizeof(BattleMain_C_IsExistUniqueSkill) == 0x000030, "Wrong size on BattleMain_C_IsExistUniqueSkill");
static_assert(offsetof(BattleMain_C_IsExistUniqueSkill, DevilID) == 0x000000, "Member 'BattleMain_C_IsExistUniqueSkill::DevilID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsExistUniqueSkill, SkillExtraEffect) == 0x000010, "Member 'BattleMain_C_IsExistUniqueSkill::SkillExtraEffect' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsExistUniqueSkill, Exsit) == 0x000011, "Member 'BattleMain_C_IsExistUniqueSkill::Exsit' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsExistUniqueSkill, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BattleMain_C_IsExistUniqueSkill::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsExistUniqueSkill, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BattleMain_C_IsExistUniqueSkill::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsExistUniqueSkill, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BattleMain_C_IsExistUniqueSkill::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsExistUniqueSkill, CallFunc_Array_Get_Item) == 0x000020, "Member 'BattleMain_C_IsExistUniqueSkill::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsExistUniqueSkill, CallFunc_CheckUniqueSkillEffect_ReturnValue) == 0x000024, "Member 'BattleMain_C_IsExistUniqueSkill::CallFunc_CheckUniqueSkillEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsExistUniqueSkill, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'BattleMain_C_IsExistUniqueSkill::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsExistUniqueSkill, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BattleMain_C_IsExistUniqueSkill::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.IsWhiteOutFinishBlow
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_IsWhiteOutFinishBlow final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	E_UI_FADE_STATE                               CallFunc_GetFadeState_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideIsBossFlagList_ReturnValue;     // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_IsWhiteOutFinishBlow) == 0x000008, "Wrong alignment on BattleMain_C_IsWhiteOutFinishBlow");
static_assert(sizeof(BattleMain_C_IsWhiteOutFinishBlow) == 0x000028, "Wrong size on BattleMain_C_IsWhiteOutFinishBlow");
static_assert(offsetof(BattleMain_C_IsWhiteOutFinishBlow, ReturnValue) == 0x000000, "Member 'BattleMain_C_IsWhiteOutFinishBlow::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsWhiteOutFinishBlow, CallFunc_GetFadeState_ReturnValue) == 0x000001, "Member 'BattleMain_C_IsWhiteOutFinishBlow::CallFunc_GetFadeState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsWhiteOutFinishBlow, CallFunc_BI_GetSideIsBossFlagList_ReturnValue) == 0x000008, "Member 'BattleMain_C_IsWhiteOutFinishBlow::CallFunc_BI_GetSideIsBossFlagList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsWhiteOutFinishBlow, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BattleMain_C_IsWhiteOutFinishBlow::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsWhiteOutFinishBlow, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BattleMain_C_IsWhiteOutFinishBlow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsWhiteOutFinishBlow, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BattleMain_C_IsWhiteOutFinishBlow::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_IsWhiteOutFinishBlow, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'BattleMain_C_IsWhiteOutFinishBlow::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetPartySystem
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetPartySystem final
{
public:
	TScriptInterface<class IBPI_BattleParty_C>    Ret;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetPartySystem) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetPartySystem");
static_assert(sizeof(BattleMain_C_BI_GetPartySystem) == 0x000010, "Wrong size on BattleMain_C_BI_GetPartySystem");
static_assert(offsetof(BattleMain_C_BI_GetPartySystem, Ret) == 0x000000, "Member 'BattleMain_C_BI_GetPartySystem::Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_BattleLog
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_BI_BattleLog final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleDebugFlag_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_BattleLog) == 0x000008, "Wrong alignment on BattleMain_C_BI_BattleLog");
static_assert(sizeof(BattleMain_C_BI_BattleLog) == 0x000018, "Wrong size on BattleMain_C_BI_BattleLog");
static_assert(offsetof(BattleMain_C_BI_BattleLog, String) == 0x000000, "Member 'BattleMain_C_BI_BattleLog::String' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_BattleLog, RetValue) == 0x000010, "Member 'BattleMain_C_BI_BattleLog::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_BattleLog, CallFunc_CheckBattleDebugFlag_ReturnValue) == 0x000011, "Member 'BattleMain_C_BI_BattleLog::CallFunc_CheckBattleDebugFlag_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_IsBattleLogOn
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_IsBattleLogOn final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleDebugFlag_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_IsBattleLogOn) == 0x000001, "Wrong alignment on BattleMain_C_BI_IsBattleLogOn");
static_assert(sizeof(BattleMain_C_BI_IsBattleLogOn) == 0x000002, "Wrong size on BattleMain_C_BI_IsBattleLogOn");
static_assert(offsetof(BattleMain_C_BI_IsBattleLogOn, RetValue) == 0x000000, "Member 'BattleMain_C_BI_IsBattleLogOn::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_IsBattleLogOn, CallFunc_CheckBattleDebugFlag_ReturnValue) == 0x000001, "Member 'BattleMain_C_BI_IsBattleLogOn::CallFunc_CheckBattleDebugFlag_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetTurnActValidNum
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_BI_GetTurnActValidNum final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideIsInFieldList_ReturnValue;         // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetTurnActValidNum) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetTurnActValidNum");
static_assert(sizeof(BattleMain_C_BI_GetTurnActValidNum) == 0x000020, "Wrong size on BattleMain_C_BI_GetTurnActValidNum");
static_assert(offsetof(BattleMain_C_BI_GetTurnActValidNum, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetTurnActValidNum::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetTurnActValidNum, CallFunc_GetSideIsInFieldList_ReturnValue) == 0x000008, "Member 'BattleMain_C_BI_GetTurnActValidNum::CallFunc_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetTurnActValidNum, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BattleMain_C_BI_GetTurnActValidNum::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetBattleCamera
// 0x0038 (0x0038 - 0x0000)
struct BattleMain_C_BI_SetBattleCamera final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TalkCamera_C*                       K2Node_DynamicCast_AsBP_Talk_Camera;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleCamera_C*                        K2Node_DynamicCast_AsBattle_Camera;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SetBattleCamera) == 0x000008, "Wrong alignment on BattleMain_C_BI_SetBattleCamera");
static_assert(sizeof(BattleMain_C_BI_SetBattleCamera) == 0x000038, "Wrong size on BattleMain_C_BI_SetBattleCamera");
static_assert(offsetof(BattleMain_C_BI_SetBattleCamera, BlendTime) == 0x000000, "Member 'BattleMain_C_BI_SetBattleCamera::BlendTime' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetBattleCamera, RetValue) == 0x000004, "Member 'BattleMain_C_BI_SetBattleCamera::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetBattleCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BattleMain_C_BI_SetBattleCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetBattleCamera, CallFunc_GetViewTarget_ReturnValue) == 0x000010, "Member 'BattleMain_C_BI_SetBattleCamera::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetBattleCamera, K2Node_DynamicCast_AsBP_Talk_Camera) == 0x000018, "Member 'BattleMain_C_BI_SetBattleCamera::K2Node_DynamicCast_AsBP_Talk_Camera' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetBattleCamera, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BattleMain_C_BI_SetBattleCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetBattleCamera, K2Node_DynamicCast_AsBattle_Camera) == 0x000028, "Member 'BattleMain_C_BI_SetBattleCamera::K2Node_DynamicCast_AsBattle_Camera' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetBattleCamera, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BattleMain_C_BI_SetBattleCamera::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetBattleCameraFieldOfView
// 0x0004 (0x0004 - 0x0000)
struct BattleMain_C_BI_GetBattleCameraFieldOfView final
{
public:
	float                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetBattleCameraFieldOfView) == 0x000004, "Wrong alignment on BattleMain_C_BI_GetBattleCameraFieldOfView");
static_assert(sizeof(BattleMain_C_BI_GetBattleCameraFieldOfView) == 0x000004, "Wrong size on BattleMain_C_BI_GetBattleCameraFieldOfView");
static_assert(offsetof(BattleMain_C_BI_GetBattleCameraFieldOfView, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetBattleCameraFieldOfView::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetBattleCameraTransform
// 0x0060 (0x0060 - 0x0000)
struct BattleMain_C_BI_GetBattleCameraTransform final
{
public:
	struct FTransform                             RetValue;                                          // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetBattleCameraTransform) == 0x000010, "Wrong alignment on BattleMain_C_BI_GetBattleCameraTransform");
static_assert(sizeof(BattleMain_C_BI_GetBattleCameraTransform) == 0x000060, "Wrong size on BattleMain_C_BI_GetBattleCameraTransform");
static_assert(offsetof(BattleMain_C_BI_GetBattleCameraTransform, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetBattleCameraTransform::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetBattleCameraTransform, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BattleMain_C_BI_GetBattleCameraTransform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_TurnDrawWidgetSetVisibility
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_TurnDrawWidgetSetVisibility final
{
public:
	ESlateVisibility                              Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_TurnDrawWidgetSetVisibility) == 0x000001, "Wrong alignment on BattleMain_C_BI_TurnDrawWidgetSetVisibility");
static_assert(sizeof(BattleMain_C_BI_TurnDrawWidgetSetVisibility) == 0x000002, "Wrong size on BattleMain_C_BI_TurnDrawWidgetSetVisibility");
static_assert(offsetof(BattleMain_C_BI_TurnDrawWidgetSetVisibility, Value) == 0x000000, "Member 'BattleMain_C_BI_TurnDrawWidgetSetVisibility::Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TurnDrawWidgetSetVisibility, RetValue) == 0x000001, "Member 'BattleMain_C_BI_TurnDrawWidgetSetVisibility::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_PartyPanelSetVisibility
// 0x0004 (0x0004 - 0x0000)
struct BattleMain_C_BI_PartyPanelSetVisibility final
{
public:
	ESlateVisibility                              Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_PartyPanelSetVisibility) == 0x000001, "Wrong alignment on BattleMain_C_BI_PartyPanelSetVisibility");
static_assert(sizeof(BattleMain_C_BI_PartyPanelSetVisibility) == 0x000004, "Wrong size on BattleMain_C_BI_PartyPanelSetVisibility");
static_assert(offsetof(BattleMain_C_BI_PartyPanelSetVisibility, Value) == 0x000000, "Member 'BattleMain_C_BI_PartyPanelSetVisibility::Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelSetVisibility, RetValue) == 0x000001, "Member 'BattleMain_C_BI_PartyPanelSetVisibility::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelSetVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BattleMain_C_BI_PartyPanelSetVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelSetVisibility, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000003, "Member 'BattleMain_C_BI_PartyPanelSetVisibility::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UICommandStartSeq
// 0x0360 (0x0360 - 0x0000)
struct BattleMain_C_BI_UICommandStartSeq final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCounterActor;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_UI_COMM_STEP                            Step;                                              // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallIndex;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TopIndex;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WIDGET_PRIO                                 Prio;                                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCameraNoMove;                                    // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillCriticalValueOne>         SettleCriticalInfo;                                // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          RetValue;                                          // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_GetBtlPartyData_ReturnValue;              // 0x0030(0x0320)()
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_StartSeq_inMainWork_CastInput;            // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UICommandStartSeq) == 0x000010, "Wrong alignment on BattleMain_C_BI_UICommandStartSeq");
static_assert(sizeof(BattleMain_C_BI_UICommandStartSeq) == 0x000360, "Wrong size on BattleMain_C_BI_UICommandStartSeq");
static_assert(offsetof(BattleMain_C_BI_UICommandStartSeq, PartyIndex) == 0x000000, "Member 'BattleMain_C_BI_UICommandStartSeq::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandStartSeq, IsCounterActor) == 0x000004, "Member 'BattleMain_C_BI_UICommandStartSeq::IsCounterActor' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandStartSeq, Step) == 0x000005, "Member 'BattleMain_C_BI_UICommandStartSeq::Step' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandStartSeq, CallIndex) == 0x000008, "Member 'BattleMain_C_BI_UICommandStartSeq::CallIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandStartSeq, TopIndex) == 0x00000C, "Member 'BattleMain_C_BI_UICommandStartSeq::TopIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandStartSeq, Prio) == 0x000010, "Member 'BattleMain_C_BI_UICommandStartSeq::Prio' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandStartSeq, IsCameraNoMove) == 0x000011, "Member 'BattleMain_C_BI_UICommandStartSeq::IsCameraNoMove' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandStartSeq, SettleCriticalInfo) == 0x000018, "Member 'BattleMain_C_BI_UICommandStartSeq::SettleCriticalInfo' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandStartSeq, RetValue) == 0x000028, "Member 'BattleMain_C_BI_UICommandStartSeq::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandStartSeq, CallFunc_GetBtlPartyData_ReturnValue) == 0x000030, "Member 'BattleMain_C_BI_UICommandStartSeq::CallFunc_GetBtlPartyData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandStartSeq, CallFunc_StartSeq_inMainWork_CastInput) == 0x000350, "Member 'BattleMain_C_BI_UICommandStartSeq::CallFunc_StartSeq_inMainWork_CastInput' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UICommandIsFinished
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_UICommandIsFinished final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFinished_retValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UICommandIsFinished) == 0x000001, "Wrong alignment on BattleMain_C_BI_UICommandIsFinished");
static_assert(sizeof(BattleMain_C_BI_UICommandIsFinished) == 0x000002, "Wrong size on BattleMain_C_BI_UICommandIsFinished");
static_assert(offsetof(BattleMain_C_BI_UICommandIsFinished, RetValue) == 0x000000, "Member 'BattleMain_C_BI_UICommandIsFinished::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandIsFinished, CallFunc_IsFinished_retValue) == 0x000001, "Member 'BattleMain_C_BI_UICommandIsFinished::CallFunc_IsFinished_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UICommandGetResult
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_BI_UICommandGetResult final
{
public:
	struct FBtlCommand                            RetValue;                                          // 0x0000(0x0010)(Parm, OutParm)
	struct FBtlCommand                            CallFunc_GetResult_retValue;                       // 0x0010(0x0010)()
};
static_assert(alignof(BattleMain_C_BI_UICommandGetResult) == 0x000004, "Wrong alignment on BattleMain_C_BI_UICommandGetResult");
static_assert(sizeof(BattleMain_C_BI_UICommandGetResult) == 0x000020, "Wrong size on BattleMain_C_BI_UICommandGetResult");
static_assert(offsetof(BattleMain_C_BI_UICommandGetResult, RetValue) == 0x000000, "Member 'BattleMain_C_BI_UICommandGetResult::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandGetResult, CallFunc_GetResult_retValue) == 0x000010, "Member 'BattleMain_C_BI_UICommandGetResult::CallFunc_GetResult_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UICommandRemove
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_UICommandRemove final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UICommandRemove) == 0x000001, "Wrong alignment on BattleMain_C_BI_UICommandRemove");
static_assert(sizeof(BattleMain_C_BI_UICommandRemove) == 0x000001, "Wrong size on BattleMain_C_BI_UICommandRemove");
static_assert(offsetof(BattleMain_C_BI_UICommandRemove, RetValue) == 0x000000, "Member 'BattleMain_C_BI_UICommandRemove::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UICommandEndSeq
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_UICommandEndSeq final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UICommandEndSeq) == 0x000001, "Wrong alignment on BattleMain_C_BI_UICommandEndSeq");
static_assert(sizeof(BattleMain_C_BI_UICommandEndSeq) == 0x000001, "Wrong size on BattleMain_C_BI_UICommandEndSeq");
static_assert(offsetof(BattleMain_C_BI_UICommandEndSeq, RetValue) == 0x000000, "Member 'BattleMain_C_BI_UICommandEndSeq::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UICommandGetSkillMenuCursor
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_UICommandGetSkillMenuCursor final
{
public:
	int32                                         CursorIndex;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TopIndex;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillMenuCursor_partyIndex;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillMenuCursor_Top_Index;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_UICommandGetSkillMenuCursor) == 0x000004, "Wrong alignment on BattleMain_C_BI_UICommandGetSkillMenuCursor");
static_assert(sizeof(BattleMain_C_BI_UICommandGetSkillMenuCursor) == 0x000010, "Wrong size on BattleMain_C_BI_UICommandGetSkillMenuCursor");
static_assert(offsetof(BattleMain_C_BI_UICommandGetSkillMenuCursor, CursorIndex) == 0x000000, "Member 'BattleMain_C_BI_UICommandGetSkillMenuCursor::CursorIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandGetSkillMenuCursor, TopIndex) == 0x000004, "Member 'BattleMain_C_BI_UICommandGetSkillMenuCursor::TopIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandGetSkillMenuCursor, CallFunc_GetSkillMenuCursor_partyIndex) == 0x000008, "Member 'BattleMain_C_BI_UICommandGetSkillMenuCursor::CallFunc_GetSkillMenuCursor_partyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandGetSkillMenuCursor, CallFunc_GetSkillMenuCursor_Top_Index) == 0x00000C, "Member 'BattleMain_C_BI_UICommandGetSkillMenuCursor::CallFunc_GetSkillMenuCursor_Top_Index' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UICommandGetItemMenuCursor
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_UICommandGetItemMenuCursor final
{
public:
	int32                                         CursorIndex;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TopIndex;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemMenuCursor_partyIndex;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemMenuCursor_TopIndex;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_UICommandGetItemMenuCursor) == 0x000004, "Wrong alignment on BattleMain_C_BI_UICommandGetItemMenuCursor");
static_assert(sizeof(BattleMain_C_BI_UICommandGetItemMenuCursor) == 0x000010, "Wrong size on BattleMain_C_BI_UICommandGetItemMenuCursor");
static_assert(offsetof(BattleMain_C_BI_UICommandGetItemMenuCursor, CursorIndex) == 0x000000, "Member 'BattleMain_C_BI_UICommandGetItemMenuCursor::CursorIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandGetItemMenuCursor, TopIndex) == 0x000004, "Member 'BattleMain_C_BI_UICommandGetItemMenuCursor::TopIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandGetItemMenuCursor, CallFunc_GetItemMenuCursor_partyIndex) == 0x000008, "Member 'BattleMain_C_BI_UICommandGetItemMenuCursor::CallFunc_GetItemMenuCursor_partyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandGetItemMenuCursor, CallFunc_GetItemMenuCursor_TopIndex) == 0x00000C, "Member 'BattleMain_C_BI_UICommandGetItemMenuCursor::CallFunc_GetItemMenuCursor_TopIndex' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetCalcMakeBstArray
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_BI_GetCalcMakeBstArray final
{
public:
	int32                                         InBst;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BAD_STATUS>                          RetValue;                                          // 0x0008(0x0010)(Parm, OutParm)
	TArray<E_BAD_STATUS>                          CallFunc_MakeBstArray_ReturnValue;                 // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleMain_C_BI_GetCalcMakeBstArray) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetCalcMakeBstArray");
static_assert(sizeof(BattleMain_C_BI_GetCalcMakeBstArray) == 0x000028, "Wrong size on BattleMain_C_BI_GetCalcMakeBstArray");
static_assert(offsetof(BattleMain_C_BI_GetCalcMakeBstArray, InBst) == 0x000000, "Member 'BattleMain_C_BI_GetCalcMakeBstArray::InBst' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetCalcMakeBstArray, RetValue) == 0x000008, "Member 'BattleMain_C_BI_GetCalcMakeBstArray::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetCalcMakeBstArray, CallFunc_MakeBstArray_ReturnValue) == 0x000018, "Member 'BattleMain_C_BI_GetCalcMakeBstArray::CallFunc_MakeBstArray_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetBattleCameraSkillCam
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_SetBattleCameraSkillCam final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SetBattleCameraSkillCam) == 0x000004, "Wrong alignment on BattleMain_C_BI_SetBattleCameraSkillCam");
static_assert(sizeof(BattleMain_C_BI_SetBattleCameraSkillCam) == 0x000008, "Wrong size on BattleMain_C_BI_SetBattleCameraSkillCam");
static_assert(offsetof(BattleMain_C_BI_SetBattleCameraSkillCam, BlendTime) == 0x000000, "Member 'BattleMain_C_BI_SetBattleCameraSkillCam::BlendTime' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetBattleCameraSkillCam, RetValue) == 0x000004, "Member 'BattleMain_C_BI_SetBattleCameraSkillCam::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetBattleCameraHome
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_SetBattleCameraHome final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SetBattleCameraHome) == 0x000004, "Wrong alignment on BattleMain_C_BI_SetBattleCameraHome");
static_assert(sizeof(BattleMain_C_BI_SetBattleCameraHome) == 0x000008, "Wrong size on BattleMain_C_BI_SetBattleCameraHome");
static_assert(offsetof(BattleMain_C_BI_SetBattleCameraHome, BlendTime) == 0x000000, "Member 'BattleMain_C_BI_SetBattleCameraHome::BlendTime' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetBattleCameraHome, RetValue) == 0x000004, "Member 'BattleMain_C_BI_SetBattleCameraHome::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetPartyPanelEmpty
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_SetPartyPanelEmpty final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IBattleCharaPanelSetEmptyPanel_OutParam;  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SetPartyPanelEmpty) == 0x000004, "Wrong alignment on BattleMain_C_BI_SetPartyPanelEmpty");
static_assert(sizeof(BattleMain_C_BI_SetPartyPanelEmpty) == 0x000008, "Wrong size on BattleMain_C_BI_SetPartyPanelEmpty");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelEmpty, Param_Index) == 0x000000, "Member 'BattleMain_C_BI_SetPartyPanelEmpty::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelEmpty, RetValue) == 0x000004, "Member 'BattleMain_C_BI_SetPartyPanelEmpty::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelEmpty, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000005, "Member 'BattleMain_C_BI_SetPartyPanelEmpty::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelEmpty, CallFunc_IBattleCharaPanelSetEmptyPanel_OutParam) == 0x000006, "Member 'BattleMain_C_BI_SetPartyPanelEmpty::CallFunc_IBattleCharaPanelSetEmptyPanel_OutParam' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelEmpty, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000007, "Member 'BattleMain_C_BI_SetPartyPanelEmpty::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_CamFactorySpawnRailActor
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_BI_CamFactorySpawnRailActor final
{
public:
	E_BTL_CAM_TYPE                                CamType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PartyIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_RailActor_C*                        CallFunc_SpawnRailActor_retValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_CamFactorySpawnRailActor) == 0x000008, "Wrong alignment on BattleMain_C_BI_CamFactorySpawnRailActor");
static_assert(sizeof(BattleMain_C_BI_CamFactorySpawnRailActor) == 0x000018, "Wrong size on BattleMain_C_BI_CamFactorySpawnRailActor");
static_assert(offsetof(BattleMain_C_BI_CamFactorySpawnRailActor, CamType) == 0x000000, "Member 'BattleMain_C_BI_CamFactorySpawnRailActor::CamType' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CamFactorySpawnRailActor, PartyIndex) == 0x000004, "Member 'BattleMain_C_BI_CamFactorySpawnRailActor::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CamFactorySpawnRailActor, RetValue) == 0x000008, "Member 'BattleMain_C_BI_CamFactorySpawnRailActor::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CamFactorySpawnRailActor, CallFunc_SpawnRailActor_retValue) == 0x000010, "Member 'BattleMain_C_BI_CamFactorySpawnRailActor::CallFunc_SpawnRailActor_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_IsBattleCameraInterp
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_IsBattleCameraInterp final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInterp_retValue;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_IsBattleCameraInterp) == 0x000001, "Wrong alignment on BattleMain_C_BI_IsBattleCameraInterp");
static_assert(sizeof(BattleMain_C_BI_IsBattleCameraInterp) == 0x000002, "Wrong size on BattleMain_C_BI_IsBattleCameraInterp");
static_assert(offsetof(BattleMain_C_BI_IsBattleCameraInterp, RetValue) == 0x000000, "Member 'BattleMain_C_BI_IsBattleCameraInterp::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_IsBattleCameraInterp, CallFunc_IsInterp_retValue) == 0x000001, "Member 'BattleMain_C_BI_IsBattleCameraInterp::CallFunc_IsInterp_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_IsBattleCameraRailArrived
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_IsBattleCameraRailArrived final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RailIsArrived_retValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_IsBattleCameraRailArrived) == 0x000001, "Wrong alignment on BattleMain_C_BI_IsBattleCameraRailArrived");
static_assert(sizeof(BattleMain_C_BI_IsBattleCameraRailArrived) == 0x000002, "Wrong size on BattleMain_C_BI_IsBattleCameraRailArrived");
static_assert(offsetof(BattleMain_C_BI_IsBattleCameraRailArrived, RetValue) == 0x000000, "Member 'BattleMain_C_BI_IsBattleCameraRailArrived::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_IsBattleCameraRailArrived, CallFunc_RailIsArrived_retValue) == 0x000001, "Member 'BattleMain_C_BI_IsBattleCameraRailArrived::CallFunc_RailIsArrived_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetBattleCameraTarget
// 0x0014 (0x0014 - 0x0000)
struct BattleMain_C_BI_SetBattleCameraTarget final
{
public:
	struct FVector                                Target;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         blendSpeed;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SetBattleCameraTarget) == 0x000004, "Wrong alignment on BattleMain_C_BI_SetBattleCameraTarget");
static_assert(sizeof(BattleMain_C_BI_SetBattleCameraTarget) == 0x000014, "Wrong size on BattleMain_C_BI_SetBattleCameraTarget");
static_assert(offsetof(BattleMain_C_BI_SetBattleCameraTarget, Target) == 0x000000, "Member 'BattleMain_C_BI_SetBattleCameraTarget::Target' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetBattleCameraTarget, blendSpeed) == 0x00000C, "Member 'BattleMain_C_BI_SetBattleCameraTarget::blendSpeed' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetBattleCameraTarget, RetValue) == 0x000010, "Member 'BattleMain_C_BI_SetBattleCameraTarget::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UITurnDrawIsFinished
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_UITurnDrawIsFinished final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UITurnDrawIsFinished) == 0x000001, "Wrong alignment on BattleMain_C_BI_UITurnDrawIsFinished");
static_assert(sizeof(BattleMain_C_BI_UITurnDrawIsFinished) == 0x000001, "Wrong size on BattleMain_C_BI_UITurnDrawIsFinished");
static_assert(offsetof(BattleMain_C_BI_UITurnDrawIsFinished, RetValue) == 0x000000, "Member 'BattleMain_C_BI_UITurnDrawIsFinished::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetBattleCameraFovy
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_BI_SetBattleCameraFovy final
{
public:
	float                                         Fovy;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Blend;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SetBattleCameraFovy) == 0x000004, "Wrong alignment on BattleMain_C_BI_SetBattleCameraFovy");
static_assert(sizeof(BattleMain_C_BI_SetBattleCameraFovy) == 0x00000C, "Wrong size on BattleMain_C_BI_SetBattleCameraFovy");
static_assert(offsetof(BattleMain_C_BI_SetBattleCameraFovy, Fovy) == 0x000000, "Member 'BattleMain_C_BI_SetBattleCameraFovy::Fovy' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetBattleCameraFovy, Blend) == 0x000004, "Member 'BattleMain_C_BI_SetBattleCameraFovy::Blend' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetBattleCameraFovy, RetValue) == 0x000008, "Member 'BattleMain_C_BI_SetBattleCameraFovy::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_CamFactorySpawnRailActorSkill
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_BI_CamFactorySpawnRailActorSkill final
{
public:
	int32                                         TargetPartyIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SKILL_CAM_TYPE                          Type;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Param_Name;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ActorIndex;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsConsiderActorLocation;                           // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOverrideHokanSpeed;                              // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsHokanSpeedMax;                                   // 0x001E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DoNotResetUnitAveLocation;                         // 0x001F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSuccess;                                         // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SpawnRailActorSkill_isSuccess;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_CamFactorySpawnRailActorSkill) == 0x000008, "Wrong alignment on BattleMain_C_BI_CamFactorySpawnRailActorSkill");
static_assert(sizeof(BattleMain_C_BI_CamFactorySpawnRailActorSkill) == 0x000028, "Wrong size on BattleMain_C_BI_CamFactorySpawnRailActorSkill");
static_assert(offsetof(BattleMain_C_BI_CamFactorySpawnRailActorSkill, TargetPartyIndex) == 0x000000, "Member 'BattleMain_C_BI_CamFactorySpawnRailActorSkill::TargetPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CamFactorySpawnRailActorSkill, Type) == 0x000004, "Member 'BattleMain_C_BI_CamFactorySpawnRailActorSkill::Type' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CamFactorySpawnRailActorSkill, Param_Name) == 0x000008, "Member 'BattleMain_C_BI_CamFactorySpawnRailActorSkill::Param_Name' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CamFactorySpawnRailActorSkill, ActorIndex) == 0x000018, "Member 'BattleMain_C_BI_CamFactorySpawnRailActorSkill::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CamFactorySpawnRailActorSkill, IsConsiderActorLocation) == 0x00001C, "Member 'BattleMain_C_BI_CamFactorySpawnRailActorSkill::IsConsiderActorLocation' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CamFactorySpawnRailActorSkill, IsOverrideHokanSpeed) == 0x00001D, "Member 'BattleMain_C_BI_CamFactorySpawnRailActorSkill::IsOverrideHokanSpeed' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CamFactorySpawnRailActorSkill, IsHokanSpeedMax) == 0x00001E, "Member 'BattleMain_C_BI_CamFactorySpawnRailActorSkill::IsHokanSpeedMax' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CamFactorySpawnRailActorSkill, DoNotResetUnitAveLocation) == 0x00001F, "Member 'BattleMain_C_BI_CamFactorySpawnRailActorSkill::DoNotResetUnitAveLocation' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CamFactorySpawnRailActorSkill, IsSuccess) == 0x000020, "Member 'BattleMain_C_BI_CamFactorySpawnRailActorSkill::IsSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CamFactorySpawnRailActorSkill, CallFunc_SpawnRailActorSkill_isSuccess) == 0x000021, "Member 'BattleMain_C_BI_CamFactorySpawnRailActorSkill::CallFunc_SpawnRailActorSkill_isSuccess' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetBattleCameraShake
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_BI_SetBattleCameraShake final
{
public:
	class UClass*                                 InShakeClass;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Scale;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SetBattleCameraShake) == 0x000008, "Wrong alignment on BattleMain_C_BI_SetBattleCameraShake");
static_assert(sizeof(BattleMain_C_BI_SetBattleCameraShake) == 0x000018, "Wrong size on BattleMain_C_BI_SetBattleCameraShake");
static_assert(offsetof(BattleMain_C_BI_SetBattleCameraShake, InShakeClass) == 0x000000, "Member 'BattleMain_C_BI_SetBattleCameraShake::InShakeClass' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetBattleCameraShake, Sw) == 0x000008, "Member 'BattleMain_C_BI_SetBattleCameraShake::Sw' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetBattleCameraShake, Scale) == 0x00000C, "Member 'BattleMain_C_BI_SetBattleCameraShake::Scale' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetBattleCameraShake, RetValue) == 0x000010, "Member 'BattleMain_C_BI_SetBattleCameraShake::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_PartyPanelCtrl
// 0x0D10 (0x0D10 - 0x0000)
struct BattleMain_C_BI_PartyPanelCtrl final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_PANEL_CTRL                              Ctrl;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value2;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_Value2;                                         // 0x000E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_Value;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Index;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartyData_self_CastInput;           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBtlParty                              CallFunc_BI_GetPartyData_retValue;                 // 0x0030(0x0320)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartyData_self_CastInput_1;         // 0x0358(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_BI_GetPartyData_retValue_1;               // 0x0370(0x0320)()
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartyData_self_CastInput_2;         // 0x0690(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBtlParty                              CallFunc_BI_GetPartyData_retValue_2;               // 0x06A0(0x0320)()
	bool                                          CallFunc_CheckBattleDebugFlag2_ReturnValue;        // 0x09C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x09C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_ReturnValue;                   // 0x09C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x09C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_KUISHIBARI_LEVEL                            CallFunc_BI_GetKuiLevel_ReturnValue;               // 0x09C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x09C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C6[0x2];                                      // 0x09C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x09C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x09CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHeroIndex_ReturnValue;                  // 0x09CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x09CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x09CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBtlParty                              CallFunc_GetBtlPartyData_ReturnValue;              // 0x09D0(0x0320)()
	bool                                          CallFunc_IBattleCharaPanelCalcSupport_OutParam;    // 0x0CF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0CF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0CF2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0CF3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0CF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_5;           // 0x0CF5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_6;           // 0x0CF6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0CF7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBattleDebugFlag2_ReturnValue_1;      // 0x0CF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0CF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0CFA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0CFB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0CFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_PartyPanelSetVisibility_retValue;      // 0x0CFD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_7;           // 0x0CFE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_8;           // 0x0CFF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_9;           // 0x0D00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_10;          // 0x0D01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_11;          // 0x0D02(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0D03(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_12;          // 0x0D04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0D05(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_13;          // 0x0D06(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0D07(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_14;          // 0x0D08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0D09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0D0A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_PartyPanelCtrl) == 0x000010, "Wrong alignment on BattleMain_C_BI_PartyPanelCtrl");
static_assert(sizeof(BattleMain_C_BI_PartyPanelCtrl) == 0x000D10, "Wrong size on BattleMain_C_BI_PartyPanelCtrl");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, PartyIndex) == 0x000000, "Member 'BattleMain_C_BI_PartyPanelCtrl::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, Ctrl) == 0x000004, "Member 'BattleMain_C_BI_PartyPanelCtrl::Ctrl' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, Value) == 0x000008, "Member 'BattleMain_C_BI_PartyPanelCtrl::Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, Value2) == 0x00000C, "Member 'BattleMain_C_BI_PartyPanelCtrl::Value2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, RetValue) == 0x00000D, "Member 'BattleMain_C_BI_PartyPanelCtrl::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, Lo_Value2) == 0x00000E, "Member 'BattleMain_C_BI_PartyPanelCtrl::Lo_Value2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, Lo_Value) == 0x000010, "Member 'BattleMain_C_BI_PartyPanelCtrl::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, Lo_Index) == 0x000014, "Member 'BattleMain_C_BI_PartyPanelCtrl::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BattleMain_C_BI_PartyPanelCtrl::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_BI_GetPartyData_self_CastInput) == 0x000020, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_BI_GetPartyData_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_BI_GetPartyData_retValue) == 0x000030, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_BI_GetPartyData_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000350, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_BI_GetPartyData_self_CastInput_1) == 0x000358, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_BI_GetPartyData_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_BI_GetPartyData_retValue_1) == 0x000370, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_BI_GetPartyData_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_BI_GetPartyData_self_CastInput_2) == 0x000690, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_BI_GetPartyData_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_BI_GetPartyData_retValue_2) == 0x0006A0, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_BI_GetPartyData_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_CheckBattleDebugFlag2_ReturnValue) == 0x0009C0, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_CheckBattleDebugFlag2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_Greater_IntInt_ReturnValue) == 0x0009C1, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_BI_GetSide_ReturnValue) == 0x0009C2, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_BI_GetSide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0009C3, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_BI_GetKuiLevel_ReturnValue) == 0x0009C4, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_BI_GetKuiLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0009C5, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0009C8, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0009CC, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_IsHeroIndex_ReturnValue) == 0x0009CD, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_IsHeroIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_BooleanAND_ReturnValue) == 0x0009CE, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_Not_PreBool_ReturnValue) == 0x0009CF, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_GetBtlPartyData_ReturnValue) == 0x0009D0, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_GetBtlPartyData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_IBattleCharaPanelCalcSupport_OutParam) == 0x000CF0, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_IBattleCharaPanelCalcSupport_OutParam' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000CF1, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000CF2, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000CF3, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000CF4, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_LessEqual_IntInt_ReturnValue_5) == 0x000CF5, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_LessEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_LessEqual_IntInt_ReturnValue_6) == 0x000CF6, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_LessEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, Temp_byte_Variable) == 0x000CF7, "Member 'BattleMain_C_BI_PartyPanelCtrl::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_CheckBattleDebugFlag2_ReturnValue_1) == 0x000CF8, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_CheckBattleDebugFlag2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_Not_PreBool_ReturnValue_1) == 0x000CF9, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, Temp_byte_Variable_1) == 0x000CFA, "Member 'BattleMain_C_BI_PartyPanelCtrl::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, Temp_bool_Variable) == 0x000CFB, "Member 'BattleMain_C_BI_PartyPanelCtrl::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, K2Node_Select_Default) == 0x000CFC, "Member 'BattleMain_C_BI_PartyPanelCtrl::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_BI_PartyPanelSetVisibility_retValue) == 0x000CFD, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_BI_PartyPanelSetVisibility_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_LessEqual_IntInt_ReturnValue_7) == 0x000CFE, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_LessEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_LessEqual_IntInt_ReturnValue_8) == 0x000CFF, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_LessEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_LessEqual_IntInt_ReturnValue_9) == 0x000D00, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_LessEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_LessEqual_IntInt_ReturnValue_10) == 0x000D01, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_LessEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_LessEqual_IntInt_ReturnValue_11) == 0x000D02, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_LessEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_Less_IntInt_ReturnValue) == 0x000D03, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_LessEqual_IntInt_ReturnValue_12) == 0x000D04, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_LessEqual_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000D05, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_LessEqual_IntInt_ReturnValue_13) == 0x000D06, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_LessEqual_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_Less_IntInt_ReturnValue_1) == 0x000D07, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_LessEqual_IntInt_ReturnValue_14) == 0x000D08, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_LessEqual_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_BooleanAND_ReturnValue_1) == 0x000D09, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelCtrl, CallFunc_BooleanAND_ReturnValue_2) == 0x000D0A, "Member 'BattleMain_C_BI_PartyPanelCtrl::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_PartyPanelUpDataChara_BtlPartyData
// 0x0330 (0x0330 - 0x0000)
struct BattleMain_C_BI_PartyPanelUpDataChara_BtlPartyData final
{
public:
	struct FBtlParty                              PartyData;                                         // 0x0000(0x0320)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          InOptionCheck;                                     // 0x0320(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0321(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetSkillDisplayPanelType_ReturnValue;     // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0323(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_PartyPanelUpDataChara_BtlPartyData) == 0x000010, "Wrong alignment on BattleMain_C_BI_PartyPanelUpDataChara_BtlPartyData");
static_assert(sizeof(BattleMain_C_BI_PartyPanelUpDataChara_BtlPartyData) == 0x000330, "Wrong size on BattleMain_C_BI_PartyPanelUpDataChara_BtlPartyData");
static_assert(offsetof(BattleMain_C_BI_PartyPanelUpDataChara_BtlPartyData, PartyData) == 0x000000, "Member 'BattleMain_C_BI_PartyPanelUpDataChara_BtlPartyData::PartyData' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelUpDataChara_BtlPartyData, InOptionCheck) == 0x000320, "Member 'BattleMain_C_BI_PartyPanelUpDataChara_BtlPartyData::InOptionCheck' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelUpDataChara_BtlPartyData, RetValue) == 0x000321, "Member 'BattleMain_C_BI_PartyPanelUpDataChara_BtlPartyData::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelUpDataChara_BtlPartyData, CallFunc_GetSkillDisplayPanelType_ReturnValue) == 0x000322, "Member 'BattleMain_C_BI_PartyPanelUpDataChara_BtlPartyData::CallFunc_GetSkillDisplayPanelType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PartyPanelUpDataChara_BtlPartyData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000323, "Member 'BattleMain_C_BI_PartyPanelUpDataChara_BtlPartyData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetOriginTransform
// 0x0060 (0x0060 - 0x0000)
struct BattleMain_C_BI_GetOriginTransform final
{
public:
	struct FTransform                             RetValue;                                          // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetOriginTransform_retValue;              // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetOriginTransform) == 0x000010, "Wrong alignment on BattleMain_C_BI_GetOriginTransform");
static_assert(sizeof(BattleMain_C_BI_GetOriginTransform) == 0x000060, "Wrong size on BattleMain_C_BI_GetOriginTransform");
static_assert(offsetof(BattleMain_C_BI_GetOriginTransform, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetOriginTransform::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetOriginTransform, CallFunc_GetOriginTransform_retValue) == 0x000030, "Member 'BattleMain_C_BI_GetOriginTransform::CallFunc_GetOriginTransform_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_TaskFactoryMakeTalkPartyInTask
// 0x0030 (0x0030 - 0x0000)
struct BattleMain_C_BI_TaskFactoryMakeTalkPartyInTask final
{
public:
	TArray<int32>                                 WaitTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeTalkPartyInTask_retValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_TaskFactoryMakeTalkPartyInTask) == 0x000008, "Wrong alignment on BattleMain_C_BI_TaskFactoryMakeTalkPartyInTask");
static_assert(sizeof(BattleMain_C_BI_TaskFactoryMakeTalkPartyInTask) == 0x000030, "Wrong size on BattleMain_C_BI_TaskFactoryMakeTalkPartyInTask");
static_assert(offsetof(BattleMain_C_BI_TaskFactoryMakeTalkPartyInTask, WaitTaskList) == 0x000000, "Member 'BattleMain_C_BI_TaskFactoryMakeTalkPartyInTask::WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskFactoryMakeTalkPartyInTask, ParentName) == 0x000010, "Member 'BattleMain_C_BI_TaskFactoryMakeTalkPartyInTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskFactoryMakeTalkPartyInTask, PartyIndex) == 0x000020, "Member 'BattleMain_C_BI_TaskFactoryMakeTalkPartyInTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskFactoryMakeTalkPartyInTask, RetValue) == 0x000024, "Member 'BattleMain_C_BI_TaskFactoryMakeTalkPartyInTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskFactoryMakeTalkPartyInTask, CallFunc_MakeTalkPartyInTask_retValue) == 0x000028, "Member 'BattleMain_C_BI_TaskFactoryMakeTalkPartyInTask::CallFunc_MakeTalkPartyInTask_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetTaskFactoryParentNameTaskCnt
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_BI_GetTaskFactoryParentNameTaskCnt final
{
public:
	class FString                                 ParentName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetParentNameTaskCnt_retCnt;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetTaskFactoryParentNameTaskCnt) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetTaskFactoryParentNameTaskCnt");
static_assert(sizeof(BattleMain_C_BI_GetTaskFactoryParentNameTaskCnt) == 0x000018, "Wrong size on BattleMain_C_BI_GetTaskFactoryParentNameTaskCnt");
static_assert(offsetof(BattleMain_C_BI_GetTaskFactoryParentNameTaskCnt, ParentName) == 0x000000, "Member 'BattleMain_C_BI_GetTaskFactoryParentNameTaskCnt::ParentName' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetTaskFactoryParentNameTaskCnt, RetValue) == 0x000010, "Member 'BattleMain_C_BI_GetTaskFactoryParentNameTaskCnt::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetTaskFactoryParentNameTaskCnt, CallFunc_GetParentNameTaskCnt_retCnt) == 0x000014, "Member 'BattleMain_C_BI_GetTaskFactoryParentNameTaskCnt::CallFunc_GetParentNameTaskCnt_retCnt' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_StockSelectSeqStart
// 0x0003 (0x0003 - 0x0000)
struct BattleMain_C_BI_StockSelectSeqStart final
{
public:
	E_BTL_PTYPNL_TYPE                             Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_StockSelectSeqStart) == 0x000001, "Wrong alignment on BattleMain_C_BI_StockSelectSeqStart");
static_assert(sizeof(BattleMain_C_BI_StockSelectSeqStart) == 0x000003, "Wrong size on BattleMain_C_BI_StockSelectSeqStart");
static_assert(offsetof(BattleMain_C_BI_StockSelectSeqStart, Type) == 0x000000, "Member 'BattleMain_C_BI_StockSelectSeqStart::Type' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_StockSelectSeqStart, RetValue) == 0x000001, "Member 'BattleMain_C_BI_StockSelectSeqStart::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_StockSelectSeqStart, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BattleMain_C_BI_StockSelectSeqStart::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_StockSelectGetResult
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_StockSelectGetResult final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IBattleSelectCharaPanelGetPartyIndexByIndex_OutPartyIndex; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_StockSelectGetResult) == 0x000004, "Wrong alignment on BattleMain_C_BI_StockSelectGetResult");
static_assert(sizeof(BattleMain_C_BI_StockSelectGetResult) == 0x000008, "Wrong size on BattleMain_C_BI_StockSelectGetResult");
static_assert(offsetof(BattleMain_C_BI_StockSelectGetResult, RetValue) == 0x000000, "Member 'BattleMain_C_BI_StockSelectGetResult::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_StockSelectGetResult, CallFunc_IBattleSelectCharaPanelGetPartyIndexByIndex_OutPartyIndex) == 0x000004, "Member 'BattleMain_C_BI_StockSelectGetResult::CallFunc_IBattleSelectCharaPanelGetPartyIndexByIndex_OutPartyIndex' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_StockSelectIsCancel
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_StockSelectIsCancel final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IBattleSelectCharaPanelIsCanseled_IsCanseled; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_StockSelectIsCancel) == 0x000001, "Wrong alignment on BattleMain_C_BI_StockSelectIsCancel");
static_assert(sizeof(BattleMain_C_BI_StockSelectIsCancel) == 0x000002, "Wrong size on BattleMain_C_BI_StockSelectIsCancel");
static_assert(offsetof(BattleMain_C_BI_StockSelectIsCancel, RetValue) == 0x000000, "Member 'BattleMain_C_BI_StockSelectIsCancel::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_StockSelectIsCancel, CallFunc_IBattleSelectCharaPanelIsCanseled_IsCanseled) == 0x000001, "Member 'BattleMain_C_BI_StockSelectIsCancel::CallFunc_IBattleSelectCharaPanelIsCanseled_IsCanseled' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_StockSelectIsFinished
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_StockSelectIsFinished final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IBattleSelectCharaPanelIsFinished_IsFinished; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_StockSelectIsFinished) == 0x000001, "Wrong alignment on BattleMain_C_BI_StockSelectIsFinished");
static_assert(sizeof(BattleMain_C_BI_StockSelectIsFinished) == 0x000002, "Wrong size on BattleMain_C_BI_StockSelectIsFinished");
static_assert(offsetof(BattleMain_C_BI_StockSelectIsFinished, RetValue) == 0x000000, "Member 'BattleMain_C_BI_StockSelectIsFinished::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_StockSelectIsFinished, CallFunc_IBattleSelectCharaPanelIsFinished_IsFinished) == 0x000001, "Member 'BattleMain_C_BI_StockSelectIsFinished::CallFunc_IBattleSelectCharaPanelIsFinished_IsFinished' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetPaticleManager
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetPaticleManager final
{
public:
	TScriptInterface<class IBPI_BattleParticleManager_C> RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetPaticleManager) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetPaticleManager");
static_assert(sizeof(BattleMain_C_BI_GetPaticleManager) == 0x000010, "Wrong size on BattleMain_C_BI_GetPaticleManager");
static_assert(offsetof(BattleMain_C_BI_GetPaticleManager, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetPaticleManager::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_TaskUnitModelAdd
// 0x0030 (0x0030 - 0x0000)
struct BattleMain_C_BI_TaskUnitModelAdd final
{
public:
	int32                                         TaskIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> InUnit;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_TaskUnitModelAdd) == 0x000008, "Wrong alignment on BattleMain_C_BI_TaskUnitModelAdd");
static_assert(sizeof(BattleMain_C_BI_TaskUnitModelAdd) == 0x000030, "Wrong size on BattleMain_C_BI_TaskUnitModelAdd");
static_assert(offsetof(BattleMain_C_BI_TaskUnitModelAdd, TaskIndex) == 0x000000, "Member 'BattleMain_C_BI_TaskUnitModelAdd::TaskIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskUnitModelAdd, InUnit) == 0x000008, "Member 'BattleMain_C_BI_TaskUnitModelAdd::InUnit' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskUnitModelAdd, RetValue) == 0x000018, "Member 'BattleMain_C_BI_TaskUnitModelAdd::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskUnitModelAdd, K2Node_DynamicCast_AsChara_Base) == 0x000020, "Member 'BattleMain_C_BI_TaskUnitModelAdd::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskUnitModelAdd, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleMain_C_BI_TaskUnitModelAdd::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_TaskUnitModelGet
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_BI_TaskUnitModelGet final
{
public:
	int32                                         TaskIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> RetValue;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           CallFunc_GetModelUnit_retValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_TaskUnitModelGet) == 0x000008, "Wrong alignment on BattleMain_C_BI_TaskUnitModelGet");
static_assert(sizeof(BattleMain_C_BI_TaskUnitModelGet) == 0x000020, "Wrong size on BattleMain_C_BI_TaskUnitModelGet");
static_assert(offsetof(BattleMain_C_BI_TaskUnitModelGet, TaskIndex) == 0x000000, "Member 'BattleMain_C_BI_TaskUnitModelGet::TaskIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskUnitModelGet, RetValue) == 0x000008, "Member 'BattleMain_C_BI_TaskUnitModelGet::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskUnitModelGet, CallFunc_GetModelUnit_retValue) == 0x000018, "Member 'BattleMain_C_BI_TaskUnitModelGet::CallFunc_GetModelUnit_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_TaskUnitModelIsExist
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_TaskUnitModelIsExist final
{
public:
	int32                                         TaskIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExist_retValue;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_TaskUnitModelIsExist) == 0x000004, "Wrong alignment on BattleMain_C_BI_TaskUnitModelIsExist");
static_assert(sizeof(BattleMain_C_BI_TaskUnitModelIsExist) == 0x000008, "Wrong size on BattleMain_C_BI_TaskUnitModelIsExist");
static_assert(offsetof(BattleMain_C_BI_TaskUnitModelIsExist, TaskIndex) == 0x000000, "Member 'BattleMain_C_BI_TaskUnitModelIsExist::TaskIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskUnitModelIsExist, RetValue) == 0x000004, "Member 'BattleMain_C_BI_TaskUnitModelIsExist::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskUnitModelIsExist, CallFunc_IsExist_retValue) == 0x000005, "Member 'BattleMain_C_BI_TaskUnitModelIsExist::CallFunc_IsExist_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SummonSelectGetResult
// 0x0710 (0x0710 - 0x0000)
struct BattleMain_C_BI_SummonSelectGetResult final
{
public:
	TArray<int32>                                 SrcList;                                           // 0x0000(0x0010)(Parm, OutParm)
	TArray<int32>                                 DstList;                                           // 0x0010(0x0010)(Parm, OutParm)
	struct FBtlCommand                            CallFunc_BI_GetNowCommand_ReturnValue;             // 0x0020(0x0010)()
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IBattleSummonGetBattleInParty_OutParam;   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IBattleSummonGetBattleInParty_OutParam_1; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBattlePartyIndexByNkmIndex_ReturnValue; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetCharaID_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmIndexByDevilID_ReturnValue;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartyData_self_CastInput;           // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBtlParty                              CallFunc_BI_GetPartyData_retValue;                 // 0x0070(0x0320)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartyData_self_CastInput_1;         // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A8[0x8];                                      // 0x03A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_BI_GetPartyData_retValue_1;               // 0x03B0(0x0320)()
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_SetHPMP_self_CastInput;                // 0x06D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetHPMP_retValue;                      // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x06E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBadStatus_ReturnValue;               // 0x06E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E3[0x5];                                      // 0x06E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_SetHPMP_self_CastInput_1;              // 0x06E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetHPMP_retValue_1;                    // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F9[0x3];                                      // 0x06F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x06FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0701(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0702(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SummonSelectGetResult) == 0x000010, "Wrong alignment on BattleMain_C_BI_SummonSelectGetResult");
static_assert(sizeof(BattleMain_C_BI_SummonSelectGetResult) == 0x000710, "Wrong size on BattleMain_C_BI_SummonSelectGetResult");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, SrcList) == 0x000000, "Member 'BattleMain_C_BI_SummonSelectGetResult::SrcList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, DstList) == 0x000010, "Member 'BattleMain_C_BI_SummonSelectGetResult::DstList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_BI_GetNowCommand_ReturnValue) == 0x000020, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_BI_GetNowCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, Temp_int_Variable) == 0x000030, "Member 'BattleMain_C_BI_SummonSelectGetResult::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000035, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_MakeLiteralByte_ReturnValue) == 0x00003C, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_IBattleSummonGetBattleInParty_OutParam) == 0x000040, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_IBattleSummonGetBattleInParty_OutParam' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_IBattleSummonGetBattleInParty_OutParam_1) == 0x000048, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_IBattleSummonGetBattleInParty_OutParam_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_Array_Add_ReturnValue_1) == 0x00004C, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_GetBattlePartyIndexByNkmIndex_ReturnValue) == 0x000050, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_GetBattlePartyIndexByNkmIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_Array_Add_ReturnValue_2) == 0x000054, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_BI_GetCharaID_ReturnValue) == 0x000058, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_BI_GetCharaID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_GetNkmIndexByDevilID_ReturnValue) == 0x00005C, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_GetNkmIndexByDevilID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_BI_GetPartyData_self_CastInput) == 0x000060, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_BI_GetPartyData_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_BI_GetPartyData_retValue) == 0x000070, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_BI_GetPartyData_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000390, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_BI_GetPartyData_self_CastInput_1) == 0x000398, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_BI_GetPartyData_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_BI_GetPartyData_retValue_1) == 0x0003B0, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_BI_GetPartyData_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_BI_SetHPMP_self_CastInput) == 0x0006D0, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_BI_SetHPMP_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_BI_SetHPMP_retValue) == 0x0006E0, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_BI_SetHPMP_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_Less_IntInt_ReturnValue) == 0x0006E1, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_CheckBadStatus_ReturnValue) == 0x0006E2, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_CheckBadStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_BI_SetHPMP_self_CastInput_1) == 0x0006E8, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_BI_SetHPMP_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_BI_SetHPMP_retValue_1) == 0x0006F8, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_BI_SetHPMP_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_Array_Add_ReturnValue_3) == 0x0006FC, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000700, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000701, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectGetResult, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000702, "Member 'BattleMain_C_BI_SummonSelectGetResult::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SummonSelectIsCancel
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_SummonSelectIsCancel final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IBattleSummonIsCanseled_OutIsCanseled;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SummonSelectIsCancel) == 0x000001, "Wrong alignment on BattleMain_C_BI_SummonSelectIsCancel");
static_assert(sizeof(BattleMain_C_BI_SummonSelectIsCancel) == 0x000002, "Wrong size on BattleMain_C_BI_SummonSelectIsCancel");
static_assert(offsetof(BattleMain_C_BI_SummonSelectIsCancel, RetValue) == 0x000000, "Member 'BattleMain_C_BI_SummonSelectIsCancel::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectIsCancel, CallFunc_IBattleSummonIsCanseled_OutIsCanseled) == 0x000001, "Member 'BattleMain_C_BI_SummonSelectIsCancel::CallFunc_IBattleSummonIsCanseled_OutIsCanseled' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SummonSelectIsFinished
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_SummonSelectIsFinished final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IBattleSummonCharaPanelIsFinished_IsFinished; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SummonSelectIsFinished) == 0x000001, "Wrong alignment on BattleMain_C_BI_SummonSelectIsFinished");
static_assert(sizeof(BattleMain_C_BI_SummonSelectIsFinished) == 0x000002, "Wrong size on BattleMain_C_BI_SummonSelectIsFinished");
static_assert(offsetof(BattleMain_C_BI_SummonSelectIsFinished, RetValue) == 0x000000, "Member 'BattleMain_C_BI_SummonSelectIsFinished::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectIsFinished, CallFunc_IBattleSummonCharaPanelIsFinished_IsFinished) == 0x000001, "Member 'BattleMain_C_BI_SummonSelectIsFinished::CallFunc_IBattleSummonCharaPanelIsFinished_IsFinished' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SummonSelectSeqStart
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_BI_SummonSelectSeqStart final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UseSkillId;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlCommand                            CallFunc_BI_GetNowCommand_ReturnValue;             // 0x000C(0x0010)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SummonSelectSeqStart) == 0x000004, "Wrong alignment on BattleMain_C_BI_SummonSelectSeqStart");
static_assert(sizeof(BattleMain_C_BI_SummonSelectSeqStart) == 0x000020, "Wrong size on BattleMain_C_BI_SummonSelectSeqStart");
static_assert(offsetof(BattleMain_C_BI_SummonSelectSeqStart, PartyIndex) == 0x000000, "Member 'BattleMain_C_BI_SummonSelectSeqStart::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectSeqStart, RetValue) == 0x000004, "Member 'BattleMain_C_BI_SummonSelectSeqStart::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectSeqStart, UseSkillId) == 0x000008, "Member 'BattleMain_C_BI_SummonSelectSeqStart::UseSkillId' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectSeqStart, CallFunc_BI_GetNowCommand_ReturnValue) == 0x00000C, "Member 'BattleMain_C_BI_SummonSelectSeqStart::CallFunc_BI_GetNowCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SummonSelectSeqStart, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001C, "Member 'BattleMain_C_BI_SummonSelectSeqStart::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SummonSelectClose
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_SummonSelectClose final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SummonSelectClose) == 0x000001, "Wrong alignment on BattleMain_C_BI_SummonSelectClose");
static_assert(sizeof(BattleMain_C_BI_SummonSelectClose) == 0x000001, "Wrong size on BattleMain_C_BI_SummonSelectClose");
static_assert(offsetof(BattleMain_C_BI_SummonSelectClose, RetValue) == 0x000000, "Member 'BattleMain_C_BI_SummonSelectClose::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_TaskUnitModelDelete
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_TaskUnitModelDelete final
{
public:
	int32                                         PecID;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_TaskUnitModelDelete) == 0x000004, "Wrong alignment on BattleMain_C_BI_TaskUnitModelDelete");
static_assert(sizeof(BattleMain_C_BI_TaskUnitModelDelete) == 0x000008, "Wrong size on BattleMain_C_BI_TaskUnitModelDelete");
static_assert(offsetof(BattleMain_C_BI_TaskUnitModelDelete, PecID) == 0x000000, "Member 'BattleMain_C_BI_TaskUnitModelDelete::PecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskUnitModelDelete, RetValue) == 0x000004, "Member 'BattleMain_C_BI_TaskUnitModelDelete::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_StockSelectClose
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_StockSelectClose final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_StockSelectClose) == 0x000001, "Wrong alignment on BattleMain_C_BI_StockSelectClose");
static_assert(sizeof(BattleMain_C_BI_StockSelectClose) == 0x000001, "Wrong size on BattleMain_C_BI_StockSelectClose");
static_assert(offsetof(BattleMain_C_BI_StockSelectClose, RetValue) == 0x000000, "Member 'BattleMain_C_BI_StockSelectClose::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_TaskFactoryAddCamRailTask
// 0x0048 (0x0048 - 0x0000)
struct BattleMain_C_BI_TaskFactoryAddCamRailTask final
{
public:
	TArray<int32>                                 WiatTaskList;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ParentName;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CAM_TYPE                                Type;                                              // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InterpWait;                                        // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ManualName;                                        // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          StopWait;                                          // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaWait;                                         // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCamRailTask_retPecID;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_TaskFactoryAddCamRailTask) == 0x000008, "Wrong alignment on BattleMain_C_BI_TaskFactoryAddCamRailTask");
static_assert(sizeof(BattleMain_C_BI_TaskFactoryAddCamRailTask) == 0x000048, "Wrong size on BattleMain_C_BI_TaskFactoryAddCamRailTask");
static_assert(offsetof(BattleMain_C_BI_TaskFactoryAddCamRailTask, WiatTaskList) == 0x000000, "Member 'BattleMain_C_BI_TaskFactoryAddCamRailTask::WiatTaskList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskFactoryAddCamRailTask, ParentName) == 0x000010, "Member 'BattleMain_C_BI_TaskFactoryAddCamRailTask::ParentName' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskFactoryAddCamRailTask, PartyIndex) == 0x000020, "Member 'BattleMain_C_BI_TaskFactoryAddCamRailTask::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskFactoryAddCamRailTask, Type) == 0x000024, "Member 'BattleMain_C_BI_TaskFactoryAddCamRailTask::Type' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskFactoryAddCamRailTask, InterpWait) == 0x000025, "Member 'BattleMain_C_BI_TaskFactoryAddCamRailTask::InterpWait' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskFactoryAddCamRailTask, ManualName) == 0x000028, "Member 'BattleMain_C_BI_TaskFactoryAddCamRailTask::ManualName' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskFactoryAddCamRailTask, StopWait) == 0x000038, "Member 'BattleMain_C_BI_TaskFactoryAddCamRailTask::StopWait' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskFactoryAddCamRailTask, DeltaWait) == 0x00003C, "Member 'BattleMain_C_BI_TaskFactoryAddCamRailTask::DeltaWait' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskFactoryAddCamRailTask, RetValue) == 0x000040, "Member 'BattleMain_C_BI_TaskFactoryAddCamRailTask::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskFactoryAddCamRailTask, CallFunc_AddCamRailTask_retPecID) == 0x000044, "Member 'BattleMain_C_BI_TaskFactoryAddCamRailTask::CallFunc_AddCamRailTask_retPecID' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_BattleIsFinished
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_BattleIsFinished final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_BattleIsFinished) == 0x000001, "Wrong alignment on BattleMain_C_BI_BattleIsFinished");
static_assert(sizeof(BattleMain_C_BI_BattleIsFinished) == 0x000002, "Wrong size on BattleMain_C_BI_BattleIsFinished");
static_assert(offsetof(BattleMain_C_BI_BattleIsFinished, RetValue) == 0x000000, "Member 'BattleMain_C_BI_BattleIsFinished::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_BattleIsFinished, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BattleMain_C_BI_BattleIsFinished::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_TaskUnitManagerAddReserveDestroy
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_BI_TaskUnitManagerAddReserveDestroy final
{
public:
	TScriptInterface<class IBPI_CharaBaseAccessor_C> InUnit;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_TaskUnitManagerAddReserveDestroy) == 0x000008, "Wrong alignment on BattleMain_C_BI_TaskUnitManagerAddReserveDestroy");
static_assert(sizeof(BattleMain_C_BI_TaskUnitManagerAddReserveDestroy) == 0x000028, "Wrong size on BattleMain_C_BI_TaskUnitManagerAddReserveDestroy");
static_assert(offsetof(BattleMain_C_BI_TaskUnitManagerAddReserveDestroy, InUnit) == 0x000000, "Member 'BattleMain_C_BI_TaskUnitManagerAddReserveDestroy::InUnit' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskUnitManagerAddReserveDestroy, RetValue) == 0x000010, "Member 'BattleMain_C_BI_TaskUnitManagerAddReserveDestroy::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskUnitManagerAddReserveDestroy, K2Node_DynamicCast_AsChara_Base) == 0x000018, "Member 'BattleMain_C_BI_TaskUnitManagerAddReserveDestroy::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskUnitManagerAddReserveDestroy, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BattleMain_C_BI_TaskUnitManagerAddReserveDestroy::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetTaskFactory
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetTaskFactory final
{
public:
	TScriptInterface<class IBPI_BattleTaskFactory_C> RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetTaskFactory) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetTaskFactory");
static_assert(sizeof(BattleMain_C_BI_GetTaskFactory) == 0x000010, "Wrong size on BattleMain_C_BI_GetTaskFactory");
static_assert(offsetof(BattleMain_C_BI_GetTaskFactory, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetTaskFactory::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetRadialForce
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_GetRadialForce final
{
public:
	class URadialForceComponent*                  RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetRadialForce) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetRadialForce");
static_assert(sizeof(BattleMain_C_BI_GetRadialForce) == 0x000008, "Wrong size on BattleMain_C_BI_GetRadialForce");
static_assert(offsetof(BattleMain_C_BI_GetRadialForce, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetRadialForce::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_EffectManagerGetResidentAssetByName
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_BI_EffectManagerGetResidentAssetByName final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        CallFunc_GetResidentAssetByName_retValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_EffectManagerGetResidentAssetByName) == 0x000008, "Wrong alignment on BattleMain_C_BI_EffectManagerGetResidentAssetByName");
static_assert(sizeof(BattleMain_C_BI_EffectManagerGetResidentAssetByName) == 0x000018, "Wrong size on BattleMain_C_BI_EffectManagerGetResidentAssetByName");
static_assert(offsetof(BattleMain_C_BI_EffectManagerGetResidentAssetByName, Param_Name) == 0x000000, "Member 'BattleMain_C_BI_EffectManagerGetResidentAssetByName::Param_Name' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_EffectManagerGetResidentAssetByName, RetValue) == 0x000008, "Member 'BattleMain_C_BI_EffectManagerGetResidentAssetByName::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_EffectManagerGetResidentAssetByName, CallFunc_GetResidentAssetByName_retValue) == 0x000010, "Member 'BattleMain_C_BI_EffectManagerGetResidentAssetByName::CallFunc_GetResidentAssetByName_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetPostProcessCtrl
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetPostProcessCtrl final
{
public:
	TScriptInterface<class IBPI_BattlePostProcessCtrl_C> RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetPostProcessCtrl) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetPostProcessCtrl");
static_assert(sizeof(BattleMain_C_BI_GetPostProcessCtrl) == 0x000010, "Wrong size on BattleMain_C_BI_GetPostProcessCtrl");
static_assert(offsetof(BattleMain_C_BI_GetPostProcessCtrl, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetPostProcessCtrl::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetRandom2
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetRandom2 final
{
public:
	int32                                         Min;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRandom2_retValue;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetRandom2) == 0x000004, "Wrong alignment on BattleMain_C_BI_GetRandom2");
static_assert(sizeof(BattleMain_C_BI_GetRandom2) == 0x000010, "Wrong size on BattleMain_C_BI_GetRandom2");
static_assert(offsetof(BattleMain_C_BI_GetRandom2, Min) == 0x000000, "Member 'BattleMain_C_BI_GetRandom2::Min' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetRandom2, Max) == 0x000004, "Member 'BattleMain_C_BI_GetRandom2::Max' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetRandom2, RetValue) == 0x000008, "Member 'BattleMain_C_BI_GetRandom2::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetRandom2, CallFunc_GetRandom2_retValue) == 0x00000C, "Member 'BattleMain_C_BI_GetRandom2::CallFunc_GetRandom2_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetRandom
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_BI_GetRandom final
{
public:
	int32                                         Max;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRandom_retValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetRandom) == 0x000004, "Wrong alignment on BattleMain_C_BI_GetRandom");
static_assert(sizeof(BattleMain_C_BI_GetRandom) == 0x00000C, "Wrong size on BattleMain_C_BI_GetRandom");
static_assert(offsetof(BattleMain_C_BI_GetRandom, Max) == 0x000000, "Member 'BattleMain_C_BI_GetRandom::Max' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetRandom, RetValue) == 0x000004, "Member 'BattleMain_C_BI_GetRandom::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetRandom, CallFunc_GetRandom_retValue) == 0x000008, "Member 'BattleMain_C_BI_GetRandom::CallFunc_GetRandom_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetRandomF2
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetRandomF2 final
{
public:
	float                                         Min;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RetValue;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRandomF2_retValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetRandomF2) == 0x000004, "Wrong alignment on BattleMain_C_BI_GetRandomF2");
static_assert(sizeof(BattleMain_C_BI_GetRandomF2) == 0x000010, "Wrong size on BattleMain_C_BI_GetRandomF2");
static_assert(offsetof(BattleMain_C_BI_GetRandomF2, Min) == 0x000000, "Member 'BattleMain_C_BI_GetRandomF2::Min' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetRandomF2, Max) == 0x000004, "Member 'BattleMain_C_BI_GetRandomF2::Max' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetRandomF2, RetValue) == 0x000008, "Member 'BattleMain_C_BI_GetRandomF2::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetRandomF2, CallFunc_GetRandomF2_retValue) == 0x00000C, "Member 'BattleMain_C_BI_GetRandomF2::CallFunc_GetRandomF2_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetRandomF
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_BI_GetRandomF final
{
public:
	float                                         Max;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RetValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRandomF_retValue;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetRandomF) == 0x000004, "Wrong alignment on BattleMain_C_BI_GetRandomF");
static_assert(sizeof(BattleMain_C_BI_GetRandomF) == 0x00000C, "Wrong size on BattleMain_C_BI_GetRandomF");
static_assert(offsetof(BattleMain_C_BI_GetRandomF, Max) == 0x000000, "Member 'BattleMain_C_BI_GetRandomF::Max' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetRandomF, RetValue) == 0x000004, "Member 'BattleMain_C_BI_GetRandomF::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetRandomF, CallFunc_GetRandomF_retValue) == 0x000008, "Member 'BattleMain_C_BI_GetRandomF::CallFunc_GetRandomF_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_BattleCameraIsNoMove
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_BI_BattleCameraIsNoMove final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleCamera_C*                        CallFunc_GetCameraAccessor_retValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNoMove_retValue;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_BattleCameraIsNoMove) == 0x000008, "Wrong alignment on BattleMain_C_BI_BattleCameraIsNoMove");
static_assert(sizeof(BattleMain_C_BI_BattleCameraIsNoMove) == 0x000018, "Wrong size on BattleMain_C_BI_BattleCameraIsNoMove");
static_assert(offsetof(BattleMain_C_BI_BattleCameraIsNoMove, RetValue) == 0x000000, "Member 'BattleMain_C_BI_BattleCameraIsNoMove::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_BattleCameraIsNoMove, CallFunc_GetCameraAccessor_retValue) == 0x000008, "Member 'BattleMain_C_BI_BattleCameraIsNoMove::CallFunc_GetCameraAccessor_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_BattleCameraIsNoMove, CallFunc_IsNoMove_retValue) == 0x000010, "Member 'BattleMain_C_BI_BattleCameraIsNoMove::CallFunc_IsNoMove_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_AddResultDataForTalk
// 0x0330 (0x0330 - 0x0000)
struct BattleMain_C_BI_AddResultDataForTalk final
{
public:
	struct FBtlParty                              Party;                                             // 0x0000(0x0320)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          RetValue;                                          // 0x0320(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_AddResultDataForTalk) == 0x000010, "Wrong alignment on BattleMain_C_BI_AddResultDataForTalk");
static_assert(sizeof(BattleMain_C_BI_AddResultDataForTalk) == 0x000330, "Wrong size on BattleMain_C_BI_AddResultDataForTalk");
static_assert(offsetof(BattleMain_C_BI_AddResultDataForTalk, Party) == 0x000000, "Member 'BattleMain_C_BI_AddResultDataForTalk::Party' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_AddResultDataForTalk, RetValue) == 0x000320, "Member 'BattleMain_C_BI_AddResultDataForTalk::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetBattleSoundManager
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetBattleSoundManager final
{
public:
	TScriptInterface<class IBPI_BattleSoundManager_C> RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetBattleSoundManager) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetBattleSoundManager");
static_assert(sizeof(BattleMain_C_BI_GetBattleSoundManager) == 0x000010, "Wrong size on BattleMain_C_BI_GetBattleSoundManager");
static_assert(offsetof(BattleMain_C_BI_GetBattleSoundManager, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetBattleSoundManager::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetBattleEventUnitList
// 0x0078 (0x0078 - 0x0000)
struct BattleMain_C_BI_GetBattleEventUnitList final
{
public:
	TArray<TScriptInterface<class IBPI_CharaBaseAccessor_C>> RetValue;                                          // 0x0000(0x0010)(Parm, OutParm)
	TArray<TScriptInterface<class IBPI_CharaBaseAccessor_C>> Lo_Out;                                            // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class ACharaBase_C*>                   Lo_Tmp;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_Array_Add_NewItem_CastInput;              // 0x0050(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACharaBase_C*>                   CallFunc_GetEventModelList_retValue;               // 0x0068(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleMain_C_BI_GetBattleEventUnitList) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetBattleEventUnitList");
static_assert(sizeof(BattleMain_C_BI_GetBattleEventUnitList) == 0x000078, "Wrong size on BattleMain_C_BI_GetBattleEventUnitList");
static_assert(offsetof(BattleMain_C_BI_GetBattleEventUnitList, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetBattleEventUnitList::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetBattleEventUnitList, Lo_Out) == 0x000010, "Member 'BattleMain_C_BI_GetBattleEventUnitList::Lo_Out' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetBattleEventUnitList, Lo_Tmp) == 0x000020, "Member 'BattleMain_C_BI_GetBattleEventUnitList::Lo_Tmp' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetBattleEventUnitList, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BattleMain_C_BI_GetBattleEventUnitList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetBattleEventUnitList, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BattleMain_C_BI_GetBattleEventUnitList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetBattleEventUnitList, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BattleMain_C_BI_GetBattleEventUnitList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetBattleEventUnitList, CallFunc_Array_Get_Item) == 0x000040, "Member 'BattleMain_C_BI_GetBattleEventUnitList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetBattleEventUnitList, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BattleMain_C_BI_GetBattleEventUnitList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetBattleEventUnitList, CallFunc_Array_Add_NewItem_CastInput) == 0x000050, "Member 'BattleMain_C_BI_GetBattleEventUnitList::CallFunc_Array_Add_NewItem_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetBattleEventUnitList, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'BattleMain_C_BI_GetBattleEventUnitList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetBattleEventUnitList, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BattleMain_C_BI_GetBattleEventUnitList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetBattleEventUnitList, CallFunc_GetEventModelList_retValue) == 0x000068, "Member 'BattleMain_C_BI_GetBattleEventUnitList::CallFunc_GetEventModelList_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_BattleCameraCurrentForce
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_BattleCameraCurrentForce final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_BattleCameraCurrentForce) == 0x000004, "Wrong alignment on BattleMain_C_BI_BattleCameraCurrentForce");
static_assert(sizeof(BattleMain_C_BI_BattleCameraCurrentForce) == 0x000008, "Wrong size on BattleMain_C_BI_BattleCameraCurrentForce");
static_assert(offsetof(BattleMain_C_BI_BattleCameraCurrentForce, BlendTime) == 0x000000, "Member 'BattleMain_C_BI_BattleCameraCurrentForce::BlendTime' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_BattleCameraCurrentForce, RetValue) == 0x000004, "Member 'BattleMain_C_BI_BattleCameraCurrentForce::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI EffectManagerGetResidentSkillActionEffectByName
// 0x0078 (0x0078 - 0x0000)
struct BattleMain_C_BI_EffectManagerGetResidentSkillActionEffectByName final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillActionEffect                     RetVal;                                            // 0x0008(0x0038)(Parm, OutParm)
	struct FSkillActionEffect                     CallFunc_GetResidentSkillActionEffectByName_retValue; // 0x0040(0x0038)()
};
static_assert(alignof(BattleMain_C_BI_EffectManagerGetResidentSkillActionEffectByName) == 0x000008, "Wrong alignment on BattleMain_C_BI_EffectManagerGetResidentSkillActionEffectByName");
static_assert(sizeof(BattleMain_C_BI_EffectManagerGetResidentSkillActionEffectByName) == 0x000078, "Wrong size on BattleMain_C_BI_EffectManagerGetResidentSkillActionEffectByName");
static_assert(offsetof(BattleMain_C_BI_EffectManagerGetResidentSkillActionEffectByName, Param_Name) == 0x000000, "Member 'BattleMain_C_BI_EffectManagerGetResidentSkillActionEffectByName::Param_Name' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_EffectManagerGetResidentSkillActionEffectByName, RetVal) == 0x000008, "Member 'BattleMain_C_BI_EffectManagerGetResidentSkillActionEffectByName::RetVal' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_EffectManagerGetResidentSkillActionEffectByName, CallFunc_GetResidentSkillActionEffectByName_retValue) == 0x000040, "Member 'BattleMain_C_BI_EffectManagerGetResidentSkillActionEffectByName::CallFunc_GetResidentSkillActionEffectByName_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_ClearSaveCommandPage
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_ClearSaveCommandPage final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_ClearSaveCommandPage) == 0x000001, "Wrong alignment on BattleMain_C_BI_ClearSaveCommandPage");
static_assert(sizeof(BattleMain_C_BI_ClearSaveCommandPage) == 0x000001, "Wrong size on BattleMain_C_BI_ClearSaveCommandPage");
static_assert(offsetof(BattleMain_C_BI_ClearSaveCommandPage, RetValue) == 0x000000, "Member 'BattleMain_C_BI_ClearSaveCommandPage::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetSaveCommandPage
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_GetSaveCommandPage final
{
public:
	E_BTL_UI_COMM_STEP                            RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMM_STEP                            CallFunc_GetSaveCommandPage_retValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetSaveCommandPage) == 0x000001, "Wrong alignment on BattleMain_C_BI_GetSaveCommandPage");
static_assert(sizeof(BattleMain_C_BI_GetSaveCommandPage) == 0x000002, "Wrong size on BattleMain_C_BI_GetSaveCommandPage");
static_assert(offsetof(BattleMain_C_BI_GetSaveCommandPage, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetSaveCommandPage::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetSaveCommandPage, CallFunc_GetSaveCommandPage_retValue) == 0x000001, "Member 'BattleMain_C_BI_GetSaveCommandPage::CallFunc_GetSaveCommandPage_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetSaveCommandPage
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_SetSaveCommandPage final
{
public:
	E_BTL_UI_COMM_STEP                            Command;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SetSaveCommandPage) == 0x000001, "Wrong alignment on BattleMain_C_BI_SetSaveCommandPage");
static_assert(sizeof(BattleMain_C_BI_SetSaveCommandPage) == 0x000002, "Wrong size on BattleMain_C_BI_SetSaveCommandPage");
static_assert(offsetof(BattleMain_C_BI_SetSaveCommandPage, Command) == 0x000000, "Member 'BattleMain_C_BI_SetSaveCommandPage::Command' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetSaveCommandPage, RetValue) == 0x000001, "Member 'BattleMain_C_BI_SetSaveCommandPage::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_InfoMessShowByCommonMess
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_InfoMessShowByCommonMess final
{
public:
	int32                                         MessID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_InfoMessShowByCommonMess) == 0x000004, "Wrong alignment on BattleMain_C_BI_InfoMessShowByCommonMess");
static_assert(sizeof(BattleMain_C_BI_InfoMessShowByCommonMess) == 0x000008, "Wrong size on BattleMain_C_BI_InfoMessShowByCommonMess");
static_assert(offsetof(BattleMain_C_BI_InfoMessShowByCommonMess, MessID) == 0x000000, "Member 'BattleMain_C_BI_InfoMessShowByCommonMess::MessID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_InfoMessShowByCommonMess, RetValue) == 0x000004, "Member 'BattleMain_C_BI_InfoMessShowByCommonMess::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_InfoMessHide
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_InfoMessHide final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_InfoMessHide) == 0x000001, "Wrong alignment on BattleMain_C_BI_InfoMessHide");
static_assert(sizeof(BattleMain_C_BI_InfoMessHide) == 0x000001, "Wrong size on BattleMain_C_BI_InfoMessHide");
static_assert(offsetof(BattleMain_C_BI_InfoMessHide, RetValue) == 0x000000, "Member 'BattleMain_C_BI_InfoMessHide::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_InfoMessExtAct
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_BI_InfoMessExtAct final
{
public:
	E_BTL_EXTRA_ACTION                            MessageIndex;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ProgramStr;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          RetValue;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_InfoMessExtAct) == 0x000008, "Wrong alignment on BattleMain_C_BI_InfoMessExtAct");
static_assert(sizeof(BattleMain_C_BI_InfoMessExtAct) == 0x000020, "Wrong size on BattleMain_C_BI_InfoMessExtAct");
static_assert(offsetof(BattleMain_C_BI_InfoMessExtAct, MessageIndex) == 0x000000, "Member 'BattleMain_C_BI_InfoMessExtAct::MessageIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_InfoMessExtAct, ProgramStr) == 0x000008, "Member 'BattleMain_C_BI_InfoMessExtAct::ProgramStr' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_InfoMessExtAct, RetValue) == 0x000018, "Member 'BattleMain_C_BI_InfoMessExtAct::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_InfoMessShowBySkill
// 0x0038 (0x0038 - 0x0000)
struct BattleMain_C_BI_InfoMessShowBySkill final
{
public:
	int32                                         SkillId;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SrcActorName;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 DstActorName;                                      // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsMaster;                                          // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OverwriteID;                                       // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_InfoMessShowBySkill) == 0x000008, "Wrong alignment on BattleMain_C_BI_InfoMessShowBySkill");
static_assert(sizeof(BattleMain_C_BI_InfoMessShowBySkill) == 0x000038, "Wrong size on BattleMain_C_BI_InfoMessShowBySkill");
static_assert(offsetof(BattleMain_C_BI_InfoMessShowBySkill, SkillId) == 0x000000, "Member 'BattleMain_C_BI_InfoMessShowBySkill::SkillId' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_InfoMessShowBySkill, SrcActorName) == 0x000008, "Member 'BattleMain_C_BI_InfoMessShowBySkill::SrcActorName' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_InfoMessShowBySkill, DstActorName) == 0x000018, "Member 'BattleMain_C_BI_InfoMessShowBySkill::DstActorName' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_InfoMessShowBySkill, IsMaster) == 0x000028, "Member 'BattleMain_C_BI_InfoMessShowBySkill::IsMaster' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_InfoMessShowBySkill, OverwriteID) == 0x00002C, "Member 'BattleMain_C_BI_InfoMessShowBySkill::OverwriteID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_InfoMessShowBySkill, RetValue) == 0x000030, "Member 'BattleMain_C_BI_InfoMessShowBySkill::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_IsHugeBattle
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_BI_IsHugeBattle final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DevID;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EncountIsRoomBoss_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_IsHugeBattle) == 0x000004, "Wrong alignment on BattleMain_C_BI_IsHugeBattle");
static_assert(sizeof(BattleMain_C_BI_IsHugeBattle) == 0x00000C, "Wrong size on BattleMain_C_BI_IsHugeBattle");
static_assert(offsetof(BattleMain_C_BI_IsHugeBattle, RetValue) == 0x000000, "Member 'BattleMain_C_BI_IsHugeBattle::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_IsHugeBattle, DevID) == 0x000004, "Member 'BattleMain_C_BI_IsHugeBattle::DevID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_IsHugeBattle, CallFunc_EncountIsRoomBoss_ReturnValue) == 0x000008, "Member 'BattleMain_C_BI_IsHugeBattle::CallFunc_EncountIsRoomBoss_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_EncountIsNoDeadEffect
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_EncountIsNoDeadEffect final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_EncountIsNoDeadEffect) == 0x000001, "Wrong alignment on BattleMain_C_BI_EncountIsNoDeadEffect");
static_assert(sizeof(BattleMain_C_BI_EncountIsNoDeadEffect) == 0x000001, "Wrong size on BattleMain_C_BI_EncountIsNoDeadEffect");
static_assert(offsetof(BattleMain_C_BI_EncountIsNoDeadEffect, RetValue) == 0x000000, "Member 'BattleMain_C_BI_EncountIsNoDeadEffect::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetMapOutChara
// 0x0138 (0x0138 - 0x0000)
struct BattleMain_C_BI_GetMapOutChara final
{
public:
	TMap<E_BTL_CHAR_TYPE, TScriptInterface<class IBPI_CharaBaseAccessor_C>> RetValue;                                          // 0x0000(0x0050)(Parm, OutParm)
	TMap<E_BTL_CHAR_TYPE, TScriptInterface<class IBPI_CharaBaseAccessor_C>> Lo_Out;                                            // 0x0050(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_BTL_CHAR_TYPE, TScriptInterface<class IBPI_CharaBaseAccessor_C>> K2Node_MakeVariable_MakeVariableOutput;            // 0x00B0(0x0050)()
	TArray<E_BTL_CHAR_TYPE>                       CallFunc_Map_Keys_Keys;                            // 0x0100(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CHAR_TYPE                               CallFunc_Array_Get_Item;                           // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_Map_Find_Value;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_Map_Add_Value_CastInput;                  // 0x0128(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetMapOutChara) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetMapOutChara");
static_assert(sizeof(BattleMain_C_BI_GetMapOutChara) == 0x000138, "Wrong size on BattleMain_C_BI_GetMapOutChara");
static_assert(offsetof(BattleMain_C_BI_GetMapOutChara, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetMapOutChara::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetMapOutChara, Lo_Out) == 0x000050, "Member 'BattleMain_C_BI_GetMapOutChara::Lo_Out' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetMapOutChara, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BattleMain_C_BI_GetMapOutChara::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetMapOutChara, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BattleMain_C_BI_GetMapOutChara::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetMapOutChara, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BattleMain_C_BI_GetMapOutChara::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetMapOutChara, K2Node_MakeVariable_MakeVariableOutput) == 0x0000B0, "Member 'BattleMain_C_BI_GetMapOutChara::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetMapOutChara, CallFunc_Map_Keys_Keys) == 0x000100, "Member 'BattleMain_C_BI_GetMapOutChara::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetMapOutChara, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'BattleMain_C_BI_GetMapOutChara::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetMapOutChara, CallFunc_Array_Get_Item) == 0x000114, "Member 'BattleMain_C_BI_GetMapOutChara::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetMapOutChara, CallFunc_Less_IntInt_ReturnValue) == 0x000115, "Member 'BattleMain_C_BI_GetMapOutChara::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetMapOutChara, CallFunc_Map_Find_Value) == 0x000118, "Member 'BattleMain_C_BI_GetMapOutChara::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetMapOutChara, CallFunc_Map_Find_ReturnValue) == 0x000120, "Member 'BattleMain_C_BI_GetMapOutChara::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetMapOutChara, CallFunc_Map_Add_Value_CastInput) == 0x000128, "Member 'BattleMain_C_BI_GetMapOutChara::CallFunc_Map_Add_Value_CastInput' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetBattlePlayRate
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_SetBattlePlayRate final
{
public:
	float                                         PlayRate;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SetBattlePlayRate) == 0x000004, "Wrong alignment on BattleMain_C_BI_SetBattlePlayRate");
static_assert(sizeof(BattleMain_C_BI_SetBattlePlayRate) == 0x000008, "Wrong size on BattleMain_C_BI_SetBattlePlayRate");
static_assert(offsetof(BattleMain_C_BI_SetBattlePlayRate, PlayRate) == 0x000000, "Member 'BattleMain_C_BI_SetBattlePlayRate::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetBattlePlayRate, NoUse) == 0x000004, "Member 'BattleMain_C_BI_SetBattlePlayRate::NoUse' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetBattlePlayRate
// 0x0004 (0x0004 - 0x0000)
struct BattleMain_C_BI_GetBattlePlayRate final
{
public:
	float                                         PlayRate;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetBattlePlayRate) == 0x000004, "Wrong alignment on BattleMain_C_BI_GetBattlePlayRate");
static_assert(sizeof(BattleMain_C_BI_GetBattlePlayRate) == 0x000004, "Wrong size on BattleMain_C_BI_GetBattlePlayRate");
static_assert(offsetof(BattleMain_C_BI_GetBattlePlayRate, PlayRate) == 0x000000, "Member 'BattleMain_C_BI_GetBattlePlayRate::PlayRate' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_DestroyBattleCamera
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_DestroyBattleCamera final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_DestroyBattleCamera) == 0x000001, "Wrong alignment on BattleMain_C_BI_DestroyBattleCamera");
static_assert(sizeof(BattleMain_C_BI_DestroyBattleCamera) == 0x000001, "Wrong size on BattleMain_C_BI_DestroyBattleCamera");
static_assert(offsetof(BattleMain_C_BI_DestroyBattleCamera, RetValue) == 0x000000, "Member 'BattleMain_C_BI_DestroyBattleCamera::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UICommandGetMenuStep
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_UICommandGetMenuStep final
{
public:
	E_BTL_UI_COMM_STEP                            RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMM_STEP                            CallFunc_TopStep_TopStep;                          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_UICommandGetMenuStep) == 0x000001, "Wrong alignment on BattleMain_C_BI_UICommandGetMenuStep");
static_assert(sizeof(BattleMain_C_BI_UICommandGetMenuStep) == 0x000002, "Wrong size on BattleMain_C_BI_UICommandGetMenuStep");
static_assert(offsetof(BattleMain_C_BI_UICommandGetMenuStep, RetValue) == 0x000000, "Member 'BattleMain_C_BI_UICommandGetMenuStep::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UICommandGetMenuStep, CallFunc_TopStep_TopStep) == 0x000001, "Member 'BattleMain_C_BI_UICommandGetMenuStep::CallFunc_TopStep_TopStep' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetApplyResultData
// 0x0070 (0x0070 - 0x0000)
struct BattleMain_C_BI_GetApplyResultData final
{
public:
	struct FBtlApllyResultData                    RetValue;                                          // 0x0000(0x0070)(Parm, OutParm)
};
static_assert(alignof(BattleMain_C_BI_GetApplyResultData) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetApplyResultData");
static_assert(sizeof(BattleMain_C_BI_GetApplyResultData) == 0x000070, "Wrong size on BattleMain_C_BI_GetApplyResultData");
static_assert(offsetof(BattleMain_C_BI_GetApplyResultData, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetApplyResultData::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetFinishedState
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_GetFinishedState final
{
public:
	E_BTL_FINISHED_STATE                          State;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SaveSlot;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetFinishedState) == 0x000004, "Wrong alignment on BattleMain_C_BI_GetFinishedState");
static_assert(sizeof(BattleMain_C_BI_GetFinishedState) == 0x000008, "Wrong size on BattleMain_C_BI_GetFinishedState");
static_assert(offsetof(BattleMain_C_BI_GetFinishedState, State) == 0x000000, "Member 'BattleMain_C_BI_GetFinishedState::State' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetFinishedState, SaveSlot) == 0x000004, "Member 'BattleMain_C_BI_GetFinishedState::SaveSlot' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI EffectManagerGetResidentBstEffect
// 0x0078 (0x0078 - 0x0000)
struct BattleMain_C_BI_EffectManagerGetResidentBstEffect final
{
public:
	E_BAD_STATUS                                  bst;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_BAD_STATUS_APPEAR                     Apper;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleResidentEffect                  RetValue;                                          // 0x0008(0x0038)(Parm, OutParm, HasGetValueTypeHash)
	struct FBattleResidentEffect                  CallFunc_GetBstAsset_retValue;                     // 0x0040(0x0038)(HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_EffectManagerGetResidentBstEffect) == 0x000008, "Wrong alignment on BattleMain_C_BI_EffectManagerGetResidentBstEffect");
static_assert(sizeof(BattleMain_C_BI_EffectManagerGetResidentBstEffect) == 0x000078, "Wrong size on BattleMain_C_BI_EffectManagerGetResidentBstEffect");
static_assert(offsetof(BattleMain_C_BI_EffectManagerGetResidentBstEffect, bst) == 0x000000, "Member 'BattleMain_C_BI_EffectManagerGetResidentBstEffect::bst' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_EffectManagerGetResidentBstEffect, Apper) == 0x000001, "Member 'BattleMain_C_BI_EffectManagerGetResidentBstEffect::Apper' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_EffectManagerGetResidentBstEffect, RetValue) == 0x000008, "Member 'BattleMain_C_BI_EffectManagerGetResidentBstEffect::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_EffectManagerGetResidentBstEffect, CallFunc_GetBstAsset_retValue) == 0x000040, "Member 'BattleMain_C_BI_EffectManagerGetResidentBstEffect::CallFunc_GetBstAsset_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_TaskUnitManagerAddKeepRefUnit
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_BI_TaskUnitManagerAddKeepRefUnit final
{
public:
	TScriptInterface<class IBPI_CharaBaseAccessor_C> InUnit;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_TaskUnitManagerAddKeepRefUnit) == 0x000008, "Wrong alignment on BattleMain_C_BI_TaskUnitManagerAddKeepRefUnit");
static_assert(sizeof(BattleMain_C_BI_TaskUnitManagerAddKeepRefUnit) == 0x000028, "Wrong size on BattleMain_C_BI_TaskUnitManagerAddKeepRefUnit");
static_assert(offsetof(BattleMain_C_BI_TaskUnitManagerAddKeepRefUnit, InUnit) == 0x000000, "Member 'BattleMain_C_BI_TaskUnitManagerAddKeepRefUnit::InUnit' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskUnitManagerAddKeepRefUnit, RetValue) == 0x000010, "Member 'BattleMain_C_BI_TaskUnitManagerAddKeepRefUnit::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskUnitManagerAddKeepRefUnit, K2Node_DynamicCast_AsChara_Base) == 0x000018, "Member 'BattleMain_C_BI_TaskUnitManagerAddKeepRefUnit::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TaskUnitManagerAddKeepRefUnit, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BattleMain_C_BI_TaskUnitManagerAddKeepRefUnit::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_DebugTimeStart
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_DebugTimeStart final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_DebugTimeStart) == 0x000001, "Wrong alignment on BattleMain_C_BI_DebugTimeStart");
static_assert(sizeof(BattleMain_C_BI_DebugTimeStart) == 0x000001, "Wrong size on BattleMain_C_BI_DebugTimeStart");
static_assert(offsetof(BattleMain_C_BI_DebugTimeStart, RetValue) == 0x000000, "Member 'BattleMain_C_BI_DebugTimeStart::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_DebugTimeEnd
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_DebugTimeEnd final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_DebugTimeEnd) == 0x000001, "Wrong alignment on BattleMain_C_BI_DebugTimeEnd");
static_assert(sizeof(BattleMain_C_BI_DebugTimeEnd) == 0x000001, "Wrong size on BattleMain_C_BI_DebugTimeEnd");
static_assert(offsetof(BattleMain_C_BI_DebugTimeEnd, RetValue) == 0x000000, "Member 'BattleMain_C_BI_DebugTimeEnd::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_AutoSeqPause
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_AutoSeqPause final
{
public:
	bool                                          Pause;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_AutoSeqPause) == 0x000001, "Wrong alignment on BattleMain_C_BI_AutoSeqPause");
static_assert(sizeof(BattleMain_C_BI_AutoSeqPause) == 0x000002, "Wrong size on BattleMain_C_BI_AutoSeqPause");
static_assert(offsetof(BattleMain_C_BI_AutoSeqPause, Pause) == 0x000000, "Member 'BattleMain_C_BI_AutoSeqPause::Pause' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_AutoSeqPause, RetValue) == 0x000001, "Member 'BattleMain_C_BI_AutoSeqPause::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_DebugJsonLogTalkSuccess
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_DebugJsonLogTalkSuccess final
{
public:
	int32                                         DevilID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_DebugJsonLogTalkSuccess) == 0x000004, "Wrong alignment on BattleMain_C_BI_DebugJsonLogTalkSuccess");
static_assert(sizeof(BattleMain_C_BI_DebugJsonLogTalkSuccess) == 0x000008, "Wrong size on BattleMain_C_BI_DebugJsonLogTalkSuccess");
static_assert(offsetof(BattleMain_C_BI_DebugJsonLogTalkSuccess, DevilID) == 0x000000, "Member 'BattleMain_C_BI_DebugJsonLogTalkSuccess::DevilID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_DebugJsonLogTalkSuccess, RetValue) == 0x000004, "Member 'BattleMain_C_BI_DebugJsonLogTalkSuccess::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_TargetSelectPause
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_TargetSelectPause final
{
public:
	bool                                          IsPause;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_TargetSelectPause) == 0x000001, "Wrong alignment on BattleMain_C_BI_TargetSelectPause");
static_assert(sizeof(BattleMain_C_BI_TargetSelectPause) == 0x000002, "Wrong size on BattleMain_C_BI_TargetSelectPause");
static_assert(offsetof(BattleMain_C_BI_TargetSelectPause, IsPause) == 0x000000, "Member 'BattleMain_C_BI_TargetSelectPause::IsPause' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TargetSelectPause, RetValue) == 0x000001, "Member 'BattleMain_C_BI_TargetSelectPause::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetPartyUtilInterface
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetPartyUtilInterface final
{
public:
	TScriptInterface<class IBPI_PTUtilInterface>  RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetPartyUtilInterface) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetPartyUtilInterface");
static_assert(sizeof(BattleMain_C_BI_GetPartyUtilInterface) == 0x000010, "Wrong size on BattleMain_C_BI_GetPartyUtilInterface");
static_assert(offsetof(BattleMain_C_BI_GetPartyUtilInterface, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetPartyUtilInterface::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetPartyMemInterface
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetPartyMemInterface final
{
public:
	TScriptInterface<class IBPI_PTMemDataInterface> RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetPartyMemInterface) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetPartyMemInterface");
static_assert(sizeof(BattleMain_C_BI_GetPartyMemInterface) == 0x000010, "Wrong size on BattleMain_C_BI_GetPartyMemInterface");
static_assert(offsetof(BattleMain_C_BI_GetPartyMemInterface, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetPartyMemInterface::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetMainInterface
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetMainInterface final
{
public:
	TScriptInterface<class IBPI_MainInterface>    RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetMainInterface) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetMainInterface");
static_assert(sizeof(BattleMain_C_BI_GetMainInterface) == 0x000010, "Wrong size on BattleMain_C_BI_GetMainInterface");
static_assert(offsetof(BattleMain_C_BI_GetMainInterface, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetMainInterface::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetPartyFlagInterface
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetPartyFlagInterface final
{
public:
	TScriptInterface<class IBPI_PTFlagInterface>  RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetPartyFlagInterface) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetPartyFlagInterface");
static_assert(sizeof(BattleMain_C_BI_GetPartyFlagInterface) == 0x000010, "Wrong size on BattleMain_C_BI_GetPartyFlagInterface");
static_assert(offsetof(BattleMain_C_BI_GetPartyFlagInterface, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetPartyFlagInterface::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_StartBlendOverride
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_StartBlendOverride final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_StartBlendOverride) == 0x000004, "Wrong alignment on BattleMain_C_BI_StartBlendOverride");
static_assert(sizeof(BattleMain_C_BI_StartBlendOverride) == 0x000008, "Wrong size on BattleMain_C_BI_StartBlendOverride");
static_assert(offsetof(BattleMain_C_BI_StartBlendOverride, BlendTime) == 0x000000, "Member 'BattleMain_C_BI_StartBlendOverride::BlendTime' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_StartBlendOverride, RetValue) == 0x000004, "Member 'BattleMain_C_BI_StartBlendOverride::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_EndBlendOverride
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_EndBlendOverride final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_EndBlendOverride) == 0x000001, "Wrong alignment on BattleMain_C_BI_EndBlendOverride");
static_assert(sizeof(BattleMain_C_BI_EndBlendOverride) == 0x000001, "Wrong size on BattleMain_C_BI_EndBlendOverride");
static_assert(offsetof(BattleMain_C_BI_EndBlendOverride, RetValue) == 0x000000, "Member 'BattleMain_C_BI_EndBlendOverride::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_StartFovyOverride
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_StartFovyOverride final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_StartFovyOverride) == 0x000004, "Wrong alignment on BattleMain_C_BI_StartFovyOverride");
static_assert(sizeof(BattleMain_C_BI_StartFovyOverride) == 0x000008, "Wrong size on BattleMain_C_BI_StartFovyOverride");
static_assert(offsetof(BattleMain_C_BI_StartFovyOverride, BlendTime) == 0x000000, "Member 'BattleMain_C_BI_StartFovyOverride::BlendTime' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_StartFovyOverride, RetValue) == 0x000004, "Member 'BattleMain_C_BI_StartFovyOverride::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_EndFovyOverride
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_EndFovyOverride final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_EndFovyOverride) == 0x000001, "Wrong alignment on BattleMain_C_BI_EndFovyOverride");
static_assert(sizeof(BattleMain_C_BI_EndFovyOverride) == 0x000001, "Wrong size on BattleMain_C_BI_EndFovyOverride");
static_assert(offsetof(BattleMain_C_BI_EndFovyOverride, RetValue) == 0x000000, "Member 'BattleMain_C_BI_EndFovyOverride::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetRailCam
// 0x0060 (0x0060 - 0x0000)
struct BattleMain_C_BI_SetRailCam final
{
public:
	class ABP_RailActor_C*                        SplineActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EyeTarget;                                         // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableCharaDitherCtrl;                             // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigRailPlayInfo                       CallFunc_GetPlayInfo_m_PlayInfo;                   // 0x0024(0x0034)(NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_SetRailCam) == 0x000008, "Wrong alignment on BattleMain_C_BI_SetRailCam");
static_assert(sizeof(BattleMain_C_BI_SetRailCam) == 0x000060, "Wrong size on BattleMain_C_BI_SetRailCam");
static_assert(offsetof(BattleMain_C_BI_SetRailCam, SplineActor) == 0x000000, "Member 'BattleMain_C_BI_SetRailCam::SplineActor' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetRailCam, EyeTarget) == 0x000008, "Member 'BattleMain_C_BI_SetRailCam::EyeTarget' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetRailCam, TargetActor) == 0x000018, "Member 'BattleMain_C_BI_SetRailCam::TargetActor' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetRailCam, EnableCharaDitherCtrl) == 0x000020, "Member 'BattleMain_C_BI_SetRailCam::EnableCharaDitherCtrl' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetRailCam, RetValue) == 0x000021, "Member 'BattleMain_C_BI_SetRailCam::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetRailCam, CallFunc_GetPlayInfo_m_PlayInfo) == 0x000024, "Member 'BattleMain_C_BI_SetRailCam::CallFunc_GetPlayInfo_m_PlayInfo' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetRailCam, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000058, "Member 'BattleMain_C_BI_SetRailCam::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_TargetSelectGetCurrentTargetType
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_TargetSelectGetCurrentTargetType final
{
public:
	E_SKILL_TARGET                                NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                CallFunc_GetCurrentTargetType_TargetType;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_TargetSelectGetCurrentTargetType) == 0x000001, "Wrong alignment on BattleMain_C_BI_TargetSelectGetCurrentTargetType");
static_assert(sizeof(BattleMain_C_BI_TargetSelectGetCurrentTargetType) == 0x000002, "Wrong size on BattleMain_C_BI_TargetSelectGetCurrentTargetType");
static_assert(offsetof(BattleMain_C_BI_TargetSelectGetCurrentTargetType, NewParam) == 0x000000, "Member 'BattleMain_C_BI_TargetSelectGetCurrentTargetType::NewParam' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TargetSelectGetCurrentTargetType, CallFunc_GetCurrentTargetType_TargetType) == 0x000001, "Member 'BattleMain_C_BI_TargetSelectGetCurrentTargetType::CallFunc_GetCurrentTargetType_TargetType' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetBattleTargetSelect
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetBattleTargetSelect final
{
public:
	TScriptInterface<class IBPI_BattleTargetSelect_C> BPI;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetBattleTargetSelect) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetBattleTargetSelect");
static_assert(sizeof(BattleMain_C_BI_GetBattleTargetSelect) == 0x000010, "Wrong size on BattleMain_C_BI_GetBattleTargetSelect");
static_assert(offsetof(BattleMain_C_BI_GetBattleTargetSelect, BPI) == 0x000000, "Member 'BattleMain_C_BI_GetBattleTargetSelect::BPI' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_TargetSelectStartSelect
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_TargetSelectStartSelect final
{
public:
	int32                                         InPartyIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCounter;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsInvTarget;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCursorEnable;                                    // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0007(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_TargetSelectStartSelect) == 0x000004, "Wrong alignment on BattleMain_C_BI_TargetSelectStartSelect");
static_assert(sizeof(BattleMain_C_BI_TargetSelectStartSelect) == 0x000008, "Wrong size on BattleMain_C_BI_TargetSelectStartSelect");
static_assert(offsetof(BattleMain_C_BI_TargetSelectStartSelect, InPartyIndex) == 0x000000, "Member 'BattleMain_C_BI_TargetSelectStartSelect::InPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TargetSelectStartSelect, IsCounter) == 0x000004, "Member 'BattleMain_C_BI_TargetSelectStartSelect::IsCounter' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TargetSelectStartSelect, IsInvTarget) == 0x000005, "Member 'BattleMain_C_BI_TargetSelectStartSelect::IsInvTarget' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TargetSelectStartSelect, IsCursorEnable) == 0x000006, "Member 'BattleMain_C_BI_TargetSelectStartSelect::IsCursorEnable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TargetSelectStartSelect, RetValue) == 0x000007, "Member 'BattleMain_C_BI_TargetSelectStartSelect::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_TargetSelectSetTargetAll
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_TargetSelectSetTargetAll final
{
public:
	E_BTL_SIDE                                    Inside;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_TargetSelectSetTargetAll) == 0x000001, "Wrong alignment on BattleMain_C_BI_TargetSelectSetTargetAll");
static_assert(sizeof(BattleMain_C_BI_TargetSelectSetTargetAll) == 0x000002, "Wrong size on BattleMain_C_BI_TargetSelectSetTargetAll");
static_assert(offsetof(BattleMain_C_BI_TargetSelectSetTargetAll, Inside) == 0x000000, "Member 'BattleMain_C_BI_TargetSelectSetTargetAll::Inside' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_TargetSelectSetTargetAll, RetValue) == 0x000001, "Member 'BattleMain_C_BI_TargetSelectSetTargetAll::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetPTUnitIniterface
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetPTUnitIniterface final
{
public:
	TScriptInterface<class IBPI_PTBPInterface_C>  RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetPTUnitIniterface) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetPTUnitIniterface");
static_assert(sizeof(BattleMain_C_BI_GetPTUnitIniterface) == 0x000010, "Wrong size on BattleMain_C_BI_GetPTUnitIniterface");
static_assert(offsetof(BattleMain_C_BI_GetPTUnitIniterface, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetPTUnitIniterface::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetPartyBadStatus
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetPartyBadStatus final
{
public:
	TScriptInterface<class IBPI_PTBadStatusInterface> RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetPartyBadStatus) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetPartyBadStatus");
static_assert(sizeof(BattleMain_C_BI_GetPartyBadStatus) == 0x000010, "Wrong size on BattleMain_C_BI_GetPartyBadStatus");
static_assert(offsetof(BattleMain_C_BI_GetPartyBadStatus, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetPartyBadStatus::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_InfoMessSetProgramStr
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_BI_InfoMessSetProgramStr final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 String;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_InfoMessSetProgramStr) == 0x000008, "Wrong alignment on BattleMain_C_BI_InfoMessSetProgramStr");
static_assert(sizeof(BattleMain_C_BI_InfoMessSetProgramStr) == 0x000020, "Wrong size on BattleMain_C_BI_InfoMessSetProgramStr");
static_assert(offsetof(BattleMain_C_BI_InfoMessSetProgramStr, Param_Index) == 0x000000, "Member 'BattleMain_C_BI_InfoMessSetProgramStr::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_InfoMessSetProgramStr, String) == 0x000008, "Member 'BattleMain_C_BI_InfoMessSetProgramStr::String' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_InfoMessSetProgramStr, RetValue) == 0x000018, "Member 'BattleMain_C_BI_InfoMessSetProgramStr::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetBossCtrl
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_BI_GetBossCtrl final
{
public:
	TScriptInterface<class IBPI_BattleBossCtrl_C> RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleBossCtrl_C> K2Node_DynamicCast_AsBPI_Battle_Boss_Ctrl;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetBossCtrl) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetBossCtrl");
static_assert(sizeof(BattleMain_C_BI_GetBossCtrl) == 0x000028, "Wrong size on BattleMain_C_BI_GetBossCtrl");
static_assert(offsetof(BattleMain_C_BI_GetBossCtrl, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetBossCtrl::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetBossCtrl, K2Node_DynamicCast_AsBPI_Battle_Boss_Ctrl) == 0x000010, "Member 'BattleMain_C_BI_GetBossCtrl::K2Node_DynamicCast_AsBPI_Battle_Boss_Ctrl' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetBossCtrl, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BattleMain_C_BI_GetBossCtrl::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_OverrideCameraTargetSocket
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_BI_OverrideCameraTargetSocket final
{
public:
	class FName                                   OverrideSocket;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_OverrideCameraTargetSocket) == 0x000004, "Wrong alignment on BattleMain_C_BI_OverrideCameraTargetSocket");
static_assert(sizeof(BattleMain_C_BI_OverrideCameraTargetSocket) == 0x00000C, "Wrong size on BattleMain_C_BI_OverrideCameraTargetSocket");
static_assert(offsetof(BattleMain_C_BI_OverrideCameraTargetSocket, OverrideSocket) == 0x000000, "Member 'BattleMain_C_BI_OverrideCameraTargetSocket::OverrideSocket' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_OverrideCameraTargetSocket, NoUse) == 0x000008, "Member 'BattleMain_C_BI_OverrideCameraTargetSocket::NoUse' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_FieldPlayerReplace
// 0x0030 (0x0030 - 0x0000)
struct BattleMain_C_BI_FieldPlayerReplace final
{
public:
	TArray<int32>                                 InDevilList;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          RetValue;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleField_C>    CallFunc_GetBattleField_retValue;                  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_ReplacePlayer_NoUse;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_FieldPlayerReplace) == 0x000008, "Wrong alignment on BattleMain_C_BI_FieldPlayerReplace");
static_assert(sizeof(BattleMain_C_BI_FieldPlayerReplace) == 0x000030, "Wrong size on BattleMain_C_BI_FieldPlayerReplace");
static_assert(offsetof(BattleMain_C_BI_FieldPlayerReplace, InDevilList) == 0x000000, "Member 'BattleMain_C_BI_FieldPlayerReplace::InDevilList' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_FieldPlayerReplace, RetValue) == 0x000010, "Member 'BattleMain_C_BI_FieldPlayerReplace::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_FieldPlayerReplace, CallFunc_GetBattleField_retValue) == 0x000018, "Member 'BattleMain_C_BI_FieldPlayerReplace::CallFunc_GetBattleField_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_FieldPlayerReplace, CallFunc_BI_ReplacePlayer_NoUse) == 0x000028, "Member 'BattleMain_C_BI_FieldPlayerReplace::CallFunc_BI_ReplacePlayer_NoUse' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_FieldPlayerReplaceFinished
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_BI_FieldPlayerReplaceFinished final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleField_C>    CallFunc_GetBattleField_retValue;                  // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsReplaceFinished_IsFinished;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_FieldPlayerReplaceFinished) == 0x000008, "Wrong alignment on BattleMain_C_BI_FieldPlayerReplaceFinished");
static_assert(sizeof(BattleMain_C_BI_FieldPlayerReplaceFinished) == 0x000020, "Wrong size on BattleMain_C_BI_FieldPlayerReplaceFinished");
static_assert(offsetof(BattleMain_C_BI_FieldPlayerReplaceFinished, RetValue) == 0x000000, "Member 'BattleMain_C_BI_FieldPlayerReplaceFinished::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_FieldPlayerReplaceFinished, CallFunc_GetBattleField_retValue) == 0x000008, "Member 'BattleMain_C_BI_FieldPlayerReplaceFinished::CallFunc_GetBattleField_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_FieldPlayerReplaceFinished, CallFunc_BI_IsReplaceFinished_IsFinished) == 0x000018, "Member 'BattleMain_C_BI_FieldPlayerReplaceFinished::CallFunc_BI_IsReplaceFinished_IsFinished' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_FieldPlayerReplaceResult
// 0x00B0 (0x00B0 - 0x0000)
struct BattleMain_C_BI_FieldPlayerReplaceResult final
{
public:
	TMap<int32, struct FTransform>                RetValue;                                          // 0x0000(0x0050)(Parm, OutParm)
	TScriptInterface<class IBPI_BattleField_C>    CallFunc_GetBattleField_retValue;                  // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TMap<int32, struct FTransform>                CallFunc_BI_GetPlayerReplaceResult_TransformMap;   // 0x0060(0x0050)()
};
static_assert(alignof(BattleMain_C_BI_FieldPlayerReplaceResult) == 0x000008, "Wrong alignment on BattleMain_C_BI_FieldPlayerReplaceResult");
static_assert(sizeof(BattleMain_C_BI_FieldPlayerReplaceResult) == 0x0000B0, "Wrong size on BattleMain_C_BI_FieldPlayerReplaceResult");
static_assert(offsetof(BattleMain_C_BI_FieldPlayerReplaceResult, RetValue) == 0x000000, "Member 'BattleMain_C_BI_FieldPlayerReplaceResult::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_FieldPlayerReplaceResult, CallFunc_GetBattleField_retValue) == 0x000050, "Member 'BattleMain_C_BI_FieldPlayerReplaceResult::CallFunc_GetBattleField_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_FieldPlayerReplaceResult, CallFunc_BI_GetPlayerReplaceResult_TransformMap) == 0x000060, "Member 'BattleMain_C_BI_FieldPlayerReplaceResult::CallFunc_BI_GetPlayerReplaceResult_TransformMap' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_FieldEnemyAddSpawnPost
// 0x00D0 (0x00D0 - 0x0000)
struct BattleMain_C_BI_FieldEnemyAddSpawnPost final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RetValue;                                          // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleField_C>    CallFunc_GetBattleField_retValue;                  // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_BI_GetAddPost_Output;                     // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_FieldEnemyAddSpawnPost) == 0x000010, "Wrong alignment on BattleMain_C_BI_FieldEnemyAddSpawnPost");
static_assert(sizeof(BattleMain_C_BI_FieldEnemyAddSpawnPost) == 0x0000D0, "Wrong size on BattleMain_C_BI_FieldEnemyAddSpawnPost");
static_assert(offsetof(BattleMain_C_BI_FieldEnemyAddSpawnPost, Param_Index) == 0x000000, "Member 'BattleMain_C_BI_FieldEnemyAddSpawnPost::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_FieldEnemyAddSpawnPost, RetValue) == 0x000010, "Member 'BattleMain_C_BI_FieldEnemyAddSpawnPost::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_FieldEnemyAddSpawnPost, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BattleMain_C_BI_FieldEnemyAddSpawnPost::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_FieldEnemyAddSpawnPost, CallFunc_GetBattleField_retValue) == 0x000070, "Member 'BattleMain_C_BI_FieldEnemyAddSpawnPost::CallFunc_GetBattleField_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_FieldEnemyAddSpawnPost, CallFunc_BI_GetAddPost_Output) == 0x000080, "Member 'BattleMain_C_BI_FieldEnemyAddSpawnPost::CallFunc_BI_GetAddPost_Output' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_FieldEnemyAddSpawnPost, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000090, "Member 'BattleMain_C_BI_FieldEnemyAddSpawnPost::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_FieldEnemyAddSpawnPost, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BattleMain_C_BI_FieldEnemyAddSpawnPost::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetMapCameraActor
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_GetMapCameraActor final
{
public:
	class AActor*                                 RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetMapCameraActor) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetMapCameraActor");
static_assert(sizeof(BattleMain_C_BI_GetMapCameraActor) == 0x000008, "Wrong size on BattleMain_C_BI_GetMapCameraActor");
static_assert(offsetof(BattleMain_C_BI_GetMapCameraActor, RetValue) == 0x000000, "Member 'BattleMain_C_BI_GetMapCameraActor::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_FieldGetComandBoxTransform
// 0x0070 (0x0070 - 0x0000)
struct BattleMain_C_BI_FieldGetComandBoxTransform final
{
public:
	struct FTransform                             RetValue;                                          // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleField_C>    CallFunc_GetBattleField_retValue;                  // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_BI_GetCommandBoxTransform_Trans;          // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_FieldGetComandBoxTransform) == 0x000010, "Wrong alignment on BattleMain_C_BI_FieldGetComandBoxTransform");
static_assert(sizeof(BattleMain_C_BI_FieldGetComandBoxTransform) == 0x000070, "Wrong size on BattleMain_C_BI_FieldGetComandBoxTransform");
static_assert(offsetof(BattleMain_C_BI_FieldGetComandBoxTransform, RetValue) == 0x000000, "Member 'BattleMain_C_BI_FieldGetComandBoxTransform::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_FieldGetComandBoxTransform, CallFunc_GetBattleField_retValue) == 0x000030, "Member 'BattleMain_C_BI_FieldGetComandBoxTransform::CallFunc_GetBattleField_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_FieldGetComandBoxTransform, CallFunc_BI_GetCommandBoxTransform_Trans) == 0x000040, "Member 'BattleMain_C_BI_FieldGetComandBoxTransform::CallFunc_BI_GetCommandBoxTransform_Trans' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UIInfomationShow
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_UIInfomationShow final
{
public:
	int32                                         SkillId;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UIInfomationShow) == 0x000004, "Wrong alignment on BattleMain_C_BI_UIInfomationShow");
static_assert(sizeof(BattleMain_C_BI_UIInfomationShow) == 0x000008, "Wrong size on BattleMain_C_BI_UIInfomationShow");
static_assert(offsetof(BattleMain_C_BI_UIInfomationShow, SkillId) == 0x000000, "Member 'BattleMain_C_BI_UIInfomationShow::SkillId' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UIInfomationShow, RetValue) == 0x000004, "Member 'BattleMain_C_BI_UIInfomationShow::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UIInfomationHide
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_UIInfomationHide final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UIInfomationHide) == 0x000001, "Wrong alignment on BattleMain_C_BI_UIInfomationHide");
static_assert(sizeof(BattleMain_C_BI_UIInfomationHide) == 0x000001, "Wrong size on BattleMain_C_BI_UIInfomationHide");
static_assert(offsetof(BattleMain_C_BI_UIInfomationHide, RetValue) == 0x000000, "Member 'BattleMain_C_BI_UIInfomationHide::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UIInfomationEndSeq
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_UIInfomationEndSeq final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UIInfomationEndSeq) == 0x000001, "Wrong alignment on BattleMain_C_BI_UIInfomationEndSeq");
static_assert(sizeof(BattleMain_C_BI_UIInfomationEndSeq) == 0x000001, "Wrong size on BattleMain_C_BI_UIInfomationEndSeq");
static_assert(offsetof(BattleMain_C_BI_UIInfomationEndSeq, RetValue) == 0x000000, "Member 'BattleMain_C_BI_UIInfomationEndSeq::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UIInfomationIsAnimationExcuting
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_UIInfomationIsAnimationExcuting final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UIInfomationIsAnimationExcuting) == 0x000001, "Wrong alignment on BattleMain_C_BI_UIInfomationIsAnimationExcuting");
static_assert(sizeof(BattleMain_C_BI_UIInfomationIsAnimationExcuting) == 0x000001, "Wrong size on BattleMain_C_BI_UIInfomationIsAnimationExcuting");
static_assert(offsetof(BattleMain_C_BI_UIInfomationIsAnimationExcuting, RetValue) == 0x000000, "Member 'BattleMain_C_BI_UIInfomationIsAnimationExcuting::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetCharAction
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_BI_GetCharAction final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharAction_C> RetValue;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCharAction_success;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleCharAction_C*                    CallFunc_GetCharAction_retValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetCharAction) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetCharAction");
static_assert(sizeof(BattleMain_C_BI_GetCharAction) == 0x000028, "Wrong size on BattleMain_C_BI_GetCharAction");
static_assert(offsetof(BattleMain_C_BI_GetCharAction, Success) == 0x000000, "Member 'BattleMain_C_BI_GetCharAction::Success' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetCharAction, RetValue) == 0x000008, "Member 'BattleMain_C_BI_GetCharAction::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetCharAction, CallFunc_GetCharAction_success) == 0x000018, "Member 'BattleMain_C_BI_GetCharAction::CallFunc_GetCharAction_success' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetCharAction, CallFunc_GetCharAction_retValue) == 0x000020, "Member 'BattleMain_C_BI_GetCharAction::CallFunc_GetCharAction_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_AddAIFlag
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_AddAIFlag final
{
public:
	uint8                                         Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ret;                                               // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_AddAIFlag) == 0x000004, "Wrong alignment on BattleMain_C_BI_AddAIFlag");
static_assert(sizeof(BattleMain_C_BI_AddAIFlag) == 0x000008, "Wrong size on BattleMain_C_BI_AddAIFlag");
static_assert(offsetof(BattleMain_C_BI_AddAIFlag, Flag) == 0x000000, "Member 'BattleMain_C_BI_AddAIFlag::Flag' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_AddAIFlag, Ret) == 0x000004, "Member 'BattleMain_C_BI_AddAIFlag::Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_DelAIFlag
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_DelAIFlag final
{
public:
	uint8                                         Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ret;                                               // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_DelAIFlag) == 0x000004, "Wrong alignment on BattleMain_C_BI_DelAIFlag");
static_assert(sizeof(BattleMain_C_BI_DelAIFlag) == 0x000008, "Wrong size on BattleMain_C_BI_DelAIFlag");
static_assert(offsetof(BattleMain_C_BI_DelAIFlag, Flag) == 0x000000, "Member 'BattleMain_C_BI_DelAIFlag::Flag' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_DelAIFlag, Ret) == 0x000004, "Member 'BattleMain_C_BI_DelAIFlag::Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_CheckAIFlag
// 0x0003 (0x0003 - 0x0000)
struct BattleMain_C_BI_CheckAIFlag final
{
public:
	uint8                                         Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAIFlag_ret_Value;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_CheckAIFlag) == 0x000001, "Wrong alignment on BattleMain_C_BI_CheckAIFlag");
static_assert(sizeof(BattleMain_C_BI_CheckAIFlag) == 0x000003, "Wrong size on BattleMain_C_BI_CheckAIFlag");
static_assert(offsetof(BattleMain_C_BI_CheckAIFlag, Flag) == 0x000000, "Member 'BattleMain_C_BI_CheckAIFlag::Flag' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CheckAIFlag, Ret) == 0x000001, "Member 'BattleMain_C_BI_CheckAIFlag::Ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CheckAIFlag, CallFunc_CheckAIFlag_ret_Value) == 0x000002, "Member 'BattleMain_C_BI_CheckAIFlag::CallFunc_CheckAIFlag_ret_Value' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_ClearAIFlag
// 0x0004 (0x0004 - 0x0000)
struct BattleMain_C_BI_ClearAIFlag final
{
public:
	int32                                         Ret;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_ClearAIFlag) == 0x000004, "Wrong alignment on BattleMain_C_BI_ClearAIFlag");
static_assert(sizeof(BattleMain_C_BI_ClearAIFlag) == 0x000004, "Wrong size on BattleMain_C_BI_ClearAIFlag");
static_assert(offsetof(BattleMain_C_BI_ClearAIFlag, Ret) == 0x000000, "Member 'BattleMain_C_BI_ClearAIFlag::Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetAIValue
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_BI_SetAIValue final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ret;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_SetAIValue) == 0x000004, "Wrong alignment on BattleMain_C_BI_SetAIValue");
static_assert(sizeof(BattleMain_C_BI_SetAIValue) == 0x00000C, "Wrong size on BattleMain_C_BI_SetAIValue");
static_assert(offsetof(BattleMain_C_BI_SetAIValue, Value) == 0x000000, "Member 'BattleMain_C_BI_SetAIValue::Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetAIValue, Param_Index) == 0x000004, "Member 'BattleMain_C_BI_SetAIValue::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetAIValue, Ret) == 0x000008, "Member 'BattleMain_C_BI_SetAIValue::Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetAIValue
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_BI_GetAIValue final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAIValue_retValue;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetAIValue) == 0x000004, "Wrong alignment on BattleMain_C_BI_GetAIValue");
static_assert(sizeof(BattleMain_C_BI_GetAIValue) == 0x00000C, "Wrong size on BattleMain_C_BI_GetAIValue");
static_assert(offsetof(BattleMain_C_BI_GetAIValue, Param_Index) == 0x000000, "Member 'BattleMain_C_BI_GetAIValue::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetAIValue, Value) == 0x000004, "Member 'BattleMain_C_BI_GetAIValue::Value' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetAIValue, CallFunc_GetAIValue_retValue) == 0x000008, "Member 'BattleMain_C_BI_GetAIValue::CallFunc_GetAIValue_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_DelAIValue
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_DelAIValue final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ret;                                               // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_DelAIValue) == 0x000004, "Wrong alignment on BattleMain_C_BI_DelAIValue");
static_assert(sizeof(BattleMain_C_BI_DelAIValue) == 0x000008, "Wrong size on BattleMain_C_BI_DelAIValue");
static_assert(offsetof(BattleMain_C_BI_DelAIValue, Param_Index) == 0x000000, "Member 'BattleMain_C_BI_DelAIValue::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_DelAIValue, Ret) == 0x000004, "Member 'BattleMain_C_BI_DelAIValue::Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_ClearAIValueAll
// 0x0004 (0x0004 - 0x0000)
struct BattleMain_C_BI_ClearAIValueAll final
{
public:
	int32                                         Ret;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_ClearAIValueAll) == 0x000004, "Wrong alignment on BattleMain_C_BI_ClearAIValueAll");
static_assert(sizeof(BattleMain_C_BI_ClearAIValueAll) == 0x000004, "Wrong size on BattleMain_C_BI_ClearAIValueAll");
static_assert(offsetof(BattleMain_C_BI_ClearAIValueAll, Ret) == 0x000000, "Member 'BattleMain_C_BI_ClearAIValueAll::Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetSummonList
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_BI_GetSummonList final
{
public:
	TArray<struct FBtlSummonData>                 List;                                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FBtlSummonData>                 CallFunc_GetSummonList_retValue;                   // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleMain_C_BI_GetSummonList) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetSummonList");
static_assert(sizeof(BattleMain_C_BI_GetSummonList) == 0x000020, "Wrong size on BattleMain_C_BI_GetSummonList");
static_assert(offsetof(BattleMain_C_BI_GetSummonList, List) == 0x000000, "Member 'BattleMain_C_BI_GetSummonList::List' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetSummonList, CallFunc_GetSummonList_retValue) == 0x000010, "Member 'BattleMain_C_BI_GetSummonList::CallFunc_GetSummonList_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_ClearSummonList
// 0x0004 (0x0004 - 0x0000)
struct BattleMain_C_BI_ClearSummonList final
{
public:
	int32                                         Ret;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_ClearSummonList) == 0x000004, "Wrong alignment on BattleMain_C_BI_ClearSummonList");
static_assert(sizeof(BattleMain_C_BI_ClearSummonList) == 0x000004, "Wrong size on BattleMain_C_BI_ClearSummonList");
static_assert(offsetof(BattleMain_C_BI_ClearSummonList, Ret) == 0x000000, "Member 'BattleMain_C_BI_ClearSummonList::Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetSummonDevilID
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_BI_SetSummonDevilID final
{
public:
	int32                                         DevilID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SummonPosID;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ret;                                               // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_SetSummonDevilID) == 0x000004, "Wrong alignment on BattleMain_C_BI_SetSummonDevilID");
static_assert(sizeof(BattleMain_C_BI_SetSummonDevilID) == 0x00000C, "Wrong size on BattleMain_C_BI_SetSummonDevilID");
static_assert(offsetof(BattleMain_C_BI_SetSummonDevilID, DevilID) == 0x000000, "Member 'BattleMain_C_BI_SetSummonDevilID::DevilID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetSummonDevilID, SummonPosID) == 0x000004, "Member 'BattleMain_C_BI_SetSummonDevilID::SummonPosID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetSummonDevilID, Ret) == 0x000008, "Member 'BattleMain_C_BI_SetSummonDevilID::Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_AddDrawPressIcon
// 0x0004 (0x0004 - 0x0000)
struct BattleMain_C_BI_AddDrawPressIcon final
{
public:
	int32                                         Ret;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_AddDrawPressIcon) == 0x000004, "Wrong alignment on BattleMain_C_BI_AddDrawPressIcon");
static_assert(sizeof(BattleMain_C_BI_AddDrawPressIcon) == 0x000004, "Wrong size on BattleMain_C_BI_AddDrawPressIcon");
static_assert(offsetof(BattleMain_C_BI_AddDrawPressIcon, Ret) == 0x000000, "Member 'BattleMain_C_BI_AddDrawPressIcon::Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetAITurnNum
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_BI_GetAITurnNum final
{
public:
	int32                                         TurnNum;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNowTurn_retValue;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetAITurnNum) == 0x000004, "Wrong alignment on BattleMain_C_BI_GetAITurnNum");
static_assert(sizeof(BattleMain_C_BI_GetAITurnNum) == 0x00000C, "Wrong size on BattleMain_C_BI_GetAITurnNum");
static_assert(offsetof(BattleMain_C_BI_GetAITurnNum, TurnNum) == 0x000000, "Member 'BattleMain_C_BI_GetAITurnNum::TurnNum' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetAITurnNum, CallFunc_GetNowTurn_retValue) == 0x000004, "Member 'BattleMain_C_BI_GetAITurnNum::CallFunc_GetNowTurn_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetAITurnNum, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattleMain_C_BI_GetAITurnNum::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_CommonInfoMessReserveTagParam
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_BI_CommonInfoMessReserveTagParam final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 String;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Ret;                                               // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_CommonInfoMessReserveTagParam) == 0x000008, "Wrong alignment on BattleMain_C_BI_CommonInfoMessReserveTagParam");
static_assert(sizeof(BattleMain_C_BI_CommonInfoMessReserveTagParam) == 0x000020, "Wrong size on BattleMain_C_BI_CommonInfoMessReserveTagParam");
static_assert(offsetof(BattleMain_C_BI_CommonInfoMessReserveTagParam, Param_Index) == 0x000000, "Member 'BattleMain_C_BI_CommonInfoMessReserveTagParam::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CommonInfoMessReserveTagParam, String) == 0x000008, "Member 'BattleMain_C_BI_CommonInfoMessReserveTagParam::String' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CommonInfoMessReserveTagParam, Ret) == 0x000018, "Member 'BattleMain_C_BI_CommonInfoMessReserveTagParam::Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetCurrentBGMID
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_GetCurrentBGMID final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentBGMID_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetCurrentBGMID) == 0x000004, "Wrong alignment on BattleMain_C_BI_GetCurrentBGMID");
static_assert(sizeof(BattleMain_C_BI_GetCurrentBGMID) == 0x000008, "Wrong size on BattleMain_C_BI_GetCurrentBGMID");
static_assert(offsetof(BattleMain_C_BI_GetCurrentBGMID, ID) == 0x000000, "Member 'BattleMain_C_BI_GetCurrentBGMID::ID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetCurrentBGMID, CallFunc_GetCurrentBGMID_ReturnValue) == 0x000004, "Member 'BattleMain_C_BI_GetCurrentBGMID::CallFunc_GetCurrentBGMID_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_ToCommandBox
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_ToCommandBox final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_ToCommandBox) == 0x000001, "Wrong alignment on BattleMain_C_BI_ToCommandBox");
static_assert(sizeof(BattleMain_C_BI_ToCommandBox) == 0x000001, "Wrong size on BattleMain_C_BI_ToCommandBox");
static_assert(offsetof(BattleMain_C_BI_ToCommandBox, NoUse) == 0x000000, "Member 'BattleMain_C_BI_ToCommandBox::NoUse' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_DrawPlayerUpliftingGauge
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_DrawPlayerUpliftingGauge final
{
public:
	bool                                          IsNowUplifting;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SpendGaugeOnly;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ret;                                               // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetUpliftingGauge_ReturnValue;         // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_DrawPlayerUpliftingGauge) == 0x000004, "Wrong alignment on BattleMain_C_BI_DrawPlayerUpliftingGauge");
static_assert(sizeof(BattleMain_C_BI_DrawPlayerUpliftingGauge) == 0x000010, "Wrong size on BattleMain_C_BI_DrawPlayerUpliftingGauge");
static_assert(offsetof(BattleMain_C_BI_DrawPlayerUpliftingGauge, IsNowUplifting) == 0x000000, "Member 'BattleMain_C_BI_DrawPlayerUpliftingGauge::IsNowUplifting' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_DrawPlayerUpliftingGauge, SpendGaugeOnly) == 0x000001, "Member 'BattleMain_C_BI_DrawPlayerUpliftingGauge::SpendGaugeOnly' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_DrawPlayerUpliftingGauge, Ret) == 0x000004, "Member 'BattleMain_C_BI_DrawPlayerUpliftingGauge::Ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_DrawPlayerUpliftingGauge, CallFunc_BI_GetUpliftingGauge_ReturnValue) == 0x000008, "Member 'BattleMain_C_BI_DrawPlayerUpliftingGauge::CallFunc_BI_GetUpliftingGauge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_DrawPlayerUpliftingGauge, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BattleMain_C_BI_DrawPlayerUpliftingGauge::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetSummonList
// 0x0018 (0x0018 - 0x0000)
struct BattleMain_C_BI_SetSummonList final
{
public:
	TArray<struct FBtlSummonData>                 SummonData;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Ret;                                               // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_SetSummonList) == 0x000008, "Wrong alignment on BattleMain_C_BI_SetSummonList");
static_assert(sizeof(BattleMain_C_BI_SetSummonList) == 0x000018, "Wrong size on BattleMain_C_BI_SetSummonList");
static_assert(offsetof(BattleMain_C_BI_SetSummonList, SummonData) == 0x000000, "Member 'BattleMain_C_BI_SetSummonList::SummonData' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetSummonList, Ret) == 0x000010, "Member 'BattleMain_C_BI_SetSummonList::Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetBattleUIManager
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetBattleUIManager final
{
public:
	TScriptInterface<class IBPI_BattleUIManager_C> Ret;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetBattleUIManager) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetBattleUIManager");
static_assert(sizeof(BattleMain_C_BI_GetBattleUIManager) == 0x000010, "Wrong size on BattleMain_C_BI_GetBattleUIManager");
static_assert(offsetof(BattleMain_C_BI_GetBattleUIManager, Ret) == 0x000000, "Member 'BattleMain_C_BI_GetBattleUIManager::Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_BeginAutoBattle
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_BeginAutoBattle final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_BeginAutoBattle) == 0x000001, "Wrong alignment on BattleMain_C_BI_BeginAutoBattle");
static_assert(sizeof(BattleMain_C_BI_BeginAutoBattle) == 0x000001, "Wrong size on BattleMain_C_BI_BeginAutoBattle");
static_assert(offsetof(BattleMain_C_BI_BeginAutoBattle, NoUse) == 0x000000, "Member 'BattleMain_C_BI_BeginAutoBattle::NoUse' has a wrong offset!");

// Function BattleMain.BattleMain_C.GI_GetUIMessage
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_GI_GetUIMessage final
{
public:
	TScriptInterface<class IBPI_BattleMessage_C>  ActionPanel;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Valid;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_GI_GetUIMessage) == 0x000008, "Wrong alignment on BattleMain_C_GI_GetUIMessage");
static_assert(sizeof(BattleMain_C_GI_GetUIMessage) == 0x000028, "Wrong size on BattleMain_C_GI_GetUIMessage");
static_assert(offsetof(BattleMain_C_GI_GetUIMessage, ActionPanel) == 0x000000, "Member 'BattleMain_C_GI_GetUIMessage::ActionPanel' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GI_GetUIMessage, Valid) == 0x000010, "Member 'BattleMain_C_GI_GetUIMessage::Valid' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GI_GetUIMessage, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000018, "Member 'BattleMain_C_GI_GetUIMessage::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_GI_GetUIMessage, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BattleMain_C_GI_GetUIMessage::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_BattleStatusCreatePanel
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_BattleStatusCreatePanel final
{
public:
	int32                                         StartPartyIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_BattleStatusCreatePanel) == 0x000004, "Wrong alignment on BattleMain_C_BI_BattleStatusCreatePanel");
static_assert(sizeof(BattleMain_C_BI_BattleStatusCreatePanel) == 0x000008, "Wrong size on BattleMain_C_BI_BattleStatusCreatePanel");
static_assert(offsetof(BattleMain_C_BI_BattleStatusCreatePanel, StartPartyIndex) == 0x000000, "Member 'BattleMain_C_BI_BattleStatusCreatePanel::StartPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_BattleStatusCreatePanel, RetValue) == 0x000004, "Member 'BattleMain_C_BI_BattleStatusCreatePanel::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_BattleStatusIsFinished
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_BattleStatusIsFinished final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IBattleStatusCharaPanelIsFinished_IsFinished; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_BattleStatusIsFinished) == 0x000001, "Wrong alignment on BattleMain_C_BI_BattleStatusIsFinished");
static_assert(sizeof(BattleMain_C_BI_BattleStatusIsFinished) == 0x000002, "Wrong size on BattleMain_C_BI_BattleStatusIsFinished");
static_assert(offsetof(BattleMain_C_BI_BattleStatusIsFinished, OutFinished) == 0x000000, "Member 'BattleMain_C_BI_BattleStatusIsFinished::OutFinished' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_BattleStatusIsFinished, CallFunc_IBattleStatusCharaPanelIsFinished_IsFinished) == 0x000001, "Member 'BattleMain_C_BI_BattleStatusIsFinished::CallFunc_IBattleStatusCharaPanelIsFinished_IsFinished' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_BattleStatusGetSelectedPartyIndex
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_BattleStatusGetSelectedPartyIndex final
{
public:
	int32                                         OutPartyIndex;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IBattleStatusGetPartyIndexByIndex_OutPartyIndex; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_BattleStatusGetSelectedPartyIndex) == 0x000004, "Wrong alignment on BattleMain_C_BI_BattleStatusGetSelectedPartyIndex");
static_assert(sizeof(BattleMain_C_BI_BattleStatusGetSelectedPartyIndex) == 0x000008, "Wrong size on BattleMain_C_BI_BattleStatusGetSelectedPartyIndex");
static_assert(offsetof(BattleMain_C_BI_BattleStatusGetSelectedPartyIndex, OutPartyIndex) == 0x000000, "Member 'BattleMain_C_BI_BattleStatusGetSelectedPartyIndex::OutPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_BattleStatusGetSelectedPartyIndex, CallFunc_IBattleStatusGetPartyIndexByIndex_OutPartyIndex) == 0x000004, "Member 'BattleMain_C_BI_BattleStatusGetSelectedPartyIndex::CallFunc_IBattleStatusGetPartyIndexByIndex_OutPartyIndex' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_BattleStatusIsCanseled
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_BattleStatusIsCanseled final
{
public:
	bool                                          OutCanseled;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IBattleStatusIsCanseled_IsCanseled;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_BattleStatusIsCanseled) == 0x000001, "Wrong alignment on BattleMain_C_BI_BattleStatusIsCanseled");
static_assert(sizeof(BattleMain_C_BI_BattleStatusIsCanseled) == 0x000002, "Wrong size on BattleMain_C_BI_BattleStatusIsCanseled");
static_assert(offsetof(BattleMain_C_BI_BattleStatusIsCanseled, OutCanseled) == 0x000000, "Member 'BattleMain_C_BI_BattleStatusIsCanseled::OutCanseled' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_BattleStatusIsCanseled, CallFunc_IBattleStatusIsCanseled_IsCanseled) == 0x000001, "Member 'BattleMain_C_BI_BattleStatusIsCanseled::CallFunc_IBattleStatusIsCanseled_IsCanseled' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_InfoMessShowByCommonMessLabel
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_BI_InfoMessShowByCommonMessLabel final
{
public:
	class FName                                   MessLabel;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SelectSkillScriptMessage;                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_InfoMessShowByCommonMessLabel) == 0x000004, "Wrong alignment on BattleMain_C_BI_InfoMessShowByCommonMessLabel");
static_assert(sizeof(BattleMain_C_BI_InfoMessShowByCommonMessLabel) == 0x00000C, "Wrong size on BattleMain_C_BI_InfoMessShowByCommonMessLabel");
static_assert(offsetof(BattleMain_C_BI_InfoMessShowByCommonMessLabel, MessLabel) == 0x000000, "Member 'BattleMain_C_BI_InfoMessShowByCommonMessLabel::MessLabel' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_InfoMessShowByCommonMessLabel, SelectSkillScriptMessage) == 0x000008, "Member 'BattleMain_C_BI_InfoMessShowByCommonMessLabel::SelectSkillScriptMessage' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_InfoMessShowByCommonMessLabel, RetValue) == 0x000009, "Member 'BattleMain_C_BI_InfoMessShowByCommonMessLabel::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetPlayerUpliftingGauge
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_GetPlayerUpliftingGauge final
{
public:
	int32                                         Ret;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetUpliftingGauge_ReturnValue;         // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetPlayerUpliftingGauge) == 0x000004, "Wrong alignment on BattleMain_C_BI_GetPlayerUpliftingGauge");
static_assert(sizeof(BattleMain_C_BI_GetPlayerUpliftingGauge) == 0x000008, "Wrong size on BattleMain_C_BI_GetPlayerUpliftingGauge");
static_assert(offsetof(BattleMain_C_BI_GetPlayerUpliftingGauge, Ret) == 0x000000, "Member 'BattleMain_C_BI_GetPlayerUpliftingGauge::Ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetPlayerUpliftingGauge, CallFunc_BI_GetUpliftingGauge_ReturnValue) == 0x000004, "Member 'BattleMain_C_BI_GetPlayerUpliftingGauge::CallFunc_BI_GetUpliftingGauge_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_ChkEnemySurpriseTurn
// 0x0006 (0x0006 - 0x0000)
struct BattleMain_C_BI_ChkEnemySurpriseTurn final
{
public:
	bool                                          EnemySurpriseTurn;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleFlag_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBattleFlag_ReturnValue_1;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_ChkEnemySurpriseTurn) == 0x000001, "Wrong alignment on BattleMain_C_BI_ChkEnemySurpriseTurn");
static_assert(sizeof(BattleMain_C_BI_ChkEnemySurpriseTurn) == 0x000006, "Wrong size on BattleMain_C_BI_ChkEnemySurpriseTurn");
static_assert(offsetof(BattleMain_C_BI_ChkEnemySurpriseTurn, EnemySurpriseTurn) == 0x000000, "Member 'BattleMain_C_BI_ChkEnemySurpriseTurn::EnemySurpriseTurn' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_ChkEnemySurpriseTurn, CallFunc_CheckBattleFlag_ReturnValue) == 0x000001, "Member 'BattleMain_C_BI_ChkEnemySurpriseTurn::CallFunc_CheckBattleFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_ChkEnemySurpriseTurn, CallFunc_CheckBattleFlag_ReturnValue_1) == 0x000002, "Member 'BattleMain_C_BI_ChkEnemySurpriseTurn::CallFunc_CheckBattleFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_ChkEnemySurpriseTurn, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000003, "Member 'BattleMain_C_BI_ChkEnemySurpriseTurn::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_ChkEnemySurpriseTurn, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'BattleMain_C_BI_ChkEnemySurpriseTurn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_ChkEnemySurpriseTurn, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'BattleMain_C_BI_ChkEnemySurpriseTurn::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetCurrentBGMID
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_SetCurrentBGMID final
{
public:
	int32                                         BGM_ID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          No_Use;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SetCurrentBGMID) == 0x000004, "Wrong alignment on BattleMain_C_BI_SetCurrentBGMID");
static_assert(sizeof(BattleMain_C_BI_SetCurrentBGMID) == 0x000008, "Wrong size on BattleMain_C_BI_SetCurrentBGMID");
static_assert(offsetof(BattleMain_C_BI_SetCurrentBGMID, BGM_ID) == 0x000000, "Member 'BattleMain_C_BI_SetCurrentBGMID::BGM_ID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetCurrentBGMID, No_Use) == 0x000004, "Member 'BattleMain_C_BI_SetCurrentBGMID::No_Use' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_AddResultDataFujimi
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_AddResultDataFujimi final
{
public:
	bool                                          Ret;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_AddResultDataFujimi) == 0x000001, "Wrong alignment on BattleMain_C_BI_AddResultDataFujimi");
static_assert(sizeof(BattleMain_C_BI_AddResultDataFujimi) == 0x000001, "Wrong size on BattleMain_C_BI_AddResultDataFujimi");
static_assert(offsetof(BattleMain_C_BI_AddResultDataFujimi, Ret) == 0x000000, "Member 'BattleMain_C_BI_AddResultDataFujimi::Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_PrepareSkip
// 0x0030 (0x0030 - 0x0000)
struct BattleMain_C_BI_PrepareSkip final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePostProcessCtrl_C*               CallFunc_GetPostProcessCtrl_BattlePostProcessCtrl; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_FADE_STATE                               CallFunc_GetFadeState_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleCamera_C*                        CallFunc_GetCameraAccessor_retValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FadeIn_BeforeColor_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattleActionTaskFactory_C*             CallFunc_GetTaskFactory_retValue;                  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_PrepareSkip) == 0x000008, "Wrong alignment on BattleMain_C_BI_PrepareSkip");
static_assert(sizeof(BattleMain_C_BI_PrepareSkip) == 0x000030, "Wrong size on BattleMain_C_BI_PrepareSkip");
static_assert(offsetof(BattleMain_C_BI_PrepareSkip, NoUse) == 0x000000, "Member 'BattleMain_C_BI_PrepareSkip::NoUse' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PrepareSkip, CallFunc_GetPostProcessCtrl_BattlePostProcessCtrl) == 0x000008, "Member 'BattleMain_C_BI_PrepareSkip::CallFunc_GetPostProcessCtrl_BattlePostProcessCtrl' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PrepareSkip, CallFunc_GetFadeState_ReturnValue) == 0x000010, "Member 'BattleMain_C_BI_PrepareSkip::CallFunc_GetFadeState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PrepareSkip, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BattleMain_C_BI_PrepareSkip::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PrepareSkip, CallFunc_GetCameraAccessor_retValue) == 0x000018, "Member 'BattleMain_C_BI_PrepareSkip::CallFunc_GetCameraAccessor_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PrepareSkip, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BattleMain_C_BI_PrepareSkip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PrepareSkip, CallFunc_FadeIn_BeforeColor_ReturnValue) == 0x000021, "Member 'BattleMain_C_BI_PrepareSkip::CallFunc_FadeIn_BeforeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_PrepareSkip, CallFunc_GetTaskFactory_retValue) == 0x000028, "Member 'BattleMain_C_BI_PrepareSkip::CallFunc_GetTaskFactory_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_ReadyDebugMenu
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_ReadyDebugMenu final
{
public:
	bool                                          Ret;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_ReadyDebugMenu) == 0x000001, "Wrong alignment on BattleMain_C_BI_ReadyDebugMenu");
static_assert(sizeof(BattleMain_C_BI_ReadyDebugMenu) == 0x000001, "Wrong size on BattleMain_C_BI_ReadyDebugMenu");
static_assert(offsetof(BattleMain_C_BI_ReadyDebugMenu, Ret) == 0x000000, "Member 'BattleMain_C_BI_ReadyDebugMenu::Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetCamActorFactory
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetCamActorFactory final
{
public:
	TScriptInterface<class IBPI_BattleCamActorFactory_C> CamActorFactory;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetCamActorFactory) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetCamActorFactory");
static_assert(sizeof(BattleMain_C_BI_GetCamActorFactory) == 0x000010, "Wrong size on BattleMain_C_BI_GetCamActorFactory");
static_assert(offsetof(BattleMain_C_BI_GetCamActorFactory, CamActorFactory) == 0x000000, "Member 'BattleMain_C_BI_GetCamActorFactory::CamActorFactory' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SummonSelectSetSummonParameter
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_SummonSelectSetSummonParameter final
{
public:
	bool                                          OutParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SummonSelectSetSummonParameter) == 0x000001, "Wrong alignment on BattleMain_C_BI_SummonSelectSetSummonParameter");
static_assert(sizeof(BattleMain_C_BI_SummonSelectSetSummonParameter) == 0x000001, "Wrong size on BattleMain_C_BI_SummonSelectSetSummonParameter");
static_assert(offsetof(BattleMain_C_BI_SummonSelectSetSummonParameter, OutParam) == 0x000000, "Member 'BattleMain_C_BI_SummonSelectSetSummonParameter::OutParam' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetAnalyzeItemStatusCtrl
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_GetAnalyzeItemStatusCtrl final
{
public:
	class UObject*                                AnalyzeItemStatusCtrl;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetAnalyzeItemStatusCtrl) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetAnalyzeItemStatusCtrl");
static_assert(sizeof(BattleMain_C_BI_GetAnalyzeItemStatusCtrl) == 0x000008, "Wrong size on BattleMain_C_BI_GetAnalyzeItemStatusCtrl");
static_assert(offsetof(BattleMain_C_BI_GetAnalyzeItemStatusCtrl, AnalyzeItemStatusCtrl) == 0x000000, "Member 'BattleMain_C_BI_GetAnalyzeItemStatusCtrl::AnalyzeItemStatusCtrl' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_BattleUISwitch
// 0x0003 (0x0003 - 0x0000)
struct BattleMain_C_BI_BattleUISwitch final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IncludeMonnAge;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoUse;                                             // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_BattleUISwitch) == 0x000001, "Wrong alignment on BattleMain_C_BI_BattleUISwitch");
static_assert(sizeof(BattleMain_C_BI_BattleUISwitch) == 0x000003, "Wrong size on BattleMain_C_BI_BattleUISwitch");
static_assert(offsetof(BattleMain_C_BI_BattleUISwitch, Sw) == 0x000000, "Member 'BattleMain_C_BI_BattleUISwitch::Sw' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_BattleUISwitch, IncludeMonnAge) == 0x000001, "Member 'BattleMain_C_BI_BattleUISwitch::IncludeMonnAge' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_BattleUISwitch, NoUse) == 0x000002, "Member 'BattleMain_C_BI_BattleUISwitch::NoUse' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetBattleCommand
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetBattleCommand final
{
public:
	TScriptInterface<class IBPI_BattleCommand_C>  Param_BattleCommand;                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetBattleCommand) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetBattleCommand");
static_assert(sizeof(BattleMain_C_BI_GetBattleCommand) == 0x000010, "Wrong size on BattleMain_C_BI_GetBattleCommand");
static_assert(offsetof(BattleMain_C_BI_GetBattleCommand, Param_BattleCommand) == 0x000000, "Member 'BattleMain_C_BI_GetBattleCommand::Param_BattleCommand' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_IsFinishedBattleCharaPanelFadeIn
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_IsFinishedBattleCharaPanelFadeIn final
{
public:
	bool                                          IsFinished;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IBattleCharaPanelIsFinishedBattleCharaPanel_OutFinished; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_IsFinishedBattleCharaPanelFadeIn) == 0x000001, "Wrong alignment on BattleMain_C_BI_IsFinishedBattleCharaPanelFadeIn");
static_assert(sizeof(BattleMain_C_BI_IsFinishedBattleCharaPanelFadeIn) == 0x000002, "Wrong size on BattleMain_C_BI_IsFinishedBattleCharaPanelFadeIn");
static_assert(offsetof(BattleMain_C_BI_IsFinishedBattleCharaPanelFadeIn, IsFinished) == 0x000000, "Member 'BattleMain_C_BI_IsFinishedBattleCharaPanelFadeIn::IsFinished' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_IsFinishedBattleCharaPanelFadeIn, CallFunc_IBattleCharaPanelIsFinishedBattleCharaPanel_OutFinished) == 0x000001, "Member 'BattleMain_C_BI_IsFinishedBattleCharaPanelFadeIn::CallFunc_IBattleCharaPanelIsFinishedBattleCharaPanel_OutFinished' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetPartyPanelFadeOutStack
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_SetPartyPanelFadeOutStack final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InStartTime;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InOptionCheck;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InVisibleCheck;                                    // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OutParam;                                          // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IBattleCharaPanelSetPanelFadeOutStack_OutParam; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SetPartyPanelFadeOutStack) == 0x000004, "Wrong alignment on BattleMain_C_BI_SetPartyPanelFadeOutStack");
static_assert(sizeof(BattleMain_C_BI_SetPartyPanelFadeOutStack) == 0x000010, "Wrong size on BattleMain_C_BI_SetPartyPanelFadeOutStack");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelFadeOutStack, InIndex) == 0x000000, "Member 'BattleMain_C_BI_SetPartyPanelFadeOutStack::InIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelFadeOutStack, InStartTime) == 0x000004, "Member 'BattleMain_C_BI_SetPartyPanelFadeOutStack::InStartTime' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelFadeOutStack, InOptionCheck) == 0x000008, "Member 'BattleMain_C_BI_SetPartyPanelFadeOutStack::InOptionCheck' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelFadeOutStack, InVisibleCheck) == 0x000009, "Member 'BattleMain_C_BI_SetPartyPanelFadeOutStack::InVisibleCheck' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelFadeOutStack, OutParam) == 0x00000A, "Member 'BattleMain_C_BI_SetPartyPanelFadeOutStack::OutParam' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelFadeOutStack, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000B, "Member 'BattleMain_C_BI_SetPartyPanelFadeOutStack::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelFadeOutStack, CallFunc_IBattleCharaPanelSetPanelFadeOutStack_OutParam) == 0x00000C, "Member 'BattleMain_C_BI_SetPartyPanelFadeOutStack::CallFunc_IBattleCharaPanelSetPanelFadeOutStack_OutParam' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelFadeOutStack, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000D, "Member 'BattleMain_C_BI_SetPartyPanelFadeOutStack::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetPartyPanelEmptyStack
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_SetPartyPanelEmptyStack final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InStartTime;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InOptionCheck;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InVisibleCheck;                                    // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SetPartyPanelEmptyStack) == 0x000004, "Wrong alignment on BattleMain_C_BI_SetPartyPanelEmptyStack");
static_assert(sizeof(BattleMain_C_BI_SetPartyPanelEmptyStack) == 0x000010, "Wrong size on BattleMain_C_BI_SetPartyPanelEmptyStack");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelEmptyStack, InIndex) == 0x000000, "Member 'BattleMain_C_BI_SetPartyPanelEmptyStack::InIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelEmptyStack, InStartTime) == 0x000004, "Member 'BattleMain_C_BI_SetPartyPanelEmptyStack::InStartTime' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelEmptyStack, InOptionCheck) == 0x000008, "Member 'BattleMain_C_BI_SetPartyPanelEmptyStack::InOptionCheck' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelEmptyStack, InVisibleCheck) == 0x000009, "Member 'BattleMain_C_BI_SetPartyPanelEmptyStack::InVisibleCheck' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelEmptyStack, RetValue) == 0x00000A, "Member 'BattleMain_C_BI_SetPartyPanelEmptyStack::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelEmptyStack, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000B, "Member 'BattleMain_C_BI_SetPartyPanelEmptyStack::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelEmptyStack, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BattleMain_C_BI_SetPartyPanelEmptyStack::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetPartyPanelSummonStack
// 0x0340 (0x0340 - 0x0000)
struct BattleMain_C_BI_SetPartyPanelSummonStack final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              InPartyData;                                       // 0x0010(0x0320)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         InStartTime;                                       // 0x0330(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InOptionCheck;                                     // 0x0334(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0335(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0336(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IBattleCharaPanelSetParamStack_OutParam;  // 0x0337(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SetPartyPanelSummonStack) == 0x000010, "Wrong alignment on BattleMain_C_BI_SetPartyPanelSummonStack");
static_assert(sizeof(BattleMain_C_BI_SetPartyPanelSummonStack) == 0x000340, "Wrong size on BattleMain_C_BI_SetPartyPanelSummonStack");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelSummonStack, InIndex) == 0x000000, "Member 'BattleMain_C_BI_SetPartyPanelSummonStack::InIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelSummonStack, InPartyData) == 0x000010, "Member 'BattleMain_C_BI_SetPartyPanelSummonStack::InPartyData' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelSummonStack, InStartTime) == 0x000330, "Member 'BattleMain_C_BI_SetPartyPanelSummonStack::InStartTime' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelSummonStack, InOptionCheck) == 0x000334, "Member 'BattleMain_C_BI_SetPartyPanelSummonStack::InOptionCheck' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelSummonStack, RetValue) == 0x000335, "Member 'BattleMain_C_BI_SetPartyPanelSummonStack::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelSummonStack, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000336, "Member 'BattleMain_C_BI_SetPartyPanelSummonStack::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelSummonStack, CallFunc_IBattleCharaPanelSetParamStack_OutParam) == 0x000337, "Member 'BattleMain_C_BI_SetPartyPanelSummonStack::CallFunc_IBattleCharaPanelSetParamStack_OutParam' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyPanelSummonStack, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000338, "Member 'BattleMain_C_BI_SetPartyPanelSummonStack::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_IsFinishedPanelFadeOut
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_BI_IsFinishedPanelFadeOut final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Retparam;                                          // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IBattleCharaPanelIsFinishedPanelFadeOut_OutFinished; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_IsFinishedPanelFadeOut) == 0x000004, "Wrong alignment on BattleMain_C_BI_IsFinishedPanelFadeOut");
static_assert(sizeof(BattleMain_C_BI_IsFinishedPanelFadeOut) == 0x00000C, "Wrong size on BattleMain_C_BI_IsFinishedPanelFadeOut");
static_assert(offsetof(BattleMain_C_BI_IsFinishedPanelFadeOut, InIndex) == 0x000000, "Member 'BattleMain_C_BI_IsFinishedPanelFadeOut::InIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_IsFinishedPanelFadeOut, RetValue) == 0x000004, "Member 'BattleMain_C_BI_IsFinishedPanelFadeOut::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_IsFinishedPanelFadeOut, Retparam) == 0x000005, "Member 'BattleMain_C_BI_IsFinishedPanelFadeOut::Retparam' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_IsFinishedPanelFadeOut, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000006, "Member 'BattleMain_C_BI_IsFinishedPanelFadeOut::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_IsFinishedPanelFadeOut, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000007, "Member 'BattleMain_C_BI_IsFinishedPanelFadeOut::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_IsFinishedPanelFadeOut, CallFunc_IBattleCharaPanelIsFinishedPanelFadeOut_OutFinished) == 0x000008, "Member 'BattleMain_C_BI_IsFinishedPanelFadeOut::CallFunc_IBattleCharaPanelIsFinishedPanelFadeOut_OutFinished' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_HideActionName_forCommand
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_HideActionName_forCommand final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNowAction_isSuccess;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleCharAction_C*                    CallFunc_GetNowAction_retValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_HideActionName_forCommand) == 0x000008, "Wrong alignment on BattleMain_C_BI_HideActionName_forCommand");
static_assert(sizeof(BattleMain_C_BI_HideActionName_forCommand) == 0x000010, "Wrong size on BattleMain_C_BI_HideActionName_forCommand");
static_assert(offsetof(BattleMain_C_BI_HideActionName_forCommand, NoUse) == 0x000000, "Member 'BattleMain_C_BI_HideActionName_forCommand::NoUse' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_HideActionName_forCommand, CallFunc_GetNowAction_isSuccess) == 0x000001, "Member 'BattleMain_C_BI_HideActionName_forCommand::CallFunc_GetNowAction_isSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_HideActionName_forCommand, CallFunc_GetNowAction_retValue) == 0x000008, "Member 'BattleMain_C_BI_HideActionName_forCommand::CallFunc_GetNowAction_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_HideActionName_forSkill
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_HideActionName_forSkill final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_HideActionName_forSkill) == 0x000001, "Wrong alignment on BattleMain_C_BI_HideActionName_forSkill");
static_assert(sizeof(BattleMain_C_BI_HideActionName_forSkill) == 0x000001, "Wrong size on BattleMain_C_BI_HideActionName_forSkill");
static_assert(offsetof(BattleMain_C_BI_HideActionName_forSkill, NoUse) == 0x000000, "Member 'BattleMain_C_BI_HideActionName_forSkill::NoUse' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_ShowActionName_forCommand
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_ShowActionName_forCommand final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNowAction_isSuccess;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleCharAction_C*                    CallFunc_GetNowAction_retValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_ShowActionName_forCommand) == 0x000008, "Wrong alignment on BattleMain_C_BI_ShowActionName_forCommand");
static_assert(sizeof(BattleMain_C_BI_ShowActionName_forCommand) == 0x000010, "Wrong size on BattleMain_C_BI_ShowActionName_forCommand");
static_assert(offsetof(BattleMain_C_BI_ShowActionName_forCommand, NoUse) == 0x000000, "Member 'BattleMain_C_BI_ShowActionName_forCommand::NoUse' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_ShowActionName_forCommand, CallFunc_GetNowAction_isSuccess) == 0x000001, "Member 'BattleMain_C_BI_ShowActionName_forCommand::CallFunc_GetNowAction_isSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_ShowActionName_forCommand, CallFunc_GetNowAction_retValue) == 0x000008, "Member 'BattleMain_C_BI_ShowActionName_forCommand::CallFunc_GetNowAction_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_ShowActionName_forSkill
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_ShowActionName_forSkill final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_ShowActionName_forSkill) == 0x000001, "Wrong alignment on BattleMain_C_BI_ShowActionName_forSkill");
static_assert(sizeof(BattleMain_C_BI_ShowActionName_forSkill) == 0x000001, "Wrong size on BattleMain_C_BI_ShowActionName_forSkill");
static_assert(offsetof(BattleMain_C_BI_ShowActionName_forSkill, NoUse) == 0x000000, "Member 'BattleMain_C_BI_ShowActionName_forSkill::NoUse' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetSkillCureHPForUI
// 0x0014 (0x0014 - 0x0000)
struct BattleMain_C_BI_GetSkillCureHPForUI final
{
public:
	int32                                         InActorIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InTargetIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InSkillId;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetHP;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetSkillCureHPValueExpected_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetSkillCureHPForUI) == 0x000004, "Wrong alignment on BattleMain_C_BI_GetSkillCureHPForUI");
static_assert(sizeof(BattleMain_C_BI_GetSkillCureHPForUI) == 0x000014, "Wrong size on BattleMain_C_BI_GetSkillCureHPForUI");
static_assert(offsetof(BattleMain_C_BI_GetSkillCureHPForUI, InActorIndex) == 0x000000, "Member 'BattleMain_C_BI_GetSkillCureHPForUI::InActorIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetSkillCureHPForUI, InTargetIndex) == 0x000004, "Member 'BattleMain_C_BI_GetSkillCureHPForUI::InTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetSkillCureHPForUI, InSkillId) == 0x000008, "Member 'BattleMain_C_BI_GetSkillCureHPForUI::InSkillId' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetSkillCureHPForUI, RetHP) == 0x00000C, "Member 'BattleMain_C_BI_GetSkillCureHPForUI::RetHP' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetSkillCureHPForUI, CallFunc_BI_GetSkillCureHPValueExpected_ReturnValue) == 0x000010, "Member 'BattleMain_C_BI_GetSkillCureHPForUI::CallFunc_BI_GetSkillCureHPValueExpected_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetItemCureHPForUI
// 0x0014 (0x0014 - 0x0000)
struct BattleMain_C_BI_GetItemCureHPForUI final
{
public:
	int32                                         InActorIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InTargetIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InItemId;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetHP;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetItemlCureHPValueExpected_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetItemCureHPForUI) == 0x000004, "Wrong alignment on BattleMain_C_BI_GetItemCureHPForUI");
static_assert(sizeof(BattleMain_C_BI_GetItemCureHPForUI) == 0x000014, "Wrong size on BattleMain_C_BI_GetItemCureHPForUI");
static_assert(offsetof(BattleMain_C_BI_GetItemCureHPForUI, InActorIndex) == 0x000000, "Member 'BattleMain_C_BI_GetItemCureHPForUI::InActorIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetItemCureHPForUI, InTargetIndex) == 0x000004, "Member 'BattleMain_C_BI_GetItemCureHPForUI::InTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetItemCureHPForUI, InItemId) == 0x000008, "Member 'BattleMain_C_BI_GetItemCureHPForUI::InItemId' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetItemCureHPForUI, RetHP) == 0x00000C, "Member 'BattleMain_C_BI_GetItemCureHPForUI::RetHP' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetItemCureHPForUI, CallFunc_BI_GetItemlCureHPValueExpected_ReturnValue) == 0x000010, "Member 'BattleMain_C_BI_GetItemCureHPForUI::CallFunc_BI_GetItemlCureHPValueExpected_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetItemCureMPForUI
// 0x0014 (0x0014 - 0x0000)
struct BattleMain_C_BI_GetItemCureMPForUI final
{
public:
	int32                                         InActorIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InTargetIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InItemId;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetMP;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetItemlCureMPValueExpected_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetItemCureMPForUI) == 0x000004, "Wrong alignment on BattleMain_C_BI_GetItemCureMPForUI");
static_assert(sizeof(BattleMain_C_BI_GetItemCureMPForUI) == 0x000014, "Wrong size on BattleMain_C_BI_GetItemCureMPForUI");
static_assert(offsetof(BattleMain_C_BI_GetItemCureMPForUI, InActorIndex) == 0x000000, "Member 'BattleMain_C_BI_GetItemCureMPForUI::InActorIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetItemCureMPForUI, InTargetIndex) == 0x000004, "Member 'BattleMain_C_BI_GetItemCureMPForUI::InTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetItemCureMPForUI, InItemId) == 0x000008, "Member 'BattleMain_C_BI_GetItemCureMPForUI::InItemId' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetItemCureMPForUI, RetMP) == 0x00000C, "Member 'BattleMain_C_BI_GetItemCureMPForUI::RetMP' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetItemCureMPForUI, CallFunc_BI_GetItemlCureMPValueExpected_ReturnValue) == 0x000010, "Member 'BattleMain_C_BI_GetItemCureMPForUI::CallFunc_BI_GetItemlCureMPValueExpected_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetSkillCureMPForUI
// 0x0014 (0x0014 - 0x0000)
struct BattleMain_C_BI_GetSkillCureMPForUI final
{
public:
	int32                                         InActorIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InTargetIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InSkillId;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetMP;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_GetSkillCureMPValueExpected_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetSkillCureMPForUI) == 0x000004, "Wrong alignment on BattleMain_C_BI_GetSkillCureMPForUI");
static_assert(sizeof(BattleMain_C_BI_GetSkillCureMPForUI) == 0x000014, "Wrong size on BattleMain_C_BI_GetSkillCureMPForUI");
static_assert(offsetof(BattleMain_C_BI_GetSkillCureMPForUI, InActorIndex) == 0x000000, "Member 'BattleMain_C_BI_GetSkillCureMPForUI::InActorIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetSkillCureMPForUI, InTargetIndex) == 0x000004, "Member 'BattleMain_C_BI_GetSkillCureMPForUI::InTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetSkillCureMPForUI, InSkillId) == 0x000008, "Member 'BattleMain_C_BI_GetSkillCureMPForUI::InSkillId' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetSkillCureMPForUI, RetMP) == 0x00000C, "Member 'BattleMain_C_BI_GetSkillCureMPForUI::RetMP' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetSkillCureMPForUI, CallFunc_BI_GetSkillCureMPValueExpected_ReturnValue) == 0x000010, "Member 'BattleMain_C_BI_GetSkillCureMPForUI::CallFunc_BI_GetSkillCureMPValueExpected_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_CheckBattleEnd
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_CheckBattleEnd final
{
public:
	E_BTL_END                                     EndType;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_END                                     CallFunc_CheckBattleEnd_retValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_CheckBattleEnd) == 0x000001, "Wrong alignment on BattleMain_C_BI_CheckBattleEnd");
static_assert(sizeof(BattleMain_C_BI_CheckBattleEnd) == 0x000002, "Wrong size on BattleMain_C_BI_CheckBattleEnd");
static_assert(offsetof(BattleMain_C_BI_CheckBattleEnd, EndType) == 0x000000, "Member 'BattleMain_C_BI_CheckBattleEnd::EndType' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CheckBattleEnd, CallFunc_CheckBattleEnd_retValue) == 0x000001, "Member 'BattleMain_C_BI_CheckBattleEnd::CallFunc_CheckBattleEnd_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI Get Camera Accessor
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_Get_Camera_Accessor final
{
public:
	class ABattleCamera_C*                        Camera;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleCamera_C*                        CallFunc_GetCameraAccessor_retValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_Get_Camera_Accessor) == 0x000008, "Wrong alignment on BattleMain_C_BI_Get_Camera_Accessor");
static_assert(sizeof(BattleMain_C_BI_Get_Camera_Accessor) == 0x000010, "Wrong size on BattleMain_C_BI_Get_Camera_Accessor");
static_assert(offsetof(BattleMain_C_BI_Get_Camera_Accessor, Camera) == 0x000000, "Member 'BattleMain_C_BI_Get_Camera_Accessor::Camera' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_Get_Camera_Accessor, CallFunc_GetCameraAccessor_retValue) == 0x000008, "Member 'BattleMain_C_BI_Get_Camera_Accessor::CallFunc_GetCameraAccessor_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_CalcStatusListEnemyOrder
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_BI_CalcStatusListEnemyOrder final
{
public:
	TArray<int32>                                 PartyIndex;                                        // 0x0000(0x0010)(Parm, OutParm)
	TArray<int32>                                 CallFunc_CalcStatusListEnemyOrder_PartyIndex;      // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleMain_C_BI_CalcStatusListEnemyOrder) == 0x000008, "Wrong alignment on BattleMain_C_BI_CalcStatusListEnemyOrder");
static_assert(sizeof(BattleMain_C_BI_CalcStatusListEnemyOrder) == 0x000020, "Wrong size on BattleMain_C_BI_CalcStatusListEnemyOrder");
static_assert(offsetof(BattleMain_C_BI_CalcStatusListEnemyOrder, PartyIndex) == 0x000000, "Member 'BattleMain_C_BI_CalcStatusListEnemyOrder::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CalcStatusListEnemyOrder, CallFunc_CalcStatusListEnemyOrder_PartyIndex) == 0x000010, "Member 'BattleMain_C_BI_CalcStatusListEnemyOrder::CallFunc_CalcStatusListEnemyOrder_PartyIndex' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetVoiceProtection
// 0x0014 (0x0014 - 0x0000)
struct BattleMain_C_BI_SetVoiceProtection final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoUse;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBattleTempo_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_SetBattlePlayRate_NoUse;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetBattlePlayRate_NoUse_1;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SetVoiceProtection) == 0x000004, "Wrong alignment on BattleMain_C_BI_SetVoiceProtection");
static_assert(sizeof(BattleMain_C_BI_SetVoiceProtection) == 0x000014, "Wrong size on BattleMain_C_BI_SetVoiceProtection");
static_assert(offsetof(BattleMain_C_BI_SetVoiceProtection, Enable) == 0x000000, "Member 'BattleMain_C_BI_SetVoiceProtection::Enable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetVoiceProtection, NoUse) == 0x000001, "Member 'BattleMain_C_BI_SetVoiceProtection::NoUse' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetVoiceProtection, CallFunc_GetBattleTempo_ReturnValue) == 0x000004, "Member 'BattleMain_C_BI_SetVoiceProtection::CallFunc_GetBattleTempo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetVoiceProtection, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'BattleMain_C_BI_SetVoiceProtection::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetVoiceProtection, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'BattleMain_C_BI_SetVoiceProtection::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetVoiceProtection, CallFunc_BI_SetBattlePlayRate_NoUse) == 0x000010, "Member 'BattleMain_C_BI_SetVoiceProtection::CallFunc_BI_SetBattlePlayRate_NoUse' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetVoiceProtection, CallFunc_BI_SetBattlePlayRate_NoUse_1) == 0x000011, "Member 'BattleMain_C_BI_SetVoiceProtection::CallFunc_BI_SetBattlePlayRate_NoUse_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetVoiceProtection, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000012, "Member 'BattleMain_C_BI_SetVoiceProtection::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UpdateBattleTempo
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_UpdateBattleTempo final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UpdateBattleTempo) == 0x000001, "Wrong alignment on BattleMain_C_BI_UpdateBattleTempo");
static_assert(sizeof(BattleMain_C_BI_UpdateBattleTempo) == 0x000001, "Wrong size on BattleMain_C_BI_UpdateBattleTempo");
static_assert(offsetof(BattleMain_C_BI_UpdateBattleTempo, NoUse) == 0x000000, "Member 'BattleMain_C_BI_UpdateBattleTempo::NoUse' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_CheckContinuousBGMBattle
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_BI_CheckContinuousBGMBattle final
{
public:
	bool                                          IsContinuous;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_isInsideAgrat;                                  // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTimeAttackBattle_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckAgratField_Inside;               // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_CheckContinuousBGMBattle) == 0x000008, "Wrong alignment on BattleMain_C_BI_CheckContinuousBGMBattle");
static_assert(sizeof(BattleMain_C_BI_CheckContinuousBGMBattle) == 0x000028, "Wrong size on BattleMain_C_BI_CheckContinuousBGMBattle");
static_assert(offsetof(BattleMain_C_BI_CheckContinuousBGMBattle, IsContinuous) == 0x000000, "Member 'BattleMain_C_BI_CheckContinuousBGMBattle::IsContinuous' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CheckContinuousBGMBattle, Lo_isInsideAgrat) == 0x000001, "Member 'BattleMain_C_BI_CheckContinuousBGMBattle::Lo_isInsideAgrat' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CheckContinuousBGMBattle, CallFunc_GetMapCommon_rerutn) == 0x000008, "Member 'BattleMain_C_BI_CheckContinuousBGMBattle::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CheckContinuousBGMBattle, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000010, "Member 'BattleMain_C_BI_CheckContinuousBGMBattle::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CheckContinuousBGMBattle, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BattleMain_C_BI_CheckContinuousBGMBattle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CheckContinuousBGMBattle, CallFunc_CheckTimeAttackBattle_ReturnValue) == 0x000021, "Member 'BattleMain_C_BI_CheckContinuousBGMBattle::CallFunc_CheckTimeAttackBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CheckContinuousBGMBattle, CallFunc_BPI_CheckAgratField_Inside) == 0x000022, "Member 'BattleMain_C_BI_CheckContinuousBGMBattle::CallFunc_BPI_CheckAgratField_Inside' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CheckContinuousBGMBattle, CallFunc_BooleanOR_ReturnValue) == 0x000023, "Member 'BattleMain_C_BI_CheckContinuousBGMBattle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CheckContinuousBGMBattle, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BattleMain_C_BI_CheckContinuousBGMBattle::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_EndAutoBattle
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_EndAutoBattle final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_EndAutoBattle) == 0x000001, "Wrong alignment on BattleMain_C_BI_EndAutoBattle");
static_assert(sizeof(BattleMain_C_BI_EndAutoBattle) == 0x000001, "Wrong size on BattleMain_C_BI_EndAutoBattle");
static_assert(offsetof(BattleMain_C_BI_EndAutoBattle, NoUse) == 0x000000, "Member 'BattleMain_C_BI_EndAutoBattle::NoUse' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UniqueSkill_CureMPMagatsuhiGaugeMax
// 0x0090 (0x0090 - 0x0000)
struct BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax final
{
public:
	int32                                         Ret;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_party_index;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_wait_task_list;                                 // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_cure_mp;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_GetTaskFactory_retValue;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_MakePartyPanelShowTask_RetPecID;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_GetTaskFactory_retValue_1;             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_MakeCureTask_ret;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_GetTaskFactory_retValue_2;             // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddPartyPanelCtrlTask_retValue;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_UniqueSkill_GetCureMPMagatsuhiGaugeMax_ReturnValue; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_BI_GetSideIsInFieldList_ReturnValue;      // 0x0070(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckMaxUpliftingGauge_ReturnValue;    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax) == 0x000008, "Wrong alignment on BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax");
static_assert(sizeof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax) == 0x000090, "Wrong size on BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, Ret) == 0x000000, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::Ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, Lo_party_index) == 0x000004, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::Lo_party_index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, Lo_wait_task_list) == 0x000008, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::Lo_wait_task_list' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, Lo_cure_mp) == 0x000018, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::Lo_cure_mp' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, CallFunc_BI_GetTaskFactory_retValue) == 0x000020, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::CallFunc_BI_GetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, CallFunc_BI_MakePartyPanelShowTask_RetPecID) == 0x000030, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::CallFunc_BI_MakePartyPanelShowTask_RetPecID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, CallFunc_BI_GetTaskFactory_retValue_1) == 0x000038, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::CallFunc_BI_GetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, CallFunc_BI_MakeCureTask_ret) == 0x00004C, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::CallFunc_BI_MakeCureTask_ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, CallFunc_BI_GetTaskFactory_retValue_2) == 0x000058, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::CallFunc_BI_GetTaskFactory_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, CallFunc_BI_AddPartyPanelCtrlTask_retValue) == 0x000068, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::CallFunc_BI_AddPartyPanelCtrlTask_retValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, CallFunc_BI_UniqueSkill_GetCureMPMagatsuhiGaugeMax_ReturnValue) == 0x00006C, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::CallFunc_BI_UniqueSkill_GetCureMPMagatsuhiGaugeMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, CallFunc_BI_GetSideIsInFieldList_ReturnValue) == 0x000070, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::CallFunc_BI_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, CallFunc_Array_Get_Item) == 0x000080, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, CallFunc_Greater_IntInt_ReturnValue) == 0x000089, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax, CallFunc_BI_CheckMaxUpliftingGauge_ReturnValue) == 0x00008A, "Member 'BattleMain_C_BI_UniqueSkill_CureMPMagatsuhiGaugeMax::CallFunc_BI_CheckMaxUpliftingGauge_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_PartyPanelGetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_PartyPanelGetVisibility final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_PartyPanelGetVisibility) == 0x000001, "Wrong alignment on BattleMain_C_BI_PartyPanelGetVisibility");
static_assert(sizeof(BattleMain_C_BI_PartyPanelGetVisibility) == 0x000001, "Wrong size on BattleMain_C_BI_PartyPanelGetVisibility");
static_assert(offsetof(BattleMain_C_BI_PartyPanelGetVisibility, IsVisible) == 0x000000, "Member 'BattleMain_C_BI_PartyPanelGetVisibility::IsVisible' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_CheckBossRushChallengeMode
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_CheckBossRushChallengeMode final
{
public:
	bool                                          Ret;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBossRushChallengeMode_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_CheckBossRushChallengeMode) == 0x000001, "Wrong alignment on BattleMain_C_BI_CheckBossRushChallengeMode");
static_assert(sizeof(BattleMain_C_BI_CheckBossRushChallengeMode) == 0x000002, "Wrong size on BattleMain_C_BI_CheckBossRushChallengeMode");
static_assert(offsetof(BattleMain_C_BI_CheckBossRushChallengeMode, Ret) == 0x000000, "Member 'BattleMain_C_BI_CheckBossRushChallengeMode::Ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_CheckBossRushChallengeMode, CallFunc_IsBossRushChallengeMode_ReturnValue) == 0x000001, "Member 'BattleMain_C_BI_CheckBossRushChallengeMode::CallFunc_IsBossRushChallengeMode_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UniqueSkill_ActionEnd
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_BI_UniqueSkill_ActionEnd final
{
public:
	bool                                          IsAllAction;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsDeadOnly;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReserveDeadPartyIndex;                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UniqueSkill_ActionEnd) == 0x000004, "Wrong alignment on BattleMain_C_BI_UniqueSkill_ActionEnd");
static_assert(sizeof(BattleMain_C_BI_UniqueSkill_ActionEnd) == 0x00000C, "Wrong size on BattleMain_C_BI_UniqueSkill_ActionEnd");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_ActionEnd, IsAllAction) == 0x000000, "Member 'BattleMain_C_BI_UniqueSkill_ActionEnd::IsAllAction' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_ActionEnd, IsDeadOnly) == 0x000001, "Member 'BattleMain_C_BI_UniqueSkill_ActionEnd::IsDeadOnly' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_ActionEnd, ReserveDeadPartyIndex) == 0x000004, "Member 'BattleMain_C_BI_UniqueSkill_ActionEnd::ReserveDeadPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_ActionEnd, Ret) == 0x000008, "Member 'BattleMain_C_BI_UniqueSkill_ActionEnd::Ret' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UniqueSkill_BstDead
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_UniqueSkill_BstDead final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    Lo_side;                                           // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_party_index;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_UniqueSkill_ActionEnd_ret;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_UniqueSkill_BstDead) == 0x000004, "Wrong alignment on BattleMain_C_BI_UniqueSkill_BstDead");
static_assert(sizeof(BattleMain_C_BI_UniqueSkill_BstDead) == 0x000010, "Wrong size on BattleMain_C_BI_UniqueSkill_BstDead");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_BstDead, PartyIndex) == 0x000000, "Member 'BattleMain_C_BI_UniqueSkill_BstDead::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_BstDead, Ret) == 0x000004, "Member 'BattleMain_C_BI_UniqueSkill_BstDead::Ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_BstDead, Lo_side) == 0x000005, "Member 'BattleMain_C_BI_UniqueSkill_BstDead::Lo_side' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_BstDead, Lo_party_index) == 0x000008, "Member 'BattleMain_C_BI_UniqueSkill_BstDead::Lo_party_index' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_BstDead, CallFunc_BI_UniqueSkill_ActionEnd_ret) == 0x00000C, "Member 'BattleMain_C_BI_UniqueSkill_BstDead::CallFunc_BI_UniqueSkill_ActionEnd_ret' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UniqueSkill_BstDead, CallFunc_BI_GetSide_ReturnValue) == 0x00000D, "Member 'BattleMain_C_BI_UniqueSkill_BstDead::CallFunc_BI_GetSide_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_CheckBossRush
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_CheckBossRush final
{
public:
	bool                                          IsBossRush;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_CheckBossRush) == 0x000001, "Wrong alignment on BattleMain_C_BI_CheckBossRush");
static_assert(sizeof(BattleMain_C_BI_CheckBossRush) == 0x000001, "Wrong size on BattleMain_C_BI_CheckBossRush");
static_assert(offsetof(BattleMain_C_BI_CheckBossRush, IsBossRush) == 0x000000, "Member 'BattleMain_C_BI_CheckBossRush::IsBossRush' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetEncountID
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_BI_GetEncountID final
{
public:
	int32                                         EncountID;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEvent;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsEvent;                                        // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetEncountID) == 0x000004, "Wrong alignment on BattleMain_C_BI_GetEncountID");
static_assert(sizeof(BattleMain_C_BI_GetEncountID) == 0x00000C, "Wrong size on BattleMain_C_BI_GetEncountID");
static_assert(offsetof(BattleMain_C_BI_GetEncountID, EncountID) == 0x000000, "Member 'BattleMain_C_BI_GetEncountID::EncountID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetEncountID, IsEvent) == 0x000004, "Member 'BattleMain_C_BI_GetEncountID::IsEvent' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetEncountID, Lo_IsEvent) == 0x000005, "Member 'BattleMain_C_BI_GetEncountID::Lo_IsEvent' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetEncountID, CallFunc_Greater_IntInt_ReturnValue) == 0x000006, "Member 'BattleMain_C_BI_GetEncountID::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetEncountID, CallFunc_SelectInt_ReturnValue) == 0x000008, "Member 'BattleMain_C_BI_GetEncountID::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetEventSystem
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetEventSystem final
{
public:
	TScriptInterface<class IBPI_BattleEventSystem_C> EventSystem;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetEventSystem) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetEventSystem");
static_assert(sizeof(BattleMain_C_BI_GetEventSystem) == 0x000010, "Wrong size on BattleMain_C_BI_GetEventSystem");
static_assert(offsetof(BattleMain_C_BI_GetEventSystem, EventSystem) == 0x000000, "Member 'BattleMain_C_BI_GetEventSystem::EventSystem' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetEffectManager
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetEffectManager final
{
public:
	TScriptInterface<class IBPI_BattleEffectManager_C> Manager;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetEffectManager) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetEffectManager");
static_assert(sizeof(BattleMain_C_BI_GetEffectManager) == 0x000010, "Wrong size on BattleMain_C_BI_GetEffectManager");
static_assert(offsetof(BattleMain_C_BI_GetEffectManager, Manager) == 0x000000, "Member 'BattleMain_C_BI_GetEffectManager::Manager' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_InfoMessIsDispOn
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_InfoMessIsDispOn final
{
public:
	bool                                          IsDispOn;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDispOn_retValue;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_InfoMessIsDispOn) == 0x000001, "Wrong alignment on BattleMain_C_BI_InfoMessIsDispOn");
static_assert(sizeof(BattleMain_C_BI_InfoMessIsDispOn) == 0x000002, "Wrong size on BattleMain_C_BI_InfoMessIsDispOn");
static_assert(offsetof(BattleMain_C_BI_InfoMessIsDispOn, IsDispOn) == 0x000000, "Member 'BattleMain_C_BI_InfoMessIsDispOn::IsDispOn' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_InfoMessIsDispOn, CallFunc_IsDispOn_retValue) == 0x000001, "Member 'BattleMain_C_BI_InfoMessIsDispOn::CallFunc_IsDispOn_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetTaskModelManager
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetTaskModelManager final
{
public:
	TScriptInterface<class IBPI_BattleTaskModelManager_C> Manager;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetTaskModelManager) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetTaskModelManager");
static_assert(sizeof(BattleMain_C_BI_GetTaskModelManager) == 0x000010, "Wrong size on BattleMain_C_BI_GetTaskModelManager");
static_assert(offsetof(BattleMain_C_BI_GetTaskModelManager, Manager) == 0x000000, "Member 'BattleMain_C_BI_GetTaskModelManager::Manager' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetPrevBattleBGM
// 0x0028 (0x0028 - 0x0000)
struct BattleMain_C_BI_SetPrevBattleBGM final
{
public:
	class USoundAtomCue*                          PrevBattleBGM;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleSoundManager_C> CallFunc_BI_RememberCurrentBGM_self_CastInput;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_RememberCurrentBGM_NoUse;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SetPrevBattleBGM) == 0x000008, "Wrong alignment on BattleMain_C_BI_SetPrevBattleBGM");
static_assert(sizeof(BattleMain_C_BI_SetPrevBattleBGM) == 0x000028, "Wrong size on BattleMain_C_BI_SetPrevBattleBGM");
static_assert(offsetof(BattleMain_C_BI_SetPrevBattleBGM, PrevBattleBGM) == 0x000000, "Member 'BattleMain_C_BI_SetPrevBattleBGM::PrevBattleBGM' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPrevBattleBGM, NoUse) == 0x000008, "Member 'BattleMain_C_BI_SetPrevBattleBGM::NoUse' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPrevBattleBGM, CallFunc_BI_RememberCurrentBGM_self_CastInput) == 0x000010, "Member 'BattleMain_C_BI_SetPrevBattleBGM::CallFunc_BI_RememberCurrentBGM_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPrevBattleBGM, CallFunc_BI_RememberCurrentBGM_NoUse) == 0x000020, "Member 'BattleMain_C_BI_SetPrevBattleBGM::CallFunc_BI_RememberCurrentBGM_NoUse' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetWindowActivation
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_GetWindowActivation final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetWindowActivation) == 0x000001, "Wrong alignment on BattleMain_C_BI_GetWindowActivation");
static_assert(sizeof(BattleMain_C_BI_GetWindowActivation) == 0x000001, "Wrong size on BattleMain_C_BI_GetWindowActivation");
static_assert(offsetof(BattleMain_C_BI_GetWindowActivation, Active) == 0x000000, "Member 'BattleMain_C_BI_GetWindowActivation::Active' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_BeHomeSideAll
// 0x0003 (0x0003 - 0x0000)
struct BattleMain_C_BI_BeHomeSideAll final
{
public:
	E_BTL_SIDE                                    Side;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_BeHomeSideAll) == 0x000001, "Wrong alignment on BattleMain_C_BI_BeHomeSideAll");
static_assert(sizeof(BattleMain_C_BI_BeHomeSideAll) == 0x000003, "Wrong size on BattleMain_C_BI_BeHomeSideAll");
static_assert(offsetof(BattleMain_C_BI_BeHomeSideAll, Side) == 0x000000, "Member 'BattleMain_C_BI_BeHomeSideAll::Side' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_BeHomeSideAll, RetValue) == 0x000001, "Member 'BattleMain_C_BI_BeHomeSideAll::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_BeHomeSideAll, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BattleMain_C_BI_BeHomeSideAll::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_BeHome
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_BeHome final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_BeHome) == 0x000004, "Wrong alignment on BattleMain_C_BI_BeHome");
static_assert(sizeof(BattleMain_C_BI_BeHome) == 0x000008, "Wrong size on BattleMain_C_BI_BeHome");
static_assert(offsetof(BattleMain_C_BI_BeHome, PartyIndex) == 0x000000, "Member 'BattleMain_C_BI_BeHome::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_BeHome, RetValue) == 0x000004, "Member 'BattleMain_C_BI_BeHome::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UnitSetVisibilityAll
// 0x0002 (0x0002 - 0x0000)
struct BattleMain_C_BI_UnitSetVisibilityAll final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UnitSetVisibilityAll) == 0x000001, "Wrong alignment on BattleMain_C_BI_UnitSetVisibilityAll");
static_assert(sizeof(BattleMain_C_BI_UnitSetVisibilityAll) == 0x000002, "Wrong size on BattleMain_C_BI_UnitSetVisibilityAll");
static_assert(offsetof(BattleMain_C_BI_UnitSetVisibilityAll, Sw) == 0x000000, "Member 'BattleMain_C_BI_UnitSetVisibilityAll::Sw' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UnitSetVisibilityAll, RetValue) == 0x000001, "Member 'BattleMain_C_BI_UnitSetVisibilityAll::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UnitSetVisibilitySideAll
// 0x0004 (0x0004 - 0x0000)
struct BattleMain_C_BI_UnitSetVisibilitySideAll final
{
public:
	E_BTL_SIDE                                    Side;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UnitSetVisibilitySideAll) == 0x000001, "Wrong alignment on BattleMain_C_BI_UnitSetVisibilitySideAll");
static_assert(sizeof(BattleMain_C_BI_UnitSetVisibilitySideAll) == 0x000004, "Wrong size on BattleMain_C_BI_UnitSetVisibilitySideAll");
static_assert(offsetof(BattleMain_C_BI_UnitSetVisibilitySideAll, Side) == 0x000000, "Member 'BattleMain_C_BI_UnitSetVisibilitySideAll::Side' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UnitSetVisibilitySideAll, Sw) == 0x000001, "Member 'BattleMain_C_BI_UnitSetVisibilitySideAll::Sw' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UnitSetVisibilitySideAll, RetValue) == 0x000002, "Member 'BattleMain_C_BI_UnitSetVisibilitySideAll::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UnitSetVisibilitySideAll, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'BattleMain_C_BI_UnitSetVisibilitySideAll::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UnitSetVisibility
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_UnitSetVisibility final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UnitSetVisibility) == 0x000004, "Wrong alignment on BattleMain_C_BI_UnitSetVisibility");
static_assert(sizeof(BattleMain_C_BI_UnitSetVisibility) == 0x000008, "Wrong size on BattleMain_C_BI_UnitSetVisibility");
static_assert(offsetof(BattleMain_C_BI_UnitSetVisibility, PartyIndex) == 0x000000, "Member 'BattleMain_C_BI_UnitSetVisibility::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UnitSetVisibility, Sw) == 0x000004, "Member 'BattleMain_C_BI_UnitSetVisibility::Sw' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UnitSetVisibility, RetValue) == 0x000005, "Member 'BattleMain_C_BI_UnitSetVisibility::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UpdateEnemyInfo
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_UpdateEnemyInfo final
{
public:
	bool                                          RetVlaue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UpdateEnemyInfo) == 0x000001, "Wrong alignment on BattleMain_C_BI_UpdateEnemyInfo");
static_assert(sizeof(BattleMain_C_BI_UpdateEnemyInfo) == 0x000001, "Wrong size on BattleMain_C_BI_UpdateEnemyInfo");
static_assert(offsetof(BattleMain_C_BI_UpdateEnemyInfo, RetVlaue) == 0x000000, "Member 'BattleMain_C_BI_UpdateEnemyInfo::RetVlaue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UpdateUnitState
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_BI_UpdateUnitState final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCureBySkill;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLacerationDamage;                                // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UpdateLookAt;                                      // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForcePlayMotion;                                   // 0x0007(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UpdateUnitState) == 0x000004, "Wrong alignment on BattleMain_C_BI_UpdateUnitState");
static_assert(sizeof(BattleMain_C_BI_UpdateUnitState) == 0x00000C, "Wrong size on BattleMain_C_BI_UpdateUnitState");
static_assert(offsetof(BattleMain_C_BI_UpdateUnitState, PartyIndex) == 0x000000, "Member 'BattleMain_C_BI_UpdateUnitState::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UpdateUnitState, IsCureBySkill) == 0x000004, "Member 'BattleMain_C_BI_UpdateUnitState::IsCureBySkill' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UpdateUnitState, IsLacerationDamage) == 0x000005, "Member 'BattleMain_C_BI_UpdateUnitState::IsLacerationDamage' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UpdateUnitState, UpdateLookAt) == 0x000006, "Member 'BattleMain_C_BI_UpdateUnitState::UpdateLookAt' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UpdateUnitState, ForcePlayMotion) == 0x000007, "Member 'BattleMain_C_BI_UpdateUnitState::ForcePlayMotion' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UpdateUnitState, RetValue) == 0x000008, "Member 'BattleMain_C_BI_UpdateUnitState::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetPartyUnit
// 0x0020 (0x0020 - 0x0000)
struct BattleMain_C_BI_GetPartyUnit final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> RetValue;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetPartyUnit) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetPartyUnit");
static_assert(sizeof(BattleMain_C_BI_GetPartyUnit) == 0x000020, "Wrong size on BattleMain_C_BI_GetPartyUnit");
static_assert(offsetof(BattleMain_C_BI_GetPartyUnit, PartyIndex) == 0x000000, "Member 'BattleMain_C_BI_GetPartyUnit::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetPartyUnit, RetValue) == 0x000008, "Member 'BattleMain_C_BI_GetPartyUnit::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetPartyUnit, CallFunc_GetPartyUnit_retValue) == 0x000018, "Member 'BattleMain_C_BI_GetPartyUnit::CallFunc_GetPartyUnit_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_SetPartyUnit
// 0x0030 (0x0030 - 0x0000)
struct BattleMain_C_BI_SetPartyUnit final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> InUnit;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         DevilID;                                           // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_CHAR_TYPE                               Type;                                              // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReader;                                          // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x001E(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_SetPartyUnit) == 0x000008, "Wrong alignment on BattleMain_C_BI_SetPartyUnit");
static_assert(sizeof(BattleMain_C_BI_SetPartyUnit) == 0x000030, "Wrong size on BattleMain_C_BI_SetPartyUnit");
static_assert(offsetof(BattleMain_C_BI_SetPartyUnit, PartyIndex) == 0x000000, "Member 'BattleMain_C_BI_SetPartyUnit::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyUnit, InUnit) == 0x000008, "Member 'BattleMain_C_BI_SetPartyUnit::InUnit' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyUnit, DevilID) == 0x000018, "Member 'BattleMain_C_BI_SetPartyUnit::DevilID' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyUnit, Type) == 0x00001C, "Member 'BattleMain_C_BI_SetPartyUnit::Type' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyUnit, IsReader) == 0x00001D, "Member 'BattleMain_C_BI_SetPartyUnit::IsReader' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyUnit, RetValue) == 0x00001E, "Member 'BattleMain_C_BI_SetPartyUnit::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyUnit, K2Node_DynamicCast_AsChara_Base) == 0x000020, "Member 'BattleMain_C_BI_SetPartyUnit::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_SetPartyUnit, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleMain_C_BI_SetPartyUnit::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UnitSetDitherValue
// 0x000C (0x000C - 0x0000)
struct BattleMain_C_BI_UnitSetDitherValue final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFadeOut;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UnitSetDitherValue) == 0x000004, "Wrong alignment on BattleMain_C_BI_UnitSetDitherValue");
static_assert(sizeof(BattleMain_C_BI_UnitSetDitherValue) == 0x00000C, "Wrong size on BattleMain_C_BI_UnitSetDitherValue");
static_assert(offsetof(BattleMain_C_BI_UnitSetDitherValue, PartyIndex) == 0x000000, "Member 'BattleMain_C_BI_UnitSetDitherValue::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UnitSetDitherValue, Time) == 0x000004, "Member 'BattleMain_C_BI_UnitSetDitherValue::Time' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UnitSetDitherValue, IsFadeOut) == 0x000008, "Member 'BattleMain_C_BI_UnitSetDitherValue::IsFadeOut' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UnitSetDitherValue, RetValue) == 0x000009, "Member 'BattleMain_C_BI_UnitSetDitherValue::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UnitSetDitherValueSideAll
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_UnitSetDitherValueSideAll final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFadeOut;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayer;                                          // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0006(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UnitSetDitherValueSideAll) == 0x000004, "Wrong alignment on BattleMain_C_BI_UnitSetDitherValueSideAll");
static_assert(sizeof(BattleMain_C_BI_UnitSetDitherValueSideAll) == 0x000008, "Wrong size on BattleMain_C_BI_UnitSetDitherValueSideAll");
static_assert(offsetof(BattleMain_C_BI_UnitSetDitherValueSideAll, Time) == 0x000000, "Member 'BattleMain_C_BI_UnitSetDitherValueSideAll::Time' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UnitSetDitherValueSideAll, IsFadeOut) == 0x000004, "Member 'BattleMain_C_BI_UnitSetDitherValueSideAll::IsFadeOut' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UnitSetDitherValueSideAll, IsPlayer) == 0x000005, "Member 'BattleMain_C_BI_UnitSetDitherValueSideAll::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_UnitSetDitherValueSideAll, RetValue) == 0x000006, "Member 'BattleMain_C_BI_UnitSetDitherValueSideAll::RetValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetUnitStateMotion
// 0x0008 (0x0008 - 0x0000)
struct BattleMain_C_BI_GetUnitStateMotion final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             RetValue;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             CallFunc_GetUnitStateMotion_retValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleMain_C_BI_GetUnitStateMotion) == 0x000004, "Wrong alignment on BattleMain_C_BI_GetUnitStateMotion");
static_assert(sizeof(BattleMain_C_BI_GetUnitStateMotion) == 0x000008, "Wrong size on BattleMain_C_BI_GetUnitStateMotion");
static_assert(offsetof(BattleMain_C_BI_GetUnitStateMotion, PartyIndex) == 0x000000, "Member 'BattleMain_C_BI_GetUnitStateMotion::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetUnitStateMotion, RetValue) == 0x000004, "Member 'BattleMain_C_BI_GetUnitStateMotion::RetValue' has a wrong offset!");
static_assert(offsetof(BattleMain_C_BI_GetUnitStateMotion, CallFunc_GetUnitStateMotion_retValue) == 0x000005, "Member 'BattleMain_C_BI_GetUnitStateMotion::CallFunc_GetUnitStateMotion_retValue' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_UpdateUnitAveLocation
// 0x0001 (0x0001 - 0x0000)
struct BattleMain_C_BI_UpdateUnitAveLocation final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_UpdateUnitAveLocation) == 0x000001, "Wrong alignment on BattleMain_C_BI_UpdateUnitAveLocation");
static_assert(sizeof(BattleMain_C_BI_UpdateUnitAveLocation) == 0x000001, "Wrong size on BattleMain_C_BI_UpdateUnitAveLocation");
static_assert(offsetof(BattleMain_C_BI_UpdateUnitAveLocation, NoUse) == 0x000000, "Member 'BattleMain_C_BI_UpdateUnitAveLocation::NoUse' has a wrong offset!");

// Function BattleMain.BattleMain_C.BI_GetAICommand
// 0x0010 (0x0010 - 0x0000)
struct BattleMain_C_BI_GetAICommand final
{
public:
	TScriptInterface<class IBPI_AICommand_C>      Ret;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleMain_C_BI_GetAICommand) == 0x000008, "Wrong alignment on BattleMain_C_BI_GetAICommand");
static_assert(sizeof(BattleMain_C_BI_GetAICommand) == 0x000010, "Wrong size on BattleMain_C_BI_GetAICommand");
static_assert(offsetof(BattleMain_C_BI_GetAICommand, Ret) == 0x000000, "Member 'BattleMain_C_BI_GetAICommand::Ret' has a wrong offset!");

}

