#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CommonHelpWindowCtrl

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BPI_CommonHelpWindowCtrl.BPI_CommonHelpWindowCtrl_C.ICommonHelpWindowOpen
// 0x0001 (0x0001 - 0x0000)
struct BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowOpen final
{
public:
	E_WIDGET_PRIO                                 InPrio;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowOpen) == 0x000001, "Wrong alignment on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowOpen");
static_assert(sizeof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowOpen) == 0x000001, "Wrong size on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowOpen");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowOpen, InPrio) == 0x000000, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowOpen::InPrio' has a wrong offset!");

// Function BPI_CommonHelpWindowCtrl.BPI_CommonHelpWindowCtrl_C.ICommonHelpWindowIsOpened
// 0x0001 (0x0001 - 0x0000)
struct BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowIsOpened final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowIsOpened) == 0x000001, "Wrong alignment on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowIsOpened");
static_assert(sizeof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowIsOpened) == 0x000001, "Wrong size on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowIsOpened");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowIsOpened, OutFinished) == 0x000000, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowIsOpened::OutFinished' has a wrong offset!");

// Function BPI_CommonHelpWindowCtrl.BPI_CommonHelpWindowCtrl_C.ICommonHelpWindowIsClosed
// 0x0001 (0x0001 - 0x0000)
struct BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowIsClosed final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowIsClosed) == 0x000001, "Wrong alignment on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowIsClosed");
static_assert(sizeof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowIsClosed) == 0x000001, "Wrong size on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowIsClosed");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowIsClosed, OutFinished) == 0x000000, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowIsClosed::OutFinished' has a wrong offset!");

// Function BPI_CommonHelpWindowCtrl.BPI_CommonHelpWindowCtrl_C.ICommonHelpWindowSetWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetWidgetVisibility final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetWidgetVisibility) == 0x000001, "Wrong alignment on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetWidgetVisibility");
static_assert(sizeof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetWidgetVisibility) == 0x000001, "Wrong size on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetWidgetVisibility");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetWidgetVisibility, InVisibility) == 0x000000, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetWidgetVisibility::InVisibility' has a wrong offset!");

// Function BPI_CommonHelpWindowCtrl.BPI_CommonHelpWindowCtrl_C.ICommonHelpWindowGetWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowGetWidgetVisibility final
{
public:
	ESlateVisibility                              Visibility;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowGetWidgetVisibility) == 0x000001, "Wrong alignment on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowGetWidgetVisibility");
static_assert(sizeof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowGetWidgetVisibility) == 0x000001, "Wrong size on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowGetWidgetVisibility");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowGetWidgetVisibility, Visibility) == 0x000000, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowGetWidgetVisibility::Visibility' has a wrong offset!");

// Function BPI_CommonHelpWindowCtrl.BPI_CommonHelpWindowCtrl_C.ICommonHelpWindowExecutionOpen
// 0x0001 (0x0001 - 0x0000)
struct BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowExecutionOpen final
{
public:
	E_WIDGET_PRIO                                 InPrio;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowExecutionOpen) == 0x000001, "Wrong alignment on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowExecutionOpen");
static_assert(sizeof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowExecutionOpen) == 0x000001, "Wrong size on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowExecutionOpen");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowExecutionOpen, InPrio) == 0x000000, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowExecutionOpen::InPrio' has a wrong offset!");

// Function BPI_CommonHelpWindowCtrl.BPI_CommonHelpWindowCtrl_C.ICommonHelpWindowSetRichTextByLabel
// 0x0018 (0x0018 - 0x0000)
struct BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel final
{
public:
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InLabel;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InChangeAnime;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InExecutionText;                                   // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InBuildText;                                       // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel) == 0x000008, "Wrong alignment on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel");
static_assert(sizeof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel) == 0x000018, "Wrong size on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel, InScriptMessageAsset) == 0x000000, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel, InLabel) == 0x000008, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel::InLabel' has a wrong offset!");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel, InChangeAnime) == 0x000010, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel::InChangeAnime' has a wrong offset!");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel, InExecutionText) == 0x000011, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel::InExecutionText' has a wrong offset!");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel, InBuildText) == 0x000012, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByLabel::InBuildText' has a wrong offset!");

// Function BPI_CommonHelpWindowCtrl.BPI_CommonHelpWindowCtrl_C.ICommonHelpWindowSetRichTextByIndex
// 0x0010 (0x0010 - 0x0000)
struct BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex final
{
public:
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIndex;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InChangeAnime;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InExecutionText;                                   // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InBuildText;                                       // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex) == 0x000008, "Wrong alignment on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex");
static_assert(sizeof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex) == 0x000010, "Wrong size on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex, InScriptMessageAsset) == 0x000000, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex, InIndex) == 0x000008, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex, InChangeAnime) == 0x00000C, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex::InChangeAnime' has a wrong offset!");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex, InExecutionText) == 0x00000D, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex::InExecutionText' has a wrong offset!");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex, InBuildText) == 0x00000E, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetRichTextByIndex::InBuildText' has a wrong offset!");

// Function BPI_CommonHelpWindowCtrl.BPI_CommonHelpWindowCtrl_C.ICommonHelpWindowSetSkillId
// 0x0004 (0x0004 - 0x0000)
struct BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetSkillId final
{
public:
	int32                                         InSkillId;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetSkillId) == 0x000004, "Wrong alignment on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetSkillId");
static_assert(sizeof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetSkillId) == 0x000004, "Wrong size on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetSkillId");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetSkillId, InSkillId) == 0x000000, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetSkillId::InSkillId' has a wrong offset!");

// Function BPI_CommonHelpWindowCtrl.BPI_CommonHelpWindowCtrl_C.ICommonHelpWindowSetItemId
// 0x0004 (0x0004 - 0x0000)
struct BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetItemId final
{
public:
	int32                                         InItemId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetItemId) == 0x000004, "Wrong alignment on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetItemId");
static_assert(sizeof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetItemId) == 0x000004, "Wrong size on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetItemId");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetItemId, InItemId) == 0x000000, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetItemId::InItemId' has a wrong offset!");

// Function BPI_CommonHelpWindowCtrl.BPI_CommonHelpWindowCtrl_C.ICommonHelpWindowSetProgramValue
// 0x0018 (0x0018 - 0x0000)
struct BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InString;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue) == 0x000008, "Wrong alignment on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue");
static_assert(sizeof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue) == 0x000018, "Wrong size on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue, InIndex) == 0x000000, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue, InString) == 0x000008, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetProgramValue::InString' has a wrong offset!");

// Function BPI_CommonHelpWindowCtrl.BPI_CommonHelpWindowCtrl_C.ICommonHelpWindowClearRichText
// 0x0001 (0x0001 - 0x0000)
struct BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowClearRichText final
{
public:
	bool                                          InChangeAnime;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowClearRichText) == 0x000001, "Wrong alignment on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowClearRichText");
static_assert(sizeof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowClearRichText) == 0x000001, "Wrong size on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowClearRichText");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowClearRichText, InChangeAnime) == 0x000000, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowClearRichText::InChangeAnime' has a wrong offset!");

// Function BPI_CommonHelpWindowCtrl.BPI_CommonHelpWindowCtrl_C.ICommonHelpWindowSetValueParam
// 0x0008 (0x0008 - 0x0000)
struct BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InParam;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam) == 0x000004, "Wrong alignment on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam");
static_assert(sizeof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam) == 0x000008, "Wrong size on BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam, InIndex) == 0x000000, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam::InIndex' has a wrong offset!");
static_assert(offsetof(BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam, InParam) == 0x000004, "Member 'BPI_CommonHelpWindowCtrl_C_ICommonHelpWindowSetValueParam::InParam' has a wrong offset!");

}

