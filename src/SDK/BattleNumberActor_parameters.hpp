#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleNumberActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Project_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BattleNumberActor.BattleNumberActor_C.ExecuteUbergraph_BattleNumberActor
// 0x0020 (0x0020 - 0x0000)
struct BattleNumberActor_C_ExecuteUbergraph_BattleNumberActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A1E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlNumber_C*                        CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleNumberActor_C_ExecuteUbergraph_BattleNumberActor) == 0x000008, "Wrong alignment on BattleNumberActor_C_ExecuteUbergraph_BattleNumberActor");
static_assert(sizeof(BattleNumberActor_C_ExecuteUbergraph_BattleNumberActor) == 0x000020, "Wrong size on BattleNumberActor_C_ExecuteUbergraph_BattleNumberActor");
static_assert(offsetof(BattleNumberActor_C_ExecuteUbergraph_BattleNumberActor, EntryPoint) == 0x000000, "Member 'BattleNumberActor_C_ExecuteUbergraph_BattleNumberActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_ExecuteUbergraph_BattleNumberActor, CallFunc_AddToWidgetPrio_ReturnValue) == 0x000004, "Member 'BattleNumberActor_C_ExecuteUbergraph_BattleNumberActor::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_ExecuteUbergraph_BattleNumberActor, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BattleNumberActor_C_ExecuteUbergraph_BattleNumberActor::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_ExecuteUbergraph_BattleNumberActor, CallFunc_Create_ReturnValue) == 0x000010, "Member 'BattleNumberActor_C_ExecuteUbergraph_BattleNumberActor::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_ExecuteUbergraph_BattleNumberActor, K2Node_Event_EndPlayReason) == 0x000018, "Member 'BattleNumberActor_C_ExecuteUbergraph_BattleNumberActor::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BattleNumberActor.BattleNumberActor_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BattleNumberActor_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleNumberActor_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BattleNumberActor_C_ReceiveEndPlay");
static_assert(sizeof(BattleNumberActor_C_ReceiveEndPlay) == 0x000001, "Wrong size on BattleNumberActor_C_ReceiveEndPlay");
static_assert(offsetof(BattleNumberActor_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BattleNumberActor_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BattleNumberActor.BattleNumberActor_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BattleNumberActor_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleNumberActor_C_ReceiveTick) == 0x000004, "Wrong alignment on BattleNumberActor_C_ReceiveTick");
static_assert(sizeof(BattleNumberActor_C_ReceiveTick) == 0x000004, "Wrong size on BattleNumberActor_C_ReceiveTick");
static_assert(offsetof(BattleNumberActor_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BattleNumberActor_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BattleNumberActor.BattleNumberActor_C.Show
// 0x00CC (0x00CC - 0x0000)
struct BattleNumberActor_C_Show final
{
public:
	int32                                         HP_Value;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MP_Value;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UTIL_ICON_TYPE                          HitType;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A20[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Level;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  NumEffectType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A21[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SocketLocation;                                    // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PosOffset;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ratio;                                             // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SizeRatio;                                         // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PartyIndex;                                        // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalcViewportPos_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0040(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleNumberActor_C_Show) == 0x000004, "Wrong alignment on BattleNumberActor_C_Show");
static_assert(sizeof(BattleNumberActor_C_Show) == 0x0000CC, "Wrong size on BattleNumberActor_C_Show");
static_assert(offsetof(BattleNumberActor_C_Show, HP_Value) == 0x000000, "Member 'BattleNumberActor_C_Show::HP_Value' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_Show, MP_Value) == 0x000004, "Member 'BattleNumberActor_C_Show::MP_Value' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_Show, HitType) == 0x000008, "Member 'BattleNumberActor_C_Show::HitType' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_Show, Level) == 0x00000C, "Member 'BattleNumberActor_C_Show::Level' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_Show, NumEffectType) == 0x000010, "Member 'BattleNumberActor_C_Show::NumEffectType' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_Show, SocketLocation) == 0x000014, "Member 'BattleNumberActor_C_Show::SocketLocation' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_Show, PosOffset) == 0x000020, "Member 'BattleNumberActor_C_Show::PosOffset' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_Show, Ratio) == 0x000028, "Member 'BattleNumberActor_C_Show::Ratio' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_Show, PlayRate) == 0x00002C, "Member 'BattleNumberActor_C_Show::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_Show, SizeRatio) == 0x000030, "Member 'BattleNumberActor_C_Show::SizeRatio' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_Show, PartyIndex) == 0x000034, "Member 'BattleNumberActor_C_Show::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_Show, CallFunc_CalcViewportPos_ReturnValue) == 0x000038, "Member 'BattleNumberActor_C_Show::CallFunc_CalcViewportPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_Show, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000040, "Member 'BattleNumberActor_C_Show::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_Show, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000C8, "Member 'BattleNumberActor_C_Show::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function BattleNumberActor.BattleNumberActor_C.IsFinished
// 0x0002 (0x0002 - 0x0000)
struct BattleNumberActor_C_IsFinished final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFinished_retValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleNumberActor_C_IsFinished) == 0x000001, "Wrong alignment on BattleNumberActor_C_IsFinished");
static_assert(sizeof(BattleNumberActor_C_IsFinished) == 0x000002, "Wrong size on BattleNumberActor_C_IsFinished");
static_assert(offsetof(BattleNumberActor_C_IsFinished, RetValue) == 0x000000, "Member 'BattleNumberActor_C_IsFinished::RetValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_IsFinished, CallFunc_IsFinished_retValue) == 0x000001, "Member 'BattleNumberActor_C_IsFinished::CallFunc_IsFinished_retValue' has a wrong offset!");

// Function BattleNumberActor.BattleNumberActor_C.LocationAdjust
// 0x00C0 (0x00C0 - 0x0000)
struct BattleNumberActor_C_LocationAdjust final
{
public:
	struct FVector2D                              Lo_ScreenSize;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Lo_ScreenLocaction;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_NormalSafe2D_ReturnValue;                 // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A22[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A23[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_DeprojectScreenPositionToWorld_WorldLocation; // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenPositionToWorld_WorldDirection; // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeprojectScreenPositionToWorld_ReturnValue; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A24[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A25[0x1];                                     // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A26[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue; // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleNumberActor_C_LocationAdjust) == 0x000008, "Wrong alignment on BattleNumberActor_C_LocationAdjust");
static_assert(sizeof(BattleNumberActor_C_LocationAdjust) == 0x0000C0, "Wrong size on BattleNumberActor_C_LocationAdjust");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, Lo_ScreenSize) == 0x000000, "Member 'BattleNumberActor_C_LocationAdjust::Lo_ScreenSize' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, Lo_ScreenLocaction) == 0x000008, "Member 'BattleNumberActor_C_LocationAdjust::Lo_ScreenLocaction' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000018, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_BreakVector2D_X) == 0x000020, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_BreakVector2D_X_1) == 0x000028, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_BreakVector2D_Y_1) == 0x00002C, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000030, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_FMin_ReturnValue) == 0x000038, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_NormalSafe2D_ReturnValue) == 0x00003C, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_NormalSafe2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000048, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_BreakVector2D_X_2) == 0x000050, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_BreakVector2D_Y_2) == 0x000054, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000058, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000060, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_BreakVector2D_X_3) == 0x000064, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_BreakVector2D_Y_3) == 0x000068, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_Less_FloatFloat_ReturnValue) == 0x00006C, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_DeprojectScreenPositionToWorld_WorldLocation) == 0x000070, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_DeprojectScreenPositionToWorld_WorldLocation' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_DeprojectScreenPositionToWorld_WorldDirection) == 0x00007C, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_DeprojectScreenPositionToWorld_WorldDirection' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_DeprojectScreenPositionToWorld_ReturnValue) == 0x000088, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_DeprojectScreenPositionToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000089, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_Add_VectorVector_ReturnValue) == 0x00008C, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000098, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_BooleanOR_ReturnValue) == 0x000099, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_BooleanOR_ReturnValue_1) == 0x00009A, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_GetViewportSize_ReturnValue) == 0x00009C, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_BooleanOR_ReturnValue_2) == 0x0000A4, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000A8, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_ProjectWorldLocationToScreen_ScreenLocation) == 0x0000B0, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_ProjectWorldLocationToScreen_ScreenLocation' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_LocationAdjust, CallFunc_ProjectWorldLocationToScreen_ReturnValue) == 0x0000B8, "Member 'BattleNumberActor_C_LocationAdjust::CallFunc_ProjectWorldLocationToScreen_ReturnValue' has a wrong offset!");

// Function BattleNumberActor.BattleNumberActor_C.SetWidgetVisibility
// 0x0005 (0x0005 - 0x0000)
struct BattleNumberActor_C_SetWidgetVisibility final
{
public:
	bool                                          InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleNumberActor_C_SetWidgetVisibility) == 0x000001, "Wrong alignment on BattleNumberActor_C_SetWidgetVisibility");
static_assert(sizeof(BattleNumberActor_C_SetWidgetVisibility) == 0x000005, "Wrong size on BattleNumberActor_C_SetWidgetVisibility");
static_assert(offsetof(BattleNumberActor_C_SetWidgetVisibility, InVisibility) == 0x000000, "Member 'BattleNumberActor_C_SetWidgetVisibility::InVisibility' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_SetWidgetVisibility, Temp_bool_Variable) == 0x000001, "Member 'BattleNumberActor_C_SetWidgetVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_SetWidgetVisibility, Temp_byte_Variable) == 0x000002, "Member 'BattleNumberActor_C_SetWidgetVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_SetWidgetVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'BattleNumberActor_C_SetWidgetVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_SetWidgetVisibility, K2Node_Select_Default) == 0x000004, "Member 'BattleNumberActor_C_SetWidgetVisibility::K2Node_Select_Default' has a wrong offset!");

// Function BattleNumberActor.BattleNumberActor_C.CalcViewportPos
// 0x00A8 (0x00A8 - 0x0000)
struct BattleNumberActor_C_CalcViewportPos final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Lo_ViewportSize;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_BPI_BattleMain;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_PartyPanelGetVisibility_IsVisible;     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A27[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_GetPartySystem_PartySystem;               // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsExist_retValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A28[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A29[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A2A[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleNumberActor_C_CalcViewportPos) == 0x000008, "Wrong alignment on BattleNumberActor_C_CalcViewportPos");
static_assert(sizeof(BattleNumberActor_C_CalcViewportPos) == 0x0000A8, "Wrong size on BattleNumberActor_C_CalcViewportPos");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, ReturnValue) == 0x000000, "Member 'BattleNumberActor_C_CalcViewportPos::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, Lo_ViewportSize) == 0x000008, "Member 'BattleNumberActor_C_CalcViewportPos::Lo_ViewportSize' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_GetMainWork_BPI_BattleMain) == 0x000010, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_GetMainWork_BPI_BattleMain' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_GetViewportSize_ReturnValue) == 0x000020, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_BI_PartyPanelGetVisibility_IsVisible) == 0x000028, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_BI_PartyPanelGetVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_SelectFloat_ReturnValue) == 0x00002C, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_BreakVector2D_X) == 0x000030, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_BreakVector2D_Y) == 0x000034, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_FTrunc_ReturnValue) == 0x000038, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_BreakVector2D_X_1) == 0x00003C, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_BreakVector2D_Y_1) == 0x000040, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000044, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000050, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000054, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_FTrunc_ReturnValue_1) == 0x00005C, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_GetPartySystem_PartySystem) == 0x000060, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_GetPartySystem_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000070, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_BI_IsExist_retValue) == 0x000074, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_BI_IsExist_retValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_FClamp_ReturnValue_1) == 0x000078, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_MakeVector2D_ReturnValue) == 0x00007C, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_GetPlayerController_ReturnValue) == 0x000088, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x000090, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x000098, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_CalcViewportPos, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x00009C, "Member 'BattleNumberActor_C_CalcViewportPos::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function BattleNumberActor.BattleNumberActor_C.GetMainWork
// 0x0028 (0x0028 - 0x0000)
struct BattleNumberActor_C_GetMainWork final
{
public:
	TScriptInterface<class IBPI_BattleMain_C>     BPI_BattleMain;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          K2Node_DynamicCast_AsBattle_Main;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleNumberActor_C_GetMainWork) == 0x000008, "Wrong alignment on BattleNumberActor_C_GetMainWork");
static_assert(sizeof(BattleNumberActor_C_GetMainWork) == 0x000028, "Wrong size on BattleNumberActor_C_GetMainWork");
static_assert(offsetof(BattleNumberActor_C_GetMainWork, BPI_BattleMain) == 0x000000, "Member 'BattleNumberActor_C_GetMainWork::BPI_BattleMain' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_GetMainWork, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleNumberActor_C_GetMainWork::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_GetMainWork, K2Node_DynamicCast_AsBattle_Main) == 0x000018, "Member 'BattleNumberActor_C_GetMainWork::K2Node_DynamicCast_AsBattle_Main' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_GetMainWork, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BattleNumberActor_C_GetMainWork::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleNumberActor.BattleNumberActor_C.GetPartySystem
// 0x0030 (0x0030 - 0x0000)
struct BattleNumberActor_C_GetPartySystem final
{
public:
	TScriptInterface<class IBPI_BattleParty_C>    PartySystem;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_BPI_BattleMain;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_ret;                    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleNumberActor_C_GetPartySystem) == 0x000008, "Wrong alignment on BattleNumberActor_C_GetPartySystem");
static_assert(sizeof(BattleNumberActor_C_GetPartySystem) == 0x000030, "Wrong size on BattleNumberActor_C_GetPartySystem");
static_assert(offsetof(BattleNumberActor_C_GetPartySystem, PartySystem) == 0x000000, "Member 'BattleNumberActor_C_GetPartySystem::PartySystem' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_GetPartySystem, CallFunc_GetMainWork_BPI_BattleMain) == 0x000010, "Member 'BattleNumberActor_C_GetPartySystem::CallFunc_GetMainWork_BPI_BattleMain' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_GetPartySystem, CallFunc_BI_GetPartySystem_ret) == 0x000020, "Member 'BattleNumberActor_C_GetPartySystem::CallFunc_BI_GetPartySystem_ret' has a wrong offset!");

// Function BattleNumberActor.BattleNumberActor_C.Update
// 0x0010 (0x0010 - 0x0000)
struct BattleNumberActor_C_Update final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalcViewportPos_ReturnValue;              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFinished_retValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleNumberActor_C_Update) == 0x000004, "Wrong alignment on BattleNumberActor_C_Update");
static_assert(sizeof(BattleNumberActor_C_Update) == 0x000010, "Wrong size on BattleNumberActor_C_Update");
static_assert(offsetof(BattleNumberActor_C_Update, Delta) == 0x000000, "Member 'BattleNumberActor_C_Update::Delta' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_Update, CallFunc_CalcViewportPos_ReturnValue) == 0x000004, "Member 'BattleNumberActor_C_Update::CallFunc_CalcViewportPos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_Update, CallFunc_IsFinished_retValue) == 0x00000C, "Member 'BattleNumberActor_C_Update::CallFunc_IsFinished_retValue' has a wrong offset!");

// Function BattleNumberActor.BattleNumberActor_C.BI_IsFinished
// 0x0002 (0x0002 - 0x0000)
struct BattleNumberActor_C_BI_IsFinished final
{
public:
	bool                                          IsFinished;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFinished_retValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleNumberActor_C_BI_IsFinished) == 0x000001, "Wrong alignment on BattleNumberActor_C_BI_IsFinished");
static_assert(sizeof(BattleNumberActor_C_BI_IsFinished) == 0x000002, "Wrong size on BattleNumberActor_C_BI_IsFinished");
static_assert(offsetof(BattleNumberActor_C_BI_IsFinished, IsFinished) == 0x000000, "Member 'BattleNumberActor_C_BI_IsFinished::IsFinished' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_BI_IsFinished, CallFunc_IsFinished_retValue) == 0x000001, "Member 'BattleNumberActor_C_BI_IsFinished::CallFunc_IsFinished_retValue' has a wrong offset!");

// Function BattleNumberActor.BattleNumberActor_C.BI_Update
// 0x0008 (0x0008 - 0x0000)
struct BattleNumberActor_C_BI_Update final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleNumberActor_C_BI_Update) == 0x000004, "Wrong alignment on BattleNumberActor_C_BI_Update");
static_assert(sizeof(BattleNumberActor_C_BI_Update) == 0x000008, "Wrong size on BattleNumberActor_C_BI_Update");
static_assert(offsetof(BattleNumberActor_C_BI_Update, Delta) == 0x000000, "Member 'BattleNumberActor_C_BI_Update::Delta' has a wrong offset!");
static_assert(offsetof(BattleNumberActor_C_BI_Update, NoUse) == 0x000004, "Member 'BattleNumberActor_C_BI_Update::NoUse' has a wrong offset!");

// Function BattleNumberActor.BattleNumberActor_C.BI_Hide
// 0x0001 (0x0001 - 0x0000)
struct BattleNumberActor_C_BI_Hide final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleNumberActor_C_BI_Hide) == 0x000001, "Wrong alignment on BattleNumberActor_C_BI_Hide");
static_assert(sizeof(BattleNumberActor_C_BI_Hide) == 0x000001, "Wrong size on BattleNumberActor_C_BI_Hide");
static_assert(offsetof(BattleNumberActor_C_BI_Hide, NoUse) == 0x000000, "Member 'BattleNumberActor_C_BI_Hide::NoUse' has a wrong offset!");

}

