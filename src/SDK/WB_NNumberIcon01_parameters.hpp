#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_NNumberIcon01

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_NNumberIcon01.WB_NNumberIcon01_C.ExecuteUbergraph_WB_NNumberIcon01
// 0x0004 (0x0004 - 0x0000)
struct WB_NNumberIcon01_C_ExecuteUbergraph_WB_NNumberIcon01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_NNumberIcon01_C_ExecuteUbergraph_WB_NNumberIcon01) == 0x000004, "Wrong alignment on WB_NNumberIcon01_C_ExecuteUbergraph_WB_NNumberIcon01");
static_assert(sizeof(WB_NNumberIcon01_C_ExecuteUbergraph_WB_NNumberIcon01) == 0x000004, "Wrong size on WB_NNumberIcon01_C_ExecuteUbergraph_WB_NNumberIcon01");
static_assert(offsetof(WB_NNumberIcon01_C_ExecuteUbergraph_WB_NNumberIcon01, EntryPoint) == 0x000000, "Member 'WB_NNumberIcon01_C_ExecuteUbergraph_WB_NNumberIcon01::EntryPoint' has a wrong offset!");

// Function WB_NNumberIcon01.WB_NNumberIcon01_C.SetNumber
// 0x0058 (0x0058 - 0x0000)
struct WB_NNumberIcon01_C_SetNumber final
{
public:
	int32                                         InParam;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InZeroSpace;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InLeft;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA7[0x2];                                      // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA8[0x4];                                      // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_GetImageNo_OutImage;                      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNumberParam_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA9[0x2];                                      // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumberDisplay_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EAA[0x3];                                      // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_NNumberIcon01_C_SetNumber) == 0x000008, "Wrong alignment on WB_NNumberIcon01_C_SetNumber");
static_assert(sizeof(WB_NNumberIcon01_C_SetNumber) == 0x000058, "Wrong size on WB_NNumberIcon01_C_SetNumber");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumber, InParam) == 0x000000, "Member 'WB_NNumberIcon01_C_SetNumber::InParam' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumber, InZeroSpace) == 0x000004, "Member 'WB_NNumberIcon01_C_SetNumber::InZeroSpace' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumber, InLeft) == 0x000005, "Member 'WB_NNumberIcon01_C_SetNumber::InLeft' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumber, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_NNumberIcon01_C_SetNumber::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumber, CallFunc_GetImageNo_OutImage) == 0x000010, "Member 'WB_NNumberIcon01_C_SetNumber::CallFunc_GetImageNo_OutImage' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumber, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'WB_NNumberIcon01_C_SetNumber::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumber, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'WB_NNumberIcon01_C_SetNumber::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumber, CallFunc_GetNumberParam_ReturnValue) == 0x000021, "Member 'WB_NNumberIcon01_C_SetNumber::CallFunc_GetNumberParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumber, Temp_int_Variable) == 0x000024, "Member 'WB_NNumberIcon01_C_SetNumber::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumber, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000028, "Member 'WB_NNumberIcon01_C_SetNumber::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumber, CallFunc_MakeVector2D_ReturnValue) == 0x00002C, "Member 'WB_NNumberIcon01_C_SetNumber::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumber, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'WB_NNumberIcon01_C_SetNumber::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumber, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000038, "Member 'WB_NNumberIcon01_C_SetNumber::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumber, CallFunc_IsNumberDisplay_ReturnValue) == 0x000040, "Member 'WB_NNumberIcon01_C_SetNumber::CallFunc_IsNumberDisplay_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumber, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000044, "Member 'WB_NNumberIcon01_C_SetNumber::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumber, K2Node_MakeStruct_LinearColor) == 0x000048, "Member 'WB_NNumberIcon01_C_SetNumber::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function WB_NNumberIcon01.WB_NNumberIcon01_C.SetNumberDisp
// 0x0008 (0x0008 - 0x0000)
struct WB_NNumberIcon01_C_SetNumberDisp final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              InDisp;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_NNumberIcon01_C_SetNumberDisp) == 0x000004, "Wrong alignment on WB_NNumberIcon01_C_SetNumberDisp");
static_assert(sizeof(WB_NNumberIcon01_C_SetNumberDisp) == 0x000008, "Wrong size on WB_NNumberIcon01_C_SetNumberDisp");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumberDisp, InIndex) == 0x000000, "Member 'WB_NNumberIcon01_C_SetNumberDisp::InIndex' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumberDisp, InDisp) == 0x000004, "Member 'WB_NNumberIcon01_C_SetNumberDisp::InDisp' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_SetNumberDisp, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'WB_NNumberIcon01_C_SetNumberDisp::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_NNumberIcon01.WB_NNumberIcon01_C.GetImageNo
// 0x0020 (0x0020 - 0x0000)
struct WB_NNumberIcon01_C_GetImageNo final
{
public:
	int32                                         InDigit;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EAB[0x4];                                      // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 OutImage;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Imageno;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_NNumberIcon01_C_GetImageNo) == 0x000008, "Wrong alignment on WB_NNumberIcon01_C_GetImageNo");
static_assert(sizeof(WB_NNumberIcon01_C_GetImageNo) == 0x000020, "Wrong size on WB_NNumberIcon01_C_GetImageNo");
static_assert(offsetof(WB_NNumberIcon01_C_GetImageNo, InDigit) == 0x000000, "Member 'WB_NNumberIcon01_C_GetImageNo::InDigit' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_GetImageNo, OutImage) == 0x000008, "Member 'WB_NNumberIcon01_C_GetImageNo::OutImage' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_GetImageNo, Imageno) == 0x000010, "Member 'WB_NNumberIcon01_C_GetImageNo::Imageno' has a wrong offset!");
static_assert(offsetof(WB_NNumberIcon01_C_GetImageNo, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'WB_NNumberIcon01_C_GetImageNo::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_NNumberIcon01.WB_NNumberIcon01_C.SetFontColor
// 0x0004 (0x0004 - 0x0000)
struct WB_NNumberIcon01_C_SetFontColor final
{
public:
	int32                                         InColorType;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_NNumberIcon01_C_SetFontColor) == 0x000004, "Wrong alignment on WB_NNumberIcon01_C_SetFontColor");
static_assert(sizeof(WB_NNumberIcon01_C_SetFontColor) == 0x000004, "Wrong size on WB_NNumberIcon01_C_SetFontColor");
static_assert(offsetof(WB_NNumberIcon01_C_SetFontColor, InColorType) == 0x000000, "Member 'WB_NNumberIcon01_C_SetFontColor::InColorType' has a wrong offset!");

}

