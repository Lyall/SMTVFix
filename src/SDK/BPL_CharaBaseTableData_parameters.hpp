#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_CharaBaseTableData

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BadStatusParticles_T_structs.hpp"
#include "DeadActionParticles_T_structs.hpp"
#include "BadStatusDecal_T_structs.hpp"
#include "CharaAttachParticle_T_structs.hpp"
#include "E_DEVIL_PERFORMANCE_TYPE_structs.hpp"
#include "MaterialAnimSetting_T_structs.hpp"
#include "DevilPerformance_T_structs.hpp"
#include "BadStatusNecessaries_T_structs.hpp"
#include "BadStatusNecessaries_Array_structs.hpp"


namespace SDK::Params
{

// Function BPL_CharaBaseTableData.BPL_CharaBaseTableData_C.BPL_GetBadStatusNecessaries
// 0x0180 (0x0180 - 0x0000)
struct BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries final
{
public:
	E_BAD_STATUS                                  BadStatus;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBadStatusNecessaries_T                Necessaries;                                       // 0x0010(0x0050)(Parm, OutParm, HasGetValueTypeHash)
	TArray<struct FBadStatusNecessaries_T>        Necessaries_array;                                 // 0x0060(0x0010)(Edit, BlueprintVisible)
	struct FBadStatusNecessaries_Array            Array;                                             // 0x0070(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseTableInstanceAccessor_C> CallFunc_GetCharaBaseTableDataInstance_instance;   // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCharaBaseTableDataInstance_IsValid;    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	bool                                          CallFunc_BI_GetBadStatusSecessariesData_Valid;     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusNecessaries_T                K2Node_MakeStruct_BadStatusNecessaries_T;          // 0x00B8(0x0050)(HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0108(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusNecessaries_T                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0128(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries) == 0x000008, "Wrong alignment on BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries");
static_assert(sizeof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries) == 0x000180, "Wrong size on BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, BadStatus) == 0x000000, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::BadStatus' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, __WorldContext) == 0x000008, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, Necessaries) == 0x000010, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::Necessaries' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, Necessaries_array) == 0x000060, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::Necessaries_array' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, Array) == 0x000070, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::Array' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, CallFunc_GetCharaBaseTableDataInstance_instance) == 0x000080, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::CallFunc_GetCharaBaseTableDataInstance_instance' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, CallFunc_GetCharaBaseTableDataInstance_IsValid) == 0x000090, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::CallFunc_GetCharaBaseTableDataInstance_IsValid' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, Temp_int_Array_Index_Variable) == 0x000094, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, K2Node_MakeArray_Array) == 0x0000A0, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, CallFunc_BI_GetBadStatusSecessariesData_Valid) == 0x0000B0, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::CallFunc_BI_GetBadStatusSecessariesData_Valid' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, K2Node_MakeStruct_BadStatusNecessaries_T) == 0x0000B8, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::K2Node_MakeStruct_BadStatusNecessaries_T' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000108, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, CallFunc_Array_Get_Item) == 0x00011C, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, CallFunc_Less_IntInt_ReturnValue) == 0x000124, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, CallFunc_GetDataTableRowFromName_OutRow) == 0x000128, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000178, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000179, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusNecessaries::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BPL_CharaBaseTableData.BPL_CharaBaseTableData_C.BPL_GetBadStatusParticleSettings
// 0x00E8 (0x00E8 - 0x0000)
struct BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings final
{
public:
	E_BAD_STATUS                                  Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBadStatusParticles_T>          ParticleSettings;                                  // 0x0010(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FBadStatusParticles_T>          Lo_ParticleSettings;                               // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TScriptInterface<class IBPI_CharaBaseTableInstanceAccessor_C> CallFunc_GetCharaBaseTableDataInstance_instance;   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCharaBaseTableDataInstance_IsValid;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_GetBadStatusParticleData_NoUse;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0058(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusParticles_T                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0078(0x0060)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings) == 0x000008, "Wrong alignment on BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings");
static_assert(sizeof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings) == 0x0000E8, "Wrong size on BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, Kind) == 0x000000, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::Kind' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, __WorldContext) == 0x000008, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, ParticleSettings) == 0x000010, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::ParticleSettings' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, Lo_ParticleSettings) == 0x000020, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::Lo_ParticleSettings' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, CallFunc_GetCharaBaseTableDataInstance_instance) == 0x000030, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::CallFunc_GetCharaBaseTableDataInstance_instance' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, CallFunc_GetCharaBaseTableDataInstance_IsValid) == 0x000040, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::CallFunc_GetCharaBaseTableDataInstance_IsValid' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, CallFunc_BI_GetBadStatusParticleData_NoUse) == 0x00004C, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::CallFunc_BI_GetBadStatusParticleData_NoUse' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000058, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, CallFunc_Array_Get_Item) == 0x000068, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, CallFunc_GetDataTableRowFromName_OutRow) == 0x000078, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000D8, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, CallFunc_Less_IntInt_ReturnValue) == 0x0000D9, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, CallFunc_Array_Add_ReturnValue) == 0x0000DC, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E0, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSettings::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BPL_CharaBaseTableData.BPL_CharaBaseTableData_C.GetCharaBaseTableDataInstance
// 0x00A0 (0x00A0 - 0x0000)
struct BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseTableInstanceAccessor_C> Instance;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsValid;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_SpawnUIActor_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseTable_C> K2Node_DynamicCast_AsBPI_Chara_Base_Table;         // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseTableInstanceAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Table_Instance_Accessor; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseTable_C> K2Node_DynamicCast_AsBPI_Chara_Base_Table_1;       // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_BI_GetCharaTable_instance;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseTableInstanceAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Table_Instance_Accessor_1; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance) == 0x000008, "Wrong alignment on BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance");
static_assert(sizeof(BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance) == 0x0000A0, "Wrong size on BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance");
static_assert(offsetof(BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance, __WorldContext) == 0x000000, "Member 'BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance, Instance) == 0x000008, "Member 'BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance::Instance' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance, IsValid) == 0x000018, "Member 'BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance::IsValid' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance, CallFunc_SpawnUIActor_ReturnValue) == 0x000028, "Member 'BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance::CallFunc_SpawnUIActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance, K2Node_DynamicCast_AsBPI_Chara_Base_Table) == 0x000030, "Member 'BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance::K2Node_DynamicCast_AsBPI_Chara_Base_Table' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance, K2Node_DynamicCast_AsBPI_Chara_Base_Table_Instance_Accessor) == 0x000048, "Member 'BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance::K2Node_DynamicCast_AsBPI_Chara_Base_Table_Instance_Accessor' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance, K2Node_DynamicCast_AsBPI_Chara_Base_Table_1) == 0x000060, "Member 'BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance::K2Node_DynamicCast_AsBPI_Chara_Base_Table_1' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance, CallFunc_BI_GetCharaTable_instance) == 0x000078, "Member 'BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance::CallFunc_BI_GetCharaTable_instance' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance, K2Node_DynamicCast_AsBPI_Chara_Base_Table_Instance_Accessor_1) == 0x000088, "Member 'BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance::K2Node_DynamicCast_AsBPI_Chara_Base_Table_Instance_Accessor_1' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance, K2Node_DynamicCast_bSuccess_3) == 0x000098, "Member 'BPL_CharaBaseTableData_C_GetCharaBaseTableDataInstance::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BPL_CharaBaseTableData.BPL_CharaBaseTableData_C.BPL_GetDeadActionParticle
// 0x01F8 (0x01F8 - 0x0000)
struct BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle final
{
public:
	E_BTL_DEAD_EFFECT                             DeadEffect;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UParticleSystem>> Particle;                                          // 0x0010(0x0010)(Parm, OutParm)
	TSoftObjectPtr<class USoundAtomCue>           SE;                                                // 0x0020(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x004C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeadActionParticles_T                 DeadAction;                                        // 0x0058(0x0098)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseTableInstanceAccessor_C> CallFunc_GetCharaBaseTableDataInstance_instance;   // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCharaBaseTableDataInstance_IsValid;    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_GetDeadActionParticleData_Valid;       // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0138(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x014C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeadActionParticles_T                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0158(0x0098)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle) == 0x000008, "Wrong alignment on BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle");
static_assert(sizeof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle) == 0x0001F8, "Wrong size on BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, DeadEffect) == 0x000000, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::DeadEffect' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, __WorldContext) == 0x000008, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, Particle) == 0x000010, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::Particle' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, SE) == 0x000020, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::SE' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, IsValid) == 0x000048, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::IsValid' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, SocketName) == 0x00004C, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::SocketName' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, DeadAction) == 0x000058, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::DeadAction' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, CallFunc_GetCharaBaseTableDataInstance_instance) == 0x0000F0, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::CallFunc_GetCharaBaseTableDataInstance_instance' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, CallFunc_GetCharaBaseTableDataInstance_IsValid) == 0x000100, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::CallFunc_GetCharaBaseTableDataInstance_IsValid' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000108, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, CallFunc_Concat_StrStr_ReturnValue) == 0x000118, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, Temp_int_Array_Index_Variable) == 0x000128, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, Temp_int_Loop_Counter_Variable) == 0x00012C, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, CallFunc_Add_IntInt_ReturnValue) == 0x000130, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, CallFunc_BI_GetDeadActionParticleData_Valid) == 0x000134, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::CallFunc_BI_GetDeadActionParticleData_Valid' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000138, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, CallFunc_Array_Get_Item) == 0x00014C, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, CallFunc_Less_IntInt_ReturnValue) == 0x000154, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, CallFunc_GetDataTableRowFromName_OutRow) == 0x000158, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001F0, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001F1, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionParticle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BPL_CharaBaseTableData.BPL_CharaBaseTableData_C.BPL_GetDevilPerformanceData
// 0x03C8 (0x03C8 - 0x0000)
struct BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData final
{
public:
	E_DEVIL_PERFORMANCE_TYPE                      PerformanceType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UParticleSystem>> Particle;                                          // 0x0018(0x0010)(Parm, OutParm)
	TSoftObjectPtr<class USoundAtomCue>           SE;                                                // 0x0028(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundAtomCue>           SE_InstantEvent;                                   // 0x0050(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	class FName                                   ParticleSocketName;                                // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInstance>       Spawn_Decal_Material;                              // 0x0080(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	struct FVector                                Spawn_Decal_Size;                                  // 0x00A8(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMaterialAnimSetting_T>         Spawn_Decal_Material_Anim_Setting;                 // 0x00B8(0x0010)(Parm, OutParm)
	class FName                                   Spawn_Decal_Socket_Name;                           // 0x00C8(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnDecalCastOnlyStaticMesh;                      // 0x00D0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMaterialAnimSetting_T                 Spawn_Mesh_Material_Anim_Setting;                  // 0x00D8(0x0020)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             MotionID;                                          // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialParameterApplier> MaterialParamApplier;                              // 0x0100(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	struct FDevilPerformance_T                    DevilPerformance;                                  // 0x0128(0x0118)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseTableInstanceAccessor_C> CallFunc_GetCharaBaseTableDataInstance_instance;   // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCharaBaseTableDataInstance_IsValid;    // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_GetDevilPerformanceData_Valid;         // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0288(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x029C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDevilPerformance_T                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x02A8(0x0118)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData) == 0x000008, "Wrong alignment on BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData");
static_assert(sizeof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData) == 0x0003C8, "Wrong size on BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, PerformanceType) == 0x000000, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::PerformanceType' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, __WorldContext) == 0x000008, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, IsValid) == 0x000010, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::IsValid' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, Particle) == 0x000018, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::Particle' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, SE) == 0x000028, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::SE' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, SE_InstantEvent) == 0x000050, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::SE_InstantEvent' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, ParticleSocketName) == 0x000078, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::ParticleSocketName' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, Spawn_Decal_Material) == 0x000080, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::Spawn_Decal_Material' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, Spawn_Decal_Size) == 0x0000A8, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::Spawn_Decal_Size' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, Spawn_Decal_Material_Anim_Setting) == 0x0000B8, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::Spawn_Decal_Material_Anim_Setting' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, Spawn_Decal_Socket_Name) == 0x0000C8, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::Spawn_Decal_Socket_Name' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, SpawnDecalCastOnlyStaticMesh) == 0x0000D0, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::SpawnDecalCastOnlyStaticMesh' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, Spawn_Mesh_Material_Anim_Setting) == 0x0000D8, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::Spawn_Mesh_Material_Anim_Setting' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, MotionID) == 0x0000F8, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::MotionID' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, MaterialParamApplier) == 0x000100, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::MaterialParamApplier' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, DevilPerformance) == 0x000128, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::DevilPerformance' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, CallFunc_GetCharaBaseTableDataInstance_instance) == 0x000240, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::CallFunc_GetCharaBaseTableDataInstance_instance' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, CallFunc_GetCharaBaseTableDataInstance_IsValid) == 0x000250, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::CallFunc_GetCharaBaseTableDataInstance_IsValid' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000258, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, CallFunc_Concat_StrStr_ReturnValue) == 0x000268, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, Temp_int_Array_Index_Variable) == 0x000278, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, Temp_int_Loop_Counter_Variable) == 0x00027C, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, CallFunc_Add_IntInt_ReturnValue) == 0x000280, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, CallFunc_BI_GetDevilPerformanceData_Valid) == 0x000284, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::CallFunc_BI_GetDevilPerformanceData_Valid' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000288, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, CallFunc_Array_Length_ReturnValue) == 0x000298, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, CallFunc_Array_Get_Item) == 0x00029C, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, CallFunc_Less_IntInt_ReturnValue) == 0x0002A4, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, CallFunc_GetDataTableRowFromName_OutRow) == 0x0002A8, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003C0, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003C1, "Member 'BPL_CharaBaseTableData_C_BPL_GetDevilPerformanceData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BPL_CharaBaseTableData.BPL_CharaBaseTableData_C.BPL_GetCharaAttachParticle
// 0x0108 (0x0108 - 0x0000)
struct BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFound;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UParticleSystem>         Particle_Sys;                                      // 0x0018(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseTableInstanceAccessor_C> CallFunc_GetCharaBaseTableDataInstance_instance;   // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCharaBaseTableDataInstance_IsValid;    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharaAttachParticle_T                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FCharaAttachParticle_T> CallFunc_BI_GetCharaAttachParticle_CharaAttachParticle; // 0x0088(0x0050)()
	struct FCharaAttachParticle_T                 CallFunc_Map_Find_Value;                           // 0x00D8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle) == 0x000008, "Wrong alignment on BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle");
static_assert(sizeof(BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle) == 0x000108, "Wrong size on BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle, Param_Name) == 0x000000, "Member 'BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle::Param_Name' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle, __WorldContext) == 0x000008, "Member 'BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle, IsFound) == 0x000010, "Member 'BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle::IsFound' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle, Particle_Sys) == 0x000018, "Member 'BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle::Particle_Sys' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle, CallFunc_GetCharaBaseTableDataInstance_instance) == 0x000040, "Member 'BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle::CallFunc_GetCharaBaseTableDataInstance_instance' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle, CallFunc_GetCharaBaseTableDataInstance_IsValid) == 0x000050, "Member 'BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle::CallFunc_GetCharaBaseTableDataInstance_IsValid' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000080, "Member 'BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle, CallFunc_BI_GetCharaAttachParticle_CharaAttachParticle) == 0x000088, "Member 'BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle::CallFunc_BI_GetCharaAttachParticle_CharaAttachParticle' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle, CallFunc_Map_Find_Value) == 0x0000D8, "Member 'BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle, CallFunc_Map_Find_ReturnValue) == 0x000100, "Member 'BPL_CharaBaseTableData_C_BPL_GetCharaAttachParticle::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BPL_CharaBaseTableData.BPL_CharaBaseTableData_C.BPL_GetBadStatusDecalSettings
// 0x00E0 (0x00E0 - 0x0000)
struct BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings final
{
public:
	E_BAD_STATUS                                  Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBadStatusDecal_T>              DecalSettings;                                     // 0x0010(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FBadStatusDecal_T>              Lo_DecalSettings;                                  // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TScriptInterface<class IBPI_CharaBaseTableInstanceAccessor_C> CallFunc_GetCharaBaseTableDataInstance_instance;   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCharaBaseTableDataInstance_IsValid;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_GetBadStatusDecalData_NoUse;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusDecal_T                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0078(0x0058)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings) == 0x000008, "Wrong alignment on BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings");
static_assert(sizeof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings) == 0x0000E0, "Wrong size on BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, Kind) == 0x000000, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::Kind' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, __WorldContext) == 0x000008, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, DecalSettings) == 0x000010, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::DecalSettings' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, Lo_DecalSettings) == 0x000020, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::Lo_DecalSettings' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, CallFunc_GetCharaBaseTableDataInstance_instance) == 0x000030, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::CallFunc_GetCharaBaseTableDataInstance_instance' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, CallFunc_GetCharaBaseTableDataInstance_IsValid) == 0x000040, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::CallFunc_GetCharaBaseTableDataInstance_IsValid' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, CallFunc_BI_GetBadStatusDecalData_NoUse) == 0x00004C, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::CallFunc_BI_GetBadStatusDecalData_NoUse' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000058, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, CallFunc_Array_Get_Item) == 0x00006C, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, CallFunc_GetDataTableRowFromName_OutRow) == 0x000078, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000D0, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, CallFunc_Array_Add_ReturnValue) == 0x0000D4, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D8, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusDecalSettings::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BPL_CharaBaseTableData.BPL_CharaBaseTableData_C.BPL_GetDeadActionMaterial
// 0x0208 (0x0208 - 0x0000)
struct BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial final
{
public:
	E_BTL_DEAD_EFFECT                             DeadEffect;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UCurveFloat>             ProgressCurve;                                     // 0x0010(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialParameterApplier> ParamAppplier;                                     // 0x0038(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeadActionParticles_T                 DeadAction;                                        // 0x0068(0x0098)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseTableInstanceAccessor_C> CallFunc_GetCharaBaseTableDataInstance_instance;   // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCharaBaseTableDataInstance_IsValid;    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_GetDeadActionParticleData_Valid;       // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0148(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x015C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDeadActionParticles_T                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0168(0x0098)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial) == 0x000008, "Wrong alignment on BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial");
static_assert(sizeof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial) == 0x000208, "Wrong size on BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, DeadEffect) == 0x000000, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::DeadEffect' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, __WorldContext) == 0x000008, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, ProgressCurve) == 0x000010, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::ProgressCurve' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, ParamAppplier) == 0x000038, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::ParamAppplier' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, IsValid) == 0x000060, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::IsValid' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, DeadAction) == 0x000068, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::DeadAction' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, CallFunc_GetCharaBaseTableDataInstance_instance) == 0x000100, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::CallFunc_GetCharaBaseTableDataInstance_instance' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, CallFunc_GetCharaBaseTableDataInstance_IsValid) == 0x000110, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::CallFunc_GetCharaBaseTableDataInstance_IsValid' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000118, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, CallFunc_Concat_StrStr_ReturnValue) == 0x000128, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, Temp_int_Array_Index_Variable) == 0x000138, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, Temp_int_Loop_Counter_Variable) == 0x00013C, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000140, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, CallFunc_BI_GetDeadActionParticleData_Valid) == 0x000144, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::CallFunc_BI_GetDeadActionParticleData_Valid' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000148, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, CallFunc_Array_Get_Item) == 0x00015C, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x000164, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, CallFunc_GetDataTableRowFromName_OutRow) == 0x000168, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000200, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000201, "Member 'BPL_CharaBaseTableData_C_BPL_GetDeadActionMaterial::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BPL_CharaBaseTableData.BPL_CharaBaseTableData_C.BPL_GetBadStatusParticleSetting
// 0x0168 (0x0168 - 0x0000)
struct BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting final
{
public:
	E_BAD_STATUS                                  Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_BAD_STATUS_APPEAR                     Timing;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBadStatusParticles_T                  ParticleSettings;                                  // 0x0010(0x0060)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FBadStatusParticles_T>          Lo_ParticleSettings;                               // 0x0070(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FBadStatusParticles_T>          CallFunc_BPL_GetBadStatusParticleSettings_ParticleSettings; // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBadStatusParticles_T                  CallFunc_Array_Get_Item;                           // 0x0098(0x0060)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBadStatusParticles_T                  K2Node_MakeStruct_BadStatusParticles_T;            // 0x0108(0x0060)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting) == 0x000008, "Wrong alignment on BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting");
static_assert(sizeof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting) == 0x000168, "Wrong size on BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting, Kind) == 0x000000, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting::Kind' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting, Timing) == 0x000001, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting::Timing' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting, __WorldContext) == 0x000008, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting, ParticleSettings) == 0x000010, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting::ParticleSettings' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting, Lo_ParticleSettings) == 0x000070, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting::Lo_ParticleSettings' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting, CallFunc_BPL_GetBadStatusParticleSettings_ParticleSettings) == 0x000080, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting::CallFunc_BPL_GetBadStatusParticleSettings_ParticleSettings' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting, CallFunc_Array_Get_Item) == 0x000098, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting, Temp_int_Loop_Counter_Variable) == 0x0000F8, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000FC, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting, CallFunc_Less_IntInt_ReturnValue) == 0x0000FD, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting, K2Node_MakeStruct_BadStatusParticles_T) == 0x000108, "Member 'BPL_CharaBaseTableData_C_BPL_GetBadStatusParticleSetting::K2Node_MakeStruct_BadStatusParticles_T' has a wrong offset!");

}

