#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FindItem

#include "Basic.hpp"

#include "E_MapGimmickHideReason_structs.hpp"
#include "Project_structs.hpp"
#include "Engine_structs.hpp"
#include "MapEventHit_Type_AAction_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FindItem.BP_FindItem_C
// 0x0060 (0x0430 - 0x03D0)
class ABP_FindItem_C final : public AMapEventHit_Type_AAction_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_FindItem_C;                      // 0x03D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   ChildActor;                                        // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_MapGimmickAreaEntry_C*             BPC_MapGimmickAreaEntry;                           // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         TakaraID;                                          // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x03EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95BA[0x3];                                     // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HideReason;                                        // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SaveId;                                            // 0x03F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTakaraData                            TakaraData;                                        // 0x03F8(0x0024)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FTakaraItemList                        ItemData;                                          // 0x041C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	int32                                         PrevMakka;                                         // 0x0428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNew;                                             // 0x042C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_FindItem(int32 EntryPoint);
	void OnEndAction();
	void EvtDis_Show_();
	void EvtDis_Hide_();
	void BPI_ShowGimmick(E_MapGimmickHideReason Param_HideReason);
	void BPI_HideGimmick(E_MapGimmickHideReason Param_HideReason);
	void ReceiveBeginPlay();
	void EventHitAction();
	void CustomEvent();
	void FlagCh(bool* OK);
	void CheckExist(bool* Exist);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FindItem_C">();
	}
	static class ABP_FindItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FindItem_C>();
	}
};
static_assert(alignof(ABP_FindItem_C) == 0x000008, "Wrong alignment on ABP_FindItem_C");
static_assert(sizeof(ABP_FindItem_C) == 0x000430, "Wrong size on ABP_FindItem_C");
static_assert(offsetof(ABP_FindItem_C, UberGraphFrame_BP_FindItem_C) == 0x0003D0, "Member 'ABP_FindItem_C::UberGraphFrame_BP_FindItem_C' has a wrong offset!");
static_assert(offsetof(ABP_FindItem_C, ChildActor) == 0x0003D8, "Member 'ABP_FindItem_C::ChildActor' has a wrong offset!");
static_assert(offsetof(ABP_FindItem_C, BPC_MapGimmickAreaEntry) == 0x0003E0, "Member 'ABP_FindItem_C::BPC_MapGimmickAreaEntry' has a wrong offset!");
static_assert(offsetof(ABP_FindItem_C, TakaraID) == 0x0003E8, "Member 'ABP_FindItem_C::TakaraID' has a wrong offset!");
static_assert(offsetof(ABP_FindItem_C, Success) == 0x0003EC, "Member 'ABP_FindItem_C::Success' has a wrong offset!");
static_assert(offsetof(ABP_FindItem_C, HideReason) == 0x0003F0, "Member 'ABP_FindItem_C::HideReason' has a wrong offset!");
static_assert(offsetof(ABP_FindItem_C, SaveId) == 0x0003F4, "Member 'ABP_FindItem_C::SaveId' has a wrong offset!");
static_assert(offsetof(ABP_FindItem_C, TakaraData) == 0x0003F8, "Member 'ABP_FindItem_C::TakaraData' has a wrong offset!");
static_assert(offsetof(ABP_FindItem_C, ItemData) == 0x00041C, "Member 'ABP_FindItem_C::ItemData' has a wrong offset!");
static_assert(offsetof(ABP_FindItem_C, PrevMakka) == 0x000428, "Member 'ABP_FindItem_C::PrevMakka' has a wrong offset!");
static_assert(offsetof(ABP_FindItem_C, IsNew) == 0x00042C, "Member 'ABP_FindItem_C::IsNew' has a wrong offset!");

}

