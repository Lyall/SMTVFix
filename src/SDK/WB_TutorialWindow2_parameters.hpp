#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TutorialWindow2

#include "Basic.hpp"

#include "ST_AmuletTutorialMsgInfo_structs.hpp"
#include "Project_structs.hpp"
#include "ST_IconHelpTutorial_MsgInfo_structs.hpp"
#include "E_AmuletTutorial_MsgType_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Slate_structs.hpp"
#include "E_TutorialWindow_WidgetState_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.MouseEvent_MovedScrollBar__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_TutorialWindow2_C_MouseEvent_MovedScrollBar__DelegateSignature final
{
public:
	float                                         ScrollRate;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TutorialWindow2_C_MouseEvent_MovedScrollBar__DelegateSignature) == 0x000004, "Wrong alignment on WB_TutorialWindow2_C_MouseEvent_MovedScrollBar__DelegateSignature");
static_assert(sizeof(WB_TutorialWindow2_C_MouseEvent_MovedScrollBar__DelegateSignature) == 0x000004, "Wrong size on WB_TutorialWindow2_C_MouseEvent_MovedScrollBar__DelegateSignature");
static_assert(offsetof(WB_TutorialWindow2_C_MouseEvent_MovedScrollBar__DelegateSignature, ScrollRate) == 0x000000, "Member 'WB_TutorialWindow2_C_MouseEvent_MovedScrollBar__DelegateSignature::ScrollRate' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.ExecuteUbergraph_WB_TutorialWindow2
// 0x0044 (0x0044 - 0x0000)
struct WB_TutorialWindow2_C_ExecuteUbergraph_WB_TutorialWindow2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6508[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TutorialWindow2_C_ExecuteUbergraph_WB_TutorialWindow2) == 0x000004, "Wrong alignment on WB_TutorialWindow2_C_ExecuteUbergraph_WB_TutorialWindow2");
static_assert(sizeof(WB_TutorialWindow2_C_ExecuteUbergraph_WB_TutorialWindow2) == 0x000044, "Wrong size on WB_TutorialWindow2_C_ExecuteUbergraph_WB_TutorialWindow2");
static_assert(offsetof(WB_TutorialWindow2_C_ExecuteUbergraph_WB_TutorialWindow2, EntryPoint) == 0x000000, "Member 'WB_TutorialWindow2_C_ExecuteUbergraph_WB_TutorialWindow2::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_ExecuteUbergraph_WB_TutorialWindow2, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WB_TutorialWindow2_C_ExecuteUbergraph_WB_TutorialWindow2::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_ExecuteUbergraph_WB_TutorialWindow2, K2Node_Event_MyGeometry) == 0x000008, "Member 'WB_TutorialWindow2_C_ExecuteUbergraph_WB_TutorialWindow2::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_ExecuteUbergraph_WB_TutorialWindow2, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WB_TutorialWindow2_C_ExecuteUbergraph_WB_TutorialWindow2::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_TutorialWindow2_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TutorialWindow2_C_Tick) == 0x000004, "Wrong alignment on WB_TutorialWindow2_C_Tick");
static_assert(sizeof(WB_TutorialWindow2_C_Tick) == 0x00003C, "Wrong size on WB_TutorialWindow2_C_Tick");
static_assert(offsetof(WB_TutorialWindow2_C_Tick, MyGeometry) == 0x000000, "Member 'WB_TutorialWindow2_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_TutorialWindow2_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_TutorialWindow2_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_PreConstruct) == 0x000001, "Wrong alignment on WB_TutorialWindow2_C_PreConstruct");
static_assert(sizeof(WB_TutorialWindow2_C_PreConstruct) == 0x000001, "Wrong size on WB_TutorialWindow2_C_PreConstruct");
static_assert(offsetof(WB_TutorialWindow2_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_TutorialWindow2_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Init
// 0x00F8 (0x00F8 - 0x0000)
struct WB_TutorialWindow2_C_Init final
{
public:
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6509[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASystemMess*                            CallFunc_GetSystemMess_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_650A[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0048(0x0018)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_650B[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_KeyboardIcon_C>   CallFunc_BPI_SetKeyInfo_self_CastInput;            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_SetKeyInfo_Ret;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_650C[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_KeyboardIcon_C>   CallFunc_BPI_SetIconSize_self_CastInput;           // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_SetIconSize_Ret;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_650D[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_KeyboardIcon_C>   CallFunc_BPI_SetIconColor_ByActiveState_self_CastInput; // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_SetIconColor_ByActiveState_Ret;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_650E[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float Position)>               K2Node_CreateDelegate_OutputDelegate;              // 0x00BC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_650F[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00D0(0x0028)()
};
static_assert(alignof(WB_TutorialWindow2_C_Init) == 0x000008, "Wrong alignment on WB_TutorialWindow2_C_Init");
static_assert(sizeof(WB_TutorialWindow2_C_Init) == 0x0000F8, "Wrong size on WB_TutorialWindow2_C_Init");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000000, "Member 'WB_TutorialWindow2_C_Init::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_BreakVector2D_X) == 0x000008, "Member 'WB_TutorialWindow2_C_Init::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_BreakVector2D_Y) == 0x00000C, "Member 'WB_TutorialWindow2_C_Init::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_GetDesiredSize_ReturnValue) == 0x000010, "Member 'WB_TutorialWindow2_C_Init::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_BreakVector2D_X_1) == 0x000018, "Member 'WB_TutorialWindow2_C_Init::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_BreakVector2D_Y_1) == 0x00001C, "Member 'WB_TutorialWindow2_C_Init::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'WB_TutorialWindow2_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'WB_TutorialWindow2_C_Init::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_Get_ReturnValue) == 0x000028, "Member 'WB_TutorialWindow2_C_Init::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000030, "Member 'WB_TutorialWindow2_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_GetSystemMess_ReturnValue) == 0x000038, "Member 'WB_TutorialWindow2_C_Init::CallFunc_GetSystemMess_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_Abs_ReturnValue) == 0x000040, "Member 'WB_TutorialWindow2_C_Init::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_GetText_ReturnValue) == 0x000048, "Member 'WB_TutorialWindow2_C_Init::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000060, "Member 'WB_TutorialWindow2_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, K2Node_MakeStruct_Margin) == 0x000064, "Member 'WB_TutorialWindow2_C_Init::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_BPI_SetKeyInfo_self_CastInput) == 0x000078, "Member 'WB_TutorialWindow2_C_Init::CallFunc_BPI_SetKeyInfo_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_BPI_SetKeyInfo_Ret) == 0x000088, "Member 'WB_TutorialWindow2_C_Init::CallFunc_BPI_SetKeyInfo_Ret' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_BPI_SetIconSize_self_CastInput) == 0x000090, "Member 'WB_TutorialWindow2_C_Init::CallFunc_BPI_SetIconSize_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_BPI_SetIconSize_Ret) == 0x0000A0, "Member 'WB_TutorialWindow2_C_Init::CallFunc_BPI_SetIconSize_Ret' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_BPI_SetIconColor_ByActiveState_self_CastInput) == 0x0000A8, "Member 'WB_TutorialWindow2_C_Init::CallFunc_BPI_SetIconColor_ByActiveState_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, CallFunc_BPI_SetIconColor_ByActiveState_Ret) == 0x0000B8, "Member 'WB_TutorialWindow2_C_Init::CallFunc_BPI_SetIconColor_ByActiveState_Ret' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, K2Node_CreateDelegate_OutputDelegate) == 0x0000BC, "Member 'WB_TutorialWindow2_C_Init::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Init, K2Node_MakeStruct_SlateColor) == 0x0000D0, "Member 'WB_TutorialWindow2_C_Init::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.GetAnimState
// 0x0001 (0x0001 - 0x0000)
struct WB_TutorialWindow2_C_GetAnimState final
{
public:
	E_TutorialWindow_WidgetState                  Param_AnimState;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TutorialWindow2_C_GetAnimState) == 0x000001, "Wrong alignment on WB_TutorialWindow2_C_GetAnimState");
static_assert(sizeof(WB_TutorialWindow2_C_GetAnimState) == 0x000001, "Wrong size on WB_TutorialWindow2_C_GetAnimState");
static_assert(offsetof(WB_TutorialWindow2_C_GetAnimState, Param_AnimState) == 0x000000, "Member 'WB_TutorialWindow2_C_GetAnimState::Param_AnimState' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetAnimState
// 0x000A (0x000A - 0x0000)
struct WB_TutorialWindow2_C_SetAnimState final
{
public:
	E_TutorialWindow_WidgetState                  InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_2;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_3;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_4;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_5;                       // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_6;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_7;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_SetAnimState) == 0x000001, "Wrong alignment on WB_TutorialWindow2_C_SetAnimState");
static_assert(sizeof(WB_TutorialWindow2_C_SetAnimState) == 0x00000A, "Wrong size on WB_TutorialWindow2_C_SetAnimState");
static_assert(offsetof(WB_TutorialWindow2_C_SetAnimState, InState) == 0x000000, "Member 'WB_TutorialWindow2_C_SetAnimState::InState' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetAnimState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WB_TutorialWindow2_C_SetAnimState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetAnimState, CallFunc_Play_ReturnValue) == 0x000002, "Member 'WB_TutorialWindow2_C_SetAnimState::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetAnimState, CallFunc_Play_ReturnValue_1) == 0x000003, "Member 'WB_TutorialWindow2_C_SetAnimState::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetAnimState, CallFunc_Play_ReturnValue_2) == 0x000004, "Member 'WB_TutorialWindow2_C_SetAnimState::CallFunc_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetAnimState, CallFunc_Play_ReturnValue_3) == 0x000005, "Member 'WB_TutorialWindow2_C_SetAnimState::CallFunc_Play_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetAnimState, CallFunc_Play_ReturnValue_4) == 0x000006, "Member 'WB_TutorialWindow2_C_SetAnimState::CallFunc_Play_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetAnimState, CallFunc_Play_ReturnValue_5) == 0x000007, "Member 'WB_TutorialWindow2_C_SetAnimState::CallFunc_Play_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetAnimState, CallFunc_Play_ReturnValue_6) == 0x000008, "Member 'WB_TutorialWindow2_C_SetAnimState::CallFunc_Play_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetAnimState, CallFunc_Play_ReturnValue_7) == 0x000009, "Member 'WB_TutorialWindow2_C_SetAnimState::CallFunc_Play_ReturnValue_7' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Tick_Base
// 0x0001 (0x0001 - 0x0000)
struct WB_TutorialWindow2_C_Tick_Base final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_Tick_Base) == 0x000001, "Wrong alignment on WB_TutorialWindow2_C_Tick_Base");
static_assert(sizeof(WB_TutorialWindow2_C_Tick_Base) == 0x000001, "Wrong size on WB_TutorialWindow2_C_Tick_Base");
static_assert(offsetof(WB_TutorialWindow2_C_Tick_Base, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'WB_TutorialWindow2_C_Tick_Base::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Tick_FrameIn
// 0x0001 (0x0001 - 0x0000)
struct WB_TutorialWindow2_C_Tick_FrameIn final
{
public:
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_Tick_FrameIn) == 0x000001, "Wrong alignment on WB_TutorialWindow2_C_Tick_FrameIn");
static_assert(sizeof(WB_TutorialWindow2_C_Tick_FrameIn) == 0x000001, "Wrong size on WB_TutorialWindow2_C_Tick_FrameIn");
static_assert(offsetof(WB_TutorialWindow2_C_Tick_FrameIn, CallFunc_IsPlaying_ReturnValue) == 0x000000, "Member 'WB_TutorialWindow2_C_Tick_FrameIn::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Tick_FrameOut
// 0x0001 (0x0001 - 0x0000)
struct WB_TutorialWindow2_C_Tick_FrameOut final
{
public:
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_Tick_FrameOut) == 0x000001, "Wrong alignment on WB_TutorialWindow2_C_Tick_FrameOut");
static_assert(sizeof(WB_TutorialWindow2_C_Tick_FrameOut) == 0x000001, "Wrong size on WB_TutorialWindow2_C_Tick_FrameOut");
static_assert(offsetof(WB_TutorialWindow2_C_Tick_FrameOut, CallFunc_IsPlaying_ReturnValue) == 0x000000, "Member 'WB_TutorialWindow2_C_Tick_FrameOut::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.GetScrollState
// 0x0018 (0x0018 - 0x0000)
struct WB_TutorialWindow2_C_GetScrollState final
{
public:
	bool                                          IsRequiredScroll;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6510[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScrollPosRate;                                     // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScrollOffset;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetScrollOffset_ScrollOffset;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_GetScrollState) == 0x000004, "Wrong alignment on WB_TutorialWindow2_C_GetScrollState");
static_assert(sizeof(WB_TutorialWindow2_C_GetScrollState) == 0x000018, "Wrong size on WB_TutorialWindow2_C_GetScrollState");
static_assert(offsetof(WB_TutorialWindow2_C_GetScrollState, IsRequiredScroll) == 0x000000, "Member 'WB_TutorialWindow2_C_GetScrollState::IsRequiredScroll' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_GetScrollState, ScrollPosRate) == 0x000004, "Member 'WB_TutorialWindow2_C_GetScrollState::ScrollPosRate' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_GetScrollState, ScrollOffset) == 0x000008, "Member 'WB_TutorialWindow2_C_GetScrollState::ScrollOffset' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_GetScrollState, CallFunc_GetScrollPosRate_ReturnValue) == 0x00000C, "Member 'WB_TutorialWindow2_C_GetScrollState::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_GetScrollState, CallFunc_GetScrollOffset_ScrollOffset) == 0x000010, "Member 'WB_TutorialWindow2_C_GetScrollState::CallFunc_GetScrollOffset_ScrollOffset' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_GetScrollState, CallFunc_IsRequiredScroll_RequiredScroll) == 0x000014, "Member 'WB_TutorialWindow2_C_GetScrollState::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.GetMaxScrollOffset
// 0x0008 (0x0008 - 0x0000)
struct WB_TutorialWindow2_C_GetMaxScrollOffset final
{
public:
	int32                                         MaxOffset;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxScrollOffset_MaxOffset;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TutorialWindow2_C_GetMaxScrollOffset) == 0x000004, "Wrong alignment on WB_TutorialWindow2_C_GetMaxScrollOffset");
static_assert(sizeof(WB_TutorialWindow2_C_GetMaxScrollOffset) == 0x000008, "Wrong size on WB_TutorialWindow2_C_GetMaxScrollOffset");
static_assert(offsetof(WB_TutorialWindow2_C_GetMaxScrollOffset, MaxOffset) == 0x000000, "Member 'WB_TutorialWindow2_C_GetMaxScrollOffset::MaxOffset' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_GetMaxScrollOffset, CallFunc_GetMaxScrollOffset_MaxOffset) == 0x000004, "Member 'WB_TutorialWindow2_C_GetMaxScrollOffset::CallFunc_GetMaxScrollOffset_MaxOffset' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetScrollOffset
// 0x0020 (0x0020 - 0x0000)
struct WB_TutorialWindow2_C_SetScrollOffset final
{
public:
	int32                                         InScrollOffset;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsScrolled;                                        // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6511[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_oldScrollRate;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6512[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue_1;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6513[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue_2;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TutorialWindow2_C_SetScrollOffset) == 0x000004, "Wrong alignment on WB_TutorialWindow2_C_SetScrollOffset");
static_assert(sizeof(WB_TutorialWindow2_C_SetScrollOffset) == 0x000020, "Wrong size on WB_TutorialWindow2_C_SetScrollOffset");
static_assert(offsetof(WB_TutorialWindow2_C_SetScrollOffset, InScrollOffset) == 0x000000, "Member 'WB_TutorialWindow2_C_SetScrollOffset::InScrollOffset' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetScrollOffset, IsScrolled) == 0x000004, "Member 'WB_TutorialWindow2_C_SetScrollOffset::IsScrolled' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetScrollOffset, L_oldScrollRate) == 0x000008, "Member 'WB_TutorialWindow2_C_SetScrollOffset::L_oldScrollRate' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetScrollOffset, CallFunc_GetScrollPosRate_ReturnValue) == 0x00000C, "Member 'WB_TutorialWindow2_C_SetScrollOffset::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetScrollOffset, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'WB_TutorialWindow2_C_SetScrollOffset::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetScrollOffset, CallFunc_GetScrollPosRate_ReturnValue_1) == 0x000014, "Member 'WB_TutorialWindow2_C_SetScrollOffset::CallFunc_GetScrollPosRate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetScrollOffset, CallFunc_IsRequiredScroll_RequiredScroll) == 0x000018, "Member 'WB_TutorialWindow2_C_SetScrollOffset::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetScrollOffset, CallFunc_GetScrollPosRate_ReturnValue_2) == 0x00001C, "Member 'WB_TutorialWindow2_C_SetScrollOffset::CallFunc_GetScrollPosRate_ReturnValue_2' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Scroll_Up
// 0x0020 (0x0020 - 0x0000)
struct WB_TutorialWindow2_C_Scroll_Up final
{
public:
	bool                                          IsScrolled;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6514[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_oldScrollRate;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6515[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6516[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue_1;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6517[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue_2;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TutorialWindow2_C_Scroll_Up) == 0x000004, "Wrong alignment on WB_TutorialWindow2_C_Scroll_Up");
static_assert(sizeof(WB_TutorialWindow2_C_Scroll_Up) == 0x000020, "Wrong size on WB_TutorialWindow2_C_Scroll_Up");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Up, IsScrolled) == 0x000000, "Member 'WB_TutorialWindow2_C_Scroll_Up::IsScrolled' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Up, L_oldScrollRate) == 0x000004, "Member 'WB_TutorialWindow2_C_Scroll_Up::L_oldScrollRate' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Up, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'WB_TutorialWindow2_C_Scroll_Up::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Up, CallFunc_GetScrollPosRate_ReturnValue) == 0x00000C, "Member 'WB_TutorialWindow2_C_Scroll_Up::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Up, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'WB_TutorialWindow2_C_Scroll_Up::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Up, CallFunc_GetScrollPosRate_ReturnValue_1) == 0x000014, "Member 'WB_TutorialWindow2_C_Scroll_Up::CallFunc_GetScrollPosRate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Up, CallFunc_IsRequiredScroll_RequiredScroll) == 0x000018, "Member 'WB_TutorialWindow2_C_Scroll_Up::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Up, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'WB_TutorialWindow2_C_Scroll_Up::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Up, CallFunc_GetScrollPosRate_ReturnValue_2) == 0x00001C, "Member 'WB_TutorialWindow2_C_Scroll_Up::CallFunc_GetScrollPosRate_ReturnValue_2' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Scroll_Down
// 0x0020 (0x0020 - 0x0000)
struct WB_TutorialWindow2_C_Scroll_Down final
{
public:
	bool                                          IsScrolled;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6518[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_oldScrollRate;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6519[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue_1;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651B[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue_2;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TutorialWindow2_C_Scroll_Down) == 0x000004, "Wrong alignment on WB_TutorialWindow2_C_Scroll_Down");
static_assert(sizeof(WB_TutorialWindow2_C_Scroll_Down) == 0x000020, "Wrong size on WB_TutorialWindow2_C_Scroll_Down");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Down, IsScrolled) == 0x000000, "Member 'WB_TutorialWindow2_C_Scroll_Down::IsScrolled' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Down, L_oldScrollRate) == 0x000004, "Member 'WB_TutorialWindow2_C_Scroll_Down::L_oldScrollRate' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Down, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'WB_TutorialWindow2_C_Scroll_Down::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Down, CallFunc_GetScrollPosRate_ReturnValue) == 0x00000C, "Member 'WB_TutorialWindow2_C_Scroll_Down::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Down, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'WB_TutorialWindow2_C_Scroll_Down::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Down, CallFunc_GetScrollPosRate_ReturnValue_1) == 0x000014, "Member 'WB_TutorialWindow2_C_Scroll_Down::CallFunc_GetScrollPosRate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Down, CallFunc_IsRequiredScroll_RequiredScroll) == 0x000018, "Member 'WB_TutorialWindow2_C_Scroll_Down::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Down, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'WB_TutorialWindow2_C_Scroll_Down::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Scroll_Down, CallFunc_GetScrollPosRate_ReturnValue_2) == 0x00001C, "Member 'WB_TutorialWindow2_C_Scroll_Down::CallFunc_GetScrollPosRate_ReturnValue_2' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Page_Up
// 0x0020 (0x0020 - 0x0000)
struct WB_TutorialWindow2_C_Page_Up final
{
public:
	bool                                          IsScrolled;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_oldScrollRate;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651D[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651E[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue_1;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651F[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue_2;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TutorialWindow2_C_Page_Up) == 0x000004, "Wrong alignment on WB_TutorialWindow2_C_Page_Up");
static_assert(sizeof(WB_TutorialWindow2_C_Page_Up) == 0x000020, "Wrong size on WB_TutorialWindow2_C_Page_Up");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Up, IsScrolled) == 0x000000, "Member 'WB_TutorialWindow2_C_Page_Up::IsScrolled' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Up, L_oldScrollRate) == 0x000004, "Member 'WB_TutorialWindow2_C_Page_Up::L_oldScrollRate' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Up, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'WB_TutorialWindow2_C_Page_Up::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Up, CallFunc_GetScrollPosRate_ReturnValue) == 0x00000C, "Member 'WB_TutorialWindow2_C_Page_Up::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Up, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'WB_TutorialWindow2_C_Page_Up::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Up, CallFunc_GetScrollPosRate_ReturnValue_1) == 0x000014, "Member 'WB_TutorialWindow2_C_Page_Up::CallFunc_GetScrollPosRate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Up, CallFunc_IsRequiredScroll_RequiredScroll) == 0x000018, "Member 'WB_TutorialWindow2_C_Page_Up::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Up, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'WB_TutorialWindow2_C_Page_Up::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Up, CallFunc_GetScrollPosRate_ReturnValue_2) == 0x00001C, "Member 'WB_TutorialWindow2_C_Page_Up::CallFunc_GetScrollPosRate_ReturnValue_2' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Page_Down
// 0x0020 (0x0020 - 0x0000)
struct WB_TutorialWindow2_C_Page_Down final
{
public:
	bool                                          IsScrolled;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6520[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_oldScrollRate;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6521[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6522[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue_1;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6523[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue_2;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TutorialWindow2_C_Page_Down) == 0x000004, "Wrong alignment on WB_TutorialWindow2_C_Page_Down");
static_assert(sizeof(WB_TutorialWindow2_C_Page_Down) == 0x000020, "Wrong size on WB_TutorialWindow2_C_Page_Down");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Down, IsScrolled) == 0x000000, "Member 'WB_TutorialWindow2_C_Page_Down::IsScrolled' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Down, L_oldScrollRate) == 0x000004, "Member 'WB_TutorialWindow2_C_Page_Down::L_oldScrollRate' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Down, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'WB_TutorialWindow2_C_Page_Down::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Down, CallFunc_GetScrollPosRate_ReturnValue) == 0x00000C, "Member 'WB_TutorialWindow2_C_Page_Down::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Down, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'WB_TutorialWindow2_C_Page_Down::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Down, CallFunc_GetScrollPosRate_ReturnValue_1) == 0x000014, "Member 'WB_TutorialWindow2_C_Page_Down::CallFunc_GetScrollPosRate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Down, CallFunc_IsRequiredScroll_RequiredScroll) == 0x000018, "Member 'WB_TutorialWindow2_C_Page_Down::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Down, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'WB_TutorialWindow2_C_Page_Down::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Page_Down, CallFunc_GetScrollPosRate_ReturnValue_2) == 0x00001C, "Member 'WB_TutorialWindow2_C_Page_Down::CallFunc_GetScrollPosRate_ReturnValue_2' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetTitle_byID
// 0x0020 (0x0020 - 0x0000)
struct WB_TutorialWindow2_C_SetTitle_byID final
{
public:
	const class UScriptMessageAsset*              InMessageAsset;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InMessageId;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6524[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByID_self_CastInput;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_SetTitle_byID) == 0x000008, "Wrong alignment on WB_TutorialWindow2_C_SetTitle_byID");
static_assert(sizeof(WB_TutorialWindow2_C_SetTitle_byID) == 0x000020, "Wrong size on WB_TutorialWindow2_C_SetTitle_byID");
static_assert(offsetof(WB_TutorialWindow2_C_SetTitle_byID, InMessageAsset) == 0x000000, "Member 'WB_TutorialWindow2_C_SetTitle_byID::InMessageAsset' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetTitle_byID, InMessageId) == 0x000008, "Member 'WB_TutorialWindow2_C_SetTitle_byID::InMessageId' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetTitle_byID, CallFunc_SetScriptMessageByID_self_CastInput) == 0x000010, "Member 'WB_TutorialWindow2_C_SetTitle_byID::CallFunc_SetScriptMessageByID_self_CastInput' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetTitle_byLabel
// 0x0020 (0x0020 - 0x0000)
struct WB_TutorialWindow2_C_SetTitle_byLabel final
{
public:
	const class UScriptMessageAsset*              InMessageAsset;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InMessageLabel;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByLabel_self_CastInput;   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_SetTitle_byLabel) == 0x000008, "Wrong alignment on WB_TutorialWindow2_C_SetTitle_byLabel");
static_assert(sizeof(WB_TutorialWindow2_C_SetTitle_byLabel) == 0x000020, "Wrong size on WB_TutorialWindow2_C_SetTitle_byLabel");
static_assert(offsetof(WB_TutorialWindow2_C_SetTitle_byLabel, InMessageAsset) == 0x000000, "Member 'WB_TutorialWindow2_C_SetTitle_byLabel::InMessageAsset' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetTitle_byLabel, InMessageLabel) == 0x000008, "Member 'WB_TutorialWindow2_C_SetTitle_byLabel::InMessageLabel' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetTitle_byLabel, CallFunc_SetScriptMessageByLabel_self_CastInput) == 0x000010, "Member 'WB_TutorialWindow2_C_SetTitle_byLabel::CallFunc_SetScriptMessageByLabel_self_CastInput' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetJustification
// 0x0001 (0x0001 - 0x0000)
struct WB_TutorialWindow2_C_SetJustification final
{
public:
	ETextJustify                                  InJustification;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TutorialWindow2_C_SetJustification) == 0x000001, "Wrong alignment on WB_TutorialWindow2_C_SetJustification");
static_assert(sizeof(WB_TutorialWindow2_C_SetJustification) == 0x000001, "Wrong size on WB_TutorialWindow2_C_SetJustification");
static_assert(offsetof(WB_TutorialWindow2_C_SetJustification, InJustification) == 0x000000, "Member 'WB_TutorialWindow2_C_SetJustification::InJustification' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetMainText_byID
// 0x0018 (0x0018 - 0x0000)
struct WB_TutorialWindow2_C_SetMainText_byID final
{
public:
	const class UScriptMessageAsset*              InMessageAsset;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InMessageId;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCampHelpOpened_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6525[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_SetMainText_byID) == 0x000008, "Wrong alignment on WB_TutorialWindow2_C_SetMainText_byID");
static_assert(sizeof(WB_TutorialWindow2_C_SetMainText_byID) == 0x000018, "Wrong size on WB_TutorialWindow2_C_SetMainText_byID");
static_assert(offsetof(WB_TutorialWindow2_C_SetMainText_byID, InMessageAsset) == 0x000000, "Member 'WB_TutorialWindow2_C_SetMainText_byID::InMessageAsset' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetMainText_byID, InMessageId) == 0x000008, "Member 'WB_TutorialWindow2_C_SetMainText_byID::InMessageId' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetMainText_byID, CallFunc_SetCampHelpOpened_ReturnValue) == 0x00000C, "Member 'WB_TutorialWindow2_C_SetMainText_byID::CallFunc_SetCampHelpOpened_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetMainText_byID, CallFunc_GetScrollPosRate_ReturnValue) == 0x000010, "Member 'WB_TutorialWindow2_C_SetMainText_byID::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetMainText_byID, CallFunc_IsRequiredScroll_RequiredScroll) == 0x000014, "Member 'WB_TutorialWindow2_C_SetMainText_byID::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetMainText_byLabel
// 0x0020 (0x0020 - 0x0000)
struct WB_TutorialWindow2_C_SetMainText_byLabel final
{
public:
	const class UScriptMessageAsset*              InMessageAsset;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InMessageLabel;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMessageIdByLabel_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCampHelpOpened_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6526[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_SetMainText_byLabel) == 0x000008, "Wrong alignment on WB_TutorialWindow2_C_SetMainText_byLabel");
static_assert(sizeof(WB_TutorialWindow2_C_SetMainText_byLabel) == 0x000020, "Wrong size on WB_TutorialWindow2_C_SetMainText_byLabel");
static_assert(offsetof(WB_TutorialWindow2_C_SetMainText_byLabel, InMessageAsset) == 0x000000, "Member 'WB_TutorialWindow2_C_SetMainText_byLabel::InMessageAsset' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetMainText_byLabel, InMessageLabel) == 0x000008, "Member 'WB_TutorialWindow2_C_SetMainText_byLabel::InMessageLabel' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetMainText_byLabel, CallFunc_GetMessageIdByLabel_ReturnValue) == 0x000010, "Member 'WB_TutorialWindow2_C_SetMainText_byLabel::CallFunc_GetMessageIdByLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetMainText_byLabel, CallFunc_SetCampHelpOpened_ReturnValue) == 0x000014, "Member 'WB_TutorialWindow2_C_SetMainText_byLabel::CallFunc_SetCampHelpOpened_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetMainText_byLabel, CallFunc_GetScrollPosRate_ReturnValue) == 0x000018, "Member 'WB_TutorialWindow2_C_SetMainText_byLabel::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetMainText_byLabel, CallFunc_IsRequiredScroll_RequiredScroll) == 0x00001C, "Member 'WB_TutorialWindow2_C_SetMainText_byLabel::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_ReleasedKamui
// 0x00B8 (0x00B8 - 0x0000)
struct WB_TutorialWindow2_C_SetText_ReleasedKamui final
{
public:
	bool                                          IsOpenedByEvent;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6527[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InEventMsgLabel;                                   // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6528[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 InOpenedKamuiID;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FName                                   L_AnnounceMsg;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    L_MsgAsset;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6529[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetGodParameterName_ReturnValue;          // 0x0050(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTextByLabel_ReturnValue;               // 0x0078(0x0018)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_652A[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_652B[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_SetText_ReleasedKamui) == 0x000008, "Wrong alignment on WB_TutorialWindow2_C_SetText_ReleasedKamui");
static_assert(sizeof(WB_TutorialWindow2_C_SetText_ReleasedKamui) == 0x0000B8, "Wrong size on WB_TutorialWindow2_C_SetText_ReleasedKamui");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, IsOpenedByEvent) == 0x000000, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::IsOpenedByEvent' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, InEventMsgLabel) == 0x000004, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::InEventMsgLabel' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, InOpenedKamuiID) == 0x000010, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::InOpenedKamuiID' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, L_AnnounceMsg) == 0x000020, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::L_AnnounceMsg' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, L_MsgAsset) == 0x000028, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::L_MsgAsset' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, Temp_int_Array_Index_Variable) == 0x000030, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, Temp_name_Variable) == 0x000034, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, CallFunc_NotEqual_NameName_ReturnValue) == 0x00003C, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, Temp_bool_Variable) == 0x00003D, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, K2Node_Select_Default) == 0x000040, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, CallFunc_Array_Get_Item) == 0x000048, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, CallFunc_GetGodParameterName_ReturnValue) == 0x000050, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::CallFunc_GetGodParameterName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, CallFunc_Conv_TextToString_ReturnValue) == 0x000068, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, CallFunc_GetTextByLabel_ReturnValue) == 0x000078, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::CallFunc_GetTextByLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000098, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, CallFunc_GetScrollPosRate_ReturnValue) == 0x0000B0, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ReleasedKamui, CallFunc_IsRequiredScroll_RequiredScroll) == 0x0000B4, "Member 'WB_TutorialWindow2_C_SetText_ReleasedKamui::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_MimanReward
// 0x01B0 (0x01B0 - 0x0000)
struct WB_TutorialWindow2_C_SetText_MimanReward final
{
public:
	bool                                          L_IsAssortItem;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_652C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMessageRichTextWidget*                 L_TmpRichText;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 L_GrayOutLines;                                    // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         L_Idx;                                             // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetShopMimanItemTableMax_ReturnValue;     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_652D[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FShopMimanItemTable                    CallFunc_GetShopMimanItemTable_ReturnValue;        // 0x0030(0x0018)(ConstParm)
	class FName                                   Temp_name_Variable;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetValueParam_self_CastInput;             // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FShopMimanItemTable                    CallFunc_GetShopMimanItemTable_ReturnValue_1;      // 0x0060(0x0018)(ConstParm)
	struct FShopMimanItemTable                    CallFunc_GetShopMimanItemTable_ReturnValue_2;      // 0x0078(0x0018)(ConstParm)
	struct FShopMimanItemTable                    CallFunc_GetShopMimanItemTable_ReturnValue_3;      // 0x0090(0x0018)(ConstParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_652E[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FShopMimanItemTable                    CallFunc_GetShopMimanItemTable_ReturnValue_4;      // 0x00B0(0x0018)(ConstParm)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetValueParam_self_CastInput_1;           // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetValueParam_self_CastInput_2;           // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMessageRichTextWidget*                 CallFunc_SpawnObject_ReturnValue;                  // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x00F0(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetValueParam_self_CastInput_3;           // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable_1;                              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FShopMimanItemTable                    CallFunc_GetShopMimanItemTable_ReturnValue_5;      // 0x0130(0x0018)(ConstParm)
	int32                                         CallFunc_GetMimanFoundNum_ReturnValue;             // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_652F[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByLabel_self_CastInput;   // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetMimanFoundNum_ReturnValue_1;           // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6530[0x3];                                     // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetValueParam_self_CastInput_4;           // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_Select_Default;                             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByLabel_self_CastInput_1; // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6531[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_SetText_MimanReward) == 0x000008, "Wrong alignment on WB_TutorialWindow2_C_SetText_MimanReward");
static_assert(sizeof(WB_TutorialWindow2_C_SetText_MimanReward) == 0x0001B0, "Wrong size on WB_TutorialWindow2_C_SetText_MimanReward");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, L_IsAssortItem) == 0x000000, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::L_IsAssortItem' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, L_TmpRichText) == 0x000008, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::L_TmpRichText' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, L_GrayOutLines) == 0x000010, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::L_GrayOutLines' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, L_Idx) == 0x000020, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::L_Idx' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_GetShopMimanItemTableMax_ReturnValue) == 0x000024, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_GetShopMimanItemTableMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_GetShopMimanItemTable_ReturnValue) == 0x000030, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_GetShopMimanItemTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, Temp_name_Variable) == 0x000048, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_SetValueParam_self_CastInput) == 0x000050, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_SetValueParam_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_GetShopMimanItemTable_ReturnValue_1) == 0x000060, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_GetShopMimanItemTable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_GetShopMimanItemTable_ReturnValue_2) == 0x000078, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_GetShopMimanItemTable_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_GetShopMimanItemTable_ReturnValue_3) == 0x000090, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_GetShopMimanItemTable_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_GetShopMimanItemTable_ReturnValue_4) == 0x0000B0, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_GetShopMimanItemTable_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_SetValueParam_self_CastInput_1) == 0x0000C8, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_SetValueParam_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_SetValueParam_self_CastInput_2) == 0x0000D8, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_SetValueParam_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_SpawnObject_ReturnValue) == 0x0000E8, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_GetText_ReturnValue) == 0x0000F0, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_Conv_TextToString_ReturnValue) == 0x000108, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_SetValueParam_self_CastInput_3) == 0x000118, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_SetValueParam_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, Temp_name_Variable_1) == 0x000128, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_GetShopMimanItemTable_ReturnValue_5) == 0x000130, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_GetShopMimanItemTable_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_GetMimanFoundNum_ReturnValue) == 0x000148, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_GetMimanFoundNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_Array_Add_ReturnValue) == 0x00014C, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000150, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_SetScriptMessageByLabel_self_CastInput) == 0x000158, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_SetScriptMessageByLabel_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_GetMimanFoundNum_ReturnValue_1) == 0x000168, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_GetMimanFoundNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, Temp_bool_Variable) == 0x00016C, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_SetValueParam_self_CastInput_4) == 0x000170, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_SetValueParam_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, K2Node_Select_Default) == 0x000180, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_SetScriptMessageByLabel_self_CastInput_1) == 0x000188, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_SetScriptMessageByLabel_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, Temp_int_Variable) == 0x000198, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00019C, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_Add_IntInt_ReturnValue) == 0x0001A0, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_GetScrollPosRate_ReturnValue) == 0x0001A4, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_MimanReward, CallFunc_IsRequiredScroll_RequiredScroll) == 0x0001A8, "Member 'WB_TutorialWindow2_C_SetText_MimanReward::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_AmuletMsg
// 0x0088 (0x0088 - 0x0000)
struct WB_TutorialWindow2_C_SetText_AmuletMsg final
{
public:
	E_AmuletTutorial_MsgType                      InAmuletType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6532[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptMessageAsset*                    L_MsgAsset;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6533[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0018(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_AmuletTutorialMsgInfo              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0034(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6534[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_BuildText_self_CastInput;                 // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByID_self_CastInput;      // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6535[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_SetText_AmuletMsg) == 0x000008, "Wrong alignment on WB_TutorialWindow2_C_SetText_AmuletMsg");
static_assert(sizeof(WB_TutorialWindow2_C_SetText_AmuletMsg) == 0x000088, "Wrong size on WB_TutorialWindow2_C_SetText_AmuletMsg");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_AmuletMsg, InAmuletType) == 0x000000, "Member 'WB_TutorialWindow2_C_SetText_AmuletMsg::InAmuletType' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_AmuletMsg, L_MsgAsset) == 0x000008, "Member 'WB_TutorialWindow2_C_SetText_AmuletMsg::L_MsgAsset' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_AmuletMsg, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WB_TutorialWindow2_C_SetText_AmuletMsg::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_AmuletMsg, Temp_bool_True_if_break_was_hit_Variable) == 0x000014, "Member 'WB_TutorialWindow2_C_SetText_AmuletMsg::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_AmuletMsg, CallFunc_Not_PreBool_ReturnValue) == 0x000015, "Member 'WB_TutorialWindow2_C_SetText_AmuletMsg::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_AmuletMsg, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000018, "Member 'WB_TutorialWindow2_C_SetText_AmuletMsg::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_AmuletMsg, CallFunc_Array_Get_Item) == 0x000028, "Member 'WB_TutorialWindow2_C_SetText_AmuletMsg::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_AmuletMsg, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WB_TutorialWindow2_C_SetText_AmuletMsg::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_AmuletMsg, CallFunc_GetDataTableRowFromName_OutRow) == 0x000034, "Member 'WB_TutorialWindow2_C_SetText_AmuletMsg::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_AmuletMsg, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000050, "Member 'WB_TutorialWindow2_C_SetText_AmuletMsg::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_AmuletMsg, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'WB_TutorialWindow2_C_SetText_AmuletMsg::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_AmuletMsg, CallFunc_BuildText_self_CastInput) == 0x000058, "Member 'WB_TutorialWindow2_C_SetText_AmuletMsg::CallFunc_BuildText_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_AmuletMsg, CallFunc_SetScriptMessageByID_self_CastInput) == 0x000068, "Member 'WB_TutorialWindow2_C_SetText_AmuletMsg::CallFunc_SetScriptMessageByID_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_AmuletMsg, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'WB_TutorialWindow2_C_SetText_AmuletMsg::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_AmuletMsg, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'WB_TutorialWindow2_C_SetText_AmuletMsg::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_AmuletMsg, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'WB_TutorialWindow2_C_SetText_AmuletMsg::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_AmuletMsg, CallFunc_BooleanAND_ReturnValue) == 0x000084, "Member 'WB_TutorialWindow2_C_SetText_AmuletMsg::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_IconHelp
// 0x0088 (0x0088 - 0x0000)
struct WB_TutorialWindow2_C_SetText_IconHelp final
{
public:
	class UScriptMessageAsset*                    L_MsgAsset;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6536[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0010(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_IconHelpTutorial_MsgInfo           CallFunc_GetDataTableRowFromName_OutRow;           // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6537[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTextByLabel_ReturnValue;               // 0x0038(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6538[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6539[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByLabel_self_CastInput;   // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_653A[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TutorialWindow2_C_SetText_IconHelp) == 0x000008, "Wrong alignment on WB_TutorialWindow2_C_SetText_IconHelp");
static_assert(sizeof(WB_TutorialWindow2_C_SetText_IconHelp) == 0x000088, "Wrong size on WB_TutorialWindow2_C_SetText_IconHelp");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_IconHelp, L_MsgAsset) == 0x000000, "Member 'WB_TutorialWindow2_C_SetText_IconHelp::L_MsgAsset' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_IconHelp, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WB_TutorialWindow2_C_SetText_IconHelp::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_IconHelp, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000010, "Member 'WB_TutorialWindow2_C_SetText_IconHelp::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_IconHelp, CallFunc_Array_Get_Item) == 0x000020, "Member 'WB_TutorialWindow2_C_SetText_IconHelp::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_IconHelp, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WB_TutorialWindow2_C_SetText_IconHelp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_IconHelp, CallFunc_GetDataTableRowFromName_OutRow) == 0x00002C, "Member 'WB_TutorialWindow2_C_SetText_IconHelp::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_IconHelp, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000034, "Member 'WB_TutorialWindow2_C_SetText_IconHelp::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_IconHelp, CallFunc_GetTextByLabel_ReturnValue) == 0x000038, "Member 'WB_TutorialWindow2_C_SetText_IconHelp::CallFunc_GetTextByLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_IconHelp, CallFunc_Conv_TextToString_ReturnValue) == 0x000050, "Member 'WB_TutorialWindow2_C_SetText_IconHelp::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_IconHelp, CallFunc_GetScrollPosRate_ReturnValue) == 0x000060, "Member 'WB_TutorialWindow2_C_SetText_IconHelp::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_IconHelp, CallFunc_IsRequiredScroll_RequiredScroll) == 0x000064, "Member 'WB_TutorialWindow2_C_SetText_IconHelp::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_IconHelp, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'WB_TutorialWindow2_C_SetText_IconHelp::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_IconHelp, CallFunc_SetScriptMessageByLabel_self_CastInput) == 0x000070, "Member 'WB_TutorialWindow2_C_SetText_IconHelp::CallFunc_SetScriptMessageByLabel_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_IconHelp, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'WB_TutorialWindow2_C_SetText_IconHelp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_IconHelp, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'WB_TutorialWindow2_C_SetText_IconHelp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_ApplyDLC
// 0x0098 (0x0098 - 0x0000)
struct WB_TutorialWindow2_C_SetText_ApplyDLC final
{
public:
	TArray<class FName>                           InContentsMsgLabel;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UScriptMessageAsset*                    L_MsgAsset;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTextByLabel_ReturnValue;               // 0x0028(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_653B[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTextByLabel_ReturnValue_1;             // 0x0060(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_653C[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_SetText_ApplyDLC) == 0x000008, "Wrong alignment on WB_TutorialWindow2_C_SetText_ApplyDLC");
static_assert(sizeof(WB_TutorialWindow2_C_SetText_ApplyDLC) == 0x000098, "Wrong size on WB_TutorialWindow2_C_SetText_ApplyDLC");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ApplyDLC, InContentsMsgLabel) == 0x000000, "Member 'WB_TutorialWindow2_C_SetText_ApplyDLC::InContentsMsgLabel' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ApplyDLC, L_MsgAsset) == 0x000010, "Member 'WB_TutorialWindow2_C_SetText_ApplyDLC::L_MsgAsset' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ApplyDLC, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WB_TutorialWindow2_C_SetText_ApplyDLC::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ApplyDLC, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'WB_TutorialWindow2_C_SetText_ApplyDLC::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ApplyDLC, CallFunc_Array_Get_Item) == 0x000020, "Member 'WB_TutorialWindow2_C_SetText_ApplyDLC::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ApplyDLC, CallFunc_GetTextByLabel_ReturnValue) == 0x000028, "Member 'WB_TutorialWindow2_C_SetText_ApplyDLC::CallFunc_GetTextByLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ApplyDLC, CallFunc_Conv_TextToString_ReturnValue) == 0x000040, "Member 'WB_TutorialWindow2_C_SetText_ApplyDLC::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ApplyDLC, CallFunc_MakeLiteralName_ReturnValue) == 0x000050, "Member 'WB_TutorialWindow2_C_SetText_ApplyDLC::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ApplyDLC, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'WB_TutorialWindow2_C_SetText_ApplyDLC::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ApplyDLC, CallFunc_GetTextByLabel_ReturnValue_1) == 0x000060, "Member 'WB_TutorialWindow2_C_SetText_ApplyDLC::CallFunc_GetTextByLabel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ApplyDLC, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000078, "Member 'WB_TutorialWindow2_C_SetText_ApplyDLC::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ApplyDLC, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'WB_TutorialWindow2_C_SetText_ApplyDLC::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ApplyDLC, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'WB_TutorialWindow2_C_SetText_ApplyDLC::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ApplyDLC, CallFunc_GetScrollPosRate_ReturnValue) == 0x000090, "Member 'WB_TutorialWindow2_C_SetText_ApplyDLC::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_ApplyDLC, CallFunc_IsRequiredScroll_RequiredScroll) == 0x000094, "Member 'WB_TutorialWindow2_C_SetText_ApplyDLC::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetVisibility_BlackCurtain
// 0x0010 (0x0010 - 0x0000)
struct WB_TutorialWindow2_C_SetVisibility_BlackCurtain final
{
public:
	bool                                          IsVivible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_653D[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TutorialWindow2_C_SetVisibility_BlackCurtain) == 0x000004, "Wrong alignment on WB_TutorialWindow2_C_SetVisibility_BlackCurtain");
static_assert(sizeof(WB_TutorialWindow2_C_SetVisibility_BlackCurtain) == 0x000010, "Wrong size on WB_TutorialWindow2_C_SetVisibility_BlackCurtain");
static_assert(offsetof(WB_TutorialWindow2_C_SetVisibility_BlackCurtain, IsVivible) == 0x000000, "Member 'WB_TutorialWindow2_C_SetVisibility_BlackCurtain::IsVivible' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetVisibility_BlackCurtain, Temp_bool_Variable) == 0x000001, "Member 'WB_TutorialWindow2_C_SetVisibility_BlackCurtain::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetVisibility_BlackCurtain, Temp_float_Variable) == 0x000004, "Member 'WB_TutorialWindow2_C_SetVisibility_BlackCurtain::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetVisibility_BlackCurtain, Temp_float_Variable_1) == 0x000008, "Member 'WB_TutorialWindow2_C_SetVisibility_BlackCurtain::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetVisibility_BlackCurtain, K2Node_Select_Default) == 0x00000C, "Member 'WB_TutorialWindow2_C_SetVisibility_BlackCurtain::K2Node_Select_Default' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_InvalidDLC
// 0x00D0 (0x00D0 - 0x0000)
struct WB_TutorialWindow2_C_SetText_InvalidDLC final
{
public:
	TArray<class FName>                           InContentsMsgLabel;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UScriptMessageAsset*                    L_MsgAsset;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTextByLabel_ReturnValue;               // 0x0020(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_653E[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_653F[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTextByLabel_ReturnValue_1;             // 0x0060(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6540[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTextByLabel_ReturnValue_2;             // 0x0098(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6541[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_SetText_InvalidDLC) == 0x000008, "Wrong alignment on WB_TutorialWindow2_C_SetText_InvalidDLC");
static_assert(sizeof(WB_TutorialWindow2_C_SetText_InvalidDLC) == 0x0000D0, "Wrong size on WB_TutorialWindow2_C_SetText_InvalidDLC");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, InContentsMsgLabel) == 0x000000, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::InContentsMsgLabel' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, L_MsgAsset) == 0x000010, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::L_MsgAsset' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, CallFunc_MakeLiteralName_ReturnValue) == 0x000018, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, CallFunc_GetTextByLabel_ReturnValue) == 0x000020, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::CallFunc_GetTextByLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, CallFunc_Conv_TextToString_ReturnValue) == 0x000040, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, Temp_int_Array_Index_Variable) == 0x000050, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, CallFunc_Array_Get_Item) == 0x000054, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, CallFunc_GetTextByLabel_ReturnValue_1) == 0x000060, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::CallFunc_GetTextByLabel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000078, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000088, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, CallFunc_GetTextByLabel_ReturnValue_2) == 0x000098, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::CallFunc_GetTextByLabel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0000B0, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, CallFunc_GetScrollPosRate_ReturnValue) == 0x0000C8, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_InvalidDLC, CallFunc_IsRequiredScroll_RequiredScroll) == 0x0000CC, "Member 'WB_TutorialWindow2_C_SetText_InvalidDLC::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_byEnum
// 0x0048 (0x0048 - 0x0000)
struct WB_TutorialWindow2_C_SetText_byEnum final
{
public:
	E_TUTORIAL_WINDOW_MESSAGE_TYPE                InEnumPattern;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6542[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTutorialWindowBuffer                  CallFunc_getTutorialWindowData_ReturnValue;        // 0x0004(0x0014)()
	struct FTutorialWindowBuffer                  CallFunc_getTutorialWindowData_ReturnValue_1;      // 0x0018(0x0014)()
	bool                                          CallFunc_SetCampHelpOpened_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6543[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByID_self_CastInput;      // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_SetText_byEnum) == 0x000008, "Wrong alignment on WB_TutorialWindow2_C_SetText_byEnum");
static_assert(sizeof(WB_TutorialWindow2_C_SetText_byEnum) == 0x000048, "Wrong size on WB_TutorialWindow2_C_SetText_byEnum");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_byEnum, InEnumPattern) == 0x000000, "Member 'WB_TutorialWindow2_C_SetText_byEnum::InEnumPattern' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_byEnum, CallFunc_getTutorialWindowData_ReturnValue) == 0x000004, "Member 'WB_TutorialWindow2_C_SetText_byEnum::CallFunc_getTutorialWindowData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_byEnum, CallFunc_getTutorialWindowData_ReturnValue_1) == 0x000018, "Member 'WB_TutorialWindow2_C_SetText_byEnum::CallFunc_getTutorialWindowData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_byEnum, CallFunc_SetCampHelpOpened_ReturnValue) == 0x00002C, "Member 'WB_TutorialWindow2_C_SetText_byEnum::CallFunc_SetCampHelpOpened_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_byEnum, CallFunc_SetScriptMessageByID_self_CastInput) == 0x000030, "Member 'WB_TutorialWindow2_C_SetText_byEnum::CallFunc_SetScriptMessageByID_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_byEnum, CallFunc_GetScrollPosRate_ReturnValue) == 0x000040, "Member 'WB_TutorialWindow2_C_SetText_byEnum::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_byEnum, CallFunc_IsRequiredScroll_RequiredScroll) == 0x000044, "Member 'WB_TutorialWindow2_C_SetText_byEnum::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Move_Top
// 0x001C (0x001C - 0x0000)
struct WB_TutorialWindow2_C_Move_Top final
{
public:
	bool                                          IsScrolled;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6544[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_oldScrollRate;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6545[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue_1;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6546[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue_2;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TutorialWindow2_C_Move_Top) == 0x000004, "Wrong alignment on WB_TutorialWindow2_C_Move_Top");
static_assert(sizeof(WB_TutorialWindow2_C_Move_Top) == 0x00001C, "Wrong size on WB_TutorialWindow2_C_Move_Top");
static_assert(offsetof(WB_TutorialWindow2_C_Move_Top, IsScrolled) == 0x000000, "Member 'WB_TutorialWindow2_C_Move_Top::IsScrolled' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Move_Top, L_oldScrollRate) == 0x000004, "Member 'WB_TutorialWindow2_C_Move_Top::L_oldScrollRate' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Move_Top, CallFunc_GetScrollPosRate_ReturnValue) == 0x000008, "Member 'WB_TutorialWindow2_C_Move_Top::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Move_Top, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'WB_TutorialWindow2_C_Move_Top::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Move_Top, CallFunc_GetScrollPosRate_ReturnValue_1) == 0x000010, "Member 'WB_TutorialWindow2_C_Move_Top::CallFunc_GetScrollPosRate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Move_Top, CallFunc_IsRequiredScroll_RequiredScroll) == 0x000014, "Member 'WB_TutorialWindow2_C_Move_Top::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Move_Top, K2Node_SwitchEnum_CmpSuccess) == 0x000015, "Member 'WB_TutorialWindow2_C_Move_Top::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Move_Top, CallFunc_GetScrollPosRate_ReturnValue_2) == 0x000018, "Member 'WB_TutorialWindow2_C_Move_Top::CallFunc_GetScrollPosRate_ReturnValue_2' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.Move_Bottom
// 0x001C (0x001C - 0x0000)
struct WB_TutorialWindow2_C_Move_Bottom final
{
public:
	bool                                          IsScrolled;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6547[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_oldScrollRate;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6548[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue_1;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6549[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue_2;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TutorialWindow2_C_Move_Bottom) == 0x000004, "Wrong alignment on WB_TutorialWindow2_C_Move_Bottom");
static_assert(sizeof(WB_TutorialWindow2_C_Move_Bottom) == 0x00001C, "Wrong size on WB_TutorialWindow2_C_Move_Bottom");
static_assert(offsetof(WB_TutorialWindow2_C_Move_Bottom, IsScrolled) == 0x000000, "Member 'WB_TutorialWindow2_C_Move_Bottom::IsScrolled' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Move_Bottom, L_oldScrollRate) == 0x000004, "Member 'WB_TutorialWindow2_C_Move_Bottom::L_oldScrollRate' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Move_Bottom, CallFunc_GetScrollPosRate_ReturnValue) == 0x000008, "Member 'WB_TutorialWindow2_C_Move_Bottom::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Move_Bottom, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'WB_TutorialWindow2_C_Move_Bottom::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Move_Bottom, CallFunc_GetScrollPosRate_ReturnValue_1) == 0x000010, "Member 'WB_TutorialWindow2_C_Move_Bottom::CallFunc_GetScrollPosRate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Move_Bottom, CallFunc_IsRequiredScroll_RequiredScroll) == 0x000014, "Member 'WB_TutorialWindow2_C_Move_Bottom::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Move_Bottom, K2Node_SwitchEnum_CmpSuccess) == 0x000015, "Member 'WB_TutorialWindow2_C_Move_Bottom::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_Move_Bottom, CallFunc_GetScrollPosRate_ReturnValue_2) == 0x000018, "Member 'WB_TutorialWindow2_C_Move_Bottom::CallFunc_GetScrollPosRate_ReturnValue_2' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.IsEnableMouseWheel
// 0x0004 (0x0004 - 0x0000)
struct WB_TutorialWindow2_C_IsEnableMouseWheel final
{
public:
	bool                                          IsEnableScroll;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMouseOveredToScrollBar_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetMouseOvered_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_IsEnableMouseWheel) == 0x000001, "Wrong alignment on WB_TutorialWindow2_C_IsEnableMouseWheel");
static_assert(sizeof(WB_TutorialWindow2_C_IsEnableMouseWheel) == 0x000004, "Wrong size on WB_TutorialWindow2_C_IsEnableMouseWheel");
static_assert(offsetof(WB_TutorialWindow2_C_IsEnableMouseWheel, IsEnableScroll) == 0x000000, "Member 'WB_TutorialWindow2_C_IsEnableMouseWheel::IsEnableScroll' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_IsEnableMouseWheel, CallFunc_IsMouseOveredToScrollBar_ReturnValue) == 0x000001, "Member 'WB_TutorialWindow2_C_IsEnableMouseWheel::CallFunc_IsMouseOveredToScrollBar_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_IsEnableMouseWheel, CallFunc_GetMouseOvered_ReturnValue) == 0x000002, "Member 'WB_TutorialWindow2_C_IsEnableMouseWheel::CallFunc_GetMouseOvered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_IsEnableMouseWheel, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'WB_TutorialWindow2_C_IsEnableMouseWheel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.OnMovedScrollBar_ByMouse
// 0x0004 (0x0004 - 0x0000)
struct WB_TutorialWindow2_C_OnMovedScrollBar_ByMouse final
{
public:
	float                                         InScrollRate;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TutorialWindow2_C_OnMovedScrollBar_ByMouse) == 0x000004, "Wrong alignment on WB_TutorialWindow2_C_OnMovedScrollBar_ByMouse");
static_assert(sizeof(WB_TutorialWindow2_C_OnMovedScrollBar_ByMouse) == 0x000004, "Wrong size on WB_TutorialWindow2_C_OnMovedScrollBar_ByMouse");
static_assert(offsetof(WB_TutorialWindow2_C_OnMovedScrollBar_ByMouse, InScrollRate) == 0x000000, "Member 'WB_TutorialWindow2_C_OnMovedScrollBar_ByMouse::InScrollRate' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetBtnHelpMode
// 0x0002 (0x0002 - 0x0000)
struct WB_TutorialWindow2_C_SetBtnHelpMode final
{
public:
	bool                                          IsGamePad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_SetBtnHelpMode) == 0x000001, "Wrong alignment on WB_TutorialWindow2_C_SetBtnHelpMode");
static_assert(sizeof(WB_TutorialWindow2_C_SetBtnHelpMode) == 0x000002, "Wrong size on WB_TutorialWindow2_C_SetBtnHelpMode");
static_assert(offsetof(WB_TutorialWindow2_C_SetBtnHelpMode, IsGamePad) == 0x000000, "Member 'WB_TutorialWindow2_C_SetBtnHelpMode::IsGamePad' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetBtnHelpMode, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WB_TutorialWindow2_C_SetBtnHelpMode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.UpdateBtnHelpInfo
// 0x0048 (0x0048 - 0x0000)
struct WB_TutorialWindow2_C_UpdateBtnHelpInfo final
{
public:
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASystemMess*                            CallFunc_GetSystemMess_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0010(0x0018)()
	struct FBtnHelpInfo                           K2Node_MakeStruct_BtnHelpInfo;                     // 0x0028(0x0020)()
};
static_assert(alignof(WB_TutorialWindow2_C_UpdateBtnHelpInfo) == 0x000008, "Wrong alignment on WB_TutorialWindow2_C_UpdateBtnHelpInfo");
static_assert(sizeof(WB_TutorialWindow2_C_UpdateBtnHelpInfo) == 0x000048, "Wrong size on WB_TutorialWindow2_C_UpdateBtnHelpInfo");
static_assert(offsetof(WB_TutorialWindow2_C_UpdateBtnHelpInfo, CallFunc_Get_ReturnValue) == 0x000000, "Member 'WB_TutorialWindow2_C_UpdateBtnHelpInfo::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_UpdateBtnHelpInfo, CallFunc_GetSystemMess_ReturnValue) == 0x000008, "Member 'WB_TutorialWindow2_C_UpdateBtnHelpInfo::CallFunc_GetSystemMess_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_UpdateBtnHelpInfo, CallFunc_GetText_ReturnValue) == 0x000010, "Member 'WB_TutorialWindow2_C_UpdateBtnHelpInfo::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_UpdateBtnHelpInfo, K2Node_MakeStruct_BtnHelpInfo) == 0x000028, "Member 'WB_TutorialWindow2_C_UpdateBtnHelpInfo::K2Node_MakeStruct_BtnHelpInfo' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_BenefitItem
// 0x00E0 (0x00E0 - 0x0000)
struct WB_TutorialWindow2_C_SetText_BenefitItem final
{
public:
	class FName                                   InTitleLabel;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBenefitItemMsgDataList                InItemMsgList;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UMessageRichTextWidget*                 L_TmpRichText;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Idx;                                             // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654A[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptMessageAsset*                    L_MsgAsset;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 CallFunc_SpawnObject_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetValueParam_self_CastInput;             // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByLabel_self_CastInput;   // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetValueParam_self_CastInput_1;           // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0070(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654B[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTextByLabel_ReturnValue;               // 0x00A8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_654C[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_SetText_BenefitItem) == 0x000008, "Wrong alignment on WB_TutorialWindow2_C_SetText_BenefitItem");
static_assert(sizeof(WB_TutorialWindow2_C_SetText_BenefitItem) == 0x0000E0, "Wrong size on WB_TutorialWindow2_C_SetText_BenefitItem");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, InTitleLabel) == 0x000000, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::InTitleLabel' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, InItemMsgList) == 0x000008, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::InItemMsgList' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, L_TmpRichText) == 0x000018, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::L_TmpRichText' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, L_Idx) == 0x000020, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::L_Idx' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, L_MsgAsset) == 0x000028, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::L_MsgAsset' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, Temp_int_Array_Index_Variable) == 0x000030, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, CallFunc_SpawnObject_ReturnValue) == 0x000038, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, CallFunc_SetValueParam_self_CastInput) == 0x000040, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::CallFunc_SetValueParam_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, CallFunc_SetScriptMessageByLabel_self_CastInput) == 0x000050, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::CallFunc_SetScriptMessageByLabel_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, CallFunc_SetValueParam_self_CastInput_1) == 0x000060, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::CallFunc_SetValueParam_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, CallFunc_GetText_ReturnValue) == 0x000070, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, CallFunc_Conv_TextToString_ReturnValue) == 0x000088, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, CallFunc_MakeLiteralName_ReturnValue) == 0x000098, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, CallFunc_GetTextByLabel_ReturnValue) == 0x0000A8, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::CallFunc_GetTextByLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000C0, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, CallFunc_GetScrollPosRate_ReturnValue) == 0x0000D8, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitItem, CallFunc_IsRequiredScroll_RequiredScroll) == 0x0000DC, "Member 'WB_TutorialWindow2_C_SetText_BenefitItem::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetText_BenefitDevil
// 0x00E8 (0x00E8 - 0x0000)
struct WB_TutorialWindow2_C_SetText_BenefitDevil final
{
public:
	class FName                                   InTitleLabel;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBenefitDevilMsgDataList               InDevilMsgList;                                    // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UMessageRichTextWidget*                 L_TmpRichText;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Idx;                                             // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654D[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptMessageAsset*                    L_MsgAsset;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654E[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMessageRichTextWidget*                 CallFunc_SpawnObject_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654F[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetValueParam_self_CastInput;             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByLabel_self_CastInput;   // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetValueParam_self_CastInput_1;           // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0078(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6550[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTextByLabel_ReturnValue;               // 0x00B0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6551[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredScroll_RequiredScroll;          // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_SetText_BenefitDevil) == 0x000008, "Wrong alignment on WB_TutorialWindow2_C_SetText_BenefitDevil");
static_assert(sizeof(WB_TutorialWindow2_C_SetText_BenefitDevil) == 0x0000E8, "Wrong size on WB_TutorialWindow2_C_SetText_BenefitDevil");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, InTitleLabel) == 0x000000, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::InTitleLabel' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, InDevilMsgList) == 0x000008, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::InDevilMsgList' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, L_TmpRichText) == 0x000018, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::L_TmpRichText' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, L_Idx) == 0x000020, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::L_Idx' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, L_MsgAsset) == 0x000028, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::L_MsgAsset' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, Temp_int_Array_Index_Variable) == 0x000030, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, CallFunc_SpawnObject_ReturnValue) == 0x000038, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, CallFunc_SetValueParam_self_CastInput) == 0x000048, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::CallFunc_SetValueParam_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, CallFunc_SetScriptMessageByLabel_self_CastInput) == 0x000058, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::CallFunc_SetScriptMessageByLabel_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, CallFunc_SetValueParam_self_CastInput_1) == 0x000068, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::CallFunc_SetValueParam_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, CallFunc_GetText_ReturnValue) == 0x000078, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, CallFunc_Conv_TextToString_ReturnValue) == 0x000090, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, CallFunc_MakeLiteralName_ReturnValue) == 0x0000A0, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, Temp_int_Loop_Counter_Variable) == 0x0000A8, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, CallFunc_GetTextByLabel_ReturnValue) == 0x0000B0, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::CallFunc_GetTextByLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000C8, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, CallFunc_Add_IntInt_ReturnValue) == 0x0000DC, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, CallFunc_GetScrollPosRate_ReturnValue) == 0x0000E0, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_SetText_BenefitDevil, CallFunc_IsRequiredScroll_RequiredScroll) == 0x0000E4, "Member 'WB_TutorialWindow2_C_SetText_BenefitDevil::CallFunc_IsRequiredScroll_RequiredScroll' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.SetCloseIconType
// 0x0001 (0x0001 - 0x0000)
struct WB_TutorialWindow2_C_SetCloseIconType final
{
public:
	bool                                          Param_IsEscClose;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_SetCloseIconType) == 0x000001, "Wrong alignment on WB_TutorialWindow2_C_SetCloseIconType");
static_assert(sizeof(WB_TutorialWindow2_C_SetCloseIconType) == 0x000001, "Wrong size on WB_TutorialWindow2_C_SetCloseIconType");
static_assert(offsetof(WB_TutorialWindow2_C_SetCloseIconType, Param_IsEscClose) == 0x000000, "Member 'WB_TutorialWindow2_C_SetCloseIconType::Param_IsEscClose' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.ReloadMainText
// 0x000C (0x000C - 0x0000)
struct WB_TutorialWindow2_C_ReloadMainText final
{
public:
	float                                         L_oldScrollRate;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6552[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollPosRate_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TutorialWindow2_C_ReloadMainText) == 0x000004, "Wrong alignment on WB_TutorialWindow2_C_ReloadMainText");
static_assert(sizeof(WB_TutorialWindow2_C_ReloadMainText) == 0x00000C, "Wrong size on WB_TutorialWindow2_C_ReloadMainText");
static_assert(offsetof(WB_TutorialWindow2_C_ReloadMainText, L_oldScrollRate) == 0x000000, "Member 'WB_TutorialWindow2_C_ReloadMainText::L_oldScrollRate' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_ReloadMainText, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'WB_TutorialWindow2_C_ReloadMainText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_ReloadMainText, CallFunc_GetScrollPosRate_ReturnValue) == 0x000008, "Member 'WB_TutorialWindow2_C_ReloadMainText::CallFunc_GetScrollPosRate_ReturnValue' has a wrong offset!");

// Function WB_TutorialWindow2.WB_TutorialWindow2_C.ReloadKeyboardHelpText
// 0x0018 (0x0018 - 0x0000)
struct WB_TutorialWindow2_C_ReloadKeyboardHelpText final
{
public:
	TScriptInterface<class IBPI_KeyboardIcon_C>   CallFunc_BPI_SetKeyInfo_self_CastInput;            // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_SetKeyInfo_Ret;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TutorialWindow2_C_ReloadKeyboardHelpText) == 0x000008, "Wrong alignment on WB_TutorialWindow2_C_ReloadKeyboardHelpText");
static_assert(sizeof(WB_TutorialWindow2_C_ReloadKeyboardHelpText) == 0x000018, "Wrong size on WB_TutorialWindow2_C_ReloadKeyboardHelpText");
static_assert(offsetof(WB_TutorialWindow2_C_ReloadKeyboardHelpText, CallFunc_BPI_SetKeyInfo_self_CastInput) == 0x000000, "Member 'WB_TutorialWindow2_C_ReloadKeyboardHelpText::CallFunc_BPI_SetKeyInfo_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_TutorialWindow2_C_ReloadKeyboardHelpText, CallFunc_BPI_SetKeyInfo_Ret) == 0x000010, "Member 'WB_TutorialWindow2_C_ReloadKeyboardHelpText::CallFunc_BPI_SetKeyInfo_Ret' has a wrong offset!");

}

