#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_MapTaoHeal

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPL_MapTaoHeal.BPL_MapTaoHeal_C.CanTaoHeal
// 0x0018 (0x0018 - 0x0000)
struct BPL_MapTaoHeal_C_CanTaoHeal final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can;                                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPL_CheckNeedAutoHeal_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlag_ReturnValue;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F2A[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_MapTaoHeal_C_CanTaoHeal) == 0x000008, "Wrong alignment on BPL_MapTaoHeal_C_CanTaoHeal");
static_assert(sizeof(BPL_MapTaoHeal_C_CanTaoHeal) == 0x000018, "Wrong size on BPL_MapTaoHeal_C_CanTaoHeal");
static_assert(offsetof(BPL_MapTaoHeal_C_CanTaoHeal, __WorldContext) == 0x000000, "Member 'BPL_MapTaoHeal_C_CanTaoHeal::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_MapTaoHeal_C_CanTaoHeal, Can) == 0x000008, "Member 'BPL_MapTaoHeal_C_CanTaoHeal::Can' has a wrong offset!");
static_assert(offsetof(BPL_MapTaoHeal_C_CanTaoHeal, CallFunc_BPL_CheckNeedAutoHeal_ReturnValue) == 0x000009, "Member 'BPL_MapTaoHeal_C_CanTaoHeal::CallFunc_BPL_CheckNeedAutoHeal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapTaoHeal_C_CanTaoHeal, CallFunc_CheckEventFlag_ReturnValue) == 0x00000A, "Member 'BPL_MapTaoHeal_C_CanTaoHeal::CallFunc_CheckEventFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapTaoHeal_C_CanTaoHeal, CallFunc_GetMapID_ReturnValue) == 0x00000C, "Member 'BPL_MapTaoHeal_C_CanTaoHeal::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_MapTaoHeal_C_CanTaoHeal, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'BPL_MapTaoHeal_C_CanTaoHeal::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}

