#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Pla603

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_Pla603_Weapon_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_PLAYER_MOVEMENT_STATE_structs.hpp"
#include "Project_structs.hpp"
#include "E_MapAction_Pla603_structs.hpp"
#include "KawaiiPhysics_structs.hpp"
#include "MapAttackDamageData_structs.hpp"


namespace SDK::Params
{

// Function Pla603.Pla603_C.CheckIdleAnimBP
// 0x0003 (0x0003 - 0x0000)
struct Pla603_C_CheckIdleAnimBP final
{
public:
	bool                                          Idle;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIdle_Idle;                           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_CheckIdleAnimBP) == 0x000001, "Wrong alignment on Pla603_C_CheckIdleAnimBP");
static_assert(sizeof(Pla603_C_CheckIdleAnimBP) == 0x000003, "Wrong size on Pla603_C_CheckIdleAnimBP");
static_assert(offsetof(Pla603_C_CheckIdleAnimBP, Idle) == 0x000000, "Member 'Pla603_C_CheckIdleAnimBP::Idle' has a wrong offset!");
static_assert(offsetof(Pla603_C_CheckIdleAnimBP, CallFunc_CheckIdle_Idle) == 0x000001, "Member 'Pla603_C_CheckIdleAnimBP::CallFunc_CheckIdle_Idle' has a wrong offset!");
static_assert(offsetof(Pla603_C_CheckIdleAnimBP, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'Pla603_C_CheckIdleAnimBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Pla603.Pla603_C.SetRideCoasterSlopeAngle
// 0x0008 (0x0008 - 0x0000)
struct Pla603_C_SetRideCoasterSlopeAngle final
{
public:
	float                                         Angle;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_SetRideCoasterSlopeAngle) == 0x000004, "Wrong alignment on Pla603_C_SetRideCoasterSlopeAngle");
static_assert(sizeof(Pla603_C_SetRideCoasterSlopeAngle) == 0x000008, "Wrong size on Pla603_C_SetRideCoasterSlopeAngle");
static_assert(offsetof(Pla603_C_SetRideCoasterSlopeAngle, Angle) == 0x000000, "Member 'Pla603_C_SetRideCoasterSlopeAngle::Angle' has a wrong offset!");
static_assert(offsetof(Pla603_C_SetRideCoasterSlopeAngle, NewParam) == 0x000004, "Member 'Pla603_C_SetRideCoasterSlopeAngle::NewParam' has a wrong offset!");
static_assert(offsetof(Pla603_C_SetRideCoasterSlopeAngle, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'Pla603_C_SetRideCoasterSlopeAngle::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Pla603.Pla603_C.IsTsukuyomiForm
// 0x0001 (0x0001 - 0x0000)
struct Pla603_C_IsTsukuyomiForm final
{
public:
	bool                                          TsukuyomiForm;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_IsTsukuyomiForm) == 0x000001, "Wrong alignment on Pla603_C_IsTsukuyomiForm");
static_assert(sizeof(Pla603_C_IsTsukuyomiForm) == 0x000001, "Wrong size on Pla603_C_IsTsukuyomiForm");
static_assert(offsetof(Pla603_C_IsTsukuyomiForm, TsukuyomiForm) == 0x000000, "Member 'Pla603_C_IsTsukuyomiForm::TsukuyomiForm' has a wrong offset!");

// Function Pla603.Pla603_C.FormChange
// 0x00F0 (0x00F0 - 0x0000)
struct Pla603_C_FormChange final
{
public:
	bool                                          TSUKUYOMI;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewParam;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8470[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharaMotionTable*                      L_MotionTable;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          L_SkeletalMesh;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8471[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8472[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharaMotionTable*                      Temp_object_Variable_2;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumLODs_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8473[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPla603_AnimBP_C*                       K2Node_DynamicCast_AsPla_603_Anim_BP;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8474[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8475[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharaMotionTable*                      Temp_object_Variable_3;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetPostProcessInstance_ReturnValue;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectIKAnimInstance*                 K2Node_DynamicCast_AsProject_IKAnim_Instance;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8476[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_Select_Default;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8477[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkeletalMaterial>              CallFunc_GetMaterials_ReturnValue;                 // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	struct FSkeletalMaterial                      CallFunc_Array_Get_Item;                           // 0x00B8(0x0028)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8478[0x2];                                     // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharaMotionTable*                      K2Node_Select_Default_1;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_FormChange) == 0x000008, "Wrong alignment on Pla603_C_FormChange");
static_assert(sizeof(Pla603_C_FormChange) == 0x0000F0, "Wrong size on Pla603_C_FormChange");
static_assert(offsetof(Pla603_C_FormChange, TSUKUYOMI) == 0x000000, "Member 'Pla603_C_FormChange::TSUKUYOMI' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, NewParam) == 0x000001, "Member 'Pla603_C_FormChange::NewParam' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, L_MotionTable) == 0x000008, "Member 'Pla603_C_FormChange::L_MotionTable' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, L_SkeletalMesh) == 0x000010, "Member 'Pla603_C_FormChange::L_SkeletalMesh' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, Temp_bool_Variable) == 0x000018, "Member 'Pla603_C_FormChange::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, Temp_object_Variable) == 0x000020, "Member 'Pla603_C_FormChange::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, Temp_object_Variable_1) == 0x000028, "Member 'Pla603_C_FormChange::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, Temp_int_Array_Index_Variable) == 0x000030, "Member 'Pla603_C_FormChange::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, Temp_object_Variable_2) == 0x000038, "Member 'Pla603_C_FormChange::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, Temp_int_Variable) == 0x000040, "Member 'Pla603_C_FormChange::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, CallFunc_GetNumLODs_ReturnValue) == 0x000044, "Member 'Pla603_C_FormChange::CallFunc_GetNumLODs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'Pla603_C_FormChange::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'Pla603_C_FormChange::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'Pla603_C_FormChange::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, CallFunc_GetAnimInstance_ReturnValue) == 0x000058, "Member 'Pla603_C_FormChange::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, K2Node_DynamicCast_AsPla_603_Anim_BP) == 0x000060, "Member 'Pla603_C_FormChange::K2Node_DynamicCast_AsPla_603_Anim_BP' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'Pla603_C_FormChange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'Pla603_C_FormChange::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'Pla603_C_FormChange::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, Temp_object_Variable_3) == 0x000078, "Member 'Pla603_C_FormChange::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, CallFunc_GetPostProcessInstance_ReturnValue) == 0x000080, "Member 'Pla603_C_FormChange::CallFunc_GetPostProcessInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, K2Node_DynamicCast_AsProject_IKAnim_Instance) == 0x000088, "Member 'Pla603_C_FormChange::K2Node_DynamicCast_AsProject_IKAnim_Instance' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'Pla603_C_FormChange::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, K2Node_Select_Default) == 0x000098, "Member 'Pla603_C_FormChange::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000A0, "Member 'Pla603_C_FormChange::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, CallFunc_GetMaterials_ReturnValue) == 0x0000A8, "Member 'Pla603_C_FormChange::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'Pla603_C_FormChange::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'Pla603_C_FormChange::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'Pla603_C_FormChange::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, Temp_bool_Variable_1) == 0x0000E5, "Member 'Pla603_C_FormChange::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_FormChange, K2Node_Select_Default_1) == 0x0000E8, "Member 'Pla603_C_FormChange::K2Node_Select_Default_1' has a wrong offset!");

// Function Pla603.Pla603_C.InitFormChange
// 0x0020 (0x0020 - 0x0000)
struct Pla603_C_InitFormChange final
{
public:
	bool                                          CallFunc_CheckPrimeMinisterNahobino_ReturnValue;   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FormChange_NewParam;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FormChange_NewParam_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FormChange_NewParam_2;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FormChange_NewParam_3;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8479[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectGameInstanceBase*               K2Node_DynamicCast_AsProject_Game_Instance_Base;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_InitFormChange) == 0x000008, "Wrong alignment on Pla603_C_InitFormChange");
static_assert(sizeof(Pla603_C_InitFormChange) == 0x000020, "Wrong size on Pla603_C_InitFormChange");
static_assert(offsetof(Pla603_C_InitFormChange, CallFunc_CheckPrimeMinisterNahobino_ReturnValue) == 0x000000, "Member 'Pla603_C_InitFormChange::CallFunc_CheckPrimeMinisterNahobino_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitFormChange, CallFunc_FormChange_NewParam) == 0x000001, "Member 'Pla603_C_InitFormChange::CallFunc_FormChange_NewParam' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitFormChange, CallFunc_FormChange_NewParam_1) == 0x000002, "Member 'Pla603_C_InitFormChange::CallFunc_FormChange_NewParam_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitFormChange, CallFunc_FormChange_NewParam_2) == 0x000003, "Member 'Pla603_C_InitFormChange::CallFunc_FormChange_NewParam_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitFormChange, CallFunc_FormChange_NewParam_3) == 0x000004, "Member 'Pla603_C_InitFormChange::CallFunc_FormChange_NewParam_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitFormChange, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'Pla603_C_InitFormChange::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitFormChange, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'Pla603_C_InitFormChange::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitFormChange, K2Node_DynamicCast_AsProject_Game_Instance_Base) == 0x000010, "Member 'Pla603_C_InitFormChange::K2Node_DynamicCast_AsProject_Game_Instance_Base' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitFormChange, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Pla603_C_InitFormChange::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Pla603.Pla603_C.CheckWeaponView
// 0x0010 (0x0010 - 0x0000)
struct Pla603_C_CheckWeaponView final
{
public:
	float                                         PrevCurveValue;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NextCurveValue;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          View;                                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_CheckWeaponView) == 0x000004, "Wrong alignment on Pla603_C_CheckWeaponView");
static_assert(sizeof(Pla603_C_CheckWeaponView) == 0x000010, "Wrong size on Pla603_C_CheckWeaponView");
static_assert(offsetof(Pla603_C_CheckWeaponView, PrevCurveValue) == 0x000000, "Member 'Pla603_C_CheckWeaponView::PrevCurveValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_CheckWeaponView, NextCurveValue) == 0x000004, "Member 'Pla603_C_CheckWeaponView::NextCurveValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_CheckWeaponView, View) == 0x000008, "Member 'Pla603_C_CheckWeaponView::View' has a wrong offset!");
static_assert(offsetof(Pla603_C_CheckWeaponView, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000009, "Member 'Pla603_C_CheckWeaponView::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_CheckWeaponView, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00000A, "Member 'Pla603_C_CheckWeaponView::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_CheckWeaponView, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000B, "Member 'Pla603_C_CheckWeaponView::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_CheckWeaponView, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000C, "Member 'Pla603_C_CheckWeaponView::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_CheckWeaponView, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x00000D, "Member 'Pla603_C_CheckWeaponView::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function Pla603.Pla603_C.TickWeapon
// 0x0180 (0x0180 - 0x0000)
struct Pla603_C_TickWeapon final
{
public:
	E_Pla603_Weapon                               L_Weapon;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_847A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_Value;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_Temp;                                            // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_View;                                            // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_847B[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_847C[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_847D[0x1];                                     // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_847E[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckWeaponView_View;                     // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_847F[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Pla603_Weapon                               Temp_byte_Variable;                                // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8480[0x2];                                     // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8481[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumLODs_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8482[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8483[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8484[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8485[0x3];                                     // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_3;                       // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_4;                       // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_TickWeapon) == 0x000010, "Wrong alignment on Pla603_C_TickWeapon");
static_assert(sizeof(Pla603_C_TickWeapon) == 0x000180, "Wrong size on Pla603_C_TickWeapon");
static_assert(offsetof(Pla603_C_TickWeapon, L_Weapon) == 0x000000, "Member 'Pla603_C_TickWeapon::L_Weapon' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, L_Value) == 0x000004, "Member 'Pla603_C_TickWeapon::L_Value' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, L_Temp) == 0x000008, "Member 'Pla603_C_TickWeapon::L_Temp' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, L_View) == 0x000009, "Member 'Pla603_C_TickWeapon::L_View' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, Temp_name_Variable) == 0x00000C, "Member 'Pla603_C_TickWeapon::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, Temp_name_Variable_1) == 0x000014, "Member 'Pla603_C_TickWeapon::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, Temp_name_Variable_2) == 0x00001C, "Member 'Pla603_C_TickWeapon::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, Temp_name_Variable_3) == 0x000024, "Member 'Pla603_C_TickWeapon::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, Temp_int_Variable) == 0x00002C, "Member 'Pla603_C_TickWeapon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, Temp_int_Variable_1) == 0x000030, "Member 'Pla603_C_TickWeapon::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_Conv_IntToByte_ReturnValue) == 0x000034, "Member 'Pla603_C_TickWeapon::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'Pla603_C_TickWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_GetValidValue_ReturnValue) == 0x00003C, "Member 'Pla603_C_TickWeapon::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00003D, "Member 'Pla603_C_TickWeapon::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00003E, "Member 'Pla603_C_TickWeapon::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000040, "Member 'Pla603_C_TickWeapon::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000044, "Member 'Pla603_C_TickWeapon::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000048, "Member 'Pla603_C_TickWeapon::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x00004C, "Member 'Pla603_C_TickWeapon::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x000050, "Member 'Pla603_C_TickWeapon::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_CheckWeaponView_View) == 0x000054, "Member 'Pla603_C_TickWeapon::CallFunc_CheckWeaponView_View' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'Pla603_C_TickWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'Pla603_C_TickWeapon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, Temp_byte_Variable) == 0x00005D, "Member 'Pla603_C_TickWeapon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, K2Node_Select_Default) == 0x000060, "Member 'Pla603_C_TickWeapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000068, "Member 'Pla603_C_TickWeapon::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_GetAnimInstance_ReturnValue) == 0x000070, "Member 'Pla603_C_TickWeapon::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_GetCurveValue_ReturnValue) == 0x000078, "Member 'Pla603_C_TickWeapon::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_GetNumLODs_ReturnValue) == 0x00007C, "Member 'Pla603_C_TickWeapon::CallFunc_GetNumLODs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_Subtract_IntInt_ReturnValue) == 0x000080, "Member 'Pla603_C_TickWeapon::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000084, "Member 'Pla603_C_TickWeapon::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, Temp_int_Variable_2) == 0x000088, "Member 'Pla603_C_TickWeapon::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00008C, "Member 'Pla603_C_TickWeapon::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'Pla603_C_TickWeapon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_MakeLiteralInt_ReturnValue) == 0x000094, "Member 'Pla603_C_TickWeapon::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'Pla603_C_TickWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_GetSocketTransform_ReturnValue) == 0x0000A0, "Member 'Pla603_C_TickWeapon::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_BreakTransform_Location) == 0x0000D0, "Member 'Pla603_C_TickWeapon::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_BreakTransform_Rotation) == 0x0000DC, "Member 'Pla603_C_TickWeapon::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_BreakTransform_Scale) == 0x0000E8, "Member 'Pla603_C_TickWeapon::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_BreakVector_X) == 0x0000F4, "Member 'Pla603_C_TickWeapon::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_BreakVector_Y) == 0x0000F8, "Member 'Pla603_C_TickWeapon::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_BreakVector_Z) == 0x0000FC, "Member 'Pla603_C_TickWeapon::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_GetSocketTransform_ReturnValue_1) == 0x000100, "Member 'Pla603_C_TickWeapon::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_BreakTransform_Location_1) == 0x000130, "Member 'Pla603_C_TickWeapon::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_BreakTransform_Rotation_1) == 0x00013C, "Member 'Pla603_C_TickWeapon::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_BreakTransform_Scale_1) == 0x000148, "Member 'Pla603_C_TickWeapon::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x000154, "Member 'Pla603_C_TickWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_BreakVector_X_1) == 0x000158, "Member 'Pla603_C_TickWeapon::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_BreakVector_Y_1) == 0x00015C, "Member 'Pla603_C_TickWeapon::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_BreakVector_Z_1) == 0x000160, "Member 'Pla603_C_TickWeapon::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_FMax_ReturnValue) == 0x000164, "Member 'Pla603_C_TickWeapon::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_FMax_ReturnValue_1) == 0x000168, "Member 'Pla603_C_TickWeapon::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_FMax_ReturnValue_2) == 0x00016C, "Member 'Pla603_C_TickWeapon::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_FMax_ReturnValue_3) == 0x000170, "Member 'Pla603_C_TickWeapon::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_FMax_ReturnValue_4) == 0x000174, "Member 'Pla603_C_TickWeapon::CallFunc_FMax_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickWeapon, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000178, "Member 'Pla603_C_TickWeapon::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function Pla603.Pla603_C.InitWeapon
// 0x0090 (0x0090 - 0x0000)
struct Pla603_C_InitWeapon final
{
public:
	int32                                         L_LoopEnd;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8486[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8487[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8488[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8489[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0040(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_848A[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              CallFunc_GetBaseMaterial_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_848B[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_InitWeapon) == 0x000008, "Wrong alignment on Pla603_C_InitWeapon");
static_assert(sizeof(Pla603_C_InitWeapon) == 0x000090, "Wrong size on Pla603_C_InitWeapon");
static_assert(offsetof(Pla603_C_InitWeapon, L_LoopEnd) == 0x000000, "Member 'Pla603_C_InitWeapon::L_LoopEnd' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_MakeLiteralInt_ReturnValue) == 0x000004, "Member 'Pla603_C_InitWeapon::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, Temp_bool_Variable) == 0x000008, "Member 'Pla603_C_InitWeapon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, Temp_int_Variable) == 0x00000C, "Member 'Pla603_C_InitWeapon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, Temp_int_Variable_1) == 0x000010, "Member 'Pla603_C_InitWeapon::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_Conv_IntToByte_ReturnValue) == 0x000014, "Member 'Pla603_C_InitWeapon::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Pla603_C_InitWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_GetValidValue_ReturnValue) == 0x00001C, "Member 'Pla603_C_InitWeapon::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00001D, "Member 'Pla603_C_InitWeapon::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00001E, "Member 'Pla603_C_InitWeapon::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'Pla603_C_InitWeapon::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, Temp_int_Array_Index_Variable) == 0x000024, "Member 'Pla603_C_InitWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000028, "Member 'Pla603_C_InitWeapon::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'Pla603_C_InitWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, Temp_int_Variable_2) == 0x000030, "Member 'Pla603_C_InitWeapon::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'Pla603_C_InitWeapon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'Pla603_C_InitWeapon::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, Temp_bool_Variable_1) == 0x000039, "Member 'Pla603_C_InitWeapon::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'Pla603_C_InitWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_BooleanAND_ReturnValue) == 0x00003B, "Member 'Pla603_C_InitWeapon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'Pla603_C_InitWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, Temp_float_Variable) == 0x000040, "Member 'Pla603_C_InitWeapon::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'Pla603_C_InitWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_GetMaterial_ReturnValue) == 0x000048, "Member 'Pla603_C_InitWeapon::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_Less_IntInt_ReturnValue_1) == 0x000050, "Member 'Pla603_C_InitWeapon::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_GetBaseMaterial_ReturnValue) == 0x000058, "Member 'Pla603_C_InitWeapon::CallFunc_GetBaseMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_GetObjectName_ReturnValue) == 0x000060, "Member 'Pla603_C_InitWeapon::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000070, "Member 'Pla603_C_InitWeapon::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_FindSubstring_ReturnValue) == 0x000078, "Member 'Pla603_C_InitWeapon::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00007C, "Member 'Pla603_C_InitWeapon::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_Add_IntInt_ReturnValue_2) == 0x000080, "Member 'Pla603_C_InitWeapon::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_GetNumMaterials_ReturnValue) == 0x000084, "Member 'Pla603_C_InitWeapon::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_InitWeapon, CallFunc_Subtract_IntInt_ReturnValue) == 0x000088, "Member 'Pla603_C_InitWeapon::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function Pla603.Pla603_C.BI_SetAnimBP
// 0x0020 (0x0020 - 0x0000)
struct Pla603_C_BI_SetAnimBP final
{
public:
	class UAnimInstance*                          AnimInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_848C[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPla603_AnimBP_C*                       K2Node_DynamicCast_AsPla_603_Anim_BP;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_BI_SetAnimBP) == 0x000008, "Wrong alignment on Pla603_C_BI_SetAnimBP");
static_assert(sizeof(Pla603_C_BI_SetAnimBP) == 0x000020, "Wrong size on Pla603_C_BI_SetAnimBP");
static_assert(offsetof(Pla603_C_BI_SetAnimBP, AnimInstance) == 0x000000, "Member 'Pla603_C_BI_SetAnimBP::AnimInstance' has a wrong offset!");
static_assert(offsetof(Pla603_C_BI_SetAnimBP, NoUse) == 0x000008, "Member 'Pla603_C_BI_SetAnimBP::NoUse' has a wrong offset!");
static_assert(offsetof(Pla603_C_BI_SetAnimBP, K2Node_DynamicCast_AsPla_603_Anim_BP) == 0x000010, "Member 'Pla603_C_BI_SetAnimBP::K2Node_DynamicCast_AsPla_603_Anim_BP' has a wrong offset!");
static_assert(offsetof(Pla603_C_BI_SetAnimBP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Pla603_C_BI_SetAnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Pla603.Pla603_C.BI_IsMapActionPlaying
// 0x0002 (0x0002 - 0x0000)
struct Pla603_C_BI_IsMapActionPlaying final
{
public:
	bool                                          IsPlaying;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMapActionPlaying_bPlaying;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_BI_IsMapActionPlaying) == 0x000001, "Wrong alignment on Pla603_C_BI_IsMapActionPlaying");
static_assert(sizeof(Pla603_C_BI_IsMapActionPlaying) == 0x000002, "Wrong size on Pla603_C_BI_IsMapActionPlaying");
static_assert(offsetof(Pla603_C_BI_IsMapActionPlaying, IsPlaying) == 0x000000, "Member 'Pla603_C_BI_IsMapActionPlaying::IsPlaying' has a wrong offset!");
static_assert(offsetof(Pla603_C_BI_IsMapActionPlaying, CallFunc_IsMapActionPlaying_bPlaying) == 0x000001, "Member 'Pla603_C_BI_IsMapActionPlaying::CallFunc_IsMapActionPlaying_bPlaying' has a wrong offset!");

// Function Pla603.Pla603_C.BI_EndMapAction
// 0x0001 (0x0001 - 0x0000)
struct Pla603_C_BI_EndMapAction final
{
public:
	bool                                          CanUse;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_BI_EndMapAction) == 0x000001, "Wrong alignment on Pla603_C_BI_EndMapAction");
static_assert(sizeof(Pla603_C_BI_EndMapAction) == 0x000001, "Wrong size on Pla603_C_BI_EndMapAction");
static_assert(offsetof(Pla603_C_BI_EndMapAction, CanUse) == 0x000000, "Member 'Pla603_C_BI_EndMapAction::CanUse' has a wrong offset!");

// Function Pla603.Pla603_C.BI_PlayMapAction
// 0x0002 (0x0002 - 0x0000)
struct Pla603_C_BI_PlayMapAction final
{
public:
	E_MapAction_Pla603                            Action;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanUse;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_BI_PlayMapAction) == 0x000001, "Wrong alignment on Pla603_C_BI_PlayMapAction");
static_assert(sizeof(Pla603_C_BI_PlayMapAction) == 0x000002, "Wrong size on Pla603_C_BI_PlayMapAction");
static_assert(offsetof(Pla603_C_BI_PlayMapAction, Action) == 0x000000, "Member 'Pla603_C_BI_PlayMapAction::Action' has a wrong offset!");
static_assert(offsetof(Pla603_C_BI_PlayMapAction, CanUse) == 0x000001, "Member 'Pla603_C_BI_PlayMapAction::CanUse' has a wrong offset!");

// Function Pla603.Pla603_C.IsMapActionPlaying
// 0x0001 (0x0001 - 0x0000)
struct Pla603_C_IsMapActionPlaying final
{
public:
	bool                                          bPlaying;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_IsMapActionPlaying) == 0x000001, "Wrong alignment on Pla603_C_IsMapActionPlaying");
static_assert(sizeof(Pla603_C_IsMapActionPlaying) == 0x000001, "Wrong size on Pla603_C_IsMapActionPlaying");
static_assert(offsetof(Pla603_C_IsMapActionPlaying, bPlaying) == 0x000000, "Member 'Pla603_C_IsMapActionPlaying::bPlaying' has a wrong offset!");

// Function Pla603.Pla603_C.AddIgnoreMeshAttachedParticles
// 0x0010 (0x0010 - 0x0000)
struct Pla603_C_AddIgnoreMeshAttachedParticles final
{
public:
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_AddIgnoreMeshAttachedParticles) == 0x000004, "Wrong alignment on Pla603_C_AddIgnoreMeshAttachedParticles");
static_assert(sizeof(Pla603_C_AddIgnoreMeshAttachedParticles) == 0x000010, "Wrong size on Pla603_C_AddIgnoreMeshAttachedParticles");
static_assert(offsetof(Pla603_C_AddIgnoreMeshAttachedParticles, CallFunc_Array_Add_ReturnValue) == 0x000000, "Member 'Pla603_C_AddIgnoreMeshAttachedParticles::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_AddIgnoreMeshAttachedParticles, CallFunc_Array_Add_ReturnValue_1) == 0x000004, "Member 'Pla603_C_AddIgnoreMeshAttachedParticles::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_AddIgnoreMeshAttachedParticles, CallFunc_Array_Add_ReturnValue_2) == 0x000008, "Member 'Pla603_C_AddIgnoreMeshAttachedParticles::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_AddIgnoreMeshAttachedParticles, CallFunc_Array_Add_ReturnValue_3) == 0x00000C, "Member 'Pla603_C_AddIgnoreMeshAttachedParticles::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");

// Function Pla603.Pla603_C.IsAutoRunning
// 0x0001 (0x0001 - 0x0000)
struct Pla603_C_IsAutoRunning final
{
public:
	bool                                          bAutoRunning;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_IsAutoRunning) == 0x000001, "Wrong alignment on Pla603_C_IsAutoRunning");
static_assert(sizeof(Pla603_C_IsAutoRunning) == 0x000001, "Wrong size on Pla603_C_IsAutoRunning");
static_assert(offsetof(Pla603_C_IsAutoRunning, bAutoRunning) == 0x000000, "Member 'Pla603_C_IsAutoRunning::bAutoRunning' has a wrong offset!");

// Function Pla603.Pla603_C.TickCamraEffect
// 0x00A0 (0x00A0 - 0x0000)
struct Pla603_C_TickCamraEffect final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEdgeGrippingStrictly_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_848D[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ProjectPlayerCameraManager_C> K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_848E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ProjectPlayerCameraManager_C> K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_1; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDashing_bDashing;                       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_848F[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8490[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8491[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ProjectPlayerCameraManager_C> K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_2; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8492[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ProjectPlayerCameraManager_C> K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_3; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_TickCamraEffect) == 0x000008, "Wrong alignment on Pla603_C_TickCamraEffect");
static_assert(sizeof(Pla603_C_TickCamraEffect) == 0x0000A0, "Wrong size on Pla603_C_TickCamraEffect");
static_assert(offsetof(Pla603_C_TickCamraEffect, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'Pla603_C_TickCamraEffect::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickCamraEffect, CallFunc_IsEdgeGrippingStrictly_ReturnValue) == 0x000008, "Member 'Pla603_C_TickCamraEffect::CallFunc_IsEdgeGrippingStrictly_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickCamraEffect, K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager) == 0x000010, "Member 'Pla603_C_TickCamraEffect::K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickCamraEffect, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Pla603_C_TickCamraEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickCamraEffect, CallFunc_GetPlayerController_ReturnValue_1) == 0x000028, "Member 'Pla603_C_TickCamraEffect::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickCamraEffect, K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_1) == 0x000030, "Member 'Pla603_C_TickCamraEffect::K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickCamraEffect, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'Pla603_C_TickCamraEffect::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickCamraEffect, CallFunc_IsDashing_bDashing) == 0x000041, "Member 'Pla603_C_TickCamraEffect::CallFunc_IsDashing_bDashing' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickCamraEffect, CallFunc_GetPlayerPawn_ReturnValue) == 0x000048, "Member 'Pla603_C_TickCamraEffect::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickCamraEffect, CallFunc_GetVelocity_ReturnValue) == 0x000050, "Member 'Pla603_C_TickCamraEffect::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickCamraEffect, CallFunc_GetPlayerController_ReturnValue_2) == 0x000060, "Member 'Pla603_C_TickCamraEffect::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickCamraEffect, CallFunc_VSize_ReturnValue) == 0x000068, "Member 'Pla603_C_TickCamraEffect::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickCamraEffect, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00006C, "Member 'Pla603_C_TickCamraEffect::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickCamraEffect, K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_2) == 0x000070, "Member 'Pla603_C_TickCamraEffect::K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickCamraEffect, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'Pla603_C_TickCamraEffect::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickCamraEffect, K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_3) == 0x000088, "Member 'Pla603_C_TickCamraEffect::K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickCamraEffect, K2Node_DynamicCast_bSuccess_3) == 0x000098, "Member 'Pla603_C_TickCamraEffect::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function Pla603.Pla603_C.SpawnSlidingDecal
// 0x0058 (0x0058 - 0x0000)
struct Pla603_C_SpawnSlidingDecal final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UDecalComponent*                        DecalComponent;                                    // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8493[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8494[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8495[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_SpawnSlidingDecal) == 0x000008, "Wrong alignment on Pla603_C_SpawnSlidingDecal");
static_assert(sizeof(Pla603_C_SpawnSlidingDecal) == 0x000058, "Wrong size on Pla603_C_SpawnSlidingDecal");
static_assert(offsetof(Pla603_C_SpawnSlidingDecal, Location) == 0x000000, "Member 'Pla603_C_SpawnSlidingDecal::Location' has a wrong offset!");
static_assert(offsetof(Pla603_C_SpawnSlidingDecal, Rotation) == 0x00000C, "Member 'Pla603_C_SpawnSlidingDecal::Rotation' has a wrong offset!");
static_assert(offsetof(Pla603_C_SpawnSlidingDecal, DecalComponent) == 0x000018, "Member 'Pla603_C_SpawnSlidingDecal::DecalComponent' has a wrong offset!");
static_assert(offsetof(Pla603_C_SpawnSlidingDecal, Alpha) == 0x000020, "Member 'Pla603_C_SpawnSlidingDecal::Alpha' has a wrong offset!");
static_assert(offsetof(Pla603_C_SpawnSlidingDecal, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x000028, "Member 'Pla603_C_SpawnSlidingDecal::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_SpawnSlidingDecal, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'Pla603_C_SpawnSlidingDecal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_SpawnSlidingDecal, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000038, "Member 'Pla603_C_SpawnSlidingDecal::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_SpawnSlidingDecal, CallFunc_Less_FloatFloat_ReturnValue) == 0x000040, "Member 'Pla603_C_SpawnSlidingDecal::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_SpawnSlidingDecal, Temp_int_Variable) == 0x000044, "Member 'Pla603_C_SpawnSlidingDecal::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_SpawnSlidingDecal, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000048, "Member 'Pla603_C_SpawnSlidingDecal::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_SpawnSlidingDecal, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00004C, "Member 'Pla603_C_SpawnSlidingDecal::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_SpawnSlidingDecal, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'Pla603_C_SpawnSlidingDecal::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Pla603.Pla603_C.TickHairPhysicsRate
// 0x0010 (0x0010 - 0x0000)
struct Pla603_C_TickHairPhysicsRate final
{
public:
	float                                         DeltaSecods;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HairPhysicsAlphaTarget;                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHairPhysicsWeight_PhysicsRate;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_TickHairPhysicsRate) == 0x000004, "Wrong alignment on Pla603_C_TickHairPhysicsRate");
static_assert(sizeof(Pla603_C_TickHairPhysicsRate) == 0x000010, "Wrong size on Pla603_C_TickHairPhysicsRate");
static_assert(offsetof(Pla603_C_TickHairPhysicsRate, DeltaSecods) == 0x000000, "Member 'Pla603_C_TickHairPhysicsRate::DeltaSecods' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairPhysicsRate, HairPhysicsAlphaTarget) == 0x000004, "Member 'Pla603_C_TickHairPhysicsRate::HairPhysicsAlphaTarget' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairPhysicsRate, CallFunc_FInterpTo_ReturnValue) == 0x000008, "Member 'Pla603_C_TickHairPhysicsRate::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairPhysicsRate, CallFunc_GetHairPhysicsWeight_PhysicsRate) == 0x00000C, "Member 'Pla603_C_TickHairPhysicsRate::CallFunc_GetHairPhysicsWeight_PhysicsRate' has a wrong offset!");

// Function Pla603.Pla603_C.TickHairForce
// 0x02E0 (0x02E0 - 0x0000)
struct Pla603_C_TickHairForce final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKawaiiHairBundleParameter             TargetParam;                                       // 0x0004(0x0060)(Edit, BlueprintVisible, NoDestructor)
	uint8                                         Pad_8496[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EKawaiiHairActionType, struct FKawaiiHairBundleParameter> Temp_byte_Variable;                                // 0x0068(0x0050)()
	EKawaiiHairActionType                         Temp_byte_Variable_1;                              // 0x00B8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsJumping_ReturnValue;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8497[0x2];                                     // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMovementSpeed_ReturnValue;             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDashing_ReturnValue;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8498[0x2];                                     // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_Constant_ReturnValue;           // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsJumping_ReturnValue_1;                  // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8499[0x1];                                     // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMovementSpeed_ReturnValue_1;           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDashing_ReturnValue_1;                  // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_849A[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKawaiiHairActionType                         Temp_byte_Variable_2;                              // 0x0100(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKawaiiHairActionType                         Temp_byte_Variable_3;                              // 0x0101(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_849B[0x2];                                     // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_Constant_ReturnValue_1;         // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_849C[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_3;               // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_Constant_ReturnValue_2;         // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue_1;           // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_849D[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_849E[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue_4;               // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMovementSpeed_ReturnValue_2;           // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKawaiiHairBundleParameter             CallFunc_Map_Find_Value;                           // 0x01AC(0x0060)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_849F[0x3];                                     // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84A0[0x2];                                     // 0x0216(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKawaiiHairBundleParameter             CallFunc_Map_Find_Value_1;                         // 0x0218(0x0060)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84A1[0x3];                                     // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKawaiiHairBundleParameter             CallFunc_Map_Find_Value_2;                         // 0x027C(0x0060)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_TickHairForce) == 0x000008, "Wrong alignment on Pla603_C_TickHairForce");
static_assert(sizeof(Pla603_C_TickHairForce) == 0x0002E0, "Wrong size on Pla603_C_TickHairForce");
static_assert(offsetof(Pla603_C_TickHairForce, DeltaSeconds) == 0x000000, "Member 'Pla603_C_TickHairForce::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, TargetParam) == 0x000004, "Member 'Pla603_C_TickHairForce::TargetParam' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, Temp_byte_Variable) == 0x000068, "Member 'Pla603_C_TickHairForce::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, Temp_byte_Variable_1) == 0x0000B8, "Member 'Pla603_C_TickHairForce::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_IsJumping_ReturnValue) == 0x0000B9, "Member 'Pla603_C_TickHairForce::CallFunc_IsJumping_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_GetMovementSpeed_ReturnValue) == 0x0000BC, "Member 'Pla603_C_TickHairForce::CallFunc_GetMovementSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000C0, "Member 'Pla603_C_TickHairForce::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_IsDashing_ReturnValue) == 0x0000C1, "Member 'Pla603_C_TickHairForce::CallFunc_IsDashing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_SelectFloat_ReturnValue) == 0x0000C4, "Member 'Pla603_C_TickHairForce::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_SelectVector_ReturnValue) == 0x0000C8, "Member 'Pla603_C_TickHairForce::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_SelectFloat_ReturnValue_1) == 0x0000D4, "Member 'Pla603_C_TickHairForce::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_SelectVector_ReturnValue_1) == 0x0000D8, "Member 'Pla603_C_TickHairForce::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_VInterpTo_Constant_ReturnValue) == 0x0000E4, "Member 'Pla603_C_TickHairForce::CallFunc_VInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_Not_PreBool_ReturnValue) == 0x0000F0, "Member 'Pla603_C_TickHairForce::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_IsJumping_ReturnValue_1) == 0x0000F1, "Member 'Pla603_C_TickHairForce::CallFunc_IsJumping_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_BooleanAND_ReturnValue) == 0x0000F2, "Member 'Pla603_C_TickHairForce::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_GetMovementSpeed_ReturnValue_1) == 0x0000F4, "Member 'Pla603_C_TickHairForce::CallFunc_GetMovementSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0000F8, "Member 'Pla603_C_TickHairForce::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_IsDashing_ReturnValue_1) == 0x0000F9, "Member 'Pla603_C_TickHairForce::CallFunc_IsDashing_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x0000FC, "Member 'Pla603_C_TickHairForce::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, Temp_byte_Variable_2) == 0x000100, "Member 'Pla603_C_TickHairForce::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, Temp_byte_Variable_3) == 0x000101, "Member 'Pla603_C_TickHairForce::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_Add_VectorVector_ReturnValue) == 0x000104, "Member 'Pla603_C_TickHairForce::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000110, "Member 'Pla603_C_TickHairForce::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00011C, "Member 'Pla603_C_TickHairForce::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000120, "Member 'Pla603_C_TickHairForce::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_DegSin_ReturnValue) == 0x000124, "Member 'Pla603_C_TickHairForce::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_VInterpTo_Constant_ReturnValue_1) == 0x000128, "Member 'Pla603_C_TickHairForce::CallFunc_VInterpTo_Constant_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000134, "Member 'Pla603_C_TickHairForce::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000140, "Member 'Pla603_C_TickHairForce::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_Add_VectorVector_ReturnValue_3) == 0x00014C, "Member 'Pla603_C_TickHairForce::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_IsMovingOnGround_ReturnValue) == 0x000158, "Member 'Pla603_C_TickHairForce::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_SelectFloat_ReturnValue_2) == 0x00015C, "Member 'Pla603_C_TickHairForce::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_SelectVector_ReturnValue_2) == 0x000160, "Member 'Pla603_C_TickHairForce::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_SelectFloat_ReturnValue_3) == 0x00016C, "Member 'Pla603_C_TickHairForce::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_SelectVector_ReturnValue_3) == 0x000170, "Member 'Pla603_C_TickHairForce::CallFunc_SelectVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_VInterpTo_Constant_ReturnValue_2) == 0x00017C, "Member 'Pla603_C_TickHairForce::CallFunc_VInterpTo_Constant_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_IsMovingOnGround_ReturnValue_1) == 0x000188, "Member 'Pla603_C_TickHairForce::CallFunc_IsMovingOnGround_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_BreakVector_X) == 0x00018C, "Member 'Pla603_C_TickHairForce::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_BreakVector_Y) == 0x000190, "Member 'Pla603_C_TickHairForce::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_BreakVector_Z) == 0x000194, "Member 'Pla603_C_TickHairForce::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000198, "Member 'Pla603_C_TickHairForce::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_SelectVector_ReturnValue_4) == 0x00019C, "Member 'Pla603_C_TickHairForce::CallFunc_SelectVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_GetMovementSpeed_ReturnValue_2) == 0x0001A8, "Member 'Pla603_C_TickHairForce::CallFunc_GetMovementSpeed_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_Map_Find_Value) == 0x0001AC, "Member 'Pla603_C_TickHairForce::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_Map_Find_ReturnValue) == 0x00020C, "Member 'Pla603_C_TickHairForce::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000210, "Member 'Pla603_C_TickHairForce::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000214, "Member 'Pla603_C_TickHairForce::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000215, "Member 'Pla603_C_TickHairForce::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_Map_Find_Value_1) == 0x000218, "Member 'Pla603_C_TickHairForce::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_Map_Find_ReturnValue_1) == 0x000278, "Member 'Pla603_C_TickHairForce::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_Map_Find_Value_2) == 0x00027C, "Member 'Pla603_C_TickHairForce::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickHairForce, CallFunc_Map_Find_ReturnValue_2) == 0x0002DC, "Member 'Pla603_C_TickHairForce::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");

// Function Pla603.Pla603_C.TickEdgeGrip
// 0x0658 (0x0658 - 0x0000)
struct Pla603_C_TickEdgeGrip final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WallRight;                                         // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GripPoint;                                         // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84A2[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84A3[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue_1;           // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BeginEdgeGrip_ReturnValue;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84A4[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue_2;           // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84A5[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84A6[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84A7[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue_3;           // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_6;       // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x0128(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0144(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84A8[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_8;           // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EdgeGripAdjustFinished_ReturnValue;       // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84A9[0x3];                                     // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_7;       // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEdgeGripping_ReturnValue;               // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84AA[0x3];                                     // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_9;           // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_10;          // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_8;       // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_11;          // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_12;          // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0294(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84AB[0x3];                                     // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x0320(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84AC[0x1];                                     // 0x03AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x03B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84AD[0x4];                                     // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0414(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0420(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x042D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84AE[0x2];                                     // 0x042E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0438(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0444(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x045C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0478(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0494(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x04A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84AF[0x3];                                     // 0x04AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x04B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84B0[0x3];                                     // 0x04BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x04C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_13;          // 0x04CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84B1[0x3];                                     // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x04DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84B2[0x3];                                     // 0x04E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_14;          // 0x04EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_15;          // 0x04F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_16;          // 0x0504(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_17;          // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_18;          // 0x051C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_2;                 // 0x0528(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_2;            // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x05B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84B3[0x1];                                     // 0x05B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x05B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x05BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x05C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x05D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x05E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84B4[0x4];                                     // 0x05EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0600(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x061C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0628(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0634(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84B5[0x3];                                     // 0x0635(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_9;       // 0x0638(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0644(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84B6[0x3];                                     // 0x0645(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0648(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_TickEdgeGrip) == 0x000008, "Wrong alignment on Pla603_C_TickEdgeGrip");
static_assert(sizeof(Pla603_C_TickEdgeGrip) == 0x000658, "Wrong size on Pla603_C_TickEdgeGrip");
static_assert(offsetof(Pla603_C_TickEdgeGrip, DeltaSeconds) == 0x000000, "Member 'Pla603_C_TickEdgeGrip::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, WallRight) == 0x000004, "Member 'Pla603_C_TickEdgeGrip::WallRight' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, GripPoint) == 0x000010, "Member 'Pla603_C_TickEdgeGrip::GripPoint' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, Temp_object_Variable) == 0x000020, "Member 'Pla603_C_TickEdgeGrip::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_MakeLiteralByte_ReturnValue) == 0x000030, "Member 'Pla603_C_TickEdgeGrip::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, Temp_object_Variable_1) == 0x000038, "Member 'Pla603_C_TickEdgeGrip::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000048, "Member 'Pla603_C_TickEdgeGrip::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_GetActorUpVector_ReturnValue) == 0x00004C, "Member 'Pla603_C_TickEdgeGrip::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000058, "Member 'Pla603_C_TickEdgeGrip::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000064, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue) == 0x000074, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_GetActorUpVector_ReturnValue_1) == 0x000080, "Member 'Pla603_C_TickEdgeGrip::CallFunc_GetActorUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BeginEdgeGrip_ReturnValue) == 0x00008C, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BeginEdgeGrip_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_GetActorUpVector_ReturnValue_2) == 0x000090, "Member 'Pla603_C_TickEdgeGrip::CallFunc_GetActorUpVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, Temp_object_Variable_2) == 0x0000A0, "Member 'Pla603_C_TickEdgeGrip::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000B0, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0000BC, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_GetActorRightVector_ReturnValue) == 0x0000C8, "Member 'Pla603_C_TickEdgeGrip::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0000D4, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Cross_VectorVector_ReturnValue) == 0x0000E0, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x0000EC, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x0000F8, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_IsMovingOnGround_ReturnValue) == 0x000104, "Member 'Pla603_C_TickEdgeGrip::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000108, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Not_PreBool_ReturnValue) == 0x00010C, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_GetActorUpVector_ReturnValue_3) == 0x000110, "Member 'Pla603_C_TickEdgeGrip::CallFunc_GetActorUpVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Multiply_VectorFloat_ReturnValue_6) == 0x00011C, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Multiply_VectorFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, Temp_object_Variable_3) == 0x000128, "Member 'Pla603_C_TickEdgeGrip::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000138, "Member 'Pla603_C_TickEdgeGrip::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_SphereTraceSingle_OutHit) == 0x000144, "Member 'Pla603_C_TickEdgeGrip::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_SphereTraceSingle_ReturnValue) == 0x0001CC, "Member 'Pla603_C_TickEdgeGrip::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001D0, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0001DC, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0001E8, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0001F4, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000200, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_6) == 0x00020C, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_7) == 0x000218, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_8) == 0x000224, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_EdgeGripAdjustFinished_ReturnValue) == 0x000230, "Member 'Pla603_C_TickEdgeGrip::CallFunc_EdgeGripAdjustFinished_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_FloatFloat_ReturnValue) == 0x000234, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000238, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_GetActorForwardVector_ReturnValue) == 0x00023C, "Member 'Pla603_C_TickEdgeGrip::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Multiply_VectorFloat_ReturnValue_7) == 0x000248, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Multiply_VectorFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_IsEdgeGripping_ReturnValue) == 0x000254, "Member 'Pla603_C_TickEdgeGrip::CallFunc_IsEdgeGripping_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_9) == 0x000258, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_10) == 0x000264, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Multiply_VectorFloat_ReturnValue_8) == 0x000270, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Multiply_VectorFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_11) == 0x00027C, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_12) == 0x000288, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_LineTraceSingle_OutHit) == 0x000294, "Member 'Pla603_C_TickEdgeGrip::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_LineTraceSingle_ReturnValue) == 0x00031C, "Member 'Pla603_C_TickEdgeGrip::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_LineTraceSingle_OutHit_1) == 0x000320, "Member 'Pla603_C_TickEdgeGrip::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_LineTraceSingle_ReturnValue_1) == 0x0003A8, "Member 'Pla603_C_TickEdgeGrip::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_bBlockingHit) == 0x0003A9, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_bInitialOverlap) == 0x0003AA, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_Time) == 0x0003AC, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_Distance) == 0x0003B0, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_Location) == 0x0003B4, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_ImpactPoint) == 0x0003C0, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_Normal) == 0x0003CC, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_ImpactNormal) == 0x0003D8, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_PhysMat) == 0x0003E8, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_HitActor) == 0x0003F0, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_HitComponent) == 0x0003F8, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_HitBoneName) == 0x000400, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_HitItem) == 0x000408, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_ElementIndex) == 0x00040C, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_FaceIndex) == 0x000410, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_TraceStart) == 0x000414, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_TraceEnd) == 0x000420, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_bBlockingHit_1) == 0x00042C, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x00042D, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_Time_1) == 0x000430, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_Distance_1) == 0x000434, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_Location_1) == 0x000438, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000444, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_Normal_1) == 0x000450, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_ImpactNormal_1) == 0x00045C, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_PhysMat_1) == 0x000468, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_HitActor_1) == 0x000470, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_HitComponent_1) == 0x000478, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_HitBoneName_1) == 0x000480, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_HitItem_1) == 0x000488, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_ElementIndex_1) == 0x00048C, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_FaceIndex_1) == 0x000490, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_TraceStart_1) == 0x000494, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_TraceEnd_1) == 0x0004A0, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Not_PreBool_ReturnValue_1) == 0x0004AC, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0004B0, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BooleanAND_ReturnValue) == 0x0004BC, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Normal_ReturnValue) == 0x0004C0, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_13) == 0x0004CC, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Not_PreBool_ReturnValue_2) == 0x0004D8, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Divide_VectorFloat_ReturnValue) == 0x0004DC, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BooleanAND_ReturnValue_1) == 0x0004E8, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_14) == 0x0004EC, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_15) == 0x0004F8, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_16) == 0x000504, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_17) == 0x000510, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Add_VectorVector_ReturnValue_18) == 0x00051C, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Add_VectorVector_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_LineTraceSingle_OutHit_2) == 0x000528, "Member 'Pla603_C_TickEdgeGrip::CallFunc_LineTraceSingle_OutHit_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_LineTraceSingle_ReturnValue_2) == 0x0005B0, "Member 'Pla603_C_TickEdgeGrip::CallFunc_LineTraceSingle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_bBlockingHit_2) == 0x0005B1, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x0005B2, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_Time_2) == 0x0005B4, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_Distance_2) == 0x0005B8, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_Location_2) == 0x0005BC, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_ImpactPoint_2) == 0x0005C8, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_Normal_2) == 0x0005D4, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_ImpactNormal_2) == 0x0005E0, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_PhysMat_2) == 0x0005F0, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_HitActor_2) == 0x0005F8, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_HitComponent_2) == 0x000600, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_HitBoneName_2) == 0x000608, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_HitItem_2) == 0x000610, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_ElementIndex_2) == 0x000614, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_FaceIndex_2) == 0x000618, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_TraceStart_2) == 0x00061C, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BreakHitResult_TraceEnd_2) == 0x000628, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Not_PreBool_ReturnValue_3) == 0x000634, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Multiply_VectorFloat_ReturnValue_9) == 0x000638, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Multiply_VectorFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_BooleanAND_ReturnValue_2) == 0x000644, "Member 'Pla603_C_TickEdgeGrip::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickEdgeGrip, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000648, "Member 'Pla603_C_TickEdgeGrip::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");

// Function Pla603.Pla603_C.TickMovement
// 0x0098 (0x0098 - 0x0000)
struct Pla603_C_TickMovement final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDashingForEffect;                                // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDashingForEffect_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84B7[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84B8[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue_1;                   // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue_2;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84B9[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84BA[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_2;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84BB[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ProjectPlayerCameraManager_C> K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84BC[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ProjectPlayerCameraManager_C> K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_1; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_3;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_TickMovement) == 0x000008, "Wrong alignment on Pla603_C_TickMovement");
static_assert(sizeof(Pla603_C_TickMovement) == 0x000098, "Wrong size on Pla603_C_TickMovement");
static_assert(offsetof(Pla603_C_TickMovement, DeltaSeconds) == 0x000000, "Member 'Pla603_C_TickMovement::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, IsDashingForEffect) == 0x000004, "Member 'Pla603_C_TickMovement::IsDashingForEffect' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_IsDashingForEffect_ReturnValue) == 0x000005, "Member 'Pla603_C_TickMovement::CallFunc_IsDashingForEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_IsPlaying_ReturnValue) == 0x000006, "Member 'Pla603_C_TickMovement::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_BreakVector_X) == 0x000008, "Member 'Pla603_C_TickMovement::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_BreakVector_Y) == 0x00000C, "Member 'Pla603_C_TickMovement::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_BreakVector_Z) == 0x000010, "Member 'Pla603_C_TickMovement::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'Pla603_C_TickMovement::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_IsMovingOnGround_ReturnValue) == 0x000015, "Member 'Pla603_C_TickMovement::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_Not_PreBool_ReturnValue) == 0x000016, "Member 'Pla603_C_TickMovement::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'Pla603_C_TickMovement::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'Pla603_C_TickMovement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_IsActive_ReturnValue) == 0x000025, "Member 'Pla603_C_TickMovement::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_IsValid_ReturnValue) == 0x000026, "Member 'Pla603_C_TickMovement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_IsActive_ReturnValue_1) == 0x000027, "Member 'Pla603_C_TickMovement::CallFunc_IsActive_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_IsActive_ReturnValue_2) == 0x000028, "Member 'Pla603_C_TickMovement::CallFunc_IsActive_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_BreakVector_X_1) == 0x00002C, "Member 'Pla603_C_TickMovement::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_BreakVector_Y_1) == 0x000030, "Member 'Pla603_C_TickMovement::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_BreakVector_Z_1) == 0x000034, "Member 'Pla603_C_TickMovement::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'Pla603_C_TickMovement::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_SelectFloat_ReturnValue) == 0x000044, "Member 'Pla603_C_TickMovement::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_VSize_ReturnValue) == 0x000048, "Member 'Pla603_C_TickMovement::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_GetFloatValue_ReturnValue) == 0x00004C, "Member 'Pla603_C_TickMovement::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000050, "Member 'Pla603_C_TickMovement::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000054, "Member 'Pla603_C_TickMovement::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000058, "Member 'Pla603_C_TickMovement::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_NotEqual_BoolBool_ReturnValue_2) == 0x000059, "Member 'Pla603_C_TickMovement::CallFunc_NotEqual_BoolBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'Pla603_C_TickMovement::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager) == 0x000068, "Member 'Pla603_C_TickMovement::K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'Pla603_C_TickMovement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_1) == 0x000080, "Member 'Pla603_C_TickMovement::K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'Pla603_C_TickMovement::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_TickMovement, CallFunc_NotEqual_BoolBool_ReturnValue_3) == 0x000091, "Member 'Pla603_C_TickMovement::CallFunc_NotEqual_BoolBool_ReturnValue_3' has a wrong offset!");

// Function Pla603.Pla603_C.OnLoaded_39FD88B44D088B3E1974A7B63E3E5A4F
// 0x0008 (0x0008 - 0x0000)
struct Pla603_C_OnLoaded_39FD88B44D088B3E1974A7B63E3E5A4F final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_OnLoaded_39FD88B44D088B3E1974A7B63E3E5A4F) == 0x000008, "Wrong alignment on Pla603_C_OnLoaded_39FD88B44D088B3E1974A7B63E3E5A4F");
static_assert(sizeof(Pla603_C_OnLoaded_39FD88B44D088B3E1974A7B63E3E5A4F) == 0x000008, "Wrong size on Pla603_C_OnLoaded_39FD88B44D088B3E1974A7B63E3E5A4F");
static_assert(offsetof(Pla603_C_OnLoaded_39FD88B44D088B3E1974A7B63E3E5A4F, Loaded) == 0x000000, "Member 'Pla603_C_OnLoaded_39FD88B44D088B3E1974A7B63E3E5A4F::Loaded' has a wrong offset!");

// Function Pla603.Pla603_C.OnLoaded_9ED45F56488BA54145E9CABD1A138B09
// 0x0008 (0x0008 - 0x0000)
struct Pla603_C_OnLoaded_9ED45F56488BA54145E9CABD1A138B09 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_OnLoaded_9ED45F56488BA54145E9CABD1A138B09) == 0x000008, "Wrong alignment on Pla603_C_OnLoaded_9ED45F56488BA54145E9CABD1A138B09");
static_assert(sizeof(Pla603_C_OnLoaded_9ED45F56488BA54145E9CABD1A138B09) == 0x000008, "Wrong size on Pla603_C_OnLoaded_9ED45F56488BA54145E9CABD1A138B09");
static_assert(offsetof(Pla603_C_OnLoaded_9ED45F56488BA54145E9CABD1A138B09, Loaded) == 0x000000, "Member 'Pla603_C_OnLoaded_9ED45F56488BA54145E9CABD1A138B09::Loaded' has a wrong offset!");

// Function Pla603.Pla603_C.ShowWeapon
// 0x0002 (0x0002 - 0x0000)
struct Pla603_C_ShowWeapon final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Pla603_Weapon                               Weapon;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_ShowWeapon) == 0x000001, "Wrong alignment on Pla603_C_ShowWeapon");
static_assert(sizeof(Pla603_C_ShowWeapon) == 0x000002, "Wrong size on Pla603_C_ShowWeapon");
static_assert(offsetof(Pla603_C_ShowWeapon, Show) == 0x000000, "Member 'Pla603_C_ShowWeapon::Show' has a wrong offset!");
static_assert(offsetof(Pla603_C_ShowWeapon, Weapon) == 0x000001, "Member 'Pla603_C_ShowWeapon::Weapon' has a wrong offset!");

// Function Pla603.Pla603_C.Act_BackStep
// 0x0001 (0x0001 - 0x0000)
struct Pla603_C_Act_BackStep final
{
public:
	uint8                                         AvoidDirection;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_Act_BackStep) == 0x000001, "Wrong alignment on Pla603_C_Act_BackStep");
static_assert(sizeof(Pla603_C_Act_BackStep) == 0x000001, "Wrong size on Pla603_C_Act_BackStep");
static_assert(offsetof(Pla603_C_Act_BackStep, AvoidDirection) == 0x000000, "Member 'Pla603_C_Act_BackStep::AvoidDirection' has a wrong offset!");

// Function Pla603.Pla603_C.TickSliding
// 0x0004 (0x0004 - 0x0000)
struct Pla603_C_TickSliding final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_TickSliding) == 0x000004, "Wrong alignment on Pla603_C_TickSliding");
static_assert(sizeof(Pla603_C_TickSliding) == 0x000004, "Wrong size on Pla603_C_TickSliding");
static_assert(offsetof(Pla603_C_TickSliding, DeltaSeconds) == 0x000000, "Member 'Pla603_C_TickSliding::DeltaSeconds' has a wrong offset!");

// Function Pla603.Pla603_C.TickHair
// 0x0004 (0x0004 - 0x0000)
struct Pla603_C_TickHair final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_TickHair) == 0x000004, "Wrong alignment on Pla603_C_TickHair");
static_assert(sizeof(Pla603_C_TickHair) == 0x000004, "Wrong size on Pla603_C_TickHair");
static_assert(offsetof(Pla603_C_TickHair, DeltaSeconds) == 0x000000, "Member 'Pla603_C_TickHair::DeltaSeconds' has a wrong offset!");

// Function Pla603.Pla603_C.SetEnableHairPhysics
// 0x0002 (0x0002 - 0x0000)
struct Pla603_C_SetEnableHairPhysics final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bReset;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_SetEnableHairPhysics) == 0x000001, "Wrong alignment on Pla603_C_SetEnableHairPhysics");
static_assert(sizeof(Pla603_C_SetEnableHairPhysics) == 0x000002, "Wrong size on Pla603_C_SetEnableHairPhysics");
static_assert(offsetof(Pla603_C_SetEnableHairPhysics, bEnable) == 0x000000, "Member 'Pla603_C_SetEnableHairPhysics::bEnable' has a wrong offset!");
static_assert(offsetof(Pla603_C_SetEnableHairPhysics, bReset) == 0x000001, "Member 'Pla603_C_SetEnableHairPhysics::bReset' has a wrong offset!");

// Function Pla603.Pla603_C.MapAttackActivate
// 0x0008 (0x0008 - 0x0000)
struct Pla603_C_MapAttackActivate final
{
public:
	bool                                          bActivate;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84BD[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AttackID;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_MapAttackActivate) == 0x000004, "Wrong alignment on Pla603_C_MapAttackActivate");
static_assert(sizeof(Pla603_C_MapAttackActivate) == 0x000008, "Wrong size on Pla603_C_MapAttackActivate");
static_assert(offsetof(Pla603_C_MapAttackActivate, bActivate) == 0x000000, "Member 'Pla603_C_MapAttackActivate::bActivate' has a wrong offset!");
static_assert(offsetof(Pla603_C_MapAttackActivate, AttackID) == 0x000004, "Member 'Pla603_C_MapAttackActivate::AttackID' has a wrong offset!");

// Function Pla603.Pla603_C.Notify_SetAcceptableCancelAttack
// 0x0001 (0x0001 - 0x0000)
struct Pla603_C_Notify_SetAcceptableCancelAttack final
{
public:
	bool                                          bAcceptable;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_Notify_SetAcceptableCancelAttack) == 0x000001, "Wrong alignment on Pla603_C_Notify_SetAcceptableCancelAttack");
static_assert(sizeof(Pla603_C_Notify_SetAcceptableCancelAttack) == 0x000001, "Wrong size on Pla603_C_Notify_SetAcceptableCancelAttack");
static_assert(offsetof(Pla603_C_Notify_SetAcceptableCancelAttack, bAcceptable) == 0x000000, "Member 'Pla603_C_Notify_SetAcceptableCancelAttack::bAcceptable' has a wrong offset!");

// Function Pla603.Pla603_C.Notify_BeginAttackTrail
// 0x0018 (0x0018 - 0x0000)
struct Pla603_C_Notify_BeginAttackTrail final
{
public:
	class UParticleSystem*                        Template;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FirstSocket;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SecondSocket;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_Notify_BeginAttackTrail) == 0x000008, "Wrong alignment on Pla603_C_Notify_BeginAttackTrail");
static_assert(sizeof(Pla603_C_Notify_BeginAttackTrail) == 0x000018, "Wrong size on Pla603_C_Notify_BeginAttackTrail");
static_assert(offsetof(Pla603_C_Notify_BeginAttackTrail, Template) == 0x000000, "Member 'Pla603_C_Notify_BeginAttackTrail::Template' has a wrong offset!");
static_assert(offsetof(Pla603_C_Notify_BeginAttackTrail, FirstSocket) == 0x000008, "Member 'Pla603_C_Notify_BeginAttackTrail::FirstSocket' has a wrong offset!");
static_assert(offsetof(Pla603_C_Notify_BeginAttackTrail, SecondSocket) == 0x000010, "Member 'Pla603_C_Notify_BeginAttackTrail::SecondSocket' has a wrong offset!");

// Function Pla603.Pla603_C.BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct Pla603_C_BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84BE[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Pla603_C_BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Pla603_C_BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Pla603_C_BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on Pla603_C_BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Pla603_C_BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Pla603_C_BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Pla603_C_BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Pla603_C_BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Pla603_C_BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Pla603_C_BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Pla603_C_BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Pla603_C_BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Pla603_C_BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Pla603_C_BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Pla603_C_BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Pla603_C_BndEvt__MapAttack_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function Pla603.Pla603_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Pla603_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_ReceiveTick) == 0x000004, "Wrong alignment on Pla603_C_ReceiveTick");
static_assert(sizeof(Pla603_C_ReceiveTick) == 0x000004, "Wrong size on Pla603_C_ReceiveTick");
static_assert(offsetof(Pla603_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Pla603_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Pla603.Pla603_C.OnGimmickBlown
// 0x000C (0x000C - 0x0000)
struct Pla603_C_OnGimmickBlown final
{
public:
	struct FVector                                ForwardVector;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_OnGimmickBlown) == 0x000004, "Wrong alignment on Pla603_C_OnGimmickBlown");
static_assert(sizeof(Pla603_C_OnGimmickBlown) == 0x00000C, "Wrong size on Pla603_C_OnGimmickBlown");
static_assert(offsetof(Pla603_C_OnGimmickBlown, ForwardVector) == 0x000000, "Member 'Pla603_C_OnGimmickBlown::ForwardVector' has a wrong offset!");

// Function Pla603.Pla603_C.Notify_WalkBrakeTrigger
// 0x0004 (0x0004 - 0x0000)
struct Pla603_C_Notify_WalkBrakeTrigger final
{
public:
	bool                                          bLeft_1;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLeft_2;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRight_1;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRight_2;                                          // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_Notify_WalkBrakeTrigger) == 0x000001, "Wrong alignment on Pla603_C_Notify_WalkBrakeTrigger");
static_assert(sizeof(Pla603_C_Notify_WalkBrakeTrigger) == 0x000004, "Wrong size on Pla603_C_Notify_WalkBrakeTrigger");
static_assert(offsetof(Pla603_C_Notify_WalkBrakeTrigger, bLeft_1) == 0x000000, "Member 'Pla603_C_Notify_WalkBrakeTrigger::bLeft_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_Notify_WalkBrakeTrigger, bLeft_2) == 0x000001, "Member 'Pla603_C_Notify_WalkBrakeTrigger::bLeft_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_Notify_WalkBrakeTrigger, bRight_1) == 0x000002, "Member 'Pla603_C_Notify_WalkBrakeTrigger::bRight_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_Notify_WalkBrakeTrigger, bRight_2) == 0x000003, "Member 'Pla603_C_Notify_WalkBrakeTrigger::bRight_2' has a wrong offset!");

// Function Pla603.Pla603_C.PlayMapAction
// 0x0001 (0x0001 - 0x0000)
struct Pla603_C_PlayMapAction final
{
public:
	E_MapAction_Pla603                            Action;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_PlayMapAction) == 0x000001, "Wrong alignment on Pla603_C_PlayMapAction");
static_assert(sizeof(Pla603_C_PlayMapAction) == 0x000001, "Wrong size on Pla603_C_PlayMapAction");
static_assert(offsetof(Pla603_C_PlayMapAction, Action) == 0x000000, "Member 'Pla603_C_PlayMapAction::Action' has a wrong offset!");

// Function Pla603.Pla603_C.PlayerPawnTeleport
// 0x0018 (0x0018 - 0x0000)
struct Pla603_C_PlayerPawnTeleport final
{
public:
	struct FVector                                NewLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewRotation;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_PlayerPawnTeleport) == 0x000004, "Wrong alignment on Pla603_C_PlayerPawnTeleport");
static_assert(sizeof(Pla603_C_PlayerPawnTeleport) == 0x000018, "Wrong size on Pla603_C_PlayerPawnTeleport");
static_assert(offsetof(Pla603_C_PlayerPawnTeleport, NewLocation) == 0x000000, "Member 'Pla603_C_PlayerPawnTeleport::NewLocation' has a wrong offset!");
static_assert(offsetof(Pla603_C_PlayerPawnTeleport, NewRotation) == 0x00000C, "Member 'Pla603_C_PlayerPawnTeleport::NewRotation' has a wrong offset!");

// Function Pla603.Pla603_C.BeginEstoma
// 0x0001 (0x0001 - 0x0000)
struct Pla603_C_BeginEstoma final
{
public:
	bool                                          bPlaySE;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_BeginEstoma) == 0x000001, "Wrong alignment on Pla603_C_BeginEstoma");
static_assert(sizeof(Pla603_C_BeginEstoma) == 0x000001, "Wrong size on Pla603_C_BeginEstoma");
static_assert(offsetof(Pla603_C_BeginEstoma, bPlaySE) == 0x000000, "Member 'Pla603_C_BeginEstoma::bPlaySE' has a wrong offset!");

// Function Pla603.Pla603_C.EndEstoma
// 0x0001 (0x0001 - 0x0000)
struct Pla603_C_EndEstoma final
{
public:
	bool                                          bPlaySE;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_EndEstoma) == 0x000001, "Wrong alignment on Pla603_C_EndEstoma");
static_assert(sizeof(Pla603_C_EndEstoma) == 0x000001, "Wrong size on Pla603_C_EndEstoma");
static_assert(offsetof(Pla603_C_EndEstoma, bPlaySE) == 0x000000, "Member 'Pla603_C_EndEstoma::bPlaySE' has a wrong offset!");

// Function Pla603.Pla603_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct Pla603_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Pla603_C_ReceivePossessed) == 0x000008, "Wrong alignment on Pla603_C_ReceivePossessed");
static_assert(sizeof(Pla603_C_ReceivePossessed) == 0x000008, "Wrong size on Pla603_C_ReceivePossessed");
static_assert(offsetof(Pla603_C_ReceivePossessed, NewController) == 0x000000, "Member 'Pla603_C_ReceivePossessed::NewController' has a wrong offset!");

// Function Pla603.Pla603_C.BeginRiberama
// 0x0001 (0x0001 - 0x0000)
struct Pla603_C_BeginRiberama final
{
public:
	bool                                          PlaySE;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_BeginRiberama) == 0x000001, "Wrong alignment on Pla603_C_BeginRiberama");
static_assert(sizeof(Pla603_C_BeginRiberama) == 0x000001, "Wrong size on Pla603_C_BeginRiberama");
static_assert(offsetof(Pla603_C_BeginRiberama, PlaySE) == 0x000000, "Member 'Pla603_C_BeginRiberama::PlaySE' has a wrong offset!");

// Function Pla603.Pla603_C.EndRiberama
// 0x0001 (0x0001 - 0x0000)
struct Pla603_C_EndRiberama final
{
public:
	bool                                          PlaySE;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_EndRiberama) == 0x000001, "Wrong alignment on Pla603_C_EndRiberama");
static_assert(sizeof(Pla603_C_EndRiberama) == 0x000001, "Wrong size on Pla603_C_EndRiberama");
static_assert(offsetof(Pla603_C_EndRiberama, PlaySE) == 0x000000, "Member 'Pla603_C_EndRiberama::PlaySE' has a wrong offset!");

// Function Pla603.Pla603_C.SettingDashEffect
// 0x0001 (0x0001 - 0x0000)
struct Pla603_C_SettingDashEffect final
{
public:
	bool                                          TSUKUYOMI;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_SettingDashEffect) == 0x000001, "Wrong alignment on Pla603_C_SettingDashEffect");
static_assert(sizeof(Pla603_C_SettingDashEffect) == 0x000001, "Wrong size on Pla603_C_SettingDashEffect");
static_assert(offsetof(Pla603_C_SettingDashEffect, TSUKUYOMI) == 0x000000, "Member 'Pla603_C_SettingDashEffect::TSUKUYOMI' has a wrong offset!");

// Function Pla603.Pla603_C.ExecuteUbergraph_Pla603
// 0x0B38 (0x0B38 - 0x0000)
struct Pla603_C_ExecuteUbergraph_Pla603 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds_1;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             CallFunc_GetDefaultIdleMotion_Idle;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84BF[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMotionFinished_retValue;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetActionState_retValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84C0[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharaStampEffect                      CallFunc_FindNonPure_ReturnValue;                  // 0x0080(0x0088)(ConstParm, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_Event_AvoidDirection;                       // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84C1[0x5];                                     // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharaStampEffect                      CallFunc_FindNonPure_ReturnValue_1;                // 0x0110(0x0088)(ConstParm, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84C2[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DeltaSeconds;                   // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bEnable;                        // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bReset;                         // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Show;                           // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_Pla603_Weapon                               K2Node_CustomEvent_Weapon;                         // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84C3[0x2];                                     // 0x01A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKawaiiPhysicsSettings                 K2Node_MakeStruct_KawaiiPhysicsSettings;           // 0x01A8(0x0020)(NoDestructor)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84C4[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue;           // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRuntimeKawaiiHairParameter            CallFunc_KawaiiHairAddForceToAllBundle_ReturnValue; // 0x01D8(0x007C)(NoDestructor)
	bool                                          K2Node_Event_bActivate;                            // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84C5[0x3];                                     // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_AttackID;                             // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAttackable_bAttackable;                 // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84C6[0x2];                                     // 0x025E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLastMovementInputVector_ReturnValue;   // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAcceptable;                          // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0276(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PLAYER_MOVEMENT_STATE                       CallFunc_GetMovementState_ReturnValue;             // 0x0277(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Event_Template;                             // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_FirstSocket;                          // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_SecondSocket;                         // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84C7[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnTrailEmitter_ReturnValue;            // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84C8[0x5];                                     // 0x02A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ProjectPlayerCameraManager_C> K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager; // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84C9[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ProjectPlayerCameraManager_C> K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_1; // 0x02D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84CA[0x6];                                     // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84CB[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ProjectPlayerCameraManager_C> K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_2; // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84CC[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0310(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0320(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84CD[0x3];                                     // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0330(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TScriptInterface<class IBPI_MapAttackDamager_C> K2Node_DynamicCast_AsBPI_Map_Attack_Damager;       // 0x03B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84CE[0x7];                                     // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapAttackDamageData                   K2Node_MakeStruct_MapAttackDamageData;             // 0x03D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_AnimBP_C>  K2Node_DynamicCast_AsBPI_Player_Anim_BP;           // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84CF[0x7];                                     // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Player_AnimBP_C>  K2Node_DynamicCast_AsBPI_Player_Anim_BP_1;         // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84D0[0x1];                                     // 0x040B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x040C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0418(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0424(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_MakeBox_ReturnValue;                      // 0x0430(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84D1[0x4];                                     // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UParticleSystemComponent*>       CallFunc_PlayAttackVsFoliageEffect_ReturnValue;    // 0x0450(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84D2[0x4];                                     // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0468(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84D3[0x2];                                     // 0x047A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEdgeGripping_ReturnValue;               // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84D4[0x6];                                     // 0x0482(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPla603_AnimBP_C*                       K2Node_DynamicCast_AsPla_603_Anim_BP;              // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Jump_ReturnValue;                         // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EndEdgeGrip_ReturnValue;                  // 0x049A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84D5[0x5];                                     // 0x049B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ProjectPlayerCameraManager_C> K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_3; // 0x04A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84D6[0x3];                                     // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_ForwardVector;                        // 0x04BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x04C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x04D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x04E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_5;    // 0x04EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x04F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0504(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x051C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84D7[0x3];                                     // 0x0529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x052C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84D8[0x3];                                     // 0x0539(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x053C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0548(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bLeft_1;                              // 0x0554(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bLeft_2;                              // 0x0555(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bRight_1;                             // 0x0556(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bRight_2;                             // 0x0557(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84D9[0x7];                                     // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0560(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MapAction_Pla603                            K2Node_CustomEvent_Action;                         // 0x0569(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84DA[0x2];                                     // 0x056A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x056C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84DB[0x4];                                     // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0578(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x0580(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_SpawnSoundAttached_ReturnValue_2;         // 0x0588(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_1;       // 0x0590(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x059A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84DC[0x1];                                     // 0x059B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_NewLocation;                          // 0x059C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Event_NewRotation;                          // 0x05A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bPlaySE_1;                            // 0x05B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bPlaySE;                              // 0x05B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84DD[0x2];                                     // 0x05B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_SpawnSound2D_ReturnValue;                 // 0x05B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_NewController;                        // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_2;       // 0x05D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System;              // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84DE[0x7];                                     // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_SpawnSoundAttached_ReturnValue_3;         // 0x05F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_SpawnSoundAttached_ReturnValue_4;         // 0x0600(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_SpawnSoundAttached_ReturnValue_5;         // 0x0608(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_3;       // 0x0610(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84DF[0x7];                                     // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_1;                            // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System_1;            // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84E0[0x7];                                     // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0640(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0650(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84E1[0x7];                                     // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x06E0(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x06F0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0779(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x077A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84E2[0x1];                                     // 0x077B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x077C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0784(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0790(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x079C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x07A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84E3[0x4];                                     // 0x07B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x07C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x07D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x07DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x07E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x07E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x07F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84E4[0x4];                                     // 0x07FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0800(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0809(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84E5[0x2];                                     // 0x080A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x080C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0814(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0820(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x082C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0838(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84E6[0x4];                                     // 0x0844(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0858(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x086C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0870(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0874(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0880(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x088C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FCharaStampEffect                      CallFunc_FindNonPure_ReturnValue_2;                // 0x0898(0x0088)(ConstParm, NoDestructor)
	bool                                          K2Node_Event_PlaySE_1;                             // 0x0920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0921(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_PlaySE;                               // 0x0922(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0923(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84E7[0x4];                                     // 0x0924(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x0928(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0931(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0932(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84E8[0x5];                                     // 0x0933(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Player_AnimBP_C>  K2Node_DynamicCast_AsBPI_Player_Anim_BP_2;         // 0x0938(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0949(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84E9[0x6];                                     // 0x094A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue_4;       // 0x0950(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_4;                            // 0x0958(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84EA[0x3];                                     // 0x0969(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_2;                 // 0x096C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_2;            // 0x09F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x09F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x09F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84EB[0x1];                                     // 0x09F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x09F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x09FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0A00(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0A0C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0A18(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0A24(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0A40(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x0A54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0A58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0A5C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0A68(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue_1;              // 0x0A74(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0A80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84EC[0x3];                                     // 0x0A81(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0A84(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84ED[0x7];                                     // 0x0A91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalComponent*                        CallFunc_SpawnSlidingDecal_DecalComponent;         // 0x0A98(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84EE[0x3];                                     // 0x0AA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0AA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0AB0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0ABC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x0AC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0ACC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84EF[0x3];                                     // 0x0AD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x0ADC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue_2;              // 0x0AE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Tsukuyomi;                      // 0x0AF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84F0[0x3];                                     // 0x0AF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0AF8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84F1[0x4];                                     // 0x0B04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalComponent*                        CallFunc_SpawnSlidingDecal_DecalComponent_1;       // 0x0B08(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0B10(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0B21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84F2[0x2];                                     // 0x0B22(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0B24(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_3;    // 0x0B34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0B35(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_ExecuteUbergraph_Pla603) == 0x000008, "Wrong alignment on Pla603_C_ExecuteUbergraph_Pla603");
static_assert(sizeof(Pla603_C_ExecuteUbergraph_Pla603) == 0x000B38, "Wrong size on Pla603_C_ExecuteUbergraph_Pla603");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, EntryPoint) == 0x000000, "Member 'Pla603_C_ExecuteUbergraph_Pla603::EntryPoint' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_CustomEvent_DeltaSeconds_1) == 0x000004, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_CustomEvent_DeltaSeconds_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_GetSocketLocation_ReturnValue) == 0x000008, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Add_VectorVector_ReturnValue) == 0x000014, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_GetDefaultIdleMotion_Idle) == 0x000020, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_GetDefaultIdleMotion_Idle' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_GetActorForwardVector_ReturnValue) == 0x000024, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_MakeLiteralFloat_ReturnValue) == 0x00003C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00004C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000058, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_IsMotionFinished_retValue) == 0x000060, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_IsMotionFinished_retValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_GetActionState_retValue) == 0x000061, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_GetActionState_retValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000062, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_IsPlaying_ReturnValue) == 0x000063, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000064, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000070, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_FindNonPure_ReturnValue) == 0x000080, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_FindNonPure_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000108, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BooleanAND_ReturnValue) == 0x000109, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_AvoidDirection) == 0x00010A, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_AvoidDirection' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_FindNonPure_ReturnValue_1) == 0x000110, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_FindNonPure_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000198, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_CustomEvent_DeltaSeconds) == 0x00019C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_CustomEvent_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_CustomEvent_bEnable) == 0x0001A0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_CustomEvent_bEnable' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_CustomEvent_bReset) == 0x0001A1, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_CustomEvent_bReset' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_CustomEvent_Show) == 0x0001A2, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_CustomEvent_Show' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_CustomEvent_Weapon) == 0x0001A3, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_CustomEvent_Weapon' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_SwitchEnum_CmpSuccess) == 0x0001A4, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_SwitchEnum_CmpSuccess_1) == 0x0001A5, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_MakeStruct_KawaiiPhysicsSettings) == 0x0001A8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_MakeStruct_KawaiiPhysicsSettings' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_VSize_ReturnValue) == 0x0001C8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0001CC, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SelectFloat_ReturnValue) == 0x0001D0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_FInterpTo_Constant_ReturnValue) == 0x0001D4, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_KawaiiHairAddForceToAllBundle_ReturnValue) == 0x0001D8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_KawaiiHairAddForceToAllBundle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_bActivate) == 0x000254, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_bActivate' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_AttackID) == 0x000258, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_AttackID' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, Temp_byte_Variable) == 0x00025C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_IsAttackable_bAttackable) == 0x00025D, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_IsAttackable_bAttackable' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_GetLastMovementInputVector_ReturnValue) == 0x000260, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_GetLastMovementInputVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_VSize_ReturnValue_1) == 0x00026C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, Temp_int_Array_Index_Variable) == 0x000270, "Member 'Pla603_C_ExecuteUbergraph_Pla603::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000274, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_bAcceptable) == 0x000275, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_bAcceptable' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, Temp_byte_Variable_1) == 0x000276, "Member 'Pla603_C_ExecuteUbergraph_Pla603::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_GetMovementState_ReturnValue) == 0x000277, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_GetMovementState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_Template) == 0x000278, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_Template' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_FirstSocket) == 0x000280, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_FirstSocket' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_SecondSocket) == 0x000288, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_SecondSocket' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000290, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnTrailEmitter_ReturnValue) == 0x000298, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnTrailEmitter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BooleanOR_ReturnValue) == 0x0002A0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_IsValid_ReturnValue_1) == 0x0002A1, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_IsValid_ReturnValue_2) == 0x0002A2, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_GetPlayerController_ReturnValue) == 0x0002A8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_GetPlayerController_ReturnValue_1) == 0x0002B0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager) == 0x0002B8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_bSuccess) == 0x0002C8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_1) == 0x0002D0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_bSuccess_1) == 0x0002E0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, Temp_bool_Variable) == 0x0002E1, "Member 'Pla603_C_ExecuteUbergraph_Pla603::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_GetPlayerController_ReturnValue_2) == 0x0002E8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Select_Default) == 0x0002F0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_2) == 0x0002F8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_bSuccess_2) == 0x000308, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000310, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_ComponentBoundEvent_OtherActor) == 0x000318, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_ComponentBoundEvent_OtherComp) == 0x000320, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000328, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_ComponentBoundEvent_bFromSweep) == 0x00032C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_ComponentBoundEvent_SweepResult) == 0x000330, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_AsBPI_Map_Attack_Damager) == 0x0003B8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_AsBPI_Map_Attack_Damager' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_bSuccess_3) == 0x0003C8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_MakeStruct_MapAttackDamageData) == 0x0003D0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_MakeStruct_MapAttackDamageData' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_AsBPI_Player_Anim_BP) == 0x0003E0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_AsBPI_Player_Anim_BP' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_bSuccess_4) == 0x0003F0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_AsBPI_Player_Anim_BP_1) == 0x0003F8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_AsBPI_Player_Anim_BP_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_bSuccess_5) == 0x000408, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Not_PreBool_ReturnValue) == 0x000409, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BooleanOR_ReturnValue_1) == 0x00040A, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x00040C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000418, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000424, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_MakeBox_ReturnValue) == 0x000430, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_MakeBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_PlayAttackVsFoliageEffect_ReturnValue) == 0x000450, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_PlayAttackVsFoliageEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, Temp_int_Loop_Counter_Variable) == 0x000460, "Member 'Pla603_C_ExecuteUbergraph_Pla603::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Array_Get_Item) == 0x000468, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Add_IntInt_ReturnValue) == 0x000470, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Array_Length_ReturnValue) == 0x000474, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Less_IntInt_ReturnValue) == 0x000478, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Not_PreBool_ReturnValue_1) == 0x000479, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_DeltaSeconds) == 0x00047C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_IsEdgeGripping_ReturnValue) == 0x000480, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_IsEdgeGripping_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, Temp_bool_IsClosed_Variable) == 0x000481, "Member 'Pla603_C_ExecuteUbergraph_Pla603::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_GetAnimInstance_ReturnValue) == 0x000488, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_AsPla_603_Anim_BP) == 0x000490, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_AsPla_603_Anim_BP' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_bSuccess_6) == 0x000498, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Jump_ReturnValue) == 0x000499, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Jump_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_EndEdgeGrip_ReturnValue) == 0x00049A, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_EndEdgeGrip_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_GetPlayerController_ReturnValue_3) == 0x0004A0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_3) == 0x0004A8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_bSuccess_7) == 0x0004B8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_ForwardVector) == 0x0004BC, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_ForwardVector' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0004C8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_GetForwardVector_ReturnValue) == 0x0004D4, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_GetUpVector_ReturnValue) == 0x0004E0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_K2_GetComponentLocation_ReturnValue_5) == 0x0004EC, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_K2_GetComponentLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0004F8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000504, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000510, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Add_VectorVector_ReturnValue_4) == 0x00051C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_IsValid_ReturnValue_3) == 0x000528, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00052C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Conv_IntToBool_ReturnValue) == 0x000538, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00053C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000548, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_bLeft_1) == 0x000554, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_bLeft_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_bLeft_2) == 0x000555, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_bLeft_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_bRight_1) == 0x000556, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_bRight_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_bRight_2) == 0x000557, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_bRight_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_IsValid_ReturnValue_4) == 0x000558, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000560, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_IsValid_ReturnValue_5) == 0x000568, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_CustomEvent_Action) == 0x000569, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_CustomEvent_Action' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_MakeLiteralName_ReturnValue) == 0x00056C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000578, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x000580, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnSoundAttached_ReturnValue_2) == 0x000588, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnSoundAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnEmitterAttached_ReturnValue_1) == 0x000590, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnEmitterAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, Temp_bool_Has_Been_Initd_Variable) == 0x000598, "Member 'Pla603_C_ExecuteUbergraph_Pla603::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_IsValid_ReturnValue_6) == 0x000599, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, Temp_bool_Has_Been_Initd_Variable_1) == 0x00059A, "Member 'Pla603_C_ExecuteUbergraph_Pla603::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_NewLocation) == 0x00059C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_NewLocation' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_NewRotation) == 0x0005A8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_NewRotation' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_bPlaySE_1) == 0x0005B4, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_bPlaySE_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_bPlaySE) == 0x0005B5, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_bPlaySE' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnSound2D_ReturnValue) == 0x0005B8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_NewController) == 0x0005C0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, Temp_object_Variable) == 0x0005C8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnEmitterAttached_ReturnValue_2) == 0x0005D0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnEmitterAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_AsParticle_System) == 0x0005D8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_AsParticle_System' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_bSuccess_8) == 0x0005E0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_CustomEvent_Loaded) == 0x0005E8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_MakeLiteralName_ReturnValue_1) == 0x0005F0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnSoundAttached_ReturnValue_3) == 0x0005F8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnSoundAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnSoundAttached_ReturnValue_4) == 0x000600, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnSoundAttached_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnSoundAttached_ReturnValue_5) == 0x000608, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnSoundAttached_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnEmitterAttached_ReturnValue_3) == 0x000610, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnEmitterAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, Temp_bool_IsClosed_Variable_1) == 0x000618, "Member 'Pla603_C_ExecuteUbergraph_Pla603::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, Temp_object_Variable_1) == 0x000620, "Member 'Pla603_C_ExecuteUbergraph_Pla603::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_AsParticle_System_1) == 0x000628, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_AsParticle_System_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_bSuccess_9) == 0x000630, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_CustomEvent_Loaded_1) == 0x000638, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, Temp_object_Variable_2) == 0x000640, "Member 'Pla603_C_ExecuteUbergraph_Pla603::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_LineTraceSingle_OutHit) == 0x000650, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_LineTraceSingle_ReturnValue) == 0x0006D8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, Temp_object_Variable_3) == 0x0006E0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_LineTraceSingle_OutHit_1) == 0x0006F0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000778, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_bBlockingHit) == 0x000779, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_bInitialOverlap) == 0x00077A, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_Time) == 0x00077C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_Distance) == 0x000780, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_Location) == 0x000784, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_ImpactPoint) == 0x000790, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_Normal) == 0x00079C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_ImpactNormal) == 0x0007A8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_PhysMat) == 0x0007B8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_HitActor) == 0x0007C0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_HitComponent) == 0x0007C8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_HitBoneName) == 0x0007D0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_HitItem) == 0x0007D8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_ElementIndex) == 0x0007DC, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_FaceIndex) == 0x0007E0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_TraceStart) == 0x0007E4, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_TraceEnd) == 0x0007F0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000800, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000808, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000809, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_Time_1) == 0x00080C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_Distance_1) == 0x000810, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_Location_1) == 0x000814, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000820, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_Normal_1) == 0x00082C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000838, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_PhysMat_1) == 0x000848, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_HitActor_1) == 0x000850, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_HitComponent_1) == 0x000858, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_HitBoneName_1) == 0x000860, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_HitItem_1) == 0x000868, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_ElementIndex_1) == 0x00086C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_FaceIndex_1) == 0x000870, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_TraceStart_1) == 0x000874, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_TraceEnd_1) == 0x000880, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_MakeRotFromZX_ReturnValue) == 0x00088C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_FindNonPure_ReturnValue_2) == 0x000898, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_FindNonPure_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_PlaySE_1) == 0x000920, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_PlaySE_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_IsValid_ReturnValue_7) == 0x000921, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_Event_PlaySE) == 0x000922, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_Event_PlaySE' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_IsValid_ReturnValue_8) == 0x000923, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x000928, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_IsValid_ReturnValue_9) == 0x000930, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_IsValid_ReturnValue_10) == 0x000931, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_IsValid_ReturnValue_11) == 0x000932, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_AsBPI_Player_Anim_BP_2) == 0x000938, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_AsBPI_Player_Anim_BP_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_DynamicCast_bSuccess_10) == 0x000948, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000949, "Member 'Pla603_C_ExecuteUbergraph_Pla603::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnEmitterAttached_ReturnValue_4) == 0x000950, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnEmitterAttached_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, Temp_object_Variable_4) == 0x000958, "Member 'Pla603_C_ExecuteUbergraph_Pla603::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_IsValid_ReturnValue_12) == 0x000968, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_LineTraceSingle_OutHit_2) == 0x00096C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_LineTraceSingle_OutHit_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_LineTraceSingle_ReturnValue_2) == 0x0009F4, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_LineTraceSingle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_bBlockingHit_2) == 0x0009F5, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x0009F6, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_Time_2) == 0x0009F8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_Distance_2) == 0x0009FC, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_Location_2) == 0x000A00, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000A0C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_Normal_2) == 0x000A18, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000A24, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_PhysMat_2) == 0x000A30, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_HitActor_2) == 0x000A38, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_HitComponent_2) == 0x000A40, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_HitBoneName_2) == 0x000A48, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_HitItem_2) == 0x000A50, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_ElementIndex_2) == 0x000A54, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_FaceIndex_2) == 0x000A58, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_TraceStart_2) == 0x000A5C, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BreakHitResult_TraceEnd_2) == 0x000A68, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_MakeRotFromZX_ReturnValue_1) == 0x000A74, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_MakeRotFromZX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000A80, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_ComposeRotators_ReturnValue) == 0x000A84, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000A90, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnSlidingDecal_DecalComponent) == 0x000A98, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnSlidingDecal_DecalComponent' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BooleanOR_ReturnValue_2) == 0x000AA0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000AA4, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000AB0, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Normal_ReturnValue) == 0x000ABC, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_VSize_ReturnValue_2) == 0x000AC8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000ACC, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000AD8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_Add_VectorVector_ReturnValue_6) == 0x000ADC, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_MakeRotFromZX_ReturnValue_2) == 0x000AE8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_MakeRotFromZX_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_CustomEvent_Tsukuyomi) == 0x000AF4, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_CustomEvent_Tsukuyomi' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_ComposeRotators_ReturnValue_1) == 0x000AF8, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_SpawnSlidingDecal_DecalComponent_1) == 0x000B08, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_SpawnSlidingDecal_DecalComponent_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_CreateDelegate_OutputDelegate) == 0x000B10, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000B20, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000B21, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, K2Node_CreateDelegate_OutputDelegate_1) == 0x000B24, "Member 'Pla603_C_ExecuteUbergraph_Pla603::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_GreaterEqual_FloatFloat_ReturnValue_3) == 0x000B34, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_GreaterEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Pla603_C_ExecuteUbergraph_Pla603, CallFunc_BooleanAND_ReturnValue_1) == 0x000B35, "Member 'Pla603_C_ExecuteUbergraph_Pla603::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Pla603.Pla603_C.IsDashing
// 0x0002 (0x0002 - 0x0000)
struct Pla603_C_IsDashing final
{
public:
	bool                                          bDashing;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDashing_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Pla603_C_IsDashing) == 0x000001, "Wrong alignment on Pla603_C_IsDashing");
static_assert(sizeof(Pla603_C_IsDashing) == 0x000002, "Wrong size on Pla603_C_IsDashing");
static_assert(offsetof(Pla603_C_IsDashing, bDashing) == 0x000000, "Member 'Pla603_C_IsDashing::bDashing' has a wrong offset!");
static_assert(offsetof(Pla603_C_IsDashing, CallFunc_IsDashing_ReturnValue) == 0x000001, "Member 'Pla603_C_IsDashing::CallFunc_IsDashing_ReturnValue' has a wrong offset!");

}

