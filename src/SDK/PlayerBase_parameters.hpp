#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_PLAYER_MOVEMENT_STATE_structs.hpp"
#include "Project_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PlayerBase.PlayerBase_C.ExecuteUbergraph_PlayerBase
// 0x0C90 (0x0C90 - 0x0000)
struct PlayerBase_C_ExecuteUbergraph_PlayerBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAcceptable;                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A9[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Event_Template;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_FirstSocket;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_SecondSocket;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ForwardVector;                        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bLeft_1;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bLeft_2;                              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bRight_1;                             // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bRight_2;                             // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bLeftFoot;                      // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bSlip;                          // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Normal;                         // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_CustomEvent_SurfaceType;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bEnable;                        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharaStampMovementState                      CallFunc_GetFootStampState_OutState;               // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12AA[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12AB[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_1;                               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharaStampMovementState                      Temp_byte_Variable;                                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12AC[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharaStampEffect                      CallFunc_FindNonPure_ReturnValue;                  // 0x0098(0x0088)(ConstParm, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12AD[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          K2Node_Select_Default;                             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12AE[0x2];                                     // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x013C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_LandingHeight;                  // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12AF[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue_1;              // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B0[0xC];                                     // 0x01B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B1[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FootStamp_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B2[0x3];                                     // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0228(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds;                   // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B3[0x3];                                     // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue_1;             // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0313(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B4[0x4];                                     // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0323(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetMovementSpeed_ReturnValue;             // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B5[0x3];                                     // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B6[0x2];                                     // 0x0352(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue_2;             // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue_3;             // 0x035D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x035E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue_4;             // 0x035F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue_5;             // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B7[0x3];                                     // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMovementSpeed_ReturnValue_1;           // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B8[0x6];                                     // 0x0372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_1;                            // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B9[0x3];                                     // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMovementSpeed_ReturnValue_2;           // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue_1;           // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x038A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x038B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12BA[0x3];                                     // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMovementSpeed_ReturnValue_3;           // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_3;       // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_4;       // 0x039D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12BB[0x2];                                     // 0x039E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12BC[0x4];                                     // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_SpawnSoundAttached_ReturnValue;           // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12BD[0x4];                                     // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x03C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_SpawnSoundAttached_ReturnValue_2;         // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPlayFootEffect_bPlay;                // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPlayFootEffect_bPlay_1;              // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x03DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x03DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x03DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x03DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x03DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlag_ReturnValue;               // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x03E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12BE[0x1];                                     // 0x03E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_InOption_1;                           // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_DeadTimingOverride_1;                 // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12BF[0x2];                                     // 0x03EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeadTiming_1;                         // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaStampMovementState                      Temp_byte_Variable_1;                              // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C0[0x7];                                     // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default_3;                           // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x0400(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12C1[0x3];                                     // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTime;                            // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CharaPlayRate;                        // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1; // 0x0415(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12C2[0x2];                                     // 0x0416(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_NewController;                        // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_OldController;                        // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12C3[0x6];                                     // 0x0432(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBgmScene                                     CallFunc_GetBGMScene_ReturnValue;                  // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12C4[0x6];                                     // 0x0442(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0448(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0458(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x04E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12C5[0x1];                                     // 0x04E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x04EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x04F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0504(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C6[0x4];                                     // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0530(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x054C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0558(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0564(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue_1;         // 0x0565(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12C7[0x2];                                     // 0x0566(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharaStampEffect                      CallFunc_FindNonPure_ReturnValue_1;                // 0x0568(0x0088)(ConstParm, NoDestructor)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x05F0(0x0010)(ReferenceParm)
	float                                         K2Node_Event_EnableTime;                           // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bMovement;                            // 0x0604(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bRotate;                              // 0x0605(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bAttacking;                           // 0x0606(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12C8[0x1];                                     // 0x0607(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bLeftFoot, bool bSlip, const struct FVector& Location, const struct FVector& Normal, EPhysicalSurface SurfaceType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0610(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IBPI_ProjectPlayerCameraManager_C> K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager; // 0x0620(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12C9[0x7];                                     // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ProjectPlayerCameraManager_C> K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_1; // 0x0638(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12CA[0x7];                                     // 0x0649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetPostProcessInstance_ReturnValue;       // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12CB[0x7];                                     // 0x0659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectIKAnimInstance*                 K2Node_DynamicCast_AsProject_IKAnim_Instance;      // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12CC[0x3];                                     // 0x0669(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMovementSpeed_ReturnValue_4;           // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue_2;           // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0671(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12CD[0x6];                                     // 0x0672(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x0678(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x0688(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0711(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0712(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12CE[0x1];                                     // 0x0713(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x071C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0728(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0734(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0740(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12CF[0x4];                                     // 0x074C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0760(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x077C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0788(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Enable;                               // 0x0794(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Immediately;                          // 0x0795(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D0[0x2];                                     // 0x0796(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_2;     // 0x0798(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D1[0x7];                                     // 0x07A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_4;                            // 0x07A8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                K2Node_CustomEvent_NewLocation;                    // 0x07B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_NewRotation;                    // 0x07C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_2;                 // 0x07D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_2;            // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D2[0x3];                                     // 0x0859(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x085C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0864(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0868(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0874(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0880(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x08B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x08E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D3[0x3];                                     // 0x0969(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_1;    // 0x096C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_1;       // 0x09F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x09F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x09F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D4[0x1];                                     // 0x09F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x09F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x09FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0A00(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0A0C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0A18(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0A24(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0A40(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x0A54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0A58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0A5C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0A68(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D5[0x4];                                     // 0x0A74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0A78(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0A88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0A8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0A90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D6[0x4];                                     // 0x0A94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0A98(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0AA8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0AB4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_12D7[0x4];                                     // 0x0B3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_3;     // 0x0B40(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x0B48(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0BD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_5;       // 0x0BD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0BD5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0BD6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D8[0x1];                                     // 0x0BD7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          K2Node_Select_Default_4;                           // 0x0BD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D9[0x7];                                     // 0x0BE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMoveInputIgnored_ReturnValue;           // 0x0BF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLookInputIgnored_ReturnValue;           // 0x0BF2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0BF3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsJumping_ReturnValue;                    // 0x0BF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue_3;           // 0x0BF5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0BF6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0BF7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0BF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0BF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12DA[0x6];                                     // 0x0BFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default_5;                           // 0x0C00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0C08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12DB[0x7];                                     // 0x0C09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_4;     // 0x0C10(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0C18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameMode_C>       K2Node_DynamicCast_AsBPI_Game_Mode;                // 0x0C20(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0C31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         K2Node_Event_InOption;                             // 0x0C32(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_DeadTimingOverride;                   // 0x0C33(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeadTiming;                           // 0x0C34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0C38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_ForceDitherOff;                       // 0x0C39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0C3A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0C3B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsMovingOnGround_IsMovingOnGround;     // 0x0C3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12DC[0x3];                                     // 0x0C3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0C40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameMode_C>       K2Node_DynamicCast_AsBPI_Game_Mode_1;              // 0x0C48(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0C58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12DD[0x7];                                     // 0x0C59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0C60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMapEventPlaying_IsMapEventPlaying;      // 0x0C68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12DE[0x7];                                     // 0x0C69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0C70(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsBattle_IsBattle;                     // 0x0C81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0C82(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_ExecuteUbergraph_PlayerBase) == 0x000010, "Wrong alignment on PlayerBase_C_ExecuteUbergraph_PlayerBase");
static_assert(sizeof(PlayerBase_C_ExecuteUbergraph_PlayerBase) == 0x000C90, "Wrong size on PlayerBase_C_ExecuteUbergraph_PlayerBase");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, EntryPoint) == 0x000000, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_object_Variable) == 0x000010, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_bAcceptable) == 0x000018, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_bAcceptable' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_Template) == 0x000020, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_Template' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_FirstSocket) == 0x000028, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_FirstSocket' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_SecondSocket) == 0x000030, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_SecondSocket' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_ForwardVector) == 0x000038, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_ForwardVector' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_bLeft_1) == 0x000044, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_bLeft_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_bLeft_2) == 0x000045, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_bLeft_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_bRight_1) == 0x000046, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_bRight_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_bRight_2) == 0x000047, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_bRight_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_int_Variable) == 0x000048, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_bool_Variable) == 0x00004D, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_CustomEvent_bLeftFoot) == 0x00004E, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_CustomEvent_bLeftFoot' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_CustomEvent_bSlip) == 0x00004F, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_CustomEvent_bSlip' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_CustomEvent_Location) == 0x000050, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_CustomEvent_Normal) == 0x00005C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_CustomEvent_Normal' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_CustomEvent_SurfaceType) == 0x000068, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_CustomEvent_SurfaceType' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_CustomEvent_bEnable) == 0x000069, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_CustomEvent_bEnable' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue_1) == 0x00006A, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetFootStampState_OutState) == 0x00006B, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetFootStampState_OutState' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Not_PreBool_ReturnValue) == 0x00006C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetForwardVector_ReturnValue) == 0x000070, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BooleanAND_ReturnValue) == 0x00007C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_MakeRotFromZX_ReturnValue) == 0x000080, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_int_Variable_1) == 0x00008C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_bool_Variable_1) == 0x000090, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_byte_Variable) == 0x000091, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_FindNonPure_ReturnValue) == 0x000098, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_FindNonPure_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_MakeVector_ReturnValue) == 0x000120, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Select_Default) == 0x000130, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue_2) == 0x000138, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue_3) == 0x000139, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Select_Default_1) == 0x00013C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetSocketLocation_ReturnValue) == 0x000144, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Select_Default_2) == 0x000150, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_CustomEvent_LandingHeight) == 0x000158, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_CustomEvent_LandingHeight' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetSocketLocation_ReturnValue_1) == 0x00015C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000168, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00016C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakVector_X) == 0x000178, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakVector_Y) == 0x00017C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakVector_Z) == 0x000180, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_MakeVector_ReturnValue_1) == 0x000184, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000190, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Normal_ReturnValue) == 0x00019C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_MakeRotFromZX_ReturnValue_1) == 0x0001A8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_MakeRotFromZX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_MakeTransform_ReturnValue) == 0x0001C0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x0001F0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001F8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_FinishSpawningActor_ReturnValue) == 0x000200, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000208, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000210, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000218, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000220, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_ComponentBoundEvent_bFromSweep) == 0x000224, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_ComponentBoundEvent_SweepResult) == 0x000228, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0002B0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_ComponentBoundEvent_OtherActor) == 0x0002B8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_ComponentBoundEvent_OtherComp) == 0x0002C0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0002C8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_CustomEvent_DeltaSeconds) == 0x0002CC, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_CustomEvent_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0002D0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Conv_IntToBool_ReturnValue) == 0x0002DC, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0002E0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Add_VectorVector_ReturnValue) == 0x0002EC, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0002F8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakVector_X_1) == 0x000304, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakVector_Y_1) == 0x000308, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakVector_Z_1) == 0x00030C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000310, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000311, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Conv_IntToBool_ReturnValue_1) == 0x000312, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Conv_IntToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue_4) == 0x000313, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000318, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue_5) == 0x000320, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue_6) == 0x000321, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_bool_Has_Been_Initd_Variable) == 0x000322, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue_7) == 0x000323, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetMovementSpeed_ReturnValue) == 0x000324, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetMovementSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Less_FloatFloat_ReturnValue) == 0x000328, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x00032C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000338, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000344, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsMovingOnGround_ReturnValue) == 0x000350, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_bool_IsClosed_Variable) == 0x000351, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Add_IntInt_ReturnValue) == 0x000354, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Subtract_IntInt_ReturnValue) == 0x000358, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Conv_IntToBool_ReturnValue_2) == 0x00035C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Conv_IntToBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Conv_IntToBool_ReturnValue_3) == 0x00035D, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Conv_IntToBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Not_PreBool_ReturnValue_1) == 0x00035E, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Conv_IntToBool_ReturnValue_4) == 0x00035F, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Conv_IntToBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Conv_IntToBool_ReturnValue_5) == 0x000360, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Conv_IntToBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Add_FloatFloat_ReturnValue) == 0x000364, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000368, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetMovementSpeed_ReturnValue_1) == 0x00036C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetMovementSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000370, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x000371, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_object_Variable_1) == 0x000378, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Not_PreBool_ReturnValue_2) == 0x000380, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetMovementSpeed_ReturnValue_2) == 0x000384, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetMovementSpeed_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsMovingOnGround_ReturnValue_1) == 0x000388, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsMovingOnGround_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000389, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BooleanAND_ReturnValue_1) == 0x00038A, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Not_PreBool_ReturnValue_3) == 0x00038B, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BooleanAND_ReturnValue_2) == 0x00038C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000390, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000394, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetMovementSpeed_ReturnValue_3) == 0x000398, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetMovementSpeed_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_LessEqual_FloatFloat_ReturnValue_3) == 0x00039C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_LessEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_LessEqual_FloatFloat_ReturnValue_4) == 0x00039D, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_LessEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0003A0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0003B0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0003B8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x0003C8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_SpawnSoundAttached_ReturnValue_2) == 0x0003D0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_SpawnSoundAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_CheckPlayFootEffect_bPlay) == 0x0003D8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_CheckPlayFootEffect_bPlay' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_CheckPlayFootEffect_bPlay_1) == 0x0003D9, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_CheckPlayFootEffect_bPlay_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BooleanAND_ReturnValue_3) == 0x0003DA, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BooleanAND_ReturnValue_4) == 0x0003DB, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BooleanAND_ReturnValue_5) == 0x0003DC, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BooleanAND_ReturnValue_6) == 0x0003DD, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Not_PreBool_ReturnValue_4) == 0x0003DE, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BooleanAND_ReturnValue_7) == 0x0003DF, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BooleanAND_ReturnValue_8) == 0x0003E0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_CheckEventFlag_ReturnValue) == 0x0003E1, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_CheckEventFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue_8) == 0x0003E2, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_DeltaSeconds) == 0x0003E4, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_InOption_1) == 0x0003E8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_InOption_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_DeadTimingOverride_1) == 0x0003E9, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_DeadTimingOverride_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_DeadTiming_1) == 0x0003EC, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_DeadTiming_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_byte_Variable_1) == 0x0003F0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Select_Default_3) == 0x0003F8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x000400, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue_9) == 0x000408, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_DeltaTime) == 0x00040C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_CharaPlayRate) == 0x000410, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_CharaPlayRate' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsPlayerControlled_ReturnValue) == 0x000414, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1) == 0x000415, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_NewController) == 0x000418, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_OldController) == 0x000420, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_OldController' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetPlayerController_ReturnValue) == 0x000428, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000430, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000431, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Get_ReturnValue) == 0x000438, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetBGMScene_ReturnValue) == 0x000440, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetBGMScene_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000441, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_object_Variable_2) == 0x000448, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_LineTraceSingle_OutHit) == 0x000458, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_LineTraceSingle_ReturnValue) == 0x0004E0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_bBlockingHit) == 0x0004E1, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_bInitialOverlap) == 0x0004E2, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_Time) == 0x0004E4, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_Distance) == 0x0004E8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_Location) == 0x0004EC, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_ImpactPoint) == 0x0004F8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_Normal) == 0x000504, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_ImpactNormal) == 0x000510, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_PhysMat) == 0x000520, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_HitActor) == 0x000528, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_HitComponent) == 0x000530, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_HitBoneName) == 0x000538, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_HitItem) == 0x000540, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_ElementIndex) == 0x000544, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_FaceIndex) == 0x000548, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_TraceStart) == 0x00054C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_TraceEnd) == 0x000558, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue_10) == 0x000564, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsPlayerControlled_ReturnValue_1) == 0x000565, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsPlayerControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_FindNonPure_ReturnValue_1) == 0x000568, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_FindNonPure_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_MakeArray_Array) == 0x0005F0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_EnableTime) == 0x000600, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_EnableTime' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_bMovement) == 0x000604, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_bMovement' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_bRotate) == 0x000605, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_bRotate' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_bAttacking) == 0x000606, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_bAttacking' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetPlayerController_ReturnValue_1) == 0x000608, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_CreateDelegate_OutputDelegate) == 0x000610, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager) == 0x000620, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_DynamicCast_bSuccess) == 0x000630, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_1) == 0x000638, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_DynamicCast_bSuccess_1) == 0x000648, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetPostProcessInstance_ReturnValue) == 0x000650, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetPostProcessInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Not_PreBool_ReturnValue_5) == 0x000658, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_DynamicCast_AsProject_IKAnim_Instance) == 0x000660, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_DynamicCast_AsProject_IKAnim_Instance' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_DynamicCast_bSuccess_2) == 0x000668, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetMovementSpeed_ReturnValue_4) == 0x00066C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetMovementSpeed_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsMovingOnGround_ReturnValue_2) == 0x000670, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsMovingOnGround_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue_11) == 0x000671, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_object_Variable_3) == 0x000678, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_LineTraceSingle_OutHit_1) == 0x000688, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000710, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000711, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000712, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_Time_1) == 0x000714, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_Distance_1) == 0x000718, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_Location_1) == 0x00071C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000728, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_Normal_1) == 0x000734, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000740, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_PhysMat_1) == 0x000750, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_HitActor_1) == 0x000758, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_HitComponent_1) == 0x000760, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_HitBoneName_1) == 0x000768, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_HitItem_1) == 0x000770, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_ElementIndex_1) == 0x000774, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_FaceIndex_1) == 0x000778, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_TraceStart_1) == 0x00077C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_TraceEnd_1) == 0x000788, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_Enable) == 0x000794, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_Enable' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_Immediately) == 0x000795, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_Immediately' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_SpawnEmitterAtLocation_ReturnValue_2) == 0x000798, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_SpawnEmitterAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue_12) == 0x0007A0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_object_Variable_4) == 0x0007A8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_CustomEvent_NewLocation) == 0x0007B8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_CustomEvent_NewLocation' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_CustomEvent_NewRotation) == 0x0007C4, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_CustomEvent_NewRotation' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_LineTraceSingle_OutHit_2) == 0x0007D0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_LineTraceSingle_OutHit_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_LineTraceSingle_ReturnValue_2) == 0x000858, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_LineTraceSingle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakRotator_Roll) == 0x00085C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakRotator_Pitch) == 0x000860, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakRotator_Yaw) == 0x000864, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_MakeRotator_ReturnValue) == 0x000868, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_MakeRotator_ReturnValue_1) == 0x000874, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_MakeTransform_ReturnValue_1) == 0x000880, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_MakeTransform_ReturnValue_2) == 0x0008B0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0008E0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000968, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_K2_SetActorTransform_SweepHitResult_1) == 0x00096C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_K2_SetActorTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_K2_SetActorTransform_ReturnValue_1) == 0x0009F4, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_K2_SetActorTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_bBlockingHit_2) == 0x0009F5, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x0009F6, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_Time_2) == 0x0009F8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_Distance_2) == 0x0009FC, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_Location_2) == 0x000A00, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000A0C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_Normal_2) == 0x000A18, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000A24, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_PhysMat_2) == 0x000A30, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_HitActor_2) == 0x000A38, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_HitComponent_2) == 0x000A40, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_HitBoneName_2) == 0x000A48, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_HitItem_2) == 0x000A50, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_ElementIndex_2) == 0x000A54, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_FaceIndex_2) == 0x000A58, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_TraceStart_2) == 0x000A5C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakHitResult_TraceEnd_2) == 0x000A68, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Conv_VectorToString_ReturnValue) == 0x000A78, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakVector_X_2) == 0x000A88, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakVector_Y_2) == 0x000A8C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BreakVector_Z_2) == 0x000A90, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Concat_StrStr_ReturnValue) == 0x000A98, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_MakeVector_ReturnValue_2) == 0x000AA8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000AB4, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_SpawnEmitterAtLocation_ReturnValue_3) == 0x000B40, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_SpawnEmitterAtLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x000B48, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Vector_Distance_ReturnValue) == 0x000BD0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_LessEqual_FloatFloat_ReturnValue_5) == 0x000BD4, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_LessEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue_13) == 0x000BD5, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_bool_Variable_2) == 0x000BD6, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Select_Default_4) == 0x000BD8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue_14) == 0x000BE0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetController_ReturnValue) == 0x000BE8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue_15) == 0x000BF0, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsMoveInputIgnored_ReturnValue) == 0x000BF1, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsMoveInputIgnored_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsLookInputIgnored_ReturnValue) == 0x000BF2, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsLookInputIgnored_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BooleanOR_ReturnValue) == 0x000BF3, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsJumping_ReturnValue) == 0x000BF4, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsJumping_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsMovingOnGround_ReturnValue_3) == 0x000BF5, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsMovingOnGround_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Not_PreBool_ReturnValue_6) == 0x000BF6, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_bool_Variable_3) == 0x000BF7, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BooleanAND_ReturnValue_9) == 0x000BF8, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_BooleanOR_ReturnValue_1) == 0x000BF9, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Select_Default_5) == 0x000C00, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue_16) == 0x000C08, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_SpawnEmitterAtLocation_ReturnValue_4) == 0x000C10, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_SpawnEmitterAtLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetGameMode_ReturnValue) == 0x000C18, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_DynamicCast_AsBPI_Game_Mode) == 0x000C20, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_DynamicCast_AsBPI_Game_Mode' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_DynamicCast_bSuccess_3) == 0x000C30, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000C31, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_InOption) == 0x000C32, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_InOption' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_DeadTimingOverride) == 0x000C33, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_DeadTimingOverride' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_DeadTiming) == 0x000C34, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_DeadTiming' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_bool_Has_Been_Initd_Variable_1) == 0x000C38, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_Event_ForceDitherOff) == 0x000C39, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_Event_ForceDitherOff' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, Temp_bool_IsClosed_Variable_1) == 0x000C3A, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsValid_ReturnValue_17) == 0x000C3B, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetIsMovingOnGround_IsMovingOnGround) == 0x000C3C, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetIsMovingOnGround_IsMovingOnGround' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetGameMode_ReturnValue_1) == 0x000C40, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_DynamicCast_AsBPI_Game_Mode_1) == 0x000C48, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_DynamicCast_AsBPI_Game_Mode_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_DynamicCast_bSuccess_4) == 0x000C58, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetMapCommon_rerutn) == 0x000C60, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_IsMapEventPlaying_IsMapEventPlaying) == 0x000C68, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_IsMapEventPlaying_IsMapEventPlaying' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000C70, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, K2Node_DynamicCast_bSuccess_5) == 0x000C80, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_GetIsBattle_IsBattle) == 0x000C81, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_GetIsBattle_IsBattle' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ExecuteUbergraph_PlayerBase, CallFunc_Not_PreBool_ReturnValue_7) == 0x000C82, "Member 'PlayerBase_C_ExecuteUbergraph_PlayerBase::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.BI_TempToggleCameraDitherState
// 0x0001 (0x0001 - 0x0000)
struct PlayerBase_C_BI_TempToggleCameraDitherState final
{
public:
	bool                                          ForceDitherOff;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_BI_TempToggleCameraDitherState) == 0x000001, "Wrong alignment on PlayerBase_C_BI_TempToggleCameraDitherState");
static_assert(sizeof(PlayerBase_C_BI_TempToggleCameraDitherState) == 0x000001, "Wrong size on PlayerBase_C_BI_TempToggleCameraDitherState");
static_assert(offsetof(PlayerBase_C_BI_TempToggleCameraDitherState, ForceDitherOff) == 0x000000, "Member 'PlayerBase_C_BI_TempToggleCameraDitherState::ForceDitherOff' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.PlayerPawnTeleport
// 0x0018 (0x0018 - 0x0000)
struct PlayerBase_C_PlayerPawnTeleport final
{
public:
	struct FVector                                NewLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewRotation;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_PlayerPawnTeleport) == 0x000004, "Wrong alignment on PlayerBase_C_PlayerPawnTeleport");
static_assert(sizeof(PlayerBase_C_PlayerPawnTeleport) == 0x000018, "Wrong size on PlayerBase_C_PlayerPawnTeleport");
static_assert(offsetof(PlayerBase_C_PlayerPawnTeleport, NewLocation) == 0x000000, "Member 'PlayerBase_C_PlayerPawnTeleport::NewLocation' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerPawnTeleport, NewRotation) == 0x00000C, "Member 'PlayerBase_C_PlayerPawnTeleport::NewRotation' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.SetLegIKEnable
// 0x0002 (0x0002 - 0x0000)
struct PlayerBase_C_SetLegIKEnable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Immediately;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_SetLegIKEnable) == 0x000001, "Wrong alignment on PlayerBase_C_SetLegIKEnable");
static_assert(sizeof(PlayerBase_C_SetLegIKEnable) == 0x000002, "Wrong size on PlayerBase_C_SetLegIKEnable");
static_assert(offsetof(PlayerBase_C_SetLegIKEnable, Enable) == 0x000000, "Member 'PlayerBase_C_SetLegIKEnable::Enable' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_SetLegIKEnable, Immediately) == 0x000001, "Member 'PlayerBase_C_SetLegIKEnable::Immediately' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.Notify_Attacking
// 0x0001 (0x0001 - 0x0000)
struct PlayerBase_C_Notify_Attacking final
{
public:
	bool                                          Param_bAttacking;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_Notify_Attacking) == 0x000001, "Wrong alignment on PlayerBase_C_Notify_Attacking");
static_assert(sizeof(PlayerBase_C_Notify_Attacking) == 0x000001, "Wrong size on PlayerBase_C_Notify_Attacking");
static_assert(offsetof(PlayerBase_C_Notify_Attacking, Param_bAttacking) == 0x000000, "Member 'PlayerBase_C_Notify_Attacking::Param_bAttacking' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.Notify_ForceEnableMovementInput
// 0x0008 (0x0008 - 0x0000)
struct PlayerBase_C_Notify_ForceEnableMovementInput final
{
public:
	float                                         EnableTime;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMovement;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRotate;                                           // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_Notify_ForceEnableMovementInput) == 0x000004, "Wrong alignment on PlayerBase_C_Notify_ForceEnableMovementInput");
static_assert(sizeof(PlayerBase_C_Notify_ForceEnableMovementInput) == 0x000008, "Wrong size on PlayerBase_C_Notify_ForceEnableMovementInput");
static_assert(offsetof(PlayerBase_C_Notify_ForceEnableMovementInput, EnableTime) == 0x000000, "Member 'PlayerBase_C_Notify_ForceEnableMovementInput::EnableTime' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_Notify_ForceEnableMovementInput, bMovement) == 0x000004, "Member 'PlayerBase_C_Notify_ForceEnableMovementInput::bMovement' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_Notify_ForceEnableMovementInput, bRotate) == 0x000005, "Member 'PlayerBase_C_Notify_ForceEnableMovementInput::bRotate' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.ReceiveUnpossessed
// 0x0008 (0x0008 - 0x0000)
struct PlayerBase_C_ReceiveUnpossessed final
{
public:
	class AController*                            OldController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_ReceiveUnpossessed) == 0x000008, "Wrong alignment on PlayerBase_C_ReceiveUnpossessed");
static_assert(sizeof(PlayerBase_C_ReceiveUnpossessed) == 0x000008, "Wrong size on PlayerBase_C_ReceiveUnpossessed");
static_assert(offsetof(PlayerBase_C_ReceiveUnpossessed, OldController) == 0x000000, "Member 'PlayerBase_C_ReceiveUnpossessed::OldController' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct PlayerBase_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_ReceivePossessed) == 0x000008, "Wrong alignment on PlayerBase_C_ReceivePossessed");
static_assert(sizeof(PlayerBase_C_ReceivePossessed) == 0x000008, "Wrong size on PlayerBase_C_ReceivePossessed");
static_assert(offsetof(PlayerBase_C_ReceivePossessed, NewController) == 0x000000, "Member 'PlayerBase_C_ReceivePossessed::NewController' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.SetCharaPlayRate
// 0x0004 (0x0004 - 0x0000)
struct PlayerBase_C_SetCharaPlayRate final
{
public:
	float                                         CharaPlayRate;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_SetCharaPlayRate) == 0x000004, "Wrong alignment on PlayerBase_C_SetCharaPlayRate");
static_assert(sizeof(PlayerBase_C_SetCharaPlayRate) == 0x000004, "Wrong size on PlayerBase_C_SetCharaPlayRate");
static_assert(offsetof(PlayerBase_C_SetCharaPlayRate, CharaPlayRate) == 0x000000, "Member 'PlayerBase_C_SetCharaPlayRate::CharaPlayRate' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.UpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct PlayerBase_C_UpdateAnimation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_UpdateAnimation) == 0x000004, "Wrong alignment on PlayerBase_C_UpdateAnimation");
static_assert(sizeof(PlayerBase_C_UpdateAnimation) == 0x000004, "Wrong size on PlayerBase_C_UpdateAnimation");
static_assert(offsetof(PlayerBase_C_UpdateAnimation, DeltaTime) == 0x000000, "Member 'PlayerBase_C_UpdateAnimation::DeltaTime' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.DeathAction
// 0x0008 (0x0008 - 0x0000)
struct PlayerBase_C_DeathAction final
{
public:
	uint8                                         InOption;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DeadTimingOverride;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12DF[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeadTiming;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_DeathAction) == 0x000004, "Wrong alignment on PlayerBase_C_DeathAction");
static_assert(sizeof(PlayerBase_C_DeathAction) == 0x000008, "Wrong size on PlayerBase_C_DeathAction");
static_assert(offsetof(PlayerBase_C_DeathAction, InOption) == 0x000000, "Member 'PlayerBase_C_DeathAction::InOption' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DeathAction, DeadTimingOverride) == 0x000001, "Member 'PlayerBase_C_DeathAction::DeadTimingOverride' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DeathAction, DeadTiming) == 0x000004, "Member 'PlayerBase_C_DeathAction::DeadTiming' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PlayerBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_ReceiveTick) == 0x000004, "Wrong alignment on PlayerBase_C_ReceiveTick");
static_assert(sizeof(PlayerBase_C_ReceiveTick) == 0x000004, "Wrong size on PlayerBase_C_ReceiveTick");
static_assert(offsetof(PlayerBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PlayerBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.TickWaterSurface
// 0x0004 (0x0004 - 0x0000)
struct PlayerBase_C_TickWaterSurface final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_TickWaterSurface) == 0x000004, "Wrong alignment on PlayerBase_C_TickWaterSurface");
static_assert(sizeof(PlayerBase_C_TickWaterSurface) == 0x000004, "Wrong size on PlayerBase_C_TickWaterSurface");
static_assert(offsetof(PlayerBase_C_TickWaterSurface, DeltaSeconds) == 0x000000, "Member 'PlayerBase_C_TickWaterSurface::DeltaSeconds' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E0[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'PlayerBase_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.OnLanding_FootStamp
// 0x0004 (0x0004 - 0x0000)
struct PlayerBase_C_OnLanding_FootStamp final
{
public:
	float                                         LandingHeight;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_OnLanding_FootStamp) == 0x000004, "Wrong alignment on PlayerBase_C_OnLanding_FootStamp");
static_assert(sizeof(PlayerBase_C_OnLanding_FootStamp) == 0x000004, "Wrong size on PlayerBase_C_OnLanding_FootStamp");
static_assert(offsetof(PlayerBase_C_OnLanding_FootStamp, LandingHeight) == 0x000000, "Member 'PlayerBase_C_OnLanding_FootStamp::LandingHeight' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.SetEnableFootStamp
// 0x0001 (0x0001 - 0x0000)
struct PlayerBase_C_SetEnableFootStamp final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_SetEnableFootStamp) == 0x000001, "Wrong alignment on PlayerBase_C_SetEnableFootStamp");
static_assert(sizeof(PlayerBase_C_SetEnableFootStamp) == 0x000001, "Wrong size on PlayerBase_C_SetEnableFootStamp");
static_assert(offsetof(PlayerBase_C_SetEnableFootStamp, bEnable) == 0x000000, "Member 'PlayerBase_C_SetEnableFootStamp::bEnable' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.OnFootGrounding
// 0x0020 (0x0020 - 0x0000)
struct PlayerBase_C_OnFootGrounding final
{
public:
	bool                                          bLeftFoot;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSlip;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E1[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_OnFootGrounding) == 0x000004, "Wrong alignment on PlayerBase_C_OnFootGrounding");
static_assert(sizeof(PlayerBase_C_OnFootGrounding) == 0x000020, "Wrong size on PlayerBase_C_OnFootGrounding");
static_assert(offsetof(PlayerBase_C_OnFootGrounding, bLeftFoot) == 0x000000, "Member 'PlayerBase_C_OnFootGrounding::bLeftFoot' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_OnFootGrounding, bSlip) == 0x000001, "Member 'PlayerBase_C_OnFootGrounding::bSlip' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_OnFootGrounding, Location) == 0x000004, "Member 'PlayerBase_C_OnFootGrounding::Location' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_OnFootGrounding, Normal) == 0x000010, "Member 'PlayerBase_C_OnFootGrounding::Normal' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_OnFootGrounding, SurfaceType) == 0x00001C, "Member 'PlayerBase_C_OnFootGrounding::SurfaceType' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.Notify_WalkBrakeTrigger
// 0x0004 (0x0004 - 0x0000)
struct PlayerBase_C_Notify_WalkBrakeTrigger final
{
public:
	bool                                          bLeft_1;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLeft_2;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRight_1;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bRight_2;                                          // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_Notify_WalkBrakeTrigger) == 0x000001, "Wrong alignment on PlayerBase_C_Notify_WalkBrakeTrigger");
static_assert(sizeof(PlayerBase_C_Notify_WalkBrakeTrigger) == 0x000004, "Wrong size on PlayerBase_C_Notify_WalkBrakeTrigger");
static_assert(offsetof(PlayerBase_C_Notify_WalkBrakeTrigger, bLeft_1) == 0x000000, "Member 'PlayerBase_C_Notify_WalkBrakeTrigger::bLeft_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_Notify_WalkBrakeTrigger, bLeft_2) == 0x000001, "Member 'PlayerBase_C_Notify_WalkBrakeTrigger::bLeft_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_Notify_WalkBrakeTrigger, bRight_1) == 0x000002, "Member 'PlayerBase_C_Notify_WalkBrakeTrigger::bRight_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_Notify_WalkBrakeTrigger, bRight_2) == 0x000003, "Member 'PlayerBase_C_Notify_WalkBrakeTrigger::bRight_2' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.OnGimmickBlown
// 0x000C (0x000C - 0x0000)
struct PlayerBase_C_OnGimmickBlown final
{
public:
	struct FVector                                ForwardVector;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_OnGimmickBlown) == 0x000004, "Wrong alignment on PlayerBase_C_OnGimmickBlown");
static_assert(sizeof(PlayerBase_C_OnGimmickBlown) == 0x00000C, "Wrong size on PlayerBase_C_OnGimmickBlown");
static_assert(offsetof(PlayerBase_C_OnGimmickBlown, ForwardVector) == 0x000000, "Member 'PlayerBase_C_OnGimmickBlown::ForwardVector' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.Notify_BeginAttackTrail
// 0x0018 (0x0018 - 0x0000)
struct PlayerBase_C_Notify_BeginAttackTrail final
{
public:
	class UParticleSystem*                        Template;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FirstSocket;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SecondSocket;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_Notify_BeginAttackTrail) == 0x000008, "Wrong alignment on PlayerBase_C_Notify_BeginAttackTrail");
static_assert(sizeof(PlayerBase_C_Notify_BeginAttackTrail) == 0x000018, "Wrong size on PlayerBase_C_Notify_BeginAttackTrail");
static_assert(offsetof(PlayerBase_C_Notify_BeginAttackTrail, Template) == 0x000000, "Member 'PlayerBase_C_Notify_BeginAttackTrail::Template' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_Notify_BeginAttackTrail, FirstSocket) == 0x000008, "Member 'PlayerBase_C_Notify_BeginAttackTrail::FirstSocket' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_Notify_BeginAttackTrail, SecondSocket) == 0x000010, "Member 'PlayerBase_C_Notify_BeginAttackTrail::SecondSocket' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.Notify_SetAcceptableCancelAttack
// 0x0001 (0x0001 - 0x0000)
struct PlayerBase_C_Notify_SetAcceptableCancelAttack final
{
public:
	bool                                          bAcceptable;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_Notify_SetAcceptableCancelAttack) == 0x000001, "Wrong alignment on PlayerBase_C_Notify_SetAcceptableCancelAttack");
static_assert(sizeof(PlayerBase_C_Notify_SetAcceptableCancelAttack) == 0x000001, "Wrong size on PlayerBase_C_Notify_SetAcceptableCancelAttack");
static_assert(offsetof(PlayerBase_C_Notify_SetAcceptableCancelAttack, bAcceptable) == 0x000000, "Member 'PlayerBase_C_Notify_SetAcceptableCancelAttack::bAcceptable' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.PostUpdateAnimation
// 0x00A8 (0x00A8 - 0x0000)
struct PlayerBase_C_PostUpdateAnimation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PLAYER_MOVEMENT_STATE                       CallFunc_GetMovementState_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E2[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastInputVector_ReturnValue;           // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12E3[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Player_AnimBP_C>  K2Node_DynamicCast_AsBPI_Player_Anim_BP;           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E4[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_AnimBP_C>  K2Node_DynamicCast_AsBPI_Player_Anim_BP_1;         // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E5[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Player_AnimBP_C>  K2Node_DynamicCast_AsBPI_Player_Anim_BP_2;         // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E6[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_PostUpdateAnimation) == 0x000008, "Wrong alignment on PlayerBase_C_PostUpdateAnimation");
static_assert(sizeof(PlayerBase_C_PostUpdateAnimation) == 0x0000A8, "Wrong size on PlayerBase_C_PostUpdateAnimation");
static_assert(offsetof(PlayerBase_C_PostUpdateAnimation, DeltaTime) == 0x000000, "Member 'PlayerBase_C_PostUpdateAnimation::DeltaTime' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PostUpdateAnimation, CallFunc_GetMovementState_ReturnValue) == 0x000004, "Member 'PlayerBase_C_PostUpdateAnimation::CallFunc_GetMovementState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PostUpdateAnimation, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'PlayerBase_C_PostUpdateAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PostUpdateAnimation, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000008, "Member 'PlayerBase_C_PostUpdateAnimation::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PostUpdateAnimation, CallFunc_NegateRotator_ReturnValue) == 0x000014, "Member 'PlayerBase_C_PostUpdateAnimation::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PostUpdateAnimation, CallFunc_GetAnimInstance_ReturnValue) == 0x000020, "Member 'PlayerBase_C_PostUpdateAnimation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PostUpdateAnimation, CallFunc_GetLastInputVector_ReturnValue) == 0x000028, "Member 'PlayerBase_C_PostUpdateAnimation::CallFunc_GetLastInputVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PostUpdateAnimation, K2Node_DynamicCast_AsBPI_Player_Anim_BP) == 0x000038, "Member 'PlayerBase_C_PostUpdateAnimation::K2Node_DynamicCast_AsBPI_Player_Anim_BP' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PostUpdateAnimation, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'PlayerBase_C_PostUpdateAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PostUpdateAnimation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00004C, "Member 'PlayerBase_C_PostUpdateAnimation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PostUpdateAnimation, K2Node_DynamicCast_AsBPI_Player_Anim_BP_1) == 0x000058, "Member 'PlayerBase_C_PostUpdateAnimation::K2Node_DynamicCast_AsBPI_Player_Anim_BP_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PostUpdateAnimation, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'PlayerBase_C_PostUpdateAnimation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PostUpdateAnimation, K2Node_DynamicCast_AsBPI_Player_Anim_BP_2) == 0x000070, "Member 'PlayerBase_C_PostUpdateAnimation::K2Node_DynamicCast_AsBPI_Player_Anim_BP_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PostUpdateAnimation, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'PlayerBase_C_PostUpdateAnimation::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PostUpdateAnimation, CallFunc_ComposeRotators_ReturnValue) == 0x000084, "Member 'PlayerBase_C_PostUpdateAnimation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PostUpdateAnimation, CallFunc_ComposeRotators_ReturnValue_1) == 0x000090, "Member 'PlayerBase_C_PostUpdateAnimation::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PostUpdateAnimation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x00009C, "Member 'PlayerBase_C_PostUpdateAnimation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.TickGaze
// 0x0248 (0x0248 - 0x0000)
struct PlayerBase_C_TickGaze final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12E7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            CV_GazePerVelocity;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetDirection;                                   // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TargetGaze;                                        // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12E8[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue; // 0x0028(0x00D0)()
	class UGazeTargetHolder*                      CallFunc_GetGazeTargetHolder_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetDebugGazeEnabled_ReturnValue;          // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsMovingOnGround_IsMovingOnGround;     // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12E9[0x1];                                     // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindGazeTargetFromPawn_OutLocation;       // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGazeTargetFromPawn_ReturnValue;       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12EA[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x012C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x014F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12EB[0x2];                                     // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12EC[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Vector2DInterpTo_Constant_ReturnValue;    // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_5;                        // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_5;                        // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12ED[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12EE[0x3];                                     // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12EF[0x3];                                     // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0224(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_TickGaze) == 0x000008, "Wrong alignment on PlayerBase_C_TickGaze");
static_assert(sizeof(PlayerBase_C_TickGaze) == 0x000248, "Wrong size on PlayerBase_C_TickGaze");
static_assert(offsetof(PlayerBase_C_TickGaze, DeltaSeconds) == 0x000000, "Member 'PlayerBase_C_TickGaze::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CV_GazePerVelocity) == 0x000008, "Member 'PlayerBase_C_TickGaze::CV_GazePerVelocity' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, TargetDirection) == 0x000010, "Member 'PlayerBase_C_TickGaze::TargetDirection' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, TargetGaze) == 0x00001C, "Member 'PlayerBase_C_TickGaze::TargetGaze' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue) == 0x000028, "Member 'PlayerBase_C_TickGaze::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_GetGazeTargetHolder_ReturnValue) == 0x0000F8, "Member 'PlayerBase_C_TickGaze::CallFunc_GetGazeTargetHolder_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Conv_IntToBool_ReturnValue) == 0x000100, "Member 'PlayerBase_C_TickGaze::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_GetDebugGazeEnabled_ReturnValue) == 0x000101, "Member 'PlayerBase_C_TickGaze::CallFunc_GetDebugGazeEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_GetIsMovingOnGround_IsMovingOnGround) == 0x000102, "Member 'PlayerBase_C_TickGaze::CallFunc_GetIsMovingOnGround_IsMovingOnGround' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BreakVector2D_X) == 0x000104, "Member 'PlayerBase_C_TickGaze::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BreakVector2D_Y) == 0x000108, "Member 'PlayerBase_C_TickGaze::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_FindGazeTargetFromPawn_OutLocation) == 0x00010C, "Member 'PlayerBase_C_TickGaze::CallFunc_FindGazeTargetFromPawn_OutLocation' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_FindGazeTargetFromPawn_ReturnValue) == 0x000118, "Member 'PlayerBase_C_TickGaze::CallFunc_FindGazeTargetFromPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BreakVector2D_X_1) == 0x00011C, "Member 'PlayerBase_C_TickGaze::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BreakVector2D_Y_1) == 0x000120, "Member 'PlayerBase_C_TickGaze::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BreakVector2D_X_2) == 0x000124, "Member 'PlayerBase_C_TickGaze::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BreakVector2D_Y_2) == 0x000128, "Member 'PlayerBase_C_TickGaze::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_MakeVector2D_ReturnValue) == 0x00012C, "Member 'PlayerBase_C_TickGaze::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_MakeVector2D_ReturnValue_1) == 0x000134, "Member 'PlayerBase_C_TickGaze::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BreakVector2D_X_3) == 0x00013C, "Member 'PlayerBase_C_TickGaze::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BreakVector2D_Y_3) == 0x000140, "Member 'PlayerBase_C_TickGaze::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BreakVector2D_X_4) == 0x000144, "Member 'PlayerBase_C_TickGaze::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BreakVector2D_Y_4) == 0x000148, "Member 'PlayerBase_C_TickGaze::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00014C, "Member 'PlayerBase_C_TickGaze::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Less_FloatFloat_ReturnValue) == 0x00014D, "Member 'PlayerBase_C_TickGaze::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00014E, "Member 'PlayerBase_C_TickGaze::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BooleanAND_ReturnValue) == 0x00014F, "Member 'PlayerBase_C_TickGaze::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000150, "Member 'PlayerBase_C_TickGaze::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BooleanAND_ReturnValue_1) == 0x000151, "Member 'PlayerBase_C_TickGaze::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BreakVector_X) == 0x000154, "Member 'PlayerBase_C_TickGaze::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BreakVector_Y) == 0x000158, "Member 'PlayerBase_C_TickGaze::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BreakVector_Z) == 0x00015C, "Member 'PlayerBase_C_TickGaze::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Abs_ReturnValue) == 0x000160, "Member 'PlayerBase_C_TickGaze::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000164, "Member 'PlayerBase_C_TickGaze::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Vector2DInterpTo_Constant_ReturnValue) == 0x000168, "Member 'PlayerBase_C_TickGaze::CallFunc_Vector2DInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_GetSocketLocation_ReturnValue) == 0x000170, "Member 'PlayerBase_C_TickGaze::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00017C, "Member 'PlayerBase_C_TickGaze::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Normal_ReturnValue) == 0x000188, "Member 'PlayerBase_C_TickGaze::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BreakVector2D_X_5) == 0x000194, "Member 'PlayerBase_C_TickGaze::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BreakVector2D_Y_5) == 0x000198, "Member 'PlayerBase_C_TickGaze::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_GetFloatValue_ReturnValue) == 0x00019C, "Member 'PlayerBase_C_TickGaze::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0001A0, "Member 'PlayerBase_C_TickGaze::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_VSize_ReturnValue) == 0x0001A4, "Member 'PlayerBase_C_TickGaze::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001A8, "Member 'PlayerBase_C_TickGaze::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_GetFloatValue_ReturnValue_1) == 0x0001AC, "Member 'PlayerBase_C_TickGaze::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001B0, "Member 'PlayerBase_C_TickGaze::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_FClamp_ReturnValue) == 0x0001B4, "Member 'PlayerBase_C_TickGaze::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0001B8, "Member 'PlayerBase_C_TickGaze::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_GetActorForwardVector_ReturnValue) == 0x0001BC, "Member 'PlayerBase_C_TickGaze::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_FClamp_ReturnValue_1) == 0x0001C8, "Member 'PlayerBase_C_TickGaze::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_GetActorUpVector_ReturnValue) == 0x0001CC, "Member 'PlayerBase_C_TickGaze::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_MakeVector2D_ReturnValue_2) == 0x0001D8, "Member 'PlayerBase_C_TickGaze::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Dot_VectorVector_ReturnValue) == 0x0001E0, "Member 'PlayerBase_C_TickGaze::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0001E4, "Member 'PlayerBase_C_TickGaze::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0001E8, "Member 'PlayerBase_C_TickGaze::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_GetActorRightVector_ReturnValue) == 0x0001EC, "Member 'PlayerBase_C_TickGaze::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x0001F8, "Member 'PlayerBase_C_TickGaze::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x000204, "Member 'PlayerBase_C_TickGaze::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000208, "Member 'PlayerBase_C_TickGaze::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x00020C, "Member 'PlayerBase_C_TickGaze::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000210, "Member 'PlayerBase_C_TickGaze::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_SelectFloat_ReturnValue) == 0x000214, "Member 'PlayerBase_C_TickGaze::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000218, "Member 'PlayerBase_C_TickGaze::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_SelectFloat_ReturnValue_1) == 0x00021C, "Member 'PlayerBase_C_TickGaze::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_FClamp_ReturnValue_2) == 0x000220, "Member 'PlayerBase_C_TickGaze::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_MakeVector2D_ReturnValue_3) == 0x000224, "Member 'PlayerBase_C_TickGaze::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00022C, "Member 'PlayerBase_C_TickGaze::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000230, "Member 'PlayerBase_C_TickGaze::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000234, "Member 'PlayerBase_C_TickGaze::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_MakeVector2D_ReturnValue_4) == 0x000238, "Member 'PlayerBase_C_TickGaze::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BooleanAND_ReturnValue_2) == 0x000240, "Member 'PlayerBase_C_TickGaze::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickGaze, CallFunc_BooleanAND_ReturnValue_3) == 0x000241, "Member 'PlayerBase_C_TickGaze::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.TickWalkRun
// 0x0008 (0x0008 - 0x0000)
struct PlayerBase_C_TickWalkRun final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetVelocityMax;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_TickWalkRun) == 0x000004, "Wrong alignment on PlayerBase_C_TickWalkRun");
static_assert(sizeof(PlayerBase_C_TickWalkRun) == 0x000008, "Wrong size on PlayerBase_C_TickWalkRun");
static_assert(offsetof(PlayerBase_C_TickWalkRun, DeltaSeconds) == 0x000000, "Member 'PlayerBase_C_TickWalkRun::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickWalkRun, TargetVelocityMax) == 0x000004, "Member 'PlayerBase_C_TickWalkRun::TargetVelocityMax' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.SetPausePlayer
// 0x0018 (0x0018 - 0x0000)
struct PlayerBase_C_SetPausePlayer final
{
public:
	bool                                          bPause;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12F0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_SetPausePlayer) == 0x000008, "Wrong alignment on PlayerBase_C_SetPausePlayer");
static_assert(sizeof(PlayerBase_C_SetPausePlayer) == 0x000018, "Wrong size on PlayerBase_C_SetPausePlayer");
static_assert(offsetof(PlayerBase_C_SetPausePlayer, bPause) == 0x000000, "Member 'PlayerBase_C_SetPausePlayer::bPause' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_SetPausePlayer, CallFunc_Get_ReturnValue) == 0x000008, "Member 'PlayerBase_C_SetPausePlayer::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_SetPausePlayer, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'PlayerBase_C_SetPausePlayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.TickBadStatus
// 0x0140 (0x0140 - 0x0000)
struct PlayerBase_C_TickBadStatus final
{
public:
	E_PLAYER_TYPE                                 PlayerType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12F1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharData                              CallFunc_GetPlayerData_ReturnValue;                // 0x0008(0x0130)(ConstParm)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_TickBadStatus) == 0x000008, "Wrong alignment on PlayerBase_C_TickBadStatus");
static_assert(sizeof(PlayerBase_C_TickBadStatus) == 0x000140, "Wrong size on PlayerBase_C_TickBadStatus");
static_assert(offsetof(PlayerBase_C_TickBadStatus, PlayerType) == 0x000000, "Member 'PlayerBase_C_TickBadStatus::PlayerType' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickBadStatus, CallFunc_GetPlayerData_ReturnValue) == 0x000008, "Member 'PlayerBase_C_TickBadStatus::CallFunc_GetPlayerData_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickBadStatus, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000138, "Member 'PlayerBase_C_TickBadStatus::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.UpdateSink
// 0x0028 (0x0028 - 0x0000)
struct PlayerBase_C_UpdateSink final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12F2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCharaSinkTesterInterface_C*>    Array;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                Offset;                                            // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_UpdateSink) == 0x000008, "Wrong alignment on PlayerBase_C_UpdateSink");
static_assert(sizeof(PlayerBase_C_UpdateSink) == 0x000028, "Wrong size on PlayerBase_C_UpdateSink");
static_assert(offsetof(PlayerBase_C_UpdateSink, DeltaTime) == 0x000000, "Member 'PlayerBase_C_UpdateSink::DeltaTime' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_UpdateSink, Array) == 0x000008, "Member 'PlayerBase_C_UpdateSink::Array' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_UpdateSink, Offset) == 0x000018, "Member 'PlayerBase_C_UpdateSink::Offset' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.TickLanding
// 0x0028 (0x0028 - 0x0000)
struct PlayerBase_C_TickLanding final
{
public:
	bool                                          CallFunc_GetIsMovingOnGround_IsMovingOnGround;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12F3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_AnimBP_C>  K2Node_DynamicCast_AsBPI_Player_Anim_BP;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12F4[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetJumpHeight_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_TickLanding) == 0x000008, "Wrong alignment on PlayerBase_C_TickLanding");
static_assert(sizeof(PlayerBase_C_TickLanding) == 0x000028, "Wrong size on PlayerBase_C_TickLanding");
static_assert(offsetof(PlayerBase_C_TickLanding, CallFunc_GetIsMovingOnGround_IsMovingOnGround) == 0x000000, "Member 'PlayerBase_C_TickLanding::CallFunc_GetIsMovingOnGround_IsMovingOnGround' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickLanding, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'PlayerBase_C_TickLanding::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickLanding, K2Node_DynamicCast_AsBPI_Player_Anim_BP) == 0x000010, "Member 'PlayerBase_C_TickLanding::K2Node_DynamicCast_AsBPI_Player_Anim_BP' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickLanding, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PlayerBase_C_TickLanding::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickLanding, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'PlayerBase_C_TickLanding::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickLanding, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'PlayerBase_C_TickLanding::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickLanding, CallFunc_GetJumpHeight_ReturnValue) == 0x000024, "Member 'PlayerBase_C_TickLanding::CallFunc_GetJumpHeight_ReturnValue' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.IsAttackable
// 0x0006 (0x0006 - 0x0000)
struct PlayerBase_C_IsAttackable final
{
public:
	bool                                          bAttackable;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsMovingOnGround_IsMovingOnGround;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsJumping_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_IsAttackable) == 0x000001, "Wrong alignment on PlayerBase_C_IsAttackable");
static_assert(sizeof(PlayerBase_C_IsAttackable) == 0x000006, "Wrong size on PlayerBase_C_IsAttackable");
static_assert(offsetof(PlayerBase_C_IsAttackable, bAttackable) == 0x000000, "Member 'PlayerBase_C_IsAttackable::bAttackable' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_IsAttackable, CallFunc_GetIsMovingOnGround_IsMovingOnGround) == 0x000001, "Member 'PlayerBase_C_IsAttackable::CallFunc_GetIsMovingOnGround_IsMovingOnGround' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_IsAttackable, CallFunc_IsJumping_ReturnValue) == 0x000002, "Member 'PlayerBase_C_IsAttackable::CallFunc_IsJumping_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_IsAttackable, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'PlayerBase_C_IsAttackable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_IsAttackable, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'PlayerBase_C_IsAttackable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_IsAttackable, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'PlayerBase_C_IsAttackable::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.TickCameraOffset
// 0x04A0 (0x04A0 - 0x0000)
struct PlayerBase_C_TickCameraOffset final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_CameraOffsetInterpSpeed;                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForwardOffset;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12F5[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12F6[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12F7[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0048(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x00E4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12F8[0x3];                                     // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12F9[0x2];                                     // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0184(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x020C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetMovementSpeed_ReturnValue;             // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12FA[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12FB[0x3];                                     // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12FC[0x3];                                     // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12FD[0x3];                                     // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0310(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12FE[0x8];                                     // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0330(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0360(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x03E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistance_ReturnValue;                  // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_2;                  // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x040C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x0418(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PlayerBase_C_TickCameraOffset) == 0x000010, "Wrong alignment on PlayerBase_C_TickCameraOffset");
static_assert(sizeof(PlayerBase_C_TickCameraOffset) == 0x0004A0, "Wrong size on PlayerBase_C_TickCameraOffset");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, DeltaSeconds) == 0x000000, "Member 'PlayerBase_C_TickCameraOffset::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, L_CameraOffsetInterpSpeed) == 0x000004, "Member 'PlayerBase_C_TickCameraOffset::L_CameraOffsetInterpSpeed' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, ForwardOffset) == 0x000008, "Member 'PlayerBase_C_TickCameraOffset::ForwardOffset' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_IsValid_ReturnValue_1) == 0x00000D, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_BreakVector_X) == 0x000010, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_BreakVector_Y) == 0x000014, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_BreakVector_Z) == 0x000018, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_MakeVector_ReturnValue) == 0x00001C, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_GetActorForwardVector_ReturnValue) == 0x000028, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_BreakVector_X_1) == 0x000038, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_BreakVector_Y_1) == 0x00003C, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_BreakVector_Z_1) == 0x000040, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, Temp_object_Variable) == 0x000048, "Member 'PlayerBase_C_TickCameraOffset::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, Temp_float_Variable) == 0x00005C, "Member 'PlayerBase_C_TickCameraOffset::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000060, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000068, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_Dot_VectorVector_ReturnValue) == 0x000074, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_MakeVector_ReturnValue_1) == 0x000078, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_Abs_ReturnValue) == 0x000084, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000088, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_MakeVector_ReturnValue_2) == 0x00008C, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000098, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00009C, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_GetAttachParent_ReturnValue) == 0x0000A8, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000B0, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000BC, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C8, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D4, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000E0, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_SphereTraceSingle_OutHit) == 0x0000E4, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_SphereTraceSingle_ReturnValue) == 0x00016C, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_FInterpTo_ReturnValue) == 0x000170, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_MakeVector_ReturnValue_3) == 0x000174, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, Temp_bool_Variable) == 0x000180, "Member 'PlayerBase_C_TickCameraOffset::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_IsMovingOnGround_ReturnValue) == 0x000181, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000184, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x00020C, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_GetMovementSpeed_ReturnValue) == 0x000294, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_GetMovementSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000298, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_GetFloatValue_ReturnValue) == 0x0002A0, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_GetFloatValue_ReturnValue_1) == 0x0002A4, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0002A8, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_SelectFloat_ReturnValue_1) == 0x0002AC, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0002B0, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0002B4, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0002B8, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_GetPlayerController_ReturnValue) == 0x0002C0, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_GetControlRotation_ReturnValue) == 0x0002C8, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_BreakRotator_Roll) == 0x0002D4, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_BreakRotator_Pitch) == 0x0002D8, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_BreakRotator_Yaw) == 0x0002DC, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0002E0, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0002E4, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0002E8, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_FClamp_ReturnValue) == 0x0002EC, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0002F0, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0002F4, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_BooleanAND_ReturnValue_1) == 0x0002F8, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, K2Node_Select_Default) == 0x0002FC, "Member 'PlayerBase_C_TickCameraOffset::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_BreakVector_X_2) == 0x000300, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_BreakVector_Y_2) == 0x000304, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_BreakVector_Z_2) == 0x000308, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_FInterpTo_ReturnValue_1) == 0x00030C, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_MakeVector_ReturnValue_4) == 0x000310, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00031C, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_MakeTransform_ReturnValue) == 0x000330, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000360, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0003E8, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_GetDistance_ReturnValue) == 0x0003F4, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_GetDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0003F8, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_Lerp_ReturnValue) == 0x0003FC, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_FClamp_ReturnValue_1) == 0x000400, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_SelectFloat_ReturnValue_2) == 0x000404, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_FInterpTo_ReturnValue_2) == 0x000408, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_MakeVector_ReturnValue_5) == 0x00040C, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraOffset, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x000418, "Member 'PlayerBase_C_TickCameraOffset::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.TickCameraLag
// 0x0010 (0x0010 - 0x0000)
struct PlayerBase_C_TickCameraLag final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsMovingOnGround_IsMovingOnGround;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12FF[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_TickCameraLag) == 0x000004, "Wrong alignment on PlayerBase_C_TickCameraLag");
static_assert(sizeof(PlayerBase_C_TickCameraLag) == 0x000010, "Wrong size on PlayerBase_C_TickCameraLag");
static_assert(offsetof(PlayerBase_C_TickCameraLag, DeltaTime) == 0x000000, "Member 'PlayerBase_C_TickCameraLag::DeltaTime' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraLag, CallFunc_GetIsMovingOnGround_IsMovingOnGround) == 0x000004, "Member 'PlayerBase_C_TickCameraLag::CallFunc_GetIsMovingOnGround_IsMovingOnGround' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraLag, CallFunc_FInterpTo_ReturnValue) == 0x000008, "Member 'PlayerBase_C_TickCameraLag::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickCameraLag, CallFunc_FInterpTo_ReturnValue_1) == 0x00000C, "Member 'PlayerBase_C_TickCameraLag::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.PlayerCameraInit
// 0x0320 (0x0320 - 0x0000)
struct PlayerBase_C_PlayerCameraInit final
{
public:
	struct FCameraMapPresetData                   LCameraMapPreset;                                  // 0x0000(0x0034)(Edit, BlueprintVisible, NoDestructor)
	uint8                                         Pad_1300[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue; // 0x0038(0x00D0)()
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1301[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1302[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1303[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1304[0x2];                                     // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCameraMapData                         CallFunc_GetCameraPresetData_CameraMapData;        // 0x0168(0x0044)(NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x01AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0240(0x0030)(IsPlainOldData, NoDestructor)
	E_OPTION_CONTENT_FOV_TYPE                     CallFunc_GetFOVType_ReturnValue;                   // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1305[0x3];                                     // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0274(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	E_OPTION_CONTENT_FOV_TYPE                     Temp_byte_Variable;                                // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1306[0x3];                                     // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraViewPresetData                  K2Node_Select_Default;                             // 0x0300(0x000C)(NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_PlayerCameraInit) == 0x000010, "Wrong alignment on PlayerBase_C_PlayerCameraInit");
static_assert(sizeof(PlayerBase_C_PlayerCameraInit) == 0x000320, "Wrong size on PlayerBase_C_PlayerCameraInit");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, LCameraMapPreset) == 0x000000, "Member 'PlayerBase_C_PlayerCameraInit::LCameraMapPreset' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue) == 0x000038, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_Conv_IntToBool_ReturnValue) == 0x000108, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00010C, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000110, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000114, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000118, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_MakeVector_ReturnValue) == 0x00011C, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000128, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_MakeTransform_ReturnValue) == 0x000130, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_BooleanOR_ReturnValue) == 0x000160, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_Greater_IntInt_ReturnValue) == 0x000161, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_GetMapID_ReturnValue) == 0x000164, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_GetCameraPresetData_CameraMapData) == 0x000168, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_GetCameraPresetData_CameraMapData' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0001AC, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_MakeVector_ReturnValue_1) == 0x000234, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_MakeTransform_ReturnValue_1) == 0x000240, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_GetFOVType_ReturnValue) == 0x000270, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_GetFOVType_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000274, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, Temp_byte_Variable) == 0x0002FC, "Member 'PlayerBase_C_PlayerCameraInit::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, K2Node_Select_Default) == 0x000300, "Member 'PlayerBase_C_PlayerCameraInit::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x00030C, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x000310, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_PlayerCameraInit, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x000314, "Member 'PlayerBase_C_PlayerCameraInit::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.GetFootStampState
// 0x0014 (0x0014 - 0x0000)
struct PlayerBase_C_GetFootStampState final
{
public:
	ECharaStampMovementState                      OutState;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsMovingOnGround_IsMovingOnGround;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDashing_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1307[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMovementSpeed_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_GetFootStampState) == 0x000004, "Wrong alignment on PlayerBase_C_GetFootStampState");
static_assert(sizeof(PlayerBase_C_GetFootStampState) == 0x000014, "Wrong size on PlayerBase_C_GetFootStampState");
static_assert(offsetof(PlayerBase_C_GetFootStampState, OutState) == 0x000000, "Member 'PlayerBase_C_GetFootStampState::OutState' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_GetFootStampState, CallFunc_GetIsMovingOnGround_IsMovingOnGround) == 0x000001, "Member 'PlayerBase_C_GetFootStampState::CallFunc_GetIsMovingOnGround_IsMovingOnGround' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_GetFootStampState, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'PlayerBase_C_GetFootStampState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_GetFootStampState, CallFunc_IsDashing_ReturnValue) == 0x000003, "Member 'PlayerBase_C_GetFootStampState::CallFunc_IsDashing_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_GetFootStampState, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'PlayerBase_C_GetFootStampState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_GetFootStampState, CallFunc_GetMovementSpeed_ReturnValue) == 0x000008, "Member 'PlayerBase_C_GetFootStampState::CallFunc_GetMovementSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_GetFootStampState, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'PlayerBase_C_GetFootStampState::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_GetFootStampState, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'PlayerBase_C_GetFootStampState::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.TickMoonAge
// 0x0030 (0x0030 - 0x0000)
struct PlayerBase_C_TickMoonAge final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1308[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectPlayerController_C*             K2Node_DynamicCast_AsProject_Player_Controller;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRootMotionPlaying_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProjectMoveInputIgnored_ReturnValue;    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1309[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLastMovementInputVector_ReturnValue;   // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_TickMoonAge) == 0x000008, "Wrong alignment on PlayerBase_C_TickMoonAge");
static_assert(sizeof(PlayerBase_C_TickMoonAge) == 0x000030, "Wrong size on PlayerBase_C_TickMoonAge");
static_assert(offsetof(PlayerBase_C_TickMoonAge, DeltaSeconds) == 0x000000, "Member 'PlayerBase_C_TickMoonAge::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickMoonAge, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'PlayerBase_C_TickMoonAge::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickMoonAge, K2Node_DynamicCast_AsProject_Player_Controller) == 0x000010, "Member 'PlayerBase_C_TickMoonAge::K2Node_DynamicCast_AsProject_Player_Controller' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickMoonAge, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PlayerBase_C_TickMoonAge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickMoonAge, CallFunc_IsRootMotionPlaying_ReturnValue) == 0x000019, "Member 'PlayerBase_C_TickMoonAge::CallFunc_IsRootMotionPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickMoonAge, CallFunc_IsProjectMoveInputIgnored_ReturnValue) == 0x00001A, "Member 'PlayerBase_C_TickMoonAge::CallFunc_IsProjectMoveInputIgnored_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickMoonAge, CallFunc_GetLastMovementInputVector_ReturnValue) == 0x00001C, "Member 'PlayerBase_C_TickMoonAge::CallFunc_GetLastMovementInputVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickMoonAge, CallFunc_VSize_ReturnValue) == 0x000028, "Member 'PlayerBase_C_TickMoonAge::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickMoonAge, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00002C, "Member 'PlayerBase_C_TickMoonAge::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_TickMoonAge, CallFunc_BooleanOR_ReturnValue) == 0x00002D, "Member 'PlayerBase_C_TickMoonAge::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.CheckPlayFootEffect
// 0x0018 (0x0018 - 0x0000)
struct PlayerBase_C_CheckPlayFootEffect final
{
public:
	bool                                          bPlay;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAutoPilotMoving_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_130A[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBgmScene                                     CallFunc_GetBGMScene_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_CheckPlayFootEffect) == 0x000008, "Wrong alignment on PlayerBase_C_CheckPlayFootEffect");
static_assert(sizeof(PlayerBase_C_CheckPlayFootEffect) == 0x000018, "Wrong size on PlayerBase_C_CheckPlayFootEffect");
static_assert(offsetof(PlayerBase_C_CheckPlayFootEffect, bPlay) == 0x000000, "Member 'PlayerBase_C_CheckPlayFootEffect::bPlay' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_CheckPlayFootEffect, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PlayerBase_C_CheckPlayFootEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_CheckPlayFootEffect, CallFunc_IsAutoPilotMoving_ReturnValue) == 0x000002, "Member 'PlayerBase_C_CheckPlayFootEffect::CallFunc_IsAutoPilotMoving_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_CheckPlayFootEffect, CallFunc_Get_ReturnValue) == 0x000008, "Member 'PlayerBase_C_CheckPlayFootEffect::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_CheckPlayFootEffect, CallFunc_GetBGMScene_ReturnValue) == 0x000010, "Member 'PlayerBase_C_CheckPlayFootEffect::CallFunc_GetBGMScene_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_CheckPlayFootEffect, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'PlayerBase_C_CheckPlayFootEffect::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_CheckPlayFootEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000012, "Member 'PlayerBase_C_CheckPlayFootEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_CheckPlayFootEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000013, "Member 'PlayerBase_C_CheckPlayFootEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_CheckPlayFootEffect, CallFunc_BooleanOR_ReturnValue) == 0x000014, "Member 'PlayerBase_C_CheckPlayFootEffect::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_CheckPlayFootEffect, CallFunc_BooleanOR_ReturnValue_1) == 0x000015, "Member 'PlayerBase_C_CheckPlayFootEffect::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.ConditionalAdjustPlayerCamera
// 0x0020 (0x0020 - 0x0000)
struct PlayerBase_C_ConditionalAdjustPlayerCamera final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_FADE_STATE                               CallFunc_ScreenTransition_getFadeState_outType;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_130B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_UI_FADE_STATE                               CallFunc_GetFadeState_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SendDiscardPlayerSpringArmLagRequest_Success; // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_ConditionalAdjustPlayerCamera) == 0x000008, "Wrong alignment on PlayerBase_C_ConditionalAdjustPlayerCamera");
static_assert(sizeof(PlayerBase_C_ConditionalAdjustPlayerCamera) == 0x000020, "Wrong size on PlayerBase_C_ConditionalAdjustPlayerCamera");
static_assert(offsetof(PlayerBase_C_ConditionalAdjustPlayerCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'PlayerBase_C_ConditionalAdjustPlayerCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ConditionalAdjustPlayerCamera, CallFunc_ScreenTransition_getFadeState_outType) == 0x000008, "Member 'PlayerBase_C_ConditionalAdjustPlayerCamera::CallFunc_ScreenTransition_getFadeState_outType' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ConditionalAdjustPlayerCamera, CallFunc_GetViewTarget_ReturnValue) == 0x000010, "Member 'PlayerBase_C_ConditionalAdjustPlayerCamera::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ConditionalAdjustPlayerCamera, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'PlayerBase_C_ConditionalAdjustPlayerCamera::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ConditionalAdjustPlayerCamera, CallFunc_GetFadeState_ReturnValue) == 0x000019, "Member 'PlayerBase_C_ConditionalAdjustPlayerCamera::CallFunc_GetFadeState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ConditionalAdjustPlayerCamera, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00001A, "Member 'PlayerBase_C_ConditionalAdjustPlayerCamera::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ConditionalAdjustPlayerCamera, K2Node_SwitchEnum_CmpSuccess_1) == 0x00001B, "Member 'PlayerBase_C_ConditionalAdjustPlayerCamera::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_ConditionalAdjustPlayerCamera, CallFunc_SendDiscardPlayerSpringArmLagRequest_Success) == 0x00001C, "Member 'PlayerBase_C_ConditionalAdjustPlayerCamera::CallFunc_SendDiscardPlayerSpringArmLagRequest_Success' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.DebugLogPlayerVisibility
// 0x0128 (0x0128 - 0x0000)
struct PlayerBase_C_DebugLogPlayerVisibility final
{
public:
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_130C[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentVisibility_IsVisible;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_130D[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_130E[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_1;        // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_DebugLogPlayerVisibility) == 0x000008, "Wrong alignment on PlayerBase_C_DebugLogPlayerVisibility");
static_assert(sizeof(PlayerBase_C_DebugLogPlayerVisibility) == 0x000128, "Wrong size on PlayerBase_C_DebugLogPlayerVisibility");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_GetVelocity_ReturnValue) == 0x000000, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_Conv_VectorToString_ReturnValue) == 0x000020, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_GetCurrentVisibility_IsVisible) == 0x000040, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_GetCurrentVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_Conv_BoolToString_ReturnValue) == 0x000058, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000068, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x000088, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_Conv_VectorToString_ReturnValue_1) == 0x000098, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_Conv_VectorToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000A8, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000B8, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000C8, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000D8, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000E8, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0000F8, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000108, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_DebugLogPlayerVisibility, CallFunc_MakeLiteralString_ReturnValue) == 0x000118, "Member 'PlayerBase_C_DebugLogPlayerVisibility::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.IsAutoRunning
// 0x0001 (0x0001 - 0x0000)
struct PlayerBase_C_IsAutoRunning final
{
public:
	bool                                          bAutoRunning;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_IsAutoRunning) == 0x000001, "Wrong alignment on PlayerBase_C_IsAutoRunning");
static_assert(sizeof(PlayerBase_C_IsAutoRunning) == 0x000001, "Wrong size on PlayerBase_C_IsAutoRunning");
static_assert(offsetof(PlayerBase_C_IsAutoRunning, bAutoRunning) == 0x000000, "Member 'PlayerBase_C_IsAutoRunning::bAutoRunning' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.Act_Death
// 0x0008 (0x0008 - 0x0000)
struct PlayerBase_C_Act_Death final
{
public:
	uint8                                         InOption;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DeadTimingOverride;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_130F[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeadTiming;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerBase_C_Act_Death) == 0x000004, "Wrong alignment on PlayerBase_C_Act_Death");
static_assert(sizeof(PlayerBase_C_Act_Death) == 0x000008, "Wrong size on PlayerBase_C_Act_Death");
static_assert(offsetof(PlayerBase_C_Act_Death, InOption) == 0x000000, "Member 'PlayerBase_C_Act_Death::InOption' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_Act_Death, DeadTimingOverride) == 0x000001, "Member 'PlayerBase_C_Act_Death::DeadTimingOverride' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_Act_Death, DeadTiming) == 0x000004, "Member 'PlayerBase_C_Act_Death::DeadTiming' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.GetMovementState
// 0x0004 (0x0004 - 0x0000)
struct PlayerBase_C_GetMovementState final
{
public:
	E_PLAYER_MOVEMENT_STATE                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsMovingOnGround_IsMovingOnGround;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsJumping_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEdgeGripping_ReturnValue;               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_GetMovementState) == 0x000001, "Wrong alignment on PlayerBase_C_GetMovementState");
static_assert(sizeof(PlayerBase_C_GetMovementState) == 0x000004, "Wrong size on PlayerBase_C_GetMovementState");
static_assert(offsetof(PlayerBase_C_GetMovementState, ReturnValue) == 0x000000, "Member 'PlayerBase_C_GetMovementState::ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_GetMovementState, CallFunc_GetIsMovingOnGround_IsMovingOnGround) == 0x000001, "Member 'PlayerBase_C_GetMovementState::CallFunc_GetIsMovingOnGround_IsMovingOnGround' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_GetMovementState, CallFunc_IsJumping_ReturnValue) == 0x000002, "Member 'PlayerBase_C_GetMovementState::CallFunc_IsJumping_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_GetMovementState, CallFunc_IsEdgeGripping_ReturnValue) == 0x000003, "Member 'PlayerBase_C_GetMovementState::CallFunc_IsEdgeGripping_ReturnValue' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.GetIsMovingOnGround
// 0x0002 (0x0002 - 0x0000)
struct PlayerBase_C_GetIsMovingOnGround final
{
public:
	bool                                          Param_IsMovingOnGround;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_GetIsMovingOnGround) == 0x000001, "Wrong alignment on PlayerBase_C_GetIsMovingOnGround");
static_assert(sizeof(PlayerBase_C_GetIsMovingOnGround) == 0x000002, "Wrong size on PlayerBase_C_GetIsMovingOnGround");
static_assert(offsetof(PlayerBase_C_GetIsMovingOnGround, Param_IsMovingOnGround) == 0x000000, "Member 'PlayerBase_C_GetIsMovingOnGround::Param_IsMovingOnGround' has a wrong offset!");
static_assert(offsetof(PlayerBase_C_GetIsMovingOnGround, CallFunc_IsMovingOnGround_ReturnValue) == 0x000001, "Member 'PlayerBase_C_GetIsMovingOnGround::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");

// Function PlayerBase.PlayerBase_C.IsDashing
// 0x0001 (0x0001 - 0x0000)
struct PlayerBase_C_IsDashing final
{
public:
	bool                                          bDashing;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerBase_C_IsDashing) == 0x000001, "Wrong alignment on PlayerBase_C_IsDashing");
static_assert(sizeof(PlayerBase_C_IsDashing) == 0x000001, "Wrong size on PlayerBase_C_IsDashing");
static_assert(offsetof(PlayerBase_C_IsDashing, bDashing) == 0x000000, "Member 'PlayerBase_C_IsDashing::bDashing' has a wrong offset!");

}

