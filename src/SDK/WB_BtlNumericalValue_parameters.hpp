#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_BtlNumericalValue

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Project_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.ExecuteUbergraph_WB_BtlNumericalValue
// 0x01E0 (0x01E0 - 0x0000)
struct WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delta;                                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2067[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x002C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Rate_1;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Immediately_1;                        // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2068[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USsPlayerWidget*                        CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_9;         // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_9;        // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_9;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_9;       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_8;         // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_8;        // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_8;        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_8;       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2069[0x2];                                     // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_7;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_7;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_7;        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_7;       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_6;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_6;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_6;        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_6;       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_2;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_3;                 // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_206A[0x2];                                     // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_5;         // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_5;        // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_5;        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_5;       // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_4;         // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_4;        // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_4;        // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_4;       // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_4;                 // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_5;                 // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_206B[0x2];                                     // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_3;         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_3;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_3;        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_3;       // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_6;                 // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_206C[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Rate;                                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Immediately;                          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_206D[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDigitLength_ReturnValue;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_206E[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_206F[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USsPlayerWidget*                        CallFunc_Array_Get_Item_1;                         // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2070[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USsPlayerWidget*                        CallFunc_Array_Get_Item_2;                         // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2071[0x3];                                     // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USsPlayerWidget*                        CallFunc_Array_Get_Item_3;                         // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2072[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_2;         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_2;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_2;        // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_2;       // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_1;         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_1;        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_1;        // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_1;       // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_7;                 // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_8;                 // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2073[0x2];                                     // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName;           // 0x01C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName;          // 0x01CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex;          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex;         // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_9;                 // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue) == 0x000008, "Wrong alignment on WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue");
static_assert(sizeof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue) == 0x0001E0, "Wrong size on WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, EntryPoint) == 0x000000, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, Temp_int_Variable) == 0x000008, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_Event_Delta) == 0x000024, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_Event_Delta' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_Event_IsDesignTime) == 0x000028, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_Event_MyGeometry) == 0x00002C, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_Event_InDeltaTime) == 0x000064, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_Event_Rate_1) == 0x000068, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_Event_Rate_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_Event_Immediately_1) == 0x00006C, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_Event_Immediately_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Array_Get_Item) == 0x000070, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Add_IntInt_ReturnValue_2) == 0x000078, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Add_IntInt_ReturnValue_3) == 0x000080, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackName_9) == 0x000084, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackName_9' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationName_9) == 0x00008C, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationName_9' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackIndex_9) == 0x000094, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackIndex_9' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationIndex_9) == 0x000098, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationIndex_9' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackName_8) == 0x00009C, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackName_8' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationName_8) == 0x0000A4, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationName_8' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackIndex_8) == 0x0000AC, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackIndex_8' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationIndex_8) == 0x0000B0, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationIndex_8' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_SwitchInteger_CmpSuccess) == 0x0000B4, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_SwitchInteger_CmpSuccess_1) == 0x0000B5, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackName_7) == 0x0000B8, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackName_7' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationName_7) == 0x0000C0, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationName_7' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackIndex_7) == 0x0000C8, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackIndex_7' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationIndex_7) == 0x0000CC, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationIndex_7' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackName_6) == 0x0000D0, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackName_6' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationName_6) == 0x0000D8, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationName_6' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackIndex_6) == 0x0000E0, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackIndex_6' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationIndex_6) == 0x0000E4, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationIndex_6' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_SwitchInteger_CmpSuccess_2) == 0x0000E8, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_SwitchInteger_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_SwitchInteger_CmpSuccess_3) == 0x0000E9, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_SwitchInteger_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackName_5) == 0x0000EC, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackName_5' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationName_5) == 0x0000F4, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationName_5' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackIndex_5) == 0x0000FC, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackIndex_5' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationIndex_5) == 0x000100, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationIndex_5' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackName_4) == 0x000104, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackName_4' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationName_4) == 0x00010C, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationName_4' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackIndex_4) == 0x000114, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackIndex_4' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationIndex_4) == 0x000118, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationIndex_4' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_SwitchInteger_CmpSuccess_4) == 0x00011C, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_SwitchInteger_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_SwitchInteger_CmpSuccess_5) == 0x00011D, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_SwitchInteger_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackName_3) == 0x000120, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackName_3' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationName_3) == 0x000128, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationName_3' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackIndex_3) == 0x000130, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackIndex_3' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationIndex_3) == 0x000134, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationIndex_3' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_SwitchInteger_CmpSuccess_6) == 0x000138, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_SwitchInteger_CmpSuccess_6' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_Event_Rate) == 0x00013C, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_Event_Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_Event_Immediately) == 0x000140, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_Event_Immediately' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_GetDigitLength_ReturnValue) == 0x000144, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_GetDigitLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Less_IntInt_ReturnValue) == 0x000148, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, Temp_int_Variable_1) == 0x00014C, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Subtract_IntInt_ReturnValue) == 0x000150, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Array_Get_Item_1) == 0x000158, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000160, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Array_Get_Item_2) == 0x000168, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Less_IntInt_ReturnValue_1) == 0x000174, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000178, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00017C, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Array_Get_Item_3) == 0x000180, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Array_Length_ReturnValue_1) == 0x000188, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, CallFunc_Less_IntInt_ReturnValue_2) == 0x00018C, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackName_2) == 0x000190, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackName_2' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationName_2) == 0x000198, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationName_2' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackIndex_2) == 0x0001A0, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackIndex_2' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationIndex_2) == 0x0001A4, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationIndex_2' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackName_1) == 0x0001A8, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackName_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationName_1) == 0x0001B0, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationName_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackIndex_1) == 0x0001B8, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackIndex_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationIndex_1) == 0x0001BC, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationIndex_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_SwitchInteger_CmpSuccess_7) == 0x0001C0, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_SwitchInteger_CmpSuccess_7' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_SwitchInteger_CmpSuccess_8) == 0x0001C1, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_SwitchInteger_CmpSuccess_8' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackName) == 0x0001C4, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationName) == 0x0001CC, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimPackIndex) == 0x0001D4, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_ComponentBoundEvent_AnimationIndex) == 0x0001D8, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_ComponentBoundEvent_AnimationIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue, K2Node_SwitchInteger_CmpSuccess_9) == 0x0001DC, "Member 'WB_BtlNumericalValue_C_ExecuteUbergraph_WB_BtlNumericalValue::K2Node_SwitchInteger_CmpSuccess_9' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue10000000_K2Node_ComponentBoundEvent_9_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue10000000_K2Node_ComponentBoundEvent_9_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue10000000_K2Node_ComponentBoundEvent_9_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue10000000_K2Node_ComponentBoundEvent_9_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue10000000_K2Node_ComponentBoundEvent_9_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue10000000_K2Node_ComponentBoundEvent_9_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue10000000_K2Node_ComponentBoundEvent_9_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue10000000_K2Node_ComponentBoundEvent_9_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue10000000_K2Node_ComponentBoundEvent_9_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue10000000_K2Node_ComponentBoundEvent_9_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue10000000_K2Node_ComponentBoundEvent_9_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue10000000_K2Node_ComponentBoundEvent_9_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue10000000_K2Node_ComponentBoundEvent_9_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue10000000_K2Node_ComponentBoundEvent_9_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue1000000_K2Node_ComponentBoundEvent_8_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue1000000_K2Node_ComponentBoundEvent_8_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue1000000_K2Node_ComponentBoundEvent_8_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue1000000_K2Node_ComponentBoundEvent_8_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue1000000_K2Node_ComponentBoundEvent_8_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue1000000_K2Node_ComponentBoundEvent_8_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue1000000_K2Node_ComponentBoundEvent_8_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue1000000_K2Node_ComponentBoundEvent_8_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue1000000_K2Node_ComponentBoundEvent_8_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue1000000_K2Node_ComponentBoundEvent_8_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue1000000_K2Node_ComponentBoundEvent_8_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue1000000_K2Node_ComponentBoundEvent_8_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue1000000_K2Node_ComponentBoundEvent_8_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue1000000_K2Node_ComponentBoundEvent_8_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue100000_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue100000_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue100000_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue100000_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue100000_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue100000_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue100000_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue100000_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue100000_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue100000_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue100000_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue100000_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue100000_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_BtlNumericalValue_C_BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue100000_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.Disappear
// 0x0008 (0x0008 - 0x0000)
struct WB_BtlNumericalValue_C_Disappear final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlNumericalValue_C_Disappear) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_Disappear");
static_assert(sizeof(WB_BtlNumericalValue_C_Disappear) == 0x000008, "Wrong size on WB_BtlNumericalValue_C_Disappear");
static_assert(offsetof(WB_BtlNumericalValue_C_Disappear, Rate) == 0x000000, "Member 'WB_BtlNumericalValue_C_Disappear::Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_Disappear, Immediately) == 0x000004, "Member 'WB_BtlNumericalValue_C_Disappear::Immediately' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.BndEvt__SsPlayer_AnimValue10000_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10000_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10000_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10000_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10000_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10000_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10000_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10000_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10000_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10000_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10000_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10000_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10000_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10000_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.BndEvt__SsPlayer_AnimValue1000_K2Node_ComponentBoundEvent_5_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1000_K2Node_ComponentBoundEvent_5_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1000_K2Node_ComponentBoundEvent_5_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1000_K2Node_ComponentBoundEvent_5_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1000_K2Node_ComponentBoundEvent_5_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1000_K2Node_ComponentBoundEvent_5_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1000_K2Node_ComponentBoundEvent_5_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1000_K2Node_ComponentBoundEvent_5_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1000_K2Node_ComponentBoundEvent_5_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1000_K2Node_ComponentBoundEvent_5_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1000_K2Node_ComponentBoundEvent_5_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1000_K2Node_ComponentBoundEvent_5_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1000_K2Node_ComponentBoundEvent_5_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1000_K2Node_ComponentBoundEvent_5_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.BndEvt__SsPlayer_AnimValue100_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue100_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue100_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue100_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue100_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue100_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue100_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue100_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue100_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue100_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue100_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue100_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue100_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue100_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.BndEvt__SsPlayer_AnimValue10_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue10_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.BndEvt__SsPlayer_AnimValue1_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimValue1_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.BndEvt__SsPlayer_AnimSign_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimSign_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimSign_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimSign_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimSign_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimSign_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimSign_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimSign_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimSign_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimSign_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimSign_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimSign_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimSign_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimSign_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.BndEvt__SsPlayer_AnimHPMP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimHPMP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimHPMP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimHPMP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimHPMP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimHPMP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimHPMP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimHPMP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimHPMP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimHPMP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimHPMP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimHPMP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimHPMP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_BtlNumericalValue_C_BndEvt__SsPlayer_AnimHPMP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.Appear
// 0x0008 (0x0008 - 0x0000)
struct WB_BtlNumericalValue_C_Appear final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Immediately;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlNumericalValue_C_Appear) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_Appear");
static_assert(sizeof(WB_BtlNumericalValue_C_Appear) == 0x000008, "Wrong size on WB_BtlNumericalValue_C_Appear");
static_assert(offsetof(WB_BtlNumericalValue_C_Appear, Rate) == 0x000000, "Member 'WB_BtlNumericalValue_C_Appear::Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_Appear, Immediately) == 0x000004, "Member 'WB_BtlNumericalValue_C_Appear::Immediately' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_BtlNumericalValue_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_Tick) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_Tick");
static_assert(sizeof(WB_BtlNumericalValue_C_Tick) == 0x00003C, "Wrong size on WB_BtlNumericalValue_C_Tick");
static_assert(offsetof(WB_BtlNumericalValue_C_Tick, MyGeometry) == 0x000000, "Member 'WB_BtlNumericalValue_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_BtlNumericalValue_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlNumericalValue_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlNumericalValue_C_PreConstruct) == 0x000001, "Wrong alignment on WB_BtlNumericalValue_C_PreConstruct");
static_assert(sizeof(WB_BtlNumericalValue_C_PreConstruct) == 0x000001, "Wrong size on WB_BtlNumericalValue_C_PreConstruct");
static_assert(offsetof(WB_BtlNumericalValue_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_BtlNumericalValue_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.CallTick
// 0x0004 (0x0004 - 0x0000)
struct WB_BtlNumericalValue_C_CallTick final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_CallTick) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_CallTick");
static_assert(sizeof(WB_BtlNumericalValue_C_CallTick) == 0x000004, "Wrong size on WB_BtlNumericalValue_C_CallTick");
static_assert(offsetof(WB_BtlNumericalValue_C_CallTick, Delta) == 0x000000, "Member 'WB_BtlNumericalValue_C_CallTick::Delta' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.SetValue
// 0x00F8 (0x00F8 - 0x0000)
struct WB_BtlNumericalValue_C_SetValue final
{
public:
	int32                                         Param_Value;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  NumEffect;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2074[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_position;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Value;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_GetValuePosition_image;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USsPlayerWidget*                        CallFunc_GetValuePosition_parent;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2075[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USsPlayerWidget*                        CallFunc_GetValueHPMP_image;                       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USsPlayerWidget*                        CallFunc_GetValueHPMP_parent;                      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2076[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_GetValueSign_image;                       // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USsPlayerWidget*                        CallFunc_GetValueSign_parent;                      // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_GetValuePosition_image_1;                 // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USsPlayerWidget*                        CallFunc_GetValuePosition_parent_1;                // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_2;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2077[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_2;                   // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_SetValue) == 0x000008, "Wrong alignment on WB_BtlNumericalValue_C_SetValue");
static_assert(sizeof(WB_BtlNumericalValue_C_SetValue) == 0x0000F8, "Wrong size on WB_BtlNumericalValue_C_SetValue");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, Param_Value) == 0x000000, "Member 'WB_BtlNumericalValue_C_SetValue::Param_Value' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, NumEffect) == 0x000004, "Member 'WB_BtlNumericalValue_C_SetValue::NumEffect' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, Lo_position) == 0x000008, "Member 'WB_BtlNumericalValue_C_SetValue::Lo_position' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, Lo_Value) == 0x00000C, "Member 'WB_BtlNumericalValue_C_SetValue::Lo_Value' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, Temp_int_Variable) == 0x000010, "Member 'WB_BtlNumericalValue_C_SetValue::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, Temp_int_Variable_1) == 0x000014, "Member 'WB_BtlNumericalValue_C_SetValue::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_GetValuePosition_image) == 0x000018, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_GetValuePosition_image' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_GetValuePosition_parent) == 0x000020, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_GetValuePosition_parent' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000030, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_GetValueHPMP_image) == 0x000040, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_GetValueHPMP_image' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_GetValueHPMP_parent) == 0x000048, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_GetValueHPMP_parent' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_Array_Add_ReturnValue_1) == 0x000050, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000058, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000060, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_MakeVector2D_ReturnValue) == 0x000064, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00006C, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00006D, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00006E, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_BooleanOR_ReturnValue) == 0x00006F, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_BooleanOR_ReturnValue_1) == 0x000070, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_GetValueSign_image) == 0x000078, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_GetValueSign_image' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_GetValueSign_parent) == 0x000080, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_GetValueSign_parent' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_SelectFloat_ReturnValue) == 0x000088, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_Array_Add_ReturnValue_2) == 0x00008C, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, K2Node_MakeStruct_LinearColor) == 0x000090, "Member 'WB_BtlNumericalValue_C_SetValue::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0000A0, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_Divide_IntInt_ReturnValue) == 0x0000A8, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000AC, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_GetValuePosition_image_1) == 0x0000B0, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_GetValuePosition_image_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_GetValuePosition_parent_1) == 0x0000B8, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_GetValuePosition_parent_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_Array_Add_ReturnValue_3) == 0x0000C0, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_Percent_IntInt_ReturnValue) == 0x0000C4, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_GetDynamicMaterial_ReturnValue_2) == 0x0000C8, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_GetDynamicMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000D0, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, K2Node_MakeStruct_LinearColor_1) == 0x0000D4, "Member 'WB_BtlNumericalValue_C_SetValue::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E4, "Member 'WB_BtlNumericalValue_C_SetValue::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetValue, K2Node_MakeStruct_LinearColor_2) == 0x0000E8, "Member 'WB_BtlNumericalValue_C_SetValue::K2Node_MakeStruct_LinearColor_2' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.GetValuePosition
// 0x0020 (0x0020 - 0x0000)
struct WB_BtlNumericalValue_C_GetValuePosition final
{
public:
	int32                                         Position;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2078[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USsPlayerWidget*                        Parent;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlNumericalValue_C_GetValuePosition) == 0x000008, "Wrong alignment on WB_BtlNumericalValue_C_GetValuePosition");
static_assert(sizeof(WB_BtlNumericalValue_C_GetValuePosition) == 0x000020, "Wrong size on WB_BtlNumericalValue_C_GetValuePosition");
static_assert(offsetof(WB_BtlNumericalValue_C_GetValuePosition, Position) == 0x000000, "Member 'WB_BtlNumericalValue_C_GetValuePosition::Position' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_GetValuePosition, Image) == 0x000008, "Member 'WB_BtlNumericalValue_C_GetValuePosition::Image' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_GetValuePosition, Parent) == 0x000010, "Member 'WB_BtlNumericalValue_C_GetValuePosition::Parent' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_GetValuePosition, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'WB_BtlNumericalValue_C_GetValuePosition::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.GetValueSign
// 0x0010 (0x0010 - 0x0000)
struct WB_BtlNumericalValue_C_GetValueSign final
{
public:
	class UImage*                                 Image;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USsPlayerWidget*                        Parent;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_GetValueSign) == 0x000008, "Wrong alignment on WB_BtlNumericalValue_C_GetValueSign");
static_assert(sizeof(WB_BtlNumericalValue_C_GetValueSign) == 0x000010, "Wrong size on WB_BtlNumericalValue_C_GetValueSign");
static_assert(offsetof(WB_BtlNumericalValue_C_GetValueSign, Image) == 0x000000, "Member 'WB_BtlNumericalValue_C_GetValueSign::Image' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_GetValueSign, Parent) == 0x000008, "Member 'WB_BtlNumericalValue_C_GetValueSign::Parent' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.GetValueHPMP
// 0x0010 (0x0010 - 0x0000)
struct WB_BtlNumericalValue_C_GetValueHPMP final
{
public:
	class USsPlayerWidget*                        Image;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USsPlayerWidget*                        Parent;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_GetValueHPMP) == 0x000008, "Wrong alignment on WB_BtlNumericalValue_C_GetValueHPMP");
static_assert(sizeof(WB_BtlNumericalValue_C_GetValueHPMP) == 0x000010, "Wrong size on WB_BtlNumericalValue_C_GetValueHPMP");
static_assert(offsetof(WB_BtlNumericalValue_C_GetValueHPMP, Image) == 0x000000, "Member 'WB_BtlNumericalValue_C_GetValueHPMP::Image' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_GetValueHPMP, Parent) == 0x000008, "Member 'WB_BtlNumericalValue_C_GetValueHPMP::Parent' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.PlayNumAnim
// 0x00C8 (0x00C8 - 0x0000)
struct WB_BtlNumericalValue_C_PlayNumAnim final
{
public:
	class USsPlayerWidget*                        Anim;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimIndex;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2079[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class FName>                      AnimNames;                                         // 0x0018(0x0050)(Edit, BlueprintVisible)
	TMap<int32, class FName>                      K2Node_MakeVariable_MakeVariableOutput;            // 0x0068(0x0050)()
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlNumericalValue_C_PlayNumAnim) == 0x000008, "Wrong alignment on WB_BtlNumericalValue_C_PlayNumAnim");
static_assert(sizeof(WB_BtlNumericalValue_C_PlayNumAnim) == 0x0000C8, "Wrong size on WB_BtlNumericalValue_C_PlayNumAnim");
static_assert(offsetof(WB_BtlNumericalValue_C_PlayNumAnim, Anim) == 0x000000, "Member 'WB_BtlNumericalValue_C_PlayNumAnim::Anim' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_PlayNumAnim, Rate) == 0x000008, "Member 'WB_BtlNumericalValue_C_PlayNumAnim::Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_PlayNumAnim, AnimIndex) == 0x00000C, "Member 'WB_BtlNumericalValue_C_PlayNumAnim::AnimIndex' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_PlayNumAnim, IsLoop) == 0x000010, "Member 'WB_BtlNumericalValue_C_PlayNumAnim::IsLoop' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_PlayNumAnim, AnimNames) == 0x000018, "Member 'WB_BtlNumericalValue_C_PlayNumAnim::AnimNames' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_PlayNumAnim, K2Node_MakeVariable_MakeVariableOutput) == 0x000068, "Member 'WB_BtlNumericalValue_C_PlayNumAnim::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_PlayNumAnim, CallFunc_SelectInt_ReturnValue) == 0x0000B8, "Member 'WB_BtlNumericalValue_C_PlayNumAnim::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_PlayNumAnim, CallFunc_Map_Find_Value) == 0x0000BC, "Member 'WB_BtlNumericalValue_C_PlayNumAnim::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_PlayNumAnim, CallFunc_Map_Find_ReturnValue) == 0x0000C4, "Member 'WB_BtlNumericalValue_C_PlayNumAnim::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_PlayNumAnim, CallFunc_Play_ReturnValue) == 0x0000C5, "Member 'WB_BtlNumericalValue_C_PlayNumAnim::CallFunc_Play_ReturnValue' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.SetColor
// 0x0060 (0x0060 - 0x0000)
struct WB_BtlNumericalValue_C_SetColor final
{
public:
	E_BTL_NUMEFF                                  Param_NumEff;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_207A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Lo_Color2;                                         // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Lo_Color1;                                         // 0x0014(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_207B[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_207C[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_207D[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_207E[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_SetColor) == 0x000008, "Wrong alignment on WB_BtlNumericalValue_C_SetColor");
static_assert(sizeof(WB_BtlNumericalValue_C_SetColor) == 0x000060, "Wrong size on WB_BtlNumericalValue_C_SetColor");
static_assert(offsetof(WB_BtlNumericalValue_C_SetColor, Param_NumEff) == 0x000000, "Member 'WB_BtlNumericalValue_C_SetColor::Param_NumEff' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetColor, Lo_Color2) == 0x000004, "Member 'WB_BtlNumericalValue_C_SetColor::Lo_Color2' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetColor, Lo_Color1) == 0x000014, "Member 'WB_BtlNumericalValue_C_SetColor::Lo_Color1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetColor, K2Node_SwitchEnum_CmpSuccess) == 0x000024, "Member 'WB_BtlNumericalValue_C_SetColor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetColor, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WB_BtlNumericalValue_C_SetColor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetColor, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'WB_BtlNumericalValue_C_SetColor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetColor, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WB_BtlNumericalValue_C_SetColor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetColor, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000038, "Member 'WB_BtlNumericalValue_C_SetColor::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetColor, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WB_BtlNumericalValue_C_SetColor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetColor, CallFunc_Array_Get_Item) == 0x000048, "Member 'WB_BtlNumericalValue_C_SetColor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetColor, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WB_BtlNumericalValue_C_SetColor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetColor, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000058, "Member 'WB_BtlNumericalValue_C_SetColor::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.RegisterValueImages
// 0x0024 (0x0024 - 0x0000)
struct WB_BtlNumericalValue_C_RegisterValueImages final
{
public:
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_RegisterValueImages) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_RegisterValueImages");
static_assert(sizeof(WB_BtlNumericalValue_C_RegisterValueImages) == 0x000024, "Wrong size on WB_BtlNumericalValue_C_RegisterValueImages");
static_assert(offsetof(WB_BtlNumericalValue_C_RegisterValueImages, CallFunc_Array_Add_ReturnValue) == 0x000000, "Member 'WB_BtlNumericalValue_C_RegisterValueImages::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_RegisterValueImages, CallFunc_Array_Add_ReturnValue_1) == 0x000004, "Member 'WB_BtlNumericalValue_C_RegisterValueImages::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_RegisterValueImages, CallFunc_Array_Add_ReturnValue_2) == 0x000008, "Member 'WB_BtlNumericalValue_C_RegisterValueImages::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_RegisterValueImages, CallFunc_Array_Add_ReturnValue_3) == 0x00000C, "Member 'WB_BtlNumericalValue_C_RegisterValueImages::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_RegisterValueImages, CallFunc_Array_Add_ReturnValue_4) == 0x000010, "Member 'WB_BtlNumericalValue_C_RegisterValueImages::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_RegisterValueImages, CallFunc_Array_Add_ReturnValue_5) == 0x000014, "Member 'WB_BtlNumericalValue_C_RegisterValueImages::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_RegisterValueImages, CallFunc_Array_Add_ReturnValue_6) == 0x000018, "Member 'WB_BtlNumericalValue_C_RegisterValueImages::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_RegisterValueImages, CallFunc_Array_Add_ReturnValue_7) == 0x00001C, "Member 'WB_BtlNumericalValue_C_RegisterValueImages::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_RegisterValueImages, CallFunc_Array_Add_ReturnValue_8) == 0x000020, "Member 'WB_BtlNumericalValue_C_RegisterValueImages::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.RegisterValueParents
// 0x0020 (0x0020 - 0x0000)
struct WB_BtlNumericalValue_C_RegisterValueParents final
{
public:
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BtlNumericalValue_C_RegisterValueParents) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_RegisterValueParents");
static_assert(sizeof(WB_BtlNumericalValue_C_RegisterValueParents) == 0x000020, "Wrong size on WB_BtlNumericalValue_C_RegisterValueParents");
static_assert(offsetof(WB_BtlNumericalValue_C_RegisterValueParents, CallFunc_Array_Add_ReturnValue) == 0x000000, "Member 'WB_BtlNumericalValue_C_RegisterValueParents::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_RegisterValueParents, CallFunc_Array_Add_ReturnValue_1) == 0x000004, "Member 'WB_BtlNumericalValue_C_RegisterValueParents::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_RegisterValueParents, CallFunc_Array_Add_ReturnValue_2) == 0x000008, "Member 'WB_BtlNumericalValue_C_RegisterValueParents::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_RegisterValueParents, CallFunc_Array_Add_ReturnValue_3) == 0x00000C, "Member 'WB_BtlNumericalValue_C_RegisterValueParents::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_RegisterValueParents, CallFunc_Array_Add_ReturnValue_4) == 0x000010, "Member 'WB_BtlNumericalValue_C_RegisterValueParents::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_RegisterValueParents, CallFunc_Array_Add_ReturnValue_5) == 0x000014, "Member 'WB_BtlNumericalValue_C_RegisterValueParents::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_RegisterValueParents, CallFunc_Array_Add_ReturnValue_6) == 0x000018, "Member 'WB_BtlNumericalValue_C_RegisterValueParents::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_RegisterValueParents, CallFunc_Array_Add_ReturnValue_7) == 0x00001C, "Member 'WB_BtlNumericalValue_C_RegisterValueParents::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.PlayHPMP Anim
// 0x0010 (0x0010 - 0x0000)
struct WB_BtlNumericalValue_C_PlayHPMP_Anim final
{
public:
	E_BTL_NUMEFF                                  Param_NumEff;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_207F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rate;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_2;                       // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_3;                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlNumericalValue_C_PlayHPMP_Anim) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_PlayHPMP_Anim");
static_assert(sizeof(WB_BtlNumericalValue_C_PlayHPMP_Anim) == 0x000010, "Wrong size on WB_BtlNumericalValue_C_PlayHPMP_Anim");
static_assert(offsetof(WB_BtlNumericalValue_C_PlayHPMP_Anim, Param_NumEff) == 0x000000, "Member 'WB_BtlNumericalValue_C_PlayHPMP_Anim::Param_NumEff' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_PlayHPMP_Anim, Rate) == 0x000004, "Member 'WB_BtlNumericalValue_C_PlayHPMP_Anim::Rate' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_PlayHPMP_Anim, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'WB_BtlNumericalValue_C_PlayHPMP_Anim::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_PlayHPMP_Anim, CallFunc_Play_ReturnValue) == 0x000009, "Member 'WB_BtlNumericalValue_C_PlayHPMP_Anim::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_PlayHPMP_Anim, CallFunc_Play_ReturnValue_1) == 0x00000A, "Member 'WB_BtlNumericalValue_C_PlayHPMP_Anim::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_PlayHPMP_Anim, CallFunc_Play_ReturnValue_2) == 0x00000B, "Member 'WB_BtlNumericalValue_C_PlayHPMP_Anim::CallFunc_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_PlayHPMP_Anim, CallFunc_Play_ReturnValue_3) == 0x00000C, "Member 'WB_BtlNumericalValue_C_PlayHPMP_Anim::CallFunc_Play_ReturnValue_3' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.CalcValidValuePosition
// 0x0024 (0x0024 - 0x0000)
struct WB_BtlNumericalValue_C_CalcValidValuePosition final
{
public:
	int32                                         Param_Value;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Position;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_position;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Value;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlNumericalValue_C_CalcValidValuePosition) == 0x000004, "Wrong alignment on WB_BtlNumericalValue_C_CalcValidValuePosition");
static_assert(sizeof(WB_BtlNumericalValue_C_CalcValidValuePosition) == 0x000024, "Wrong size on WB_BtlNumericalValue_C_CalcValidValuePosition");
static_assert(offsetof(WB_BtlNumericalValue_C_CalcValidValuePosition, Param_Value) == 0x000000, "Member 'WB_BtlNumericalValue_C_CalcValidValuePosition::Param_Value' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_CalcValidValuePosition, Position) == 0x000004, "Member 'WB_BtlNumericalValue_C_CalcValidValuePosition::Position' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_CalcValidValuePosition, Lo_position) == 0x000008, "Member 'WB_BtlNumericalValue_C_CalcValidValuePosition::Lo_position' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_CalcValidValuePosition, Lo_Value) == 0x00000C, "Member 'WB_BtlNumericalValue_C_CalcValidValuePosition::Lo_Value' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_CalcValidValuePosition, Temp_int_Variable) == 0x000010, "Member 'WB_BtlNumericalValue_C_CalcValidValuePosition::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_CalcValidValuePosition, CallFunc_Abs_Int_ReturnValue) == 0x000014, "Member 'WB_BtlNumericalValue_C_CalcValidValuePosition::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_CalcValidValuePosition, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WB_BtlNumericalValue_C_CalcValidValuePosition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_CalcValidValuePosition, CallFunc_Divide_IntInt_ReturnValue) == 0x00001C, "Member 'WB_BtlNumericalValue_C_CalcValidValuePosition::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_CalcValidValuePosition, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'WB_BtlNumericalValue_C_CalcValidValuePosition::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.SetAllVisibility
// 0x0028 (0x0028 - 0x0000)
struct WB_BtlNumericalValue_C_SetAllVisibility final
{
public:
	ESlateVisibility                              Param_Visibility;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2080[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2081[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USsPlayerWidget*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlNumericalValue_C_SetAllVisibility) == 0x000008, "Wrong alignment on WB_BtlNumericalValue_C_SetAllVisibility");
static_assert(sizeof(WB_BtlNumericalValue_C_SetAllVisibility) == 0x000028, "Wrong size on WB_BtlNumericalValue_C_SetAllVisibility");
static_assert(offsetof(WB_BtlNumericalValue_C_SetAllVisibility, Param_Visibility) == 0x000000, "Member 'WB_BtlNumericalValue_C_SetAllVisibility::Param_Visibility' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetAllVisibility, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WB_BtlNumericalValue_C_SetAllVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetAllVisibility, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WB_BtlNumericalValue_C_SetAllVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetAllVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WB_BtlNumericalValue_C_SetAllVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetAllVisibility, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WB_BtlNumericalValue_C_SetAllVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetAllVisibility, CallFunc_Array_Get_Item) == 0x000018, "Member 'WB_BtlNumericalValue_C_SetAllVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_SetAllVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WB_BtlNumericalValue_C_SetAllVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.AdjustScale
// 0x0020 (0x0020 - 0x0000)
struct WB_BtlNumericalValue_C_AdjustScale final
{
public:
	class USsPlayerWidget*                        Parent;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPartTransform_OutPosition;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPartTransform_OutAngle;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPartTransform_OutScale;                // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPartTransform_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlNumericalValue_C_AdjustScale) == 0x000008, "Wrong alignment on WB_BtlNumericalValue_C_AdjustScale");
static_assert(sizeof(WB_BtlNumericalValue_C_AdjustScale) == 0x000020, "Wrong size on WB_BtlNumericalValue_C_AdjustScale");
static_assert(offsetof(WB_BtlNumericalValue_C_AdjustScale, Parent) == 0x000000, "Member 'WB_BtlNumericalValue_C_AdjustScale::Parent' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_AdjustScale, CallFunc_GetPartTransform_OutPosition) == 0x000008, "Member 'WB_BtlNumericalValue_C_AdjustScale::CallFunc_GetPartTransform_OutPosition' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_AdjustScale, CallFunc_GetPartTransform_OutAngle) == 0x000010, "Member 'WB_BtlNumericalValue_C_AdjustScale::CallFunc_GetPartTransform_OutAngle' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_AdjustScale, CallFunc_GetPartTransform_OutScale) == 0x000014, "Member 'WB_BtlNumericalValue_C_AdjustScale::CallFunc_GetPartTransform_OutScale' has a wrong offset!");
static_assert(offsetof(WB_BtlNumericalValue_C_AdjustScale, CallFunc_GetPartTransform_ReturnValue) == 0x00001C, "Member 'WB_BtlNumericalValue_C_AdjustScale::CallFunc_GetPartTransform_ReturnValue' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.SetAllWidgetTick
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlNumericalValue_C_SetAllWidgetTick final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlNumericalValue_C_SetAllWidgetTick) == 0x000001, "Wrong alignment on WB_BtlNumericalValue_C_SetAllWidgetTick");
static_assert(sizeof(WB_BtlNumericalValue_C_SetAllWidgetTick) == 0x000001, "Wrong size on WB_BtlNumericalValue_C_SetAllWidgetTick");
static_assert(offsetof(WB_BtlNumericalValue_C_SetAllWidgetTick, Enable) == 0x000000, "Member 'WB_BtlNumericalValue_C_SetAllWidgetTick::Enable' has a wrong offset!");

// Function WB_BtlNumericalValue.WB_BtlNumericalValue_C.IsDisappeared
// 0x0001 (0x0001 - 0x0000)
struct WB_BtlNumericalValue_C_IsDisappeared final
{
public:
	bool                                          Param_IsDisappeared;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_BtlNumericalValue_C_IsDisappeared) == 0x000001, "Wrong alignment on WB_BtlNumericalValue_C_IsDisappeared");
static_assert(sizeof(WB_BtlNumericalValue_C_IsDisappeared) == 0x000001, "Wrong size on WB_BtlNumericalValue_C_IsDisappeared");
static_assert(offsetof(WB_BtlNumericalValue_C_IsDisappeared, Param_IsDisappeared) == 0x000000, "Member 'WB_BtlNumericalValue_C_IsDisappeared::Param_IsDisappeared' has a wrong offset!");

}

