#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MEH_NextEventStart_Walk

#include "Basic.hpp"

#include "MEH_NextEventStart_Walk_classes.hpp"
#include "MEH_NextEventStart_Walk_parameters.hpp"


namespace SDK
{

// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_SpawnEncountActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<int32>                           EnemyIdList                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   EncountID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class AActor*                           EncountPawn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_BTL_SYMBOL_ENCOUNT                    SymbolEncountType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ManualWhenNotEscape                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    HitMapAttack                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FChainEncountInfo                ChainEncountInfo                                       (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Magatsuhi                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_SpawnEncountActor(const TArray<int32>& EnemyIdList, int32 EncountID, const struct FTransform& SpawnTransform, class AActor* EncountPawn, E_BTL_SYMBOL_ENCOUNT SymbolEncountType, bool ManualWhenNotEscape, bool HitMapAttack, const struct FChainEncountInfo& ChainEncountInfo, bool Magatsuhi)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_SpawnEncountActor");

	Params::MEH_NextEventStart_Walk_C_BPI_SpawnEncountActor Parms{};

	Parms.EnemyIdList = std::move(EnemyIdList);
	Parms.EncountID = EncountID;
	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.EncountPawn = EncountPawn;
	Parms.SymbolEncountType = SymbolEncountType;
	Parms.ManualWhenNotEscape = ManualWhenNotEscape;
	Parms.HitMapAttack = HitMapAttack;
	Parms.ChainEncountInfo = std::move(ChainEncountInfo);
	Parms.Magatsuhi = Magatsuhi;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_SetMapCommon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_SetMapCommon(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_SetMapCommon");

	Params::MEH_NextEventStart_Walk_C_BPI_SetMapCommon Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.OnReady
// (BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::OnReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "OnReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.ExecuteUbergraph_MEH_NextEventStart_Walk
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::ExecuteUbergraph_MEH_NextEventStart_Walk(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "ExecuteUbergraph_MEH_NextEventStart_Walk");

	Params::MEH_NextEventStart_Walk_C_ExecuteUbergraph_MEH_NextEventStart_Walk Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CheckNaviDevil
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NaviDevil                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_CheckNaviDevil(bool* NaviDevil)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CheckNaviDevil");

	Params::MEH_NextEventStart_Walk_C_BPI_CheckNaviDevil Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NaviDevil != nullptr)
		*NaviDevil = Parms.NaviDevil;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CheckMiman
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Miman                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_CheckMiman(bool* Miman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CheckMiman");

	Params::MEH_NextEventStart_Walk_C_BPI_CheckMiman Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Miman != nullptr)
		*Miman = Parms.Miman;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CheckMissionEvent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MissionEvent                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_CheckMissionEvent(bool* MissionEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CheckMissionEvent");

	Params::MEH_NextEventStart_Walk_C_BPI_CheckMissionEvent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MissionEvent != nullptr)
		*MissionEvent = Parms.MissionEvent;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_GetDebugMemo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Memo                                                   (Parm, OutParm)

void AMEH_NextEventStart_Walk_C::BPI_GetDebugMemo(class FText* Memo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_GetDebugMemo");

	Params::MEH_NextEventStart_Walk_C_BPI_GetDebugMemo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Memo != nullptr)
		*Memo = std::move(Parms.Memo);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_GetMapEventId
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MapEventID                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_GetMapEventId(int32* MapEventID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_GetMapEventId");

	Params::MEH_NextEventStart_Walk_C_BPI_GetMapEventId Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MapEventID != nullptr)
		*MapEventID = Parms.MapEventID;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_GetHitBoxSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_GetHitBoxSize(struct FVector* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_GetHitBoxSize");

	Params::MEH_NextEventStart_Walk_C_BPI_GetHitBoxSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Size != nullptr)
		*Size = std::move(Parms.Size);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_SetAgratField
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Inside                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_SetAgratField(bool Inside, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_SetAgratField");

	Params::MEH_NextEventStart_Walk_C_BPI_SetAgratField Parms{};

	Parms.Inside = Inside;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CheckAgratField
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Inside                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_CheckAgratField(bool* Inside)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CheckAgratField");

	Params::MEH_NextEventStart_Walk_C_BPI_CheckAgratField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Inside != nullptr)
		*Inside = Parms.Inside;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CheckHide_WhenBattleOrEvent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hide                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_CheckHide_WhenBattleOrEvent(bool* Hide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CheckHide_WhenBattleOrEvent");

	Params::MEH_NextEventStart_Walk_C_BPI_CheckHide_WhenBattleOrEvent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Hide != nullptr)
		*Hide = Parms.Hide;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CheckAfterLoaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AfterLoaded                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_CheckAfterLoaded(bool* AfterLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CheckAfterLoaded");

	Params::MEH_NextEventStart_Walk_C_BPI_CheckAfterLoaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AfterLoaded != nullptr)
		*AfterLoaded = Parms.AfterLoaded;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_UpdateOptionFieldBrightness
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_UpdateOptionFieldBrightness(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_UpdateOptionFieldBrightness");

	Params::MEH_NextEventStart_Walk_C_BPI_UpdateOptionFieldBrightness Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_MapTopCameraOnFinishTop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_MapTopCameraOnFinishTop(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_MapTopCameraOnFinishTop");

	Params::MEH_NextEventStart_Walk_C_BPI_MapTopCameraOnFinishTop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_MapTopCameraOnStartTop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_MapTopCameraOnStartTop(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_MapTopCameraOnStartTop");

	Params::MEH_NextEventStart_Walk_C_BPI_MapTopCameraOnStartTop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_IgnoreEstomaEffectPause
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ignore                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_IgnoreEstomaEffectPause(bool Ignore, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_IgnoreEstomaEffectPause");

	Params::MEH_NextEventStart_Walk_C_BPI_IgnoreEstomaEffectPause Parms{};

	Parms.Ignore = Ignore;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_GetOptionFieldBrightnessCtrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  Component                                              (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_GetOptionFieldBrightnessCtrl(class UActorComponent** Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_GetOptionFieldBrightnessCtrl");

	Params::MEH_NextEventStart_Walk_C_BPI_GetOptionFieldBrightnessCtrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Component != nullptr)
		*Component = Parms.Component;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_RemoveEncountAreaList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           EncountArea                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_RemoveEncountAreaList(class AActor* EncountArea, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_RemoveEncountAreaList");

	Params::MEH_NextEventStart_Walk_C_BPI_RemoveEncountAreaList Parms{};

	Parms.EncountArea = EncountArea;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_AddEncountAreaList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           EncountArea                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_AddEncountAreaList(class AActor* EncountArea, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_AddEncountAreaList");

	Params::MEH_NextEventStart_Walk_C_BPI_AddEncountAreaList Parms{};

	Parms.EncountArea = EncountArea;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_GetBossRushFieldCtrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_GetBossRushFieldCtrl(class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_GetBossRushFieldCtrl");

	Params::MEH_NextEventStart_Walk_C_BPI_GetBossRushFieldCtrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_SetBossRushFieldCtrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_SetBossRushFieldCtrl(class AActor* Actor, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_SetBossRushFieldCtrl");

	Params::MEH_NextEventStart_Walk_C_BPI_SetBossRushFieldCtrl Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_SetLevelVisibilityEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_SetLevelVisibilityEnabled(bool Enable, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_SetLevelVisibilityEnabled");

	Params::MEH_NextEventStart_Walk_C_BPI_SetLevelVisibilityEnabled Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_IsStatusMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsStatusMode                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_IsStatusMode(bool* IsStatusMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_IsStatusMode");

	Params::MEH_NextEventStart_Walk_C_BPI_IsStatusMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsStatusMode != nullptr)
		*IsStatusMode = Parms.IsStatusMode;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_SetStatusMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsStatusMode                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_SetStatusMode(bool IsStatusMode, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_SetStatusMode");

	Params::MEH_NextEventStart_Walk_C_BPI_SetStatusMode Parms{};

	Parms.IsStatusMode = IsStatusMode;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_UpdateLevelVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Updated                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_UpdateLevelVisibility(const struct FVector& NewLocation, bool* Updated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_UpdateLevelVisibility");

	Params::MEH_NextEventStart_Walk_C_BPI_UpdateLevelVisibility Parms{};

	Parms.NewLocation = std::move(NewLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Updated != nullptr)
		*Updated = Parms.Updated;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_GetEncountAreaAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   Actors                                                 (Parm, OutParm)

void AMEH_NextEventStart_Walk_C::BPI_GetEncountAreaAll(TArray<class AActor*>* Actors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_GetEncountAreaAll");

	Params::MEH_NextEventStart_Walk_C_BPI_GetEncountAreaAll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actors != nullptr)
		*Actors = std::move(Parms.Actors);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_UpdateUniqueSymbolBGM
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_UpdateUniqueSymbolBGM(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_UpdateUniqueSymbolBGM");

	Params::MEH_NextEventStart_Walk_C_BPI_UpdateUniqueSymbolBGM Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_UnregisterMagatsuka
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_UnregisterMagatsuka(class AActor* Actor, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_UnregisterMagatsuka");

	Params::MEH_NextEventStart_Walk_C_BPI_UnregisterMagatsuka Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_RegisterMagatsuka
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam1                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_RegisterMagatsuka(class AActor* Actor, bool* NewParam1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_RegisterMagatsuka");

	Params::MEH_NextEventStart_Walk_C_BPI_RegisterMagatsuka Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam1 != nullptr)
		*NewParam1 = Parms.NewParam1;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_ShowMapButtonHelp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_ShowMapButtonHelp(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_ShowMapButtonHelp");

	Params::MEH_NextEventStart_Walk_C_BPI_ShowMapButtonHelp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_GetMapButtonHelpType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BTN_HELP_SET                          Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_GetMapButtonHelpType(E_BTN_HELP_SET* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_GetMapButtonHelpType");

	Params::MEH_NextEventStart_Walk_C_BPI_GetMapButtonHelpType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_IsTokyoLargeMap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTokyoLargeMap                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_IsTokyoLargeMap(bool* IsTokyoLargeMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_IsTokyoLargeMap");

	Params::MEH_NextEventStart_Walk_C_BPI_IsTokyoLargeMap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsTokyoLargeMap != nullptr)
		*IsTokyoLargeMap = Parms.IsTokyoLargeMap;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CheckMapEnableCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPause                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_CheckMapEnableCamera(bool* IsPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CheckMapEnableCamera");

	Params::MEH_NextEventStart_Walk_C_BPI_CheckMapEnableCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPause != nullptr)
		*IsPause = Parms.IsPause;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CheckAActionLock
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Lock                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           AActionActor                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_CheckAActionLock(bool* Lock, class AActor** AActionActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CheckAActionLock");

	Params::MEH_NextEventStart_Walk_C_BPI_CheckAActionLock Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Lock != nullptr)
		*Lock = Parms.Lock;

	if (AActionActor != nullptr)
		*AActionActor = Parms.AActionActor;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_SetAActionLock
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Lock                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           AActionActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam1                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_SetAActionLock(bool Lock, class AActor* AActionActor, bool* NewParam1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_SetAActionLock");

	Params::MEH_NextEventStart_Walk_C_BPI_SetAActionLock Parms{};

	Parms.Lock = Lock;
	Parms.AActionActor = AActionActor;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam1 != nullptr)
		*NewParam1 = Parms.NewParam1;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_GetNaviDevilCtrl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_GetNaviDevilCtrl(class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_GetNaviDevilCtrl");

	Params::MEH_NextEventStart_Walk_C_BPI_GetNaviDevilCtrl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_GetNaviDevilPawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_GetNaviDevilPawn(class APawn** Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_GetNaviDevilPawn");

	Params::MEH_NextEventStart_Walk_C_BPI_GetNaviDevilPawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pawn != nullptr)
		*Pawn = Parms.Pawn;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_SetNaviDevilPawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam1                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_SetNaviDevilPawn(class APawn* Pawn, bool* NewParam1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_SetNaviDevilPawn");

	Params::MEH_NextEventStart_Walk_C_BPI_SetNaviDevilPawn Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam1 != nullptr)
		*NewParam1 = Parms.NewParam1;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CheckMagatsukaDiscoveryCnt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Discovery                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_CheckMagatsukaDiscoveryCnt(bool* Discovery)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CheckMagatsukaDiscoveryCnt");

	Params::MEH_NextEventStart_Walk_C_BPI_CheckMagatsukaDiscoveryCnt Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Discovery != nullptr)
		*Discovery = Parms.Discovery;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_AddMagatsukaDiscoveryCnt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Add                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam1                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_AddMagatsukaDiscoveryCnt(int32 Add, bool* NewParam1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_AddMagatsukaDiscoveryCnt");

	Params::MEH_NextEventStart_Walk_C_BPI_AddMagatsukaDiscoveryCnt Parms{};

	Parms.Add = Add;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam1 != nullptr)
		*NewParam1 = Parms.NewParam1;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_GetMapTimer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MapTimer                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_GetMapTimer(float* MapTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_GetMapTimer");

	Params::MEH_NextEventStart_Walk_C_BPI_GetMapTimer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MapTimer != nullptr)
		*MapTimer = Parms.MapTimer;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_SetDebugOverrideBattleMapDarkID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MapDarkID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_SetDebugOverrideBattleMapDarkID(int32 MapDarkID, bool* NoUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_SetDebugOverrideBattleMapDarkID");

	Params::MEH_NextEventStart_Walk_C_BPI_SetDebugOverrideBattleMapDarkID Parms{};

	Parms.MapDarkID = MapDarkID;

	UObject::ProcessEvent(Func, &Parms);

	if (NoUse != nullptr)
		*NoUse = Parms.NoUse;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CheckSymbolPause
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Pause                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_CheckSymbolPause(bool* Pause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CheckSymbolPause");

	Params::MEH_NextEventStart_Walk_C_BPI_CheckSymbolPause Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pause != nullptr)
		*Pause = Parms.Pause;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.GetGShopCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACameraActor*                     Cam                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::GetGShopCamera(class ACameraActor** Cam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "GetGShopCamera");

	Params::MEH_NextEventStart_Walk_C_GetGShopCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Cam != nullptr)
		*Cam = Parms.Cam;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BI_IsEventView
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEventView                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BI_IsEventView(bool* IsEventView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BI_IsEventView");

	Params::MEH_NextEventStart_Walk_C_BI_IsEventView Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEventView != nullptr)
		*IsEventView = Parms.IsEventView;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BI_GetDaathIntensityEff
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Intensity                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BI_GetDaathIntensityEff(struct FLinearColor* Intensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BI_GetDaathIntensityEff");

	Params::MEH_NextEventStart_Walk_C_BI_GetDaathIntensityEff Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Intensity != nullptr)
		*Intensity = std::move(Parms.Intensity);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.JsonCounterGet
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EncountNum                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MagatukaNum                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::JsonCounterGet(int32* EncountNum, int32* MagatukaNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "JsonCounterGet");

	Params::MEH_NextEventStart_Walk_C_JsonCounterGet Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EncountNum != nullptr)
		*EncountNum = Parms.EncountNum;

	if (MagatukaNum != nullptr)
		*MagatukaNum = Parms.MagatukaNum;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_GetMapGimmickTrigger
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_GetMapGimmickTrigger(class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_GetMapGimmickTrigger");

	Params::MEH_NextEventStart_Walk_C_BPI_GetMapGimmickTrigger Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.GetJsonFileName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Filename                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::GetJsonFileName(class FString* Filename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "GetJsonFileName");

	Params::MEH_NextEventStart_Walk_C_GetJsonFileName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Filename != nullptr)
		*Filename = std::move(Parms.Filename);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.GetJsonData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonDataCtrl*                    Json                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::GetJsonData(class UJsonDataCtrl** Json)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "GetJsonData");

	Params::MEH_NextEventStart_Walk_C_GetJsonData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Json != nullptr)
		*Json = Parms.Json;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.GetDebugGameTrace
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::GetDebugGameTrace(bool* IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "GetDebugGameTrace");

	Params::MEH_NextEventStart_Walk_C_GetDebugGameTrace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnable != nullptr)
		*IsEnable = Parms.IsEnable;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_MakeUpLessEvent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RetValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_MakeUpLessEvent(bool* RetValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_MakeUpLessEvent");

	Params::MEH_NextEventStart_Walk_C_BPI_MakeUpLessEvent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RetValue != nullptr)
		*RetValue = Parms.RetValue;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.GetEventBattleActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   List                                                   (Parm, OutParm)

void AMEH_NextEventStart_Walk_C::GetEventBattleActor(TArray<class AActor*>* List)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "GetEventBattleActor");

	Params::MEH_NextEventStart_Walk_C_GetEventBattleActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (List != nullptr)
		*List = std::move(Parms.List);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.IsLoadLevelGame
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::IsLoadLevelGame(bool* Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "IsLoadLevelGame");

	Params::MEH_NextEventStart_Walk_C_IsLoadLevelGame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enable != nullptr)
		*Enable = Parms.Enable;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.GetMapStartLoadFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::GetMapStartLoadFlag(bool* Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "GetMapStartLoadFlag");

	Params::MEH_NextEventStart_Walk_C_GetMapStartLoadFlag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enable != nullptr)
		*Enable = Parms.Enable;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.GetNextMapStartList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLoadOnlyResident_ST             Return                                                 (Parm, OutParm, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::GetNextMapStartList(struct FLoadOnlyResident_ST* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "GetNextMapStartList");

	Params::MEH_NextEventStart_Walk_C_GetNextMapStartList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.IsNextMapLoadEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::IsNextMapLoadEnd(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "IsNextMapLoadEnd");

	Params::MEH_NextEventStart_Walk_C_IsNextMapLoadEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.IsNextMapLoadStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::IsNextMapLoadStart(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "IsNextMapLoadStart");

	Params::MEH_NextEventStart_Walk_C_IsNextMapLoadStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.GetNextMapAssetList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FLoadOnlyResident_ST>     LevelList                                              (Parm, OutParm)

void AMEH_NextEventStart_Walk_C::GetNextMapAssetList(TArray<struct FLoadOnlyResident_ST>* LevelList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "GetNextMapAssetList");

	Params::MEH_NextEventStart_Walk_C_GetNextMapAssetList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LevelList != nullptr)
		*LevelList = std::move(Parms.LevelList);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_IsEventPlay
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlay                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_IsEventPlay(bool* IsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_IsEventPlay");

	Params::MEH_NextEventStart_Walk_C_BPI_IsEventPlay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlay != nullptr)
		*IsPlay = Parms.IsPlay;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.IsEventHitOff
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::IsEventHitOff(bool* Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "IsEventHitOff");

	Params::MEH_NextEventStart_Walk_C_IsEventHitOff Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enable != nullptr)
		*Enable = Parms.Enable;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.GetSavingWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Widget                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::GetSavingWidget(bool* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "GetSavingWidget");

	Params::MEH_NextEventStart_Walk_C_GetSavingWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CheckMapPause
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPause                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_CheckMapPause(bool* IsPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CheckMapPause");

	Params::MEH_NextEventStart_Walk_C_BPI_CheckMapPause Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPause != nullptr)
		*IsPause = Parms.IsPause;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_GetBuddyPawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_GetBuddyPawn(class APawn** Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_GetBuddyPawn");

	Params::MEH_NextEventStart_Walk_C_BPI_GetBuddyPawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pawn != nullptr)
		*Pawn = Parms.Pawn;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BI_CheckEncountOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EncountOn                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BI_CheckEncountOn(bool* EncountOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BI_CheckEncountOn");

	Params::MEH_NextEventStart_Walk_C_BI_CheckEncountOn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EncountOn != nullptr)
		*EncountOn = Parms.EncountOn;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_GetEventReserv
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MapEventID                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_GetEventReserv(int32* MapEventID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_GetEventReserv");

	Params::MEH_NextEventStart_Walk_C_BPI_GetEventReserv Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MapEventID != nullptr)
		*MapEventID = Parms.MapEventID;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.GetcurrentLevelCustom
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::GetcurrentLevelCustom(bool* Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "GetcurrentLevelCustom");

	Params::MEH_NextEventStart_Walk_C_GetcurrentLevelCustom Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enable != nullptr)
		*Enable = Parms.Enable;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.GetIsBattle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBattle                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::GetIsBattle(bool* IsBattle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "GetIsBattle");

	Params::MEH_NextEventStart_Walk_C_GetIsBattle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsBattle != nullptr)
		*IsBattle = Parms.IsBattle;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_IsSpawnSymbol
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_IsSpawnSymbol(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_IsSpawnSymbol");

	Params::MEH_NextEventStart_Walk_C_BPI_IsSpawnSymbol Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_GetMapCommon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Rerutn                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_GetMapCommon(class AActor** Rerutn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_GetMapCommon");

	Params::MEH_NextEventStart_Walk_C_BPI_GetMapCommon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rerutn != nullptr)
		*Rerutn = Parms.Rerutn;
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_DebugChangeChar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_MAP_PLAYER_TYPE                       Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_DebugChangeChar(E_MAP_PLAYER_TYPE Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_DebugChangeChar");

	Params::MEH_NextEventStart_Walk_C_BPI_DebugChangeChar Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_DebugMesWindow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_MAP_DEBUG_MES_TYPE                    MesType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_DebugMesWindow(E_MAP_DEBUG_MES_TYPE MesType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_DebugMesWindow");

	Params::MEH_NextEventStart_Walk_C_BPI_DebugMesWindow Parms{};

	Parms.MesType = MesType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_MapPause
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PlayerMoveEnable                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    PlayerCameraEnable                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    PlayerVisible                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    MoonTimeEnable                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    SymbolEnable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    AllMapStop                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    AllObjectHidden                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    TopCamera                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_MapPause(bool PlayerMoveEnable, bool PlayerCameraEnable, bool PlayerVisible, bool MoonTimeEnable, bool SymbolEnable, bool AllMapStop, bool AllObjectHidden, bool TopCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_MapPause");

	Params::MEH_NextEventStart_Walk_C_BPI_MapPause Parms{};

	Parms.PlayerMoveEnable = PlayerMoveEnable;
	Parms.PlayerCameraEnable = PlayerCameraEnable;
	Parms.PlayerVisible = PlayerVisible;
	Parms.MoonTimeEnable = MoonTimeEnable;
	Parms.SymbolEnable = SymbolEnable;
	Parms.AllMapStop = AllMapStop;
	Parms.AllObjectHidden = AllObjectHidden;
	Parms.TopCamera = TopCamera;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_MapStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MissionCheckDisable                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    StartSymbolAIDisable                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnPlayerPosition                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    UI_Immediate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_MapStart(bool MissionCheckDisable, bool StartSymbolAIDisable, bool ReturnPlayerPosition, bool UI_Immediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_MapStart");

	Params::MEH_NextEventStart_Walk_C_BPI_MapStart Parms{};

	Parms.MissionCheckDisable = MissionCheckDisable;
	Parms.StartSymbolAIDisable = StartSymbolAIDisable;
	Parms.ReturnPlayerPosition = ReturnPlayerPosition;
	Parms.UI_Immediate = UI_Immediate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CallEventEncount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EventEncountId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// int32                                   NextEventID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NowEventID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Manual                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_CallEventEncount(int32 EventEncountId, const struct FTransform& SpawnTransform, int32 NextEventID, int32 NowEventID, bool Manual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CallEventEncount");

	Params::MEH_NextEventStart_Walk_C_BPI_CallEventEncount Parms{};

	Parms.EventEncountId = EventEncountId;
	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.NextEventID = NextEventID;
	Parms.NowEventID = NowEventID;
	Parms.Manual = Manual;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_PlayerOFF
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::BPI_PlayerOFF()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_PlayerOFF");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_PlayerON
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::BPI_PlayerON()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_PlayerON");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CallKokubouEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EventId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           RestarPoint                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_BattlePoint                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_CallKokubouEvent(int32 EventId, class AActor* RestarPoint, class AActor* Param_BattlePoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CallKokubouEvent");

	Params::MEH_NextEventStart_Walk_C_BPI_CallKokubouEvent Parms{};

	Parms.EventId = EventId;
	Parms.RestarPoint = RestarPoint;
	Parms.Param_BattlePoint = Param_BattlePoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_OpenSkyTerminal
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::BPI_OpenSkyTerminal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_OpenSkyTerminal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_MapAttackEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_MapAttackEnd(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_MapAttackEnd");

	Params::MEH_NextEventStart_Walk_C_BPI_MapAttackEnd Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_ForceSafeEncount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_ForceSafeEncount(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_ForceSafeEncount");

	Params::MEH_NextEventStart_Walk_C_BPI_ForceSafeEncount Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_SetEventReserv
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MapEventID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_SetEventReserv(int32 MapEventID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_SetEventReserv");

	Params::MEH_NextEventStart_Walk_C_BPI_SetEventReserv Parms{};

	Parms.MapEventID = MapEventID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_HeroChange
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFade                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_MAP_PLAYER_TYPE                       Hero                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_HeroChange(bool IsFade, E_MAP_PLAYER_TYPE Hero)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_HeroChange");

	Params::MEH_NextEventStart_Walk_C_BPI_HeroChange Parms{};

	Parms.IsFade = IsFade;
	Parms.Hero = Hero;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.SetNextMapAssetList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FPrimaryAssetId>          LevelList                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FName>                     NameList                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   MapId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AreaId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::SetNextMapAssetList(const TArray<struct FPrimaryAssetId>& LevelList, const TArray<class FName>& NameList, int32 MapId, int32 AreaId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "SetNextMapAssetList");

	Params::MEH_NextEventStart_Walk_C_SetNextMapAssetList Parms{};

	Parms.LevelList = std::move(LevelList);
	Parms.NameList = std::move(NameList);
	Parms.MapId = MapId;
	Parms.AreaId = AreaId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.SetNextMapLoadStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::SetNextMapLoadStart(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "SetNextMapLoadStart");

	Params::MEH_NextEventStart_Walk_C_SetNextMapLoadStart Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.SetNextMapLoadEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::SetNextMapLoadEnd(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "SetNextMapLoadEnd");

	Params::MEH_NextEventStart_Walk_C_SetNextMapLoadEnd Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.DeleteNextMapAssetList
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::DeleteNextMapAssetList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "DeleteNextMapAssetList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.SetNextMapStartList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FPrimaryAssetId>          LevelList                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FName>                     LevelNameList                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   MapId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AreaId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::SetNextMapStartList(const TArray<struct FPrimaryAssetId>& LevelList, const TArray<class FName>& LevelNameList, int32 MapId, int32 AreaId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "SetNextMapStartList");

	Params::MEH_NextEventStart_Walk_C_SetNextMapStartList Parms{};

	Parms.LevelList = std::move(LevelList);
	Parms.LevelNameList = std::move(LevelNameList);
	Parms.MapId = MapId;
	Parms.AreaId = AreaId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.SetMapStartLoadFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::SetMapStartLoadFlag(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "SetMapStartLoadFlag");

	Params::MEH_NextEventStart_Walk_C_SetMapStartLoadFlag Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.MapInit
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::MapInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "MapInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.SetLoadLevelGame
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::SetLoadLevelGame(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "SetLoadLevelGame");

	Params::MEH_NextEventStart_Walk_C_SetLoadLevelGame Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.SetEventBattleActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FEventBattleListStruct>   BTLActor                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FTransform                       PlayerPos                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::SetEventBattleActor(const TArray<struct FEventBattleListStruct>& BTLActor, const struct FTransform& PlayerPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "SetEventBattleActor");

	Params::MEH_NextEventStart_Walk_C_SetEventBattleActor Parms{};

	Parms.BTLActor = std::move(BTLActor);
	Parms.PlayerPos = std::move(PlayerPos);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.EventHitAction
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::EventHitAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "EventHitAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_SetEncountActor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_SetEncountActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_SetEncountActor");

	Params::MEH_NextEventStart_Walk_C_BPI_SetEncountActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.StartDebugGameTrace
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnable                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::StartDebugGameTrace(bool IsEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "StartDebugGameTrace");

	Params::MEH_NextEventStart_Walk_C_StartDebugGameTrace Parms{};

	Parms.IsEnable = IsEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.SetJsonData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJsonDataCtrl*                    Json                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::SetJsonData(class UJsonDataCtrl* Json)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "SetJsonData");

	Params::MEH_NextEventStart_Walk_C_SetJsonData Parms{};

	Parms.Json = Json;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.SetJsonFile
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Json                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::SetJsonFile(const class FString& Json)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "SetJsonFile");

	Params::MEH_NextEventStart_Walk_C_SetJsonFile Parms{};

	Parms.Json = std::move(Json);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CallMapEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_MapEventID_                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_ReStartPoint                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_BattlePoint                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InitFade                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    WaitEvent                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_CallMapEvent(int32 Param_MapEventID_, class AActor* Param_ReStartPoint, class AActor* Param_BattlePoint, bool InitFade, bool WaitEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CallMapEvent");

	Params::MEH_NextEventStart_Walk_C_BPI_CallMapEvent Parms{};

	Parms.Param_MapEventID_ = Param_MapEventID_;
	Parms.Param_ReStartPoint = Param_ReStartPoint;
	Parms.Param_BattlePoint = Param_BattlePoint;
	Parms.InitFade = InitFade;
	Parms.WaitEvent = WaitEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CallEncountForMagatsuka
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EncountID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           EnemyList                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   SafeZoneID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ManualSafeZone                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_BTL_SYMBOL_ENCOUNT                    EncountType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HitMapAttack                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_CallEncountForMagatsuka(int32 EncountID, const TArray<int32>& EnemyList, int32 SafeZoneID, bool ManualSafeZone, E_BTL_SYMBOL_ENCOUNT EncountType, bool HitMapAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CallEncountForMagatsuka");

	Params::MEH_NextEventStart_Walk_C_BPI_CallEncountForMagatsuka Parms{};

	Parms.EncountID = EncountID;
	Parms.EnemyList = std::move(EnemyList);
	Parms.SafeZoneID = SafeZoneID;
	Parms.ManualSafeZone = ManualSafeZone;
	Parms.EncountType = EncountType;
	Parms.HitMapAttack = HitMapAttack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_ReturnMapFromOutside
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AutoSave                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnPlayerPosition                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    UI_Immediate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_ReturnMapFromOutside(bool AutoSave, bool ReturnPlayerPosition, bool UI_Immediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_ReturnMapFromOutside");

	Params::MEH_NextEventStart_Walk_C_BPI_ReturnMapFromOutside Parms{};

	Parms.AutoSave = AutoSave;
	Parms.ReturnPlayerPosition = ReturnPlayerPosition;
	Parms.UI_Immediate = UI_Immediate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.JsonCounterAdd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EncountAdd                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MagatukaNum                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::JsonCounterAdd(int32 EncountAdd, int32 MagatukaNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "JsonCounterAdd");

	Params::MEH_NextEventStart_Walk_C_JsonCounterAdd Parms{};

	Parms.EncountAdd = EncountAdd;
	Parms.MagatukaNum = MagatukaNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BI_SetMapChange
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsMapChange                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   WarpPoint                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   FromEvent                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherMapReturn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BI_SetMapChange(bool IsMapChange, int32 WarpPoint, int32 FromEvent, int32 OtherMapReturn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BI_SetMapChange");

	Params::MEH_NextEventStart_Walk_C_BI_SetMapChange Parms{};

	Parms.IsMapChange = IsMapChange;
	Parms.WarpPoint = WarpPoint;
	Parms.FromEvent = FromEvent;
	Parms.OtherMapReturn = OtherMapReturn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.EnvChange_Play
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FST_LightParam                   Next                                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FST_LightParam                   Prev                                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::EnvChange_Play(const struct FST_LightParam& Next, const struct FST_LightParam& Prev)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "EnvChange_Play");

	Params::MEH_NextEventStart_Walk_C_EnvChange_Play Parms{};

	Parms.Next = std::move(Next);
	Parms.Prev = std::move(Prev);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.EnvChange_Reverse
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::EnvChange_Reverse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "EnvChange_Reverse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_ChangeArea
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NextAreaId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WarpPoint                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FadeInTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_ChangeArea(int32 NextAreaId, int32 WarpPoint, float FadeInTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_ChangeArea");

	Params::MEH_NextEventStart_Walk_C_BPI_ChangeArea Parms{};

	Parms.NextAreaId = NextAreaId;
	Parms.WarpPoint = WarpPoint;
	Parms.FadeInTime = FadeInTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CallEncountForNaviDevil
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EncountID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           EnemyList                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   SafeZoneID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ManualSafeZone                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FChainEncountInfo                ChainEncountInfo                                       (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Magatsuhi                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    PlayerFirst                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_CallEncountForNaviDevil(int32 EncountID, const TArray<int32>& EnemyList, int32 SafeZoneID, bool ManualSafeZone, const struct FChainEncountInfo& ChainEncountInfo, bool Magatsuhi, bool PlayerFirst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CallEncountForNaviDevil");

	Params::MEH_NextEventStart_Walk_C_BPI_CallEncountForNaviDevil Parms{};

	Parms.EncountID = EncountID;
	Parms.EnemyList = std::move(EnemyList);
	Parms.SafeZoneID = SafeZoneID;
	Parms.ManualSafeZone = ManualSafeZone;
	Parms.ChainEncountInfo = std::move(ChainEncountInfo);
	Parms.Magatsuhi = Magatsuhi;
	Parms.PlayerFirst = PlayerFirst;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_EntryNaviDevillGimmick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_EntryNaviDevillGimmick(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_EntryNaviDevillGimmick");

	Params::MEH_NextEventStart_Walk_C_BPI_EntryNaviDevillGimmick Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_MapStart_SimpleEventEnable
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::BPI_MapStart_SimpleEventEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_MapStart_SimpleEventEnable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.EnvChangeMagatuka_Play
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::EnvChangeMagatuka_Play(float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "EnvChangeMagatuka_Play");

	Params::MEH_NextEventStart_Walk_C_EnvChangeMagatuka_Play Parms{};

	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.ResetEventBattleActor
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::ResetEventBattleActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "ResetEventBattleActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_EndTakara_ForSimpleEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TakaraID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_EndTakara_ForSimpleEvent(int32 TakaraID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_EndTakara_ForSimpleEvent");

	Params::MEH_NextEventStart_Walk_C_BPI_EndTakara_ForSimpleEvent Parms{};

	Parms.TakaraID = TakaraID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_ShowObjects_WhenReturnMap
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::BPI_ShowObjects_WhenReturnMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_ShowObjects_WhenReturnMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_HideObjects_WhenExitMap
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::BPI_HideObjects_WhenExitMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_HideObjects_WhenExitMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.Env_ChangeSpecial_Play
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::Env_ChangeSpecial_Play(int32 Param_Index, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "Env_ChangeSpecial_Play");

	Params::MEH_NextEventStart_Walk_C_Env_ChangeSpecial_Play Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_TokyoLargeMapAddIconTalk
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ActorLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             InactiveFlag                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_TokyoLargeMapAddIconTalk(const struct FVector& ActorLocation, class FName InactiveFlag, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_TokyoLargeMapAddIconTalk");

	Params::MEH_NextEventStart_Walk_C_BPI_TokyoLargeMapAddIconTalk Parms{};

	Parms.ActorLocation = std::move(ActorLocation);
	Parms.InactiveFlag = InactiveFlag;
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_TokyoLargeMapDeleteIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_TokyoLargeMapDeleteIcon(class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_TokyoLargeMapDeleteIcon");

	Params::MEH_NextEventStart_Walk_C_BPI_TokyoLargeMapDeleteIcon Parms{};

	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CallEncountForDebug
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EncountID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           EnemyList                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   SafeZoneID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ManualSafeZone                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_BTL_SYMBOL_ENCOUNT                    EncountType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_CallEncountForDebug(int32 EncountID, const TArray<int32>& EnemyList, int32 SafeZoneID, bool ManualSafeZone, E_BTL_SYMBOL_ENCOUNT EncountType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CallEncountForDebug");

	Params::MEH_NextEventStart_Walk_C_BPI_CallEncountForDebug Parms{};

	Parms.EncountID = EncountID;
	Parms.EnemyList = std::move(EnemyList);
	Parms.SafeZoneID = SafeZoneID;
	Parms.ManualSafeZone = ManualSafeZone;
	Parms.EncountType = EncountType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CallEventEncount_ForUniqueSymbol
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EventEncountId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// bool                                    ManualWhenNotEscape                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    HitMapAttack                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_BTL_SYMBOL_ENCOUNT                    EncountType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_CallEventEncount_ForUniqueSymbol(int32 EventEncountId, const struct FTransform& SpawnTransform, bool ManualWhenNotEscape, bool HitMapAttack, E_BTL_SYMBOL_ENCOUNT EncountType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CallEventEncount_ForUniqueSymbol");

	Params::MEH_NextEventStart_Walk_C_BPI_CallEventEncount_ForUniqueSymbol Parms{};

	Parms.EventEncountId = EventEncountId;
	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.ManualWhenNotEscape = ManualWhenNotEscape;
	Parms.HitMapAttack = HitMapAttack;
	Parms.EncountType = EncountType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CallEventEncountForMagatsuka
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EventEncountId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SafeZoeID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ManualSafeZone                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    HitMapAttack                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_CallEventEncountForMagatsuka(int32 EventEncountId, int32 SafeZoeID, bool ManualSafeZone, bool HitMapAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CallEventEncountForMagatsuka");

	Params::MEH_NextEventStart_Walk_C_BPI_CallEventEncountForMagatsuka Parms{};

	Parms.EventEncountId = EventEncountId;
	Parms.SafeZoeID = SafeZoeID;
	Parms.ManualSafeZone = ManualSafeZone;
	Parms.HitMapAttack = HitMapAttack;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_NaviGimmickTutorial_ForInner
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::BPI_NaviGimmickTutorial_ForInner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_NaviGimmickTutorial_ForInner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_NaviGimmickTutorial_ForOuter
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::BPI_NaviGimmickTutorial_ForOuter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_NaviGimmickTutorial_ForOuter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_PreSystemLoad
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MapId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_MAP_SYSTEMRESIDENT_ID                 Enum                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_PreSystemLoad(int32 MapId, E_MAP_SYSTEMRESIDENT_ID Enum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_PreSystemLoad");

	Params::MEH_NextEventStart_Walk_C_BPI_PreSystemLoad Parms{};

	Parms.MapId = MapId;
	Parms.Enum = Enum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_EndMagatsuka_ForSimpleEvent
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::BPI_EndMagatsuka_ForSimpleEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_EndMagatsuka_ForSimpleEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_TokyoLargeMapShowPlace
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DataId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_TokyoLargeMapShowPlace(int32 DataId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_TokyoLargeMapShowPlace");

	Params::MEH_NextEventStart_Walk_C_BPI_TokyoLargeMapShowPlace Parms{};

	Parms.DataId = DataId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_TokyoLargeMapHidePlace
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DataId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_TokyoLargeMapHidePlace(int32 DataId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_TokyoLargeMapHidePlace");

	Params::MEH_NextEventStart_Walk_C_BPI_TokyoLargeMapHidePlace Parms{};

	Parms.DataId = DataId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_GardenLoad
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   WarpPoint                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FadeInTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_GardenLoad(int32 WarpPoint, float FadeInTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_GardenLoad");

	Params::MEH_NextEventStart_Walk_C_BPI_GardenLoad Parms{};

	Parms.WarpPoint = WarpPoint;
	Parms.FadeInTime = FadeInTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_GardenUnload
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FadeInTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_GardenUnload(float FadeInTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_GardenUnload");

	Params::MEH_NextEventStart_Walk_C_BPI_GardenUnload Parms{};

	Parms.FadeInTime = FadeInTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI Tokyo Large Map Add Icon Mission
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ActorLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MissionId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMEH_NextEventStart_Walk_C::BPI_Tokyo_Large_Map_Add_Icon_Mission(const struct FVector& ActorLocation, int32 MissionId, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI Tokyo Large Map Add Icon Mission");

	Params::MEH_NextEventStart_Walk_C_BPI_Tokyo_Large_Map_Add_Icon_Mission Parms{};

	Parms.ActorLocation = std::move(ActorLocation);
	Parms.MissionId = MissionId;
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_CallEventEncount_BossRush
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EventEncountId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NextEventID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NowEventID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Manual                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ChallengeMode                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_CallEventEncount_BossRush(int32 EventEncountId, int32 NextEventID, int32 NowEventID, bool Manual, bool ChallengeMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_CallEventEncount_BossRush");

	Params::MEH_NextEventStart_Walk_C_BPI_CallEventEncount_BossRush Parms{};

	Parms.EventEncountId = EventEncountId;
	Parms.NextEventID = NextEventID;
	Parms.NowEventID = NowEventID;
	Parms.Manual = Manual;
	Parms.ChallengeMode = ChallengeMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_RequestNaviDevilVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_RequestNaviDevilVisible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_RequestNaviDevilVisible");

	Params::MEH_NextEventStart_Walk_C_BPI_RequestNaviDevilVisible Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.EnvChange_Immediate
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::EnvChange_Immediate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "EnvChange_Immediate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_LoadMapBridgeMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NextMapId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NextAreaId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FadeCancel                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_LoadMapBridgeMode(int32 NextMapId, int32 NextAreaId, bool FadeCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_LoadMapBridgeMode");

	Params::MEH_NextEventStart_Walk_C_BPI_LoadMapBridgeMode Parms{};

	Parms.NextMapId = NextMapId;
	Parms.NextAreaId = NextAreaId;
	Parms.FadeCancel = FadeCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.InitCheck
// (BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::InitCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "InitCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_AddSpawnEnemyCount
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::BPI_AddSpawnEnemyCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_AddSpawnEnemyCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_LoadMap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InFadeCancel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_LoadMap(bool InFadeCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_LoadMap");

	Params::MEH_NextEventStart_Walk_C_BPI_LoadMap Parms{};

	Parms.InFadeCancel = InFadeCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_MapPlayerStop
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Stop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Param_Hidden                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMEH_NextEventStart_Walk_C::BPI_MapPlayerStop(bool Stop, bool Param_Hidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_MapPlayerStop");

	Params::MEH_NextEventStart_Walk_C_BPI_MapPlayerStop Parms{};

	Parms.Stop = Stop;
	Parms.Param_Hidden = Param_Hidden;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_SetEncountON
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::BPI_SetEncountON()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_SetEncountON");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_SetEncountOff
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::BPI_SetEncountOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_SetEncountOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MEH_NextEventStart_Walk.MEH_NextEventStart_Walk_C.BPI_ReturnFromBtl
// (Public, BlueprintCallable, BlueprintEvent)

void AMEH_NextEventStart_Walk_C::BPI_ReturnFromBtl()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MEH_NextEventStart_Walk_C", "BPI_ReturnFromBtl");

	UObject::ProcessEvent(Func, nullptr);
}

}

