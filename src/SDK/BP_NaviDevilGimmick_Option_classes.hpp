#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NaviDevilGimmick_Option

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NaviDevilGimmick_Option.BP_NaviDevilGimmick_Option_C
// 0x0050 (0x0270 - 0x0220)
class ABP_NaviDevilGimmick_Option_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_DebugBox;                                       // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitSize;                                           // 0x0240(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsView;                                            // 0x024C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6433[0x3];                                     // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             EvtDis_BeginOverlap;                               // 0x0250(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             EvtDis_EndOverlap;                                 // 0x0260(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void EvtDis_BeginOverlap__DelegateSignature();
	void EvtDis_EndOverlap__DelegateSignature();
	void ExecuteUbergraph_BP_NaviDevilGimmick_Option(int32 EntryPoint);
	void BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void UserConstructionScript();
	void CheckOverlap(bool* Overlap);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NaviDevilGimmick_Option_C">();
	}
	static class ABP_NaviDevilGimmick_Option_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NaviDevilGimmick_Option_C>();
	}
};
static_assert(alignof(ABP_NaviDevilGimmick_Option_C) == 0x000008, "Wrong alignment on ABP_NaviDevilGimmick_Option_C");
static_assert(sizeof(ABP_NaviDevilGimmick_Option_C) == 0x000270, "Wrong size on ABP_NaviDevilGimmick_Option_C");
static_assert(offsetof(ABP_NaviDevilGimmick_Option_C, UberGraphFrame) == 0x000220, "Member 'ABP_NaviDevilGimmick_Option_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_NaviDevilGimmick_Option_C, SM_DebugBox) == 0x000228, "Member 'ABP_NaviDevilGimmick_Option_C::SM_DebugBox' has a wrong offset!");
static_assert(offsetof(ABP_NaviDevilGimmick_Option_C, Box) == 0x000230, "Member 'ABP_NaviDevilGimmick_Option_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_NaviDevilGimmick_Option_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_NaviDevilGimmick_Option_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_NaviDevilGimmick_Option_C, HitSize) == 0x000240, "Member 'ABP_NaviDevilGimmick_Option_C::HitSize' has a wrong offset!");
static_assert(offsetof(ABP_NaviDevilGimmick_Option_C, IsView) == 0x00024C, "Member 'ABP_NaviDevilGimmick_Option_C::IsView' has a wrong offset!");
static_assert(offsetof(ABP_NaviDevilGimmick_Option_C, EvtDis_BeginOverlap) == 0x000250, "Member 'ABP_NaviDevilGimmick_Option_C::EvtDis_BeginOverlap' has a wrong offset!");
static_assert(offsetof(ABP_NaviDevilGimmick_Option_C, EvtDis_EndOverlap) == 0x000260, "Member 'ABP_NaviDevilGimmick_Option_C::EvtDis_EndOverlap' has a wrong offset!");

}

