#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TransportList2

#include "Basic.hpp"

#include "E_TRANSPORT_LIST_HEADER_TYPE_structs.hpp"
#include "Project_structs.hpp"
#include "E_SORTWINDOW_ANIM_STATE_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_TransportList2.WB_TransportList2_C.MouseEvent_OnHovered__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_TransportList2_C_MouseEvent_OnHovered__DelegateSignature final
{
public:
	int32                                         SlotIdx;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TransportList2_C_MouseEvent_OnHovered__DelegateSignature) == 0x000004, "Wrong alignment on WB_TransportList2_C_MouseEvent_OnHovered__DelegateSignature");
static_assert(sizeof(WB_TransportList2_C_MouseEvent_OnHovered__DelegateSignature) == 0x000004, "Wrong size on WB_TransportList2_C_MouseEvent_OnHovered__DelegateSignature");
static_assert(offsetof(WB_TransportList2_C_MouseEvent_OnHovered__DelegateSignature, SlotIdx) == 0x000000, "Member 'WB_TransportList2_C_MouseEvent_OnHovered__DelegateSignature::SlotIdx' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.MouseEvent_OnClicked__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_TransportList2_C_MouseEvent_OnClicked__DelegateSignature final
{
public:
	int32                                         SlotIdx;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TransportList2_C_MouseEvent_OnClicked__DelegateSignature) == 0x000004, "Wrong alignment on WB_TransportList2_C_MouseEvent_OnClicked__DelegateSignature");
static_assert(sizeof(WB_TransportList2_C_MouseEvent_OnClicked__DelegateSignature) == 0x000004, "Wrong size on WB_TransportList2_C_MouseEvent_OnClicked__DelegateSignature");
static_assert(offsetof(WB_TransportList2_C_MouseEvent_OnClicked__DelegateSignature, SlotIdx) == 0x000000, "Member 'WB_TransportList2_C_MouseEvent_OnClicked__DelegateSignature::SlotIdx' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.MouseEvent_DraggedScrollBar__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_TransportList2_C_MouseEvent_DraggedScrollBar__DelegateSignature final
{
public:
	float                                         ScrollRate;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TransportList2_C_MouseEvent_DraggedScrollBar__DelegateSignature) == 0x000004, "Wrong alignment on WB_TransportList2_C_MouseEvent_DraggedScrollBar__DelegateSignature");
static_assert(sizeof(WB_TransportList2_C_MouseEvent_DraggedScrollBar__DelegateSignature) == 0x000004, "Wrong size on WB_TransportList2_C_MouseEvent_DraggedScrollBar__DelegateSignature");
static_assert(offsetof(WB_TransportList2_C_MouseEvent_DraggedScrollBar__DelegateSignature, ScrollRate) == 0x000000, "Member 'WB_TransportList2_C_MouseEvent_DraggedScrollBar__DelegateSignature::ScrollRate' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.ExecuteUbergraph_WB_TransportList2
// 0x0044 (0x0044 - 0x0000)
struct WB_TransportList2_C_ExecuteUbergraph_WB_TransportList2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TransportList2_C_ExecuteUbergraph_WB_TransportList2) == 0x000004, "Wrong alignment on WB_TransportList2_C_ExecuteUbergraph_WB_TransportList2");
static_assert(sizeof(WB_TransportList2_C_ExecuteUbergraph_WB_TransportList2) == 0x000044, "Wrong size on WB_TransportList2_C_ExecuteUbergraph_WB_TransportList2");
static_assert(offsetof(WB_TransportList2_C_ExecuteUbergraph_WB_TransportList2, EntryPoint) == 0x000000, "Member 'WB_TransportList2_C_ExecuteUbergraph_WB_TransportList2::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_ExecuteUbergraph_WB_TransportList2, K2Node_Event_MyGeometry) == 0x000004, "Member 'WB_TransportList2_C_ExecuteUbergraph_WB_TransportList2::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_ExecuteUbergraph_WB_TransportList2, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WB_TransportList2_C_ExecuteUbergraph_WB_TransportList2::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_ExecuteUbergraph_WB_TransportList2, K2Node_Event_IsDesignTime) == 0x000040, "Member 'WB_TransportList2_C_ExecuteUbergraph_WB_TransportList2::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_TransportList2_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TransportList2_C_PreConstruct) == 0x000001, "Wrong alignment on WB_TransportList2_C_PreConstruct");
static_assert(sizeof(WB_TransportList2_C_PreConstruct) == 0x000001, "Wrong size on WB_TransportList2_C_PreConstruct");
static_assert(offsetof(WB_TransportList2_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_TransportList2_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_TransportList2_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TransportList2_C_Tick) == 0x000004, "Wrong alignment on WB_TransportList2_C_Tick");
static_assert(sizeof(WB_TransportList2_C_Tick) == 0x00003C, "Wrong size on WB_TransportList2_C_Tick");
static_assert(offsetof(WB_TransportList2_C_Tick, MyGeometry) == 0x000000, "Member 'WB_TransportList2_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_TransportList2_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.Init
// 0x0078 (0x0078 - 0x0000)
struct WB_TransportList2_C_Init final
{
public:
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_1;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec_1;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_2;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec_2;   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TransportList2_C_Init) == 0x000008, "Wrong alignment on WB_TransportList2_C_Init");
static_assert(sizeof(WB_TransportList2_C_Init) == 0x000078, "Wrong size on WB_TransportList2_C_Init");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000000, "Member 'WB_TransportList2_C_Init::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000008, "Member 'WB_TransportList2_C_Init::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_GetDesiredSize_ReturnValue) == 0x000010, "Member 'WB_TransportList2_C_Init::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_BreakVector2D_X) == 0x000018, "Member 'WB_TransportList2_C_Init::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_BreakVector2D_Y) == 0x00001C, "Member 'WB_TransportList2_C_Init::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000020, "Member 'WB_TransportList2_C_Init::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_GetSSPPositionDataByPartsName_OutVec) == 0x000028, "Member 'WB_TransportList2_C_Init::CallFunc_GetSSPPositionDataByPartsName_OutVec' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_GetDesiredSize_ReturnValue_1) == 0x000030, "Member 'WB_TransportList2_C_Init::CallFunc_GetDesiredSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_BreakVector2D_X_1) == 0x000038, "Member 'WB_TransportList2_C_Init::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_BreakVector2D_Y_1) == 0x00003C, "Member 'WB_TransportList2_C_Init::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x000040, "Member 'WB_TransportList2_C_Init::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_GetSSPPositionDataByPartsName_OutVec_1) == 0x000048, "Member 'WB_TransportList2_C_Init::CallFunc_GetSSPPositionDataByPartsName_OutVec_1' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_BreakVector2D_X_2) == 0x000050, "Member 'WB_TransportList2_C_Init::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_BreakVector2D_Y_2) == 0x000054, "Member 'WB_TransportList2_C_Init::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_GetDesiredSize_ReturnValue_2) == 0x000058, "Member 'WB_TransportList2_C_Init::CallFunc_GetDesiredSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_MakeVector2D_ReturnValue) == 0x000060, "Member 'WB_TransportList2_C_Init::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_BreakVector2D_X_3) == 0x000068, "Member 'WB_TransportList2_C_Init::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_BreakVector2D_Y_3) == 0x00006C, "Member 'WB_TransportList2_C_Init::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Init, CallFunc_GetSSPPositionDataByPartsName_OutVec_2) == 0x000070, "Member 'WB_TransportList2_C_Init::CallFunc_GetSSPPositionDataByPartsName_OutVec_2' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.GetSlotMaxNum
// 0x0008 (0x0008 - 0x0000)
struct WB_TransportList2_C_GetSlotMaxNum final
{
public:
	int32                                         SlotMaxNum;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotMaxNum_SlotMaxNum;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TransportList2_C_GetSlotMaxNum) == 0x000004, "Wrong alignment on WB_TransportList2_C_GetSlotMaxNum");
static_assert(sizeof(WB_TransportList2_C_GetSlotMaxNum) == 0x000008, "Wrong size on WB_TransportList2_C_GetSlotMaxNum");
static_assert(offsetof(WB_TransportList2_C_GetSlotMaxNum, SlotMaxNum) == 0x000000, "Member 'WB_TransportList2_C_GetSlotMaxNum::SlotMaxNum' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_GetSlotMaxNum, CallFunc_GetSlotMaxNum_SlotMaxNum) == 0x000004, "Member 'WB_TransportList2_C_GetSlotMaxNum::CallFunc_GetSlotMaxNum_SlotMaxNum' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.GetAnimState
// 0x0002 (0x0002 - 0x0000)
struct WB_TransportList2_C_GetAnimState final
{
public:
	E_SORTWINDOW_ANIM_STATE                       AinmState;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SORTWINDOW_ANIM_STATE                       CallFunc_GetAnimState_AinmState;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TransportList2_C_GetAnimState) == 0x000001, "Wrong alignment on WB_TransportList2_C_GetAnimState");
static_assert(sizeof(WB_TransportList2_C_GetAnimState) == 0x000002, "Wrong size on WB_TransportList2_C_GetAnimState");
static_assert(offsetof(WB_TransportList2_C_GetAnimState, AinmState) == 0x000000, "Member 'WB_TransportList2_C_GetAnimState::AinmState' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_GetAnimState, CallFunc_GetAnimState_AinmState) == 0x000001, "Member 'WB_TransportList2_C_GetAnimState::CallFunc_GetAnimState_AinmState' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.SetAnimState
// 0x0030 (0x0030 - 0x0000)
struct WB_TransportList2_C_SetAnimState final
{
public:
	E_SORTWINDOW_ANIM_STATE                       InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1318[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   L_AnimName;                                        // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1319[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TRANSPORT_LIST_HEADER_TYPE                  Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131A[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TransportList2_C_SetAnimState) == 0x000004, "Wrong alignment on WB_TransportList2_C_SetAnimState");
static_assert(sizeof(WB_TransportList2_C_SetAnimState) == 0x000030, "Wrong size on WB_TransportList2_C_SetAnimState");
static_assert(offsetof(WB_TransportList2_C_SetAnimState, InState) == 0x000000, "Member 'WB_TransportList2_C_SetAnimState::InState' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_SetAnimState, L_AnimName) == 0x000004, "Member 'WB_TransportList2_C_SetAnimState::L_AnimName' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_SetAnimState, Temp_name_Variable) == 0x00000C, "Member 'WB_TransportList2_C_SetAnimState::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_SetAnimState, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'WB_TransportList2_C_SetAnimState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_SetAnimState, Temp_name_Variable_1) == 0x000018, "Member 'WB_TransportList2_C_SetAnimState::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_SetAnimState, Temp_byte_Variable) == 0x000020, "Member 'WB_TransportList2_C_SetAnimState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_SetAnimState, K2Node_Select_Default) == 0x000024, "Member 'WB_TransportList2_C_SetAnimState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_SetAnimState, CallFunc_Play_ReturnValue) == 0x00002C, "Member 'WB_TransportList2_C_SetAnimState::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_SetAnimState, CallFunc_Play_ReturnValue_1) == 0x00002D, "Member 'WB_TransportList2_C_SetAnimState::CallFunc_Play_ReturnValue_1' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.Tick_Base
// 0x0002 (0x0002 - 0x0000)
struct WB_TransportList2_C_Tick_Base final
{
public:
	E_SORTWINDOW_ANIM_STATE                       CallFunc_GetAnimState_AinmState;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TransportList2_C_Tick_Base) == 0x000001, "Wrong alignment on WB_TransportList2_C_Tick_Base");
static_assert(sizeof(WB_TransportList2_C_Tick_Base) == 0x000002, "Wrong size on WB_TransportList2_C_Tick_Base");
static_assert(offsetof(WB_TransportList2_C_Tick_Base, CallFunc_GetAnimState_AinmState) == 0x000000, "Member 'WB_TransportList2_C_Tick_Base::CallFunc_GetAnimState_AinmState' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_Base, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WB_TransportList2_C_Tick_Base::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.Tick_In
// 0x002C (0x002C - 0x0000)
struct WB_TransportList2_C_Tick_In final
{
public:
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName;  // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName; // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131C[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName_1; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SORTWINDOW_ANIM_STATE                       CallFunc_GetAnimState_AinmState;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TransportList2_C_Tick_In) == 0x000004, "Wrong alignment on WB_TransportList2_C_Tick_In");
static_assert(sizeof(WB_TransportList2_C_Tick_In) == 0x00002C, "Wrong size on WB_TransportList2_C_Tick_In");
static_assert(offsetof(WB_TransportList2_C_Tick_In, CallFunc_IsPlaying_ReturnValue) == 0x000000, "Member 'WB_TransportList2_C_Tick_In::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_In, CallFunc_GetPlayingAnimationName_OutAnimPackName) == 0x000004, "Member 'WB_TransportList2_C_Tick_In::CallFunc_GetPlayingAnimationName_OutAnimPackName' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_In, CallFunc_GetPlayingAnimationName_OutAnimationName) == 0x00000C, "Member 'WB_TransportList2_C_Tick_In::CallFunc_GetPlayingAnimationName_OutAnimationName' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_In, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000014, "Member 'WB_TransportList2_C_Tick_In::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_In, CallFunc_IsPlaying_ReturnValue_1) == 0x000015, "Member 'WB_TransportList2_C_Tick_In::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_In, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'WB_TransportList2_C_Tick_In::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_In, CallFunc_GetPlayingAnimationName_OutAnimPackName_1) == 0x000018, "Member 'WB_TransportList2_C_Tick_In::CallFunc_GetPlayingAnimationName_OutAnimPackName_1' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_In, CallFunc_GetPlayingAnimationName_OutAnimationName_1) == 0x000020, "Member 'WB_TransportList2_C_Tick_In::CallFunc_GetPlayingAnimationName_OutAnimationName_1' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_In, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000028, "Member 'WB_TransportList2_C_Tick_In::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_In, CallFunc_BooleanAND_ReturnValue_1) == 0x000029, "Member 'WB_TransportList2_C_Tick_In::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_In, CallFunc_GetAnimState_AinmState) == 0x00002A, "Member 'WB_TransportList2_C_Tick_In::CallFunc_GetAnimState_AinmState' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_In, K2Node_SwitchEnum_CmpSuccess) == 0x00002B, "Member 'WB_TransportList2_C_Tick_In::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.Tick_Out
// 0x002C (0x002C - 0x0000)
struct WB_TransportList2_C_Tick_Out final
{
public:
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName;  // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName; // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131E[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName_1; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SORTWINDOW_ANIM_STATE                       CallFunc_GetAnimState_AinmState;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TransportList2_C_Tick_Out) == 0x000004, "Wrong alignment on WB_TransportList2_C_Tick_Out");
static_assert(sizeof(WB_TransportList2_C_Tick_Out) == 0x00002C, "Wrong size on WB_TransportList2_C_Tick_Out");
static_assert(offsetof(WB_TransportList2_C_Tick_Out, CallFunc_IsPlaying_ReturnValue) == 0x000000, "Member 'WB_TransportList2_C_Tick_Out::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_Out, CallFunc_GetPlayingAnimationName_OutAnimPackName) == 0x000004, "Member 'WB_TransportList2_C_Tick_Out::CallFunc_GetPlayingAnimationName_OutAnimPackName' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_Out, CallFunc_GetPlayingAnimationName_OutAnimationName) == 0x00000C, "Member 'WB_TransportList2_C_Tick_Out::CallFunc_GetPlayingAnimationName_OutAnimationName' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_Out, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000014, "Member 'WB_TransportList2_C_Tick_Out::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_Out, CallFunc_IsPlaying_ReturnValue_1) == 0x000015, "Member 'WB_TransportList2_C_Tick_Out::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_Out, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'WB_TransportList2_C_Tick_Out::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_Out, CallFunc_GetPlayingAnimationName_OutAnimPackName_1) == 0x000018, "Member 'WB_TransportList2_C_Tick_Out::CallFunc_GetPlayingAnimationName_OutAnimPackName_1' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_Out, CallFunc_GetPlayingAnimationName_OutAnimationName_1) == 0x000020, "Member 'WB_TransportList2_C_Tick_Out::CallFunc_GetPlayingAnimationName_OutAnimationName_1' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_Out, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000028, "Member 'WB_TransportList2_C_Tick_Out::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_Out, CallFunc_BooleanAND_ReturnValue_1) == 0x000029, "Member 'WB_TransportList2_C_Tick_Out::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_Out, CallFunc_GetAnimState_AinmState) == 0x00002A, "Member 'WB_TransportList2_C_Tick_Out::CallFunc_GetAnimState_AinmState' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_Tick_Out, K2Node_SwitchEnum_CmpSuccess) == 0x00002B, "Member 'WB_TransportList2_C_Tick_Out::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.SetSlotListInfo
// 0x0018 (0x0018 - 0x0000)
struct WB_TransportList2_C_SetSlotListInfo final
{
public:
	TArray<struct FTransportLocationSlotInfo>     InListInfo2;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsUpdateAnim;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TransportList2_C_SetSlotListInfo) == 0x000008, "Wrong alignment on WB_TransportList2_C_SetSlotListInfo");
static_assert(sizeof(WB_TransportList2_C_SetSlotListInfo) == 0x000018, "Wrong size on WB_TransportList2_C_SetSlotListInfo");
static_assert(offsetof(WB_TransportList2_C_SetSlotListInfo, InListInfo2) == 0x000000, "Member 'WB_TransportList2_C_SetSlotListInfo::InListInfo2' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_SetSlotListInfo, IsUpdateAnim) == 0x000010, "Member 'WB_TransportList2_C_SetSlotListInfo::IsUpdateAnim' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.SetHeaderType
// 0x0001 (0x0001 - 0x0000)
struct WB_TransportList2_C_SetHeaderType final
{
public:
	E_TRANSPORT_LIST_HEADER_TYPE                  InHeaderType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TransportList2_C_SetHeaderType) == 0x000001, "Wrong alignment on WB_TransportList2_C_SetHeaderType");
static_assert(sizeof(WB_TransportList2_C_SetHeaderType) == 0x000001, "Wrong size on WB_TransportList2_C_SetHeaderType");
static_assert(offsetof(WB_TransportList2_C_SetHeaderType, InHeaderType) == 0x000000, "Member 'WB_TransportList2_C_SetHeaderType::InHeaderType' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.GetCursorIdx
// 0x0008 (0x0008 - 0x0000)
struct WB_TransportList2_C_GetCursorIdx final
{
public:
	int32                                         CursorIdx;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCursorIdx_CursorIdx;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TransportList2_C_GetCursorIdx) == 0x000004, "Wrong alignment on WB_TransportList2_C_GetCursorIdx");
static_assert(sizeof(WB_TransportList2_C_GetCursorIdx) == 0x000008, "Wrong size on WB_TransportList2_C_GetCursorIdx");
static_assert(offsetof(WB_TransportList2_C_GetCursorIdx, CursorIdx) == 0x000000, "Member 'WB_TransportList2_C_GetCursorIdx::CursorIdx' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_GetCursorIdx, CallFunc_GetCursorIdx_CursorIdx) == 0x000004, "Member 'WB_TransportList2_C_GetCursorIdx::CallFunc_GetCursorIdx_CursorIdx' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.SetCursorIdx
// 0x0008 (0x0008 - 0x0000)
struct WB_TransportList2_C_SetCursorIdx final
{
public:
	int32                                         InSlotIdx;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUpdateAnim;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TransportList2_C_SetCursorIdx) == 0x000004, "Wrong alignment on WB_TransportList2_C_SetCursorIdx");
static_assert(sizeof(WB_TransportList2_C_SetCursorIdx) == 0x000008, "Wrong size on WB_TransportList2_C_SetCursorIdx");
static_assert(offsetof(WB_TransportList2_C_SetCursorIdx, InSlotIdx) == 0x000000, "Member 'WB_TransportList2_C_SetCursorIdx::InSlotIdx' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_SetCursorIdx, IsUpdateAnim) == 0x000004, "Member 'WB_TransportList2_C_SetCursorIdx::IsUpdateAnim' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.SetScrollBarRate
// 0x0008 (0x0008 - 0x0000)
struct WB_TransportList2_C_SetScrollBarRate final
{
public:
	float                                         InScrollRate;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TransportList2_C_SetScrollBarRate) == 0x000004, "Wrong alignment on WB_TransportList2_C_SetScrollBarRate");
static_assert(sizeof(WB_TransportList2_C_SetScrollBarRate) == 0x000008, "Wrong size on WB_TransportList2_C_SetScrollBarRate");
static_assert(offsetof(WB_TransportList2_C_SetScrollBarRate, InScrollRate) == 0x000000, "Member 'WB_TransportList2_C_SetScrollBarRate::InScrollRate' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_SetScrollBarRate, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'WB_TransportList2_C_SetScrollBarRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.SetScrollbarVisibility
// 0x0001 (0x0001 - 0x0000)
struct WB_TransportList2_C_SetScrollbarVisibility final
{
public:
	bool                                          IsVisibleScrollBar;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TransportList2_C_SetScrollbarVisibility) == 0x000001, "Wrong alignment on WB_TransportList2_C_SetScrollbarVisibility");
static_assert(sizeof(WB_TransportList2_C_SetScrollbarVisibility) == 0x000001, "Wrong size on WB_TransportList2_C_SetScrollbarVisibility");
static_assert(offsetof(WB_TransportList2_C_SetScrollbarVisibility, IsVisibleScrollBar) == 0x000000, "Member 'WB_TransportList2_C_SetScrollbarVisibility::IsVisibleScrollBar' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.SetAppliedSlotIdx
// 0x0008 (0x0008 - 0x0000)
struct WB_TransportList2_C_SetAppliedSlotIdx final
{
public:
	int32                                         InSlotIdx;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUpdateAnim;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TransportList2_C_SetAppliedSlotIdx) == 0x000004, "Wrong alignment on WB_TransportList2_C_SetAppliedSlotIdx");
static_assert(sizeof(WB_TransportList2_C_SetAppliedSlotIdx) == 0x000008, "Wrong size on WB_TransportList2_C_SetAppliedSlotIdx");
static_assert(offsetof(WB_TransportList2_C_SetAppliedSlotIdx, InSlotIdx) == 0x000000, "Member 'WB_TransportList2_C_SetAppliedSlotIdx::InSlotIdx' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_SetAppliedSlotIdx, IsUpdateAnim) == 0x000004, "Member 'WB_TransportList2_C_SetAppliedSlotIdx::IsUpdateAnim' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.BindMouseInputEvent
// 0x0030 (0x0030 - 0x0000)
struct WB_TransportList2_C_BindMouseInputEvent final
{
public:
	TDelegate<void(float Position)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 SlotIdx)>                K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 SlotIdx)>                K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WB_TransportList2_C_BindMouseInputEvent) == 0x000004, "Wrong alignment on WB_TransportList2_C_BindMouseInputEvent");
static_assert(sizeof(WB_TransportList2_C_BindMouseInputEvent) == 0x000030, "Wrong size on WB_TransportList2_C_BindMouseInputEvent");
static_assert(offsetof(WB_TransportList2_C_BindMouseInputEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WB_TransportList2_C_BindMouseInputEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_BindMouseInputEvent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'WB_TransportList2_C_BindMouseInputEvent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_BindMouseInputEvent, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'WB_TransportList2_C_BindMouseInputEvent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.GetAppliedSlotIdx
// 0x0008 (0x0008 - 0x0000)
struct WB_TransportList2_C_GetAppliedSlotIdx final
{
public:
	int32                                         CursorIdx;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAppliedSlotIdx_AppliedSlotIdx;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TransportList2_C_GetAppliedSlotIdx) == 0x000004, "Wrong alignment on WB_TransportList2_C_GetAppliedSlotIdx");
static_assert(sizeof(WB_TransportList2_C_GetAppliedSlotIdx) == 0x000008, "Wrong size on WB_TransportList2_C_GetAppliedSlotIdx");
static_assert(offsetof(WB_TransportList2_C_GetAppliedSlotIdx, CursorIdx) == 0x000000, "Member 'WB_TransportList2_C_GetAppliedSlotIdx::CursorIdx' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_GetAppliedSlotIdx, CallFunc_GetAppliedSlotIdx_AppliedSlotIdx) == 0x000004, "Member 'WB_TransportList2_C_GetAppliedSlotIdx::CallFunc_GetAppliedSlotIdx_AppliedSlotIdx' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.OnHoveredSlot_ByMouse
// 0x0004 (0x0004 - 0x0000)
struct WB_TransportList2_C_OnHoveredSlot_ByMouse final
{
public:
	int32                                         InSlotIdx;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TransportList2_C_OnHoveredSlot_ByMouse) == 0x000004, "Wrong alignment on WB_TransportList2_C_OnHoveredSlot_ByMouse");
static_assert(sizeof(WB_TransportList2_C_OnHoveredSlot_ByMouse) == 0x000004, "Wrong size on WB_TransportList2_C_OnHoveredSlot_ByMouse");
static_assert(offsetof(WB_TransportList2_C_OnHoveredSlot_ByMouse, InSlotIdx) == 0x000000, "Member 'WB_TransportList2_C_OnHoveredSlot_ByMouse::InSlotIdx' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.OnClickedSlot_ByMouse
// 0x0004 (0x0004 - 0x0000)
struct WB_TransportList2_C_OnClickedSlot_ByMouse final
{
public:
	int32                                         InSlotIdx;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TransportList2_C_OnClickedSlot_ByMouse) == 0x000004, "Wrong alignment on WB_TransportList2_C_OnClickedSlot_ByMouse");
static_assert(sizeof(WB_TransportList2_C_OnClickedSlot_ByMouse) == 0x000004, "Wrong size on WB_TransportList2_C_OnClickedSlot_ByMouse");
static_assert(offsetof(WB_TransportList2_C_OnClickedSlot_ByMouse, InSlotIdx) == 0x000000, "Member 'WB_TransportList2_C_OnClickedSlot_ByMouse::InSlotIdx' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.OnDraggedScrollBar_ByMouse
// 0x0004 (0x0004 - 0x0000)
struct WB_TransportList2_C_OnDraggedScrollBar_ByMouse final
{
public:
	float                                         InScrollRate;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TransportList2_C_OnDraggedScrollBar_ByMouse) == 0x000004, "Wrong alignment on WB_TransportList2_C_OnDraggedScrollBar_ByMouse");
static_assert(sizeof(WB_TransportList2_C_OnDraggedScrollBar_ByMouse) == 0x000004, "Wrong size on WB_TransportList2_C_OnDraggedScrollBar_ByMouse");
static_assert(offsetof(WB_TransportList2_C_OnDraggedScrollBar_ByMouse, InScrollRate) == 0x000000, "Member 'WB_TransportList2_C_OnDraggedScrollBar_ByMouse::InScrollRate' has a wrong offset!");

// Function WB_TransportList2.WB_TransportList2_C.IsEnableMouseWheel
// 0x0004 (0x0004 - 0x0000)
struct WB_TransportList2_C_IsEnableMouseWheel final
{
public:
	bool                                          IsEnableScroll;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMouseOveredToScrollBar_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetMouseOvered_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_TransportList2_C_IsEnableMouseWheel) == 0x000001, "Wrong alignment on WB_TransportList2_C_IsEnableMouseWheel");
static_assert(sizeof(WB_TransportList2_C_IsEnableMouseWheel) == 0x000004, "Wrong size on WB_TransportList2_C_IsEnableMouseWheel");
static_assert(offsetof(WB_TransportList2_C_IsEnableMouseWheel, IsEnableScroll) == 0x000000, "Member 'WB_TransportList2_C_IsEnableMouseWheel::IsEnableScroll' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_IsEnableMouseWheel, CallFunc_IsMouseOveredToScrollBar_ReturnValue) == 0x000001, "Member 'WB_TransportList2_C_IsEnableMouseWheel::CallFunc_IsMouseOveredToScrollBar_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_IsEnableMouseWheel, CallFunc_GetMouseOvered_ReturnValue) == 0x000002, "Member 'WB_TransportList2_C_IsEnableMouseWheel::CallFunc_GetMouseOvered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TransportList2_C_IsEnableMouseWheel, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'WB_TransportList2_C_IsEnableMouseWheel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

