#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplineSymbolComeRange

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SplineSymbolComeRange.BP_SplineSymbolComeRange_C.ExecuteUbergraph_BP_SplineSymbolComeRange
// 0x0008 (0x0008 - 0x0000)
struct BP_SplineSymbolComeRange_C_ExecuteUbergraph_BP_SplineSymbolComeRange final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineSymbolComeRange_C_ExecuteUbergraph_BP_SplineSymbolComeRange) == 0x000004, "Wrong alignment on BP_SplineSymbolComeRange_C_ExecuteUbergraph_BP_SplineSymbolComeRange");
static_assert(sizeof(BP_SplineSymbolComeRange_C_ExecuteUbergraph_BP_SplineSymbolComeRange) == 0x000008, "Wrong size on BP_SplineSymbolComeRange_C_ExecuteUbergraph_BP_SplineSymbolComeRange");
static_assert(offsetof(BP_SplineSymbolComeRange_C_ExecuteUbergraph_BP_SplineSymbolComeRange, EntryPoint) == 0x000000, "Member 'BP_SplineSymbolComeRange_C_ExecuteUbergraph_BP_SplineSymbolComeRange::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_ExecuteUbergraph_BP_SplineSymbolComeRange, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_SplineSymbolComeRange_C_ExecuteUbergraph_BP_SplineSymbolComeRange::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SplineSymbolComeRange.BP_SplineSymbolComeRange_C.UserConstructionScript
// 0x0350 (0x0350 - 0x0000)
struct BP_SplineSymbolComeRange_C_UserConstructionScript final
{
public:
	struct FVector                                L_Pos;                                             // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Distance;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_CheckLen;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_SplineLength;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_LoopEnd;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95D3[0x8];                                     // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	class UTextRenderComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95D4[0xC];                                     // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95D5[0xC];                                     // 0x0164(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x01A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetMinMaxLocation_MinX;                   // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMinMaxLocation_MaxX;                   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMinMaxLocation_MinY;                   // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMinMaxLocation_MaxY;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95D6[0x8];                                     // 0x0278(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0280(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_1;    // 0x02B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95D7[0x3];                                     // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IS_EDITOR_BUILD_ReturnValue;              // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineSymbolComeRange_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_SplineSymbolComeRange_C_UserConstructionScript");
static_assert(sizeof(BP_SplineSymbolComeRange_C_UserConstructionScript) == 0x000350, "Wrong size on BP_SplineSymbolComeRange_C_UserConstructionScript");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, L_Pos) == 0x000000, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::L_Pos' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, L_Distance) == 0x00000C, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::L_Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, L_CheckLen) == 0x000010, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::L_CheckLen' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, L_SplineLength) == 0x000014, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::L_SplineLength' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, L_LoopEnd) == 0x000018, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::L_LoopEnd' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, L_index) == 0x00001C, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::L_index' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000038, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000040, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x00004C, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000090, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_GetMaterial_ReturnValue) == 0x000098, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000A0, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_GetMaterial_ReturnValue_1) == 0x0000A8, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x0000B0, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x0000C4, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x0000C8, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x0000CC, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000D0, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000E0, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_BreakTransform_Location) == 0x000110, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_BreakTransform_Rotation) == 0x00011C, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_BreakTransform_Scale) == 0x000128, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000134, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_BreakVector_X_1) == 0x000140, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_BreakVector_Y_1) == 0x000144, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_BreakVector_Z_1) == 0x000148, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_BreakVector_X_2) == 0x00014C, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_BreakVector_Y_2) == 0x000150, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_BreakVector_Z_2) == 0x000154, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000158, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue_1) == 0x000170, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0001A0, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0001A4, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_GetMinMaxLocation_MinX) == 0x00022C, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_GetMinMaxLocation_MinX' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_GetMinMaxLocation_MaxX) == 0x000230, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_GetMinMaxLocation_MaxX' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_GetMinMaxLocation_MinY) == 0x000234, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_GetMinMaxLocation_MinY' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_GetMinMaxLocation_MaxY) == 0x000238, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_GetMinMaxLocation_MaxY' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00023C, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000240, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000244, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000248, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00024C, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000250, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000254, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000258, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x00025C, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_2) == 0x000268, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, Temp_int_Variable) == 0x000274, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue_2) == 0x000280, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_K2_SetWorldTransform_SweepHitResult_1) == 0x0002B0, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_K2_SetWorldTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000338, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x00033C, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_UserConstructionScript, CallFunc_IS_EDITOR_BUILD_ReturnValue) == 0x000340, "Member 'BP_SplineSymbolComeRange_C_UserConstructionScript::CallFunc_IS_EDITOR_BUILD_ReturnValue' has a wrong offset!");

// Function BP_SplineSymbolComeRange.BP_SplineSymbolComeRange_C.CheckAreaIN
// 0x0148 (0x0148 - 0x0000)
struct BP_SplineSymbolComeRange_C_CheckAreaIN final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AddHitSize;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AreaIN;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95D8[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_SplineDir;                                       // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Pos;                                             // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_NearPoint;                                       // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_FindDirectionClosestToWorldLocation_ReturnValue; // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95D9[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_2;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95DA[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue; // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95DB[0x2];                                     // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95DC[0x2];                                     // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_5;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineSymbolComeRange_C_CheckAreaIN) == 0x000004, "Wrong alignment on BP_SplineSymbolComeRange_C_CheckAreaIN");
static_assert(sizeof(BP_SplineSymbolComeRange_C_CheckAreaIN) == 0x000148, "Wrong size on BP_SplineSymbolComeRange_C_CheckAreaIN");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, Pos) == 0x000000, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::Pos' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, AddHitSize) == 0x00000C, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::AddHitSize' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, AreaIN) == 0x000010, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::AreaIN' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, L_SplineDir) == 0x000014, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::L_SplineDir' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, L_Pos) == 0x000020, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::L_Pos' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, L_NearPoint) == 0x00002C, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::L_NearPoint' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000044, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_X) == 0x000054, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_Y) == 0x000058, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_Z) == 0x00005C, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000064, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000068, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x00006C, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_X_1) == 0x000070, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_Y_1) == 0x000074, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_Z_1) == 0x000078, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_IsValid_ReturnValue) == 0x00007C, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00007D, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_Less_FloatFloat_ReturnValue) == 0x00007E, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BooleanOR_ReturnValue) == 0x00007F, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000080, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_Normal_ReturnValue) == 0x00008C, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_MakeRotFromZX_ReturnValue) == 0x000098, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_FindDirectionClosestToWorldLocation_ReturnValue) == 0x0000A4, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_FindDirectionClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_GetRightVector_ReturnValue) == 0x0000B0, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000BC, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000C0, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000CC, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_X_2) == 0x0000D0, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_Y_2) == 0x0000D4, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_Z_2) == 0x0000D8, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BooleanXOR_ReturnValue) == 0x0000DC, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000E0, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_X_3) == 0x0000EC, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_Y_3) == 0x0000F0, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_Z_3) == 0x0000F4, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_FindLocationClosestToWorldLocation_ReturnValue) == 0x0000F8, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_FindLocationClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_X_4) == 0x000104, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_Y_4) == 0x000108, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_Z_4) == 0x00010C, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_Abs_ReturnValue) == 0x000110, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_MakeVector_ReturnValue_1) == 0x000114, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_Vector_Distance_ReturnValue) == 0x000120, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000124, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000125, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_Vector_Distance_ReturnValue_1) == 0x000128, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00012C, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00012D, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_X_5) == 0x000130, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_Y_5) == 0x000134, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_BreakVector_Z_5) == 0x000138, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CheckAreaIN, CallFunc_MakeVector_ReturnValue_2) == 0x00013C, "Member 'BP_SplineSymbolComeRange_C_CheckAreaIN::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");

// Function BP_SplineSymbolComeRange.BP_SplineSymbolComeRange_C.GetMinMaxLocation
// 0x00E4 (0x00E4 - 0x0000)
struct BP_SplineSymbolComeRange_C_GetMinMaxLocation final
{
public:
	float                                         MinX;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxX;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinY;                                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxY;                                              // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_MaxY;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_MinY;                                            // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_MaxX;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_MinX;                                            // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Pos;                                             // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Distance;                                        // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_CheckLen;                                        // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_SplineLength;                                    // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_LoopEnd;                                         // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95DD[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95DE[0x1];                                     // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_3;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95DF[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_4;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95E0[0x2];                                     // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_5;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95E1[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_6;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95E2[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_7;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95E3[0x2];                                     // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95E4[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineSymbolComeRange_C_GetMinMaxLocation) == 0x000004, "Wrong alignment on BP_SplineSymbolComeRange_C_GetMinMaxLocation");
static_assert(sizeof(BP_SplineSymbolComeRange_C_GetMinMaxLocation) == 0x0000E4, "Wrong size on BP_SplineSymbolComeRange_C_GetMinMaxLocation");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, MinX) == 0x000000, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::MinX' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, MaxX) == 0x000004, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::MaxX' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, MinY) == 0x000008, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::MinY' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, MaxY) == 0x00000C, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::MaxY' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, L_MaxY) == 0x000010, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::L_MaxY' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, L_MinY) == 0x000014, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::L_MinY' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, L_MaxX) == 0x000018, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::L_MaxX' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, L_MinX) == 0x00001C, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::L_MinX' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, L_Pos) == 0x000020, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::L_Pos' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, L_Distance) == 0x00002C, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::L_Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, L_CheckLen) == 0x000030, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::L_CheckLen' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, L_SplineLength) == 0x000034, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::L_SplineLength' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, L_index) == 0x000038, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::L_index' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, L_LoopEnd) == 0x00003C, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::L_LoopEnd' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_GetSplineLength_ReturnValue) == 0x000040, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_X) == 0x000044, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_Z) == 0x00004C, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_X_1) == 0x000054, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_Y_1) == 0x000058, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_Z_1) == 0x00005C, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_X_2) == 0x000060, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_Y_2) == 0x000064, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_Z_2) == 0x000068, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BooleanOR_ReturnValue) == 0x00006D, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00006E, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_X_3) == 0x000070, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_Y_3) == 0x000074, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_Z_3) == 0x000078, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_Less_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_X_4) == 0x000080, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_Y_4) == 0x000084, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_Z_4) == 0x000088, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BooleanOR_ReturnValue_1) == 0x00008C, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00008D, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_X_5) == 0x000090, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_Y_5) == 0x000094, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_Z_5) == 0x000098, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00009C, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_X_6) == 0x0000A0, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_Y_6) == 0x0000A4, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_Z_6) == 0x0000A8, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BooleanOR_ReturnValue_2) == 0x0000AC, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0000AD, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_X_7) == 0x0000B0, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_Y_7) == 0x0000B4, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BreakVector_Z_7) == 0x0000B8, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000BC, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_BooleanOR_ReturnValue_3) == 0x0000BD, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x0000C0, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, Temp_int_Variable) == 0x0000CC, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000D8, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000DC, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_GetMinMaxLocation, CallFunc_FTrunc_ReturnValue) == 0x0000E0, "Member 'BP_SplineSymbolComeRange_C_GetMinMaxLocation::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function BP_SplineSymbolComeRange.BP_SplineSymbolComeRange_C.CopySplineData
// 0x00E8 (0x00E8 - 0x0000)
struct BP_SplineSymbolComeRange_C_CopySplineData final
{
public:
	class USplineComponent*                       SrcSpline;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       DstSpline;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PosZ_Fix;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95E5[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PosZ;                                              // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_LoopEnd;                                         // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95E6[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95E7[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95E8[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95E9[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue; // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetArriveTangentAtSplinePoint_ReturnValue; // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplinePointType                              CallFunc_GetSplinePointType_ReturnValue;           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95EA[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue;        // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue;     // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineSymbolComeRange_C_CopySplineData) == 0x000008, "Wrong alignment on BP_SplineSymbolComeRange_C_CopySplineData");
static_assert(sizeof(BP_SplineSymbolComeRange_C_CopySplineData) == 0x0000E8, "Wrong size on BP_SplineSymbolComeRange_C_CopySplineData");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, SrcSpline) == 0x000000, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::SrcSpline' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, DstSpline) == 0x000008, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::DstSpline' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, PosZ_Fix) == 0x000010, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::PosZ_Fix' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, PosZ) == 0x000014, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::PosZ' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, L_index) == 0x000018, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::L_index' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, L_LoopEnd) == 0x00001C, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::L_LoopEnd' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, Temp_bool_Variable) == 0x000020, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, Temp_float_Variable) == 0x000024, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, Temp_bool_Variable_1) == 0x000028, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, Temp_float_Variable_1) == 0x00002C, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, Temp_bool_Variable_2) == 0x000030, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_MakeVector_ReturnValue) == 0x000034, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, Temp_int_Variable) == 0x000040, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x00004C, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_Subtract_IntInt_ReturnValue) == 0x000050, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue) == 0x000054, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_BreakVector_X) == 0x000060, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_BreakVector_Y) == 0x000064, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_BreakVector_Z) == 0x000068, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_GetArriveTangentAtSplinePoint_ReturnValue) == 0x00006C, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_GetArriveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, K2Node_Select_Default) == 0x000078, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_BreakVector_X_1) == 0x00007C, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_BreakVector_Y_1) == 0x000080, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_BreakVector_Z_1) == 0x000084, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_MakeVector_ReturnValue_1) == 0x000088, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, K2Node_Select_Default_1) == 0x000094, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_MakeVector_ReturnValue_2) == 0x000098, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_GetSplinePointType_ReturnValue) == 0x0000A4, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_GetSplinePointType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_GetScaleAtSplinePoint_ReturnValue) == 0x0000A8, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_GetScaleAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_GetRotationAtSplinePoint_ReturnValue) == 0x0000B4, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_GetRotationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x0000C0, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_BreakVector_X_2) == 0x0000CC, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_BreakVector_Y_2) == 0x0000D0, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_BreakVector_Z_2) == 0x0000D4, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, K2Node_Select_Default_2) == 0x0000D8, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CopySplineData, CallFunc_MakeVector_ReturnValue_3) == 0x0000DC, "Member 'BP_SplineSymbolComeRange_C_CopySplineData::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");

// Function BP_SplineSymbolComeRange.BP_SplineSymbolComeRange_C.CreatePlaneSpline
// 0x0050 (0x0050 - 0x0000)
struct BP_SplineSymbolComeRange_C_CreatePlaneSpline final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	class USplineComponent*                       CallFunc_AddComponent_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineSymbolComeRange_C_CreatePlaneSpline) == 0x000010, "Wrong alignment on BP_SplineSymbolComeRange_C_CreatePlaneSpline");
static_assert(sizeof(BP_SplineSymbolComeRange_C_CreatePlaneSpline) == 0x000050, "Wrong size on BP_SplineSymbolComeRange_C_CreatePlaneSpline");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CreatePlaneSpline, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_SplineSymbolComeRange_C_CreatePlaneSpline::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CreatePlaneSpline, CallFunc_AddComponent_ReturnValue) == 0x000030, "Member 'BP_SplineSymbolComeRange_C_CreatePlaneSpline::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CreatePlaneSpline, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_SplineSymbolComeRange_C_CreatePlaneSpline::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CreatePlaneSpline, CallFunc_BreakVector_X) == 0x000044, "Member 'BP_SplineSymbolComeRange_C_CreatePlaneSpline::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CreatePlaneSpline, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_SplineSymbolComeRange_C_CreatePlaneSpline::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_CreatePlaneSpline, CallFunc_BreakVector_Z) == 0x00004C, "Member 'BP_SplineSymbolComeRange_C_CreatePlaneSpline::CallFunc_BreakVector_Z' has a wrong offset!");

// Function BP_SplineSymbolComeRange.BP_SplineSymbolComeRange_C.DestroyPlaneSpline
// 0x0001 (0x0001 - 0x0000)
struct BP_SplineSymbolComeRange_C_DestroyPlaneSpline final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SplineSymbolComeRange_C_DestroyPlaneSpline) == 0x000001, "Wrong alignment on BP_SplineSymbolComeRange_C_DestroyPlaneSpline");
static_assert(sizeof(BP_SplineSymbolComeRange_C_DestroyPlaneSpline) == 0x000001, "Wrong size on BP_SplineSymbolComeRange_C_DestroyPlaneSpline");
static_assert(offsetof(BP_SplineSymbolComeRange_C_DestroyPlaneSpline, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_SplineSymbolComeRange_C_DestroyPlaneSpline::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SplineSymbolComeRange.BP_SplineSymbolComeRange_C.LineView
// 0x0168 (0x0168 - 0x0000)
struct BP_SplineSymbolComeRange_C_LineView final
{
public:
	bool                                          Trace;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95EB[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_End;                                             // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Start;                                           // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Pos;                                             // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Distance;                                        // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_CheckLen;                                        // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_LoopEnd;                                         // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_SplineLength;                                    // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95EC[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95ED[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x005C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95EE[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineSymbolComeRange_C_LineView) == 0x000008, "Wrong alignment on BP_SplineSymbolComeRange_C_LineView");
static_assert(sizeof(BP_SplineSymbolComeRange_C_LineView) == 0x000168, "Wrong size on BP_SplineSymbolComeRange_C_LineView");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, Trace) == 0x000000, "Member 'BP_SplineSymbolComeRange_C_LineView::Trace' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, L_End) == 0x000004, "Member 'BP_SplineSymbolComeRange_C_LineView::L_End' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, L_Start) == 0x000010, "Member 'BP_SplineSymbolComeRange_C_LineView::L_Start' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, L_index) == 0x00001C, "Member 'BP_SplineSymbolComeRange_C_LineView::L_index' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, L_Pos) == 0x000020, "Member 'BP_SplineSymbolComeRange_C_LineView::L_Pos' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, L_Distance) == 0x00002C, "Member 'BP_SplineSymbolComeRange_C_LineView::L_Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, L_CheckLen) == 0x000030, "Member 'BP_SplineSymbolComeRange_C_LineView::L_CheckLen' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, L_LoopEnd) == 0x000034, "Member 'BP_SplineSymbolComeRange_C_LineView::L_LoopEnd' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, L_SplineLength) == 0x000038, "Member 'BP_SplineSymbolComeRange_C_LineView::L_SplineLength' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, Temp_object_Variable) == 0x000040, "Member 'BP_SplineSymbolComeRange_C_LineView::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, Temp_int_Variable) == 0x000050, "Member 'BP_SplineSymbolComeRange_C_LineView::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000054, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_LineTraceSingle_OutHit) == 0x00005C, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_LineTraceSingle_ReturnValue) == 0x0000E4, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_GetSplineLength_ReturnValue) == 0x0000E8, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_MakeVector_ReturnValue) == 0x0000EC, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F8, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_MakeVector_ReturnValue_1) == 0x000104, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000110, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00011C, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_BreakVector_X) == 0x000128, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_BreakVector_Y) == 0x00012C, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_BreakVector_Z) == 0x000130, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_BreakVector_X_1) == 0x000134, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_BreakVector_Y_1) == 0x000138, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_BreakVector_Z_1) == 0x00013C, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000140, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_MakeVector_ReturnValue_2) == 0x00014C, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000158, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00015C, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineSymbolComeRange_C_LineView, CallFunc_FTrunc_ReturnValue) == 0x000160, "Member 'BP_SplineSymbolComeRange_C_LineView::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

}

