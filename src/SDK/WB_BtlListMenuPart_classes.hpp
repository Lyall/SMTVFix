#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_BtlListMenuPart

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_BtlListMenuPart.WB_BtlListMenuPart_C
// 0x00C0 (0x0320 - 0x0260)
class UWB_BtlListMenuPart_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButtonS5*                              ButtonS5_List;                                     // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_Part;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              IconScale;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMessageSimpleTextWidget*               PartName;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_BG;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_Magatsuhi;                                // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_MP;                                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_NotEnoughMember;                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_Stock;                                    // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_NElementIcon_C*                     WB_Element;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_NNumberIcon01_C*                    WB_Number_Cost;                                    // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_NNumberIcon01_C*                    WB_Number_Denominator;                             // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_NNumberIcon01_C*                    WB_Number_Numerator;                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_NSlashIcon01_C*                     WB_Slash;                                          // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsSkill;                                           // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_547B[0x3];                                     // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ID;                                                // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrimaryParam;                                      // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SecondaryParam;                                    // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Usable;                                            // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_547C[0x3];                                     // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BG_AnimIndex;                                      // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BG_PackIndex;                                      // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Selected;                                          // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Concealed;                                         // 0x02F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Disappeared;                                       // 0x02FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_547D[0x1];                                     // 0x02FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SkillAptitude;                                     // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CostOK;                                            // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsMagatsuhiSkill;                                  // 0x0301(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_547E[0x2];                                     // 0x0302(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DataIndex;                                         // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             Evt_OnClicked;                                     // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsNotEnoughMember;                                 // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void Evt_OnClicked__DelegateSignature(int32 Param_Index);
	void ExecuteUbergraph_WB_BtlListMenuPart(int32 EntryPoint);
	void BndEvt__WB_BtlListMenuPart_ButtonS5_List_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__SsPlayer_BG_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void Disappear(float Rate, bool Immediately);
	void Appear(float Rate, bool Immediately);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void CallTick(float Delta);
	void InitDisappeared();
	void SetSkill(int32 SkillId, int32 Cost, bool Param_Usable, int32 Aptitude, bool Param_CostOK, int32 Param_DataIndex, bool NotEnoughMember);
	void SetItem(int32 ItemId, int32 Numerator, int32 Denominator, bool Param_Usable, int32 Param_DataIndex);
	void ApplyParam();
	void ApplyUsable();
	void PlayBG_Anim(int32 AnimIndex, bool IsLoop);
	void GetResult(int32* Param_ID, bool* IsUsable);
	void SetSelected(bool Param_Selected, bool NoPlayAnim);
	void SetLabelConceal(bool IsConcealed);
	void IsLabelConcealed(bool* IsConcealed);
	void UpdateBG();
	void SetAlpha(float Alpha);
	void MakeSkillName(class FText* Param_Name);
	void PlayMagatsuhi_Anim();
	void PauseBG_Anim();
	void SetSkillText();
	void SetItemText();
	void SetWidgetVisibility(class USsPlayerWidget*& SsPlayer, bool Visible);
	void SetAllWidgedTick(bool Enable);
	void IsDisappeared(bool* Param_IsDisappeared);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_BtlListMenuPart_C">();
	}
	static class UWB_BtlListMenuPart_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_BtlListMenuPart_C>();
	}
};
static_assert(alignof(UWB_BtlListMenuPart_C) == 0x000008, "Wrong alignment on UWB_BtlListMenuPart_C");
static_assert(sizeof(UWB_BtlListMenuPart_C) == 0x000320, "Wrong size on UWB_BtlListMenuPart_C");
static_assert(offsetof(UWB_BtlListMenuPart_C, UberGraphFrame) == 0x000260, "Member 'UWB_BtlListMenuPart_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, ButtonS5_List) == 0x000268, "Member 'UWB_BtlListMenuPart_C::ButtonS5_List' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, Canvas_Part) == 0x000270, "Member 'UWB_BtlListMenuPart_C::Canvas_Part' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, IconScale) == 0x000278, "Member 'UWB_BtlListMenuPart_C::IconScale' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, PartName) == 0x000280, "Member 'UWB_BtlListMenuPart_C::PartName' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, SsPlayer_BG) == 0x000288, "Member 'UWB_BtlListMenuPart_C::SsPlayer_BG' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, SsPlayer_Magatsuhi) == 0x000290, "Member 'UWB_BtlListMenuPart_C::SsPlayer_Magatsuhi' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, SsPlayer_MP) == 0x000298, "Member 'UWB_BtlListMenuPart_C::SsPlayer_MP' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, SsPlayer_NotEnoughMember) == 0x0002A0, "Member 'UWB_BtlListMenuPart_C::SsPlayer_NotEnoughMember' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, SsPlayer_Stock) == 0x0002A8, "Member 'UWB_BtlListMenuPart_C::SsPlayer_Stock' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, WB_Element) == 0x0002B0, "Member 'UWB_BtlListMenuPart_C::WB_Element' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, WB_Number_Cost) == 0x0002B8, "Member 'UWB_BtlListMenuPart_C::WB_Number_Cost' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, WB_Number_Denominator) == 0x0002C0, "Member 'UWB_BtlListMenuPart_C::WB_Number_Denominator' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, WB_Number_Numerator) == 0x0002C8, "Member 'UWB_BtlListMenuPart_C::WB_Number_Numerator' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, WB_Slash) == 0x0002D0, "Member 'UWB_BtlListMenuPart_C::WB_Slash' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, IsSkill) == 0x0002D8, "Member 'UWB_BtlListMenuPart_C::IsSkill' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, ID) == 0x0002DC, "Member 'UWB_BtlListMenuPart_C::ID' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, PrimaryParam) == 0x0002E0, "Member 'UWB_BtlListMenuPart_C::PrimaryParam' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, SecondaryParam) == 0x0002E4, "Member 'UWB_BtlListMenuPart_C::SecondaryParam' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, Usable) == 0x0002E8, "Member 'UWB_BtlListMenuPart_C::Usable' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, BG_AnimIndex) == 0x0002EC, "Member 'UWB_BtlListMenuPart_C::BG_AnimIndex' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, BG_PackIndex) == 0x0002F0, "Member 'UWB_BtlListMenuPart_C::BG_PackIndex' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, Selected) == 0x0002F8, "Member 'UWB_BtlListMenuPart_C::Selected' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, Concealed) == 0x0002F9, "Member 'UWB_BtlListMenuPart_C::Concealed' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, Disappeared) == 0x0002FA, "Member 'UWB_BtlListMenuPart_C::Disappeared' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, SkillAptitude) == 0x0002FC, "Member 'UWB_BtlListMenuPart_C::SkillAptitude' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, CostOK) == 0x000300, "Member 'UWB_BtlListMenuPart_C::CostOK' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, IsMagatsuhiSkill) == 0x000301, "Member 'UWB_BtlListMenuPart_C::IsMagatsuhiSkill' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, DataIndex) == 0x000304, "Member 'UWB_BtlListMenuPart_C::DataIndex' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, Evt_OnClicked) == 0x000308, "Member 'UWB_BtlListMenuPart_C::Evt_OnClicked' has a wrong offset!");
static_assert(offsetof(UWB_BtlListMenuPart_C, IsNotEnoughMember) == 0x000318, "Member 'UWB_BtlListMenuPart_C::IsNotEnoughMember' has a wrong offset!");

}

