#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MakkaWindow2

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_MakkaWindowAnimState_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.ExecuteUbergraph_WB_MakkaWindow2
// 0x0098 (0x0098 - 0x0000)
struct WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C58[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_2;         // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_2;        // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_2;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_2;       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C59[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_1;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_1;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_1;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_1;       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5A[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName;           // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName;          // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex;         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_2;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2) == 0x000004, "Wrong alignment on WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2");
static_assert(sizeof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2) == 0x000098, "Wrong size on WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, EntryPoint) == 0x000000, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_Event_MyGeometry) == 0x000008, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_ComponentBoundEvent_AnimPackName_2) == 0x000044, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_ComponentBoundEvent_AnimPackName_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_ComponentBoundEvent_AnimationName_2) == 0x00004C, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_ComponentBoundEvent_AnimationName_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_ComponentBoundEvent_AnimPackIndex_2) == 0x000054, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_ComponentBoundEvent_AnimPackIndex_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_ComponentBoundEvent_AnimationIndex_2) == 0x000058, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_ComponentBoundEvent_AnimationIndex_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_SwitchName_CmpSuccess) == 0x00005C, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_ComponentBoundEvent_AnimPackName_1) == 0x000060, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_ComponentBoundEvent_AnimPackName_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_ComponentBoundEvent_AnimationName_1) == 0x000068, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_ComponentBoundEvent_AnimationName_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_ComponentBoundEvent_AnimPackIndex_1) == 0x000070, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_ComponentBoundEvent_AnimPackIndex_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_ComponentBoundEvent_AnimationIndex_1) == 0x000074, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_ComponentBoundEvent_AnimationIndex_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_SwitchName_CmpSuccess_1) == 0x000078, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_ComponentBoundEvent_AnimPackName) == 0x00007C, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_ComponentBoundEvent_AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_ComponentBoundEvent_AnimationName) == 0x000084, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_ComponentBoundEvent_AnimationName' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_ComponentBoundEvent_AnimPackIndex) == 0x00008C, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_ComponentBoundEvent_AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_ComponentBoundEvent_AnimationIndex) == 0x000090, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_ComponentBoundEvent_AnimationIndex' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2, K2Node_SwitchName_CmpSuccess_2) == 0x000094, "Member 'WB_MakkaWindow2_C_ExecuteUbergraph_WB_MakkaWindow2::K2Node_SwitchName_CmpSuccess_2' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.BndEvt__WB_MakkaWindow2_SsPlayer_Cost_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_MakkaWindow2_C_BndEvt__WB_MakkaWindow2_SsPlayer_Cost_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MakkaWindow2_C_BndEvt__WB_MakkaWindow2_SsPlayer_Cost_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_MakkaWindow2_C_BndEvt__WB_MakkaWindow2_SsPlayer_Cost_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_MakkaWindow2_C_BndEvt__WB_MakkaWindow2_SsPlayer_Cost_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_MakkaWindow2_C_BndEvt__WB_MakkaWindow2_SsPlayer_Cost_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_MakkaWindow2_C_BndEvt__WB_MakkaWindow2_SsPlayer_Cost_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_MakkaWindow2_C_BndEvt__WB_MakkaWindow2_SsPlayer_Cost_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_BndEvt__WB_MakkaWindow2_SsPlayer_Cost_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_MakkaWindow2_C_BndEvt__WB_MakkaWindow2_SsPlayer_Cost_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_BndEvt__WB_MakkaWindow2_SsPlayer_Cost_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_MakkaWindow2_C_BndEvt__WB_MakkaWindow2_SsPlayer_Cost_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_BndEvt__WB_MakkaWindow2_SsPlayer_Cost_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_MakkaWindow2_C_BndEvt__WB_MakkaWindow2_SsPlayer_Cost_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.BndEvt__SsPlayerWidget_total_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_total_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_total_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_total_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_total_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_total_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_total_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_total_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_total_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_total_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_total_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_total_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_total_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_total_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.BndEvt__SsPlayerWidget_money_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_money_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_money_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_money_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_money_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_money_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_money_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_money_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_money_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_money_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_money_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_money_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_money_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_MakkaWindow2_C_BndEvt__SsPlayerWidget_money_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_MakkaWindow2_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MakkaWindow2_C_Tick) == 0x000004, "Wrong alignment on WB_MakkaWindow2_C_Tick");
static_assert(sizeof(WB_MakkaWindow2_C_Tick) == 0x00003C, "Wrong size on WB_MakkaWindow2_C_Tick");
static_assert(offsetof(WB_MakkaWindow2_C_Tick, MyGeometry) == 0x000000, "Member 'WB_MakkaWindow2_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_MakkaWindow2_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_MakkaWindow2_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MakkaWindow2_C_PreConstruct) == 0x000001, "Wrong alignment on WB_MakkaWindow2_C_PreConstruct");
static_assert(sizeof(WB_MakkaWindow2_C_PreConstruct) == 0x000001, "Wrong size on WB_MakkaWindow2_C_PreConstruct");
static_assert(offsetof(WB_MakkaWindow2_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_MakkaWindow2_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.Init
// 0x00D8 (0x00D8 - 0x0000)
struct WB_MakkaWindow2_C_Init final
{
public:
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_1;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_2;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSSPPositionDataByPartsName_OutVec_1;   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_3;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_5;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_5;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_4;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_6;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_6;                        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_7;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_7;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MakkaWindow2_C_Init) == 0x000008, "Wrong alignment on WB_MakkaWindow2_C_Init");
static_assert(sizeof(WB_MakkaWindow2_C_Init) == 0x0000D8, "Wrong size on WB_MakkaWindow2_C_Init");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_GetDesiredSize_ReturnValue) == 0x000000, "Member 'WB_MakkaWindow2_C_Init::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_BreakVector2D_X) == 0x000008, "Member 'WB_MakkaWindow2_C_Init::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_BreakVector2D_Y) == 0x00000C, "Member 'WB_MakkaWindow2_C_Init::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_BreakVector2D_X_1) == 0x000010, "Member 'WB_MakkaWindow2_C_Init::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_BreakVector2D_Y_1) == 0x000014, "Member 'WB_MakkaWindow2_C_Init::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'WB_MakkaWindow2_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'WB_MakkaWindow2_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000020, "Member 'WB_MakkaWindow2_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'WB_MakkaWindow2_C_Init::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000028, "Member 'WB_MakkaWindow2_C_Init::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_MakeVector2D_ReturnValue) == 0x000030, "Member 'WB_MakkaWindow2_C_Init::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_GetDesiredSize_ReturnValue_1) == 0x000038, "Member 'WB_MakkaWindow2_C_Init::CallFunc_GetDesiredSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_BreakVector2D_X_2) == 0x000040, "Member 'WB_MakkaWindow2_C_Init::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_BreakVector2D_Y_2) == 0x000044, "Member 'WB_MakkaWindow2_C_Init::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000048, "Member 'WB_MakkaWindow2_C_Init::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_GetSSPPositionDataByPartsName_OutVec) == 0x000050, "Member 'WB_MakkaWindow2_C_Init::CallFunc_GetSSPPositionDataByPartsName_OutVec' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000058, "Member 'WB_MakkaWindow2_C_Init::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_GetDesiredSize_ReturnValue_2) == 0x000060, "Member 'WB_MakkaWindow2_C_Init::CallFunc_GetDesiredSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_BreakVector2D_X_3) == 0x000068, "Member 'WB_MakkaWindow2_C_Init::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_BreakVector2D_Y_3) == 0x00006C, "Member 'WB_MakkaWindow2_C_Init::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_GetSSPPositionDataByPartsName_OutVec_1) == 0x000070, "Member 'WB_MakkaWindow2_C_Init::CallFunc_GetSSPPositionDataByPartsName_OutVec_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_GetDesiredSize_ReturnValue_3) == 0x000078, "Member 'WB_MakkaWindow2_C_Init::CallFunc_GetDesiredSize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_BreakVector2D_X_4) == 0x000080, "Member 'WB_MakkaWindow2_C_Init::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_BreakVector2D_Y_4) == 0x000084, "Member 'WB_MakkaWindow2_C_Init::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_BreakVector2D_X_5) == 0x000088, "Member 'WB_MakkaWindow2_C_Init::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_BreakVector2D_Y_5) == 0x00008C, "Member 'WB_MakkaWindow2_C_Init::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000090, "Member 'WB_MakkaWindow2_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000094, "Member 'WB_MakkaWindow2_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000098, "Member 'WB_MakkaWindow2_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00009C, "Member 'WB_MakkaWindow2_C_Init::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000A0, "Member 'WB_MakkaWindow2_C_Init::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_GetDesiredSize_ReturnValue_4) == 0x0000A8, "Member 'WB_MakkaWindow2_C_Init::CallFunc_GetDesiredSize_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_BreakVector2D_X_6) == 0x0000B0, "Member 'WB_MakkaWindow2_C_Init::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_BreakVector2D_Y_6) == 0x0000B4, "Member 'WB_MakkaWindow2_C_Init::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_BreakVector2D_X_7) == 0x0000B8, "Member 'WB_MakkaWindow2_C_Init::CallFunc_BreakVector2D_X_7' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_BreakVector2D_Y_7) == 0x0000BC, "Member 'WB_MakkaWindow2_C_Init::CallFunc_BreakVector2D_Y_7' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x0000C0, "Member 'WB_MakkaWindow2_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x0000C4, "Member 'WB_MakkaWindow2_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x0000C8, "Member 'WB_MakkaWindow2_C_Init::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000CC, "Member 'WB_MakkaWindow2_C_Init::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_Init, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000D0, "Member 'WB_MakkaWindow2_C_Init::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.UpdateNumberMoveAnim
// 0x006C (0x006C - 0x0000)
struct WB_MakkaWindow2_C_UpdateNumberMoveAnim final
{
public:
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5B[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5C[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_2;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5D[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue_3;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_3;       // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_4;       // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_2;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_4;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5E[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_5;                      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_5;       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MakkaWindow2_C_UpdateNumberMoveAnim) == 0x000004, "Wrong alignment on WB_MakkaWindow2_C_UpdateNumberMoveAnim");
static_assert(sizeof(WB_MakkaWindow2_C_UpdateNumberMoveAnim) == 0x00006C, "Wrong size on WB_MakkaWindow2_C_UpdateNumberMoveAnim");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000008, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Clamp_ReturnValue) == 0x00000C, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000014, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000018, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00001C, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00001D, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Multiply_IntInt_ReturnValue) == 0x000020, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x000028, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00002C, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000030, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Add_IntInt_ReturnValue_2) == 0x000034, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Clamp_ReturnValue_1) == 0x000038, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Add_IntInt_ReturnValue_3) == 0x00003C, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Clamp_ReturnValue_2) == 0x000040, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Clamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000045, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Clamp_ReturnValue_3) == 0x000048, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Clamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00004C, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004D, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_LessEqual_FloatFloat_ReturnValue_3) == 0x00004E, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_LessEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_LessEqual_FloatFloat_ReturnValue_4) == 0x00004F, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_LessEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Multiply_IntInt_ReturnValue_2) == 0x000050, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Multiply_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Add_IntInt_ReturnValue_4) == 0x000054, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Clamp_ReturnValue_4) == 0x000058, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Clamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Less_IntInt_ReturnValue_2) == 0x00005C, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Add_IntInt_ReturnValue_5) == 0x000060, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_Clamp_ReturnValue_5) == 0x000064, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_Clamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000068, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_UpdateNumberMoveAnim, CallFunc_LessEqual_FloatFloat_ReturnValue_5) == 0x000069, "Member 'WB_MakkaWindow2_C_UpdateNumberMoveAnim::CallFunc_LessEqual_FloatFloat_ReturnValue_5' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.SetAnimState_MoneyWindow
// 0x0006 (0x0006 - 0x0000)
struct WB_MakkaWindow2_C_SetAnimState_MoneyWindow final
{
public:
	E_MakkaWindowAnimState                        InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_2;                       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_3;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MakkaWindow2_C_SetAnimState_MoneyWindow) == 0x000001, "Wrong alignment on WB_MakkaWindow2_C_SetAnimState_MoneyWindow");
static_assert(sizeof(WB_MakkaWindow2_C_SetAnimState_MoneyWindow) == 0x000006, "Wrong size on WB_MakkaWindow2_C_SetAnimState_MoneyWindow");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_MoneyWindow, InState) == 0x000000, "Member 'WB_MakkaWindow2_C_SetAnimState_MoneyWindow::InState' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_MoneyWindow, CallFunc_Play_ReturnValue) == 0x000001, "Member 'WB_MakkaWindow2_C_SetAnimState_MoneyWindow::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_MoneyWindow, CallFunc_Play_ReturnValue_1) == 0x000002, "Member 'WB_MakkaWindow2_C_SetAnimState_MoneyWindow::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_MoneyWindow, CallFunc_Play_ReturnValue_2) == 0x000003, "Member 'WB_MakkaWindow2_C_SetAnimState_MoneyWindow::CallFunc_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_MoneyWindow, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'WB_MakkaWindow2_C_SetAnimState_MoneyWindow::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_MoneyWindow, CallFunc_Play_ReturnValue_3) == 0x000005, "Member 'WB_MakkaWindow2_C_SetAnimState_MoneyWindow::CallFunc_Play_ReturnValue_3' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.SetAnimState_TotalWindow
// 0x0006 (0x0006 - 0x0000)
struct WB_MakkaWindow2_C_SetAnimState_TotalWindow final
{
public:
	E_MakkaWindowAnimState                        InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_2;                       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_3;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MakkaWindow2_C_SetAnimState_TotalWindow) == 0x000001, "Wrong alignment on WB_MakkaWindow2_C_SetAnimState_TotalWindow");
static_assert(sizeof(WB_MakkaWindow2_C_SetAnimState_TotalWindow) == 0x000006, "Wrong size on WB_MakkaWindow2_C_SetAnimState_TotalWindow");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_TotalWindow, InState) == 0x000000, "Member 'WB_MakkaWindow2_C_SetAnimState_TotalWindow::InState' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_TotalWindow, CallFunc_Play_ReturnValue) == 0x000001, "Member 'WB_MakkaWindow2_C_SetAnimState_TotalWindow::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_TotalWindow, CallFunc_Play_ReturnValue_1) == 0x000002, "Member 'WB_MakkaWindow2_C_SetAnimState_TotalWindow::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_TotalWindow, CallFunc_Play_ReturnValue_2) == 0x000003, "Member 'WB_MakkaWindow2_C_SetAnimState_TotalWindow::CallFunc_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_TotalWindow, CallFunc_Play_ReturnValue_3) == 0x000004, "Member 'WB_MakkaWindow2_C_SetAnimState_TotalWindow::CallFunc_Play_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_TotalWindow, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'WB_MakkaWindow2_C_SetAnimState_TotalWindow::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.SetAnimState_CostWindow
// 0x0006 (0x0006 - 0x0000)
struct WB_MakkaWindow2_C_SetAnimState_CostWindow final
{
public:
	E_MakkaWindowAnimState                        InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_2;                       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_3;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MakkaWindow2_C_SetAnimState_CostWindow) == 0x000001, "Wrong alignment on WB_MakkaWindow2_C_SetAnimState_CostWindow");
static_assert(sizeof(WB_MakkaWindow2_C_SetAnimState_CostWindow) == 0x000006, "Wrong size on WB_MakkaWindow2_C_SetAnimState_CostWindow");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_CostWindow, InState) == 0x000000, "Member 'WB_MakkaWindow2_C_SetAnimState_CostWindow::InState' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_CostWindow, CallFunc_Play_ReturnValue) == 0x000001, "Member 'WB_MakkaWindow2_C_SetAnimState_CostWindow::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_CostWindow, CallFunc_Play_ReturnValue_1) == 0x000002, "Member 'WB_MakkaWindow2_C_SetAnimState_CostWindow::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_CostWindow, CallFunc_Play_ReturnValue_2) == 0x000003, "Member 'WB_MakkaWindow2_C_SetAnimState_CostWindow::CallFunc_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_CostWindow, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'WB_MakkaWindow2_C_SetAnimState_CostWindow::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetAnimState_CostWindow, CallFunc_Play_ReturnValue_3) == 0x000005, "Member 'WB_MakkaWindow2_C_SetAnimState_CostWindow::CallFunc_Play_ReturnValue_3' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.GetAnimState_MoneyWindow
// 0x0001 (0x0001 - 0x0000)
struct WB_MakkaWindow2_C_GetAnimState_MoneyWindow final
{
public:
	E_MakkaWindowAnimState                        AnimState;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MakkaWindow2_C_GetAnimState_MoneyWindow) == 0x000001, "Wrong alignment on WB_MakkaWindow2_C_GetAnimState_MoneyWindow");
static_assert(sizeof(WB_MakkaWindow2_C_GetAnimState_MoneyWindow) == 0x000001, "Wrong size on WB_MakkaWindow2_C_GetAnimState_MoneyWindow");
static_assert(offsetof(WB_MakkaWindow2_C_GetAnimState_MoneyWindow, AnimState) == 0x000000, "Member 'WB_MakkaWindow2_C_GetAnimState_MoneyWindow::AnimState' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.GetAnimState_TotalWindow
// 0x0001 (0x0001 - 0x0000)
struct WB_MakkaWindow2_C_GetAnimState_TotalWindow final
{
public:
	E_MakkaWindowAnimState                        AnimState;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MakkaWindow2_C_GetAnimState_TotalWindow) == 0x000001, "Wrong alignment on WB_MakkaWindow2_C_GetAnimState_TotalWindow");
static_assert(sizeof(WB_MakkaWindow2_C_GetAnimState_TotalWindow) == 0x000001, "Wrong size on WB_MakkaWindow2_C_GetAnimState_TotalWindow");
static_assert(offsetof(WB_MakkaWindow2_C_GetAnimState_TotalWindow, AnimState) == 0x000000, "Member 'WB_MakkaWindow2_C_GetAnimState_TotalWindow::AnimState' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.GetAnimState_CostWindow
// 0x0001 (0x0001 - 0x0000)
struct WB_MakkaWindow2_C_GetAnimState_CostWindow final
{
public:
	E_MakkaWindowAnimState                        AnimState;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MakkaWindow2_C_GetAnimState_CostWindow) == 0x000001, "Wrong alignment on WB_MakkaWindow2_C_GetAnimState_CostWindow");
static_assert(sizeof(WB_MakkaWindow2_C_GetAnimState_CostWindow) == 0x000001, "Wrong size on WB_MakkaWindow2_C_GetAnimState_CostWindow");
static_assert(offsetof(WB_MakkaWindow2_C_GetAnimState_CostWindow, AnimState) == 0x000000, "Member 'WB_MakkaWindow2_C_GetAnimState_CostWindow::AnimState' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.SetNum_Money
// 0x003C (0x003C - 0x0000)
struct WB_MakkaWindow2_C_SetNum_Money final
{
public:
	int32                                         InNewNum;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayAnim;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InDelayBeforeAnim;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C60[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C61[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MakkaWindow2_C_SetNum_Money) == 0x000004, "Wrong alignment on WB_MakkaWindow2_C_SetNum_Money");
static_assert(sizeof(WB_MakkaWindow2_C_SetNum_Money) == 0x00003C, "Wrong size on WB_MakkaWindow2_C_SetNum_Money");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Money, InNewNum) == 0x000000, "Member 'WB_MakkaWindow2_C_SetNum_Money::InNewNum' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Money, IsPlayAnim) == 0x000004, "Member 'WB_MakkaWindow2_C_SetNum_Money::IsPlayAnim' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Money, InDelayBeforeAnim) == 0x000008, "Member 'WB_MakkaWindow2_C_SetNum_Money::InDelayBeforeAnim' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Money, Temp_int_Variable) == 0x00000C, "Member 'WB_MakkaWindow2_C_SetNum_Money::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Money, CallFunc_Clamp_ReturnValue) == 0x000010, "Member 'WB_MakkaWindow2_C_SetNum_Money::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Money, CallFunc_Clamp_ReturnValue_1) == 0x000014, "Member 'WB_MakkaWindow2_C_SetNum_Money::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Money, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'WB_MakkaWindow2_C_SetNum_Money::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Money, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'WB_MakkaWindow2_C_SetNum_Money::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Money, Temp_bool_Variable) == 0x000020, "Member 'WB_MakkaWindow2_C_SetNum_Money::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Money, CallFunc_Abs_Int_ReturnValue) == 0x000024, "Member 'WB_MakkaWindow2_C_SetNum_Money::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Money, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000028, "Member 'WB_MakkaWindow2_C_SetNum_Money::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Money, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'WB_MakkaWindow2_C_SetNum_Money::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Money, CallFunc_Round_ReturnValue) == 0x000030, "Member 'WB_MakkaWindow2_C_SetNum_Money::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Money, CallFunc_Less_FloatFloat_ReturnValue) == 0x000034, "Member 'WB_MakkaWindow2_C_SetNum_Money::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Money, K2Node_Select_Default) == 0x000038, "Member 'WB_MakkaWindow2_C_SetNum_Money::K2Node_Select_Default' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.SetNum_Total
// 0x0044 (0x0044 - 0x0000)
struct WB_MakkaWindow2_C_SetNum_Total final
{
public:
	int32                                         InNewNum;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayAnim;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C62[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InDelayBeforeAnim;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C63[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C64[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MakkaWindow2_C_SetNum_Total) == 0x000004, "Wrong alignment on WB_MakkaWindow2_C_SetNum_Total");
static_assert(sizeof(WB_MakkaWindow2_C_SetNum_Total) == 0x000044, "Wrong size on WB_MakkaWindow2_C_SetNum_Total");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Total, InNewNum) == 0x000000, "Member 'WB_MakkaWindow2_C_SetNum_Total::InNewNum' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Total, IsPlayAnim) == 0x000004, "Member 'WB_MakkaWindow2_C_SetNum_Total::IsPlayAnim' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Total, InDelayBeforeAnim) == 0x000008, "Member 'WB_MakkaWindow2_C_SetNum_Total::InDelayBeforeAnim' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Total, CallFunc_Multiply_IntInt_ReturnValue) == 0x00000C, "Member 'WB_MakkaWindow2_C_SetNum_Total::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Total, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000010, "Member 'WB_MakkaWindow2_C_SetNum_Total::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Total, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'WB_MakkaWindow2_C_SetNum_Total::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Total, CallFunc_Abs_Int_ReturnValue) == 0x000018, "Member 'WB_MakkaWindow2_C_SetNum_Total::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Total, CallFunc_Clamp_ReturnValue) == 0x00001C, "Member 'WB_MakkaWindow2_C_SetNum_Total::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Total, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000020, "Member 'WB_MakkaWindow2_C_SetNum_Total::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Total, CallFunc_Clamp_ReturnValue_1) == 0x000024, "Member 'WB_MakkaWindow2_C_SetNum_Total::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Total, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000028, "Member 'WB_MakkaWindow2_C_SetNum_Total::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Total, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'WB_MakkaWindow2_C_SetNum_Total::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Total, Temp_int_Variable) == 0x000030, "Member 'WB_MakkaWindow2_C_SetNum_Total::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Total, CallFunc_Less_FloatFloat_ReturnValue) == 0x000034, "Member 'WB_MakkaWindow2_C_SetNum_Total::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Total, CallFunc_Round_ReturnValue) == 0x000038, "Member 'WB_MakkaWindow2_C_SetNum_Total::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Total, Temp_bool_Variable) == 0x00003C, "Member 'WB_MakkaWindow2_C_SetNum_Total::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Total, K2Node_Select_Default) == 0x000040, "Member 'WB_MakkaWindow2_C_SetNum_Total::K2Node_Select_Default' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.SetNum_Cost
// 0x003C (0x003C - 0x0000)
struct WB_MakkaWindow2_C_SetNum_Cost final
{
public:
	int32                                         InNewNum;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayAnim;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C65[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InDelayBeforeAnim;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C66[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C67[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MakkaWindow2_C_SetNum_Cost) == 0x000004, "Wrong alignment on WB_MakkaWindow2_C_SetNum_Cost");
static_assert(sizeof(WB_MakkaWindow2_C_SetNum_Cost) == 0x00003C, "Wrong size on WB_MakkaWindow2_C_SetNum_Cost");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Cost, InNewNum) == 0x000000, "Member 'WB_MakkaWindow2_C_SetNum_Cost::InNewNum' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Cost, IsPlayAnim) == 0x000004, "Member 'WB_MakkaWindow2_C_SetNum_Cost::IsPlayAnim' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Cost, InDelayBeforeAnim) == 0x000008, "Member 'WB_MakkaWindow2_C_SetNum_Cost::InDelayBeforeAnim' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Cost, Temp_int_Variable) == 0x00000C, "Member 'WB_MakkaWindow2_C_SetNum_Cost::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Cost, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'WB_MakkaWindow2_C_SetNum_Cost::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Cost, CallFunc_Abs_Int_ReturnValue) == 0x000014, "Member 'WB_MakkaWindow2_C_SetNum_Cost::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Cost, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'WB_MakkaWindow2_C_SetNum_Cost::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Cost, CallFunc_Clamp_ReturnValue) == 0x00001C, "Member 'WB_MakkaWindow2_C_SetNum_Cost::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Cost, CallFunc_Clamp_ReturnValue_1) == 0x000020, "Member 'WB_MakkaWindow2_C_SetNum_Cost::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Cost, Temp_bool_Variable) == 0x000024, "Member 'WB_MakkaWindow2_C_SetNum_Cost::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Cost, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000028, "Member 'WB_MakkaWindow2_C_SetNum_Cost::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Cost, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'WB_MakkaWindow2_C_SetNum_Cost::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Cost, CallFunc_Round_ReturnValue) == 0x000030, "Member 'WB_MakkaWindow2_C_SetNum_Cost::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Cost, CallFunc_Less_FloatFloat_ReturnValue) == 0x000034, "Member 'WB_MakkaWindow2_C_SetNum_Cost::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_SetNum_Cost, K2Node_Select_Default) == 0x000038, "Member 'WB_MakkaWindow2_C_SetNum_Cost::K2Node_Select_Default' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.AddNum_Money
// 0x001C (0x001C - 0x0000)
struct WB_MakkaWindow2_C_AddNum_Money final
{
public:
	int32                                         InAddNum;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayAnim;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C68[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InDelayBeforeAnim;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C69[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MakkaWindow2_C_AddNum_Money) == 0x000004, "Wrong alignment on WB_MakkaWindow2_C_AddNum_Money");
static_assert(sizeof(WB_MakkaWindow2_C_AddNum_Money) == 0x00001C, "Wrong size on WB_MakkaWindow2_C_AddNum_Money");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Money, InAddNum) == 0x000000, "Member 'WB_MakkaWindow2_C_AddNum_Money::InAddNum' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Money, IsPlayAnim) == 0x000004, "Member 'WB_MakkaWindow2_C_AddNum_Money::IsPlayAnim' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Money, InDelayBeforeAnim) == 0x000008, "Member 'WB_MakkaWindow2_C_AddNum_Money::InDelayBeforeAnim' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Money, Temp_bool_Variable) == 0x00000C, "Member 'WB_MakkaWindow2_C_AddNum_Money::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Money, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WB_MakkaWindow2_C_AddNum_Money::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Money, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'WB_MakkaWindow2_C_AddNum_Money::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Money, K2Node_Select_Default) == 0x000018, "Member 'WB_MakkaWindow2_C_AddNum_Money::K2Node_Select_Default' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.AddNum_Total
// 0x001C (0x001C - 0x0000)
struct WB_MakkaWindow2_C_AddNum_Total final
{
public:
	int32                                         InAddNum;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayAnim;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InDelayBeforeAnim;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6B[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MakkaWindow2_C_AddNum_Total) == 0x000004, "Wrong alignment on WB_MakkaWindow2_C_AddNum_Total");
static_assert(sizeof(WB_MakkaWindow2_C_AddNum_Total) == 0x00001C, "Wrong size on WB_MakkaWindow2_C_AddNum_Total");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Total, InAddNum) == 0x000000, "Member 'WB_MakkaWindow2_C_AddNum_Total::InAddNum' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Total, IsPlayAnim) == 0x000004, "Member 'WB_MakkaWindow2_C_AddNum_Total::IsPlayAnim' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Total, InDelayBeforeAnim) == 0x000008, "Member 'WB_MakkaWindow2_C_AddNum_Total::InDelayBeforeAnim' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Total, Temp_bool_Variable) == 0x00000C, "Member 'WB_MakkaWindow2_C_AddNum_Total::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Total, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WB_MakkaWindow2_C_AddNum_Total::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Total, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'WB_MakkaWindow2_C_AddNum_Total::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Total, K2Node_Select_Default) == 0x000018, "Member 'WB_MakkaWindow2_C_AddNum_Total::K2Node_Select_Default' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.AddNum_Cost
// 0x001C (0x001C - 0x0000)
struct WB_MakkaWindow2_C_AddNum_Cost final
{
public:
	int32                                         InAddNum;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayAnim;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InDelayBeforeAnim;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6D[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MakkaWindow2_C_AddNum_Cost) == 0x000004, "Wrong alignment on WB_MakkaWindow2_C_AddNum_Cost");
static_assert(sizeof(WB_MakkaWindow2_C_AddNum_Cost) == 0x00001C, "Wrong size on WB_MakkaWindow2_C_AddNum_Cost");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Cost, InAddNum) == 0x000000, "Member 'WB_MakkaWindow2_C_AddNum_Cost::InAddNum' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Cost, IsPlayAnim) == 0x000004, "Member 'WB_MakkaWindow2_C_AddNum_Cost::IsPlayAnim' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Cost, InDelayBeforeAnim) == 0x000008, "Member 'WB_MakkaWindow2_C_AddNum_Cost::InDelayBeforeAnim' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Cost, Temp_bool_Variable) == 0x00000C, "Member 'WB_MakkaWindow2_C_AddNum_Cost::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Cost, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WB_MakkaWindow2_C_AddNum_Cost::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Cost, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'WB_MakkaWindow2_C_AddNum_Cost::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MakkaWindow2_C_AddNum_Cost, K2Node_Select_Default) == 0x000018, "Member 'WB_MakkaWindow2_C_AddNum_Cost::K2Node_Select_Default' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.GetMovingState_Money
// 0x0001 (0x0001 - 0x0000)
struct WB_MakkaWindow2_C_GetMovingState_Money final
{
public:
	bool                                          IsMoving;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MakkaWindow2_C_GetMovingState_Money) == 0x000001, "Wrong alignment on WB_MakkaWindow2_C_GetMovingState_Money");
static_assert(sizeof(WB_MakkaWindow2_C_GetMovingState_Money) == 0x000001, "Wrong size on WB_MakkaWindow2_C_GetMovingState_Money");
static_assert(offsetof(WB_MakkaWindow2_C_GetMovingState_Money, IsMoving) == 0x000000, "Member 'WB_MakkaWindow2_C_GetMovingState_Money::IsMoving' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.GetMovingState_Total
// 0x0001 (0x0001 - 0x0000)
struct WB_MakkaWindow2_C_GetMovingState_Total final
{
public:
	bool                                          IsMoving;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MakkaWindow2_C_GetMovingState_Total) == 0x000001, "Wrong alignment on WB_MakkaWindow2_C_GetMovingState_Total");
static_assert(sizeof(WB_MakkaWindow2_C_GetMovingState_Total) == 0x000001, "Wrong size on WB_MakkaWindow2_C_GetMovingState_Total");
static_assert(offsetof(WB_MakkaWindow2_C_GetMovingState_Total, IsMoving) == 0x000000, "Member 'WB_MakkaWindow2_C_GetMovingState_Total::IsMoving' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.GetMovingState_Cost
// 0x0001 (0x0001 - 0x0000)
struct WB_MakkaWindow2_C_GetMovingState_Cost final
{
public:
	bool                                          IsMoving;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MakkaWindow2_C_GetMovingState_Cost) == 0x000001, "Wrong alignment on WB_MakkaWindow2_C_GetMovingState_Cost");
static_assert(sizeof(WB_MakkaWindow2_C_GetMovingState_Cost) == 0x000001, "Wrong size on WB_MakkaWindow2_C_GetMovingState_Cost");
static_assert(offsetof(WB_MakkaWindow2_C_GetMovingState_Cost, IsMoving) == 0x000000, "Member 'WB_MakkaWindow2_C_GetMovingState_Cost::IsMoving' has a wrong offset!");

// Function WB_MakkaWindow2.WB_MakkaWindow2_C.SetNumberColor_Cost
// 0x0010 (0x0010 - 0x0000)
struct WB_MakkaWindow2_C_SetNumberColor_Cost final
{
public:
	struct FLinearColor                           InColor;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MakkaWindow2_C_SetNumberColor_Cost) == 0x000004, "Wrong alignment on WB_MakkaWindow2_C_SetNumberColor_Cost");
static_assert(sizeof(WB_MakkaWindow2_C_SetNumberColor_Cost) == 0x000010, "Wrong size on WB_MakkaWindow2_C_SetNumberColor_Cost");
static_assert(offsetof(WB_MakkaWindow2_C_SetNumberColor_Cost, InColor) == 0x000000, "Member 'WB_MakkaWindow2_C_SetNumberColor_Cost::InColor' has a wrong offset!");

}

