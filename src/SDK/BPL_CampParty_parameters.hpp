#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_CampParty

#include "Basic.hpp"

#include "Project_structs.hpp"


namespace SDK::Params
{

// Function BPL_CampParty.BPL_CampParty_C.GetName
// 0x0078 (0x0078 - 0x0000)
struct BPL_CampParty_C_GetName final
{
public:
	struct FCharaPanelData                        Data;                                              // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Param_Name;                                        // 0x0060(0x0018)(Parm, OutParm)
};
static_assert(alignof(BPL_CampParty_C_GetName) == 0x000008, "Wrong alignment on BPL_CampParty_C_GetName");
static_assert(sizeof(BPL_CampParty_C_GetName) == 0x000078, "Wrong size on BPL_CampParty_C_GetName");
static_assert(offsetof(BPL_CampParty_C_GetName, Data) == 0x000000, "Member 'BPL_CampParty_C_GetName::Data' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetName, __WorldContext) == 0x000058, "Member 'BPL_CampParty_C_GetName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetName, Param_Name) == 0x000060, "Member 'BPL_CampParty_C_GetName::Param_Name' has a wrong offset!");

// Function BPL_CampParty.BPL_CampParty_C.GetLevel_ToText
// 0x00A0 (0x00A0 - 0x0000)
struct BPL_CampParty_C_GetLevel_ToText final
{
public:
	struct FCharaPanelData                        Data;                                              // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Level;                                             // 0x0060(0x0018)(Parm, OutParm)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0088(0x0018)()
};
static_assert(alignof(BPL_CampParty_C_GetLevel_ToText) == 0x000008, "Wrong alignment on BPL_CampParty_C_GetLevel_ToText");
static_assert(sizeof(BPL_CampParty_C_GetLevel_ToText) == 0x0000A0, "Wrong size on BPL_CampParty_C_GetLevel_ToText");
static_assert(offsetof(BPL_CampParty_C_GetLevel_ToText, Data) == 0x000000, "Member 'BPL_CampParty_C_GetLevel_ToText::Data' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetLevel_ToText, __WorldContext) == 0x000058, "Member 'BPL_CampParty_C_GetLevel_ToText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetLevel_ToText, Level) == 0x000060, "Member 'BPL_CampParty_C_GetLevel_ToText::Level' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetLevel_ToText, CallFunc_Conv_IntToString_ReturnValue) == 0x000078, "Member 'BPL_CampParty_C_GetLevel_ToText::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetLevel_ToText, CallFunc_Conv_StringToText_ReturnValue) == 0x000088, "Member 'BPL_CampParty_C_GetLevel_ToText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BPL_CampParty.BPL_CampParty_C.GetHpData
// 0x0068 (0x0068 - 0x0000)
struct BPL_CampParty_C_GetHpData final
{
public:
	struct FCharaPanelData                        Data;                                              // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Hp;                                                // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HpMax;                                             // 0x0064(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_CampParty_C_GetHpData) == 0x000008, "Wrong alignment on BPL_CampParty_C_GetHpData");
static_assert(sizeof(BPL_CampParty_C_GetHpData) == 0x000068, "Wrong size on BPL_CampParty_C_GetHpData");
static_assert(offsetof(BPL_CampParty_C_GetHpData, Data) == 0x000000, "Member 'BPL_CampParty_C_GetHpData::Data' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetHpData, __WorldContext) == 0x000058, "Member 'BPL_CampParty_C_GetHpData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetHpData, Hp) == 0x000060, "Member 'BPL_CampParty_C_GetHpData::Hp' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetHpData, HpMax) == 0x000064, "Member 'BPL_CampParty_C_GetHpData::HpMax' has a wrong offset!");

// Function BPL_CampParty.BPL_CampParty_C.GetMpData
// 0x0068 (0x0068 - 0x0000)
struct BPL_CampParty_C_GetMpData final
{
public:
	struct FCharaPanelData                        Data;                                              // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Mp;                                                // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MpMax;                                             // 0x0064(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_CampParty_C_GetMpData) == 0x000008, "Wrong alignment on BPL_CampParty_C_GetMpData");
static_assert(sizeof(BPL_CampParty_C_GetMpData) == 0x000068, "Wrong size on BPL_CampParty_C_GetMpData");
static_assert(offsetof(BPL_CampParty_C_GetMpData, Data) == 0x000000, "Member 'BPL_CampParty_C_GetMpData::Data' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetMpData, __WorldContext) == 0x000058, "Member 'BPL_CampParty_C_GetMpData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetMpData, Mp) == 0x000060, "Member 'BPL_CampParty_C_GetMpData::Mp' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetMpData, MpMax) == 0x000064, "Member 'BPL_CampParty_C_GetMpData::MpMax' has a wrong offset!");

// Function BPL_CampParty.BPL_CampParty_C.GetIsParty
// 0x0068 (0x0068 - 0x0000)
struct BPL_CampParty_C_GetIsParty final
{
public:
	struct FCharaPanelData                        Data;                                              // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsParty;                                           // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CampParty_C_GetIsParty) == 0x000008, "Wrong alignment on BPL_CampParty_C_GetIsParty");
static_assert(sizeof(BPL_CampParty_C_GetIsParty) == 0x000068, "Wrong size on BPL_CampParty_C_GetIsParty");
static_assert(offsetof(BPL_CampParty_C_GetIsParty, Data) == 0x000000, "Member 'BPL_CampParty_C_GetIsParty::Data' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetIsParty, __WorldContext) == 0x000058, "Member 'BPL_CampParty_C_GetIsParty::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetIsParty, IsParty) == 0x000060, "Member 'BPL_CampParty_C_GetIsParty::IsParty' has a wrong offset!");

// Function BPL_CampParty.BPL_CampParty_C.CreateCharaPanelList
// 0x02B8 (0x02B8 - 0x0000)
struct BPL_CampParty_C_CreateCharaPanelList final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCharaPanelData>                PanelData;                                         // 0x0008(0x0010)(Parm, OutParm)
	int32                                         Panelindex;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCharaPanelData>                Data;                                              // 0x0020(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_CheckEventFlag_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharaPanelData                        CallFunc_CreatePlayerPanelData_CharaPanelData;     // 0x0038(0x0058)()
	struct FCharaPanelData                        CallFunc_CreatePlayerPanelData_CharaPanelData_1;   // 0x0090(0x0058)()
	struct FCharaPanelData                        CallFunc_CreateEmptyCharaPanelData_CharaPanelData; // 0x00E8(0x0058)()
	struct FCharaPanelData                        CallFunc_CreateEmptyCharaPanelData_CharaPanelData_1; // 0x0140(0x0058)()
	TArray<uint8>                                 CallFunc_GetBtlNkmIndexArray_ReturnValue;          // 0x0198(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEntryNkmMax_ReturnValue;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Array_Get_Item;                           // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharaPanelData                        CallFunc_CreateNkmPanleData_CharaPanelData;        // 0x01C8(0x0058)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmIndexByEntryList_ReturnValue;       // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharaPanelData                        CallFunc_CreateNkmPanleData_CharaPanelData_1;      // 0x0238(0x0058)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNkmDevilId_M_ID;                       // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A3[0x1];                                      // 0x02A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerPanelPositionInBattle_ReturnValue; // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CampParty_C_CreateCharaPanelList) == 0x000008, "Wrong alignment on BPL_CampParty_C_CreateCharaPanelList");
static_assert(sizeof(BPL_CampParty_C_CreateCharaPanelList) == 0x0002B8, "Wrong size on BPL_CampParty_C_CreateCharaPanelList");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, __WorldContext) == 0x000000, "Member 'BPL_CampParty_C_CreateCharaPanelList::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, PanelData) == 0x000008, "Member 'BPL_CampParty_C_CreateCharaPanelList::PanelData' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, Panelindex) == 0x000018, "Member 'BPL_CampParty_C_CreateCharaPanelList::Panelindex' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, Data) == 0x000020, "Member 'BPL_CampParty_C_CreateCharaPanelList::Data' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_CheckEventFlag_ReturnValue) == 0x000030, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_CheckEventFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_CreatePlayerPanelData_CharaPanelData) == 0x000038, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_CreatePlayerPanelData_CharaPanelData' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_CreatePlayerPanelData_CharaPanelData_1) == 0x000090, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_CreatePlayerPanelData_CharaPanelData_1' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_CreateEmptyCharaPanelData_CharaPanelData) == 0x0000E8, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_CreateEmptyCharaPanelData_CharaPanelData' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_CreateEmptyCharaPanelData_CharaPanelData_1) == 0x000140, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_CreateEmptyCharaPanelData_CharaPanelData_1' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_GetBtlNkmIndexArray_ReturnValue) == 0x000198, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_GetBtlNkmIndexArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_Array_Add_ReturnValue) == 0x0001A8, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_GetEntryNkmMax_ReturnValue) == 0x0001AC, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_GetEntryNkmMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001B0, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_Array_Add_ReturnValue_1) == 0x0001B4, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_Array_Add_ReturnValue_2) == 0x0001B8, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_Array_Get_Item) == 0x0001BC, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_Add_IntInt_ReturnValue) == 0x0001C0, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0001C4, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_CreateNkmPanleData_CharaPanelData) == 0x0001C8, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_CreateNkmPanleData_CharaPanelData' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000220, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_Array_Add_ReturnValue_3) == 0x000224, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_Array_Add_ReturnValue_4) == 0x000228, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, Temp_int_Variable) == 0x00022C, "Member 'BPL_CampParty_C_CreateCharaPanelList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, Temp_int_Variable_1) == 0x000230, "Member 'BPL_CampParty_C_CreateCharaPanelList::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_GetNkmIndexByEntryList_ReturnValue) == 0x000234, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_GetNkmIndexByEntryList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_CreateNkmPanleData_CharaPanelData_1) == 0x000238, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_CreateNkmPanleData_CharaPanelData_1' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_Less_IntInt_ReturnValue) == 0x000290, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_Array_Add_ReturnValue_5) == 0x000294, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000298, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_GetNkmDevilId_M_ID) == 0x00029C, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_GetNkmDevilId_M_ID' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_BooleanOR_ReturnValue) == 0x0002A0, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0002A1, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002A2, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002A4, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0002A8, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_Add_IntInt_ReturnValue_2) == 0x0002AC, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_GetPlayerPanelPositionInBattle_ReturnValue) == 0x0002B0, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_GetPlayerPanelPositionInBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateCharaPanelList, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0002B4, "Member 'BPL_CampParty_C_CreateCharaPanelList::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");

// Function BPL_CampParty.BPL_CampParty_C.CreatePlayerPanelData
// 0x00F8 (0x00F8 - 0x0000)
struct BPL_CampParty_C_CreatePlayerPanelData final
{
public:
	E_PLAYER_TYPE                                 PlayerType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharaPanelData                        CharaPanelData;                                    // 0x0010(0x0058)(Parm, OutParm)
	class FText                                   CallFunc_GetPlayerPanelData_Name;                  // 0x0068(0x0018)()
	int32                                         CallFunc_GetPlayerPanelData_Return_Value_M_Level;  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerPanelData_Return_Value_M_HP;     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerPanelData_Return_Value_M_Natural_Param_M_HPMax; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerPanelData_Return_Value_M_MP;     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerPanelData_Return_Value_M_Natural_Param_M_MPMax; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerPanelData_Return_Value_M_Bad_Status; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerPanelData_ParamPoint;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharaPanelData                        K2Node_MakeStruct_CharaPanelData;                  // 0x00A0(0x0058)()
};
static_assert(alignof(BPL_CampParty_C_CreatePlayerPanelData) == 0x000008, "Wrong alignment on BPL_CampParty_C_CreatePlayerPanelData");
static_assert(sizeof(BPL_CampParty_C_CreatePlayerPanelData) == 0x0000F8, "Wrong size on BPL_CampParty_C_CreatePlayerPanelData");
static_assert(offsetof(BPL_CampParty_C_CreatePlayerPanelData, PlayerType) == 0x000000, "Member 'BPL_CampParty_C_CreatePlayerPanelData::PlayerType' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreatePlayerPanelData, __WorldContext) == 0x000008, "Member 'BPL_CampParty_C_CreatePlayerPanelData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreatePlayerPanelData, CharaPanelData) == 0x000010, "Member 'BPL_CampParty_C_CreatePlayerPanelData::CharaPanelData' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreatePlayerPanelData, CallFunc_GetPlayerPanelData_Name) == 0x000068, "Member 'BPL_CampParty_C_CreatePlayerPanelData::CallFunc_GetPlayerPanelData_Name' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreatePlayerPanelData, CallFunc_GetPlayerPanelData_Return_Value_M_Level) == 0x000080, "Member 'BPL_CampParty_C_CreatePlayerPanelData::CallFunc_GetPlayerPanelData_Return_Value_M_Level' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreatePlayerPanelData, CallFunc_GetPlayerPanelData_Return_Value_M_HP) == 0x000084, "Member 'BPL_CampParty_C_CreatePlayerPanelData::CallFunc_GetPlayerPanelData_Return_Value_M_HP' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreatePlayerPanelData, CallFunc_GetPlayerPanelData_Return_Value_M_Natural_Param_M_HPMax) == 0x000088, "Member 'BPL_CampParty_C_CreatePlayerPanelData::CallFunc_GetPlayerPanelData_Return_Value_M_Natural_Param_M_HPMax' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreatePlayerPanelData, CallFunc_GetPlayerPanelData_Return_Value_M_MP) == 0x00008C, "Member 'BPL_CampParty_C_CreatePlayerPanelData::CallFunc_GetPlayerPanelData_Return_Value_M_MP' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreatePlayerPanelData, CallFunc_GetPlayerPanelData_Return_Value_M_Natural_Param_M_MPMax) == 0x000090, "Member 'BPL_CampParty_C_CreatePlayerPanelData::CallFunc_GetPlayerPanelData_Return_Value_M_Natural_Param_M_MPMax' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreatePlayerPanelData, CallFunc_GetPlayerPanelData_Return_Value_M_Bad_Status) == 0x000094, "Member 'BPL_CampParty_C_CreatePlayerPanelData::CallFunc_GetPlayerPanelData_Return_Value_M_Bad_Status' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreatePlayerPanelData, CallFunc_GetPlayerPanelData_ParamPoint) == 0x000098, "Member 'BPL_CampParty_C_CreatePlayerPanelData::CallFunc_GetPlayerPanelData_ParamPoint' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreatePlayerPanelData, K2Node_MakeStruct_CharaPanelData) == 0x0000A0, "Member 'BPL_CampParty_C_CreatePlayerPanelData::K2Node_MakeStruct_CharaPanelData' has a wrong offset!");

// Function BPL_CampParty.BPL_CampParty_C.CreateNkmPanleData
// 0x01F8 (0x01F8 - 0x0000)
struct BPL_CampParty_C_CreateNkmPanleData final
{
public:
	int32                                         NkmIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStock;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharaPanelData                        CharaPanelData;                                    // 0x0010(0x0058)(Parm, OutParm)
	int32                                         Access;                                            // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Const_GetNkmEntryMax_ReturnValue;         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharaPanelData                        CallFunc_CreateEmptyCharaPanelData_CharaPanelData; // 0x0078(0x0058)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetNkmPanelData_Name;                     // 0x00D8(0x0018)()
	int32                                         CallFunc_GetNkmPanelData_Return_Value_M_Level;     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmPanelData_Return_Value_M_HP;        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmPanelData_Return_Value_M_Std_Param_M_HPMax; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmPanelData_Return_Value_M_MP;        // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmPanelData_Return_Value_M_Std_Param_M_MPMax; // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmPanelData_Return_Value_M_Bad_Status; // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEntryBattle_ReturnValue;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNkmDevilId_M_ID;                       // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharaPanelData                        K2Node_MakeStruct_CharaPanelData;                  // 0x0110(0x0058)()
	class FText                                   CallFunc_GetNkmPanelData_Name_1;                   // 0x0168(0x0018)()
	int32                                         CallFunc_GetNkmPanelData_Return_Value_M_Level_1;   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmPanelData_Return_Value_M_HP_1;      // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmPanelData_Return_Value_M_Std_Param_M_HPMax_1; // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmPanelData_Return_Value_M_MP_1;      // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmPanelData_Return_Value_M_Std_Param_M_MPMax_1; // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmPanelData_Return_Value_M_Bad_Status_1; // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmDevilId_M_ID_1;                     // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharaPanelData                        K2Node_MakeStruct_CharaPanelData_1;                // 0x01A0(0x0058)()
};
static_assert(alignof(BPL_CampParty_C_CreateNkmPanleData) == 0x000008, "Wrong alignment on BPL_CampParty_C_CreateNkmPanleData");
static_assert(sizeof(BPL_CampParty_C_CreateNkmPanleData) == 0x0001F8, "Wrong size on BPL_CampParty_C_CreateNkmPanleData");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, NkmIndex) == 0x000000, "Member 'BPL_CampParty_C_CreateNkmPanleData::NkmIndex' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, IsStock) == 0x000004, "Member 'BPL_CampParty_C_CreateNkmPanleData::IsStock' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, __WorldContext) == 0x000008, "Member 'BPL_CampParty_C_CreateNkmPanleData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CharaPanelData) == 0x000010, "Member 'BPL_CampParty_C_CreateNkmPanleData::CharaPanelData' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, Access) == 0x000068, "Member 'BPL_CampParty_C_CreateNkmPanleData::Access' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, Param_Index) == 0x00006C, "Member 'BPL_CampParty_C_CreateNkmPanleData::Param_Index' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_Const_GetNkmEntryMax_ReturnValue) == 0x000070, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_Const_GetNkmEntryMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_CreateEmptyCharaPanelData_CharaPanelData) == 0x000078, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_CreateEmptyCharaPanelData_CharaPanelData' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D1, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_BooleanAND_ReturnValue) == 0x0000D2, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_GetNkmPanelData_Name) == 0x0000D8, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_GetNkmPanelData_Name' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_GetNkmPanelData_Return_Value_M_Level) == 0x0000F0, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_GetNkmPanelData_Return_Value_M_Level' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_GetNkmPanelData_Return_Value_M_HP) == 0x0000F4, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_GetNkmPanelData_Return_Value_M_HP' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_GetNkmPanelData_Return_Value_M_Std_Param_M_HPMax) == 0x0000F8, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_GetNkmPanelData_Return_Value_M_Std_Param_M_HPMax' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_GetNkmPanelData_Return_Value_M_MP) == 0x0000FC, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_GetNkmPanelData_Return_Value_M_MP' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_GetNkmPanelData_Return_Value_M_Std_Param_M_MPMax) == 0x000100, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_GetNkmPanelData_Return_Value_M_Std_Param_M_MPMax' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_GetNkmPanelData_Return_Value_M_Bad_Status) == 0x000104, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_GetNkmPanelData_Return_Value_M_Bad_Status' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_IsEntryBattle_ReturnValue) == 0x000108, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_IsEntryBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_GetNkmDevilId_M_ID) == 0x00010C, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_GetNkmDevilId_M_ID' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, K2Node_MakeStruct_CharaPanelData) == 0x000110, "Member 'BPL_CampParty_C_CreateNkmPanleData::K2Node_MakeStruct_CharaPanelData' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_GetNkmPanelData_Name_1) == 0x000168, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_GetNkmPanelData_Name_1' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_GetNkmPanelData_Return_Value_M_Level_1) == 0x000180, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_GetNkmPanelData_Return_Value_M_Level_1' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_GetNkmPanelData_Return_Value_M_HP_1) == 0x000184, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_GetNkmPanelData_Return_Value_M_HP_1' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_GetNkmPanelData_Return_Value_M_Std_Param_M_HPMax_1) == 0x000188, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_GetNkmPanelData_Return_Value_M_Std_Param_M_HPMax_1' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_GetNkmPanelData_Return_Value_M_MP_1) == 0x00018C, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_GetNkmPanelData_Return_Value_M_MP_1' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_GetNkmPanelData_Return_Value_M_Std_Param_M_MPMax_1) == 0x000190, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_GetNkmPanelData_Return_Value_M_Std_Param_M_MPMax_1' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_GetNkmPanelData_Return_Value_M_Bad_Status_1) == 0x000194, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_GetNkmPanelData_Return_Value_M_Bad_Status_1' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, CallFunc_GetNkmDevilId_M_ID_1) == 0x000198, "Member 'BPL_CampParty_C_CreateNkmPanleData::CallFunc_GetNkmDevilId_M_ID_1' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateNkmPanleData, K2Node_MakeStruct_CharaPanelData_1) == 0x0001A0, "Member 'BPL_CampParty_C_CreateNkmPanleData::K2Node_MakeStruct_CharaPanelData_1' has a wrong offset!");

// Function BPL_CampParty.BPL_CampParty_C.CreateEmptyCharaPanelData
// 0x00C8 (0x00C8 - 0x0000)
struct BPL_CampParty_C_CreateEmptyCharaPanelData final
{
public:
	bool                                          IsStock;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharaPanelData                        CharaPanelData;                                    // 0x0010(0x0058)(Parm, OutParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharaPanelData                        K2Node_MakeStruct_CharaPanelData;                  // 0x0070(0x0058)()
};
static_assert(alignof(BPL_CampParty_C_CreateEmptyCharaPanelData) == 0x000008, "Wrong alignment on BPL_CampParty_C_CreateEmptyCharaPanelData");
static_assert(sizeof(BPL_CampParty_C_CreateEmptyCharaPanelData) == 0x0000C8, "Wrong size on BPL_CampParty_C_CreateEmptyCharaPanelData");
static_assert(offsetof(BPL_CampParty_C_CreateEmptyCharaPanelData, IsStock) == 0x000000, "Member 'BPL_CampParty_C_CreateEmptyCharaPanelData::IsStock' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateEmptyCharaPanelData, __WorldContext) == 0x000008, "Member 'BPL_CampParty_C_CreateEmptyCharaPanelData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateEmptyCharaPanelData, CharaPanelData) == 0x000010, "Member 'BPL_CampParty_C_CreateEmptyCharaPanelData::CharaPanelData' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateEmptyCharaPanelData, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'BPL_CampParty_C_CreateEmptyCharaPanelData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CreateEmptyCharaPanelData, K2Node_MakeStruct_CharaPanelData) == 0x000070, "Member 'BPL_CampParty_C_CreateEmptyCharaPanelData::K2Node_MakeStruct_CharaPanelData' has a wrong offset!");

// Function BPL_CampParty.BPL_CampParty_C.IsEntryBattle
// 0x0140 (0x0140 - 0x0000)
struct BPL_CampParty_C_IsEntryBattle final
{
public:
	int32                                         NkmIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	E_CHAR_GL_FLAG                                Flag;                                              // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNkmData                               CallFunc_GetNkmData_ReturnValue;                   // 0x0018(0x0120)(ConstParm)
	bool                                          CallFunc_BIT_AND_ReturnValue;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CampParty_C_IsEntryBattle) == 0x000008, "Wrong alignment on BPL_CampParty_C_IsEntryBattle");
static_assert(sizeof(BPL_CampParty_C_IsEntryBattle) == 0x000140, "Wrong size on BPL_CampParty_C_IsEntryBattle");
static_assert(offsetof(BPL_CampParty_C_IsEntryBattle, NkmIndex) == 0x000000, "Member 'BPL_CampParty_C_IsEntryBattle::NkmIndex' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_IsEntryBattle, __WorldContext) == 0x000008, "Member 'BPL_CampParty_C_IsEntryBattle::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_IsEntryBattle, ReturnValue) == 0x000010, "Member 'BPL_CampParty_C_IsEntryBattle::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_IsEntryBattle, Flag) == 0x000011, "Member 'BPL_CampParty_C_IsEntryBattle::Flag' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_IsEntryBattle, CallFunc_GetNkmData_ReturnValue) == 0x000018, "Member 'BPL_CampParty_C_IsEntryBattle::CallFunc_GetNkmData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_IsEntryBattle, CallFunc_BIT_AND_ReturnValue) == 0x000138, "Member 'BPL_CampParty_C_IsEntryBattle::CallFunc_BIT_AND_ReturnValue' has a wrong offset!");

// Function BPL_CampParty.BPL_CampParty_C.GetNkmDevilId
// 0x0138 (0x0138 - 0x0000)
struct BPL_CampParty_C_GetNkmDevilId final
{
public:
	int32                                         NkmIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         M_ID;                                              // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNkmData                               CallFunc_GetNkmData_ReturnValue;                   // 0x0018(0x0120)(ConstParm)
};
static_assert(alignof(BPL_CampParty_C_GetNkmDevilId) == 0x000008, "Wrong alignment on BPL_CampParty_C_GetNkmDevilId");
static_assert(sizeof(BPL_CampParty_C_GetNkmDevilId) == 0x000138, "Wrong size on BPL_CampParty_C_GetNkmDevilId");
static_assert(offsetof(BPL_CampParty_C_GetNkmDevilId, NkmIndex) == 0x000000, "Member 'BPL_CampParty_C_GetNkmDevilId::NkmIndex' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetNkmDevilId, __WorldContext) == 0x000008, "Member 'BPL_CampParty_C_GetNkmDevilId::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetNkmDevilId, M_ID) == 0x000010, "Member 'BPL_CampParty_C_GetNkmDevilId::M_ID' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetNkmDevilId, CallFunc_GetNkmData_ReturnValue) == 0x000018, "Member 'BPL_CampParty_C_GetNkmDevilId::CallFunc_GetNkmData_ReturnValue' has a wrong offset!");

// Function BPL_CampParty.BPL_CampParty_C.GetPlayerPanelData
// 0x0190 (0x0190 - 0x0000)
struct BPL_CampParty_C_GetPlayerPanelData final
{
public:
	E_PLAYER_TYPE                                 PlayerType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Param_Name;                                        // 0x0010(0x0018)(Parm, OutParm)
	int32                                         Return_Value_M_Level;                              // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Return_Value_M_HP;                                 // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Return_Value_M_Natural_Param_M_HPMax;              // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Return_Value_M_MP;                                 // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Return_Value_M_Natural_Param_M_MPMax;              // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Return_Value_M_Bad_Status;                         // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ParamPoint;                                        // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharData                              CallFunc_GetPlayerData_ReturnValue;                // 0x0048(0x0130)(ConstParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0178(0x0018)()
};
static_assert(alignof(BPL_CampParty_C_GetPlayerPanelData) == 0x000008, "Wrong alignment on BPL_CampParty_C_GetPlayerPanelData");
static_assert(sizeof(BPL_CampParty_C_GetPlayerPanelData) == 0x000190, "Wrong size on BPL_CampParty_C_GetPlayerPanelData");
static_assert(offsetof(BPL_CampParty_C_GetPlayerPanelData, PlayerType) == 0x000000, "Member 'BPL_CampParty_C_GetPlayerPanelData::PlayerType' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetPlayerPanelData, __WorldContext) == 0x000008, "Member 'BPL_CampParty_C_GetPlayerPanelData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetPlayerPanelData, Param_Name) == 0x000010, "Member 'BPL_CampParty_C_GetPlayerPanelData::Param_Name' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetPlayerPanelData, Return_Value_M_Level) == 0x000028, "Member 'BPL_CampParty_C_GetPlayerPanelData::Return_Value_M_Level' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetPlayerPanelData, Return_Value_M_HP) == 0x00002C, "Member 'BPL_CampParty_C_GetPlayerPanelData::Return_Value_M_HP' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetPlayerPanelData, Return_Value_M_Natural_Param_M_HPMax) == 0x000030, "Member 'BPL_CampParty_C_GetPlayerPanelData::Return_Value_M_Natural_Param_M_HPMax' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetPlayerPanelData, Return_Value_M_MP) == 0x000034, "Member 'BPL_CampParty_C_GetPlayerPanelData::Return_Value_M_MP' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetPlayerPanelData, Return_Value_M_Natural_Param_M_MPMax) == 0x000038, "Member 'BPL_CampParty_C_GetPlayerPanelData::Return_Value_M_Natural_Param_M_MPMax' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetPlayerPanelData, Return_Value_M_Bad_Status) == 0x00003C, "Member 'BPL_CampParty_C_GetPlayerPanelData::Return_Value_M_Bad_Status' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetPlayerPanelData, ParamPoint) == 0x000040, "Member 'BPL_CampParty_C_GetPlayerPanelData::ParamPoint' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetPlayerPanelData, CallFunc_GetPlayerData_ReturnValue) == 0x000048, "Member 'BPL_CampParty_C_GetPlayerPanelData::CallFunc_GetPlayerData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetPlayerPanelData, CallFunc_Conv_StringToText_ReturnValue) == 0x000178, "Member 'BPL_CampParty_C_GetPlayerPanelData::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BPL_CampParty.BPL_CampParty_C.GetNkmPanelData
// 0x0198 (0x0198 - 0x0000)
struct BPL_CampParty_C_GetNkmPanelData final
{
public:
	int32                                         NkmIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Param_Name;                                        // 0x0010(0x0018)(Parm, OutParm)
	int32                                         Return_Value_M_Level;                              // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Return_Value_M_HP;                                 // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Return_Value_M_Std_Param_M_HPMax;                  // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Return_Value_M_MP;                                 // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Return_Value_M_Std_Param_M_MPMax;                  // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Return_Value_M_Bad_Status;                         // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNkmData                               CallFunc_GetNkmData_ReturnValue;                   // 0x0040(0x0120)(ConstParm)
	struct FAbilData                              CallFunc_GetNkmAbility_ReturnValue;                // 0x0160(0x001C)(ConstParm)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDevilName_ReturnValue;                 // 0x0180(0x0018)(ConstParm)
};
static_assert(alignof(BPL_CampParty_C_GetNkmPanelData) == 0x000008, "Wrong alignment on BPL_CampParty_C_GetNkmPanelData");
static_assert(sizeof(BPL_CampParty_C_GetNkmPanelData) == 0x000198, "Wrong size on BPL_CampParty_C_GetNkmPanelData");
static_assert(offsetof(BPL_CampParty_C_GetNkmPanelData, NkmIndex) == 0x000000, "Member 'BPL_CampParty_C_GetNkmPanelData::NkmIndex' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetNkmPanelData, __WorldContext) == 0x000008, "Member 'BPL_CampParty_C_GetNkmPanelData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetNkmPanelData, Param_Name) == 0x000010, "Member 'BPL_CampParty_C_GetNkmPanelData::Param_Name' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetNkmPanelData, Return_Value_M_Level) == 0x000028, "Member 'BPL_CampParty_C_GetNkmPanelData::Return_Value_M_Level' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetNkmPanelData, Return_Value_M_HP) == 0x00002C, "Member 'BPL_CampParty_C_GetNkmPanelData::Return_Value_M_HP' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetNkmPanelData, Return_Value_M_Std_Param_M_HPMax) == 0x000030, "Member 'BPL_CampParty_C_GetNkmPanelData::Return_Value_M_Std_Param_M_HPMax' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetNkmPanelData, Return_Value_M_MP) == 0x000034, "Member 'BPL_CampParty_C_GetNkmPanelData::Return_Value_M_MP' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetNkmPanelData, Return_Value_M_Std_Param_M_MPMax) == 0x000038, "Member 'BPL_CampParty_C_GetNkmPanelData::Return_Value_M_Std_Param_M_MPMax' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetNkmPanelData, Return_Value_M_Bad_Status) == 0x00003C, "Member 'BPL_CampParty_C_GetNkmPanelData::Return_Value_M_Bad_Status' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetNkmPanelData, CallFunc_GetNkmData_ReturnValue) == 0x000040, "Member 'BPL_CampParty_C_GetNkmPanelData::CallFunc_GetNkmData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetNkmPanelData, CallFunc_GetNkmAbility_ReturnValue) == 0x000160, "Member 'BPL_CampParty_C_GetNkmPanelData::CallFunc_GetNkmAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetNkmPanelData, CallFunc_GetDevilName_ReturnValue) == 0x000180, "Member 'BPL_CampParty_C_GetNkmPanelData::CallFunc_GetDevilName_ReturnValue' has a wrong offset!");

// Function BPL_CampParty.BPL_CampParty_C.CheckCharBst
// 0x0018 (0x0018 - 0x0000)
struct BPL_CampParty_C_CheckCharBst final
{
public:
	int32                                         NkmIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BAD_STATUS                                  bst;                                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckNkmBstOne_ReturnValue;               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPlayerBstOne_ReturnValue;            // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CampParty_C_CheckCharBst) == 0x000008, "Wrong alignment on BPL_CampParty_C_CheckCharBst");
static_assert(sizeof(BPL_CampParty_C_CheckCharBst) == 0x000018, "Wrong size on BPL_CampParty_C_CheckCharBst");
static_assert(offsetof(BPL_CampParty_C_CheckCharBst, NkmIndex) == 0x000000, "Member 'BPL_CampParty_C_CheckCharBst::NkmIndex' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CheckCharBst, bst) == 0x000004, "Member 'BPL_CampParty_C_CheckCharBst::bst' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CheckCharBst, __WorldContext) == 0x000008, "Member 'BPL_CampParty_C_CheckCharBst::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CheckCharBst, Ret) == 0x000010, "Member 'BPL_CampParty_C_CheckCharBst::Ret' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CheckCharBst, CallFunc_Less_IntInt_ReturnValue) == 0x000011, "Member 'BPL_CampParty_C_CheckCharBst::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CheckCharBst, CallFunc_CheckNkmBstOne_ReturnValue) == 0x000012, "Member 'BPL_CampParty_C_CheckCharBst::CallFunc_CheckNkmBstOne_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_CheckCharBst, CallFunc_CheckPlayerBstOne_ReturnValue) == 0x000013, "Member 'BPL_CampParty_C_CheckCharBst::CallFunc_CheckPlayerBstOne_ReturnValue' has a wrong offset!");

// Function BPL_CampParty.BPL_CampParty_C.GetIsEmpty
// 0x0068 (0x0068 - 0x0000)
struct BPL_CampParty_C_GetIsEmpty final
{
public:
	struct FCharaPanelData                        CharaPanelData;                                    // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEmpty;                                           // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CampParty_C_GetIsEmpty) == 0x000008, "Wrong alignment on BPL_CampParty_C_GetIsEmpty");
static_assert(sizeof(BPL_CampParty_C_GetIsEmpty) == 0x000068, "Wrong size on BPL_CampParty_C_GetIsEmpty");
static_assert(offsetof(BPL_CampParty_C_GetIsEmpty, CharaPanelData) == 0x000000, "Member 'BPL_CampParty_C_GetIsEmpty::CharaPanelData' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetIsEmpty, __WorldContext) == 0x000058, "Member 'BPL_CampParty_C_GetIsEmpty::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CampParty_C_GetIsEmpty, IsEmpty) == 0x000060, "Member 'BPL_CampParty_C_GetIsEmpty::IsEmpty' has a wrong offset!");

}

