#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharaHeadComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function CharaHeadComponent.CharaHeadComponent_C.Update
// 0x0040 (0x0040 - 0x0000)
struct CharaHeadComponent_C_Update final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IKEnable;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GazePoint;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GazePointEnable;                                   // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation;                                          // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_UpdateHeadRotation_Rotation;              // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharaHeadComponent_C_Update) == 0x000008, "Wrong alignment on CharaHeadComponent_C_Update");
static_assert(sizeof(CharaHeadComponent_C_Update) == 0x000040, "Wrong size on CharaHeadComponent_C_Update");
static_assert(offsetof(CharaHeadComponent_C_Update, DeltaTime) == 0x000000, "Member 'CharaHeadComponent_C_Update::DeltaTime' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_Update, Mesh) == 0x000008, "Member 'CharaHeadComponent_C_Update::Mesh' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_Update, IKEnable) == 0x000010, "Member 'CharaHeadComponent_C_Update::IKEnable' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_Update, GazePoint) == 0x000014, "Member 'CharaHeadComponent_C_Update::GazePoint' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_Update, GazePointEnable) == 0x000020, "Member 'CharaHeadComponent_C_Update::GazePointEnable' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_Update, Rotation) == 0x000024, "Member 'CharaHeadComponent_C_Update::Rotation' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_Update, CallFunc_UpdateHeadRotation_Rotation) == 0x000030, "Member 'CharaHeadComponent_C_Update::CallFunc_UpdateHeadRotation_Rotation' has a wrong offset!");

// Function CharaHeadComponent.CharaHeadComponent_C.UpdateHeadRotation
// 0x0530 (0x0530 - 0x0000)
struct CharaHeadComponent_C_UpdateHeadRotation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  Mesh;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IKEnable;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GazePoint;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GazePointEnable;                                   // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation;                                          // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               HeadRotationTarget;                                // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         AngleHorizontalTarget;                             // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AngleVerticalTarget;                               // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FocalPointLocal;                                   // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GazePointLocal;                                    // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ViewPointLocal;                                    // 0x005C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTimeCache;                                    // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_1;    // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromAtoB_ReturnValue;              // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_2;    // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_1;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue_1;               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_3;    // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Sqrt_ReturnValue;                         // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_2;            // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x019C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue_1;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_2;                   // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_3;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_2;                      // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_QuadraticFormula_X0;                      // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_QuadraticFormula_X1;                      // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_QuadraticFormula_ReturnValue;             // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1ED[0x3];                                      // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue_2;                    // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_4;                   // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_3;                      // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetRefPoseTransform_ReturnValue;          // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_3;            // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_GetParentBone_ReturnValue;                // 0x02D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x02E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0310(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetRefPoseTransform_ReturnValue_1;        // 0x0340(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x037C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue_1;              // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x03B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x03F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0420(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x042C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0438(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x0444(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_4;            // 0x0450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_5;            // 0x045C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_468[0x8];                                      // 0x0468(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0470(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_6;            // 0x04A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_2;          // 0x04B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x04E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x04EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x04F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x0504(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x051C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharaHeadComponent_C_UpdateHeadRotation) == 0x000010, "Wrong alignment on CharaHeadComponent_C_UpdateHeadRotation");
static_assert(sizeof(CharaHeadComponent_C_UpdateHeadRotation) == 0x000530, "Wrong size on CharaHeadComponent_C_UpdateHeadRotation");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, DeltaTime) == 0x000000, "Member 'CharaHeadComponent_C_UpdateHeadRotation::DeltaTime' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, Mesh) == 0x000008, "Member 'CharaHeadComponent_C_UpdateHeadRotation::Mesh' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, IKEnable) == 0x000010, "Member 'CharaHeadComponent_C_UpdateHeadRotation::IKEnable' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, GazePoint) == 0x000014, "Member 'CharaHeadComponent_C_UpdateHeadRotation::GazePoint' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, GazePointEnable) == 0x000020, "Member 'CharaHeadComponent_C_UpdateHeadRotation::GazePointEnable' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, Rotation) == 0x000024, "Member 'CharaHeadComponent_C_UpdateHeadRotation::Rotation' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, HeadRotationTarget) == 0x000030, "Member 'CharaHeadComponent_C_UpdateHeadRotation::HeadRotationTarget' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, AngleHorizontalTarget) == 0x00003C, "Member 'CharaHeadComponent_C_UpdateHeadRotation::AngleHorizontalTarget' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, AngleVerticalTarget) == 0x000040, "Member 'CharaHeadComponent_C_UpdateHeadRotation::AngleVerticalTarget' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, FocalPointLocal) == 0x000044, "Member 'CharaHeadComponent_C_UpdateHeadRotation::FocalPointLocal' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, GazePointLocal) == 0x000050, "Member 'CharaHeadComponent_C_UpdateHeadRotation::GazePointLocal' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, ViewPointLocal) == 0x00005C, "Member 'CharaHeadComponent_C_UpdateHeadRotation::ViewPointLocal' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, DeltaTimeCache) == 0x000068, "Member 'CharaHeadComponent_C_UpdateHeadRotation::DeltaTimeCache' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BooleanAND_ReturnValue) == 0x00006C, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_FCeil_ReturnValue) == 0x00007C, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_FCeil_ReturnValue_1) == 0x000080, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_Conv_IntToString_ReturnValue) == 0x000088, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000098, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A8, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B8, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000C8, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_SelectFloat_ReturnValue) == 0x0000D8, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_RInterpTo_ReturnValue) == 0x0000DC, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x0000E8, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue_1) == 0x0000F4, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_MakeRotFromAtoB_ReturnValue) == 0x000100, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_MakeRotFromAtoB_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_ComposeRotators_ReturnValue) == 0x00010C, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_NegateRotator_ReturnValue) == 0x000118, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakVector_X) == 0x000124, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakVector_Y) == 0x000128, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakVector_Z) == 0x00012C, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_VSizeSquared_ReturnValue) == 0x000130, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_DegAtan2_ReturnValue) == 0x000134, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_MakeVector2D_ReturnValue) == 0x000138, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue_2) == 0x000140, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_VSize2D_ReturnValue) == 0x00014C, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_DegAtan2_ReturnValue_1) == 0x000150, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_DegAtan2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_VSizeSquared_ReturnValue_1) == 0x000154, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_VSizeSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_RotatorFromAxisAndAngle_ReturnValue_3) == 0x000158, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_RotatorFromAxisAndAngle_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000164, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_ComposeRotators_ReturnValue_1) == 0x000168, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_Sqrt_ReturnValue) == 0x000174, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_ComposeRotators_ReturnValue_2) == 0x000178, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_ComposeRotators_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakVector_X_1) == 0x000184, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakVector_Y_1) == 0x000188, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakVector_Z_1) == 0x00018C, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000190, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_MakeVector2D_ReturnValue_1) == 0x00019C, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakVector_X_2) == 0x0001A4, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakVector_Y_2) == 0x0001A8, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakVector_Z_2) == 0x0001AC, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_VSize2D_ReturnValue_1) == 0x0001B0, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_VSize2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_DegAtan2_ReturnValue_2) == 0x0001B4, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_DegAtan2_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_DegAtan2_ReturnValue_3) == 0x0001B8, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_DegAtan2_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_FCeil_ReturnValue_2) == 0x0001BC, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_FCeil_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_DegCos_ReturnValue) == 0x0001C0, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0001C8, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001D8, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_FClamp_ReturnValue) == 0x0001DC, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0001E0, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_QuadraticFormula_X0) == 0x0001E4, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_QuadraticFormula_X0' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_QuadraticFormula_X1) == 0x0001E8, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_QuadraticFormula_X1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_QuadraticFormula_ReturnValue) == 0x0001EC, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_QuadraticFormula_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_MakeVector2D_ReturnValue_2) == 0x0001F0, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_MakeVector_ReturnValue_1) == 0x0001F8, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_VSize2D_ReturnValue_2) == 0x000204, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_VSize2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x000208, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_DegAtan2_ReturnValue_4) == 0x000214, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_DegAtan2_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_FCeil_ReturnValue_3) == 0x000218, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_FCeil_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_FClamp_ReturnValue_1) == 0x00021C, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000220, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000230, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000240, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_GetRefPoseTransform_ReturnValue) == 0x000250, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_GetRefPoseTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000280, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakTransform_Location) == 0x000290, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakTransform_Rotation) == 0x00029C, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakTransform_Scale) == 0x0002A8, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0002B8, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_ComposeRotators_ReturnValue_3) == 0x0002C8, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_ComposeRotators_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_GetParentBone_ReturnValue) == 0x0002D4, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_GetParentBone_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_GetSocketTransform_ReturnValue) == 0x0002E0, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_ComposeTransforms_ReturnValue) == 0x000310, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_GetRefPoseTransform_ReturnValue_1) == 0x000340, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_GetRefPoseTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_InverseTransformLocation_ReturnValue) == 0x000370, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakTransform_Location_1) == 0x00037C, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakTransform_Rotation_1) == 0x000388, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakTransform_Scale_1) == 0x000394, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_NegateRotator_ReturnValue_1) == 0x0003A0, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_NegateRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_MakeTransform_ReturnValue) == 0x0003B0, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x0003E0, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_ComposeTransforms_ReturnValue_1) == 0x0003F0, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakTransform_Location_2) == 0x000420, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakTransform_Rotation_2) == 0x00042C, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakTransform_Scale_2) == 0x000438, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x000444, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_ComposeRotators_ReturnValue_4) == 0x000450, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_ComposeRotators_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_ComposeRotators_ReturnValue_5) == 0x00045C, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_ComposeRotators_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_MakeTransform_ReturnValue_1) == 0x000470, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_ComposeRotators_ReturnValue_6) == 0x0004A0, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_ComposeRotators_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_ComposeTransforms_ReturnValue_2) == 0x0004B0, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_ComposeTransforms_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakTransform_Location_3) == 0x0004E0, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakTransform_Rotation_3) == 0x0004EC, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_BreakTransform_Scale_3) == 0x0004F8, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_TransformDirection_ReturnValue) == 0x000504, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_TransformLocation_ReturnValue) == 0x000510, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharaHeadComponent_C_UpdateHeadRotation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00051C, "Member 'CharaHeadComponent_C_UpdateHeadRotation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

}

