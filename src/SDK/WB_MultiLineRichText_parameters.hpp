#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MultiLineRichText

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Slate_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.ExecuteUbergraph_WB_MultiLineRichText
// 0x0044 (0x0044 - 0x0000)
struct WB_MultiLineRichText_C_ExecuteUbergraph_WB_MultiLineRichText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MultiLineRichText_C_ExecuteUbergraph_WB_MultiLineRichText) == 0x000004, "Wrong alignment on WB_MultiLineRichText_C_ExecuteUbergraph_WB_MultiLineRichText");
static_assert(sizeof(WB_MultiLineRichText_C_ExecuteUbergraph_WB_MultiLineRichText) == 0x000044, "Wrong size on WB_MultiLineRichText_C_ExecuteUbergraph_WB_MultiLineRichText");
static_assert(offsetof(WB_MultiLineRichText_C_ExecuteUbergraph_WB_MultiLineRichText, EntryPoint) == 0x000000, "Member 'WB_MultiLineRichText_C_ExecuteUbergraph_WB_MultiLineRichText::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_ExecuteUbergraph_WB_MultiLineRichText, K2Node_Event_MyGeometry) == 0x000004, "Member 'WB_MultiLineRichText_C_ExecuteUbergraph_WB_MultiLineRichText::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_ExecuteUbergraph_WB_MultiLineRichText, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WB_MultiLineRichText_C_ExecuteUbergraph_WB_MultiLineRichText::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_ExecuteUbergraph_WB_MultiLineRichText, K2Node_Event_IsDesignTime) == 0x000040, "Member 'WB_MultiLineRichText_C_ExecuteUbergraph_WB_MultiLineRichText::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_MultiLineRichText_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MultiLineRichText_C_PreConstruct) == 0x000001, "Wrong alignment on WB_MultiLineRichText_C_PreConstruct");
static_assert(sizeof(WB_MultiLineRichText_C_PreConstruct) == 0x000001, "Wrong size on WB_MultiLineRichText_C_PreConstruct");
static_assert(offsetof(WB_MultiLineRichText_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_MultiLineRichText_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_MultiLineRichText_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MultiLineRichText_C_Tick) == 0x000004, "Wrong alignment on WB_MultiLineRichText_C_Tick");
static_assert(sizeof(WB_MultiLineRichText_C_Tick) == 0x00003C, "Wrong size on WB_MultiLineRichText_C_Tick");
static_assert(offsetof(WB_MultiLineRichText_C_Tick, MyGeometry) == 0x000000, "Member 'WB_MultiLineRichText_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_MultiLineRichText_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.Init
// 0x00F8 (0x00F8 - 0x0000)
struct WB_MultiLineRichText_C_Init final
{
public:
	class UMessageRichTextWidget*                 Loop_RichText;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Loop_idx;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMessageRichTextWidget*>         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FMargin                                CallFunc_GetLocalizedOffset_ReturnValue;           // 0x0028(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMessageRichTextWidget*                 CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 CallFunc_SpawnObject_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDecorator_ReturnValue;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0078(0x0028)()
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MultiLineRichText_C_Init) == 0x000008, "Wrong alignment on WB_MultiLineRichText_C_Init");
static_assert(sizeof(WB_MultiLineRichText_C_Init) == 0x0000F8, "Wrong size on WB_MultiLineRichText_C_Init");
static_assert(offsetof(WB_MultiLineRichText_C_Init, Loop_RichText) == 0x000000, "Member 'WB_MultiLineRichText_C_Init::Loop_RichText' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, Loop_idx) == 0x000008, "Member 'WB_MultiLineRichText_C_Init::Loop_idx' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WB_MultiLineRichText_C_Init::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_Clamp_ReturnValue) == 0x000010, "Member 'WB_MultiLineRichText_C_Init::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_Array_Length_ReturnValue_1) == 0x000014, "Member 'WB_MultiLineRichText_C_Init::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, K2Node_MakeArray_Array) == 0x000018, "Member 'WB_MultiLineRichText_C_Init::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_GetLocalizedOffset_ReturnValue) == 0x000028, "Member 'WB_MultiLineRichText_C_Init::CallFunc_GetLocalizedOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_BreakVector2D_X) == 0x000038, "Member 'WB_MultiLineRichText_C_Init::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_BreakVector2D_Y) == 0x00003C, "Member 'WB_MultiLineRichText_C_Init::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000040, "Member 'WB_MultiLineRichText_C_Init::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'WB_MultiLineRichText_C_Init::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'WB_MultiLineRichText_C_Init::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, Temp_int_Array_Index_Variable) == 0x000050, "Member 'WB_MultiLineRichText_C_Init::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_MakeVector2D_ReturnValue) == 0x000054, "Member 'WB_MultiLineRichText_C_Init::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_Array_Get_Item) == 0x000060, "Member 'WB_MultiLineRichText_C_Init::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_SpawnObject_ReturnValue) == 0x000068, "Member 'WB_MultiLineRichText_C_Init::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_SetDecorator_ReturnValue) == 0x000070, "Member 'WB_MultiLineRichText_C_Init::CallFunc_SetDecorator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, K2Node_MakeStruct_SlateColor) == 0x000078, "Member 'WB_MultiLineRichText_C_Init::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x0000A0, "Member 'WB_MultiLineRichText_C_Init::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x0000A8, "Member 'WB_MultiLineRichText_C_Init::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_GetPosition_ReturnValue) == 0x0000B0, "Member 'WB_MultiLineRichText_C_Init::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_BreakVector2D_X_1) == 0x0000B8, "Member 'WB_MultiLineRichText_C_Init::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_BreakVector2D_Y_1) == 0x0000BC, "Member 'WB_MultiLineRichText_C_Init::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'WB_MultiLineRichText_C_Init::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'WB_MultiLineRichText_C_Init::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'WB_MultiLineRichText_C_Init::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x0000D0, "Member 'WB_MultiLineRichText_C_Init::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_BreakVector2D_X_2) == 0x0000D8, "Member 'WB_MultiLineRichText_C_Init::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_BreakVector2D_Y_2) == 0x0000DC, "Member 'WB_MultiLineRichText_C_Init::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000E0, "Member 'WB_MultiLineRichText_C_Init::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000E4, "Member 'WB_MultiLineRichText_C_Init::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_Init, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000EC, "Member 'WB_MultiLineRichText_C_Init::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.SetNewMsg_byID
// 0x0030 (0x0030 - 0x0000)
struct WB_MultiLineRichText_C_SetNewMsg_byID final
{
public:
	const class UScriptMessageAsset*              MsgAsset;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MsgID;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_CreateLineStringArray_ReturnValue;        // 0x0020(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(WB_MultiLineRichText_C_SetNewMsg_byID) == 0x000008, "Wrong alignment on WB_MultiLineRichText_C_SetNewMsg_byID");
static_assert(sizeof(WB_MultiLineRichText_C_SetNewMsg_byID) == 0x000030, "Wrong size on WB_MultiLineRichText_C_SetNewMsg_byID");
static_assert(offsetof(WB_MultiLineRichText_C_SetNewMsg_byID, MsgAsset) == 0x000000, "Member 'WB_MultiLineRichText_C_SetNewMsg_byID::MsgAsset' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetNewMsg_byID, MsgID) == 0x000008, "Member 'WB_MultiLineRichText_C_SetNewMsg_byID::MsgID' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetNewMsg_byID, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'WB_MultiLineRichText_C_SetNewMsg_byID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetNewMsg_byID, CallFunc_Conv_TextToString_ReturnValue) == 0x000010, "Member 'WB_MultiLineRichText_C_SetNewMsg_byID::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetNewMsg_byID, CallFunc_CreateLineStringArray_ReturnValue) == 0x000020, "Member 'WB_MultiLineRichText_C_SetNewMsg_byID::CallFunc_CreateLineStringArray_ReturnValue' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.SetNewMsg_byLabel
// 0x0050 (0x0050 - 0x0000)
struct WB_MultiLineRichText_C_SetNewMsg_byLabel final
{
public:
	const class UScriptMessageAsset*              MsgAsset;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MsgLabel;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTextByLabel_ReturnValue;               // 0x0018(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_CreateLineStringArray_ReturnValue;        // 0x0040(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(WB_MultiLineRichText_C_SetNewMsg_byLabel) == 0x000008, "Wrong alignment on WB_MultiLineRichText_C_SetNewMsg_byLabel");
static_assert(sizeof(WB_MultiLineRichText_C_SetNewMsg_byLabel) == 0x000050, "Wrong size on WB_MultiLineRichText_C_SetNewMsg_byLabel");
static_assert(offsetof(WB_MultiLineRichText_C_SetNewMsg_byLabel, MsgAsset) == 0x000000, "Member 'WB_MultiLineRichText_C_SetNewMsg_byLabel::MsgAsset' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetNewMsg_byLabel, MsgLabel) == 0x000008, "Member 'WB_MultiLineRichText_C_SetNewMsg_byLabel::MsgLabel' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetNewMsg_byLabel, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WB_MultiLineRichText_C_SetNewMsg_byLabel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetNewMsg_byLabel, CallFunc_GetTextByLabel_ReturnValue) == 0x000018, "Member 'WB_MultiLineRichText_C_SetNewMsg_byLabel::CallFunc_GetTextByLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetNewMsg_byLabel, CallFunc_Conv_TextToString_ReturnValue) == 0x000030, "Member 'WB_MultiLineRichText_C_SetNewMsg_byLabel::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetNewMsg_byLabel, CallFunc_CreateLineStringArray_ReturnValue) == 0x000040, "Member 'WB_MultiLineRichText_C_SetNewMsg_byLabel::CallFunc_CreateLineStringArray_ReturnValue' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.SetQuestSummaryMsg_byID
// 0x0060 (0x0060 - 0x0000)
struct WB_MultiLineRichText_C_SetQuestSummaryMsg_byID final
{
public:
	const class UScriptMessageAsset*              MsgAsset;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MsgID;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByID_self_CastInput;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0028(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_CreateLineStringArray_ReturnValue;        // 0x0050(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byID) == 0x000008, "Wrong alignment on WB_MultiLineRichText_C_SetQuestSummaryMsg_byID");
static_assert(sizeof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byID) == 0x000060, "Wrong size on WB_MultiLineRichText_C_SetQuestSummaryMsg_byID");
static_assert(offsetof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byID, MsgAsset) == 0x000000, "Member 'WB_MultiLineRichText_C_SetQuestSummaryMsg_byID::MsgAsset' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byID, MsgID) == 0x000008, "Member 'WB_MultiLineRichText_C_SetQuestSummaryMsg_byID::MsgID' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byID, CallFunc_SetScriptMessageByID_self_CastInput) == 0x000010, "Member 'WB_MultiLineRichText_C_SetQuestSummaryMsg_byID::CallFunc_SetScriptMessageByID_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byID, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WB_MultiLineRichText_C_SetQuestSummaryMsg_byID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byID, CallFunc_GetText_ReturnValue) == 0x000028, "Member 'WB_MultiLineRichText_C_SetQuestSummaryMsg_byID::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byID, CallFunc_Conv_TextToString_ReturnValue) == 0x000040, "Member 'WB_MultiLineRichText_C_SetQuestSummaryMsg_byID::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byID, CallFunc_CreateLineStringArray_ReturnValue) == 0x000050, "Member 'WB_MultiLineRichText_C_SetQuestSummaryMsg_byID::CallFunc_CreateLineStringArray_ReturnValue' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.SetQuestSummaryMsg_byLabel
// 0x0060 (0x0060 - 0x0000)
struct WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel final
{
public:
	const class UScriptMessageAsset*              MsgAsset;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MsgLabel;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0010(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_CreateLineStringArray_ReturnValue;        // 0x0040(0x0010)(ConstParm, ReferenceParm)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByLabel_self_CastInput;   // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel) == 0x000008, "Wrong alignment on WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel");
static_assert(sizeof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel) == 0x000060, "Wrong size on WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel");
static_assert(offsetof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel, MsgAsset) == 0x000000, "Member 'WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel::MsgAsset' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel, MsgLabel) == 0x000008, "Member 'WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel::MsgLabel' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel, CallFunc_GetText_ReturnValue) == 0x000010, "Member 'WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel, CallFunc_CreateLineStringArray_ReturnValue) == 0x000040, "Member 'WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel::CallFunc_CreateLineStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel, CallFunc_SetScriptMessageByLabel_self_CastInput) == 0x000050, "Member 'WB_MultiLineRichText_C_SetQuestSummaryMsg_byLabel::CallFunc_SetScriptMessageByLabel_self_CastInput' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.SetDispMsgPos
// 0x0080 (0x0080 - 0x0000)
struct WB_MultiLineRichText_C_SetDispMsgPos final
{
public:
	int32                                         MsgTopLine;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Loop_idx;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 Loop_RichText;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxScrollOffset_MaxOffset;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_BuildText_self_CastInput;                 // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMessageRichTextWidget*                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MultiLineRichText_C_SetDispMsgPos) == 0x000008, "Wrong alignment on WB_MultiLineRichText_C_SetDispMsgPos");
static_assert(sizeof(WB_MultiLineRichText_C_SetDispMsgPos) == 0x000080, "Wrong size on WB_MultiLineRichText_C_SetDispMsgPos");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, MsgTopLine) == 0x000000, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::MsgTopLine' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, Loop_idx) == 0x000004, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::Loop_idx' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, Loop_RichText) == 0x000008, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::Loop_RichText' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, CallFunc_GetMaxScrollOffset_MaxOffset) == 0x000018, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::CallFunc_GetMaxScrollOffset_MaxOffset' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, CallFunc_Clamp_ReturnValue) == 0x000020, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, CallFunc_Array_Find_ReturnValue) == 0x000024, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000028, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, CallFunc_BuildText_self_CastInput) == 0x000030, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::CallFunc_BuildText_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, CallFunc_Array_Get_Item) == 0x000040, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, CallFunc_Array_LastIndex_ReturnValue) == 0x000048, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, CallFunc_BooleanOR_ReturnValue) == 0x000071, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetDispMsgPos, CallFunc_Add_IntInt_ReturnValue_2) == 0x00007C, "Member 'WB_MultiLineRichText_C_SetDispMsgPos::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.AddMsgLine
// 0x0028 (0x0028 - 0x0000)
struct WB_MultiLineRichText_C_AddMsgLine final
{
public:
	class FString                                 NewLineMsg;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_CreateLineStringArray_ReturnValue;        // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MultiLineRichText_C_AddMsgLine) == 0x000008, "Wrong alignment on WB_MultiLineRichText_C_AddMsgLine");
static_assert(sizeof(WB_MultiLineRichText_C_AddMsgLine) == 0x000028, "Wrong size on WB_MultiLineRichText_C_AddMsgLine");
static_assert(offsetof(WB_MultiLineRichText_C_AddMsgLine, NewLineMsg) == 0x000000, "Member 'WB_MultiLineRichText_C_AddMsgLine::NewLineMsg' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_AddMsgLine, CallFunc_CreateLineStringArray_ReturnValue) == 0x000010, "Member 'WB_MultiLineRichText_C_AddMsgLine::CallFunc_CreateLineStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_AddMsgLine, CallFunc_Len_ReturnValue) == 0x000020, "Member 'WB_MultiLineRichText_C_AddMsgLine::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_AddMsgLine, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'WB_MultiLineRichText_C_AddMsgLine::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.ClearMsg
// 0x0040 (0x0040 - 0x0000)
struct WB_MultiLineRichText_C_ClearMsg final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDecorator_ReturnValue;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_BuildText_self_CastInput;                 // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByID_self_CastInput;      // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MultiLineRichText_C_ClearMsg) == 0x000008, "Wrong alignment on WB_MultiLineRichText_C_ClearMsg");
static_assert(sizeof(WB_MultiLineRichText_C_ClearMsg) == 0x000040, "Wrong size on WB_MultiLineRichText_C_ClearMsg");
static_assert(offsetof(WB_MultiLineRichText_C_ClearMsg, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_MultiLineRichText_C_ClearMsg::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_ClearMsg, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_MultiLineRichText_C_ClearMsg::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_ClearMsg, CallFunc_Array_Get_Item) == 0x000008, "Member 'WB_MultiLineRichText_C_ClearMsg::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_ClearMsg, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WB_MultiLineRichText_C_ClearMsg::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_ClearMsg, CallFunc_SetDecorator_ReturnValue) == 0x000014, "Member 'WB_MultiLineRichText_C_ClearMsg::CallFunc_SetDecorator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_ClearMsg, CallFunc_Less_IntInt_ReturnValue) == 0x000015, "Member 'WB_MultiLineRichText_C_ClearMsg::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_ClearMsg, CallFunc_BuildText_self_CastInput) == 0x000018, "Member 'WB_MultiLineRichText_C_ClearMsg::CallFunc_BuildText_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_ClearMsg, CallFunc_SetScriptMessageByID_self_CastInput) == 0x000028, "Member 'WB_MultiLineRichText_C_ClearMsg::CallFunc_SetScriptMessageByID_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_ClearMsg, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WB_MultiLineRichText_C_ClearMsg::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_ClearMsg, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'WB_MultiLineRichText_C_ClearMsg::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.CreateLineString
// 0x0090 (0x0090 - 0x0000)
struct WB_MultiLineRichText_C_CreateLineString final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         ReturnString;                                      // 0x0010(0x0010)(Parm, OutParm)
	TArray<class FString>                         L_ReturnStr;                                       // 0x0020(0x0010)(Edit, BlueprintVisible)
	class FString                                 L_TmpText;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MultiLineRichText_C_CreateLineString) == 0x000008, "Wrong alignment on WB_MultiLineRichText_C_CreateLineString");
static_assert(sizeof(WB_MultiLineRichText_C_CreateLineString) == 0x000090, "Wrong size on WB_MultiLineRichText_C_CreateLineString");
static_assert(offsetof(WB_MultiLineRichText_C_CreateLineString, InString) == 0x000000, "Member 'WB_MultiLineRichText_C_CreateLineString::InString' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_CreateLineString, ReturnString) == 0x000010, "Member 'WB_MultiLineRichText_C_CreateLineString::ReturnString' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_CreateLineString, L_ReturnStr) == 0x000020, "Member 'WB_MultiLineRichText_C_CreateLineString::L_ReturnStr' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_CreateLineString, L_TmpText) == 0x000030, "Member 'WB_MultiLineRichText_C_CreateLineString::L_TmpText' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_CreateLineString, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000040, "Member 'WB_MultiLineRichText_C_CreateLineString::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_CreateLineString, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'WB_MultiLineRichText_C_CreateLineString::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_CreateLineString, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000054, "Member 'WB_MultiLineRichText_C_CreateLineString::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_CreateLineString, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'WB_MultiLineRichText_C_CreateLineString::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_CreateLineString, CallFunc_Array_Add_ReturnValue_1) == 0x00005C, "Member 'WB_MultiLineRichText_C_CreateLineString::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_CreateLineString, Temp_int_Array_Index_Variable) == 0x000060, "Member 'WB_MultiLineRichText_C_CreateLineString::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_CreateLineString, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'WB_MultiLineRichText_C_CreateLineString::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_CreateLineString, CallFunc_Array_Get_Item) == 0x000068, "Member 'WB_MultiLineRichText_C_CreateLineString::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_CreateLineString, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'WB_MultiLineRichText_C_CreateLineString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_CreateLineString, CallFunc_Contains_ReturnValue) == 0x000088, "Member 'WB_MultiLineRichText_C_CreateLineString::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_CreateLineString, CallFunc_Less_IntInt_ReturnValue) == 0x000089, "Member 'WB_MultiLineRichText_C_CreateLineString::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_CreateLineString, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'WB_MultiLineRichText_C_CreateLineString::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.scrollUp
// 0x0004 (0x0004 - 0x0000)
struct WB_MultiLineRichText_C_ScrollUp final
{
public:
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MultiLineRichText_C_ScrollUp) == 0x000004, "Wrong alignment on WB_MultiLineRichText_C_ScrollUp");
static_assert(sizeof(WB_MultiLineRichText_C_ScrollUp) == 0x000004, "Wrong size on WB_MultiLineRichText_C_ScrollUp");
static_assert(offsetof(WB_MultiLineRichText_C_ScrollUp, CallFunc_Subtract_IntInt_ReturnValue) == 0x000000, "Member 'WB_MultiLineRichText_C_ScrollUp::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.scrollDown
// 0x0004 (0x0004 - 0x0000)
struct WB_MultiLineRichText_C_ScrollDown final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MultiLineRichText_C_ScrollDown) == 0x000004, "Wrong alignment on WB_MultiLineRichText_C_ScrollDown");
static_assert(sizeof(WB_MultiLineRichText_C_ScrollDown) == 0x000004, "Wrong size on WB_MultiLineRichText_C_ScrollDown");
static_assert(offsetof(WB_MultiLineRichText_C_ScrollDown, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'WB_MultiLineRichText_C_ScrollDown::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.PageUp
// 0x0004 (0x0004 - 0x0000)
struct WB_MultiLineRichText_C_PageUp final
{
public:
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MultiLineRichText_C_PageUp) == 0x000004, "Wrong alignment on WB_MultiLineRichText_C_PageUp");
static_assert(sizeof(WB_MultiLineRichText_C_PageUp) == 0x000004, "Wrong size on WB_MultiLineRichText_C_PageUp");
static_assert(offsetof(WB_MultiLineRichText_C_PageUp, CallFunc_Subtract_IntInt_ReturnValue) == 0x000000, "Member 'WB_MultiLineRichText_C_PageUp::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.PageDown
// 0x0004 (0x0004 - 0x0000)
struct WB_MultiLineRichText_C_PageDown final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MultiLineRichText_C_PageDown) == 0x000004, "Wrong alignment on WB_MultiLineRichText_C_PageDown");
static_assert(sizeof(WB_MultiLineRichText_C_PageDown) == 0x000004, "Wrong size on WB_MultiLineRichText_C_PageDown");
static_assert(offsetof(WB_MultiLineRichText_C_PageDown, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'WB_MultiLineRichText_C_PageDown::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.MoveTop
// 0x0010 (0x0010 - 0x0000)
struct WB_MultiLineRichText_C_MoveTop final
{
public:
	int32                                         Loop_idx;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMessageRichTextWidget*                 Loop_RichText;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MultiLineRichText_C_MoveTop) == 0x000008, "Wrong alignment on WB_MultiLineRichText_C_MoveTop");
static_assert(sizeof(WB_MultiLineRichText_C_MoveTop) == 0x000010, "Wrong size on WB_MultiLineRichText_C_MoveTop");
static_assert(offsetof(WB_MultiLineRichText_C_MoveTop, Loop_idx) == 0x000000, "Member 'WB_MultiLineRichText_C_MoveTop::Loop_idx' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_MoveTop, Loop_RichText) == 0x000008, "Member 'WB_MultiLineRichText_C_MoveTop::Loop_RichText' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.MoveBottom
// 0x0018 (0x0018 - 0x0000)
struct WB_MultiLineRichText_C_MoveBottom final
{
public:
	int32                                         Loop_idx;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMessageRichTextWidget*                 Loop_RichText;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxScrollOffset_MaxOffset;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MultiLineRichText_C_MoveBottom) == 0x000008, "Wrong alignment on WB_MultiLineRichText_C_MoveBottom");
static_assert(sizeof(WB_MultiLineRichText_C_MoveBottom) == 0x000018, "Wrong size on WB_MultiLineRichText_C_MoveBottom");
static_assert(offsetof(WB_MultiLineRichText_C_MoveBottom, Loop_idx) == 0x000000, "Member 'WB_MultiLineRichText_C_MoveBottom::Loop_idx' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_MoveBottom, Loop_RichText) == 0x000008, "Member 'WB_MultiLineRichText_C_MoveBottom::Loop_RichText' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_MoveBottom, CallFunc_GetMaxScrollOffset_MaxOffset) == 0x000010, "Member 'WB_MultiLineRichText_C_MoveBottom::CallFunc_GetMaxScrollOffset_MaxOffset' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.IsRequiredScroll
// 0x000C (0x000C - 0x0000)
struct WB_MultiLineRichText_C_IsRequiredScroll final
{
public:
	bool                                          RequiredScroll;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MultiLineRichText_C_IsRequiredScroll) == 0x000004, "Wrong alignment on WB_MultiLineRichText_C_IsRequiredScroll");
static_assert(sizeof(WB_MultiLineRichText_C_IsRequiredScroll) == 0x00000C, "Wrong size on WB_MultiLineRichText_C_IsRequiredScroll");
static_assert(offsetof(WB_MultiLineRichText_C_IsRequiredScroll, RequiredScroll) == 0x000000, "Member 'WB_MultiLineRichText_C_IsRequiredScroll::RequiredScroll' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_IsRequiredScroll, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WB_MultiLineRichText_C_IsRequiredScroll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_IsRequiredScroll, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000008, "Member 'WB_MultiLineRichText_C_IsRequiredScroll::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_IsRequiredScroll, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'WB_MultiLineRichText_C_IsRequiredScroll::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.GetScrollPosRate
// 0x0028 (0x0028 - 0x0000)
struct WB_MultiLineRichText_C_GetScrollPosRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MultiLineRichText_C_GetScrollPosRate) == 0x000004, "Wrong alignment on WB_MultiLineRichText_C_GetScrollPosRate");
static_assert(sizeof(WB_MultiLineRichText_C_GetScrollPosRate) == 0x000028, "Wrong size on WB_MultiLineRichText_C_GetScrollPosRate");
static_assert(offsetof(WB_MultiLineRichText_C_GetScrollPosRate, ReturnValue) == 0x000000, "Member 'WB_MultiLineRichText_C_GetScrollPosRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_GetScrollPosRate, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WB_MultiLineRichText_C_GetScrollPosRate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_GetScrollPosRate, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'WB_MultiLineRichText_C_GetScrollPosRate::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_GetScrollPosRate, CallFunc_Array_Length_ReturnValue_1) == 0x00000C, "Member 'WB_MultiLineRichText_C_GetScrollPosRate::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_GetScrollPosRate, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'WB_MultiLineRichText_C_GetScrollPosRate::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_GetScrollPosRate, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'WB_MultiLineRichText_C_GetScrollPosRate::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_GetScrollPosRate, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000015, "Member 'WB_MultiLineRichText_C_GetScrollPosRate::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_GetScrollPosRate, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000018, "Member 'WB_MultiLineRichText_C_GetScrollPosRate::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_GetScrollPosRate, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00001C, "Member 'WB_MultiLineRichText_C_GetScrollPosRate::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_GetScrollPosRate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'WB_MultiLineRichText_C_GetScrollPosRate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_GetScrollPosRate, CallFunc_FClamp_ReturnValue) == 0x000024, "Member 'WB_MultiLineRichText_C_GetScrollPosRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.ApplyGrayOutLine
// 0x0010 (0x0010 - 0x0000)
struct WB_MultiLineRichText_C_ApplyGrayOutLine final
{
public:
	int32                                         LineIdx;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGrayOut;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMessageRichTextWidget*                 CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MultiLineRichText_C_ApplyGrayOutLine) == 0x000008, "Wrong alignment on WB_MultiLineRichText_C_ApplyGrayOutLine");
static_assert(sizeof(WB_MultiLineRichText_C_ApplyGrayOutLine) == 0x000010, "Wrong size on WB_MultiLineRichText_C_ApplyGrayOutLine");
static_assert(offsetof(WB_MultiLineRichText_C_ApplyGrayOutLine, LineIdx) == 0x000000, "Member 'WB_MultiLineRichText_C_ApplyGrayOutLine::LineIdx' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_ApplyGrayOutLine, IsGrayOut) == 0x000004, "Member 'WB_MultiLineRichText_C_ApplyGrayOutLine::IsGrayOut' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_ApplyGrayOutLine, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000005, "Member 'WB_MultiLineRichText_C_ApplyGrayOutLine::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_ApplyGrayOutLine, CallFunc_Array_Get_Item) == 0x000008, "Member 'WB_MultiLineRichText_C_ApplyGrayOutLine::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.SetGrayOutLine
// 0x0030 (0x0030 - 0x0000)
struct WB_MultiLineRichText_C_SetGrayOutLine final
{
public:
	TArray<int32>                                 GrayOutLine;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MultiLineRichText_C_SetGrayOutLine) == 0x000008, "Wrong alignment on WB_MultiLineRichText_C_SetGrayOutLine");
static_assert(sizeof(WB_MultiLineRichText_C_SetGrayOutLine) == 0x000030, "Wrong size on WB_MultiLineRichText_C_SetGrayOutLine");
static_assert(offsetof(WB_MultiLineRichText_C_SetGrayOutLine, GrayOutLine) == 0x000000, "Member 'WB_MultiLineRichText_C_SetGrayOutLine::GrayOutLine' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetGrayOutLine, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WB_MultiLineRichText_C_SetGrayOutLine::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetGrayOutLine, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'WB_MultiLineRichText_C_SetGrayOutLine::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetGrayOutLine, CallFunc_Array_Get_Item) == 0x000018, "Member 'WB_MultiLineRichText_C_SetGrayOutLine::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetGrayOutLine, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WB_MultiLineRichText_C_SetGrayOutLine::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetGrayOutLine, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WB_MultiLineRichText_C_SetGrayOutLine::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetGrayOutLine, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WB_MultiLineRichText_C_SetGrayOutLine::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetGrayOutLine, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'WB_MultiLineRichText_C_SetGrayOutLine::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetGrayOutLine, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00002C, "Member 'WB_MultiLineRichText_C_SetGrayOutLine::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.SetTextJustification
// 0x0028 (0x0028 - 0x0000)
struct WB_MultiLineRichText_C_SetTextJustification final
{
public:
	ETextJustify                                  InputPin;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMessageRichTextWidget*                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MultiLineRichText_C_SetTextJustification) == 0x000008, "Wrong alignment on WB_MultiLineRichText_C_SetTextJustification");
static_assert(sizeof(WB_MultiLineRichText_C_SetTextJustification) == 0x000028, "Wrong size on WB_MultiLineRichText_C_SetTextJustification");
static_assert(offsetof(WB_MultiLineRichText_C_SetTextJustification, InputPin) == 0x000000, "Member 'WB_MultiLineRichText_C_SetTextJustification::InputPin' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetTextJustification, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WB_MultiLineRichText_C_SetTextJustification::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetTextJustification, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WB_MultiLineRichText_C_SetTextJustification::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetTextJustification, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WB_MultiLineRichText_C_SetTextJustification::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetTextJustification, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WB_MultiLineRichText_C_SetTextJustification::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetTextJustification, CallFunc_Array_Get_Item) == 0x000018, "Member 'WB_MultiLineRichText_C_SetTextJustification::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_SetTextJustification, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WB_MultiLineRichText_C_SetTextJustification::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.GetMaxScrollOffset
// 0x0010 (0x0010 - 0x0000)
struct WB_MultiLineRichText_C_GetMaxScrollOffset final
{
public:
	int32                                         MaxOffset;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MultiLineRichText_C_GetMaxScrollOffset) == 0x000004, "Wrong alignment on WB_MultiLineRichText_C_GetMaxScrollOffset");
static_assert(sizeof(WB_MultiLineRichText_C_GetMaxScrollOffset) == 0x000010, "Wrong size on WB_MultiLineRichText_C_GetMaxScrollOffset");
static_assert(offsetof(WB_MultiLineRichText_C_GetMaxScrollOffset, MaxOffset) == 0x000000, "Member 'WB_MultiLineRichText_C_GetMaxScrollOffset::MaxOffset' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_GetMaxScrollOffset, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WB_MultiLineRichText_C_GetMaxScrollOffset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_GetMaxScrollOffset, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'WB_MultiLineRichText_C_GetMaxScrollOffset::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MultiLineRichText_C_GetMaxScrollOffset, CallFunc_Max_ReturnValue) == 0x00000C, "Member 'WB_MultiLineRichText_C_GetMaxScrollOffset::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function WB_MultiLineRichText.WB_MultiLineRichText_C.GetScrollOffset
// 0x0004 (0x0004 - 0x0000)
struct WB_MultiLineRichText_C_GetScrollOffset final
{
public:
	int32                                         ScrollOffset;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MultiLineRichText_C_GetScrollOffset) == 0x000004, "Wrong alignment on WB_MultiLineRichText_C_GetScrollOffset");
static_assert(sizeof(WB_MultiLineRichText_C_GetScrollOffset) == 0x000004, "Wrong size on WB_MultiLineRichText_C_GetScrollOffset");
static_assert(offsetof(WB_MultiLineRichText_C_GetScrollOffset, ScrollOffset) == 0x000000, "Member 'WB_MultiLineRichText_C_GetScrollOffset::ScrollOffset' has a wrong offset!");

}

