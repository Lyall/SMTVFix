#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CoasterRelayPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CoasterRelayPoint.BP_CoasterRelayPoint_C.EvtDis_CallVisible__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_CoasterRelayPoint_C_EvtDis_CallVisible__DelegateSignature final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterRelayPoint_C_EvtDis_CallVisible__DelegateSignature) == 0x000001, "Wrong alignment on BP_CoasterRelayPoint_C_EvtDis_CallVisible__DelegateSignature");
static_assert(sizeof(BP_CoasterRelayPoint_C_EvtDis_CallVisible__DelegateSignature) == 0x000001, "Wrong size on BP_CoasterRelayPoint_C_EvtDis_CallVisible__DelegateSignature");
static_assert(offsetof(BP_CoasterRelayPoint_C_EvtDis_CallVisible__DelegateSignature, Visible) == 0x000000, "Member 'BP_CoasterRelayPoint_C_EvtDis_CallVisible__DelegateSignature::Visible' has a wrong offset!");

// Function BP_CoasterRelayPoint.BP_CoasterRelayPoint_C.ExecuteUbergraph_BP_CoasterRelayPoint
// 0x00E8 (0x00E8 - 0x0000)
struct BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E61[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E62[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E63[0x2];                                     // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint) == 0x000008, "Wrong alignment on BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint");
static_assert(sizeof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint) == 0x0000E8, "Wrong size on BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, EntryPoint) == 0x000000, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000008, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000010, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000018, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000020, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000C0, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, K2Node_ComponentBoundEvent_OtherActor) == 0x0000C8, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, K2Node_ComponentBoundEvent_OtherComp) == 0x0000D0, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000D8, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, Temp_int_Loop_Counter_Variable) == 0x0000DC, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, CallFunc_BooleanOR_ReturnValue) == 0x0000E0, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, CallFunc_Less_IntInt_ReturnValue) == 0x0000E1, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint, CallFunc_Add_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_CoasterRelayPoint_C_ExecuteUbergraph_BP_CoasterRelayPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CoasterRelayPoint.BP_CoasterRelayPoint_C.BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_CoasterRelayPoint.BP_CoasterRelayPoint_C.BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E64[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_CoasterRelayPoint_C_BndEvt__BP_CoasterRelayPoint_VisibleBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_CoasterRelayPoint.BP_CoasterRelayPoint_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct BP_CoasterRelayPoint_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IS_EDITOR_BUILD_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E65[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterRelayPoint_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_CoasterRelayPoint_C_UserConstructionScript");
static_assert(sizeof(BP_CoasterRelayPoint_C_UserConstructionScript) == 0x000020, "Wrong size on BP_CoasterRelayPoint_C_UserConstructionScript");
static_assert(offsetof(BP_CoasterRelayPoint_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_CoasterRelayPoint_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_CoasterRelayPoint_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_CoasterRelayPoint_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_UserConstructionScript, CallFunc_IS_EDITOR_BUILD_ReturnValue) == 0x00000C, "Member 'BP_CoasterRelayPoint_C_UserConstructionScript::CallFunc_IS_EDITOR_BUILD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_CoasterRelayPoint_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_CoasterRelayPoint_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_CoasterRelayPoint_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CoasterRelayPoint.BP_CoasterRelayPoint_C.SetVisible
// 0x0005 (0x0005 - 0x0000)
struct BP_CoasterRelayPoint_C_SetVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterRelayPoint_C_SetVisible) == 0x000001, "Wrong alignment on BP_CoasterRelayPoint_C_SetVisible");
static_assert(sizeof(BP_CoasterRelayPoint_C_SetVisible) == 0x000005, "Wrong size on BP_CoasterRelayPoint_C_SetVisible");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetVisible, Visible) == 0x000000, "Member 'BP_CoasterRelayPoint_C_SetVisible::Visible' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetVisible, Temp_bool_Variable) == 0x000001, "Member 'BP_CoasterRelayPoint_C_SetVisible::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetVisible, Temp_byte_Variable) == 0x000002, "Member 'BP_CoasterRelayPoint_C_SetVisible::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetVisible, Temp_byte_Variable_1) == 0x000003, "Member 'BP_CoasterRelayPoint_C_SetVisible::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetVisible, K2Node_Select_Default) == 0x000004, "Member 'BP_CoasterRelayPoint_C_SetVisible::K2Node_Select_Default' has a wrong offset!");

// Function BP_CoasterRelayPoint.BP_CoasterRelayPoint_C.SetAroundCollision
// 0x0058 (0x0058 - 0x0000)
struct BP_CoasterRelayPoint_C_SetAroundCollision final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E66[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                L_Comps;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E67[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E68[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E69[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          K2Node_DynamicCast_AsBox_Collision;                // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E6A[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_CoasterRelayPoint_C_SetAroundCollision) == 0x000008, "Wrong alignment on BP_CoasterRelayPoint_C_SetAroundCollision");
static_assert(sizeof(BP_CoasterRelayPoint_C_SetAroundCollision) == 0x000058, "Wrong size on BP_CoasterRelayPoint_C_SetAroundCollision");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetAroundCollision, Enable) == 0x000000, "Member 'BP_CoasterRelayPoint_C_SetAroundCollision::Enable' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetAroundCollision, L_Comps) == 0x000008, "Member 'BP_CoasterRelayPoint_C_SetAroundCollision::L_Comps' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetAroundCollision, Temp_bool_Variable) == 0x000018, "Member 'BP_CoasterRelayPoint_C_SetAroundCollision::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetAroundCollision, Temp_byte_Variable) == 0x000019, "Member 'BP_CoasterRelayPoint_C_SetAroundCollision::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetAroundCollision, Temp_byte_Variable_1) == 0x00001A, "Member 'BP_CoasterRelayPoint_C_SetAroundCollision::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetAroundCollision, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_CoasterRelayPoint_C_SetAroundCollision::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetAroundCollision, K2Node_Select_Default) == 0x000020, "Member 'BP_CoasterRelayPoint_C_SetAroundCollision::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetAroundCollision, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_CoasterRelayPoint_C_SetAroundCollision::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetAroundCollision, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_CoasterRelayPoint_C_SetAroundCollision::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetAroundCollision, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_CoasterRelayPoint_C_SetAroundCollision::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetAroundCollision, K2Node_DynamicCast_AsBox_Collision) == 0x000038, "Member 'BP_CoasterRelayPoint_C_SetAroundCollision::K2Node_DynamicCast_AsBox_Collision' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetAroundCollision, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_CoasterRelayPoint_C_SetAroundCollision::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetAroundCollision, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BP_CoasterRelayPoint_C_SetAroundCollision::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetAroundCollision, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_CoasterRelayPoint_C_SetAroundCollision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetAroundCollision, CallFunc_GetChildrenComponents_Children) == 0x000048, "Member 'BP_CoasterRelayPoint_C_SetAroundCollision::CallFunc_GetChildrenComponents_Children' has a wrong offset!");

// Function BP_CoasterRelayPoint.BP_CoasterRelayPoint_C.MakeDMI
// 0x0030 (0x0030 - 0x0000)
struct BP_CoasterRelayPoint_C_MakeDMI final
{
public:
	int32                                         L_LoopEnd;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E6B[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E6C[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterRelayPoint_C_MakeDMI) == 0x000008, "Wrong alignment on BP_CoasterRelayPoint_C_MakeDMI");
static_assert(sizeof(BP_CoasterRelayPoint_C_MakeDMI) == 0x000030, "Wrong size on BP_CoasterRelayPoint_C_MakeDMI");
static_assert(offsetof(BP_CoasterRelayPoint_C_MakeDMI, L_LoopEnd) == 0x000000, "Member 'BP_CoasterRelayPoint_C_MakeDMI::L_LoopEnd' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_MakeDMI, Temp_int_Variable) == 0x000004, "Member 'BP_CoasterRelayPoint_C_MakeDMI::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_MakeDMI, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_CoasterRelayPoint_C_MakeDMI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_MakeDMI, CallFunc_GetMaterial_ReturnValue) == 0x000010, "Member 'BP_CoasterRelayPoint_C_MakeDMI::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_MakeDMI, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'BP_CoasterRelayPoint_C_MakeDMI::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_MakeDMI, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_CoasterRelayPoint_C_MakeDMI::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_MakeDMI, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'BP_CoasterRelayPoint_C_MakeDMI::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_MakeDMI, CallFunc_GetNumMaterials_ReturnValue) == 0x000028, "Member 'BP_CoasterRelayPoint_C_MakeDMI::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_MakeDMI, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'BP_CoasterRelayPoint_C_MakeDMI::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CoasterRelayPoint.BP_CoasterRelayPoint_C.SetVisible_FromRiding
// 0x0003 (0x0003 - 0x0000)
struct BP_CoasterRelayPoint_C_SetVisible_FromRiding final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OutVisible;                                        // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterRelayPoint_C_SetVisible_FromRiding) == 0x000001, "Wrong alignment on BP_CoasterRelayPoint_C_SetVisible_FromRiding");
static_assert(sizeof(BP_CoasterRelayPoint_C_SetVisible_FromRiding) == 0x000003, "Wrong size on BP_CoasterRelayPoint_C_SetVisible_FromRiding");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetVisible_FromRiding, Visible) == 0x000000, "Member 'BP_CoasterRelayPoint_C_SetVisible_FromRiding::Visible' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetVisible_FromRiding, OutVisible) == 0x000001, "Member 'BP_CoasterRelayPoint_C_SetVisible_FromRiding::OutVisible' has a wrong offset!");
static_assert(offsetof(BP_CoasterRelayPoint_C_SetVisible_FromRiding, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'BP_CoasterRelayPoint_C_SetVisible_FromRiding::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

