#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapWarpEffect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MapWarpEffect.BP_MapWarpEffect_C
// 0x0020 (0x0240 - 0x0220)
class ABP_MapWarpEffect_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Warp_PostAlpha_A0A1395743AAAAD6822CEF8FD68587D3; // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_Warp__Direction_A0A1395743AAAAD6822CEF8FD68587D3; // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FFC[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_Warp;                                     // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MapWarpEffect(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Timeline_Warp__EffectSpawn__EventFunc();
	void Timeline_Warp__FadeStart__EventFunc();
	void Timeline_Warp__PlaySE__EventFunc();
	void Timeline_Warp__UpdateFunc();
	void Timeline_Warp__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MapWarpEffect_C">();
	}
	static class ABP_MapWarpEffect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MapWarpEffect_C>();
	}
};
static_assert(alignof(ABP_MapWarpEffect_C) == 0x000008, "Wrong alignment on ABP_MapWarpEffect_C");
static_assert(sizeof(ABP_MapWarpEffect_C) == 0x000240, "Wrong size on ABP_MapWarpEffect_C");
static_assert(offsetof(ABP_MapWarpEffect_C, UberGraphFrame) == 0x000220, "Member 'ABP_MapWarpEffect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MapWarpEffect_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_MapWarpEffect_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MapWarpEffect_C, Timeline_Warp_PostAlpha_A0A1395743AAAAD6822CEF8FD68587D3) == 0x000230, "Member 'ABP_MapWarpEffect_C::Timeline_Warp_PostAlpha_A0A1395743AAAAD6822CEF8FD68587D3' has a wrong offset!");
static_assert(offsetof(ABP_MapWarpEffect_C, Timeline_Warp__Direction_A0A1395743AAAAD6822CEF8FD68587D3) == 0x000234, "Member 'ABP_MapWarpEffect_C::Timeline_Warp__Direction_A0A1395743AAAAD6822CEF8FD68587D3' has a wrong offset!");
static_assert(offsetof(ABP_MapWarpEffect_C, Timeline_Warp) == 0x000238, "Member 'ABP_MapWarpEffect_C::Timeline_Warp' has a wrong offset!");

}

