#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EncountAreaBase

#include "Basic.hpp"

#include "MapSymbolHosei_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SplineCompPointInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "SpawnSymbolInfo_structs.hpp"
#include "MapSymbolParam_structs.hpp"
#include "E_Symbol_Discovery_structs.hpp"
#include "Project_structs.hpp"
#include "E_MapSymbolState_structs.hpp"
#include "SymbolActRecord_structs.hpp"
#include "EncountArea_Default_structs.hpp"
#include "SymbolMoverData_structs.hpp"
#include "SymbolActPattern_structs.hpp"


namespace SDK::Params
{

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.EvtDis_SpawnDevilSuccess__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_EvtDis_SpawnDevilSuccess__DelegateSignature final
{
public:
	class ACustomPawn*                            Devil;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_EvtDis_SpawnDevilSuccess__DelegateSignature) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_EvtDis_SpawnDevilSuccess__DelegateSignature");
static_assert(sizeof(BP_EncountAreaBase_C_EvtDis_SpawnDevilSuccess__DelegateSignature) == 0x000008, "Wrong size on BP_EncountAreaBase_C_EvtDis_SpawnDevilSuccess__DelegateSignature");
static_assert(offsetof(BP_EncountAreaBase_C_EvtDis_SpawnDevilSuccess__DelegateSignature, Devil) == 0x000000, "Member 'BP_EncountAreaBase_C_EvtDis_SpawnDevilSuccess__DelegateSignature::Devil' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.EvtDis_ImmediateryBeforeRespawn__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_EncountAreaBase_C_EvtDis_ImmediateryBeforeRespawn__DelegateSignature final
{
public:
	int32                                         Param_BlankIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_EvtDis_ImmediateryBeforeRespawn__DelegateSignature) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_EvtDis_ImmediateryBeforeRespawn__DelegateSignature");
static_assert(sizeof(BP_EncountAreaBase_C_EvtDis_ImmediateryBeforeRespawn__DelegateSignature) == 0x000004, "Wrong size on BP_EncountAreaBase_C_EvtDis_ImmediateryBeforeRespawn__DelegateSignature");
static_assert(offsetof(BP_EncountAreaBase_C_EvtDis_ImmediateryBeforeRespawn__DelegateSignature, Param_BlankIndex) == 0x000000, "Member 'BP_EncountAreaBase_C_EvtDis_ImmediateryBeforeRespawn__DelegateSignature::Param_BlankIndex' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.ExecuteUbergraph_BP_EncountAreaBase
// 0x1FE0 (0x1FE0 - 0x0000)
struct BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98AF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPackEncount                           CallFunc_GetEncountPack_Pack;                      // 0x0008(0x0058)()
	int32                                         CallFunc_GetEncountPack_PackId;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckStartEndFlag_OK;                     // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98B0[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98B1[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable;                                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98B2[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable_1;                              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98B3[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98B4[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98B5[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_3;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98B6[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98B7[0x2];                                     // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_CalcSpawnPointList_SpawnPointList;        // 0x00E0(0x0010)(ReferenceParm)
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98B8[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBlankSpawnIndex_Index;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsManualPos;                    // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98B9[0xB];                                     // 0x0135(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_ManualPos;                      // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_GetSpawnSplinePoint_SplinePoints;         // 0x0170(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98BA[0xB];                                     // 0x0185(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item_1;                         // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98BB[0x8];                                     // 0x01E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TraceSpawnPoint_OutSpawnPoint;            // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TraceSpawnPoint_Success;                  // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98BC[0x3];                                     // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98BD[0x3];                                     // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBlankSpawnIndex_Index_1;               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98BE[0x3];                                     // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98BF[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_10;                  // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98C0[0x4];                                     // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckEncountOn_EncountOn;              // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98C1[0x5];                                     // 0x028B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue; // 0x0290(0x00D0)()
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98C2[0x3];                                     // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98C3[0x3];                                     // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_1;                    // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_1; // 0x0378(0x00D0)()
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_1;             // 0x0448(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckEncountOn_EncountOn_1;            // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x045A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x045B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x045D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98C4[0x2];                                     // 0x045E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn_2;                    // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_2;             // 0x0478(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckEncountOn_EncountOn_2;            // 0x048A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98C5[0x5];                                     // 0x048B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_2; // 0x0490(0x00D0)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0561(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98C6[0x2];                                     // 0x0562(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_11;                  // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x0569(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98C7[0x2];                                     // 0x056A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_12;                  // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_10;                 // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSymbolID_SymbolId;                     // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_4;        // 0x057C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x057D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98C8[0x2];                                     // 0x057E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_11;                 // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98C9[0x4];                                     // 0x0584(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPackEncount                           CallFunc_GetEncountPack_Pack_1;                    // 0x0588(0x0058)()
	int32                                         CallFunc_GetEncountPack_PackId_1;                  // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x05E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x05F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0600(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckStartEndFlag_OK_1;                   // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98CA[0x3];                                     // 0x0611(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0618(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0624(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x0630(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x063C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x0648(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0654(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0660(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98CB[0x4];                                     // 0x066C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TraceSpawnPoint_OutSpawnPoint_1;          // 0x0670(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TraceSpawnPoint_Success_1;                // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98CC[0x3];                                     // 0x06A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x06A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x06A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_BlankIndex;                     // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x06BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPackEncount                           CallFunc_GetEncountPack_Pack_2;                    // 0x06C8(0x0058)()
	int32                                         CallFunc_GetEncountPack_PackId_2;                  // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x0724(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x0730(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x073C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_5;        // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98CD[0x3];                                     // 0x0749(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSpawnSymbolNum_Num;                    // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_13;                  // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckStartEndFlag_OK_2;                   // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckStartEndFlag_OK_3;                   // 0x0759(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x075A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98CE[0x5];                                     // 0x075B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ACustomPawn*                            K2Node_CustomEvent_Devil;                          // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EncountAreaSpawner_C*               K2Node_CustomEvent_This_1;                         // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_14;                  // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98CF[0xC];                                     // 0x0774(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0780(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98D0[0x7];                                     // 0x07B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent;   // 0x07B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckImmediateUpdateFloatingIK_WhenCameraIn_ImmediateUpdateFloatingIK; // 0x07C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFloatingIK_OFF_FloatingIK_OFF;       // 0x07C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98D1[0x1];                                     // 0x07C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_12;                 // 0x07C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_13;                 // 0x07CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98D2[0x3];                                     // 0x07D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x07DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98D3[0x3];                                     // 0x07E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x07E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x07E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98D4[0x6];                                     // 0x07EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountAreaSpawner_C*               K2Node_CustomEvent_This;                           // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98D5[0x3];                                     // 0x07F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_14;                 // 0x07FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x0800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_15;                  // 0x0804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDeadSaveID_DeadSaveID;                 // 0x080C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Symbol;                         // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Save;                           // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0819(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckStartEndFlag_OK_4;                   // 0x081A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckStartEndFlag_OK_5;                   // 0x081B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class AActor* Symbol, bool Save)> K2Node_CreateDelegate_OutputDelegate;              // 0x081C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetBlankSpawnIndex_Index_2;               // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_6;        // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_4;        // 0x0831(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0832(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98D6[0x1];                                     // 0x0833(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x083C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0848(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98D7[0x4];                                     // 0x0854(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountAreaSpawner_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98D8[0x3];                                     // 0x0861(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0864(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0868(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ABP_EncountAreaSpawner_C* This)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0874(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_98D9[0x4];                                     // 0x0884(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSymbolActPattern>              K2Node_MakeArray_Array;                            // 0x0888(0x0010)(ReferenceParm)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0898(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_6;                // 0x08A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_6;                // 0x08B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_6;                   // 0x08C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98DA[0x4];                                     // 0x08CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSymbolMoverData                       CallFunc_GetMoverData_MoverData;                   // 0x08D0(0x00B8)(HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_7;                // 0x0988(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_7;                // 0x0994(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_7;                   // 0x09A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98DB[0x4];                                     // 0x09AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSymbolMoverData                       CallFunc_GetMoverData_MoverData_1;                 // 0x09B0(0x00B8)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0A68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_15;                 // 0x0A6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x0A70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_16;                 // 0x0A74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_17;                // 0x0A78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_5;        // 0x0A7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0A7D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x0A7E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0A7F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0A80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98DC[0x7];                                     // 0x0A81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_ActorsToLocations_Locations;              // 0x0A88(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_16;                  // 0x0A98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_8;                // 0x0A9C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_8;                // 0x0AA8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_8;                   // 0x0AB4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSpaceWhenSpawning_ReturnValue;       // 0x0AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSpaceWhenSpawning_ReturnValue_1;     // 0x0AC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98DD[0x2];                                     // 0x0AC2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_9;                // 0x0AC4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_9;                // 0x0AD0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_9;                   // 0x0ADC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_10;               // 0x0AE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_10;               // 0x0AF4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_10;                  // 0x0B00(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSpaceWhenSpawning_ReturnValue_2;     // 0x0B0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98DE[0x3];                                     // 0x0B0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TraceSpawnPoint_OutSpawnPoint_2;          // 0x0B10(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TraceSpawnPoint_Success_2;                // 0x0B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98DF[0x7];                                     // 0x0B41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0B48(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0B58(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0B64(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0B78(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0B84(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_11;               // 0x0B90(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_11;               // 0x0B9C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_11;                  // 0x0BA8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x0BB4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0BC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0BCC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue_1;              // 0x0BD8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default;                             // 0x0BE4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0BF0(0x0030)(IsPlainOldData, NoDestructor)
	struct FPackEncount                           CallFunc_GetEncountPack_Pack_3;                    // 0x0C20(0x0058)()
	int32                                         CallFunc_GetEncountPack_PackId_3;                  // 0x0C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSymbolID_SymbolId_1;                   // 0x0C7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0C80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_17;                  // 0x0C84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_17;                 // 0x0C88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACustomPawn* Devil, class ABP_EncountAreaSpawner_C* This)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0C8C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_18;                // 0x0C9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0CA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0CA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0CA2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanSpawn_WhenGeneratorActive_CanSpawn;    // 0x0CA3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MapSymbolState                              K2Node_Select_Default_1;                           // 0x0CA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98E0[0x3];                                     // 0x0CA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSymbolActRecord                       K2Node_MakeStruct_SymbolActRecord;                 // 0x0CA8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_CanSpawn_WhenGeneratorActive_CanSpawn_1;  // 0x0CC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98E1[0x3];                                     // 0x0CC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_18;                  // 0x0CCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_18;                 // 0x0CD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x0CD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98E2[0x3];                                     // 0x0CD5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_19;                // 0x0CD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSplineReverse_Reverse;               // 0x0CDC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAreaIN_AreaIN;                       // 0x0CDD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x0CDE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x0CDF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCoasterRiding_CoasterRiding;         // 0x0CE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0CE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlag_ReturnValue;               // 0x0CE2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98E3[0x1];                                     // 0x0CE3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_19;                  // 0x0CE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98E4[0x8];                                     // 0x0CE8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       K2Node_MakeStruct_SpawnSymbolInfo;                 // 0x0CF0(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x0D90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlag_ReturnValue_1;             // 0x0D91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98E5[0x2];                                     // 0x0D92(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBlankSpawnIndex_Index_3;               // 0x0D94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x0D98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_7;        // 0x0D99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x0D9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0D9B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0D9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98E6[0x3];                                     // 0x0D9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_19;                 // 0x0DA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98E7[0x4];                                     // 0x0DA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0DA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn;                  // 0x0DB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0DB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98E8[0x3];                                     // 0x0DB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_20;                // 0x0DBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0DC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98E9[0x4];                                     // 0x0DCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_3;                    // 0x0DD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_3;             // 0x0DD8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0DE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0DE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause;                // 0x0DEA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_16;               // 0x0DEB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_17;               // 0x0DEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_18;               // 0x0DED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98EA[0x2];                                     // 0x0DEE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0DF0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0DFC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFly_IsFly;                           // 0x0E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98EB[0x3];                                     // 0x0E09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x0E0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0E10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0E14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0E18(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0E24(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0E30(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0E3C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0EC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcNotSpawn_WhenLevelDiffEscape_Spawn;   // 0x0EC5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98EC[0x2];                                     // 0x0EC6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x0EC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_20;                  // 0x0ECC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_1;          // 0x0ED0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0ED8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x0EE0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x0EE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x0EEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98ED[0x3];                                     // 0x0EED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0EF0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0F78(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0F80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0F88(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0F90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0F94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0F98(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0FA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0FAC(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_20;                 // 0x0FBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0FC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_21;                // 0x0FC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EncountArea_OptionHit_C*            CallFunc_Array_Get_Item_2;                         // 0x0FC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x0FD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0FD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0FD5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98EE[0x2];                                     // 0x0FD6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountArea_OptionHit_C*            CallFunc_Array_Get_Item_3;                         // 0x0FD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x0FE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0FE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0FE5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98EF[0x2];                                     // 0x0FE6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountArea_OptionHit_C*            CallFunc_Array_Get_Item_4;                         // 0x0FE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x0FF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0FF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0FF5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98F0[0x2];                                     // 0x0FF6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 K2Node_MakeStruct_Color_1;                         // 0x0FF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_19;               // 0x0FFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98F1[0x3];                                     // 0x0FFD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_21;                  // 0x1000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98F2[0x4];                                     // 0x1004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountArea_OptionHit_C*            CallFunc_Array_Get_Item_5;                         // 0x1008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x1010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98F3[0x3];                                     // 0x1011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_22;                  // 0x1014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EncountAreaSpawner_C*               CallFunc_Array_Get_Item_6;                         // 0x1018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item_7;                         // 0x1020(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x10C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x10C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98F4[0x6];                                     // 0x10C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_1; // 0x10C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x10D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GiveUp_Success;                           // 0x10D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x10D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_20;               // 0x10D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x10D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x10D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x10D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98F5[0x2];                                     // 0x10DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSpawnSymbolNum_Num_1;                  // 0x10DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x10E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_21;               // 0x10E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_22;               // 0x10E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98F6[0x5];                                     // 0x10E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountArea_OptionHit_C*            CallFunc_Array_Get_Item_8;                         // 0x10E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x10F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x10F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x10F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckViewSymbolBox_IN;                    // 0x10F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98F7[0x1];                                     // 0x10F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_21;                 // 0x10F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x10FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98F8[0x3];                                     // 0x10FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_22;                // 0x1100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_16;              // 0x1104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_23;               // 0x1108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x1109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_24;               // 0x110A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_25;               // 0x110B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_23;                  // 0x110C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EncountArea_OptionHit_C*            CallFunc_Array_Get_Item_9;                         // 0x1110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_26;               // 0x1118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x1119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_27;               // 0x111A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_28;               // 0x111B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_29;               // 0x111C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98F9[0x3];                                     // 0x111D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBlankSpawnIndex_Index_4;               // 0x1120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_17;              // 0x1124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_8;        // 0x1128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x1129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMagatsukaEncountArea_Magatsuka;  // 0x112A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_30;               // 0x112B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x112C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98FA[0x4];                                     // 0x1134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountArea_OptionHit_C*            CallFunc_Array_Get_Item_10;                        // 0x1138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_23;                // 0x1140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_31;               // 0x1144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98FB[0x3];                                     // 0x1145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_18;              // 0x1148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_22;                 // 0x114C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x1150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x1151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98FC[0x2];                                     // 0x1152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_24;                // 0x1154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x1158(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x1168(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_23;                 // 0x1178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98FD[0x4];                                     // 0x117C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item_11;                        // 0x1180(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x1220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x1221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98FE[0x2];                                     // 0x1222(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_25;                // 0x1224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_2; // 0x1228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x1230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x1231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_98FF[0x2];                                     // 0x1232(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_19;              // 0x1234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_12;               // 0x1238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9900[0x3];                                     // 0x1239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x123C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_26;                // 0x1240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCoasterRiding_CoasterRiding_1;       // 0x1244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckNowDiscovery_Exist;                  // 0x1245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x1246(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_32;               // 0x1247(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x1248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x124C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9901[0x3];                                     // 0x124D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_SymbolPawn;                           // 0x1250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x1258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn_4;                    // 0x1260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectPlayerController_C*             K2Node_DynamicCast_AsProject_Player_Controller;    // 0x1268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x1270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9902[0x7];                                     // 0x1271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_4;             // 0x1278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x1288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProjectMoveInputIgnored_ReturnValue;    // 0x1289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9903[0x6];                                     // 0x128A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMapGimmickTrigger_Actor;           // 0x1290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProjectLookInputIgnored_ReturnValue;    // 0x1298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9904[0x7];                                     // 0x1299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapGimmickTrigger_C*                K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger;       // 0x12A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x12A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProjectMoveInputIgnored_ReturnValue_1;  // 0x12A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x12AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x12AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_33;               // 0x12AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9905[0x3];                                     // 0x12AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_5;                    // 0x12B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_5;             // 0x12B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x12C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x12C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause_1;              // 0x12CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_34;               // 0x12CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9906[0x4];                                     // 0x12CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x12D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectPlayerController_C*             K2Node_DynamicCast_AsProject_Player_Controller_1;  // 0x12D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x12E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProjectMoveInputIgnored_ReturnValue_2;  // 0x12E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x12E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProjectLookInputIgnored_ReturnValue_1;  // 0x12E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProjectMoveInputIgnored_ReturnValue_3;  // 0x12E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x12E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9907[0x2];                                     // 0x12E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x12E8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x12F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_35;               // 0x12F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9908[0x6];                                     // 0x12FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_6;                    // 0x1300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_6;             // 0x1308(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x1318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x1319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9909[0x6];                                     // 0x131A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMapGimmickTrigger_Actor_1;         // 0x1320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapGimmickTrigger_C*                K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger_1;     // 0x1328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x1330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_990A[0x7];                                     // 0x1331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x1338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectPlayerController_C*             K2Node_DynamicCast_AsProject_Player_Controller_2;  // 0x1340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x1348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_990B[0x3];                                     // 0x1349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_24;                  // 0x134C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProjectMoveInputIgnored_ReturnValue_4;  // 0x1350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_990C[0xF];                                     // 0x1351(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item_12;                        // 0x1360(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_IsProjectLookInputIgnored_ReturnValue_2;  // 0x1400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x1401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_990D[0x6];                                     // 0x1402(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_3; // 0x1408(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x1410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProjectMoveInputIgnored_ReturnValue_5;  // 0x1411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanDiscovery_OK;                          // 0x1412(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x1413(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x1414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_36;               // 0x1415(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_990E[0x2];                                     // 0x1416(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x1418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectGameMode_C*                     K2Node_DynamicCast_AsProject_Game_Mode;            // 0x1420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x1428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlag_ReturnValue_2;             // 0x1429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_END                                     K2Node_CustomEvent_BtlEndType;                     // 0x142A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_990F[0x1];                                     // 0x142B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ChainEncountNum_1;              // 0x142C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Respawn;                              // 0x1430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9910[0x7];                                     // 0x1431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_7;                    // 0x1438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_7;             // 0x1440(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x1450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x1451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause_2;              // 0x1452(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_37;               // 0x1453(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetDeadSaveID_DeadSaveID_1;               // 0x1454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckMapSymbolDeadFlag_ReturnValue;       // 0x1458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x1459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_38;               // 0x145A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9911[0x1];                                     // 0x145B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(E_BTL_END BtlEndType, int32 ChainEncountNum)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x145C(0x0010)(ZeroConstructor, NoDestructor)
	struct FUniqueSymbolData                      CallFunc_GetUniqueSymbolData_ReturnValue;          // 0x146C(0x002C)(ConstParm, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x1498(0x0010)(ZeroConstructor, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x14A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x14A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9912[0x6];                                     // 0x14AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetParentActor_ReturnValue;               // 0x14B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x14B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x14B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_39;               // 0x14BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9913[0x1];                                     // 0x14BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x14BC(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetSpawnSymbolNum_Num_2;                  // 0x14CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x14D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x14D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9914[0x6];                                     // 0x14D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPackEncount                           CallFunc_GetEncountPack_Pack_4;                    // 0x14D8(0x0058)()
	int32                                         CallFunc_GetEncountPack_PackId_4;                  // 0x1530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9915[0x4];                                     // 0x1534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPackEncount                           CallFunc_GetEncountPack_Pack_5;                    // 0x1538(0x0058)()
	int32                                         CallFunc_GetEncountPack_PackId_5;                  // 0x1590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckStartEndFlag_OK_6;                   // 0x1594(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckStartEndFlag_OK_7;                   // 0x1595(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_40;               // 0x1596(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9916[0x1];                                     // 0x1597(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetReqSpawnSymbolNum_Num;                 // 0x1598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x159C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9917[0x3];                                     // 0x159D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_8;                    // 0x15A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x15A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9918[0x7];                                     // 0x15A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_8;             // 0x15B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x15C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause_3;              // 0x15C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CurrentMapIsDaath_ReturnValue;            // 0x15C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9919[0x1];                                     // 0x15C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x15C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x15C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_991A[0x3];                                     // 0x15C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_24;                 // 0x15CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_13;               // 0x15D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_991B[0x3];                                     // 0x15D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_27;                // 0x15D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x15D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_991C[0x3];                                     // 0x15D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_25;                  // 0x15DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item_13;                        // 0x15E0(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x1680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_41;               // 0x1681(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_42;               // 0x1682(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_6;             // 0x1683(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x1684(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_43;               // 0x1685(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x1686(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x1687(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x1688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x1689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x168A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_991D[0x1];                                     // 0x168B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_20;              // 0x168C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_14;               // 0x1690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_991E[0x3];                                     // 0x1691(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDeadSaveID_DeadSaveID_2;               // 0x1694(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckMapSymbolDeadFlag_ReturnValue_1;     // 0x1698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_991F[0x3];                                     // 0x1699(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x169C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_7;             // 0x16A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9920[0x3];                                     // 0x16A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_25;                 // 0x16A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_15;               // 0x16A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9921[0x3];                                     // 0x16A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_28;                // 0x16AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x16B0(0x0010)(ZeroConstructor, NoDestructor)
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item_14;                        // 0x16C0(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x1760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x1761(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9922[0xE];                                     // 0x1762(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x1770(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_21;              // 0x17A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9923[0x4];                                     // 0x17A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_4; // 0x17A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x17B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_16;               // 0x17B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x17B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9924[0xD];                                     // 0x17B3(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item_15;                        // 0x17C0(0x00A0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_22;              // 0x1860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x1864(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_17;               // 0x1865(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x1866(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x1867(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_26;                  // 0x1868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9925[0x4];                                     // 0x186C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item_16;                        // 0x1870(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x1910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x1911(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_44;               // 0x1912(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9926[0x1];                                     // 0x1913(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_23;              // 0x1914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_18;               // 0x1918(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9927[0x3];                                     // 0x1919(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDeadSaveID_DeadSaveID_3;               // 0x191C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_8;             // 0x1920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9928[0x7];                                     // 0x1921(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_17;                        // 0x1928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_24;              // 0x1930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9929[0x4];                                     // 0x1934(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountAreaBase_C*                  K2Node_DynamicCast_AsBP_Encount_Area_Base;         // 0x1938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x1940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_19;               // 0x1941(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_992A[0x2];                                     // 0x1942(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_25;              // 0x1944(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x1948(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_20;               // 0x1958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_45;               // 0x1959(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_992B[0x2];                                     // 0x195A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x195C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_26;              // 0x196C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_21;               // 0x1970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_992C[0x3];                                     // 0x1971(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_26;                 // 0x1974(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPackEncount                           CallFunc_GetEncountPack_Pack_6;                    // 0x1978(0x0058)()
	int32                                         CallFunc_GetEncountPack_PackId_6;                  // 0x19D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_22;               // 0x19D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_992D[0x3];                                     // 0x19D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_29;                // 0x19D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SymbolIndex;                    // 0x19DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x19E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_992E[0x3];                                     // 0x19E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_27;                 // 0x19E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_23;               // 0x19E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_992F[0x3];                                     // 0x19E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_30;                // 0x19EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x19F0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_9;             // 0x1A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9930[0x3];                                     // 0x1A01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_16;           // 0x1A04(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_10;            // 0x1A14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_END                                     K2Node_CustomEvent_BattleEnd;                      // 0x1A15(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9931[0x2];                                     // 0x1A16(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ChainEncountNum;                // 0x1A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_17;           // 0x1A1C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_24;               // 0x1A2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_25;               // 0x1A2D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x1A2E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x1A2F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x1A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9932[0x3];                                     // 0x1A31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_18;           // 0x1A34(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_27;                  // 0x1A44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9933[0x8];                                     // 0x1A48(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item_18;                        // 0x1A50(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x1AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_9;        // 0x1AF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9934[0x6];                                     // 0x1AF2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountAreaBase_C*                  CallFunc_Array_Get_Item_19;                        // 0x1AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_19;           // 0x1B00(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_27;              // 0x1B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_26;               // 0x1B14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9935[0x3];                                     // 0x1B15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_20;           // 0x1B18(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x1B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9936[0x7];                                     // 0x1B29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDevilName_ReturnValue;                 // 0x1B30(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x1B48(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x1B58(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x1B68(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckMitamaGroup_Mitama;                  // 0x1B78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9937[0x7];                                     // 0x1B79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x1B80(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x1B90(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x1BA0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_28;                 // 0x1BB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x1BB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_27;               // 0x1BB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9938[0x2];                                     // 0x1BB6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_31;                // 0x1BB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_StopTime;                             // 0x1BBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9939[0x3];                                     // 0x1BBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item_20;                        // 0x1BC0(0x00A0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_28;              // 0x1C60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_28;               // 0x1C64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x1C65(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x1C66(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_993A[0x1];                                     // 0x1C67(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_5; // 0x1C68(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x1C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAreaIN_AreaIN_1;                     // 0x1C71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAreaIN_AreaIN_2;                     // 0x1C72(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAreaIN_AreaIN_3;                     // 0x1C73(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x1C74(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_28;                  // 0x1C80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_993B[0xC];                                     // 0x1C84(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item_21;                        // 0x1C90(0x00A0)(HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x1D30(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x1D60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_993C[0x7];                                     // 0x1D61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountAreaBase_C*                  CallFunc_Array_Get_Item_22;                        // 0x1D68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_29;              // 0x1D70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_29;               // 0x1D74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_993D[0x3];                                     // 0x1D75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x1D78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x1D7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_993E[0x3];                                     // 0x1D7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x1D80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_993F[0x4];                                     // 0x1D84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDevilName_ReturnValue_1;               // 0x1D88(0x0018)(ConstParm)
	bool                                          CallFunc_CheckMitamaGroup_Mitama_1;                // 0x1DA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9940[0x7];                                     // 0x1DA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x1DA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x1DB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9941[0x7];                                     // 0x1DB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x1DC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x1DD0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x1DE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x1DF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9942[0x7];                                     // 0x1DF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x1DF8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x1E08(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x1E18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x1E1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CurrentMapIsDaath_ReturnValue_1;          // 0x1E20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9943[0x3];                                     // 0x1E21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x1E24(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_46;               // 0x1E30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9944[0x3];                                     // 0x1E31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x1E34(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn_9;                    // 0x1E40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetLoadGamePause_ReturnValue;             // 0x1E48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9945[0x7];                                     // 0x1E49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_9;             // 0x1E50(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x1E60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x1E61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckSymbolPause_Pause;               // 0x1E62(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9946[0x1];                                     // 0x1E63(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBlankSpawnIndex_Index_5;               // 0x1E64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_47;               // 0x1E68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_10;       // 0x1E69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9947[0x2];                                     // 0x1E6A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_30;              // 0x1E6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_30;               // 0x1E70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9948[0x7];                                     // 0x1E71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x1E78(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x1E88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9949[0x3];                                     // 0x1E89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x1E8C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x1F14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x1F15(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x1F16(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_994A[0x1];                                     // 0x1F17(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x1F18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x1F1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x1F20(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x1F2C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x1F38(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x1F44(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x1F50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x1F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x1F60(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x1F68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x1F70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x1F74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x1F78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x1F7C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x1F88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x1F94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x1FA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_994B[0x3];                                     // 0x1FA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default_4;                           // 0x1FA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_31;              // 0x1FB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_994C[0x4];                                     // 0x1FB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x1FB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_11;            // 0x1FC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_994D[0x7];                                     // 0x1FC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ProjectGameInstance_C> K2Node_DynamicCast_AsBPI_Project_Game_Instance;    // 0x1FC8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x1FD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x1FD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckLoadMap_LoadMap;                 // 0x1FDA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase");
static_assert(sizeof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase) == 0x001FE0, "Wrong size on BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, EntryPoint) == 0x000000, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetEncountPack_Pack) == 0x000008, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetEncountPack_Pack' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetEncountPack_PackId) == 0x000060, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetEncountPack_PackId' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckStartEndFlag_OK) == 0x000064, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckStartEndFlag_OK' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_IsClosed_Variable) == 0x000065, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_True_if_break_was_hit_Variable) == 0x000066, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue) == 0x000067, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_1) == 0x000074, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00007C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_1) == 0x000080, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_1) == 0x000084, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_2) == 0x000088, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_2) == 0x00008C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_2) == 0x000090, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_byte_Variable) == 0x000094, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_3) == 0x000098, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_3) == 0x00009C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_3) == 0x0000A0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_byte_Variable_1) == 0x0000A4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_4) == 0x0000A8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_4) == 0x0000AC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000B0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_True_if_break_was_hit_Variable_2) == 0x0000B4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_5) == 0x0000B8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000BC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_5) == 0x0000C0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_6) == 0x0000C4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000C8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000CC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_True_if_break_was_hit_Variable_3) == 0x0000D0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_True_if_break_was_hit_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_6) == 0x0000D4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000D8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_Variable) == 0x0000D9, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_7) == 0x0000DC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CalcSpawnPointList_SpawnPointList) == 0x0000E0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CalcSpawnPointList_SpawnPointList' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue) == 0x000124, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_8) == 0x000128, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetBlankSpawnIndex_Index) == 0x00012C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetBlankSpawnIndex_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_Index) == 0x000130, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_IsManualPos) == 0x000134, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_IsManualPos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_ManualPos) == 0x000140, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_ManualPos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetSpawnSplinePoint_SplinePoints) == 0x000170, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetSpawnSplinePoint_SplinePoints' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_1) == 0x000180, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000184, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_1) == 0x000190, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Location) == 0x0001C0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Rotation) == 0x0001CC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Scale) == 0x0001D8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_2) == 0x0001E4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_TraceSpawnPoint_OutSpawnPoint) == 0x0001F0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_TraceSpawnPoint_OutSpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_TraceSpawnPoint_Success) == 0x000220, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_TraceSpawnPoint_Success' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_9) == 0x000224, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Location_1) == 0x000228, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Rotation_1) == 0x000234, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Scale_1) == 0x000240, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00024C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetBlankSpawnIndex_Index_1) == 0x000250, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetBlankSpawnIndex_Index_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000254, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_7) == 0x000258, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_7) == 0x00025C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_4) == 0x000260, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetMapCommon_rerutn) == 0x000268, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_10) == 0x000270, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000278, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess) == 0x000288, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BI_CheckEncountOn_EncountOn) == 0x000289, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BI_CheckEncountOn_EncountOn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue) == 0x00028A, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue) == 0x000290, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_8) == 0x000360, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000364, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_8) == 0x000368, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_5) == 0x00036C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetMapCommon_rerutn_1) == 0x000370, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetMapCommon_rerutn_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_1) == 0x000378, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsBPI_Map_Common_1) == 0x000448, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsBPI_Map_Common_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_1) == 0x000458, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BI_CheckEncountOn_EncountOn_1) == 0x000459, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BI_CheckEncountOn_EncountOn_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00045A, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_1) == 0x00045B, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_Has_Been_Initd_Variable) == 0x00045C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_6) == 0x00045D, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_9) == 0x000460, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_9) == 0x000464, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Variable) == 0x000468, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_10) == 0x00046C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetMapCommon_rerutn_2) == 0x000470, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetMapCommon_rerutn_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsBPI_Map_Common_2) == 0x000478, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsBPI_Map_Common_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_2) == 0x000488, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_2) == 0x000489, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BI_CheckEncountOn_EncountOn_2) == 0x00048A, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BI_CheckEncountOn_EncountOn_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_2) == 0x000490, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000560, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_7) == 0x000561, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_11) == 0x000564, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000568, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x000569, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_12) == 0x00056C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_10) == 0x000570, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_11) == 0x000574, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetSymbolID_SymbolId) == 0x000578, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetSymbolID_SymbolId' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GreaterEqual_IntInt_ReturnValue_4) == 0x00057C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GreaterEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00057D, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_11) == 0x000580, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetEncountPack_Pack_1) == 0x000588, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetEncountPack_Pack_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetEncountPack_PackId_1) == 0x0005E0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetEncountPack_PackId_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_12) == 0x0005E4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Location_2) == 0x0005E8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Rotation_2) == 0x0005F4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Scale_2) == 0x000600, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_3) == 0x00060C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckStartEndFlag_OK_1) == 0x000610, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckStartEndFlag_OK_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Variable_1) == 0x000614, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_MakeVector_ReturnValue) == 0x000618, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Location_3) == 0x000624, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Rotation_3) == 0x000630, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Scale_3) == 0x00063C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Location_4) == 0x000648, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Rotation_4) == 0x000654, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Scale_4) == 0x000660, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_TraceSpawnPoint_OutSpawnPoint_1) == 0x000670, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_TraceSpawnPoint_OutSpawnPoint_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_TraceSpawnPoint_Success_1) == 0x0006A0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_TraceSpawnPoint_Success_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_4) == 0x0006A4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_MakeVector_ReturnValue_1) == 0x0006A8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_5) == 0x0006B4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_BlankIndex) == 0x0006B8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_BlankIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_Location) == 0x0006BC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetEncountPack_Pack_2) == 0x0006C8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetEncountPack_Pack_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetEncountPack_PackId_2) == 0x000720, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetEncountPack_PackId_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Location_5) == 0x000724, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Rotation_5) == 0x000730, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Scale_5) == 0x00073C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GreaterEqual_IntInt_ReturnValue_5) == 0x000748, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GreaterEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetSpawnSymbolNum_Num) == 0x00074C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetSpawnSymbolNum_Num' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_13) == 0x000750, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Subtract_IntInt_ReturnValue) == 0x000754, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckStartEndFlag_OK_2) == 0x000758, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckStartEndFlag_OK_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckStartEndFlag_OK_3) == 0x000759, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckStartEndFlag_OK_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_8) == 0x00075A, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_Devil) == 0x000760, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_Devil' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_This_1) == 0x000768, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_This_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_14) == 0x000770, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetTransform_ReturnValue) == 0x000780, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_3) == 0x0007B0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent) == 0x0007B8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_3) == 0x0007C0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckImmediateUpdateFloatingIK_WhenCameraIn_ImmediateUpdateFloatingIK) == 0x0007C1, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckImmediateUpdateFloatingIK_WhenCameraIn_ImmediateUpdateFloatingIK' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckFloatingIK_OFF_FloatingIK_OFF) == 0x0007C2, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckFloatingIK_OFF_FloatingIK_OFF' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_12) == 0x0007C4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_13) == 0x0007C8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_13) == 0x0007CC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_DestroyedActor) == 0x0007D0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_1) == 0x0007D8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_14) == 0x0007DC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanAND_ReturnValue) == 0x0007E0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_6) == 0x0007E4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_Variable_1) == 0x0007E8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0007E9, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_This) == 0x0007F0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_This' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_RemoveItem_ReturnValue) == 0x0007F8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_14) == 0x0007FC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_15) == 0x000800, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_15) == 0x000804, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_7) == 0x000808, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetDeadSaveID_DeadSaveID) == 0x00080C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetDeadSaveID_DeadSaveID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_Symbol) == 0x000810, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_Symbol' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_Save) == 0x000818, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_Save' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Greater_IntInt_ReturnValue) == 0x000819, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckStartEndFlag_OK_4) == 0x00081A, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckStartEndFlag_OK_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckStartEndFlag_OK_5) == 0x00081B, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckStartEndFlag_OK_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate) == 0x00081C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetBlankSpawnIndex_Index_2) == 0x00082C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetBlankSpawnIndex_Index_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GreaterEqual_IntInt_ReturnValue_6) == 0x000830, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GreaterEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_True_if_break_was_hit_Variable_4) == 0x000831, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_True_if_break_was_hit_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_9) == 0x000832, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakVector_X) == 0x000834, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakVector_Y) == 0x000838, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakVector_Z) == 0x00083C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000840, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_MakeVector_ReturnValue_2) == 0x000848, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_FinishSpawningActor_ReturnValue) == 0x000858, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_4) == 0x000860, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000864, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_MakeVector_ReturnValue_3) == 0x000868, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000874, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_MakeArray_Array) == 0x000888, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_2) == 0x000898, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Location_6) == 0x0008A8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Location_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Rotation_6) == 0x0008B4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Rotation_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Scale_6) == 0x0008C0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Scale_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetMoverData_MoverData) == 0x0008D0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetMoverData_MoverData' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Location_7) == 0x000988, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Location_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Rotation_7) == 0x000994, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Rotation_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Scale_7) == 0x0009A0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Scale_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetMoverData_MoverData_1) == 0x0009B0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetMoverData_MoverData_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Variable_2) == 0x000A68, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_15) == 0x000A6C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_16) == 0x000A70, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_16) == 0x000A74, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_17) == 0x000A78, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_True_if_break_was_hit_Variable_5) == 0x000A7C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_True_if_break_was_hit_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000A7D, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_10) == 0x000A7E, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanAND_ReturnValue_1) == 0x000A7F, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_Variable_2) == 0x000A80, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_ActorsToLocations_Locations) == 0x000A88, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_ActorsToLocations_Locations' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_16) == 0x000A98, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Location_8) == 0x000A9C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Location_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Rotation_8) == 0x000AA8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Rotation_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Scale_8) == 0x000AB4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Scale_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckSpaceWhenSpawning_ReturnValue) == 0x000AC0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckSpaceWhenSpawning_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckSpaceWhenSpawning_ReturnValue_1) == 0x000AC1, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckSpaceWhenSpawning_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Location_9) == 0x000AC4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Location_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Rotation_9) == 0x000AD0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Rotation_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Scale_9) == 0x000ADC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Scale_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Location_10) == 0x000AE8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Location_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Rotation_10) == 0x000AF4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Rotation_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Scale_10) == 0x000B00, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Scale_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckSpaceWhenSpawning_ReturnValue_2) == 0x000B0C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckSpaceWhenSpawning_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_TraceSpawnPoint_OutSpawnPoint_2) == 0x000B10, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_TraceSpawnPoint_OutSpawnPoint_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_TraceSpawnPoint_Success_2) == 0x000B40, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_TraceSpawnPoint_Success_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_object_Variable) == 0x000B48, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetActorForwardVector_ReturnValue) == 0x000B58, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetActorUpVector_ReturnValue) == 0x000B64, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetPlayerPawn_ReturnValue) == 0x000B70, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000B78, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_RotateAngleAxis_ReturnValue) == 0x000B84, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Location_11) == 0x000B90, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Location_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Rotation_11) == 0x000B9C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Rotation_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakTransform_Scale_11) == 0x000BA8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakTransform_Scale_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_MakeRotFromZX_ReturnValue) == 0x000BB4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000BC0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Normal_ReturnValue) == 0x000BCC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_MakeRotFromZX_ReturnValue_1) == 0x000BD8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_MakeRotFromZX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_Select_Default) == 0x000BE4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_MakeTransform_ReturnValue) == 0x000BF0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetEncountPack_Pack_3) == 0x000C20, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetEncountPack_Pack_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetEncountPack_PackId_3) == 0x000C78, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetEncountPack_PackId_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetSymbolID_SymbolId_1) == 0x000C7C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetSymbolID_SymbolId_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_8) == 0x000C80, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_17) == 0x000C84, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_17) == 0x000C88, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_3) == 0x000C8C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_18) == 0x000C9C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000CA0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000CA1, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanOR_ReturnValue) == 0x000CA2, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CanSpawn_WhenGeneratorActive_CanSpawn) == 0x000CA3, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CanSpawn_WhenGeneratorActive_CanSpawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_Select_Default_1) == 0x000CA4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_MakeStruct_SymbolActRecord) == 0x000CA8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_MakeStruct_SymbolActRecord' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CanSpawn_WhenGeneratorActive_CanSpawn_1) == 0x000CC8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CanSpawn_WhenGeneratorActive_CanSpawn_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_18) == 0x000CCC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_18) == 0x000CD0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_Select_Default_2) == 0x000CD4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_19) == 0x000CD8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckSplineReverse_Reverse) == 0x000CDC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckSplineReverse_Reverse' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckAreaIN_AreaIN) == 0x000CDD, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckAreaIN_AreaIN' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_11) == 0x000CDE, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_12) == 0x000CDF, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckCoasterRiding_CoasterRiding) == 0x000CE0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckCoasterRiding_CoasterRiding' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanOR_ReturnValue_1) == 0x000CE1, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckEventFlag_ReturnValue) == 0x000CE2, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckEventFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_19) == 0x000CE4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_MakeStruct_SpawnSymbolInfo) == 0x000CF0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_MakeStruct_SpawnSymbolInfo' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_13) == 0x000D90, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckEventFlag_ReturnValue_1) == 0x000D91, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckEventFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetBlankSpawnIndex_Index_3) == 0x000D94, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetBlankSpawnIndex_Index_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_14) == 0x000D98, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GreaterEqual_IntInt_ReturnValue_7) == 0x000D99, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GreaterEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_15) == 0x000D9A, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanAND_ReturnValue_2) == 0x000D9B, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanOR_ReturnValue_2) == 0x000D9C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_19) == 0x000DA0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000DA8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsCustom_Pawn) == 0x000DB0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsCustom_Pawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_4) == 0x000DB8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_20) == 0x000DBC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetSocketLocation_ReturnValue) == 0x000DC0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetMapCommon_rerutn_3) == 0x000DD0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetMapCommon_rerutn_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsBPI_Map_Common_3) == 0x000DD8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsBPI_Map_Common_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_5) == 0x000DE8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_5) == 0x000DE9, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BPI_CheckMapPause_IsPause) == 0x000DEA, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BPI_CheckMapPause_IsPause' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_16) == 0x000DEB, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_17) == 0x000DEC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_18) == 0x000DED, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000DF0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetUpVector_ReturnValue) == 0x000DFC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckFly_IsFly) == 0x000E08, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckFly_IsFly' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakVector_X_1) == 0x000E0C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakVector_Y_1) == 0x000E10, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakVector_Z_1) == 0x000E14, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000E18, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000E24, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_VectorVector_ReturnValue) == 0x000E30, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_LineTraceSingle_OutHit) == 0x000E3C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_LineTraceSingle_ReturnValue) == 0x000EC4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CalcNotSpawn_WhenLevelDiffEscape_Spawn) == 0x000EC5, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CalcNotSpawn_WhenLevelDiffEscape_Spawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_MakeStruct_Color) == 0x000EC8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_MakeStruct_Color' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_20) == 0x000ECC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_OverlappedComponent_1) == 0x000ED0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_OtherActor_1) == 0x000ED8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_OtherComp_1) == 0x000EE0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_OtherBodyIndex_1) == 0x000EE8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_bFromSweep) == 0x000EEC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_SweepResult) == 0x000EF0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_OverlappedComponent) == 0x000F78, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_OtherActor) == 0x000F80, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_OtherComp) == 0x000F88, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_OtherBodyIndex) == 0x000F90, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Variable_3) == 0x000F94, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_4) == 0x000F98, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_9) == 0x000FA8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_5) == 0x000FAC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_20) == 0x000FBC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_10) == 0x000FC0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_21) == 0x000FC4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_2) == 0x000FC8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_11) == 0x000FD0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_6) == 0x000FD4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_2) == 0x000FD5, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_3) == 0x000FD8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_12) == 0x000FE0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_7) == 0x000FE4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_3) == 0x000FE5, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_4) == 0x000FE8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_13) == 0x000FF0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_8) == 0x000FF4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_4) == 0x000FF5, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_MakeStruct_Color_1) == 0x000FF8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_MakeStruct_Color_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_19) == 0x000FFC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_21) == 0x001000, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_5) == 0x001008, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_9) == 0x001010, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_22) == 0x001014, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_6) == 0x001018, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_7) == 0x001020, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_10) == 0x0010C0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_11) == 0x0010C1, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_1) == 0x0010C8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_6) == 0x0010D0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GiveUp_Success) == 0x0010D1, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GiveUp_Success' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0010D2, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_20) == 0x0010D3, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_14) == 0x0010D4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_5) == 0x0010D8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_12) == 0x0010D9, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetSpawnSymbolNum_Num_1) == 0x0010DC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetSpawnSymbolNum_Num_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0010E0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_21) == 0x0010E1, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_22) == 0x0010E2, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_8) == 0x0010E8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_15) == 0x0010F0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_13) == 0x0010F4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_6) == 0x0010F5, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckViewSymbolBox_IN) == 0x0010F6, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckViewSymbolBox_IN' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_21) == 0x0010F8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_7) == 0x0010FC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_22) == 0x001100, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_16) == 0x001104, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_23) == 0x001108, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x001109, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_24) == 0x00110A, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_25) == 0x00110B, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_23) == 0x00110C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_9) == 0x001110, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_26) == 0x001118, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_14) == 0x001119, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_27) == 0x00111A, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_28) == 0x00111B, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_29) == 0x00111C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetBlankSpawnIndex_Index_4) == 0x001120, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetBlankSpawnIndex_Index_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_17) == 0x001124, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GreaterEqual_IntInt_ReturnValue_8) == 0x001128, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GreaterEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_8) == 0x001129, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BPI_CheckMagatsukaEncountArea_Magatsuka) == 0x00112A, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BPI_CheckMagatsukaEncountArea_Magatsuka' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_30) == 0x00112B, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_name_Variable) == 0x00112C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_10) == 0x001138, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_23) == 0x001140, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_31) == 0x001144, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_18) == 0x001148, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_22) == 0x00114C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_9) == 0x001150, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_10) == 0x001151, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_24) == 0x001154, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_6) == 0x001158, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_7) == 0x001168, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_23) == 0x001178, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_11) == 0x001180, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_11) == 0x001220, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_15) == 0x001221, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_25) == 0x001224, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_2) == 0x001228, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_7) == 0x001230, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x001231, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_19) == 0x001234, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_12) == 0x001238, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00123C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_26) == 0x001240, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckCoasterRiding_CoasterRiding_1) == 0x001244, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckCoasterRiding_CoasterRiding_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckNowDiscovery_Exist) == 0x001245, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckNowDiscovery_Exist' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanOR_ReturnValue_3) == 0x001246, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_32) == 0x001247, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_Event_DeltaSeconds) == 0x001248, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00124C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_Event_SymbolPawn) == 0x001250, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_Event_SymbolPawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetPlayerController_ReturnValue) == 0x001258, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetMapCommon_rerutn_4) == 0x001260, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetMapCommon_rerutn_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsProject_Player_Controller) == 0x001268, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsProject_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_8) == 0x001270, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsBPI_Map_Common_4) == 0x001278, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsBPI_Map_Common_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_9) == 0x001288, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsProjectMoveInputIgnored_ReturnValue) == 0x001289, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsProjectMoveInputIgnored_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BPI_GetMapGimmickTrigger_Actor) == 0x001290, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BPI_GetMapGimmickTrigger_Actor' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsProjectLookInputIgnored_ReturnValue) == 0x001298, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsProjectLookInputIgnored_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger) == 0x0012A0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_10) == 0x0012A8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsProjectMoveInputIgnored_ReturnValue_1) == 0x0012A9, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsProjectMoveInputIgnored_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanOR_ReturnValue_4) == 0x0012AA, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanOR_ReturnValue_5) == 0x0012AB, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_33) == 0x0012AC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetMapCommon_rerutn_5) == 0x0012B0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetMapCommon_rerutn_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsBPI_Map_Common_5) == 0x0012B8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsBPI_Map_Common_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_11) == 0x0012C8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_16) == 0x0012C9, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BPI_CheckMapPause_IsPause_1) == 0x0012CA, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BPI_CheckMapPause_IsPause_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_34) == 0x0012CB, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetPlayerController_ReturnValue_1) == 0x0012D0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsProject_Player_Controller_1) == 0x0012D8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsProject_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_12) == 0x0012E0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsProjectMoveInputIgnored_ReturnValue_2) == 0x0012E1, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsProjectMoveInputIgnored_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0012E2, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsProjectLookInputIgnored_ReturnValue_1) == 0x0012E3, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsProjectLookInputIgnored_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsProjectMoveInputIgnored_ReturnValue_3) == 0x0012E4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsProjectMoveInputIgnored_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanOR_ReturnValue_6) == 0x0012E5, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_8) == 0x0012E8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanOR_ReturnValue_7) == 0x0012F8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_35) == 0x0012F9, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetMapCommon_rerutn_6) == 0x001300, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetMapCommon_rerutn_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsBPI_Map_Common_6) == 0x001308, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsBPI_Map_Common_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_13) == 0x001318, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_17) == 0x001319, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BPI_GetMapGimmickTrigger_Actor_1) == 0x001320, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BPI_GetMapGimmickTrigger_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger_1) == 0x001328, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_14) == 0x001330, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetPlayerController_ReturnValue_2) == 0x001338, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsProject_Player_Controller_2) == 0x001340, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsProject_Player_Controller_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_15) == 0x001348, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_24) == 0x00134C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsProjectMoveInputIgnored_ReturnValue_4) == 0x001350, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsProjectMoveInputIgnored_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_12) == 0x001360, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsProjectLookInputIgnored_ReturnValue_2) == 0x001400, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsProjectLookInputIgnored_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_18) == 0x001401, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_3) == 0x001408, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_16) == 0x001410, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsProjectMoveInputIgnored_ReturnValue_5) == 0x001411, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsProjectMoveInputIgnored_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CanDiscovery_OK) == 0x001412, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CanDiscovery_OK' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanOR_ReturnValue_8) == 0x001413, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanOR_ReturnValue_9) == 0x001414, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_36) == 0x001415, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetGameMode_ReturnValue) == 0x001418, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsProject_Game_Mode) == 0x001420, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsProject_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_17) == 0x001428, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckEventFlag_ReturnValue_2) == 0x001429, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckEventFlag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_BtlEndType) == 0x00142A, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_BtlEndType' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_ChainEncountNum_1) == 0x00142C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_ChainEncountNum_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_Event_Respawn) == 0x001430, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_Event_Respawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetMapCommon_rerutn_7) == 0x001438, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetMapCommon_rerutn_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsBPI_Map_Common_7) == 0x001440, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsBPI_Map_Common_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_18) == 0x001450, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_19) == 0x001451, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BPI_CheckMapPause_IsPause_2) == 0x001452, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BPI_CheckMapPause_IsPause_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_37) == 0x001453, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetDeadSaveID_DeadSaveID_1) == 0x001454, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetDeadSaveID_DeadSaveID_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckMapSymbolDeadFlag_ReturnValue) == 0x001458, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckMapSymbolDeadFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Greater_IntInt_ReturnValue_3) == 0x001459, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_38) == 0x00145A, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_9) == 0x00145C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetUniqueSymbolData_ReturnValue) == 0x00146C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetUniqueSymbolData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_10) == 0x001498, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_Event_EndPlayReason) == 0x0014A8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_Has_Been_Initd_Variable_1) == 0x0014A9, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetParentActor_ReturnValue) == 0x0014B0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_20) == 0x0014B8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_ActorHasTag_ReturnValue) == 0x0014B9, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_39) == 0x0014BA, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_11) == 0x0014BC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetSpawnSymbolNum_Num_2) == 0x0014CC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetSpawnSymbolNum_Num_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_IsClosed_Variable_1) == 0x0014D0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Greater_IntInt_ReturnValue_4) == 0x0014D1, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetEncountPack_Pack_4) == 0x0014D8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetEncountPack_Pack_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetEncountPack_PackId_4) == 0x001530, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetEncountPack_PackId_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetEncountPack_Pack_5) == 0x001538, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetEncountPack_Pack_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetEncountPack_PackId_5) == 0x001590, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetEncountPack_PackId_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckStartEndFlag_OK_6) == 0x001594, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckStartEndFlag_OK_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckStartEndFlag_OK_7) == 0x001595, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckStartEndFlag_OK_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_40) == 0x001596, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetReqSpawnSymbolNum_Num) == 0x001598, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetReqSpawnSymbolNum_Num' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Greater_IntInt_ReturnValue_5) == 0x00159C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetMapCommon_rerutn_8) == 0x0015A0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetMapCommon_rerutn_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanOR_ReturnValue_10) == 0x0015A8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsBPI_Map_Common_8) == 0x0015B0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsBPI_Map_Common_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_19) == 0x0015C0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BPI_CheckMapPause_IsPause_3) == 0x0015C1, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BPI_CheckMapPause_IsPause_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CurrentMapIsDaath_ReturnValue) == 0x0015C2, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CurrentMapIsDaath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0015C4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0015C8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_24) == 0x0015CC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_13) == 0x0015D0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_27) == 0x0015D4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x0015D8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_25) == 0x0015DC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_13) == 0x0015E0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x001680, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_41) == 0x001681, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_42) == 0x001682, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Greater_IntInt_ReturnValue_6) == 0x001683, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Greater_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_NotEqual_IntInt_ReturnValue) == 0x001684, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_43) == 0x001685, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanAND_ReturnValue_3) == 0x001686, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanAND_ReturnValue_4) == 0x001687, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanAND_ReturnValue_5) == 0x001688, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanAND_ReturnValue_6) == 0x001689, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x00168A, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_20) == 0x00168C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_14) == 0x001690, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetDeadSaveID_DeadSaveID_2) == 0x001694, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetDeadSaveID_DeadSaveID_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckMapSymbolDeadFlag_ReturnValue_1) == 0x001698, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckMapSymbolDeadFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Add_ReturnValue) == 0x00169C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Greater_IntInt_ReturnValue_7) == 0x0016A0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Greater_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_25) == 0x0016A4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_15) == 0x0016A8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_28) == 0x0016AC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_12) == 0x0016B0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_14) == 0x0016C0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_21) == 0x001760, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_22) == 0x001761, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetTransform_ReturnValue_1) == 0x001770, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_21) == 0x0017A0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_4) == 0x0017A8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_20) == 0x0017B0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_16) == 0x0017B1, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0017B2, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_15) == 0x0017C0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_22) == 0x001860, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_23) == 0x001864, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_17) == 0x001865, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanAND_ReturnValue_7) == 0x001866, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x001867, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_26) == 0x001868, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_16) == 0x001870, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_16' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_24) == 0x001910, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x001911, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_44) == 0x001912, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_23) == 0x001914, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_18) == 0x001918, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetDeadSaveID_DeadSaveID_3) == 0x00191C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetDeadSaveID_DeadSaveID_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Greater_IntInt_ReturnValue_8) == 0x001920, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Greater_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_17) == 0x001928, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_17' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_24) == 0x001930, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsBP_Encount_Area_Base) == 0x001938, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsBP_Encount_Area_Base' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_21) == 0x001940, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_19) == 0x001941, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_25) == 0x001944, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_13) == 0x001948, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_20) == 0x001958, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_45) == 0x001959, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_14) == 0x00195C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_26) == 0x00196C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_21) == 0x001970, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_26) == 0x001974, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetEncountPack_Pack_6) == 0x001978, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetEncountPack_Pack_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetEncountPack_PackId_6) == 0x0019D0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetEncountPack_PackId_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_22) == 0x0019D4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_29) == 0x0019D8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_SymbolIndex) == 0x0019DC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_SymbolIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x0019E0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_27) == 0x0019E4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_23) == 0x0019E8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_30) == 0x0019EC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_15) == 0x0019F0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Greater_IntInt_ReturnValue_9) == 0x001A00, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Greater_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_16) == 0x001A04, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Greater_IntInt_ReturnValue_10) == 0x001A14, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Greater_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_BattleEnd) == 0x001A15, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_BattleEnd' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CustomEvent_ChainEncountNum) == 0x001A18, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CustomEvent_ChainEncountNum' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_17) == 0x001A1C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_24) == 0x001A2C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_25) == 0x001A2D, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x001A2E, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x001A2F, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanOR_ReturnValue_11) == 0x001A30, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_18) == 0x001A34, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_27) == 0x001A44, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_18) == 0x001A50, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_18' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x001AF0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GreaterEqual_IntInt_ReturnValue_9) == 0x001AF1, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GreaterEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_19) == 0x001AF8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_19' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_19) == 0x001B00, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_27) == 0x001B10, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_26) == 0x001B14, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_CreateDelegate_OutputDelegate_20) == 0x001B18, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanAND_ReturnValue_8) == 0x001B28, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetDevilName_ReturnValue) == 0x001B30, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetDevilName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Conv_TextToString_ReturnValue) == 0x001B48, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Concat_StrStr_ReturnValue) == 0x001B58, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Concat_StrStr_ReturnValue_1) == 0x001B68, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckMitamaGroup_Mitama) == 0x001B78, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckMitamaGroup_Mitama' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Conv_IntToString_ReturnValue) == 0x001B80, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Concat_StrStr_ReturnValue_2) == 0x001B90, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Concat_StrStr_ReturnValue_3) == 0x001BA0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Loop_Counter_Variable_28) == 0x001BB0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Loop_Counter_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_Has_Been_Initd_Variable_2) == 0x001BB4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_27) == 0x001BB5, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_IntInt_ReturnValue_31) == 0x001BB8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_IntInt_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_Event_StopTime) == 0x001BBC, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_Event_StopTime' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_20) == 0x001BC0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_20' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_28) == 0x001C60, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_28) == 0x001C64, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_IsValid_ReturnValue_25) == 0x001C65, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_IsClosed_Variable_2) == 0x001C66, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_5) == 0x001C68, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_22) == 0x001C70, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckAreaIN_AreaIN_1) == 0x001C71, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckAreaIN_AreaIN_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckAreaIN_AreaIN_2) == 0x001C72, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckAreaIN_AreaIN_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckAreaIN_AreaIN_3) == 0x001C73, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckAreaIN_AreaIN_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_MakeVector_ReturnValue_4) == 0x001C74, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_int_Array_Index_Variable_28) == 0x001C80, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_int_Array_Index_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_21) == 0x001C90, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_21' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_MakeTransform_ReturnValue_1) == 0x001D30, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_Variable_3) == 0x001D60, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Get_Item_22) == 0x001D68, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Get_Item_22' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_29) == 0x001D70, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_29) == 0x001D74, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_float_Variable) == 0x001D78, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanAND_ReturnValue_9) == 0x001D7C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_float_Variable_1) == 0x001D80, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetDevilName_ReturnValue_1) == 0x001D88, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetDevilName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CheckMitamaGroup_Mitama_1) == 0x001DA0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CheckMitamaGroup_Mitama_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Conv_TextToString_ReturnValue_1) == 0x001DA8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanOR_ReturnValue_12) == 0x001DB8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Concat_StrStr_ReturnValue_4) == 0x001DC0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Concat_StrStr_ReturnValue_5) == 0x001DD0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Conv_IntToString_ReturnValue_1) == 0x001DE0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_bool_Variable_4) == 0x001DF0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Concat_StrStr_ReturnValue_6) == 0x001DF8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Concat_StrStr_ReturnValue_7) == 0x001E08, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_Select_Default_3) == 0x001E18, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x001E1C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_CurrentMapIsDaath_ReturnValue_1) == 0x001E20, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_CurrentMapIsDaath_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x001E24, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_46) == 0x001E30, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_VectorVector_ReturnValue_1) == 0x001E34, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetMapCommon_rerutn_9) == 0x001E40, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetMapCommon_rerutn_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetLoadGamePause_ReturnValue) == 0x001E48, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetLoadGamePause_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsBPI_Map_Common_9) == 0x001E50, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsBPI_Map_Common_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_23) == 0x001E60, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x001E61, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BPI_CheckSymbolPause_Pause) == 0x001E62, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BPI_CheckSymbolPause_Pause' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetBlankSpawnIndex_Index_5) == 0x001E64, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetBlankSpawnIndex_Index_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Not_PreBool_ReturnValue_47) == 0x001E68, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Not_PreBool_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GreaterEqual_IntInt_ReturnValue_10) == 0x001E69, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GreaterEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_30) == 0x001E6C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Less_IntInt_ReturnValue_30) == 0x001E70, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Less_IntInt_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, Temp_object_Variable_1) == 0x001E78, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanAND_ReturnValue_10) == 0x001E88, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_LineTraceSingle_OutHit_1) == 0x001E8C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_LineTraceSingle_ReturnValue_1) == 0x001F14, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakHitResult_bBlockingHit) == 0x001F15, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakHitResult_bInitialOverlap) == 0x001F16, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakHitResult_Time) == 0x001F18, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakHitResult_Distance) == 0x001F1C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakHitResult_Location) == 0x001F20, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakHitResult_ImpactPoint) == 0x001F2C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakHitResult_Normal) == 0x001F38, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakHitResult_ImpactNormal) == 0x001F44, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakHitResult_PhysMat) == 0x001F50, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakHitResult_HitActor) == 0x001F58, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakHitResult_HitComponent) == 0x001F60, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakHitResult_HitBoneName) == 0x001F68, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakHitResult_HitItem) == 0x001F70, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakHitResult_ElementIndex) == 0x001F74, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakHitResult_FaceIndex) == 0x001F78, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakHitResult_TraceStart) == 0x001F7C, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BreakHitResult_TraceEnd) == 0x001F88, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Add_VectorVector_ReturnValue_2) == 0x001F94, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x001FA0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_Select_Default_4) == 0x001FA4, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Array_Length_ReturnValue_31) == 0x001FB0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Array_Length_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_GetGameInstance_ReturnValue) == 0x001FB8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_Greater_IntInt_ReturnValue_11) == 0x001FC0, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_Greater_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_AsBPI_Project_Game_Instance) == 0x001FC8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_AsBPI_Project_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, K2Node_DynamicCast_bSuccess_24) == 0x001FD8, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BooleanAND_ReturnValue_11) == 0x001FD9, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase, CallFunc_BPI_CheckLoadMap_LoadMap) == 0x001FDA, "Member 'BP_EncountAreaBase_C_ExecuteUbergraph_BP_EncountAreaBase::CallFunc_BPI_CheckLoadMap_LoadMap' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_SetStopTime
// 0x0001 (0x0001 - 0x0000)
struct BP_EncountAreaBase_C_BPI_SetStopTime final
{
public:
	bool                                          Param_StopTime;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_SetStopTime) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_SetStopTime");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_SetStopTime) == 0x000001, "Wrong size on BP_EncountAreaBase_C_BPI_SetStopTime");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetStopTime, Param_StopTime) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_SetStopTime::Param_StopTime' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CallEndBattle
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_CallEndBattle final
{
public:
	E_BTL_END                                     BattleEnd;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_994E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChainEncountNum;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_CallEndBattle) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_CallEndBattle");
static_assert(sizeof(BP_EncountAreaBase_C_CallEndBattle) == 0x000008, "Wrong size on BP_EncountAreaBase_C_CallEndBattle");
static_assert(offsetof(BP_EncountAreaBase_C_CallEndBattle, BattleEnd) == 0x000000, "Member 'BP_EncountAreaBase_C_CallEndBattle::BattleEnd' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CallEndBattle, ChainEncountNum) == 0x000004, "Member 'BP_EncountAreaBase_C_CallEndBattle::ChainEncountNum' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.KillSymbol_ForBattle
// 0x0004 (0x0004 - 0x0000)
struct BP_EncountAreaBase_C_KillSymbol_ForBattle final
{
public:
	int32                                         Symbolindex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_KillSymbol_ForBattle) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_KillSymbol_ForBattle");
static_assert(sizeof(BP_EncountAreaBase_C_KillSymbol_ForBattle) == 0x000004, "Wrong size on BP_EncountAreaBase_C_KillSymbol_ForBattle");
static_assert(offsetof(BP_EncountAreaBase_C_KillSymbol_ForBattle, Symbolindex) == 0x000000, "Member 'BP_EncountAreaBase_C_KillSymbol_ForBattle::Symbolindex' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_EncountAreaBase_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_ReceiveEndPlay");
static_assert(sizeof(BP_EncountAreaBase_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_EncountAreaBase_C_ReceiveEndPlay");
static_assert(offsetof(BP_EncountAreaBase_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_EncountAreaBase_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_EncountArea_DestroySymbolAll
// 0x0001 (0x0001 - 0x0000)
struct BP_EncountAreaBase_C_BPI_EncountArea_DestroySymbolAll final
{
public:
	bool                                          Respawn;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_EncountArea_DestroySymbolAll) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_EncountArea_DestroySymbolAll");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_EncountArea_DestroySymbolAll) == 0x000001, "Wrong size on BP_EncountAreaBase_C_BPI_EncountArea_DestroySymbolAll");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_EncountArea_DestroySymbolAll, Respawn) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_EncountArea_DestroySymbolAll::Respawn' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CallEndBattle_Core
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_CallEndBattle_Core final
{
public:
	E_BTL_END                                     BtlEndType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_994F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChainEncountNum;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_CallEndBattle_Core) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_CallEndBattle_Core");
static_assert(sizeof(BP_EncountAreaBase_C_CallEndBattle_Core) == 0x000008, "Wrong size on BP_EncountAreaBase_C_CallEndBattle_Core");
static_assert(offsetof(BP_EncountAreaBase_C_CallEndBattle_Core, BtlEndType) == 0x000000, "Member 'BP_EncountAreaBase_C_CallEndBattle_Core::BtlEndType' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CallEndBattle_Core, ChainEncountNum) == 0x000004, "Member 'BP_EncountAreaBase_C_CallEndBattle_Core::ChainEncountNum' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_EncountBattleStart
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_BPI_EncountBattleStart final
{
public:
	class APawn*                                  SymbolPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_EncountBattleStart) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_BPI_EncountBattleStart");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_EncountBattleStart) == 0x000008, "Wrong size on BP_EncountAreaBase_C_BPI_EncountBattleStart");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_EncountBattleStart, SymbolPawn) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_EncountBattleStart::SymbolPawn' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_EncountAreaBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_ReceiveTick");
static_assert(sizeof(BP_EncountAreaBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_EncountAreaBase_C_ReceiveTick");
static_assert(offsetof(BP_EncountAreaBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_EncountAreaBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.EndOverlap_SpawnHit
// 0x0020 (0x0020 - 0x0000)
struct BP_EncountAreaBase_C_EndOverlap_SpawnHit final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_EndOverlap_SpawnHit) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_EndOverlap_SpawnHit");
static_assert(sizeof(BP_EncountAreaBase_C_EndOverlap_SpawnHit) == 0x000020, "Wrong size on BP_EncountAreaBase_C_EndOverlap_SpawnHit");
static_assert(offsetof(BP_EncountAreaBase_C_EndOverlap_SpawnHit, OverlappedComponent) == 0x000000, "Member 'BP_EncountAreaBase_C_EndOverlap_SpawnHit::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndOverlap_SpawnHit, OtherActor) == 0x000008, "Member 'BP_EncountAreaBase_C_EndOverlap_SpawnHit::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndOverlap_SpawnHit, OtherComp) == 0x000010, "Member 'BP_EncountAreaBase_C_EndOverlap_SpawnHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndOverlap_SpawnHit, OtherBodyIndex) == 0x000018, "Member 'BP_EncountAreaBase_C_EndOverlap_SpawnHit::OtherBodyIndex' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BeginOverlap_SpawnHit
// 0x00A8 (0x00A8 - 0x0000)
struct BP_EncountAreaBase_C_BeginOverlap_SpawnHit final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9950[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_EncountAreaBase_C_BeginOverlap_SpawnHit) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_BeginOverlap_SpawnHit");
static_assert(sizeof(BP_EncountAreaBase_C_BeginOverlap_SpawnHit) == 0x0000A8, "Wrong size on BP_EncountAreaBase_C_BeginOverlap_SpawnHit");
static_assert(offsetof(BP_EncountAreaBase_C_BeginOverlap_SpawnHit, OverlappedComponent) == 0x000000, "Member 'BP_EncountAreaBase_C_BeginOverlap_SpawnHit::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BeginOverlap_SpawnHit, OtherActor) == 0x000008, "Member 'BP_EncountAreaBase_C_BeginOverlap_SpawnHit::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BeginOverlap_SpawnHit, OtherComp) == 0x000010, "Member 'BP_EncountAreaBase_C_BeginOverlap_SpawnHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BeginOverlap_SpawnHit, OtherBodyIndex) == 0x000018, "Member 'BP_EncountAreaBase_C_BeginOverlap_SpawnHit::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BeginOverlap_SpawnHit, bFromSweep) == 0x00001C, "Member 'BP_EncountAreaBase_C_BeginOverlap_SpawnHit::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BeginOverlap_SpawnHit, SweepResult) == 0x000020, "Member 'BP_EncountAreaBase_C_BeginOverlap_SpawnHit::SweepResult' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.EvtDis_Dead_
// 0x0010 (0x0010 - 0x0000)
struct BP_EncountAreaBase_C_EvtDis_Dead_ final
{
public:
	class AActor*                                 Symbol;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Save;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_EvtDis_Dead_) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_EvtDis_Dead_");
static_assert(sizeof(BP_EncountAreaBase_C_EvtDis_Dead_) == 0x000010, "Wrong size on BP_EncountAreaBase_C_EvtDis_Dead_");
static_assert(offsetof(BP_EncountAreaBase_C_EvtDis_Dead_, Symbol) == 0x000000, "Member 'BP_EncountAreaBase_C_EvtDis_Dead_::Symbol' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EvtDis_Dead_, Save) == 0x000008, "Member 'BP_EncountAreaBase_C_EvtDis_Dead_::Save' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.EvtDis_SpawnEnd_
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_EvtDis_SpawnEnd_ final
{
public:
	class ABP_EncountAreaSpawner_C*               This;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_EvtDis_SpawnEnd_) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_EvtDis_SpawnEnd_");
static_assert(sizeof(BP_EncountAreaBase_C_EvtDis_SpawnEnd_) == 0x000008, "Wrong size on BP_EncountAreaBase_C_EvtDis_SpawnEnd_");
static_assert(offsetof(BP_EncountAreaBase_C_EvtDis_SpawnEnd_, This) == 0x000000, "Member 'BP_EncountAreaBase_C_EvtDis_SpawnEnd_::This' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.OnDestroyedSymbol
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_OnDestroyedSymbol final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_OnDestroyedSymbol) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_OnDestroyedSymbol");
static_assert(sizeof(BP_EncountAreaBase_C_OnDestroyedSymbol) == 0x000008, "Wrong size on BP_EncountAreaBase_C_OnDestroyedSymbol");
static_assert(offsetof(BP_EncountAreaBase_C_OnDestroyedSymbol, DestroyedActor) == 0x000000, "Member 'BP_EncountAreaBase_C_OnDestroyedSymbol::DestroyedActor' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.OnSpawnDevil
// 0x0010 (0x0010 - 0x0000)
struct BP_EncountAreaBase_C_OnSpawnDevil final
{
public:
	class ACustomPawn*                            Devil;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EncountAreaSpawner_C*               This;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_OnSpawnDevil) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_OnSpawnDevil");
static_assert(sizeof(BP_EncountAreaBase_C_OnSpawnDevil) == 0x000010, "Wrong size on BP_EncountAreaBase_C_OnSpawnDevil");
static_assert(offsetof(BP_EncountAreaBase_C_OnSpawnDevil, Devil) == 0x000000, "Member 'BP_EncountAreaBase_C_OnSpawnDevil::Devil' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_OnSpawnDevil, This) == 0x000008, "Member 'BP_EncountAreaBase_C_OnSpawnDevil::This' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.ReqSpawnSymbol
// 0x0010 (0x0010 - 0x0000)
struct BP_EncountAreaBase_C_ReqSpawnSymbol final
{
public:
	int32                                         Param_BlankIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_ReqSpawnSymbol) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_ReqSpawnSymbol");
static_assert(sizeof(BP_EncountAreaBase_C_ReqSpawnSymbol) == 0x000010, "Wrong size on BP_EncountAreaBase_C_ReqSpawnSymbol");
static_assert(offsetof(BP_EncountAreaBase_C_ReqSpawnSymbol, Param_BlankIndex) == 0x000000, "Member 'BP_EncountAreaBase_C_ReqSpawnSymbol::Param_BlankIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ReqSpawnSymbol, Location) == 0x000004, "Member 'BP_EncountAreaBase_C_ReqSpawnSymbol::Location' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.SpawnSymbolOne_Core
// 0x0040 (0x0040 - 0x0000)
struct BP_EncountAreaBase_C_SpawnSymbolOne_Core final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsManualPos;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9951[0xB];                                     // 0x0005(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ManualPos;                                         // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_SpawnSymbolOne_Core) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_SpawnSymbolOne_Core");
static_assert(sizeof(BP_EncountAreaBase_C_SpawnSymbolOne_Core) == 0x000040, "Wrong size on BP_EncountAreaBase_C_SpawnSymbolOne_Core");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnSymbolOne_Core, Param_Index) == 0x000000, "Member 'BP_EncountAreaBase_C_SpawnSymbolOne_Core::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnSymbolOne_Core, IsManualPos) == 0x000004, "Member 'BP_EncountAreaBase_C_SpawnSymbolOne_Core::IsManualPos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnSymbolOne_Core, ManualPos) == 0x000010, "Member 'BP_EncountAreaBase_C_SpawnSymbolOne_Core::ManualPos' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.UserConstructionScript
// 0x0440 (0x0440 - 0x0000)
struct BP_EncountAreaBase_C_UserConstructionScript final
{
public:
	bool                                          L_ConstCheck;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9952[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     NewLocalVar_2;                                     // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         L_index;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_SplineNum;                                       // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       L_Spline;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9953[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9954[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9955[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_CHARA_MOTION_ID>                     K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_CHARA_MOTION_ID                             CallFunc_Array_Get_Item;                           // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9956[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9957[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9958[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TArray<struct FAssetData>                     CallFunc_GetAssetsByClass_OutAssetData;            // 0x00C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAssetsByClass_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9959[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_995A[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAssetData                             CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0060)(HasGetValueTypeHash)
	class UObject*                                CallFunc_GetAsset_ReturnValue;                     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UCharaMotionTable*                      K2Node_DynamicCast_AsChara_Motion_Table;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_995B[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ExtractInt_FromStr_Int;                   // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_995C[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharaMotion                           CallFunc_Map_Find_Value;                           // 0x0170(0x0018)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_995D[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default;                             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_995E[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_995F[0xF];                                     // 0x01C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01D0(0x0030)(IsPlainOldData, NoDestructor)
	class UArrowComponent*                        CallFunc_AddComponent_ReturnValue;                 // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9960[0xC];                                     // 0x0214(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	class UArrowComponent*                        CallFunc_AddComponent_ReturnValue_1;               // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9961[0x3];                                     // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0260(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9962[0x3];                                     // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransformAtSplinePoint_ReturnValue;    // 0x0280(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9963[0x3];                                     // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9964[0x8];                                     // 0x02E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x02F0(0x0030)(IsPlainOldData, NoDestructor)
	class UTextRenderComponent*                   CallFunc_AddComponent_ReturnValue_2;               // 0x0320(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9965[0x3];                                     // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_BPI_GetSymbolSpline_Spline;               // 0x0330(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9966[0x7];                                     // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_CalcSpawnPointList_SpawnPointList;        // 0x0340(0x0010)(ReferenceParm)
	struct FTransform                             CallFunc_Array_Get_Item_2;                         // 0x0350(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x039C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9967[0x3];                                     // 0x03A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x03AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_EncountAreaBase_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_UserConstructionScript");
static_assert(sizeof(BP_EncountAreaBase_C_UserConstructionScript) == 0x000440, "Wrong size on BP_EncountAreaBase_C_UserConstructionScript");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, L_ConstCheck) == 0x000000, "Member 'BP_EncountAreaBase_C_UserConstructionScript::L_ConstCheck' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, NewLocalVar_2) == 0x000008, "Member 'BP_EncountAreaBase_C_UserConstructionScript::NewLocalVar_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, L_index) == 0x000018, "Member 'BP_EncountAreaBase_C_UserConstructionScript::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, L_SplineNum) == 0x00001C, "Member 'BP_EncountAreaBase_C_UserConstructionScript::L_SplineNum' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, L_Spline) == 0x000020, "Member 'BP_EncountAreaBase_C_UserConstructionScript::L_Spline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, Temp_int_Variable) == 0x000028, "Member 'BP_EncountAreaBase_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_EncountAreaBase_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_EncountAreaBase_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'BP_EncountAreaBase_C_UserConstructionScript::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_2) == 0x000044, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000048, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x00004C, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_FMax_ReturnValue) == 0x000054, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'BP_EncountAreaBase_C_UserConstructionScript::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_EncountAreaBase_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_2) == 0x000078, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000079, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000080, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue) == 0x000098, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_GetAssetRegistry_ReturnValue) == 0x0000B0, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_GetAssetsByClass_OutAssetData) == 0x0000C0, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_GetAssetsByClass_OutAssetData' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_GetAssetsByClass_ReturnValue) == 0x0000D0, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_GetAssetsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_1) == 0x0000D4, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_3) == 0x0000D8, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, Temp_int_Array_Index_Variable_2) == 0x0000DC, "Member 'BP_EncountAreaBase_C_UserConstructionScript::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_GetAsset_ReturnValue) == 0x000140, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_GetAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Conv_NameToString_ReturnValue) == 0x000148, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, K2Node_DynamicCast_AsChara_Motion_Table) == 0x000158, "Member 'BP_EncountAreaBase_C_UserConstructionScript::K2Node_DynamicCast_AsChara_Motion_Table' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'BP_EncountAreaBase_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_ExtractInt_FromStr_Int) == 0x000164, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_ExtractInt_FromStr_Int' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000168, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Map_Find_Value) == 0x000170, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Map_Find_ReturnValue) == 0x000188, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_4) == 0x000189, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_5) == 0x00018A, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, Temp_bool_Variable) == 0x00018B, "Member 'BP_EncountAreaBase_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, K2Node_Select_Default) == 0x000190, "Member 'BP_EncountAreaBase_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_6) == 0x000198, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue) == 0x0001A0, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001B0, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_7) == 0x0001C0, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue) == 0x0001D0, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000200, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue) == 0x000208, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue_1) == 0x000220, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue_1) == 0x000250, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_8) == 0x000258, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, Temp_int_Loop_Counter_Variable_2) == 0x00025C, "Member 'BP_EncountAreaBase_C_UserConstructionScript::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Conv_IntToText_ReturnValue) == 0x000260, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue_1) == 0x000278, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_3) == 0x00027C, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_GetTransformAtSplinePoint_ReturnValue) == 0x000280, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_GetTransformAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002B0, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_BreakTransform_Location) == 0x0002B4, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_BreakTransform_Rotation) == 0x0002C0, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_BreakTransform_Scale) == 0x0002CC, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002D8, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x0002DC, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue_2) == 0x0002F0, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue_2) == 0x000320, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000328, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_9) == 0x00032C, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_BPI_GetSymbolSpline_Spline) == 0x000330, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_BPI_GetSymbolSpline_Spline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x000338, "Member 'BP_EncountAreaBase_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_CalcSpawnPointList_SpawnPointList) == 0x000340, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_CalcSpawnPointList_SpawnPointList' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Array_Get_Item_2) == 0x000350, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_2) == 0x000380, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_BreakTransform_Location_1) == 0x000384, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_BreakTransform_Rotation_1) == 0x000390, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_BreakTransform_Scale_1) == 0x00039C, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue_2) == 0x0003A8, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UserConstructionScript, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0003AC, "Member 'BP_EncountAreaBase_C_UserConstructionScript::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetRandomSpawnPos
// 0x0060 (0x0060 - 0x0000)
struct BP_EncountAreaBase_C_GetRandomSpawnPos final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_GetRandomSpawnPos) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_GetRandomSpawnPos");
static_assert(sizeof(BP_EncountAreaBase_C_GetRandomSpawnPos) == 0x000060, "Wrong size on BP_EncountAreaBase_C_GetRandomSpawnPos");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomSpawnPos, Transform) == 0x000000, "Member 'BP_EncountAreaBase_C_GetRandomSpawnPos::Transform' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomSpawnPos, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_EncountAreaBase_C_GetRandomSpawnPos::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetRandomEncountId
// 0x00F8 (0x00F8 - 0x0000)
struct BP_EncountAreaBase_C_GetRandomEncountId final
{
public:
	int32                                         ArrayIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MITAMA_ENCOUNT                              MitamaType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9968[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_EncountID;                                   // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPackEncount                           L_Pack;                                            // 0x0010(0x0058)(Edit, BlueprintVisible)
	int32                                         L_Len;                                             // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MITAMA_ENCOUNT                              Temp_byte_Variable;                                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9969[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_996A[0x1];                                     // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_996B[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPackEncount                           CallFunc_GetEncountPack_Pack;                      // 0x0080(0x0058)()
	int32                                         CallFunc_GetEncountPack_PackId;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_996C[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRandomEncountId_Dungeon_ReturnValue;   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue_1;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRandomEncountId_Dungeon_ReturnValue_1; // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_GetRandomEncountId) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_GetRandomEncountId");
static_assert(sizeof(BP_EncountAreaBase_C_GetRandomEncountId) == 0x0000F8, "Wrong size on BP_EncountAreaBase_C_GetRandomEncountId");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, ArrayIndex) == 0x000000, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::ArrayIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, MitamaType) == 0x000004, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::MitamaType' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, Param_EncountID) == 0x000008, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::Param_EncountID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, L_index) == 0x00000C, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, L_Pack) == 0x000010, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::L_Pack' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, L_Len) == 0x000068, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::L_Len' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, Temp_byte_Variable) == 0x00006C, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, Temp_int_Variable) == 0x000070, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, Temp_bool_Variable) == 0x000074, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, Temp_bool_Variable_1) == 0x000075, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, CallFunc_Greater_IntInt_ReturnValue) == 0x000076, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, K2Node_Select_Default) == 0x000078, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, CallFunc_GetEncountPack_Pack) == 0x000080, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::CallFunc_GetEncountPack_Pack' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, CallFunc_GetEncountPack_PackId) == 0x0000D8, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::CallFunc_GetEncountPack_PackId' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000DC, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, CallFunc_GetMapID_ReturnValue) == 0x0000E0, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, K2Node_Select_Default_1) == 0x0000E4, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, CallFunc_GetRandomEncountId_Dungeon_ReturnValue) == 0x0000E8, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::CallFunc_GetRandomEncountId_Dungeon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, CallFunc_GetMapID_ReturnValue_1) == 0x0000EC, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::CallFunc_GetMapID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, K2Node_Select_Default_2) == 0x0000F0, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId, CallFunc_GetRandomEncountId_Dungeon_ReturnValue_1) == 0x0000F4, "Member 'BP_EncountAreaBase_C_GetRandomEncountId::CallFunc_GetRandomEncountId_Dungeon_ReturnValue_1' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CalcSpawnPointList_Box
// 0x0100 (0x0100 - 0x0000)
struct BP_EncountAreaBase_C_CalcSpawnPointList_Box final
{
public:
	struct FVector                                Box;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LineTrace;                                         // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_996D[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_Pos;                                             // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Index2;                                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index1;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Num;                                             // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Width;                                           // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Box;                                             // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_996E[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_996F[0xC];                                     // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9970[0xC];                                     // 0x00A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TraceSpawnPoint_OutSpawnPoint;            // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TraceSpawnPoint_Success;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9971[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9972[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CalcSpawnPointList_Box) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_CalcSpawnPointList_Box");
static_assert(sizeof(BP_EncountAreaBase_C_CalcSpawnPointList_Box) == 0x000100, "Wrong size on BP_EncountAreaBase_C_CalcSpawnPointList_Box");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, Box) == 0x000000, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::Box' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, LineTrace) == 0x00000C, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::LineTrace' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, L_Pos) == 0x000010, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::L_Pos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, L_Index2) == 0x00001C, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::L_Index2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, L_index1) == 0x000020, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::L_index1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, L_Num) == 0x000024, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::L_Num' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, L_Width) == 0x000028, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::L_Width' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, L_Box) == 0x00002C, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::L_Box' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, CallFunc_BreakTransform_Location) == 0x000080, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, CallFunc_BreakTransform_Rotation) == 0x00008C, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, CallFunc_BreakTransform_Scale) == 0x000098, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, CallFunc_TraceSpawnPoint_OutSpawnPoint) == 0x0000B0, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::CallFunc_TraceSpawnPoint_OutSpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, CallFunc_TraceSpawnPoint_Success) == 0x0000E0, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::CallFunc_TraceSpawnPoint_Success' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, Temp_int_Loop_Counter_Variable) == 0x0000E4, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, CallFunc_Add_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, CallFunc_Array_Add_ReturnValue) == 0x0000F0, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, CallFunc_Array_Length_ReturnValue_1) == 0x0000F4, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Box, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Box::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CalcSpawnPointList
// 0x0020 (0x0020 - 0x0000)
struct BP_EncountAreaBase_C_CalcSpawnPointList final
{
public:
	bool                                          LineTrace;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9973[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     Param_SpawnPointList;                              // 0x0008(0x0010)(Parm, OutParm)
	class AActor*                                 L_AddPoint;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_CalcSpawnPointList) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_CalcSpawnPointList");
static_assert(sizeof(BP_EncountAreaBase_C_CalcSpawnPointList) == 0x000020, "Wrong size on BP_EncountAreaBase_C_CalcSpawnPointList");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList, LineTrace) == 0x000000, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList::LineTrace' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList, Param_SpawnPointList) == 0x000008, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList::Param_SpawnPointList' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList, L_AddPoint) == 0x000018, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList::L_AddPoint' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.EndSpawnSymbol
// 0x0260 (0x0260 - 0x0000)
struct BP_EncountAreaBase_C_EndSpawnSymbol final
{
public:
	bool                                          IsEffect;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsIgnoreCome;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9974[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  IgnorePawn;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReqRespawn;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsEffect_WhenNotNormalAct;                         // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_ReqRespawn;                                      // 0x0012(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9975[0xD];                                     // 0x0013(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       L_SymbolInfo;                                      // 0x0020(0x00A0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class APawn*                                  L_IgnorePawn;                                      // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9976[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             L_Comp;                                            // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_IsIgnoreCome;                                    // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_IsEffect;                                        // 0x00D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9977[0x2];                                     // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9978[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9979[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_997A[0x9];                                     // 0x0107(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0110(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0140(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_997B[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent;   // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_997C[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_1; // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_997D[0xF];                                     // 0x0191(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item;                           // 0x01A0(0x00A0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_997E[0x2];                                     // 0x0246(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountAreaSpawner_C*               CallFunc_Array_Get_Item_1;                         // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0256(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0257(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_EndSpawnSymbol) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_EndSpawnSymbol");
static_assert(sizeof(BP_EncountAreaBase_C_EndSpawnSymbol) == 0x000260, "Wrong size on BP_EncountAreaBase_C_EndSpawnSymbol");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, IsEffect) == 0x000000, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::IsEffect' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, IsIgnoreCome) == 0x000001, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::IsIgnoreCome' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, IgnorePawn) == 0x000008, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::IgnorePawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, ReqRespawn) == 0x000010, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::ReqRespawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, IsEffect_WhenNotNormalAct) == 0x000011, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::IsEffect_WhenNotNormalAct' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, L_ReqRespawn) == 0x000012, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::L_ReqRespawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, L_SymbolInfo) == 0x000020, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::L_SymbolInfo' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, L_IgnorePawn) == 0x0000C0, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::L_IgnorePawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, L_index) == 0x0000C8, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, L_Comp) == 0x0000D0, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::L_Comp' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, L_IsIgnoreCome) == 0x0000D8, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::L_IsIgnoreCome' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, L_IsEffect) == 0x0000D9, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::L_IsEffect' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, Temp_int_Array_Index_Variable) == 0x0000DC, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, Temp_int_Loop_Counter_Variable) == 0x0000E0, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_Add_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000E9, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0000EA, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x0000EB, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x0000EC, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, Temp_int_Loop_Counter_Variable_1) == 0x0000F0, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_BooleanAND_ReturnValue) == 0x0000F4, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F8, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_BooleanAND_ReturnValue_1) == 0x0000FC, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_BooleanAND_ReturnValue_2) == 0x0000FD, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_BooleanAND_ReturnValue_3) == 0x0000FE, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_Not_PreBool_ReturnValue) == 0x0000FF, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_BooleanOR_ReturnValue) == 0x000100, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_BooleanAND_ReturnValue_4) == 0x000101, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_Not_PreBool_ReturnValue_1) == 0x000102, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_Not_PreBool_ReturnValue_2) == 0x000103, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_BooleanOR_ReturnValue_1) == 0x000104, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_BooleanAND_ReturnValue_5) == 0x000105, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_Not_PreBool_ReturnValue_3) == 0x000106, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_GetTransform_ReturnValue) == 0x000110, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_GetTransform_ReturnValue_1) == 0x000140, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, Temp_int_Array_Index_Variable_1) == 0x000170, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent) == 0x000178, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_1) == 0x000188, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, K2Node_DynamicCast_bSuccess_1) == 0x000190, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_Array_Length_ReturnValue) == 0x000240, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_Less_IntInt_ReturnValue) == 0x000244, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000245, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_Array_Get_Item_1) == 0x000248, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_Array_Length_ReturnValue_1) == 0x000250, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_IsValid_ReturnValue_1) == 0x000254, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_Less_IntInt_ReturnValue_1) == 0x000255, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_Not_PreBool_ReturnValue_4) == 0x000256, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000257, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000258, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000259, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_BooleanOR_ReturnValue_2) == 0x00025A, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_BooleanOR_ReturnValue_3) == 0x00025B, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_EndSpawnSymbol, CallFunc_Not_PreBool_ReturnValue_5) == 0x00025C, "Member 'BP_EncountAreaBase_C_EndSpawnSymbol::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.ShowSymbolDebugMemo
// 0x0228 (0x0228 - 0x0000)
struct BP_EncountAreaBase_C_ShowSymbolDebugMemo final
{
public:
	struct FPackEncount                           L_Pack;                                            // 0x0000(0x0058)(Edit, BlueprintVisible)
	TArray<int32>                                 L_EnemyList;                                       // 0x0058(0x0010)(Edit, BlueprintVisible)
	class FString                                 L_Str;                                             // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_997F[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9980[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPackEncountCore                       CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9981[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOneEncountData                        CallFunc_GetEncountData_ReturnValue;               // 0x00A8(0x0040)(ConstParm)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9982[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9983[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9984[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDevilName_ReturnValue;                 // 0x0110(0x0018)(ConstParm)
	class FText                                   CallFunc_GetDevilName_ReturnValue_1;               // 0x0128(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9985[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPackEncount                           CallFunc_GetEncountPack_Pack;                      // 0x0178(0x0058)()
	int32                                         CallFunc_GetEncountPack_PackId;                    // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9986[0x3];                                     // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01D8(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9987[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_ShowSymbolDebugMemo) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_ShowSymbolDebugMemo");
static_assert(sizeof(BP_EncountAreaBase_C_ShowSymbolDebugMemo) == 0x000228, "Wrong size on BP_EncountAreaBase_C_ShowSymbolDebugMemo");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, L_Pack) == 0x000000, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::L_Pack' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, L_EnemyList) == 0x000058, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::L_EnemyList' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, L_Str) == 0x000068, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::L_Str' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, Temp_int_Array_Index_Variable_1) == 0x000090, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, Temp_int_Loop_Counter_Variable_1) == 0x000094, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_GetEncountData_ReturnValue) == 0x0000A8, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_GetEncountData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F0, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, Temp_bool_Variable) == 0x000100, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_Array_Get_Item_1) == 0x000104, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, K2Node_Select_Default) == 0x000108, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_GetDevilName_ReturnValue) == 0x000110, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_GetDevilName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_GetDevilName_ReturnValue_1) == 0x000128, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_GetDevilName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_Conv_TextToString_ReturnValue) == 0x000140, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000150, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000160, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000170, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_Array_Length_ReturnValue_1) == 0x000174, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_GetEncountPack_Pack) == 0x000178, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_GetEncountPack_Pack' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_GetEncountPack_PackId) == 0x0001D0, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_GetEncountPack_PackId' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001D4, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_Conv_StringToText_ReturnValue) == 0x0001D8, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001F0, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000200, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_IsValid_ReturnValue) == 0x000210, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowSymbolDebugMemo, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000218, "Member 'BP_EncountAreaBase_C_ShowSymbolDebugMemo::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetEncountPack
// 0x0278 (0x0278 - 0x0000)
struct BP_EncountAreaBase_C_GetEncountPack final
{
public:
	int32                                         ArrayIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MITAMA_ENCOUNT                              MitamaType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9988[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPackEncount                           Pack;                                              // 0x0008(0x0058)(Parm, OutParm)
	int32                                         Param_PackId;                                      // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Array;                                           // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9989[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEncountPackData_Dungeon_packId;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPackEncount                           CallFunc_GetEncountPackData_Dungeon_ReturnValue;   // 0x0080(0x0058)(ConstParm)
	int32                                         CallFunc_GetMapID_ReturnValue_2;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEncountPackData_Dungeon_packId_1;      // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_998A[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPackEncount                           CallFunc_GetEncountPackData_Dungeon_ReturnValue_1; // 0x00E8(0x0058)(ConstParm)
	int32                                         CallFunc_GetMapID_ReturnValue_3;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEncountPackData_Dungeon_packId_2;      // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_998B[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPackEncount                           CallFunc_GetEncountPackData_Dungeon_ReturnValue_2; // 0x0150(0x0058)(ConstParm)
	bool                                          Temp_bool_Variable_4;                              // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_998C[0x3];                                     // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_3;                           // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEncountPackData_Dungeon_packId_3;      // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_998D[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPackEncount                           CallFunc_GetEncountPackData_Dungeon_ReturnValue_3; // 0x01B8(0x0058)(ConstParm)
	int32                                         CallFunc_GetMapID_ReturnValue_4;                   // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_4;                           // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEncountPackData_Dungeon_packId_4;      // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_998E[0x4];                                     // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPackEncount                           CallFunc_GetEncountPackData_Dungeon_ReturnValue_4; // 0x0220(0x0058)(ConstParm)
};
static_assert(alignof(BP_EncountAreaBase_C_GetEncountPack) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_GetEncountPack");
static_assert(sizeof(BP_EncountAreaBase_C_GetEncountPack) == 0x000278, "Wrong size on BP_EncountAreaBase_C_GetEncountPack");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, ArrayIndex) == 0x000000, "Member 'BP_EncountAreaBase_C_GetEncountPack::ArrayIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, MitamaType) == 0x000004, "Member 'BP_EncountAreaBase_C_GetEncountPack::MitamaType' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, Pack) == 0x000008, "Member 'BP_EncountAreaBase_C_GetEncountPack::Pack' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, Param_PackId) == 0x000060, "Member 'BP_EncountAreaBase_C_GetEncountPack::Param_PackId' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, L_Array) == 0x000064, "Member 'BP_EncountAreaBase_C_GetEncountPack::L_Array' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, Temp_bool_Variable) == 0x000068, "Member 'BP_EncountAreaBase_C_GetEncountPack::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, K2Node_SwitchEnum_CmpSuccess) == 0x000069, "Member 'BP_EncountAreaBase_C_GetEncountPack::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, Temp_bool_Variable_1) == 0x00006A, "Member 'BP_EncountAreaBase_C_GetEncountPack::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, Temp_bool_Variable_2) == 0x00006B, "Member 'BP_EncountAreaBase_C_GetEncountPack::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, CallFunc_GetMapID_ReturnValue) == 0x00006C, "Member 'BP_EncountAreaBase_C_GetEncountPack::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, CallFunc_GetMapID_ReturnValue_1) == 0x000070, "Member 'BP_EncountAreaBase_C_GetEncountPack::CallFunc_GetMapID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, Temp_bool_Variable_3) == 0x000074, "Member 'BP_EncountAreaBase_C_GetEncountPack::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, K2Node_Select_Default) == 0x000078, "Member 'BP_EncountAreaBase_C_GetEncountPack::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, CallFunc_GetEncountPackData_Dungeon_packId) == 0x00007C, "Member 'BP_EncountAreaBase_C_GetEncountPack::CallFunc_GetEncountPackData_Dungeon_packId' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, CallFunc_GetEncountPackData_Dungeon_ReturnValue) == 0x000080, "Member 'BP_EncountAreaBase_C_GetEncountPack::CallFunc_GetEncountPackData_Dungeon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, CallFunc_GetMapID_ReturnValue_2) == 0x0000D8, "Member 'BP_EncountAreaBase_C_GetEncountPack::CallFunc_GetMapID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, K2Node_Select_Default_1) == 0x0000DC, "Member 'BP_EncountAreaBase_C_GetEncountPack::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, CallFunc_GetEncountPackData_Dungeon_packId_1) == 0x0000E0, "Member 'BP_EncountAreaBase_C_GetEncountPack::CallFunc_GetEncountPackData_Dungeon_packId_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, CallFunc_GetEncountPackData_Dungeon_ReturnValue_1) == 0x0000E8, "Member 'BP_EncountAreaBase_C_GetEncountPack::CallFunc_GetEncountPackData_Dungeon_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, CallFunc_GetMapID_ReturnValue_3) == 0x000140, "Member 'BP_EncountAreaBase_C_GetEncountPack::CallFunc_GetMapID_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, K2Node_Select_Default_2) == 0x000144, "Member 'BP_EncountAreaBase_C_GetEncountPack::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, CallFunc_GetEncountPackData_Dungeon_packId_2) == 0x000148, "Member 'BP_EncountAreaBase_C_GetEncountPack::CallFunc_GetEncountPackData_Dungeon_packId_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, CallFunc_GetEncountPackData_Dungeon_ReturnValue_2) == 0x000150, "Member 'BP_EncountAreaBase_C_GetEncountPack::CallFunc_GetEncountPackData_Dungeon_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, Temp_bool_Variable_4) == 0x0001A8, "Member 'BP_EncountAreaBase_C_GetEncountPack::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, K2Node_Select_Default_3) == 0x0001AC, "Member 'BP_EncountAreaBase_C_GetEncountPack::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, CallFunc_GetEncountPackData_Dungeon_packId_3) == 0x0001B0, "Member 'BP_EncountAreaBase_C_GetEncountPack::CallFunc_GetEncountPackData_Dungeon_packId_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, CallFunc_GetEncountPackData_Dungeon_ReturnValue_3) == 0x0001B8, "Member 'BP_EncountAreaBase_C_GetEncountPack::CallFunc_GetEncountPackData_Dungeon_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, CallFunc_GetMapID_ReturnValue_4) == 0x000210, "Member 'BP_EncountAreaBase_C_GetEncountPack::CallFunc_GetMapID_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, K2Node_Select_Default_4) == 0x000214, "Member 'BP_EncountAreaBase_C_GetEncountPack::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, CallFunc_GetEncountPackData_Dungeon_packId_4) == 0x000218, "Member 'BP_EncountAreaBase_C_GetEncountPack::CallFunc_GetEncountPackData_Dungeon_packId_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetEncountPack, CallFunc_GetEncountPackData_Dungeon_ReturnValue_4) == 0x000220, "Member 'BP_EncountAreaBase_C_GetEncountPack::CallFunc_GetEncountPackData_Dungeon_ReturnValue_4' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.SetView
// 0x0050 (0x0050 - 0x0000)
struct BP_EncountAreaBase_C_SetView final
{
public:
	bool                                          IsView;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewParam;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_View;                                            // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_998F[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UArrowComponent*>                L_list;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9990[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowComponent*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9991[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UArrowComponent*>                CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9992[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_SetView) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_SetView");
static_assert(sizeof(BP_EncountAreaBase_C_SetView) == 0x000050, "Wrong size on BP_EncountAreaBase_C_SetView");
static_assert(offsetof(BP_EncountAreaBase_C_SetView, IsView) == 0x000000, "Member 'BP_EncountAreaBase_C_SetView::IsView' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetView, NewParam) == 0x000001, "Member 'BP_EncountAreaBase_C_SetView::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetView, L_View) == 0x000002, "Member 'BP_EncountAreaBase_C_SetView::L_View' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetView, L_list) == 0x000008, "Member 'BP_EncountAreaBase_C_SetView::L_list' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetView, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_EncountAreaBase_C_SetView::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetView, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EncountAreaBase_C_SetView::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetView, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EncountAreaBase_C_SetView::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetView, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_EncountAreaBase_C_SetView::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetView, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000030, "Member 'BP_EncountAreaBase_C_SetView::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetView, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_EncountAreaBase_C_SetView::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetView, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_EncountAreaBase_C_SetView::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetView, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_EncountAreaBase_C_SetView::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetRate
// 0x002C (0x002C - 0x0000)
struct BP_EncountAreaBase_C_GetRate final
{
public:
	float                                         TotalRate;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Num;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_TotalRate;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_GetRate) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_GetRate");
static_assert(sizeof(BP_EncountAreaBase_C_GetRate) == 0x00002C, "Wrong size on BP_EncountAreaBase_C_GetRate");
static_assert(offsetof(BP_EncountAreaBase_C_GetRate, TotalRate) == 0x000000, "Member 'BP_EncountAreaBase_C_GetRate::TotalRate' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRate, Num) == 0x000004, "Member 'BP_EncountAreaBase_C_GetRate::Num' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRate, Rate) == 0x000008, "Member 'BP_EncountAreaBase_C_GetRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRate, L_Num) == 0x00000C, "Member 'BP_EncountAreaBase_C_GetRate::L_Num' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRate, L_TotalRate) == 0x000010, "Member 'BP_EncountAreaBase_C_GetRate::L_TotalRate' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_EncountAreaBase_C_GetRate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRate, CallFunc_Max_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_GetRate::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRate, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'BP_EncountAreaBase_C_GetRate::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_EncountAreaBase_C_GetRate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRate, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_EncountAreaBase_C_GetRate::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRate, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000028, "Member 'BP_EncountAreaBase_C_GetRate::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CalcSpawnPointList_Spline
// 0x0260 (0x0260 - 0x0000)
struct BP_EncountAreaBase_C_CalcSpawnPointList_Spline final
{
public:
	class USplineComponent*                       Spline;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LineTrace;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_FindSplineAttack;                                // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9993[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     L_PrioPoints;                                      // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<struct FTransform>                     L_Points;                                          // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         L_Key;                                             // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9994[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 L_Keys;                                            // 0x0038(0x0010)(Edit, BlueprintVisible)
	float                                         L_Space;                                           // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_PointNum;                                        // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_TotalLength;                                     // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9995[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       L_Spline;                                          // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Pos;                                             // 0x0060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9996[0x1];                                     // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSpawnSplinePoint_SplinePoints;         // 0x0080(0x0010)(ReferenceParm)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9997[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSpawnSplinePoint_SplinePoints_1;       // 0x0098(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFly_IsFly;                           // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9998[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9999[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSymbolActPattern                      CallFunc_Array_Get_Item;                           // 0x00C0(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_999A[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_999B[0xC];                                     // 0x00E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_999C[0xB];                                     // 0x0145(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TraceSpawnPoint_OutSpawnPoint;            // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TraceSpawnPoint_Success;                  // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_999D[0x2];                                     // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_999E[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     K2Node_MakeArray_Array;                            // 0x0198(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_999F[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99A0[0x8];                                     // 0x01B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item_2;                         // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99A1[0xC];                                     // 0x0214(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TraceSpawnPoint_OutSpawnPoint_1;          // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TraceSpawnPoint_Success_1;                // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99A2[0x3];                                     // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_CalcSpawnPointList_Spline");
static_assert(sizeof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline) == 0x000260, "Wrong size on BP_EncountAreaBase_C_CalcSpawnPointList_Spline");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, Spline) == 0x000000, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::Spline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, LineTrace) == 0x000008, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::LineTrace' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, L_FindSplineAttack) == 0x000009, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::L_FindSplineAttack' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, L_PrioPoints) == 0x000010, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::L_PrioPoints' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, L_Points) == 0x000020, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::L_Points' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, L_Key) == 0x000030, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::L_Key' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, L_Keys) == 0x000038, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::L_Keys' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, L_Space) == 0x000048, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::L_Space' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, L_PointNum) == 0x00004C, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::L_PointNum' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, L_TotalLength) == 0x000050, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::L_TotalLength' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, L_Spline) == 0x000058, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::L_Spline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, L_Pos) == 0x000060, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::L_Pos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, L_index) == 0x00006C, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000078, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000079, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_BooleanAND_ReturnValue) == 0x00007A, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_GetSpawnSplinePoint_SplinePoints) == 0x000080, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_GetSpawnSplinePoint_SplinePoints' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, Temp_bool_True_if_break_was_hit_Variable) == 0x000090, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Not_PreBool_ReturnValue) == 0x000091, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_GetSpawnSplinePoint_SplinePoints_1) == 0x000098, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_GetSpawnSplinePoint_SplinePoints_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Array_Length_ReturnValue_2) == 0x0000A8, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000AD, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_BooleanAND_ReturnValue_1) == 0x0000AE, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_CheckFly_IsFly) == 0x0000AF, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_CheckFly_IsFly' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000B0, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Array_Length_ReturnValue_3) == 0x0000B4, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x0000B8, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Array_Length_ReturnValue_4) == 0x0000BC, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Array_Length_ReturnValue_5) == 0x0000D4, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D8, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, Temp_int_Array_Index_Variable_1) == 0x0000DC, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, Temp_int_Loop_Counter_Variable) == 0x0000E0, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_BreakTransform_Location) == 0x000120, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_BreakTransform_Rotation) == 0x00012C, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_BreakTransform_Scale) == 0x000138, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Less_IntInt_ReturnValue) == 0x000144, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_TraceSpawnPoint_OutSpawnPoint) == 0x000150, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_TraceSpawnPoint_OutSpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_TraceSpawnPoint_Success) == 0x000180, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_TraceSpawnPoint_Success' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_BooleanAND_ReturnValue_2) == 0x000181, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Array_Add_ReturnValue) == 0x000184, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Add_IntInt_ReturnValue) == 0x000188, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, Temp_int_Loop_Counter_Variable_1) == 0x00018C, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Less_IntInt_ReturnValue_1) == 0x000190, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Add_IntInt_ReturnValue_1) == 0x000194, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, K2Node_MakeArray_Array) == 0x000198, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, Temp_int_Loop_Counter_Variable_2) == 0x0001A8, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001AC, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001B0, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, Temp_int_Array_Index_Variable_2) == 0x0001B4, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Array_Get_Item_2) == 0x0001C0, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_BreakTransform_Location_1) == 0x0001F0, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_BreakTransform_Rotation_1) == 0x0001FC, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_BreakTransform_Scale_1) == 0x000208, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_TraceSpawnPoint_OutSpawnPoint_1) == 0x000220, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_TraceSpawnPoint_OutSpawnPoint_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_TraceSpawnPoint_Success_1) == 0x000250, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_TraceSpawnPoint_Success_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPointList_Spline, CallFunc_Array_Add_ReturnValue_1) == 0x000254, "Member 'BP_EncountAreaBase_C_CalcSpawnPointList_Spline::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetMoverData
// 0x02F0 (0x02F0 - 0x0000)
struct BP_EncountAreaBase_C_GetMoverData final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Respawn;                                           // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99A3[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSymbolMoverData                       Param_MoverData;                                   // 0x0010(0x00B8)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          L_Mitama;                                          // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99A4[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSymbolHosei                        L_HoseiTable;                                      // 0x00D0(0x0080)(Edit, BlueprintVisible, HasGetValueTypeHash)
	E_Symbol_Discovery                            L_DiscoveryPattern;                                // 0x0150(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99A5[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSymbolActPattern>              L_GiveupPattern;                                   // 0x0158(0x0010)(Edit, BlueprintVisible)
	bool                                          L_ReSpawn;                                         // 0x0168(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99A6[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_Key;                                             // 0x016C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSymbolActPattern>              L_Second;                                          // 0x0170(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSymbolActPattern>              L_First;                                           // 0x0180(0x0010)(Edit, BlueprintVisible)
	bool                                          L_IsTalkStart;                                     // 0x0190(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99A7[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_Rand;                                            // 0x0194(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSplineKey_FromPos_Key;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFly_IsFly;                           // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99A8[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSymbolHosei                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x01A8(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99A9[0x6];                                     // 0x022A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSymbolMoverData                       K2Node_MakeStruct_SymbolMoverData;                 // 0x0230(0x00B8)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99AA[0x3];                                     // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_GetMoverData) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_GetMoverData");
static_assert(sizeof(BP_EncountAreaBase_C_GetMoverData) == 0x0002F0, "Wrong size on BP_EncountAreaBase_C_GetMoverData");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, Pos) == 0x000000, "Member 'BP_EncountAreaBase_C_GetMoverData::Pos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, Respawn) == 0x00000C, "Member 'BP_EncountAreaBase_C_GetMoverData::Respawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, Param_MoverData) == 0x000010, "Member 'BP_EncountAreaBase_C_GetMoverData::Param_MoverData' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, L_Mitama) == 0x0000C8, "Member 'BP_EncountAreaBase_C_GetMoverData::L_Mitama' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, L_HoseiTable) == 0x0000D0, "Member 'BP_EncountAreaBase_C_GetMoverData::L_HoseiTable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, L_DiscoveryPattern) == 0x000150, "Member 'BP_EncountAreaBase_C_GetMoverData::L_DiscoveryPattern' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, L_GiveupPattern) == 0x000158, "Member 'BP_EncountAreaBase_C_GetMoverData::L_GiveupPattern' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, L_ReSpawn) == 0x000168, "Member 'BP_EncountAreaBase_C_GetMoverData::L_ReSpawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, L_Key) == 0x00016C, "Member 'BP_EncountAreaBase_C_GetMoverData::L_Key' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, L_Second) == 0x000170, "Member 'BP_EncountAreaBase_C_GetMoverData::L_Second' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, L_First) == 0x000180, "Member 'BP_EncountAreaBase_C_GetMoverData::L_First' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, L_IsTalkStart) == 0x000190, "Member 'BP_EncountAreaBase_C_GetMoverData::L_IsTalkStart' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, L_Rand) == 0x000194, "Member 'BP_EncountAreaBase_C_GetMoverData::L_Rand' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, CallFunc_GetSplineKey_FromPos_Key) == 0x000198, "Member 'BP_EncountAreaBase_C_GetMoverData::CallFunc_GetSplineKey_FromPos_Key' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00019C, "Member 'BP_EncountAreaBase_C_GetMoverData::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, CallFunc_BooleanOR_ReturnValue) == 0x00019D, "Member 'BP_EncountAreaBase_C_GetMoverData::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, CallFunc_BooleanAND_ReturnValue) == 0x00019E, "Member 'BP_EncountAreaBase_C_GetMoverData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00019F, "Member 'BP_EncountAreaBase_C_GetMoverData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, CallFunc_BooleanOR_ReturnValue_1) == 0x0001A0, "Member 'BP_EncountAreaBase_C_GetMoverData::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, CallFunc_BooleanOR_ReturnValue_2) == 0x0001A1, "Member 'BP_EncountAreaBase_C_GetMoverData::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, CallFunc_BooleanOR_ReturnValue_3) == 0x0001A2, "Member 'BP_EncountAreaBase_C_GetMoverData::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, CallFunc_CheckFly_IsFly) == 0x0001A3, "Member 'BP_EncountAreaBase_C_GetMoverData::CallFunc_CheckFly_IsFly' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001A8, "Member 'BP_EncountAreaBase_C_GetMoverData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000228, "Member 'BP_EncountAreaBase_C_GetMoverData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, CallFunc_BooleanOR_ReturnValue_4) == 0x000229, "Member 'BP_EncountAreaBase_C_GetMoverData::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, K2Node_MakeStruct_SymbolMoverData) == 0x000230, "Member 'BP_EncountAreaBase_C_GetMoverData::K2Node_MakeStruct_SymbolMoverData' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, CallFunc_Less_IntInt_ReturnValue) == 0x0002E8, "Member 'BP_EncountAreaBase_C_GetMoverData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetMoverData, CallFunc_RandomInteger_ReturnValue) == 0x0002EC, "Member 'BP_EncountAreaBase_C_GetMoverData::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetRandomEncountId_FromIndex
// 0x0020 (0x0020 - 0x0000)
struct BP_EncountAreaBase_C_GetRandomEncountId_FromIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrayIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_EncountID;                                   // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Len;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99AB[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRandomEncountId_Dungeon_ReturnValue;   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_GetRandomEncountId_FromIndex) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_GetRandomEncountId_FromIndex");
static_assert(sizeof(BP_EncountAreaBase_C_GetRandomEncountId_FromIndex) == 0x000020, "Wrong size on BP_EncountAreaBase_C_GetRandomEncountId_FromIndex");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId_FromIndex, Param_Index) == 0x000000, "Member 'BP_EncountAreaBase_C_GetRandomEncountId_FromIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId_FromIndex, ArrayIndex) == 0x000004, "Member 'BP_EncountAreaBase_C_GetRandomEncountId_FromIndex::ArrayIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId_FromIndex, Param_EncountID) == 0x000008, "Member 'BP_EncountAreaBase_C_GetRandomEncountId_FromIndex::Param_EncountID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId_FromIndex, L_Len) == 0x00000C, "Member 'BP_EncountAreaBase_C_GetRandomEncountId_FromIndex::L_Len' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId_FromIndex, Temp_bool_Variable) == 0x000010, "Member 'BP_EncountAreaBase_C_GetRandomEncountId_FromIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId_FromIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000011, "Member 'BP_EncountAreaBase_C_GetRandomEncountId_FromIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId_FromIndex, CallFunc_GetMapID_ReturnValue) == 0x000014, "Member 'BP_EncountAreaBase_C_GetRandomEncountId_FromIndex::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId_FromIndex, K2Node_Select_Default) == 0x000018, "Member 'BP_EncountAreaBase_C_GetRandomEncountId_FromIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRandomEncountId_FromIndex, CallFunc_GetRandomEncountId_Dungeon_ReturnValue) == 0x00001C, "Member 'BP_EncountAreaBase_C_GetRandomEncountId_FromIndex::CallFunc_GetRandomEncountId_Dungeon_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.Reborn
// 0x00D0 (0x00D0 - 0x0000)
struct BP_EncountAreaBase_C_Reborn final
{
public:
	bool                                          Exec;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Save;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99AC[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99AD[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item;                           // 0x0010(0x00A0)(HasGetValueTypeHash)
	int32                                         CallFunc_GetDeadSaveID_DeadSaveID;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99AE[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckEncountAreaOverlap_Overlap;      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_Reborn) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_Reborn");
static_assert(sizeof(BP_EncountAreaBase_C_Reborn) == 0x0000D0, "Wrong size on BP_EncountAreaBase_C_Reborn");
static_assert(offsetof(BP_EncountAreaBase_C_Reborn, Exec) == 0x000000, "Member 'BP_EncountAreaBase_C_Reborn::Exec' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_Reborn, Save) == 0x000001, "Member 'BP_EncountAreaBase_C_Reborn::Save' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_Reborn, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_EncountAreaBase_C_Reborn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_Reborn, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EncountAreaBase_C_Reborn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_Reborn, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_EncountAreaBase_C_Reborn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_Reborn, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_EncountAreaBase_C_Reborn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_Reborn, CallFunc_GetDeadSaveID_DeadSaveID) == 0x0000B0, "Member 'BP_EncountAreaBase_C_Reborn::CallFunc_GetDeadSaveID_DeadSaveID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_Reborn, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'BP_EncountAreaBase_C_Reborn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_Reborn, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_EncountAreaBase_C_Reborn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_Reborn, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_EncountAreaBase_C_Reborn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_Reborn, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_EncountAreaBase_C_Reborn::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_Reborn, CallFunc_BPI_CheckEncountAreaOverlap_Overlap) == 0x0000C1, "Member 'BP_EncountAreaBase_C_Reborn::CallFunc_BPI_CheckEncountAreaOverlap_Overlap' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetSpawnSplinePoint
// 0x0020 (0x0020 - 0x0000)
struct BP_EncountAreaBase_C_GetSpawnSplinePoint final
{
public:
	TArray<int32>                                 SplinePoints;                                      // 0x0000(0x0010)(Parm, OutParm)
	TArray<int32>                                 NewLocalVar_0;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(BP_EncountAreaBase_C_GetSpawnSplinePoint) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_GetSpawnSplinePoint");
static_assert(sizeof(BP_EncountAreaBase_C_GetSpawnSplinePoint) == 0x000020, "Wrong size on BP_EncountAreaBase_C_GetSpawnSplinePoint");
static_assert(offsetof(BP_EncountAreaBase_C_GetSpawnSplinePoint, SplinePoints) == 0x000000, "Member 'BP_EncountAreaBase_C_GetSpawnSplinePoint::SplinePoints' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSpawnSplinePoint, NewLocalVar_0) == 0x000010, "Member 'BP_EncountAreaBase_C_GetSpawnSplinePoint::NewLocalVar_0' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CheckFly
// 0x0001 (0x0001 - 0x0000)
struct BP_EncountAreaBase_C_CheckFly final
{
public:
	bool                                          IsFly;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CheckFly) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_CheckFly");
static_assert(sizeof(BP_EncountAreaBase_C_CheckFly) == 0x000001, "Wrong size on BP_EncountAreaBase_C_CheckFly");
static_assert(offsetof(BP_EncountAreaBase_C_CheckFly, IsFly) == 0x000000, "Member 'BP_EncountAreaBase_C_CheckFly::IsFly' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.AddSpawner
// 0x0038 (0x0038 - 0x0000)
struct BP_EncountAreaBase_C_AddSpawner final
{
public:
	class ABP_EncountAreaSpawner_C*               Spawner;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99AF[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountAreaSpawner_C*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99B0[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99B1[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_AddSpawner) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_AddSpawner");
static_assert(sizeof(BP_EncountAreaBase_C_AddSpawner) == 0x000038, "Wrong size on BP_EncountAreaBase_C_AddSpawner");
static_assert(offsetof(BP_EncountAreaBase_C_AddSpawner, Spawner) == 0x000000, "Member 'BP_EncountAreaBase_C_AddSpawner::Spawner' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_AddSpawner, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EncountAreaBase_C_AddSpawner::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_AddSpawner, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_EncountAreaBase_C_AddSpawner::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_AddSpawner, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BP_EncountAreaBase_C_AddSpawner::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_AddSpawner, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_EncountAreaBase_C_AddSpawner::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_AddSpawner, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_EncountAreaBase_C_AddSpawner::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_AddSpawner, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'BP_EncountAreaBase_C_AddSpawner::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_AddSpawner, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_EncountAreaBase_C_AddSpawner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_AddSpawner, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EncountAreaBase_C_AddSpawner::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_AddSpawner, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'BP_EncountAreaBase_C_AddSpawner::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_AddSpawner, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_EncountAreaBase_C_AddSpawner::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_AddSpawner, CallFunc_Max_ReturnValue) == 0x000034, "Member 'BP_EncountAreaBase_C_AddSpawner::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetSplineKey_FromPos
// 0x00E0 (0x00E0 - 0x0000)
struct BP_EncountAreaBase_C_GetSplineKey_FromPos final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Key;                                               // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 L_SplinePoints;                                    // 0x0010(0x0010)(Edit, BlueprintVisible)
	float                                         L_Len;                                             // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_LenMin;                                          // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Pos;                                             // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99B2[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSpawnSplinePoint_SplinePoints;         // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99B3[0xB];                                     // 0x0065(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99B4[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_GetSplineKey_FromPos) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_GetSplineKey_FromPos");
static_assert(sizeof(BP_EncountAreaBase_C_GetSplineKey_FromPos) == 0x0000E0, "Wrong size on BP_EncountAreaBase_C_GetSplineKey_FromPos");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, Pos) == 0x000000, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::Pos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, Key) == 0x00000C, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::Key' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, L_SplinePoints) == 0x000010, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::L_SplinePoints' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, L_Len) == 0x000020, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::L_Len' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, L_LenMin) == 0x000024, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::L_LenMin' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, L_index) == 0x000028, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, L_Pos) == 0x00002C, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::L_Pos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_GetSpawnSplinePoint_SplinePoints) == 0x000040, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_GetSpawnSplinePoint_SplinePoints' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_Less_FloatFloat_ReturnValue) == 0x000061, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000062, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_BooleanOR_ReturnValue) == 0x000063, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_Array_Length_ReturnValue_2) == 0x0000A0, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_BreakTransform_Location) == 0x0000A4, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_BreakTransform_Rotation) == 0x0000B0, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_BreakTransform_Scale) == 0x0000BC, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C8, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000CC, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_VSize_ReturnValue) == 0x0000D8, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSplineKey_FromPos, CallFunc_BooleanAND_ReturnValue) == 0x0000DD, "Member 'BP_EncountAreaBase_C_GetSplineKey_FromPos::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetSpline
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_GetSpline final
{
public:
	class USplineComponent*                       Spline;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_GetSpline) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_GetSpline");
static_assert(sizeof(BP_EncountAreaBase_C_GetSpline) == 0x000008, "Wrong size on BP_EncountAreaBase_C_GetSpline");
static_assert(offsetof(BP_EncountAreaBase_C_GetSpline, Spline) == 0x000000, "Member 'BP_EncountAreaBase_C_GetSpline::Spline' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.ProcSpawnOrReturn
// 0x0030 (0x0030 - 0x0000)
struct BP_EncountAreaBase_C_ProcSpawnOrReturn final
{
public:
	float                                         L_Distance;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99B5[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99B6[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActorTickInterval_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAreaIN_AreaIN;                       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99B7[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_ProcSpawnOrReturn) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_ProcSpawnOrReturn");
static_assert(sizeof(BP_EncountAreaBase_C_ProcSpawnOrReturn) == 0x000030, "Wrong size on BP_EncountAreaBase_C_ProcSpawnOrReturn");
static_assert(offsetof(BP_EncountAreaBase_C_ProcSpawnOrReturn, L_Distance) == 0x000000, "Member 'BP_EncountAreaBase_C_ProcSpawnOrReturn::L_Distance' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ProcSpawnOrReturn, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_EncountAreaBase_C_ProcSpawnOrReturn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ProcSpawnOrReturn, CallFunc_Not_PreBool_ReturnValue_1) == 0x000005, "Member 'BP_EncountAreaBase_C_ProcSpawnOrReturn::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ProcSpawnOrReturn, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_EncountAreaBase_C_ProcSpawnOrReturn::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ProcSpawnOrReturn, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_EncountAreaBase_C_ProcSpawnOrReturn::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ProcSpawnOrReturn, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000010, "Member 'BP_EncountAreaBase_C_ProcSpawnOrReturn::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ProcSpawnOrReturn, CallFunc_GetActorTickInterval_ReturnValue) == 0x000014, "Member 'BP_EncountAreaBase_C_ProcSpawnOrReturn::CallFunc_GetActorTickInterval_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ProcSpawnOrReturn, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000018, "Member 'BP_EncountAreaBase_C_ProcSpawnOrReturn::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ProcSpawnOrReturn, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000019, "Member 'BP_EncountAreaBase_C_ProcSpawnOrReturn::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ProcSpawnOrReturn, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x00001A, "Member 'BP_EncountAreaBase_C_ProcSpawnOrReturn::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ProcSpawnOrReturn, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00001B, "Member 'BP_EncountAreaBase_C_ProcSpawnOrReturn::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ProcSpawnOrReturn, CallFunc_CheckAreaIN_AreaIN) == 0x00001C, "Member 'BP_EncountAreaBase_C_ProcSpawnOrReturn::CallFunc_CheckAreaIN_AreaIN' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ProcSpawnOrReturn, CallFunc_GetPlayerPawn_ReturnValue) == 0x000020, "Member 'BP_EncountAreaBase_C_ProcSpawnOrReturn::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ProcSpawnOrReturn, CallFunc_GetDistanceTo_ReturnValue) == 0x000028, "Member 'BP_EncountAreaBase_C_ProcSpawnOrReturn::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetDefaultParam
// 0x0170 (0x0170 - 0x0000)
struct BP_EncountAreaBase_C_GetDefaultParam final
{
public:
	struct FEncountArea_Default                   DefaultParam;                                      // 0x0000(0x00B0)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x00B0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99B8[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEncountArea_Default                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x00B8(0x00B0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_GetDefaultParam) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_GetDefaultParam");
static_assert(sizeof(BP_EncountAreaBase_C_GetDefaultParam) == 0x000170, "Wrong size on BP_EncountAreaBase_C_GetDefaultParam");
static_assert(offsetof(BP_EncountAreaBase_C_GetDefaultParam, DefaultParam) == 0x000000, "Member 'BP_EncountAreaBase_C_GetDefaultParam::DefaultParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetDefaultParam, Success) == 0x0000B0, "Member 'BP_EncountAreaBase_C_GetDefaultParam::Success' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetDefaultParam, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000B8, "Member 'BP_EncountAreaBase_C_GetDefaultParam::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetDefaultParam, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000168, "Member 'BP_EncountAreaBase_C_GetDefaultParam::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CalcDefaultParam
// 0x0170 (0x0170 - 0x0000)
struct BP_EncountAreaBase_C_CalcDefaultParam final
{
public:
	struct FEncountArea_Default                   L_Default;                                         // 0x0000(0x00B0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FEncountArea_Default                   CallFunc_GetDefaultParam_DefaultParam;             // 0x00B0(0x00B0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDefaultParam_Success;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0167(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CalcDefaultParam) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_CalcDefaultParam");
static_assert(sizeof(BP_EncountAreaBase_C_CalcDefaultParam) == 0x000170, "Wrong size on BP_EncountAreaBase_C_CalcDefaultParam");
static_assert(offsetof(BP_EncountAreaBase_C_CalcDefaultParam, L_Default) == 0x000000, "Member 'BP_EncountAreaBase_C_CalcDefaultParam::L_Default' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcDefaultParam, CallFunc_GetDefaultParam_DefaultParam) == 0x0000B0, "Member 'BP_EncountAreaBase_C_CalcDefaultParam::CallFunc_GetDefaultParam_DefaultParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcDefaultParam, CallFunc_GetDefaultParam_Success) == 0x000160, "Member 'BP_EncountAreaBase_C_CalcDefaultParam::CallFunc_GetDefaultParam_Success' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcDefaultParam, CallFunc_Not_PreBool_ReturnValue) == 0x000161, "Member 'BP_EncountAreaBase_C_CalcDefaultParam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcDefaultParam, CallFunc_BooleanOR_ReturnValue) == 0x000162, "Member 'BP_EncountAreaBase_C_CalcDefaultParam::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcDefaultParam, CallFunc_BooleanOR_ReturnValue_1) == 0x000163, "Member 'BP_EncountAreaBase_C_CalcDefaultParam::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcDefaultParam, CallFunc_BooleanOR_ReturnValue_2) == 0x000164, "Member 'BP_EncountAreaBase_C_CalcDefaultParam::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcDefaultParam, CallFunc_BooleanOR_ReturnValue_3) == 0x000165, "Member 'BP_EncountAreaBase_C_CalcDefaultParam::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcDefaultParam, CallFunc_BooleanOR_ReturnValue_4) == 0x000166, "Member 'BP_EncountAreaBase_C_CalcDefaultParam::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcDefaultParam, CallFunc_BooleanOR_ReturnValue_5) == 0x000167, "Member 'BP_EncountAreaBase_C_CalcDefaultParam::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcDefaultParam, CallFunc_BooleanOR_ReturnValue_6) == 0x000168, "Member 'BP_EncountAreaBase_C_CalcDefaultParam::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetSpawnSymbolNum
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_GetSpawnSymbolNum final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Num;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_GetSpawnSymbolNum) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_GetSpawnSymbolNum");
static_assert(sizeof(BP_EncountAreaBase_C_GetSpawnSymbolNum) == 0x000008, "Wrong size on BP_EncountAreaBase_C_GetSpawnSymbolNum");
static_assert(offsetof(BP_EncountAreaBase_C_GetSpawnSymbolNum, Num) == 0x000000, "Member 'BP_EncountAreaBase_C_GetSpawnSymbolNum::Num' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSpawnSymbolNum, L_Num) == 0x000004, "Member 'BP_EncountAreaBase_C_GetSpawnSymbolNum::L_Num' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetBlankSpawnIndex
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_GetBlankSpawnIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_GetBlankSpawnIndex) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_GetBlankSpawnIndex");
static_assert(sizeof(BP_EncountAreaBase_C_GetBlankSpawnIndex) == 0x000008, "Wrong size on BP_EncountAreaBase_C_GetBlankSpawnIndex");
static_assert(offsetof(BP_EncountAreaBase_C_GetBlankSpawnIndex, Param_Index) == 0x000000, "Member 'BP_EncountAreaBase_C_GetBlankSpawnIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetBlankSpawnIndex, L_index) == 0x000004, "Member 'BP_EncountAreaBase_C_GetBlankSpawnIndex::L_index' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.InitRouteNode
// 0x0790 (0x0790 - 0x0000)
struct BP_EncountAreaBase_C_InitRouteNode final
{
public:
	float                                         L_ComeRangeSizeY;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_ComeRangeSizeX;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_SymbolRoute_C*>              L_ManualNodeList;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABP_SymbolRoute_C*                      L_ManualNode;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_Check;                                           // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99B9[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMapSymbolConnectNode>          L_Connect2;                                        // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<struct FMapSymbolConnectNode>          L_Connect1;                                        // 0x0038(0x0010)(Edit, BlueprintVisible)
	float                                         L_Slope;                                           // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99BA[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 L_Costs2;                                          // 0x0050(0x0010)(Edit, BlueprintVisible)
	TArray<float>                                 L_Costs1;                                          // 0x0060(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 L_Connects2;                                       // 0x0070(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 L_Connects1;                                       // 0x0080(0x0010)(Edit, BlueprintVisible)
	float                                         L_Len;                                             // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Loc2;                                            // 0x0094(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Index2;                                          // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Y2;                                              // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_X2;                                              // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Loc;                                             // 0x00B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_PrevLoc;                                         // 0x00BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Y;                                               // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_X;                                               // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99BB[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_16;                              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99BC[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0120(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_18;                              // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99BD[0x3];                                     // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_19;                              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_20;                              // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComeRangeSize_ComeSize;                // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComeRangeSize_ComeSize_1;              // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComeRangeSize_ComeSize_2;              // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComeRangeSize_ComeSize_3;              // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComeRangeSize_ComeSize_4;              // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComeRangeSize_ComeSize_5;              // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComeRangeSize_ComeSize_6;              // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFly_IsFly;                           // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFly_IsFly_1;                         // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99BE[0x2];                                     // 0x0232(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99BF[0x2];                                     // 0x023E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMinMaxLocation_MinX;                   // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMinMaxLocation_MaxX;                   // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMinMaxLocation_MinY;                   // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMinMaxLocation_MaxY;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_3;                        // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_InComeArea_In;                        // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x027A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_InComeArea_In_1;                      // 0x027B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99C0[0x6];                                     // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_SymbolRoute_C*                      CallFunc_Array_Get_Item;                           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMapSymbolConnectNode>          K2Node_MakeArray_Array;                            // 0x02D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_CheckWithinRange_WithinRange;             // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99C1[0x7];                                     // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SymbolRoute_C*                      CallFunc_Array_Get_Item_1;                         // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckWithinRange_WithinRange_1;           // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99C2[0x2];                                     // 0x02F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99C3[0x8];                                     // 0x0318(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0320(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDevilBlock_Free;                     // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99C4[0x3];                                     // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0354(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0360(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99C5[0x8];                                     // 0x0378(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0380(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x03B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPointInBoxWithTransform_ReturnValue;    // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckRouteNodeRange_OK;                   // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPointInBoxWithTransform_ReturnValue_1;  // 0x03E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99C6[0x1];                                     // 0x03E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_SymbolRoute_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x03F8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SymbolRoute_C*                      CallFunc_Array_Get_Item_2;                         // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99C7[0x3];                                     // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99C8[0x4];                                     // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSymbolRouteNode                    CallFunc_Array_Get_Item_3;                         // 0x0428(0x0038)()
	struct FMapSymbolConnectNode                  CallFunc_Array_Get_Item_4;                         // 0x0460(0x0008)(NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99C9[0x3];                                     // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0475(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0476(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0477(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FMapSymbolConnectNode>          K2Node_MakeArray_Array_1;                          // 0x0478(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99CA[0x3];                                     // 0x048D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSymbolConnectNode                  K2Node_MakeStruct_MapSymbolConnectNode;            // 0x0490(0x0008)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapSymbolConnectNode                  K2Node_MakeStruct_MapSymbolConnectNode_1;          // 0x049C(0x0008)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMapSymbolConnectNode>          K2Node_MakeArray_Array_2;                          // 0x04A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99CB[0x4];                                     // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMapSymbolConnectNode>          K2Node_MakeArray_Array_3;                          // 0x04C0(0x0010)(ReferenceParm)
	float                                         CallFunc_BreakVector_X_5;                          // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99CC[0x3];                                     // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x04F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99CD[0x7];                                     // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0508(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0518(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_21;                              // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x052C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x052D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99CE[0x2];                                     // 0x052E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_4;                        // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0559(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99CF[0x2];                                     // 0x055A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0560(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x056C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x057C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SphereTrace_ReturnValue;                  // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SphereTrace_ReturnValue_1;                // 0x0589(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x058A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x058B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x058C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99D0[0x3];                                     // 0x058D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRouteNodeIndex_Index;                  // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x059C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x05A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x05B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x05C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99D1[0x3];                                     // 0x0649(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99D2[0x2];                                     // 0x0652(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x065C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0668(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0674(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0680(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99D3[0x4];                                     // 0x068C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x06A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x06BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x06C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x06D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x06D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x06DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x06E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x06E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x06F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0700(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x070C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99D4[0x3];                                     // 0x0729(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x072C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0730(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x073C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x074C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99D5[0x3];                                     // 0x0759(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_22;                              // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99D6[0x3];                                     // 0x0761(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x077C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_InitRouteNode) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_InitRouteNode");
static_assert(sizeof(BP_EncountAreaBase_C_InitRouteNode) == 0x000790, "Wrong size on BP_EncountAreaBase_C_InitRouteNode");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_ComeRangeSizeY) == 0x000000, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_ComeRangeSizeY' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_ComeRangeSizeX) == 0x000004, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_ComeRangeSizeX' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_ManualNodeList) == 0x000008, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_ManualNodeList' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_ManualNode) == 0x000018, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_ManualNode' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_Check) == 0x000020, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_Check' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_Connect2) == 0x000028, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_Connect2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_Connect1) == 0x000038, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_Connect1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_Slope) == 0x000048, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_Slope' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_Costs2) == 0x000050, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_Costs2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_Costs1) == 0x000060, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_Costs1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_Connects2) == 0x000070, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_Connects2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_Connects1) == 0x000080, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_Connects1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_Len) == 0x000090, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_Len' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_Loc2) == 0x000094, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_Loc2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_Index2) == 0x0000A0, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_Index2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_Y2) == 0x0000A4, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_Y2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_X2) == 0x0000A8, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_X2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_index) == 0x0000AC, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_Loc) == 0x0000B0, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_Loc' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_PrevLoc) == 0x0000BC, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_PrevLoc' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_Y) == 0x0000C8, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_Y' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, L_X) == 0x0000CC, "Member 'BP_EncountAreaBase_C_InitRouteNode::L_X' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable) == 0x0000D0, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_1) == 0x0000D8, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_2) == 0x0000DC, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_3) == 0x0000E0, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_4) == 0x0000E4, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_5) == 0x0000E8, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_6) == 0x0000EC, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_7) == 0x0000F0, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_8) == 0x0000F4, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_9) == 0x0000F8, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_10) == 0x0000FC, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_11) == 0x000100, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_12) == 0x000104, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_13) == 0x000108, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_14) == 0x00010C, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_15) == 0x000110, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_16) == 0x000114, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_17) == 0x000118, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_object_Variable) == 0x000120, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Array_Index_Variable) == 0x000130, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Loop_Counter_Variable) == 0x000134, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_IntInt_ReturnValue) == 0x000138, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Array_Index_Variable_1) == 0x00013C, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Loop_Counter_Variable_1) == 0x000140, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_IntInt_ReturnValue_1) == 0x000144, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_18) == 0x000148, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, K2Node_Select_Default) == 0x00014C, "Member 'BP_EncountAreaBase_C_InitRouteNode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, K2Node_Select_Default_1) == 0x000150, "Member 'BP_EncountAreaBase_C_InitRouteNode::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000154, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_IntInt_ReturnValue_2) == 0x000158, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_float_Variable) == 0x00015C, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_19) == 0x000160, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_IntInt_ReturnValue_3) == 0x000164, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_20) == 0x000168, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_IntInt_ReturnValue_4) == 0x00016C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_MakeVector_ReturnValue) == 0x000170, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_MakeVector_ReturnValue_1) == 0x00017C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GetComeRangeSize_ComeSize) == 0x000188, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GetComeRangeSize_ComeSize' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GetComeRangeSize_ComeSize_1) == 0x000194, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GetComeRangeSize_ComeSize_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GetComeRangeSize_ComeSize_2) == 0x0001A0, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GetComeRangeSize_ComeSize_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GetComeRangeSize_ComeSize_3) == 0x0001AC, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GetComeRangeSize_ComeSize_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_X) == 0x0001B8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Y) == 0x0001BC, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Z) == 0x0001C0, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_X_1) == 0x0001C4, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Y_1) == 0x0001C8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Z_1) == 0x0001CC, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_MakeVector_ReturnValue_2) == 0x0001D0, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_MakeVector_ReturnValue_3) == 0x0001DC, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GetComeRangeSize_ComeSize_4) == 0x0001E8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GetComeRangeSize_ComeSize_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GetComeRangeSize_ComeSize_5) == 0x0001F4, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GetComeRangeSize_ComeSize_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_X_2) == 0x000200, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Y_2) == 0x000204, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Z_2) == 0x000208, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_X_3) == 0x00020C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Y_3) == 0x000210, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Z_3) == 0x000214, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GetComeRangeSize_ComeSize_6) == 0x000218, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GetComeRangeSize_ComeSize_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_X_4) == 0x000224, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Y_4) == 0x000228, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Z_4) == 0x00022C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_CheckFly_IsFly) == 0x000230, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_CheckFly_IsFly' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_CheckFly_IsFly_1) == 0x000231, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_CheckFly_IsFly_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000234, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000238, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_bool_Variable) == 0x00023C, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_IsValid_ReturnValue) == 0x00023D, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, K2Node_Select_Default_2) == 0x000240, "Member 'BP_EncountAreaBase_C_InitRouteNode::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GetMinMaxLocation_MinX) == 0x000244, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GetMinMaxLocation_MinX' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GetMinMaxLocation_MaxX) == 0x000248, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GetMinMaxLocation_MaxX' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GetMinMaxLocation_MinY) == 0x00024C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GetMinMaxLocation_MinY' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GetMinMaxLocation_MaxY) == 0x000250, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GetMinMaxLocation_MaxY' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_MakeVector_ReturnValue_4) == 0x000254, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Abs_ReturnValue) == 0x000260, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Abs_ReturnValue_1) == 0x000264, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Abs_ReturnValue_2) == 0x000268, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_FMax_ReturnValue) == 0x00026C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Abs_ReturnValue_3) == 0x000270, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_FMax_ReturnValue_1) == 0x000274, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_IsValid_ReturnValue_1) == 0x000278, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BPI_InComeArea_In) == 0x000279, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BPI_InComeArea_In' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_IsValid_ReturnValue_2) == 0x00027A, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BPI_InComeArea_In_1) == 0x00027B, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BPI_InComeArea_In_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Array_Index_Variable_2) == 0x00027C, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_bool_True_if_break_was_hit_Variable) == 0x000280, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Not_PreBool_ReturnValue) == 0x000281, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Conv_IntToString_ReturnValue) == 0x000288, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000298, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Concat_StrStr_ReturnValue) == 0x0002A8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0002B8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Array_Get_Item) == 0x0002C8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, K2Node_MakeArray_Array) == 0x0002D0, "Member 'BP_EncountAreaBase_C_InitRouteNode::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_CheckWithinRange_WithinRange) == 0x0002E0, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_CheckWithinRange_WithinRange' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Array_Get_Item_1) == 0x0002E8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_CheckWithinRange_WithinRange_1) == 0x0002F0, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_CheckWithinRange_WithinRange_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BooleanOR_ReturnValue) == 0x0002F1, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002F4, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_VectorVector_ReturnValue) == 0x000300, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00030C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000320, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_CheckDevilBlock_Free) == 0x000350, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_CheckDevilBlock_Free' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakTransform_Location) == 0x000354, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakTransform_Rotation) == 0x000360, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakTransform_Scale) == 0x00036C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_MakeTransform_ReturnValue) == 0x000380, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x0003B0, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_IsPointInBoxWithTransform_ReturnValue) == 0x0003E0, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_IsPointInBoxWithTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_CheckRouteNodeRange_OK) == 0x0003E1, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_CheckRouteNodeRange_OK' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_IsPointInBoxWithTransform_ReturnValue_1) == 0x0003E2, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_IsPointInBoxWithTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Loop_Counter_Variable_2) == 0x0003E4, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_IntInt_ReturnValue_5) == 0x0003E8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Array_LastIndex_ReturnValue) == 0x0003EC, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_IntInt_ReturnValue_6) == 0x0003F0, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Subtract_IntInt_ReturnValue) == 0x0003F4, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GetAllActorsOfClass_OutActors) == 0x0003F8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Array_Index_Variable_3) == 0x000408, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Array_Length_ReturnValue) == 0x00040C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Array_Get_Item_2) == 0x000410, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_IsValid_ReturnValue_3) == 0x000418, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Array_Length_ReturnValue_1) == 0x00041C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_IntInt_ReturnValue_7) == 0x000420, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Array_Get_Item_3) == 0x000428, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Array_Get_Item_4) == 0x000460, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000468, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Array_Length_ReturnValue_2) == 0x00046C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Array_Length_ReturnValue_3) == 0x000470, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Less_IntInt_ReturnValue) == 0x000474, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Less_IntInt_ReturnValue_1) == 0x000475, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BooleanAND_ReturnValue) == 0x000476, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000477, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, K2Node_MakeArray_Array_1) == 0x000478, "Member 'BP_EncountAreaBase_C_InitRouteNode::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Array_Length_ReturnValue_4) == 0x000488, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Less_IntInt_ReturnValue_2) == 0x00048C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, K2Node_MakeStruct_MapSymbolConnectNode) == 0x000490, "Member 'BP_EncountAreaBase_C_InitRouteNode::K2Node_MakeStruct_MapSymbolConnectNode' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Array_Add_ReturnValue) == 0x000498, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, K2Node_MakeStruct_MapSymbolConnectNode_1) == 0x00049C, "Member 'BP_EncountAreaBase_C_InitRouteNode::K2Node_MakeStruct_MapSymbolConnectNode_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Array_Add_ReturnValue_1) == 0x0004A4, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, K2Node_MakeArray_Array_2) == 0x0004A8, "Member 'BP_EncountAreaBase_C_InitRouteNode::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0004B8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, K2Node_MakeArray_Array_3) == 0x0004C0, "Member 'BP_EncountAreaBase_C_InitRouteNode::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_X_5) == 0x0004D0, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Y_5) == 0x0004D4, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Z_5) == 0x0004D8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_X_6) == 0x0004DC, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Y_6) == 0x0004E0, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Z_6) == 0x0004E4, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_IntInt_ReturnValue_8) == 0x0004E8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0004EC, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0004F0, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Greater_IntInt_ReturnValue) == 0x000500, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000508, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000518, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_21) == 0x000528, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00052C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BooleanOR_ReturnValue_1) == 0x00052D, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_IntInt_ReturnValue_9) == 0x000530, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_X_7) == 0x000534, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Y_7) == 0x000538, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Z_7) == 0x00053C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_X_8) == 0x000540, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Y_8) == 0x000544, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakVector_Z_8) == 0x000548, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Loop_Counter_Variable_3) == 0x00054C, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000550, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Abs_ReturnValue_4) == 0x000554, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Less_IntInt_ReturnValue_3) == 0x000558, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000559, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_IntInt_ReturnValue_10) == 0x00055C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000560, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00056C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_VSize_ReturnValue) == 0x000578, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_VectorVector_ReturnValue_3) == 0x00057C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_SphereTrace_ReturnValue) == 0x000588, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_SphereTrace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_SphereTrace_ReturnValue_1) == 0x000589, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_SphereTrace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Not_PreBool_ReturnValue_1) == 0x00058A, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Not_PreBool_ReturnValue_2) == 0x00058B, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BooleanAND_ReturnValue_1) == 0x00058C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GetRouteNodeIndex_Index) == 0x000590, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GetRouteNodeIndex_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_IntInt_ReturnValue_11) == 0x000594, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_IntInt_ReturnValue_12) == 0x000598, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00059C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GetActorRightVector_ReturnValue) == 0x0005A8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0005B4, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_LineTraceSingle_OutHit) == 0x0005C0, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_LineTraceSingle_ReturnValue) == 0x000648, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00064C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakHitResult_bBlockingHit) == 0x000650, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakHitResult_bInitialOverlap) == 0x000651, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakHitResult_Time) == 0x000654, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakHitResult_Distance) == 0x000658, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakHitResult_Location) == 0x00065C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakHitResult_ImpactPoint) == 0x000668, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakHitResult_Normal) == 0x000674, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakHitResult_ImpactNormal) == 0x000680, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakHitResult_PhysMat) == 0x000690, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakHitResult_HitActor) == 0x000698, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakHitResult_HitComponent) == 0x0006A0, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakHitResult_HitBoneName) == 0x0006A8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakHitResult_HitItem) == 0x0006B0, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakHitResult_ElementIndex) == 0x0006B4, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakHitResult_FaceIndex) == 0x0006B8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakHitResult_TraceStart) == 0x0006BC, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_BreakHitResult_TraceEnd) == 0x0006C8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0006D4, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Dot_VectorVector_ReturnValue) == 0x0006D8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_FloatFloat_ReturnValue) == 0x0006DC, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_DegAcos_ReturnValue) == 0x0006E0, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0006E4, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0006E8, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_VectorVector_ReturnValue_5) == 0x0006F4, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_GetActorForwardVector_ReturnValue) == 0x000700, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00070C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000718, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00071C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000720, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000724, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000728, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x00072C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000730, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_VectorVector_ReturnValue_6) == 0x00073C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000748, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_VectorVector_ReturnValue_7) == 0x00074C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000758, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, Temp_int_Variable_22) == 0x00075C, "Member 'BP_EncountAreaBase_C_InitRouteNode::Temp_int_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000760, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_IntInt_ReturnValue_13) == 0x000764, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Multiply_IntInt_ReturnValue) == 0x000768, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00076C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_IntInt_ReturnValue_14) == 0x000770, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_FTrunc_ReturnValue) == 0x000774, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_IntInt_ReturnValue_15) == 0x000778, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00077C, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_FTrunc_ReturnValue_1) == 0x000780, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitRouteNode, CallFunc_Add_IntInt_ReturnValue_16) == 0x000784, "Member 'BP_EncountAreaBase_C_InitRouteNode::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetRouteNodeIndex
// 0x0068 (0x0068 - 0x0000)
struct BP_EncountAreaBase_C_GetRouteNodeIndex final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Y;                                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_X;                                               // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99D7[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSymbolRouteNode                    CallFunc_Array_Get_Item;                           // 0x0028(0x0038)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_GetRouteNodeIndex) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_GetRouteNodeIndex");
static_assert(sizeof(BP_EncountAreaBase_C_GetRouteNodeIndex) == 0x000068, "Wrong size on BP_EncountAreaBase_C_GetRouteNodeIndex");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeIndex, X) == 0x000000, "Member 'BP_EncountAreaBase_C_GetRouteNodeIndex::X' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeIndex, Y) == 0x000004, "Member 'BP_EncountAreaBase_C_GetRouteNodeIndex::Y' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeIndex, Param_Index) == 0x000008, "Member 'BP_EncountAreaBase_C_GetRouteNodeIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeIndex, L_index) == 0x00000C, "Member 'BP_EncountAreaBase_C_GetRouteNodeIndex::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeIndex, L_Y) == 0x000010, "Member 'BP_EncountAreaBase_C_GetRouteNodeIndex::L_Y' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeIndex, L_X) == 0x000014, "Member 'BP_EncountAreaBase_C_GetRouteNodeIndex::L_X' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeIndex, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_EncountAreaBase_C_GetRouteNodeIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeIndex, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_EncountAreaBase_C_GetRouteNodeIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EncountAreaBase_C_GetRouteNodeIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeIndex, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EncountAreaBase_C_GetRouteNodeIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeIndex, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_EncountAreaBase_C_GetRouteNodeIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_EncountAreaBase_C_GetRouteNodeIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000065, "Member 'BP_EncountAreaBase_C_GetRouteNodeIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeIndex, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000066, "Member 'BP_EncountAreaBase_C_GetRouteNodeIndex::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeIndex, CallFunc_BooleanAND_ReturnValue) == 0x000067, "Member 'BP_EncountAreaBase_C_GetRouteNodeIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetRouteNodeData
// 0x0058 (0x0058 - 0x0000)
struct BP_EncountAreaBase_C_GetRouteNodeData final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapSymbolRouteNode                    Node;                                              // 0x0008(0x0038)(Parm, OutParm)
	int32                                         L_index;                                           // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Y;                                               // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_X;                                               // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRouteNodeIndex_Index;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_GetRouteNodeData) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_GetRouteNodeData");
static_assert(sizeof(BP_EncountAreaBase_C_GetRouteNodeData) == 0x000058, "Wrong size on BP_EncountAreaBase_C_GetRouteNodeData");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeData, X) == 0x000000, "Member 'BP_EncountAreaBase_C_GetRouteNodeData::X' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeData, Y) == 0x000004, "Member 'BP_EncountAreaBase_C_GetRouteNodeData::Y' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeData, Node) == 0x000008, "Member 'BP_EncountAreaBase_C_GetRouteNodeData::Node' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeData, L_index) == 0x000040, "Member 'BP_EncountAreaBase_C_GetRouteNodeData::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeData, L_Y) == 0x000044, "Member 'BP_EncountAreaBase_C_GetRouteNodeData::L_Y' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeData, L_X) == 0x000048, "Member 'BP_EncountAreaBase_C_GetRouteNodeData::L_X' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeData, CallFunc_GetRouteNodeIndex_Index) == 0x00004C, "Member 'BP_EncountAreaBase_C_GetRouteNodeData::CallFunc_GetRouteNodeIndex_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetRouteNodeData, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_EncountAreaBase_C_GetRouteNodeData::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.ViewRouteNode
// 0x00E0 (0x00E0 - 0x0000)
struct BP_EncountAreaBase_C_ViewRouteNode final
{
public:
	struct FVector                                L_ConnectLoc;                                      // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_NodeLoc;                                         // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99D8[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMapSymbolConnectNode>          L_ConnectList;                                     // 0x0020(0x0010)(Edit, BlueprintVisible)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99D9[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_AddComponent_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99DA[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSymbolRouteNode                    CallFunc_Array_Get_Item;                           // 0x0080(0x0038)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99DB[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapSymbolConnectNode                  CallFunc_Array_Get_Item_1;                         // 0x00C4(0x0008)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99DC[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_ViewRouteNode) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_ViewRouteNode");
static_assert(sizeof(BP_EncountAreaBase_C_ViewRouteNode) == 0x0000E0, "Wrong size on BP_EncountAreaBase_C_ViewRouteNode");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, L_ConnectLoc) == 0x000000, "Member 'BP_EncountAreaBase_C_ViewRouteNode::L_ConnectLoc' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, L_NodeLoc) == 0x00000C, "Member 'BP_EncountAreaBase_C_ViewRouteNode::L_NodeLoc' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, L_index) == 0x000018, "Member 'BP_EncountAreaBase_C_ViewRouteNode::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, L_ConnectList) == 0x000020, "Member 'BP_EncountAreaBase_C_ViewRouteNode::L_ConnectList' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_EncountAreaBase_C_ViewRouteNode::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_EncountAreaBase_C_ViewRouteNode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, CallFunc_AddComponent_ReturnValue) == 0x000068, "Member 'BP_EncountAreaBase_C_ViewRouteNode::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BP_EncountAreaBase_C_ViewRouteNode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_EncountAreaBase_C_ViewRouteNode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, Temp_int_Array_Index_Variable_1) == 0x000078, "Member 'BP_EncountAreaBase_C_ViewRouteNode::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_EncountAreaBase_C_ViewRouteNode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_EncountAreaBase_C_ViewRouteNode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_EncountAreaBase_C_ViewRouteNode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, CallFunc_Array_Add_ReturnValue) == 0x0000C0, "Member 'BP_EncountAreaBase_C_ViewRouteNode::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, CallFunc_Array_Get_Item_1) == 0x0000C4, "Member 'BP_EncountAreaBase_C_ViewRouteNode::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, CallFunc_Array_Length_ReturnValue_1) == 0x0000CC, "Member 'BP_EncountAreaBase_C_ViewRouteNode::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, Temp_int_Loop_Counter_Variable_1) == 0x0000D0, "Member 'BP_EncountAreaBase_C_ViewRouteNode::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BP_EncountAreaBase_C_ViewRouteNode::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D5, "Member 'BP_EncountAreaBase_C_ViewRouteNode::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ViewRouteNode, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D8, "Member 'BP_EncountAreaBase_C_ViewRouteNode::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.HideRouteNode
// 0x0050 (0x0050 - 0x0000)
struct BP_EncountAreaBase_C_HideRouteNode final
{
public:
	struct FVector                                L_ConnectLoc;                                      // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_NodeLoc;                                         // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99DD[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 L_ConnectList;                                     // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99DE[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_HideRouteNode) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_HideRouteNode");
static_assert(sizeof(BP_EncountAreaBase_C_HideRouteNode) == 0x000050, "Wrong size on BP_EncountAreaBase_C_HideRouteNode");
static_assert(offsetof(BP_EncountAreaBase_C_HideRouteNode, L_ConnectLoc) == 0x000000, "Member 'BP_EncountAreaBase_C_HideRouteNode::L_ConnectLoc' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_HideRouteNode, L_NodeLoc) == 0x00000C, "Member 'BP_EncountAreaBase_C_HideRouteNode::L_NodeLoc' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_HideRouteNode, L_index) == 0x000018, "Member 'BP_EncountAreaBase_C_HideRouteNode::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_HideRouteNode, L_ConnectList) == 0x000020, "Member 'BP_EncountAreaBase_C_HideRouteNode::L_ConnectList' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_HideRouteNode, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_EncountAreaBase_C_HideRouteNode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_HideRouteNode, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_EncountAreaBase_C_HideRouteNode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_HideRouteNode, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_EncountAreaBase_C_HideRouteNode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_HideRouteNode, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_EncountAreaBase_C_HideRouteNode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_HideRouteNode, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_EncountAreaBase_C_HideRouteNode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_HideRouteNode, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'BP_EncountAreaBase_C_HideRouteNode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_HideRouteNode, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'BP_EncountAreaBase_C_HideRouteNode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.DebugEncountArea
// 0x0010 (0x0010 - 0x0000)
struct BP_EncountAreaBase_C_DebugEncountArea final
{
public:
	int32                                         DevilID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_DebugEncountArea) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_DebugEncountArea");
static_assert(sizeof(BP_EncountAreaBase_C_DebugEncountArea) == 0x000010, "Wrong size on BP_EncountAreaBase_C_DebugEncountArea");
static_assert(offsetof(BP_EncountAreaBase_C_DebugEncountArea, DevilID) == 0x000000, "Member 'BP_EncountAreaBase_C_DebugEncountArea::DevilID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DebugEncountArea, Temp_name_Variable) == 0x000004, "Member 'BP_EncountAreaBase_C_DebugEncountArea::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DebugEncountArea, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_EncountAreaBase_C_DebugEncountArea::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetSymbolId
// 0x0110 (0x0110 - 0x0000)
struct BP_EncountAreaBase_C_GetSymbolId final
{
public:
	int32                                         Param_EncountID;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrayIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MITAMA_ENCOUNT                              MitamaType;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99DF[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_SymbolID;                                    // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPackEncount                           L_Pack;                                            // 0x0010(0x0058)(Edit, BlueprintVisible)
	int32                                         L_EncountID;                                       // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_SymbolID;                                        // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPackEncount                           CallFunc_GetEncountPack_Pack;                      // 0x0070(0x0058)()
	int32                                         CallFunc_GetEncountPack_PackId;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99E0[0x2];                                     // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOneEncountData                        CallFunc_GetEncountData_ReturnValue;               // 0x00D0(0x0040)(ConstParm)
};
static_assert(alignof(BP_EncountAreaBase_C_GetSymbolId) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_GetSymbolId");
static_assert(sizeof(BP_EncountAreaBase_C_GetSymbolId) == 0x000110, "Wrong size on BP_EncountAreaBase_C_GetSymbolId");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolId, Param_EncountID) == 0x000000, "Member 'BP_EncountAreaBase_C_GetSymbolId::Param_EncountID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolId, ArrayIndex) == 0x000004, "Member 'BP_EncountAreaBase_C_GetSymbolId::ArrayIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolId, MitamaType) == 0x000008, "Member 'BP_EncountAreaBase_C_GetSymbolId::MitamaType' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolId, Param_SymbolID) == 0x00000C, "Member 'BP_EncountAreaBase_C_GetSymbolId::Param_SymbolID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolId, L_Pack) == 0x000010, "Member 'BP_EncountAreaBase_C_GetSymbolId::L_Pack' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolId, L_EncountID) == 0x000068, "Member 'BP_EncountAreaBase_C_GetSymbolId::L_EncountID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolId, L_SymbolID) == 0x00006C, "Member 'BP_EncountAreaBase_C_GetSymbolId::L_SymbolID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolId, CallFunc_GetEncountPack_Pack) == 0x000070, "Member 'BP_EncountAreaBase_C_GetSymbolId::CallFunc_GetEncountPack_Pack' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolId, CallFunc_GetEncountPack_PackId) == 0x0000C8, "Member 'BP_EncountAreaBase_C_GetSymbolId::CallFunc_GetEncountPack_PackId' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolId, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_EncountAreaBase_C_GetSymbolId::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolId, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000CD, "Member 'BP_EncountAreaBase_C_GetSymbolId::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolId, CallFunc_GetEncountData_ReturnValue) == 0x0000D0, "Member 'BP_EncountAreaBase_C_GetSymbolId::CallFunc_GetEncountData_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CheckRouteNodeRange
// 0x0010 (0x0010 - 0x0000)
struct BP_EncountAreaBase_C_CheckRouteNodeRange final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OK;                                                // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CheckRouteNodeRange) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_CheckRouteNodeRange");
static_assert(sizeof(BP_EncountAreaBase_C_CheckRouteNodeRange) == 0x000010, "Wrong size on BP_EncountAreaBase_C_CheckRouteNodeRange");
static_assert(offsetof(BP_EncountAreaBase_C_CheckRouteNodeRange, Location) == 0x000000, "Member 'BP_EncountAreaBase_C_CheckRouteNodeRange::Location' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckRouteNodeRange, OK) == 0x00000C, "Member 'BP_EncountAreaBase_C_CheckRouteNodeRange::OK' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.InitComeRange
// 0x00C8 (0x00C8 - 0x0000)
struct BP_EncountAreaBase_C_InitComeRange final
{
public:
	struct FVector                                CallFunc_GetComeRangeSize_ComeSize;                // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99E1[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x001C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99E2[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_InitComeRange) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_InitComeRange");
static_assert(sizeof(BP_EncountAreaBase_C_InitComeRange) == 0x0000C8, "Wrong size on BP_EncountAreaBase_C_InitComeRange");
static_assert(offsetof(BP_EncountAreaBase_C_InitComeRange, CallFunc_GetComeRangeSize_ComeSize) == 0x000000, "Member 'BP_EncountAreaBase_C_InitComeRange::CallFunc_GetComeRangeSize_ComeSize' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitComeRange, CallFunc_BreakVector_X) == 0x00000C, "Member 'BP_EncountAreaBase_C_InitComeRange::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitComeRange, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_EncountAreaBase_C_InitComeRange::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitComeRange, CallFunc_BreakVector_Z) == 0x000014, "Member 'BP_EncountAreaBase_C_InitComeRange::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitComeRange, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_InitComeRange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitComeRange, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_EncountAreaBase_C_InitComeRange::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitComeRange, CallFunc_IsValid_ReturnValue_2) == 0x00001A, "Member 'BP_EncountAreaBase_C_InitComeRange::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitComeRange, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x00001C, "Member 'BP_EncountAreaBase_C_InitComeRange::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitComeRange, CallFunc_IsValid_ReturnValue_3) == 0x0000A4, "Member 'BP_EncountAreaBase_C_InitComeRange::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitComeRange, CallFunc_GetMaterial_ReturnValue) == 0x0000A8, "Member 'BP_EncountAreaBase_C_InitComeRange::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitComeRange, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000B0, "Member 'BP_EncountAreaBase_C_InitComeRange::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitComeRange, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B8, "Member 'BP_EncountAreaBase_C_InitComeRange::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitComeRange, CallFunc_IsValid_ReturnValue_4) == 0x0000C4, "Member 'BP_EncountAreaBase_C_InitComeRange::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CheckDevilBlock
// 0x0188 (0x0188 - 0x0000)
struct BP_EncountAreaBase_C_CheckDevilBlock final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Free;                                              // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_Free;                                            // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99E3[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99E4[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99E5[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99E6[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0068(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99E7[0x1];                                     // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99E8[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99E9[0x3];                                     // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCollisionProfileName_ReturnValue;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CheckDevilBlock) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_CheckDevilBlock");
static_assert(sizeof(BP_EncountAreaBase_C_CheckDevilBlock) == 0x000188, "Wrong size on BP_EncountAreaBase_C_CheckDevilBlock");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, Start) == 0x000000, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::Start' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, End) == 0x00000C, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::End' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, Free) == 0x000018, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::Free' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, L_Free) == 0x000019, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::L_Free' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, Temp_bool_True_if_break_was_hit_Variable) == 0x00001A, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, Temp_object_Variable) == 0x000028, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x000050, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x000060, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F1, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F2, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BreakHitResult_Time) == 0x0000F4, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BreakHitResult_Distance) == 0x0000F8, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BreakHitResult_Location) == 0x0000FC, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BreakHitResult_ImpactPoint) == 0x000108, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BreakHitResult_Normal) == 0x000114, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BreakHitResult_ImpactNormal) == 0x000120, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BreakHitResult_PhysMat) == 0x000130, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BreakHitResult_HitActor) == 0x000138, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BreakHitResult_HitComponent) == 0x000140, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BreakHitResult_HitBoneName) == 0x000148, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BreakHitResult_HitItem) == 0x000150, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BreakHitResult_ElementIndex) == 0x000154, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BreakHitResult_FaceIndex) == 0x000158, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BreakHitResult_TraceStart) == 0x00015C, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BreakHitResult_TraceEnd) == 0x000168, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_BooleanAND_ReturnValue) == 0x000174, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_GetCollisionProfileName_ReturnValue) == 0x000178, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_GetCollisionProfileName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckDevilBlock, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000180, "Member 'BP_EncountAreaBase_C_CheckDevilBlock::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CheckCanSpawnSymbol
// 0x0220 (0x0220 - 0x0000)
struct BP_EncountAreaBase_C_CheckCanSpawnSymbol final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DevilID;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can;                                               // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99EA[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Param_SpawnerRadius;                               // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 L_Actor;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMapSymbolBaseCompornent_C*             L_Comp;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Radius2;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Radius1;                                         // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMapSymbolParam                        CallFunc_GetSymbolParam_Param;                     // 0x0030(0x00E0)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99EB[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99EC[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetMapSymbolSpawners_ReturnValue;         // 0x0158(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99ED[0x3];                                     // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99EE[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99EF[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetMapSymbolActors_ReturnValue;           // 0x01B0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99F0[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99F1[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountAreaSpawner_C*               K2Node_DynamicCast_AsBP_Encount_Area_Spawner;      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99F2[0x2];                                     // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99F3[0x4];                                     // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn;                  // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99F4[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent;   // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CheckCanSpawnSymbol) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_CheckCanSpawnSymbol");
static_assert(sizeof(BP_EncountAreaBase_C_CheckCanSpawnSymbol) == 0x000220, "Wrong size on BP_EncountAreaBase_C_CheckCanSpawnSymbol");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, Pos) == 0x000000, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::Pos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, DevilID) == 0x00000C, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::DevilID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, Can) == 0x000010, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::Can' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, Param_SpawnerRadius) == 0x000014, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::Param_SpawnerRadius' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, L_Actor) == 0x000018, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::L_Actor' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, L_Comp) == 0x000020, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::L_Comp' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, L_Radius2) == 0x000028, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::L_Radius2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, L_Radius1) == 0x00002C, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::L_Radius1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_GetSymbolParam_Param) == 0x000030, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_GetSymbolParam_Param' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, Temp_int_Array_Index_Variable) == 0x000110, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_FMax_ReturnValue) == 0x000114, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_GetPlayerPawn_ReturnValue) == 0x000118, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000120, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_Add_FloatFloat_ReturnValue) == 0x00012C, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000130, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_VSize_ReturnValue) == 0x00013C, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000140, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000144, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000148, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_GetMapSymbolSpawners_ReturnValue) == 0x000158, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_GetMapSymbolSpawners_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000168, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_Array_Length_ReturnValue) == 0x000174, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_VSize_ReturnValue_1) == 0x000178, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00017C, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000180, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000184, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000190, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_VSize_ReturnValue_2) == 0x00019C, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x0001A0, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_FMax_ReturnValue_1) == 0x0001A4, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, Temp_int_Loop_Counter_Variable) == 0x0001A8, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_GetMapSymbolActors_ReturnValue) == 0x0001B0, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_GetMapSymbolActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_Less_IntInt_ReturnValue) == 0x0001C0, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_Array_Get_Item) == 0x0001C8, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_Array_Length_ReturnValue_1) == 0x0001D0, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_Add_IntInt_ReturnValue) == 0x0001D4, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, Temp_int_Loop_Counter_Variable_1) == 0x0001D8, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, K2Node_DynamicCast_AsBP_Encount_Area_Spawner) == 0x0001E0, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::K2Node_DynamicCast_AsBP_Encount_Area_Spawner' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, K2Node_DynamicCast_bSuccess) == 0x0001E8, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001E9, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001EC, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, Temp_int_Array_Index_Variable_1) == 0x0001F0, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, K2Node_DynamicCast_AsCustom_Pawn) == 0x0001F8, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::K2Node_DynamicCast_AsCustom_Pawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, K2Node_DynamicCast_bSuccess_1) == 0x000200, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, CallFunc_Array_Get_Item_1) == 0x000208, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent) == 0x000210, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCanSpawnSymbol, K2Node_DynamicCast_bSuccess_2) == 0x000218, "Member 'BP_EncountAreaBase_C_CheckCanSpawnSymbol::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetDeadSaveID
// 0x0060 (0x0060 - 0x0000)
struct BP_EncountAreaBase_C_GetDeadSaveID final
{
public:
	int32                                         DeadSaveID;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99F5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPackEncount                           L_Pack;                                            // 0x0008(0x0058)(Edit, BlueprintVisible)
};
static_assert(alignof(BP_EncountAreaBase_C_GetDeadSaveID) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_GetDeadSaveID");
static_assert(sizeof(BP_EncountAreaBase_C_GetDeadSaveID) == 0x000060, "Wrong size on BP_EncountAreaBase_C_GetDeadSaveID");
static_assert(offsetof(BP_EncountAreaBase_C_GetDeadSaveID, DeadSaveID) == 0x000000, "Member 'BP_EncountAreaBase_C_GetDeadSaveID::DeadSaveID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetDeadSaveID, L_Pack) == 0x000008, "Member 'BP_EncountAreaBase_C_GetDeadSaveID::L_Pack' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CalcMitama
// 0x05D0 (0x05D0 - 0x0000)
struct BP_EncountAreaBase_C_CalcMitama final
{
public:
	E_MITAMA_ENCOUNT                              MitamaType;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_DlcMitamaFlag;                                   // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99F6[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_Rand2;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MITAMA_ENCOUNT                              L_MitamaType;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_Mitama;                                          // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99F7[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_MITAMA_ENCOUNT>                      L_MitamaLot;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         L_Rand;                                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99F8[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPackEncount                           L_Pack;                                            // 0x0028(0x0058)(Edit, BlueprintVisible)
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MITAMA_ENCOUNT                              Temp_byte_Variable;                                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99F9[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MITAMA_ENCOUNT                              Temp_byte_Variable_1;                              // 0x00D9(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99FA[0x2];                                     // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 K2Node_MakeStruct_Color_1;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MITAMA_ENCOUNT                              Temp_byte_Variable_2;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99FB[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_5;                            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_9;                            // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_MITAMA_ENCOUNT                              Temp_byte_Variable_3;                              // 0x0138(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MITAMA_ENCOUNT                              Temp_byte_Variable_4;                              // 0x0139(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MITAMA_ENCOUNT                              Temp_byte_Variable_5;                              // 0x013A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99FC[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99FD[0x3];                                     // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UDlcTableData*                          CallFunc_GetDlcCheck_output;                       // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDlcTableData*                          CallFunc_GetDlcCheck_output_1;                     // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCheckDLCFlag_ReturnValue;               // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCheckDLCFlag_ReturnValue_1;             // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99FE[0x6];                                     // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDlcTableData*                          CallFunc_GetDlcCheck_output_2;                     // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCheckDLCFlag_ReturnValue_2;             // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99FF[0x6];                                     // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_6;           // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A00[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A01[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_10;                           // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A02[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_7;           // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A03[0x3];                                     // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_8;           // 0x0318(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A04[0x4];                                     // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_9;           // 0x0330(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_10;          // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A05[0x3];                                     // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A06[0x4];                                     // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_11;          // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_2;                           // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_1;              // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A07[0x4];                                     // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x03D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x03E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x03F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetStrictTricks_ReturnValue;              // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A08[0x7];                                     // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_20;             // 0x0410(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A09[0x7];                                     // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_21;             // 0x0428(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A0A[0x7];                                     // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_22;             // 0x0440(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_23;             // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetExperienceTricks_ReturnValue;          // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue_1;           // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetMakkaTricks_ReturnValue;               // 0x0462(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0463(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue_2;           // 0x0464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0465(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A0B[0x2];                                     // 0x0466(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A0C[0x4];                                     // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_3;                           // 0x0470(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_2;              // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A0D[0x3];                                     // 0x0489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_6;             // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlag_ReturnValue;               // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0492(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A0E[0x1];                                     // 0x0493(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_12;          // 0x04A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_13;          // 0x04B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue_1;                   // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_4;                           // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_14;          // 0x04C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_3;              // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A0F[0x4];                                     // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_24;             // 0x04E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_25;             // 0x04F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_26;             // 0x0500(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_27;             // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_28;             // 0x0520(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FPackEncount                           CallFunc_GetEncountPack_Pack;                      // 0x0530(0x0058)()
	int32                                         CallFunc_GetEncountPack_PackId;                    // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A10[0x4];                                     // 0x058C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_29;             // 0x0590(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_30;             // 0x05A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_31;             // 0x05B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_32;             // 0x05C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_CalcMitama) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_CalcMitama");
static_assert(sizeof(BP_EncountAreaBase_C_CalcMitama) == 0x0005D0, "Wrong size on BP_EncountAreaBase_C_CalcMitama");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, MitamaType) == 0x000000, "Member 'BP_EncountAreaBase_C_CalcMitama::MitamaType' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, L_DlcMitamaFlag) == 0x000001, "Member 'BP_EncountAreaBase_C_CalcMitama::L_DlcMitamaFlag' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, L_Rand2) == 0x000004, "Member 'BP_EncountAreaBase_C_CalcMitama::L_Rand2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, L_MitamaType) == 0x000008, "Member 'BP_EncountAreaBase_C_CalcMitama::L_MitamaType' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, L_Mitama) == 0x000009, "Member 'BP_EncountAreaBase_C_CalcMitama::L_Mitama' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, L_MitamaLot) == 0x000010, "Member 'BP_EncountAreaBase_C_CalcMitama::L_MitamaLot' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, L_Rand) == 0x000020, "Member 'BP_EncountAreaBase_C_CalcMitama::L_Rand' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, L_Pack) == 0x000028, "Member 'BP_EncountAreaBase_C_CalcMitama::L_Pack' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, K2Node_MakeStruct_Color) == 0x000080, "Member 'BP_EncountAreaBase_C_CalcMitama::K2Node_MakeStruct_Color' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_byte_Variable) == 0x000084, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_string_Variable) == 0x000088, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_string_Variable_1) == 0x000098, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_string_Variable_2) == 0x0000A8, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_string_Variable_3) == 0x0000B8, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_string_Variable_4) == 0x0000C8, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_bool_Variable) == 0x0000D8, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_byte_Variable_1) == 0x0000D9, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, K2Node_MakeStruct_Color_1) == 0x0000DC, "Member 'BP_EncountAreaBase_C_CalcMitama::K2Node_MakeStruct_Color_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_byte_Variable_2) == 0x0000E0, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_string_Variable_5) == 0x0000E8, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_string_Variable_6) == 0x0000F8, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_string_Variable_7) == 0x000108, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_string_Variable_8) == 0x000118, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_string_Variable_9) == 0x000128, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_string_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_byte_Variable_3) == 0x000138, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_byte_Variable_4) == 0x000139, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_byte_Variable_5) == 0x00013A, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_bool_Variable_1) == 0x00013B, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Greater_IntInt_ReturnValue) == 0x00013C, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00013D, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Greater_IntInt_ReturnValue_2) == 0x00013E, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Greater_IntInt_ReturnValue_3) == 0x00013F, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000140, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Conv_IntToString_ReturnValue) == 0x000148, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000158, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Percent_IntInt_ReturnValue) == 0x000168, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Divide_IntInt_ReturnValue) == 0x00016C, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000170, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000180, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Conv_IntToString_ReturnValue_4) == 0x000190, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue) == 0x0001A0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Conv_IntToString_ReturnValue_5) == 0x0001B0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001C0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Add_IntInt_ReturnValue) == 0x0001D0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001D4, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001D8, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001DC, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001E0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Add_IntInt_ReturnValue_5) == 0x0001E4, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_RandomInteger_ReturnValue) == 0x0001E8, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Greater_IntInt_ReturnValue_5) == 0x0001EC, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_GetDlcCheck_output) == 0x0001F0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_GetDlcCheck_output' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_GetDlcCheck_output_1) == 0x0001F8, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_GetDlcCheck_output_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_IsCheckDLCFlag_ReturnValue) == 0x000200, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_IsCheckDLCFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_IsCheckDLCFlag_ReturnValue_1) == 0x000201, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_IsCheckDLCFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_GetDlcCheck_output_2) == 0x000208, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_GetDlcCheck_output_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_IsCheckDLCFlag_ReturnValue_2) == 0x000210, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_IsCheckDLCFlag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000211, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Conv_IntToString_ReturnValue_6) == 0x000218, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Conv_IntToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000228, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Less_IntInt_ReturnValue) == 0x000238, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000240, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000250, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000260, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000270, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000280, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000290, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002A0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0002A8, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0002B8, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0002C8, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_string_Variable_10) == 0x0002D8, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_string_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002E8, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, K2Node_Select_Default) == 0x0002F0, "Member 'BP_EncountAreaBase_C_CalcMitama::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Conv_IntToString_ReturnValue_7) == 0x000300, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Conv_IntToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Less_IntInt_ReturnValue_3) == 0x000310, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000314, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Conv_IntToString_ReturnValue_8) == 0x000318, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Conv_IntToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000328, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Conv_IntToString_ReturnValue_9) == 0x000330, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Conv_IntToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Conv_IntToString_ReturnValue_10) == 0x000340, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Conv_IntToString_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000350, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000360, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_GetMapID_ReturnValue) == 0x000370, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, Temp_bool_Variable_2) == 0x000374, "Member 'BP_EncountAreaBase_C_CalcMitama::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, K2Node_Select_Default_1) == 0x000378, "Member 'BP_EncountAreaBase_C_CalcMitama::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Conv_IntToString_ReturnValue_11) == 0x000380, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Conv_IntToString_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, K2Node_Select_Default_2) == 0x000390, "Member 'BP_EncountAreaBase_C_CalcMitama::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_14) == 0x0003A0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_15) == 0x0003B0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_16) == 0x0003C0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_RandomInteger_ReturnValue_1) == 0x0003D0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_RandomInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_17) == 0x0003D8, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_18) == 0x0003E8, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_19) == 0x0003F8, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_GetStrictTricks_ReturnValue) == 0x000408, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_GetStrictTricks_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_20) == 0x000410, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Greater_ByteByte_ReturnValue) == 0x000420, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_21) == 0x000428, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_BooleanAND_ReturnValue) == 0x000438, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_22) == 0x000440, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_23) == 0x000450, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_GetExperienceTricks_ReturnValue) == 0x000460, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_GetExperienceTricks_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Greater_ByteByte_ReturnValue_1) == 0x000461, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Greater_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_GetMakkaTricks_ReturnValue) == 0x000462, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_GetMakkaTricks_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_BooleanAND_ReturnValue_1) == 0x000463, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Greater_ByteByte_ReturnValue_2) == 0x000464, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Greater_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_BooleanAND_ReturnValue_2) == 0x000465, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Array_Add_ReturnValue) == 0x000468, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, K2Node_Select_Default_3) == 0x000470, "Member 'BP_EncountAreaBase_C_CalcMitama::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Array_Length_ReturnValue) == 0x000480, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_RandomInteger_ReturnValue_2) == 0x000484, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_RandomInteger_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Less_IntInt_ReturnValue_4) == 0x000488, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Array_Length_ReturnValue_1) == 0x00048C, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Greater_IntInt_ReturnValue_6) == 0x000490, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Greater_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_CheckEventFlag_ReturnValue) == 0x000491, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_CheckEventFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Not_PreBool_ReturnValue) == 0x000492, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Array_Add_ReturnValue_1) == 0x000494, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Array_Add_ReturnValue_2) == 0x000498, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Array_Add_ReturnValue_3) == 0x00049C, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Conv_IntToString_ReturnValue_12) == 0x0004A0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Conv_IntToString_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Conv_IntToString_ReturnValue_13) == 0x0004B0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Conv_IntToString_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_GetMapID_ReturnValue_1) == 0x0004C0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_GetMapID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, K2Node_Select_Default_4) == 0x0004C4, "Member 'BP_EncountAreaBase_C_CalcMitama::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Conv_IntToString_ReturnValue_14) == 0x0004C8, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Conv_IntToString_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_RandomInteger_ReturnValue_3) == 0x0004D8, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_RandomInteger_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_24) == 0x0004E0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_25) == 0x0004F0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_26) == 0x000500, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_27) == 0x000510, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_28) == 0x000520, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_GetEncountPack_Pack) == 0x000530, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_GetEncountPack_Pack' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_GetEncountPack_PackId) == 0x000588, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_GetEncountPack_PackId' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_29) == 0x000590, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_30) == 0x0005A0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_31) == 0x0005B0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitama, CallFunc_Concat_StrStr_ReturnValue_32) == 0x0005C0, "Member 'BP_EncountAreaBase_C_CalcMitama::CallFunc_Concat_StrStr_ReturnValue_32' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.DestroyNeedless
// 0x0002 (0x0002 - 0x0000)
struct BP_EncountAreaBase_C_DestroyNeedless final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_DestroyNeedless) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_DestroyNeedless");
static_assert(sizeof(BP_EncountAreaBase_C_DestroyNeedless) == 0x000002, "Wrong size on BP_EncountAreaBase_C_DestroyNeedless");
static_assert(offsetof(BP_EncountAreaBase_C_DestroyNeedless, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_EncountAreaBase_C_DestroyNeedless::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DestroyNeedless, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_EncountAreaBase_C_DestroyNeedless::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetDeadSymbolNum
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_GetDeadSymbolNum final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Num;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_GetDeadSymbolNum) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_GetDeadSymbolNum");
static_assert(sizeof(BP_EncountAreaBase_C_GetDeadSymbolNum) == 0x000008, "Wrong size on BP_EncountAreaBase_C_GetDeadSymbolNum");
static_assert(offsetof(BP_EncountAreaBase_C_GetDeadSymbolNum, Num) == 0x000000, "Member 'BP_EncountAreaBase_C_GetDeadSymbolNum::Num' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetDeadSymbolNum, L_Num) == 0x000004, "Member 'BP_EncountAreaBase_C_GetDeadSymbolNum::L_Num' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CheckStartEndFlag
// 0x00C8 (0x00C8 - 0x0000)
struct BP_EncountAreaBase_C_CheckStartEndFlag final
{
public:
	int32                                         Param_PackId;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OK;                                                // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A11[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_EndFlag;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_StartFlag;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPackEncount                           L_Pack;                                            // 0x0010(0x0058)(Edit, BlueprintVisible)
	struct FPackEncount                           CallFunc_GetEncountPackData_ReturnValue;           // 0x0068(0x0058)(ConstParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlagValue_ReturnValue;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlagValue_ReturnValue_1;        // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CheckStartEndFlag) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_CheckStartEndFlag");
static_assert(sizeof(BP_EncountAreaBase_C_CheckStartEndFlag) == 0x0000C8, "Wrong size on BP_EncountAreaBase_C_CheckStartEndFlag");
static_assert(offsetof(BP_EncountAreaBase_C_CheckStartEndFlag, Param_PackId) == 0x000000, "Member 'BP_EncountAreaBase_C_CheckStartEndFlag::Param_PackId' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckStartEndFlag, OK) == 0x000004, "Member 'BP_EncountAreaBase_C_CheckStartEndFlag::OK' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckStartEndFlag, L_EndFlag) == 0x000008, "Member 'BP_EncountAreaBase_C_CheckStartEndFlag::L_EndFlag' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckStartEndFlag, L_StartFlag) == 0x00000C, "Member 'BP_EncountAreaBase_C_CheckStartEndFlag::L_StartFlag' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckStartEndFlag, L_Pack) == 0x000010, "Member 'BP_EncountAreaBase_C_CheckStartEndFlag::L_Pack' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckStartEndFlag, CallFunc_GetEncountPackData_ReturnValue) == 0x000068, "Member 'BP_EncountAreaBase_C_CheckStartEndFlag::CallFunc_GetEncountPackData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckStartEndFlag, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_EncountAreaBase_C_CheckStartEndFlag::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckStartEndFlag, CallFunc_CheckEventFlagValue_ReturnValue) == 0x0000C1, "Member 'BP_EncountAreaBase_C_CheckStartEndFlag::CallFunc_CheckEventFlagValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckStartEndFlag, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000C2, "Member 'BP_EncountAreaBase_C_CheckStartEndFlag::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckStartEndFlag, CallFunc_CheckEventFlagValue_ReturnValue_1) == 0x0000C3, "Member 'BP_EncountAreaBase_C_CheckStartEndFlag::CallFunc_CheckEventFlagValue_ReturnValue_1' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.ShowDaathSpawnHit
// 0x01B0 (0x01B0 - 0x0000)
struct BP_EncountAreaBase_C_ShowDaathSpawnHit final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_Show;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A12[0xD];                                     // 0x0003(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class USphereComponent*                       CallFunc_AddComponent_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A13[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x004C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A14[0xB];                                     // 0x00D5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A15[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USphereComponent*                       CallFunc_AddComponent_ReturnValue_1;               // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x0120(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_EncountAreaBase_C_ShowDaathSpawnHit) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_ShowDaathSpawnHit");
static_assert(sizeof(BP_EncountAreaBase_C_ShowDaathSpawnHit) == 0x0001B0, "Wrong size on BP_EncountAreaBase_C_ShowDaathSpawnHit");
static_assert(offsetof(BP_EncountAreaBase_C_ShowDaathSpawnHit, Show) == 0x000000, "Member 'BP_EncountAreaBase_C_ShowDaathSpawnHit::Show' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowDaathSpawnHit, L_Show) == 0x000001, "Member 'BP_EncountAreaBase_C_ShowDaathSpawnHit::L_Show' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowDaathSpawnHit, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_EncountAreaBase_C_ShowDaathSpawnHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowDaathSpawnHit, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_EncountAreaBase_C_ShowDaathSpawnHit::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowDaathSpawnHit, CallFunc_AddComponent_ReturnValue) == 0x000040, "Member 'BP_EncountAreaBase_C_ShowDaathSpawnHit::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowDaathSpawnHit, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'BP_EncountAreaBase_C_ShowDaathSpawnHit::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowDaathSpawnHit, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x00004C, "Member 'BP_EncountAreaBase_C_ShowDaathSpawnHit::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowDaathSpawnHit, CallFunc_IsValid_ReturnValue_2) == 0x0000D4, "Member 'BP_EncountAreaBase_C_ShowDaathSpawnHit::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowDaathSpawnHit, CallFunc_MakeTransform_ReturnValue_1) == 0x0000E0, "Member 'BP_EncountAreaBase_C_ShowDaathSpawnHit::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowDaathSpawnHit, CallFunc_IsValid_ReturnValue_3) == 0x000110, "Member 'BP_EncountAreaBase_C_ShowDaathSpawnHit::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowDaathSpawnHit, CallFunc_AddComponent_ReturnValue_1) == 0x000118, "Member 'BP_EncountAreaBase_C_ShowDaathSpawnHit::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ShowDaathSpawnHit, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x000120, "Member 'BP_EncountAreaBase_C_ShowDaathSpawnHit::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.FailLog
// 0x00A0 (0x00A0 - 0x0000)
struct BP_EncountAreaBase_C_FailLog final
{
public:
	class FString                                 Reason;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A16[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDevilName_ReturnValue;                 // 0x0048(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_FailLog) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_FailLog");
static_assert(sizeof(BP_EncountAreaBase_C_FailLog) == 0x0000A0, "Wrong size on BP_EncountAreaBase_C_FailLog");
static_assert(offsetof(BP_EncountAreaBase_C_FailLog, Reason) == 0x000000, "Member 'BP_EncountAreaBase_C_FailLog::Reason' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_FailLog, K2Node_MakeStruct_Color) == 0x000010, "Member 'BP_EncountAreaBase_C_FailLog::K2Node_MakeStruct_Color' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_FailLog, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_FailLog::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_FailLog, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000028, "Member 'BP_EncountAreaBase_C_FailLog::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_FailLog, CallFunc_GetDisplayName_ReturnValue) == 0x000038, "Member 'BP_EncountAreaBase_C_FailLog::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_FailLog, CallFunc_GetDevilName_ReturnValue) == 0x000048, "Member 'BP_EncountAreaBase_C_FailLog::CallFunc_GetDevilName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_FailLog, CallFunc_Conv_TextToString_ReturnValue) == 0x000060, "Member 'BP_EncountAreaBase_C_FailLog::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_FailLog, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000070, "Member 'BP_EncountAreaBase_C_FailLog::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_FailLog, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000080, "Member 'BP_EncountAreaBase_C_FailLog::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_FailLog, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000090, "Member 'BP_EncountAreaBase_C_FailLog::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CheckViewSymbolBox
// 0x0028 (0x0028 - 0x0000)
struct BP_EncountAreaBase_C_CheckViewSymbolBox final
{
public:
	bool                                          In;                                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A17[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A18[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountArea_OptionHit_C*            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CheckViewSymbolBox) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_CheckViewSymbolBox");
static_assert(sizeof(BP_EncountAreaBase_C_CheckViewSymbolBox) == 0x000028, "Wrong size on BP_EncountAreaBase_C_CheckViewSymbolBox");
static_assert(offsetof(BP_EncountAreaBase_C_CheckViewSymbolBox, In) == 0x000000, "Member 'BP_EncountAreaBase_C_CheckViewSymbolBox::In' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckViewSymbolBox, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EncountAreaBase_C_CheckViewSymbolBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckViewSymbolBox, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EncountAreaBase_C_CheckViewSymbolBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckViewSymbolBox, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EncountAreaBase_C_CheckViewSymbolBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckViewSymbolBox, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_EncountAreaBase_C_CheckViewSymbolBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckViewSymbolBox, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_EncountAreaBase_C_CheckViewSymbolBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckViewSymbolBox, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_EncountAreaBase_C_CheckViewSymbolBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckViewSymbolBox, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_EncountAreaBase_C_CheckViewSymbolBox::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.ChainDeadTeam
// 0x0078 (0x0078 - 0x0000)
struct BP_EncountAreaBase_C_ChainDeadTeam final
{
public:
	bool                                          Effect;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A19[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountAreaBase_C*                  L_Area;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_Effect;                                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A1A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A1B[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A1C[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_EncountAreaBase_C*>          CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A1D[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountAreaBase_C*                  CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A1E[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_ChainDeadTeam) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_ChainDeadTeam");
static_assert(sizeof(BP_EncountAreaBase_C_ChainDeadTeam) == 0x000078, "Wrong size on BP_EncountAreaBase_C_ChainDeadTeam");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, Effect) == 0x000000, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::Effect' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, L_Area) == 0x000008, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::L_Area' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, L_Effect) == 0x000010, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::L_Effect' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, Temp_int_Array_Index_Variable_2) == 0x000030, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000050, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, CallFunc_Array_Length_ReturnValue_2) == 0x000060, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, Temp_int_Loop_Counter_Variable_2) == 0x000064, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, CallFunc_Less_IntInt_ReturnValue_2) == 0x000069, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, CallFunc_Add_IntInt_ReturnValue_2) == 0x00006C, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChainDeadTeam, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_EncountAreaBase_C_ChainDeadTeam::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.DiscoveryAll
// 0x00E0 (0x00E0 - 0x0000)
struct BP_EncountAreaBase_C_DiscoveryAll final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A1F[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A20[0xB];                                     // 0x0015(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item;                           // 0x0020(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A21[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent;   // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanDiscovery_OK;                          // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_DiscoveryAll) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_DiscoveryAll");
static_assert(sizeof(BP_EncountAreaBase_C_DiscoveryAll) == 0x0000E0, "Wrong size on BP_EncountAreaBase_C_DiscoveryAll");
static_assert(offsetof(BP_EncountAreaBase_C_DiscoveryAll, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_EncountAreaBase_C_DiscoveryAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DiscoveryAll, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_EncountAreaBase_C_DiscoveryAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DiscoveryAll, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EncountAreaBase_C_DiscoveryAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DiscoveryAll, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EncountAreaBase_C_DiscoveryAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DiscoveryAll, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EncountAreaBase_C_DiscoveryAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DiscoveryAll, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'BP_EncountAreaBase_C_DiscoveryAll::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DiscoveryAll, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EncountAreaBase_C_DiscoveryAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DiscoveryAll, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BP_EncountAreaBase_C_DiscoveryAll::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DiscoveryAll, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent) == 0x0000C8, "Member 'BP_EncountAreaBase_C_DiscoveryAll::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DiscoveryAll, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_EncountAreaBase_C_DiscoveryAll::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DiscoveryAll, CallFunc_CanDiscovery_OK) == 0x0000D1, "Member 'BP_EncountAreaBase_C_DiscoveryAll::CallFunc_CanDiscovery_OK' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GiveupAll
// 0x00D0 (0x00D0 - 0x0000)
struct BP_EncountAreaBase_C_GiveupAll final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A22[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item;                           // 0x0010(0x00A0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A23[0x2];                                     // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A24[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent;   // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GiveUp_Success;                           // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_GiveupAll) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_GiveupAll");
static_assert(sizeof(BP_EncountAreaBase_C_GiveupAll) == 0x0000D0, "Wrong size on BP_EncountAreaBase_C_GiveupAll");
static_assert(offsetof(BP_EncountAreaBase_C_GiveupAll, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EncountAreaBase_C_GiveupAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GiveupAll, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EncountAreaBase_C_GiveupAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GiveupAll, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_EncountAreaBase_C_GiveupAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GiveupAll, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'BP_EncountAreaBase_C_GiveupAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GiveupAll, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_EncountAreaBase_C_GiveupAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GiveupAll, CallFunc_IsValid_ReturnValue) == 0x0000B5, "Member 'BP_EncountAreaBase_C_GiveupAll::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GiveupAll, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_EncountAreaBase_C_GiveupAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GiveupAll, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent) == 0x0000C0, "Member 'BP_EncountAreaBase_C_GiveupAll::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GiveupAll, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_EncountAreaBase_C_GiveupAll::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GiveupAll, CallFunc_GiveUp_Success) == 0x0000C9, "Member 'BP_EncountAreaBase_C_GiveupAll::CallFunc_GiveUp_Success' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.ChangeReturnPoint
// 0x0028 (0x0028 - 0x0000)
struct BP_EncountAreaBase_C_ChangeReturnPoint final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnPos;                                         // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMapSymbolBaseCompornent_C*             L_Comp;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSymbolComponent_Valid;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A25[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             CallFunc_GetSymbolComponent_Comp;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_ChangeReturnPoint) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_ChangeReturnPoint");
static_assert(sizeof(BP_EncountAreaBase_C_ChangeReturnPoint) == 0x000028, "Wrong size on BP_EncountAreaBase_C_ChangeReturnPoint");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeReturnPoint, Param_Index) == 0x000000, "Member 'BP_EncountAreaBase_C_ChangeReturnPoint::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeReturnPoint, ReturnPos) == 0x000004, "Member 'BP_EncountAreaBase_C_ChangeReturnPoint::ReturnPos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeReturnPoint, L_Comp) == 0x000010, "Member 'BP_EncountAreaBase_C_ChangeReturnPoint::L_Comp' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeReturnPoint, CallFunc_GetSymbolComponent_Valid) == 0x000018, "Member 'BP_EncountAreaBase_C_ChangeReturnPoint::CallFunc_GetSymbolComponent_Valid' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeReturnPoint, CallFunc_GetSymbolComponent_Comp) == 0x000020, "Member 'BP_EncountAreaBase_C_ChangeReturnPoint::CallFunc_GetSymbolComponent_Comp' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetSymbolComponent
// 0x0040 (0x0040 - 0x0000)
struct BP_EncountAreaBase_C_GetSymbolComponent final
{
public:
	class AActor*                                 Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A26[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             Comp;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMapSymbolBaseCompornent_C*             L_Comp;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A27[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent;   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_GetSymbolComponent) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_GetSymbolComponent");
static_assert(sizeof(BP_EncountAreaBase_C_GetSymbolComponent) == 0x000040, "Wrong size on BP_EncountAreaBase_C_GetSymbolComponent");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolComponent, Pawn) == 0x000000, "Member 'BP_EncountAreaBase_C_GetSymbolComponent::Pawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolComponent, Valid) == 0x000008, "Member 'BP_EncountAreaBase_C_GetSymbolComponent::Valid' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolComponent, Comp) == 0x000010, "Member 'BP_EncountAreaBase_C_GetSymbolComponent::Comp' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolComponent, L_Comp) == 0x000018, "Member 'BP_EncountAreaBase_C_GetSymbolComponent::L_Comp' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolComponent, K2Node_DynamicCast_AsCustom_Pawn) == 0x000020, "Member 'BP_EncountAreaBase_C_GetSymbolComponent::K2Node_DynamicCast_AsCustom_Pawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolComponent, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EncountAreaBase_C_GetSymbolComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolComponent, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent) == 0x000030, "Member 'BP_EncountAreaBase_C_GetSymbolComponent::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolComponent, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_EncountAreaBase_C_GetSymbolComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CalcAreaIn
// 0x0050 (0x0050 - 0x0000)
struct BP_EncountAreaBase_C_CalcAreaIn final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A28[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A29[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountArea_OptionHit_C*            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A2A[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A2B[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CalcAreaIn) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_CalcAreaIn");
static_assert(sizeof(BP_EncountAreaBase_C_CalcAreaIn) == 0x000050, "Wrong size on BP_EncountAreaBase_C_CalcAreaIn");
static_assert(offsetof(BP_EncountAreaBase_C_CalcAreaIn, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EncountAreaBase_C_CalcAreaIn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcAreaIn, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_EncountAreaBase_C_CalcAreaIn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcAreaIn, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_EncountAreaBase_C_CalcAreaIn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcAreaIn, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000008, "Member 'BP_EncountAreaBase_C_CalcAreaIn::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcAreaIn, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_CalcAreaIn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcAreaIn, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EncountAreaBase_C_CalcAreaIn::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcAreaIn, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EncountAreaBase_C_CalcAreaIn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcAreaIn, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_EncountAreaBase_C_CalcAreaIn::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcAreaIn, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'BP_EncountAreaBase_C_CalcAreaIn::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcAreaIn, CallFunc_GetPlayerPawn_ReturnValue) == 0x000030, "Member 'BP_EncountAreaBase_C_CalcAreaIn::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcAreaIn, CallFunc_GetDistanceTo_ReturnValue) == 0x000038, "Member 'BP_EncountAreaBase_C_CalcAreaIn::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcAreaIn, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_EncountAreaBase_C_CalcAreaIn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcAreaIn, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_EncountAreaBase_C_CalcAreaIn::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcAreaIn, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BP_EncountAreaBase_C_CalcAreaIn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcAreaIn, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_EncountAreaBase_C_CalcAreaIn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcAreaIn, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'BP_EncountAreaBase_C_CalcAreaIn::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CheckMitamaGroup
// 0x0118 (0x0118 - 0x0000)
struct BP_EncountAreaBase_C_CheckMitamaGroup final
{
public:
	int32                                         DevilID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Mitama;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A2C[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDevilBaseData                         CallFunc_GetDevilBaseData_ReturnValue;             // 0x0008(0x0108)(ConstParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CheckMitamaGroup) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_CheckMitamaGroup");
static_assert(sizeof(BP_EncountAreaBase_C_CheckMitamaGroup) == 0x000118, "Wrong size on BP_EncountAreaBase_C_CheckMitamaGroup");
static_assert(offsetof(BP_EncountAreaBase_C_CheckMitamaGroup, DevilID) == 0x000000, "Member 'BP_EncountAreaBase_C_CheckMitamaGroup::DevilID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckMitamaGroup, Mitama) == 0x000004, "Member 'BP_EncountAreaBase_C_CheckMitamaGroup::Mitama' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckMitamaGroup, CallFunc_MakeLiteralByte_ReturnValue) == 0x000005, "Member 'BP_EncountAreaBase_C_CheckMitamaGroup::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckMitamaGroup, CallFunc_GetDevilBaseData_ReturnValue) == 0x000008, "Member 'BP_EncountAreaBase_C_CheckMitamaGroup::CallFunc_GetDevilBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckMitamaGroup, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000110, "Member 'BP_EncountAreaBase_C_CheckMitamaGroup::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetSymbolParam
// 0x01D8 (0x01D8 - 0x0000)
struct BP_EncountAreaBase_C_GetSymbolParam final
{
public:
	int32                                         DevilID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A2D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSymbolParam                        Param;                                             // 0x0008(0x00E0)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         L_DevilId;                                         // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A2E[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSymbolParam                        CallFunc_GetMapSymbolParam_Param;                  // 0x00F0(0x00E0)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_GetSymbolParam) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_GetSymbolParam");
static_assert(sizeof(BP_EncountAreaBase_C_GetSymbolParam) == 0x0001D8, "Wrong size on BP_EncountAreaBase_C_GetSymbolParam");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolParam, DevilID) == 0x000000, "Member 'BP_EncountAreaBase_C_GetSymbolParam::DevilID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolParam, Param) == 0x000008, "Member 'BP_EncountAreaBase_C_GetSymbolParam::Param' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolParam, L_DevilId) == 0x0000E8, "Member 'BP_EncountAreaBase_C_GetSymbolParam::L_DevilId' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolParam, CallFunc_GetMapSymbolParam_Param) == 0x0000F0, "Member 'BP_EncountAreaBase_C_GetSymbolParam::CallFunc_GetMapSymbolParam_Param' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetSymbolParam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001D0, "Member 'BP_EncountAreaBase_C_GetSymbolParam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.ExtractInt_FromStr
// 0x0090 (0x0090 - 0x0000)
struct BP_EncountAreaBase_C_ExtractInt_FromStr final
{
public:
	class FString                                 Str;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Int;                                               // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A2F[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 L_NumStr;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         L_CharList;                                        // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0038(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A30[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A31[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_ExtractInt_FromStr) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_ExtractInt_FromStr");
static_assert(sizeof(BP_EncountAreaBase_C_ExtractInt_FromStr) == 0x000090, "Wrong size on BP_EncountAreaBase_C_ExtractInt_FromStr");
static_assert(offsetof(BP_EncountAreaBase_C_ExtractInt_FromStr, Str) == 0x000000, "Member 'BP_EncountAreaBase_C_ExtractInt_FromStr::Str' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExtractInt_FromStr, Int) == 0x000010, "Member 'BP_EncountAreaBase_C_ExtractInt_FromStr::Int' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExtractInt_FromStr, L_NumStr) == 0x000018, "Member 'BP_EncountAreaBase_C_ExtractInt_FromStr::L_NumStr' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExtractInt_FromStr, L_CharList) == 0x000028, "Member 'BP_EncountAreaBase_C_ExtractInt_FromStr::L_CharList' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExtractInt_FromStr, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000038, "Member 'BP_EncountAreaBase_C_ExtractInt_FromStr::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExtractInt_FromStr, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_EncountAreaBase_C_ExtractInt_FromStr::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExtractInt_FromStr, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_EncountAreaBase_C_ExtractInt_FromStr::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExtractInt_FromStr, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_EncountAreaBase_C_ExtractInt_FromStr::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExtractInt_FromStr, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_EncountAreaBase_C_ExtractInt_FromStr::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExtractInt_FromStr, CallFunc_IsNumeric_ReturnValue) == 0x000064, "Member 'BP_EncountAreaBase_C_ExtractInt_FromStr::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExtractInt_FromStr, CallFunc_Less_IntInt_ReturnValue) == 0x000065, "Member 'BP_EncountAreaBase_C_ExtractInt_FromStr::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExtractInt_FromStr, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_EncountAreaBase_C_ExtractInt_FromStr::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExtractInt_FromStr, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'BP_EncountAreaBase_C_ExtractInt_FromStr::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExtractInt_FromStr, CallFunc_Conv_StringToInt_ReturnValue) == 0x000080, "Member 'BP_EncountAreaBase_C_ExtractInt_FromStr::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExtractInt_FromStr, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x000084, "Member 'BP_EncountAreaBase_C_ExtractInt_FromStr::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExtractInt_FromStr, CallFunc_Len_ReturnValue) == 0x000088, "Member 'BP_EncountAreaBase_C_ExtractInt_FromStr::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ExtractInt_FromStr, CallFunc_Greater_IntInt_ReturnValue) == 0x00008C, "Member 'BP_EncountAreaBase_C_ExtractInt_FromStr::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.RecordActPattern
// 0x0078 (0x0078 - 0x0000)
struct BP_EncountAreaBase_C_RecordActPattern final
{
public:
	class AActor*                                 Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSymbolComponent_Valid;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A32[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             CallFunc_GetSymbolComponent_Comp;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable_2;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable_3;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable_4;                              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable_5;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable_6;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable_7;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable_8;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable_9;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable_10;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable_11;                             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable_12;                             // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable_13;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable_14;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              Temp_byte_Variable_15;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              K2Node_Select_Default;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              K2Node_Select_Default_1;                           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A33[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSymbolActRecord                       K2Node_MakeStruct_SymbolActRecord;                 // 0x0030(0x0020)(HasGetValueTypeHash)
	struct FSymbolActRecord                       K2Node_SetFieldsInStruct_StructOut;                // 0x0050(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_RecordActPattern) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_RecordActPattern");
static_assert(sizeof(BP_EncountAreaBase_C_RecordActPattern) == 0x000078, "Wrong size on BP_EncountAreaBase_C_RecordActPattern");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Pawn) == 0x000000, "Member 'BP_EncountAreaBase_C_RecordActPattern::Pawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Param_Index) == 0x000008, "Member 'BP_EncountAreaBase_C_RecordActPattern::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Temp_byte_Variable) == 0x00000C, "Member 'BP_EncountAreaBase_C_RecordActPattern::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, CallFunc_GetSymbolComponent_Valid) == 0x00000D, "Member 'BP_EncountAreaBase_C_RecordActPattern::CallFunc_GetSymbolComponent_Valid' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, CallFunc_GetSymbolComponent_Comp) == 0x000010, "Member 'BP_EncountAreaBase_C_RecordActPattern::CallFunc_GetSymbolComponent_Comp' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, CallFunc_Max_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_RecordActPattern::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Temp_byte_Variable_1) == 0x00001C, "Member 'BP_EncountAreaBase_C_RecordActPattern::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Temp_byte_Variable_2) == 0x00001D, "Member 'BP_EncountAreaBase_C_RecordActPattern::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Temp_byte_Variable_3) == 0x00001E, "Member 'BP_EncountAreaBase_C_RecordActPattern::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Temp_byte_Variable_4) == 0x00001F, "Member 'BP_EncountAreaBase_C_RecordActPattern::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Temp_byte_Variable_5) == 0x000020, "Member 'BP_EncountAreaBase_C_RecordActPattern::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Temp_byte_Variable_6) == 0x000021, "Member 'BP_EncountAreaBase_C_RecordActPattern::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Temp_byte_Variable_7) == 0x000022, "Member 'BP_EncountAreaBase_C_RecordActPattern::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Temp_byte_Variable_8) == 0x000023, "Member 'BP_EncountAreaBase_C_RecordActPattern::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Temp_byte_Variable_9) == 0x000024, "Member 'BP_EncountAreaBase_C_RecordActPattern::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Temp_byte_Variable_10) == 0x000025, "Member 'BP_EncountAreaBase_C_RecordActPattern::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Temp_byte_Variable_11) == 0x000026, "Member 'BP_EncountAreaBase_C_RecordActPattern::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Temp_byte_Variable_12) == 0x000027, "Member 'BP_EncountAreaBase_C_RecordActPattern::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Temp_byte_Variable_13) == 0x000028, "Member 'BP_EncountAreaBase_C_RecordActPattern::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Temp_byte_Variable_14) == 0x000029, "Member 'BP_EncountAreaBase_C_RecordActPattern::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, Temp_byte_Variable_15) == 0x00002A, "Member 'BP_EncountAreaBase_C_RecordActPattern::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, K2Node_Select_Default) == 0x00002B, "Member 'BP_EncountAreaBase_C_RecordActPattern::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, K2Node_Select_Default_1) == 0x00002C, "Member 'BP_EncountAreaBase_C_RecordActPattern::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, K2Node_MakeStruct_SymbolActRecord) == 0x000030, "Member 'BP_EncountAreaBase_C_RecordActPattern::K2Node_MakeStruct_SymbolActRecord' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, K2Node_SetFieldsInStruct_StructOut) == 0x000050, "Member 'BP_EncountAreaBase_C_RecordActPattern::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_RecordActPattern, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000070, "Member 'BP_EncountAreaBase_C_RecordActPattern::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.ActorsToLocations
// 0x0060 (0x0060 - 0x0000)
struct BP_EncountAreaBase_C_ActorsToLocations final
{
public:
	TArray<class AActor*>                         Actors;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FVector>                        Locations;                                         // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FVector>                        L_Ret;                                             // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A34[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A35[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_ActorsToLocations) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_ActorsToLocations");
static_assert(sizeof(BP_EncountAreaBase_C_ActorsToLocations) == 0x000060, "Wrong size on BP_EncountAreaBase_C_ActorsToLocations");
static_assert(offsetof(BP_EncountAreaBase_C_ActorsToLocations, Actors) == 0x000000, "Member 'BP_EncountAreaBase_C_ActorsToLocations::Actors' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ActorsToLocations, Locations) == 0x000010, "Member 'BP_EncountAreaBase_C_ActorsToLocations::Locations' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ActorsToLocations, L_Ret) == 0x000020, "Member 'BP_EncountAreaBase_C_ActorsToLocations::L_Ret' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ActorsToLocations, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_EncountAreaBase_C_ActorsToLocations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ActorsToLocations, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'BP_EncountAreaBase_C_ActorsToLocations::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ActorsToLocations, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_EncountAreaBase_C_ActorsToLocations::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ActorsToLocations, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_EncountAreaBase_C_ActorsToLocations::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ActorsToLocations, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_EncountAreaBase_C_ActorsToLocations::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ActorsToLocations, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_EncountAreaBase_C_ActorsToLocations::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ActorsToLocations, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00004C, "Member 'BP_EncountAreaBase_C_ActorsToLocations::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ActorsToLocations, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_EncountAreaBase_C_ActorsToLocations::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ActorsToLocations, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_EncountAreaBase_C_ActorsToLocations::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.InitCompData
// 0x00F0 (0x00F0 - 0x0000)
struct BP_EncountAreaBase_C_InitCompData final
{
public:
	int32                                         CallFunc_GetSymbolID_SymbolId;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A36[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSymbolParam                        CallFunc_GetSymbolParam_Param;                     // 0x0008(0x00E0)(HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_InitCompData) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_InitCompData");
static_assert(sizeof(BP_EncountAreaBase_C_InitCompData) == 0x0000F0, "Wrong size on BP_EncountAreaBase_C_InitCompData");
static_assert(offsetof(BP_EncountAreaBase_C_InitCompData, CallFunc_GetSymbolID_SymbolId) == 0x000000, "Member 'BP_EncountAreaBase_C_InitCompData::CallFunc_GetSymbolID_SymbolId' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitCompData, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_EncountAreaBase_C_InitCompData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitCompData, CallFunc_GetSymbolParam_Param) == 0x000008, "Member 'BP_EncountAreaBase_C_InitCompData::CallFunc_GetSymbolParam_Param' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_InitCompData, CallFunc_FMax_ReturnValue) == 0x0000E8, "Member 'BP_EncountAreaBase_C_InitCompData::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.TraceSpawnPoint
// 0x02A0 (0x02A0 - 0x0000)
struct BP_EncountAreaBase_C_TraceSpawnPoint final
{
public:
	struct FVector                                SpawnPoint;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A37[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OutSpawnPoint;                                     // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A38[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A39[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A3A[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0060(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFly_IsFly;                           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFly_IsFly_1;                         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFly_IsFly_2;                         // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFly_IsFly_3;                         // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A3B[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0128(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A3C[0x1];                                     // 0x01B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A3D[0x4];                                     // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A3E[0xB];                                     // 0x0255(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0260(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_TraceSpawnPoint) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_TraceSpawnPoint");
static_assert(sizeof(BP_EncountAreaBase_C_TraceSpawnPoint) == 0x0002A0, "Wrong size on BP_EncountAreaBase_C_TraceSpawnPoint");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, SpawnPoint) == 0x000000, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, OutSpawnPoint) == 0x000010, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::OutSpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, Success) == 0x000040, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::Success' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_MakeVector_ReturnValue) == 0x000044, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, Temp_bool_Variable) == 0x000050, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, Temp_bool_Variable_1) == 0x000051, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, Temp_float_Variable) == 0x000054, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, Temp_float_Variable_1) == 0x000058, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, Temp_object_Variable) == 0x000060, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_MakeVector_ReturnValue_1) == 0x000070, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00007C, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_CheckFly_IsFly) == 0x000088, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_CheckFly_IsFly' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_CheckFly_IsFly_1) == 0x000089, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_CheckFly_IsFly_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_CheckFly_IsFly_2) == 0x00008A, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_CheckFly_IsFly_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_CheckFly_IsFly_3) == 0x00008B, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_CheckFly_IsFly_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, K2Node_Select_Default) == 0x00008C, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000090, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakVector_X) == 0x0000D0, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakVector_Y) == 0x0000D4, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakVector_Z) == 0x0000D8, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000DC, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x0000E0, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_GetUpVector_ReturnValue) == 0x0000EC, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F8, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000104, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000110, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00011C, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_LineTraceSingle_OutHit) == 0x000128, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_LineTraceSingle_ReturnValue) == 0x0001B0, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakHitResult_bBlockingHit) == 0x0001B1, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001B2, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakHitResult_Time) == 0x0001B4, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakHitResult_Distance) == 0x0001B8, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakHitResult_Location) == 0x0001BC, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakHitResult_ImpactPoint) == 0x0001C8, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakHitResult_Normal) == 0x0001D4, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakHitResult_ImpactNormal) == 0x0001E0, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakHitResult_PhysMat) == 0x0001F0, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakHitResult_HitActor) == 0x0001F8, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakHitResult_HitComponent) == 0x000200, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakHitResult_HitBoneName) == 0x000208, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakHitResult_HitItem) == 0x000210, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakHitResult_ElementIndex) == 0x000214, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakHitResult_FaceIndex) == 0x000218, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakHitResult_TraceStart) == 0x00021C, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BreakHitResult_TraceEnd) == 0x000228, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_Dot_VectorVector_ReturnValue) == 0x000234, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000238, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_DegAcos_ReturnValue) == 0x000244, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, K2Node_Select_Default_1) == 0x000248, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_Less_FloatFloat_ReturnValue) == 0x000254, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_MakeTransform_ReturnValue_1) == 0x000260, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_TraceSpawnPoint, CallFunc_BooleanOR_ReturnValue) == 0x000290, "Member 'BP_EncountAreaBase_C_TraceSpawnPoint::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetReqSpawnSymbolNum
// 0x00D0 (0x00D0 - 0x0000)
struct BP_EncountAreaBase_C_GetReqSpawnSymbolNum final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Num;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item;                           // 0x0020(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_GetReqSpawnSymbolNum) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_GetReqSpawnSymbolNum");
static_assert(sizeof(BP_EncountAreaBase_C_GetReqSpawnSymbolNum) == 0x0000D0, "Wrong size on BP_EncountAreaBase_C_GetReqSpawnSymbolNum");
static_assert(offsetof(BP_EncountAreaBase_C_GetReqSpawnSymbolNum, Num) == 0x000000, "Member 'BP_EncountAreaBase_C_GetReqSpawnSymbolNum::Num' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetReqSpawnSymbolNum, L_Num) == 0x000004, "Member 'BP_EncountAreaBase_C_GetReqSpawnSymbolNum::L_Num' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetReqSpawnSymbolNum, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EncountAreaBase_C_GetReqSpawnSymbolNum::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetReqSpawnSymbolNum, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EncountAreaBase_C_GetReqSpawnSymbolNum::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetReqSpawnSymbolNum, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EncountAreaBase_C_GetReqSpawnSymbolNum::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetReqSpawnSymbolNum, Temp_int_Variable) == 0x000014, "Member 'BP_EncountAreaBase_C_GetReqSpawnSymbolNum::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetReqSpawnSymbolNum, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_EncountAreaBase_C_GetReqSpawnSymbolNum::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetReqSpawnSymbolNum, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_EncountAreaBase_C_GetReqSpawnSymbolNum::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetReqSpawnSymbolNum, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EncountAreaBase_C_GetReqSpawnSymbolNum::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetReqSpawnSymbolNum, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_EncountAreaBase_C_GetReqSpawnSymbolNum::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.SpawnAreaIN
// 0x0034 (0x0034 - 0x0000)
struct BP_EncountAreaBase_C_SpawnAreaIN final
{
public:
	bool                                          Param_IsSpawnEffectOFF;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Param_IgnorePauseSpawn;                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Param_IsSummon;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Param_OtherHit;                                    // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A3F[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A40[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A41[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A42[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_SpawnAreaIN) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_SpawnAreaIN");
static_assert(sizeof(BP_EncountAreaBase_C_SpawnAreaIN) == 0x000034, "Wrong size on BP_EncountAreaBase_C_SpawnAreaIN");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnAreaIN, Param_IsSpawnEffectOFF) == 0x000000, "Member 'BP_EncountAreaBase_C_SpawnAreaIN::Param_IsSpawnEffectOFF' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnAreaIN, Param_IgnorePauseSpawn) == 0x000001, "Member 'BP_EncountAreaBase_C_SpawnAreaIN::Param_IgnorePauseSpawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnAreaIN, Param_IsSummon) == 0x000002, "Member 'BP_EncountAreaBase_C_SpawnAreaIN::Param_IsSummon' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnAreaIN, Param_OtherHit) == 0x000003, "Member 'BP_EncountAreaBase_C_SpawnAreaIN::Param_OtherHit' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnAreaIN, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EncountAreaBase_C_SpawnAreaIN::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnAreaIN, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EncountAreaBase_C_SpawnAreaIN::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnAreaIN, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EncountAreaBase_C_SpawnAreaIN::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnAreaIN, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_EncountAreaBase_C_SpawnAreaIN::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnAreaIN, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_EncountAreaBase_C_SpawnAreaIN::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnAreaIN, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_SpawnAreaIN::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnAreaIN, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EncountAreaBase_C_SpawnAreaIN::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnAreaIN, CallFunc_Array_Length_ReturnValue_1) == 0x000020, "Member 'BP_EncountAreaBase_C_SpawnAreaIN::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnAreaIN, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_EncountAreaBase_C_SpawnAreaIN::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnAreaIN, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'BP_EncountAreaBase_C_SpawnAreaIN::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnAreaIN, CallFunc_Less_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_EncountAreaBase_C_SpawnAreaIN::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnAreaIN, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_EncountAreaBase_C_SpawnAreaIN::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.SpawnAreaOut
// 0x0001 (0x0001 - 0x0000)
struct BP_EncountAreaBase_C_SpawnAreaOut final
{
public:
	bool                                          IsReturnEffectOFF;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_SpawnAreaOut) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_SpawnAreaOut");
static_assert(sizeof(BP_EncountAreaBase_C_SpawnAreaOut) == 0x000001, "Wrong size on BP_EncountAreaBase_C_SpawnAreaOut");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnAreaOut, IsReturnEffectOFF) == 0x000000, "Member 'BP_EncountAreaBase_C_SpawnAreaOut::IsReturnEffectOFF' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CalcTimeAttackMissionSaveID
// 0x00D0 (0x00D0 - 0x0000)
struct BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID final
{
public:
	class ABP_EncountAreaBase_C*                  L_EncountArea;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_Find;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A43[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_EncountAreaBase_C*>          L_EncountAreas_MissionOnly;                        // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<int32>                                 L_MissionSaveNums;                                 // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         L_MissionId;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A44[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_EncountAreaBase_C*>          L_EncountAreas;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<int32>                                 L_MissionIDs;                                      // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A45[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A46[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A47[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountAreaBase_C*                  CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A48[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EncountAreaBase_C*                  CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A49[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A4A[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_EncountAreaBase_C*>          CallFunc_GetAllActorsOfClass_OutActors;            // 0x00C0(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID");
static_assert(sizeof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID) == 0x0000D0, "Wrong size on BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, L_EncountArea) == 0x000000, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::L_EncountArea' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, L_Find) == 0x000008, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::L_Find' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, L_EncountAreas_MissionOnly) == 0x000010, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::L_EncountAreas_MissionOnly' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, L_MissionSaveNums) == 0x000020, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::L_MissionSaveNums' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, L_MissionId) == 0x000030, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::L_MissionId' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, L_EncountAreas) == 0x000038, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::L_EncountAreas' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, L_MissionIDs) == 0x000048, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::L_MissionIDs' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, Temp_int_Variable) == 0x000058, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, Temp_int_Loop_Counter_Variable_1) == 0x000068, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000078, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_Add_IntInt_ReturnValue_2) == 0x00007C, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_Array_Find_ReturnValue) == 0x000080, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_Array_Length_ReturnValue_1) == 0x00009C, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_Array_Add_ReturnValue_1) == 0x0000A0, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_Array_Find_ReturnValue_1) == 0x0000A4, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B0, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_Array_Length_ReturnValue_2) == 0x0000B4, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000B8, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000C0, "Member 'BP_EncountAreaBase_C_CalcTimeAttackMissionSaveID::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CalcEncountID
// 0x00F0 (0x00F0 - 0x0000)
struct BP_EncountAreaBase_C_CalcEncountID final
{
public:
	bool                                          ManualSeed;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A4B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Seed;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckMitama;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OnceCalc;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A4C[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          L_RandomStream;                                    // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	int32                                         L_Seed;                                            // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A4D[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A4E[0xD];                                     // 0x0023(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item;                           // 0x0030(0x00A0)(HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetRandomEncountId_EncountId;             // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A4F[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_CalcEncountID) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_CalcEncountID");
static_assert(sizeof(BP_EncountAreaBase_C_CalcEncountID) == 0x0000F0, "Wrong size on BP_EncountAreaBase_C_CalcEncountID");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, ManualSeed) == 0x000000, "Member 'BP_EncountAreaBase_C_CalcEncountID::ManualSeed' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, Seed) == 0x000004, "Member 'BP_EncountAreaBase_C_CalcEncountID::Seed' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, CheckMitama) == 0x000008, "Member 'BP_EncountAreaBase_C_CalcEncountID::CheckMitama' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, OnceCalc) == 0x000009, "Member 'BP_EncountAreaBase_C_CalcEncountID::OnceCalc' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, L_RandomStream) == 0x00000C, "Member 'BP_EncountAreaBase_C_CalcEncountID::L_RandomStream' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, L_Seed) == 0x000014, "Member 'BP_EncountAreaBase_C_CalcEncountID::L_Seed' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_CalcEncountID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, CallFunc_Not_PreBool_ReturnValue_1) == 0x000019, "Member 'BP_EncountAreaBase_C_CalcEncountID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_EncountAreaBase_C_CalcEncountID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, CallFunc_Not_PreBool_ReturnValue_2) == 0x000020, "Member 'BP_EncountAreaBase_C_CalcEncountID::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'BP_EncountAreaBase_C_CalcEncountID::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, CallFunc_Greater_IntInt_ReturnValue) == 0x000022, "Member 'BP_EncountAreaBase_C_CalcEncountID::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_EncountAreaBase_C_CalcEncountID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, CallFunc_MakeRandomStream_ReturnValue) == 0x0000D0, "Member 'BP_EncountAreaBase_C_CalcEncountID::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, CallFunc_GetRandomEncountId_EncountId) == 0x0000D8, "Member 'BP_EncountAreaBase_C_CalcEncountID::CallFunc_GetRandomEncountId_EncountId' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, CallFunc_Array_Length_ReturnValue) == 0x0000DC, "Member 'BP_EncountAreaBase_C_CalcEncountID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, Temp_int_Loop_Counter_Variable) == 0x0000E0, "Member 'BP_EncountAreaBase_C_CalcEncountID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, CallFunc_RandomInteger_ReturnValue) == 0x0000E4, "Member 'BP_EncountAreaBase_C_CalcEncountID::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_EncountAreaBase_C_CalcEncountID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncountID, CallFunc_Add_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_EncountAreaBase_C_CalcEncountID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CheckSpawnable_ForTimeAttack
// 0x0003 (0x0003 - 0x0000)
struct BP_EncountAreaBase_C_CheckSpawnable_ForTimeAttack final
{
public:
	bool                                          Spawnable;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInTimeAttack_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CheckSpawnable_ForTimeAttack) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_CheckSpawnable_ForTimeAttack");
static_assert(sizeof(BP_EncountAreaBase_C_CheckSpawnable_ForTimeAttack) == 0x000003, "Wrong size on BP_EncountAreaBase_C_CheckSpawnable_ForTimeAttack");
static_assert(offsetof(BP_EncountAreaBase_C_CheckSpawnable_ForTimeAttack, Spawnable) == 0x000000, "Member 'BP_EncountAreaBase_C_CheckSpawnable_ForTimeAttack::Spawnable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckSpawnable_ForTimeAttack, CallFunc_IsInTimeAttack_ReturnValue) == 0x000001, "Member 'BP_EncountAreaBase_C_CheckSpawnable_ForTimeAttack::CallFunc_IsInTimeAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckSpawnable_ForTimeAttack, CallFunc_Greater_IntInt_ReturnValue) == 0x000002, "Member 'BP_EncountAreaBase_C_CheckSpawnable_ForTimeAttack::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CalcEncount_ForTimeAttack
// 0x0040 (0x0040 - 0x0000)
struct BP_EncountAreaBase_C_CalcEncount_ForTimeAttack final
{
public:
	TArray<bool>                                  L_KillFlags;                                       // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTimeAttackEncountAreaRandomSeed_ReturnValue; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A50[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_GetTimeAttackEncountAreaKillFlags_ReturnValue; // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsInTimeAttack_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CalcEncount_ForTimeAttack) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_CalcEncount_ForTimeAttack");
static_assert(sizeof(BP_EncountAreaBase_C_CalcEncount_ForTimeAttack) == 0x000040, "Wrong size on BP_EncountAreaBase_C_CalcEncount_ForTimeAttack");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncount_ForTimeAttack, L_KillFlags) == 0x000000, "Member 'BP_EncountAreaBase_C_CalcEncount_ForTimeAttack::L_KillFlags' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncount_ForTimeAttack, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EncountAreaBase_C_CalcEncount_ForTimeAttack::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncount_ForTimeAttack, CallFunc_GetTimeAttackEncountAreaRandomSeed_ReturnValue) == 0x000014, "Member 'BP_EncountAreaBase_C_CalcEncount_ForTimeAttack::CallFunc_GetTimeAttackEncountAreaRandomSeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncount_ForTimeAttack, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_EncountAreaBase_C_CalcEncount_ForTimeAttack::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncount_ForTimeAttack, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EncountAreaBase_C_CalcEncount_ForTimeAttack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncount_ForTimeAttack, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_EncountAreaBase_C_CalcEncount_ForTimeAttack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncount_ForTimeAttack, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_EncountAreaBase_C_CalcEncount_ForTimeAttack::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncount_ForTimeAttack, CallFunc_GetTimeAttackEncountAreaKillFlags_ReturnValue) == 0x000028, "Member 'BP_EncountAreaBase_C_CalcEncount_ForTimeAttack::CallFunc_GetTimeAttackEncountAreaKillFlags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncount_ForTimeAttack, CallFunc_IsInTimeAttack_ReturnValue) == 0x000038, "Member 'BP_EncountAreaBase_C_CalcEncount_ForTimeAttack::CallFunc_IsInTimeAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcEncount_ForTimeAttack, CallFunc_Greater_IntInt_ReturnValue) == 0x000039, "Member 'BP_EncountAreaBase_C_CalcEncount_ForTimeAttack::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CalcMitamaAll
// 0x0170 (0x0170 - 0x0000)
struct BP_EncountAreaBase_C_CalcMitamaAll final
{
public:
	int32                                         L_index;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A51[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       L_Data;                                            // 0x0010(0x00A0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MITAMA_ENCOUNT                              CallFunc_CalcMitama_MitamaType;                    // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A52[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item;                           // 0x00C0(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A53[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CalcMitamaAll) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_CalcMitamaAll");
static_assert(sizeof(BP_EncountAreaBase_C_CalcMitamaAll) == 0x000170, "Wrong size on BP_EncountAreaBase_C_CalcMitamaAll");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitamaAll, L_index) == 0x000000, "Member 'BP_EncountAreaBase_C_CalcMitamaAll::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitamaAll, L_Data) == 0x000010, "Member 'BP_EncountAreaBase_C_CalcMitamaAll::L_Data' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitamaAll, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'BP_EncountAreaBase_C_CalcMitamaAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitamaAll, CallFunc_CalcMitama_MitamaType) == 0x0000B4, "Member 'BP_EncountAreaBase_C_CalcMitamaAll::CallFunc_CalcMitama_MitamaType' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitamaAll, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'BP_EncountAreaBase_C_CalcMitamaAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitamaAll, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_EncountAreaBase_C_CalcMitamaAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitamaAll, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_EncountAreaBase_C_CalcMitamaAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitamaAll, CallFunc_Not_PreBool_ReturnValue) == 0x000160, "Member 'BP_EncountAreaBase_C_CalcMitamaAll::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitamaAll, CallFunc_Array_Length_ReturnValue) == 0x000164, "Member 'BP_EncountAreaBase_C_CalcMitamaAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMitamaAll, CallFunc_Less_IntInt_ReturnValue) == 0x000168, "Member 'BP_EncountAreaBase_C_CalcMitamaAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CalcMagatsuhiDevil
// 0x05E0 (0x05E0 - 0x0000)
struct BP_EncountAreaBase_C_CalcMagatsuhiDevil final
{
public:
	int32                                         L_Rate;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_MagatsuhiDebugRate;                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_AllMagatsuhi;                                    // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_Magatsuhi;                                       // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A54[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_Rand;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPackEncount                           L_Pack;                                            // 0x0010(0x0058)(Edit, BlueprintVisible)
	int32                                         L_index;                                           // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A55[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       L_Data;                                            // 0x0070(0x00A0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A56[0x2];                                     // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IS_SHIPPING_BUILD_ReturnValue;            // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A57[0x5];                                     // 0x0163(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue; // 0x0168(0x00D0)()
	bool                                          CallFunc_IS_SHIPPING_BUILD_ReturnValue_1;          // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A58[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A59[0x2];                                     // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_1; // 0x0258(0x00D0)()
	bool                                          CallFunc_CheckEventFlag_ReturnValue;               // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x032A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x032B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A5A[0x4];                                     // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0330(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDevilName_ReturnValue;                 // 0x0340(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A5B[0x3];                                     // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A5C[0x4];                                     // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x03D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x03E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x03F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0400(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A5D[0x7];                                     // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0418(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0428(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A5E[0x4];                                     // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0440(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A5F[0x4];                                     // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0468(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0478(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A60[0x4];                                     // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0490(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x04A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x04B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A61[0x7];                                     // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPackEncount                           CallFunc_GetEncountPack_Pack;                      // 0x04C8(0x0058)()
	int32                                         CallFunc_GetEncountPack_PackId;                    // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A62[0x8];                                     // 0x0528(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item;                           // 0x0530(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CalcMagatsuhiDevil) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_CalcMagatsuhiDevil");
static_assert(sizeof(BP_EncountAreaBase_C_CalcMagatsuhiDevil) == 0x0005E0, "Wrong size on BP_EncountAreaBase_C_CalcMagatsuhiDevil");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, L_Rate) == 0x000000, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::L_Rate' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, L_MagatsuhiDebugRate) == 0x000004, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::L_MagatsuhiDebugRate' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, L_AllMagatsuhi) == 0x000008, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::L_AllMagatsuhi' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, L_Magatsuhi) == 0x000009, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::L_Magatsuhi' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, L_Rand) == 0x00000C, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::L_Rand' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, L_Pack) == 0x000010, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::L_Pack' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, L_index) == 0x000068, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, L_Data) == 0x000070, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::L_Data' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, K2Node_MakeStruct_Color) == 0x000110, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::K2Node_MakeStruct_Color' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Greater_IntInt_ReturnValue) == 0x000114, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, Temp_bool_Variable) == 0x000115, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Percent_IntInt_ReturnValue) == 0x000118, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Divide_IntInt_ReturnValue) == 0x00011C, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Conv_IntToString_ReturnValue) == 0x000120, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000130, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Concat_StrStr_ReturnValue) == 0x000140, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000150, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000160, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_IS_SHIPPING_BUILD_ReturnValue) == 0x000161, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_IS_SHIPPING_BUILD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Not_PreBool_ReturnValue) == 0x000162, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue) == 0x000168, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_IS_SHIPPING_BUILD_ReturnValue_1) == 0x000238, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_IS_SHIPPING_BUILD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Multiply_IntInt_ReturnValue) == 0x00023C, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Not_PreBool_ReturnValue_1) == 0x000240, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Not_PreBool_ReturnValue_2) == 0x000241, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, Temp_int_Array_Index_Variable) == 0x000244, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, Temp_string_Variable) == 0x000248, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_1) == 0x000258, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_CheckEventFlag_ReturnValue) == 0x000328, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_CheckEventFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000329, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Not_PreBool_ReturnValue_3) == 0x00032A, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Not_PreBool_ReturnValue_4) == 0x00032B, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, Temp_string_Variable_1) == 0x000330, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_GetDevilName_ReturnValue) == 0x000340, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_GetDevilName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Conv_TextToString_ReturnValue) == 0x000358, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000368, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Divide_IntInt_ReturnValue_1) == 0x00036C, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000370, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000380, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000390, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Conv_IntToString_ReturnValue_4) == 0x0003A0, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0003B0, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_GetMapID_ReturnValue) == 0x0003C0, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, Temp_bool_Variable_1) == 0x0003C4, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, K2Node_Select_Default) == 0x0003C8, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Conv_IntToString_ReturnValue_5) == 0x0003D0, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, K2Node_Select_Default_1) == 0x0003E0, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0003F0, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000400, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Less_IntInt_ReturnValue) == 0x000410, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000418, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000428, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_RandomInteger_ReturnValue) == 0x000438, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000440, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000450, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, Temp_int_Loop_Counter_Variable) == 0x000460, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000468, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000478, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Add_IntInt_ReturnValue) == 0x000488, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000490, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Concat_StrStr_ReturnValue_13) == 0x0004A0, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Concat_StrStr_ReturnValue_14) == 0x0004B0, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0004C0, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_GetEncountPack_Pack) == 0x0004C8, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_GetEncountPack_Pack' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_GetEncountPack_PackId) == 0x000520, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_GetEncountPack_PackId' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Array_Length_ReturnValue) == 0x000524, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Array_Get_Item) == 0x000530, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcMagatsuhiDevil, CallFunc_Less_IntInt_ReturnValue_1) == 0x0005D0, "Member 'BP_EncountAreaBase_C_CalcMagatsuhiDevil::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.SaveSplineCompInfo
// 0x0098 (0x0098 - 0x0000)
struct BP_EncountAreaBase_C_SaveSplineCompInfo final
{
public:
	int32                                         L_index;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_PointNum;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       L_Spline;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A63[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A64[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplinePointType                              CallFunc_GetSplinePointType_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A65[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue;     // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue; // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetArriveTangentAtSplinePoint_ReturnValue; // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_GetSpline_Spline;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSplineCompPointInfo                   K2Node_MakeStruct_SplineCompPointInfo;             // 0x0064(0x0034)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_SaveSplineCompInfo) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_SaveSplineCompInfo");
static_assert(sizeof(BP_EncountAreaBase_C_SaveSplineCompInfo) == 0x000098, "Wrong size on BP_EncountAreaBase_C_SaveSplineCompInfo");
static_assert(offsetof(BP_EncountAreaBase_C_SaveSplineCompInfo, L_index) == 0x000000, "Member 'BP_EncountAreaBase_C_SaveSplineCompInfo::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SaveSplineCompInfo, L_PointNum) == 0x000004, "Member 'BP_EncountAreaBase_C_SaveSplineCompInfo::L_PointNum' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SaveSplineCompInfo, L_Spline) == 0x000008, "Member 'BP_EncountAreaBase_C_SaveSplineCompInfo::L_Spline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SaveSplineCompInfo, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EncountAreaBase_C_SaveSplineCompInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SaveSplineCompInfo, Temp_int_Variable) == 0x000014, "Member 'BP_EncountAreaBase_C_SaveSplineCompInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SaveSplineCompInfo, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_SaveSplineCompInfo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SaveSplineCompInfo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EncountAreaBase_C_SaveSplineCompInfo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SaveSplineCompInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EncountAreaBase_C_SaveSplineCompInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SaveSplineCompInfo, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000024, "Member 'BP_EncountAreaBase_C_SaveSplineCompInfo::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SaveSplineCompInfo, CallFunc_GetSplinePointType_ReturnValue) == 0x000028, "Member 'BP_EncountAreaBase_C_SaveSplineCompInfo::CallFunc_GetSplinePointType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SaveSplineCompInfo, CallFunc_GetRotationAtSplinePoint_ReturnValue) == 0x00002C, "Member 'BP_EncountAreaBase_C_SaveSplineCompInfo::CallFunc_GetRotationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SaveSplineCompInfo, CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue) == 0x000038, "Member 'BP_EncountAreaBase_C_SaveSplineCompInfo::CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SaveSplineCompInfo, CallFunc_GetArriveTangentAtSplinePoint_ReturnValue) == 0x000044, "Member 'BP_EncountAreaBase_C_SaveSplineCompInfo::CallFunc_GetArriveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SaveSplineCompInfo, CallFunc_GetSpline_Spline) == 0x000050, "Member 'BP_EncountAreaBase_C_SaveSplineCompInfo::CallFunc_GetSpline_Spline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SaveSplineCompInfo, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000058, "Member 'BP_EncountAreaBase_C_SaveSplineCompInfo::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SaveSplineCompInfo, K2Node_MakeStruct_SplineCompPointInfo) == 0x000064, "Member 'BP_EncountAreaBase_C_SaveSplineCompInfo::K2Node_MakeStruct_SplineCompPointInfo' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.UpdateSplineCompInfo
// 0x00B0 (0x00B0 - 0x0000)
struct BP_EncountAreaBase_C_UpdateSplineCompInfo final
{
public:
	bool                                          L_Loop;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A66[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_index;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSplineCompPointInfo                   L_Info;                                            // 0x0008(0x0034)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A67[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       L_Spline;                                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A68[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A69[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClosedLoop_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A6A[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A6B[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_GetSpline_Spline;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSplineCompPointInfo                   CallFunc_Array_Get_Item;                           // 0x0070(0x0034)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_UpdateSplineCompInfo) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_UpdateSplineCompInfo");
static_assert(sizeof(BP_EncountAreaBase_C_UpdateSplineCompInfo) == 0x0000B0, "Wrong size on BP_EncountAreaBase_C_UpdateSplineCompInfo");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateSplineCompInfo, L_Loop) == 0x000000, "Member 'BP_EncountAreaBase_C_UpdateSplineCompInfo::L_Loop' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateSplineCompInfo, L_index) == 0x000004, "Member 'BP_EncountAreaBase_C_UpdateSplineCompInfo::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateSplineCompInfo, L_Info) == 0x000008, "Member 'BP_EncountAreaBase_C_UpdateSplineCompInfo::L_Info' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateSplineCompInfo, L_Spline) == 0x000040, "Member 'BP_EncountAreaBase_C_UpdateSplineCompInfo::L_Spline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateSplineCompInfo, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_EncountAreaBase_C_UpdateSplineCompInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateSplineCompInfo, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_EncountAreaBase_C_UpdateSplineCompInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateSplineCompInfo, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'BP_EncountAreaBase_C_UpdateSplineCompInfo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateSplineCompInfo, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BP_EncountAreaBase_C_UpdateSplineCompInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateSplineCompInfo, CallFunc_IsClosedLoop_ReturnValue) == 0x000058, "Member 'BP_EncountAreaBase_C_UpdateSplineCompInfo::CallFunc_IsClosedLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateSplineCompInfo, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_EncountAreaBase_C_UpdateSplineCompInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateSplineCompInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_EncountAreaBase_C_UpdateSplineCompInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateSplineCompInfo, CallFunc_GetSpline_Spline) == 0x000068, "Member 'BP_EncountAreaBase_C_UpdateSplineCompInfo::CallFunc_GetSpline_Spline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateSplineCompInfo, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_EncountAreaBase_C_UpdateSplineCompInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateSplineCompInfo, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'BP_EncountAreaBase_C_UpdateSplineCompInfo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateSplineCompInfo, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_EncountAreaBase_C_UpdateSplineCompInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.UpdateGeneratorActive
// 0x0090 (0x0090 - 0x0000)
struct BP_EncountAreaBase_C_UpdateGeneratorActive final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_Dead;                                            // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A6C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAreaIN_AreaIN;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAreaIN_AreaIN_1;                     // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A6D[0x1];                                     // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A6E[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDeadSymbolNum_Num;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A6F[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckGeneratorAreaIn_AreaIn;              // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckGeneratorAreaIn_AreaIn_1;            // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A70[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A71[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent;   // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A72[0x1];                                     // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_UpdateGeneratorActive) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_UpdateGeneratorActive");
static_assert(sizeof(BP_EncountAreaBase_C_UpdateGeneratorActive) == 0x000090, "Wrong size on BP_EncountAreaBase_C_UpdateGeneratorActive");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, DeltaSec) == 0x000000, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, L_Dead) == 0x000004, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::L_Dead' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_CheckAreaIN_AreaIN) == 0x000048, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_CheckAreaIN_AreaIN' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_CheckAreaIN_AreaIN_1) == 0x000049, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_CheckAreaIN_AreaIN_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_Add_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_GetDeadSymbolNum_Num) == 0x000058, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_GetDeadSymbolNum_Num' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_CheckGeneratorAreaIn_AreaIn) == 0x000065, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_CheckGeneratorAreaIn_AreaIn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_Not_PreBool_ReturnValue_1) == 0x000066, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_CheckGeneratorAreaIn_AreaIn_1) == 0x000067, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_CheckGeneratorAreaIn_AreaIn_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00006C, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent) == 0x000080, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_Less_IntInt_ReturnValue_1) == 0x000089, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00008A, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_UpdateGeneratorActive, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_EncountAreaBase_C_UpdateGeneratorActive::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GeneratorAreaIn
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_GeneratorAreaIn final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_GeneratorAreaIn) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_GeneratorAreaIn");
static_assert(sizeof(BP_EncountAreaBase_C_GeneratorAreaIn) == 0x000008, "Wrong size on BP_EncountAreaBase_C_GeneratorAreaIn");
static_assert(offsetof(BP_EncountAreaBase_C_GeneratorAreaIn, Temp_int_Variable) == 0x000000, "Member 'BP_EncountAreaBase_C_GeneratorAreaIn::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GeneratorAreaIn, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_EncountAreaBase_C_GeneratorAreaIn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GeneratorAreaOut
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_GeneratorAreaOut final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_GeneratorAreaOut) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_GeneratorAreaOut");
static_assert(sizeof(BP_EncountAreaBase_C_GeneratorAreaOut) == 0x000008, "Wrong size on BP_EncountAreaBase_C_GeneratorAreaOut");
static_assert(offsetof(BP_EncountAreaBase_C_GeneratorAreaOut, Temp_int_Variable) == 0x000000, "Member 'BP_EncountAreaBase_C_GeneratorAreaOut::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GeneratorAreaOut, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_EncountAreaBase_C_GeneratorAreaOut::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CheckGeneratorAreaIn
// 0x0002 (0x0002 - 0x0000)
struct BP_EncountAreaBase_C_CheckGeneratorAreaIn final
{
public:
	bool                                          AreaIN;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CheckGeneratorAreaIn) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_CheckGeneratorAreaIn");
static_assert(sizeof(BP_EncountAreaBase_C_CheckGeneratorAreaIn) == 0x000002, "Wrong size on BP_EncountAreaBase_C_CheckGeneratorAreaIn");
static_assert(offsetof(BP_EncountAreaBase_C_CheckGeneratorAreaIn, AreaIN) == 0x000000, "Member 'BP_EncountAreaBase_C_CheckGeneratorAreaIn::AreaIN' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckGeneratorAreaIn, CallFunc_Greater_IntInt_ReturnValue) == 0x000001, "Member 'BP_EncountAreaBase_C_CheckGeneratorAreaIn::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CalcSpawnPoint_Generator
// 0x00C0 (0x00C0 - 0x0000)
struct BP_EncountAreaBase_C_CalcSpawnPoint_Generator final
{
public:
	bool                                          LineTrace;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A73[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A74[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_TraceSpawnPoint_OutSpawnPoint;            // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TraceSpawnPoint_Success;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A75[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	TArray<struct FTransform>                     K2Node_MakeArray_Array_1;                          // 0x00A8(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_EncountAreaBase_C_CalcSpawnPoint_Generator) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_CalcSpawnPoint_Generator");
static_assert(sizeof(BP_EncountAreaBase_C_CalcSpawnPoint_Generator) == 0x0000C0, "Wrong size on BP_EncountAreaBase_C_CalcSpawnPoint_Generator");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPoint_Generator, LineTrace) == 0x000000, "Member 'BP_EncountAreaBase_C_CalcSpawnPoint_Generator::LineTrace' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPoint_Generator, CallFunc_BreakTransform_Location) == 0x000004, "Member 'BP_EncountAreaBase_C_CalcSpawnPoint_Generator::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPoint_Generator, CallFunc_BreakTransform_Rotation) == 0x000010, "Member 'BP_EncountAreaBase_C_CalcSpawnPoint_Generator::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPoint_Generator, CallFunc_BreakTransform_Scale) == 0x00001C, "Member 'BP_EncountAreaBase_C_CalcSpawnPoint_Generator::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPoint_Generator, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_EncountAreaBase_C_CalcSpawnPoint_Generator::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPoint_Generator, CallFunc_TraceSpawnPoint_OutSpawnPoint) == 0x000060, "Member 'BP_EncountAreaBase_C_CalcSpawnPoint_Generator::CallFunc_TraceSpawnPoint_OutSpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPoint_Generator, CallFunc_TraceSpawnPoint_Success) == 0x000090, "Member 'BP_EncountAreaBase_C_CalcSpawnPoint_Generator::CallFunc_TraceSpawnPoint_Success' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPoint_Generator, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_EncountAreaBase_C_CalcSpawnPoint_Generator::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcSpawnPoint_Generator, K2Node_MakeArray_Array_1) == 0x0000A8, "Member 'BP_EncountAreaBase_C_CalcSpawnPoint_Generator::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CanSpawn_WhenGeneratorActive
// 0x0002 (0x0002 - 0x0000)
struct BP_EncountAreaBase_C_CanSpawn_WhenGeneratorActive final
{
public:
	bool                                          CanSpawn;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CanSpawn_WhenGeneratorActive) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_CanSpawn_WhenGeneratorActive");
static_assert(sizeof(BP_EncountAreaBase_C_CanSpawn_WhenGeneratorActive) == 0x000002, "Wrong size on BP_EncountAreaBase_C_CanSpawn_WhenGeneratorActive");
static_assert(offsetof(BP_EncountAreaBase_C_CanSpawn_WhenGeneratorActive, CanSpawn) == 0x000000, "Member 'BP_EncountAreaBase_C_CanSpawn_WhenGeneratorActive::CanSpawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CanSpawn_WhenGeneratorActive, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_EncountAreaBase_C_CanSpawn_WhenGeneratorActive::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CheckSplineReverse
// 0x0001 (0x0001 - 0x0000)
struct BP_EncountAreaBase_C_CheckSplineReverse final
{
public:
	bool                                          Reverse;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CheckSplineReverse) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_CheckSplineReverse");
static_assert(sizeof(BP_EncountAreaBase_C_CheckSplineReverse) == 0x000001, "Wrong size on BP_EncountAreaBase_C_CheckSplineReverse");
static_assert(offsetof(BP_EncountAreaBase_C_CheckSplineReverse, Reverse) == 0x000000, "Member 'BP_EncountAreaBase_C_CheckSplineReverse::Reverse' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetOptionSplines
// 0x0010 (0x0010 - 0x0000)
struct BP_EncountAreaBase_C_GetOptionSplines final
{
public:
	TArray<class ABP_EncountArea_OptionSpline_C*> OptionSplines;                                     // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_EncountAreaBase_C_GetOptionSplines) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_GetOptionSplines");
static_assert(sizeof(BP_EncountAreaBase_C_GetOptionSplines) == 0x000010, "Wrong size on BP_EncountAreaBase_C_GetOptionSplines");
static_assert(offsetof(BP_EncountAreaBase_C_GetOptionSplines, OptionSplines) == 0x000000, "Member 'BP_EncountAreaBase_C_GetOptionSplines::OptionSplines' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.ChangeOptionSpline
// 0x02A0 (0x02A0 - 0x0000)
struct BP_EncountAreaBase_C_ChangeOptionSpline final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A76[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       L_Spline;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A77[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A78[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_9A79[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_EncountArea_OptionSpline_C*> CallFunc_GetOptionSplines_OptionSplines;           // 0x0098(0x0010)(ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_EncountArea_OptionSpline_C*         CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A7A[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountArea_OptionHit_C*            CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A7B[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x00D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A7C[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor)
	TArray<class ABP_EncountArea_OptionSpline_C*> CallFunc_GetOptionSplines_OptionSplines_1;         // 0x0100(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A7D[0x2];                                     // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x011C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x012C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_EncountArea_OptionSpline_C*> CallFunc_GetOptionSplines_OptionSplines_2;         // 0x0140(0x0010)(ReferenceParm)
	class ABP_EncountArea_OptionSpline_C*         CallFunc_Array_Get_Item_2;                         // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A7E[0x2];                                     // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A7F[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountArea_OptionHit_C*            CallFunc_Array_Get_Item_3;                         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A80[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A81[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EncountArea_OptionHit_C*            CallFunc_Array_Get_Item_4;                         // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A82[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_1; // 0x0190(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A83[0x3];                                     // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A84[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountArea_OptionHit_C*            CallFunc_Array_Get_Item_5;                         // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A85[0x2];                                     // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A86[0x3];                                     // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A87[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_GetSpline_Spline;                         // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A88[0x8];                                     // 0x01D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item_6;                         // 0x01E0(0x00A0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A89[0x2];                                     // 0x0286(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent;   // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_ChangeOptionSpline) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_ChangeOptionSpline");
static_assert(sizeof(BP_EncountAreaBase_C_ChangeOptionSpline) == 0x0002A0, "Wrong size on BP_EncountAreaBase_C_ChangeOptionSpline");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, Param_Index) == 0x000000, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, L_Spline) == 0x000008, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::L_Spline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, Temp_int_Loop_Counter_Variable_2) == 0x00002C, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Add_IntInt_ReturnValue_2) == 0x000030, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, Temp_int_Array_Index_Variable_2) == 0x000038, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, Temp_int_Array_Index_Variable_3) == 0x00003C, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, Temp_int_Loop_Counter_Variable_3) == 0x000040, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Add_IntInt_ReturnValue_3) == 0x000044, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, Temp_int_Array_Index_Variable_4) == 0x000048, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Add_IntInt_ReturnValue_4) == 0x00004C, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Add_IntInt_ReturnValue_5) == 0x000050, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, K2Node_CreateDelegate_OutputDelegate_1) == 0x000064, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, K2Node_CreateDelegate_OutputDelegate_2) == 0x000074, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, K2Node_CreateDelegate_OutputDelegate_3) == 0x000084, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_GetOptionSplines_OptionSplines) == 0x000098, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_GetOptionSplines_OptionSplines' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000A8, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, Temp_int_Variable) == 0x0000C0, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_IsValid_ReturnValue_1) == 0x0000D4, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_GetOverlappingActors_OverlappingActors) == 0x0000D8, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Greater_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000F0, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_GetOptionSplines_OptionSplines_1) == 0x000100, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_GetOptionSplines_OptionSplines_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Array_Length_ReturnValue_2) == 0x000110, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Array_Length_ReturnValue_3) == 0x000114, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Less_IntInt_ReturnValue_1) == 0x000118, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000119, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, K2Node_CreateDelegate_OutputDelegate_6) == 0x00011C, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, K2Node_CreateDelegate_OutputDelegate_7) == 0x00012C, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, Temp_int_Loop_Counter_Variable_4) == 0x00013C, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_GetOptionSplines_OptionSplines_2) == 0x000140, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_GetOptionSplines_OptionSplines_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Array_Get_Item_2) == 0x000150, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Array_Length_ReturnValue_4) == 0x000158, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_IsValid_ReturnValue_2) == 0x00015C, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Less_IntInt_ReturnValue_2) == 0x00015D, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Add_IntInt_ReturnValue_6) == 0x000160, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Array_Get_Item_3) == 0x000168, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_IsValid_ReturnValue_3) == 0x000170, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Array_Length_ReturnValue_5) == 0x000174, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Less_IntInt_ReturnValue_3) == 0x000178, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, Temp_int_Array_Index_Variable_5) == 0x00017C, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Array_Get_Item_4) == 0x000180, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_IsValid_ReturnValue_4) == 0x000188, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_GetOverlappingActors_OverlappingActors_1) == 0x000190, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_GetOverlappingActors_OverlappingActors_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Array_Length_ReturnValue_6) == 0x0001A0, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0001A4, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, Temp_int_Variable_1) == 0x0001A8, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Array_Get_Item_5) == 0x0001B0, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Array_Length_ReturnValue_7) == 0x0001B8, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_IsValid_ReturnValue_5) == 0x0001BC, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Less_IntInt_ReturnValue_4) == 0x0001BD, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, Temp_int_Loop_Counter_Variable_5) == 0x0001C0, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Less_IntInt_ReturnValue_5) == 0x0001C4, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Add_IntInt_ReturnValue_7) == 0x0001C8, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_GetSpline_Spline) == 0x0001D0, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_GetSpline_Spline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Array_Get_Item_6) == 0x0001E0, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Array_Length_ReturnValue_8) == 0x000280, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_Less_IntInt_ReturnValue_6) == 0x000284, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, CallFunc_IsValid_ReturnValue_6) == 0x000285, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent) == 0x000288, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_ChangeOptionSpline, K2Node_DynamicCast_bSuccess) == 0x000290, "Member 'BP_EncountAreaBase_C_ChangeOptionSpline::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetBaseSpline
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_GetBaseSpline final
{
public:
	class USplineComponent*                       Spline;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_GetBaseSpline) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_GetBaseSpline");
static_assert(sizeof(BP_EncountAreaBase_C_GetBaseSpline) == 0x000008, "Wrong size on BP_EncountAreaBase_C_GetBaseSpline");
static_assert(offsetof(BP_EncountAreaBase_C_GetBaseSpline, Spline) == 0x000000, "Member 'BP_EncountAreaBase_C_GetBaseSpline::Spline' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CalcBoxPosSize_ForSpline
// 0x03B0 (0x03B0 - 0x0000)
struct BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline final
{
public:
	struct FVector                                L_Center;                                          // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Pos;                                             // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A8A[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       L_Spline;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_MaxY;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_MinY;                                            // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_MaxX;                                            // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_MinX;                                            // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_PointNum;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_EncountArea_OptionSpline_C*> CallFunc_GetOptionSplines_OptionSplines;           // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_GetBaseSpline_Spline;                     // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_GetBaseSpline_Spline_1;                   // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A8B[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_EncountArea_OptionSpline_C*> CallFunc_GetOptionSplines_OptionSplines_1;         // 0x0208(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A8C[0x3];                                     // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A8D[0x3];                                     // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EncountArea_OptionSpline_C*         CallFunc_Array_Get_Item;                           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A8E[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_GetSpline_Spline;                         // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_GetBaseSpline_Spline_2;                   // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_GetBaseSpline_Spline_3;                   // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2; // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_3; // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x026C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0284(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X_10;                         // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_10;                         // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_10;                         // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_11;                         // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_11;                         // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_11;                         // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_12;                         // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_12;                         // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_12;                         // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_3;                       // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_13;                         // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_13;                         // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_13;                         // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_2;                       // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_14;                         // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_14;                         // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_14;                         // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_4;                       // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_15;                         // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_15;                         // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_15;                         // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_3;                       // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A8F[0x3];                                     // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A90[0x3];                                     // 0x03A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline");
static_assert(sizeof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline) == 0x0003B0, "Wrong size on BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, L_Center) == 0x000000, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::L_Center' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, L_Pos) == 0x00000C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::L_Pos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, L_index) == 0x000018, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, L_Spline) == 0x000020, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::L_Spline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, L_MaxY) == 0x000028, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::L_MaxY' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, L_MinY) == 0x00002C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::L_MinY' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, L_MaxX) == 0x000030, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::L_MaxX' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, L_MinX) == 0x000034, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::L_MinX' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, L_PointNum) == 0x000038, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::L_PointNum' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, Temp_int_Variable) == 0x00003C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_X) == 0x000044, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Z) == 0x00004C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_FMax_ReturnValue) == 0x000050, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_MakeVector_ReturnValue) == 0x000054, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000060, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_X_1) == 0x00006C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Y_1) == 0x000070, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Z_1) == 0x000074, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_GetOptionSplines_OptionSplines) == 0x000078, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_GetOptionSplines_OptionSplines' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x00008C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_GetBaseSpline_Spline) == 0x000090, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_GetBaseSpline_Spline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_GetBaseSpline_Spline_1) == 0x000098, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_GetBaseSpline_Spline_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0000A0, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_X_2) == 0x0000AC, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Y_2) == 0x0000B0, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Z_2) == 0x0000B4, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x0000BC, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1) == 0x0000C0, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Lerp_ReturnValue) == 0x0000C4, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x0000C8, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x0000D4, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000E0, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_X_3) == 0x000168, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Y_3) == 0x00016C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Z_3) == 0x000170, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_X_4) == 0x000174, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Y_4) == 0x000178, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Z_4) == 0x00017C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000180, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000184, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Add_FloatFloat_ReturnValue) == 0x000188, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00018C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_MakeVector_ReturnValue_1) == 0x000190, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x00019C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001A0, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, Temp_int_Variable_1) == 0x0001A4, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0001A8, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0001AC, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_MakeVector_ReturnValue_2) == 0x0001B0, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001BC, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_X_5) == 0x0001C0, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Y_5) == 0x0001C4, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Z_5) == 0x0001C8, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_X_6) == 0x0001CC, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Y_6) == 0x0001D0, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Z_6) == 0x0001D4, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_FMax_ReturnValue_1) == 0x0001D8, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_FMin_ReturnValue) == 0x0001DC, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_X_7) == 0x0001E0, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Y_7) == 0x0001E4, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Z_7) == 0x0001E8, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_FMax_ReturnValue_2) == 0x0001EC, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_X_8) == 0x0001F0, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Y_8) == 0x0001F4, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Z_8) == 0x0001F8, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_FMin_ReturnValue_1) == 0x0001FC, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Subtract_IntInt_ReturnValue) == 0x000200, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_GetOptionSplines_OptionSplines_1) == 0x000208, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_GetOptionSplines_OptionSplines_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000218, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Array_Length_ReturnValue_1) == 0x00021C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000220, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, Temp_int_Array_Index_Variable) == 0x000224, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Array_Get_Item) == 0x000228, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x000230, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_IsValid_ReturnValue) == 0x000234, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_GetSpline_Spline) == 0x000238, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_GetSpline_Spline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_GetBaseSpline_Spline_2) == 0x000240, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_GetBaseSpline_Spline_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_GetBaseSpline_Spline_3) == 0x000248, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_GetBaseSpline_Spline_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_X_9) == 0x000250, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Y_9) == 0x000254, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Z_9) == 0x000258, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Add_IntInt_ReturnValue_3) == 0x00025C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2) == 0x000260, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_3) == 0x000264, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Lerp_ReturnValue_1) == 0x000268, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x00026C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x000278, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000284, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_X_10) == 0x00030C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_X_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Y_10) == 0x000310, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Y_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Z_10) == 0x000314, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Z_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_X_11) == 0x000318, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_X_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Y_11) == 0x00031C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Y_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Z_11) == 0x000320, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Z_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000324, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000328, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x00032C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x000330, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_MakeVector_ReturnValue_3) == 0x000334, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x000340, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000344, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x000348, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00034C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_MakeVector_ReturnValue_4) == 0x000350, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_X_12) == 0x00035C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_X_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Y_12) == 0x000360, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Y_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Z_12) == 0x000364, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Z_12' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_FMax_ReturnValue_3) == 0x000368, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_X_13) == 0x00036C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_X_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Y_13) == 0x000370, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Y_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Z_13) == 0x000374, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Z_13' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_FMin_ReturnValue_2) == 0x000378, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_FMin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_X_14) == 0x00037C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_X_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Y_14) == 0x000380, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Y_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Z_14) == 0x000384, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Z_14' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_FMax_ReturnValue_4) == 0x000388, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_FMax_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_X_15) == 0x00038C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_X_15' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Y_15) == 0x000390, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Y_15' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_BreakVector_Z_15) == 0x000394, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_BreakVector_Z_15' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_FMin_ReturnValue_3) == 0x000398, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_FMin_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00039C, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0003A0, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, Temp_int_Loop_Counter_Variable) == 0x0003A4, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Less_IntInt_ReturnValue) == 0x0003A8, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline, CallFunc_Add_IntInt_ReturnValue_4) == 0x0003AC, "Member 'BP_EncountAreaBase_C_CalcBoxPosSize_ForSpline::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetOptionSplineIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_EncountAreaBase_C_GetOptionSplineIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_GetOptionSplineIndex) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_GetOptionSplineIndex");
static_assert(sizeof(BP_EncountAreaBase_C_GetOptionSplineIndex) == 0x000004, "Wrong size on BP_EncountAreaBase_C_GetOptionSplineIndex");
static_assert(offsetof(BP_EncountAreaBase_C_GetOptionSplineIndex, Param_Index) == 0x000000, "Member 'BP_EncountAreaBase_C_GetOptionSplineIndex::Param_Index' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CheckAreaIN
// 0x0001 (0x0001 - 0x0000)
struct BP_EncountAreaBase_C_CheckAreaIN final
{
public:
	bool                                          AreaIN;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CheckAreaIN) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_CheckAreaIN");
static_assert(sizeof(BP_EncountAreaBase_C_CheckAreaIN) == 0x000001, "Wrong size on BP_EncountAreaBase_C_CheckAreaIN");
static_assert(offsetof(BP_EncountAreaBase_C_CheckAreaIN, AreaIN) == 0x000000, "Member 'BP_EncountAreaBase_C_CheckAreaIN::AreaIN' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.SetAreaIN_ForMatchSpline
// 0x0003 (0x0003 - 0x0000)
struct BP_EncountAreaBase_C_SetAreaIN_ForMatchSpline final
{
public:
	bool                                          Param_AreaIN_ForMatchSpline;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_PrevAreaIn;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_SetAreaIN_ForMatchSpline) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_SetAreaIN_ForMatchSpline");
static_assert(sizeof(BP_EncountAreaBase_C_SetAreaIN_ForMatchSpline) == 0x000003, "Wrong size on BP_EncountAreaBase_C_SetAreaIN_ForMatchSpline");
static_assert(offsetof(BP_EncountAreaBase_C_SetAreaIN_ForMatchSpline, Param_AreaIN_ForMatchSpline) == 0x000000, "Member 'BP_EncountAreaBase_C_SetAreaIN_ForMatchSpline::Param_AreaIN_ForMatchSpline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetAreaIN_ForMatchSpline, L_PrevAreaIn) == 0x000001, "Member 'BP_EncountAreaBase_C_SetAreaIN_ForMatchSpline::L_PrevAreaIn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetAreaIN_ForMatchSpline, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_EncountAreaBase_C_SetAreaIN_ForMatchSpline::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.SetSplineReverse
// 0x0001 (0x0001 - 0x0000)
struct BP_EncountAreaBase_C_SetSplineReverse final
{
public:
	bool                                          Reverse;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_SetSplineReverse) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_SetSplineReverse");
static_assert(sizeof(BP_EncountAreaBase_C_SetSplineReverse) == 0x000001, "Wrong size on BP_EncountAreaBase_C_SetSplineReverse");
static_assert(offsetof(BP_EncountAreaBase_C_SetSplineReverse, Reverse) == 0x000000, "Member 'BP_EncountAreaBase_C_SetSplineReverse::Reverse' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CheckCoasterRiding
// 0x0030 (0x0030 - 0x0000)
struct BP_EncountAreaBase_C_CheckCoasterRiding final
{
public:
	bool                                          CoasterRiding;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A91[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBPC_CharaSplineMover_C*>        CallFunc_GetComponentsByTag_ReturnValue;           // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A92[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CheckCoasterRiding) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_CheckCoasterRiding");
static_assert(sizeof(BP_EncountAreaBase_C_CheckCoasterRiding) == 0x000030, "Wrong size on BP_EncountAreaBase_C_CheckCoasterRiding");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCoasterRiding, CoasterRiding) == 0x000000, "Member 'BP_EncountAreaBase_C_CheckCoasterRiding::CoasterRiding' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCoasterRiding, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_EncountAreaBase_C_CheckCoasterRiding::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCoasterRiding, CallFunc_GetComponentsByTag_ReturnValue) == 0x000010, "Member 'BP_EncountAreaBase_C_CheckCoasterRiding::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCoasterRiding, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EncountAreaBase_C_CheckCoasterRiding::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCoasterRiding, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_EncountAreaBase_C_CheckCoasterRiding::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckCoasterRiding, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'BP_EncountAreaBase_C_CheckCoasterRiding::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.SpawnDebugCylinder
// 0x0190 (0x0190 - 0x0000)
struct BP_EncountAreaBase_C_SpawnDebugCylinder final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HalfHeight;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SideNum;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MeshView;                                          // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A93[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_SideNum;                                         // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_OneSideAngle;                                    // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_SideDistance;                                    // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_SideHalfWidth;                                   // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A94[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_2;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A95[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A96[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A97[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A98[0xC];                                     // 0x0134(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	class UBoxComponent*                          CallFunc_AddComponent_ReturnValue_1;               // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A99[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_SpawnDebugCylinder) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_SpawnDebugCylinder");
static_assert(sizeof(BP_EncountAreaBase_C_SpawnDebugCylinder) == 0x000190, "Wrong size on BP_EncountAreaBase_C_SpawnDebugCylinder");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, Radius) == 0x000000, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::Radius' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, HalfHeight) == 0x000004, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::HalfHeight' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, SideNum) == 0x000008, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::SideNum' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, Offset) == 0x00000C, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::Offset' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, Color) == 0x000018, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::Color' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, MeshView) == 0x000028, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::MeshView' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, L_SideNum) == 0x00002C, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::L_SideNum' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, L_OneSideAngle) == 0x000030, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::L_OneSideAngle' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, L_SideDistance) == 0x000034, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::L_SideDistance' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, L_SideHalfWidth) == 0x000038, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::L_SideHalfWidth' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x00003C, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, K2Node_MakeStruct_LinearColor) == 0x00004C, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_FTrunc_ReturnValue) == 0x00005C, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_FTrunc_ReturnValue_1) == 0x000060, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Conv_IntToByte_ReturnValue) == 0x000064, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000065, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_FTrunc_ReturnValue_2) == 0x000068, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Conv_IntToByte_ReturnValue_2) == 0x00006C, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Conv_IntToByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, K2Node_MakeStruct_Color) == 0x000070, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::K2Node_MakeStruct_Color' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000078, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_MakeVector_ReturnValue) == 0x00007C, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_AddComponent_ReturnValue) == 0x0000C0, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Array_Add_ReturnValue) == 0x0000C8, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_GetMaterial_ReturnValue) == 0x0000D0, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000D8, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_MakeVector_ReturnValue_1) == 0x0000E0, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Divide_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000F0, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0000F8, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Divide_IntInt_ReturnValue_1) == 0x0000FC, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Multiply_IntInt_ReturnValue) == 0x000100, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Max_ReturnValue) == 0x000104, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000108, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_DegCos_ReturnValue) == 0x00010C, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000110, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000114, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, Temp_int_Variable) == 0x000118, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_DegSin_ReturnValue) == 0x00011C, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000120, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000124, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_MakeRotator_ReturnValue) == 0x000128, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_MakeTransform_ReturnValue_1) == 0x000140, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_AddComponent_ReturnValue_1) == 0x000170, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000178, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Array_Add_ReturnValue_1) == 0x00017C, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SpawnDebugCylinder, CallFunc_Add_IntInt_ReturnValue) == 0x000180, "Member 'BP_EncountAreaBase_C_SpawnDebugCylinder::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.GetComeRangeSize
// 0x0028 (0x0028 - 0x0000)
struct BP_EncountAreaBase_C_GetComeRangeSize final
{
public:
	struct FVector                                ComeSize;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_GetComeRangeSize) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_GetComeRangeSize");
static_assert(sizeof(BP_EncountAreaBase_C_GetComeRangeSize) == 0x000028, "Wrong size on BP_EncountAreaBase_C_GetComeRangeSize");
static_assert(offsetof(BP_EncountAreaBase_C_GetComeRangeSize, ComeSize) == 0x000000, "Member 'BP_EncountAreaBase_C_GetComeRangeSize::ComeSize' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetComeRangeSize, CallFunc_BreakVector_X) == 0x00000C, "Member 'BP_EncountAreaBase_C_GetComeRangeSize::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetComeRangeSize, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_EncountAreaBase_C_GetComeRangeSize::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetComeRangeSize, CallFunc_BreakVector_Z) == 0x000014, "Member 'BP_EncountAreaBase_C_GetComeRangeSize::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetComeRangeSize, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_GetComeRangeSize::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_GetComeRangeSize, CallFunc_MakeVector_ReturnValue) == 0x00001C, "Member 'BP_EncountAreaBase_C_GetComeRangeSize::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.DestroyDebugCylinder
// 0x0020 (0x0020 - 0x0000)
struct BP_EncountAreaBase_C_DestroyDebugCylinder final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A9A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_DestroyDebugCylinder) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_DestroyDebugCylinder");
static_assert(sizeof(BP_EncountAreaBase_C_DestroyDebugCylinder) == 0x000020, "Wrong size on BP_EncountAreaBase_C_DestroyDebugCylinder");
static_assert(offsetof(BP_EncountAreaBase_C_DestroyDebugCylinder, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EncountAreaBase_C_DestroyDebugCylinder::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DestroyDebugCylinder, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EncountAreaBase_C_DestroyDebugCylinder::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DestroyDebugCylinder, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EncountAreaBase_C_DestroyDebugCylinder::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DestroyDebugCylinder, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_EncountAreaBase_C_DestroyDebugCylinder::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DestroyDebugCylinder, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_DestroyDebugCylinder::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DestroyDebugCylinder, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_EncountAreaBase_C_DestroyDebugCylinder::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_DestroyDebugCylinder, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_EncountAreaBase_C_DestroyDebugCylinder::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CheckNowDiscovery
// 0x00D0 (0x00D0 - 0x0000)
struct BP_EncountAreaBase_C_CheckNowDiscovery final
{
public:
	bool                                          Exist;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A9B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A9C[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item;                           // 0x0010(0x00A0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A9D[0x2];                                     // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A9E[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent;   // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CheckNowDiscovery) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_CheckNowDiscovery");
static_assert(sizeof(BP_EncountAreaBase_C_CheckNowDiscovery) == 0x0000D0, "Wrong size on BP_EncountAreaBase_C_CheckNowDiscovery");
static_assert(offsetof(BP_EncountAreaBase_C_CheckNowDiscovery, Exist) == 0x000000, "Member 'BP_EncountAreaBase_C_CheckNowDiscovery::Exist' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckNowDiscovery, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EncountAreaBase_C_CheckNowDiscovery::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckNowDiscovery, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EncountAreaBase_C_CheckNowDiscovery::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckNowDiscovery, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_EncountAreaBase_C_CheckNowDiscovery::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckNowDiscovery, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'BP_EncountAreaBase_C_CheckNowDiscovery::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckNowDiscovery, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_EncountAreaBase_C_CheckNowDiscovery::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckNowDiscovery, CallFunc_IsValid_ReturnValue) == 0x0000B5, "Member 'BP_EncountAreaBase_C_CheckNowDiscovery::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckNowDiscovery, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_EncountAreaBase_C_CheckNowDiscovery::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckNowDiscovery, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent) == 0x0000C0, "Member 'BP_EncountAreaBase_C_CheckNowDiscovery::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckNowDiscovery, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_EncountAreaBase_C_CheckNowDiscovery::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckNowDiscovery, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C9, "Member 'BP_EncountAreaBase_C_CheckNowDiscovery::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.SetSpawnSymbolEntry
// 0x001C (0x001C - 0x0000)
struct BP_EncountAreaBase_C_SetSpawnSymbolEntry final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Entry;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_Prev;                                            // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A9F[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AA0[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_SetSpawnSymbolEntry) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_SetSpawnSymbolEntry");
static_assert(sizeof(BP_EncountAreaBase_C_SetSpawnSymbolEntry) == 0x00001C, "Wrong size on BP_EncountAreaBase_C_SetSpawnSymbolEntry");
static_assert(offsetof(BP_EncountAreaBase_C_SetSpawnSymbolEntry, Param_Index) == 0x000000, "Member 'BP_EncountAreaBase_C_SetSpawnSymbolEntry::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetSpawnSymbolEntry, Entry) == 0x000004, "Member 'BP_EncountAreaBase_C_SetSpawnSymbolEntry::Entry' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetSpawnSymbolEntry, L_Prev) == 0x000005, "Member 'BP_EncountAreaBase_C_SetSpawnSymbolEntry::L_Prev' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetSpawnSymbolEntry, Temp_int_Variable) == 0x000008, "Member 'BP_EncountAreaBase_C_SetSpawnSymbolEntry::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetSpawnSymbolEntry, Temp_int_Variable_1) == 0x00000C, "Member 'BP_EncountAreaBase_C_SetSpawnSymbolEntry::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetSpawnSymbolEntry, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000010, "Member 'BP_EncountAreaBase_C_SetSpawnSymbolEntry::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetSpawnSymbolEntry, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_EncountAreaBase_C_SetSpawnSymbolEntry::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetSpawnSymbolEntry, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_SetSpawnSymbolEntry::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.SetDeadSymbol
// 0x001C (0x001C - 0x0000)
struct BP_EncountAreaBase_C_SetDeadSymbol final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead;                                              // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_Prev;                                            // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AA1[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AA2[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_SetDeadSymbol) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_SetDeadSymbol");
static_assert(sizeof(BP_EncountAreaBase_C_SetDeadSymbol) == 0x00001C, "Wrong size on BP_EncountAreaBase_C_SetDeadSymbol");
static_assert(offsetof(BP_EncountAreaBase_C_SetDeadSymbol, Param_Index) == 0x000000, "Member 'BP_EncountAreaBase_C_SetDeadSymbol::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetDeadSymbol, Dead) == 0x000004, "Member 'BP_EncountAreaBase_C_SetDeadSymbol::Dead' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetDeadSymbol, L_Prev) == 0x000005, "Member 'BP_EncountAreaBase_C_SetDeadSymbol::L_Prev' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetDeadSymbol, Temp_int_Variable) == 0x000008, "Member 'BP_EncountAreaBase_C_SetDeadSymbol::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetDeadSymbol, Temp_int_Variable_1) == 0x00000C, "Member 'BP_EncountAreaBase_C_SetDeadSymbol::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetDeadSymbol, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000010, "Member 'BP_EncountAreaBase_C_SetDeadSymbol::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetDeadSymbol, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_EncountAreaBase_C_SetDeadSymbol::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetDeadSymbol, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_SetDeadSymbol::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.SetStopSpawnSymbol
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_SetStopSpawnSymbol final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StopSpawn;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_Prev;                                            // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_SetStopSpawnSymbol) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_SetStopSpawnSymbol");
static_assert(sizeof(BP_EncountAreaBase_C_SetStopSpawnSymbol) == 0x000008, "Wrong size on BP_EncountAreaBase_C_SetStopSpawnSymbol");
static_assert(offsetof(BP_EncountAreaBase_C_SetStopSpawnSymbol, Param_Index) == 0x000000, "Member 'BP_EncountAreaBase_C_SetStopSpawnSymbol::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetStopSpawnSymbol, StopSpawn) == 0x000004, "Member 'BP_EncountAreaBase_C_SetStopSpawnSymbol::StopSpawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetStopSpawnSymbol, L_Prev) == 0x000005, "Member 'BP_EncountAreaBase_C_SetStopSpawnSymbol::L_Prev' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SetStopSpawnSymbol, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000006, "Member 'BP_EncountAreaBase_C_SetStopSpawnSymbol::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CalcBlankSpawnIndex
// 0x00D0 (0x00D0 - 0x0000)
struct BP_EncountAreaBase_C_CalcBlankSpawnIndex final
{
public:
	int32                                         L_index;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AA3[0xC];                                     // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item;                           // 0x0020(0x00A0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CalcBlankSpawnIndex) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_CalcBlankSpawnIndex");
static_assert(sizeof(BP_EncountAreaBase_C_CalcBlankSpawnIndex) == 0x0000D0, "Wrong size on BP_EncountAreaBase_C_CalcBlankSpawnIndex");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBlankSpawnIndex, L_index) == 0x000000, "Member 'BP_EncountAreaBase_C_CalcBlankSpawnIndex::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBlankSpawnIndex, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EncountAreaBase_C_CalcBlankSpawnIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBlankSpawnIndex, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EncountAreaBase_C_CalcBlankSpawnIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBlankSpawnIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EncountAreaBase_C_CalcBlankSpawnIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBlankSpawnIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'BP_EncountAreaBase_C_CalcBlankSpawnIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBlankSpawnIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_EncountAreaBase_C_CalcBlankSpawnIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBlankSpawnIndex, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'BP_EncountAreaBase_C_CalcBlankSpawnIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBlankSpawnIndex, CallFunc_BooleanAND_ReturnValue_1) == 0x000013, "Member 'BP_EncountAreaBase_C_CalcBlankSpawnIndex::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBlankSpawnIndex, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EncountAreaBase_C_CalcBlankSpawnIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBlankSpawnIndex, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BP_EncountAreaBase_C_CalcBlankSpawnIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBlankSpawnIndex, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C4, "Member 'BP_EncountAreaBase_C_CalcBlankSpawnIndex::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBlankSpawnIndex, CallFunc_Less_IntInt_ReturnValue) == 0x0000C5, "Member 'BP_EncountAreaBase_C_CalcBlankSpawnIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBlankSpawnIndex, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000C6, "Member 'BP_EncountAreaBase_C_CalcBlankSpawnIndex::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcBlankSpawnIndex, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000C7, "Member 'BP_EncountAreaBase_C_CalcBlankSpawnIndex::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.SphereTrace
// 0x01F8 (0x01F8 - 0x0000)
struct BP_EncountAreaBase_C_SphereTrace final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AA4[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AA5[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x00DC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AA6[0x1];                                     // 0x0167(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AA7[0x4];                                     // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapSymbolBlock_C*                   K2Node_DynamicCast_AsBP_Map_Symbol_Block;          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_SphereTrace) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_SphereTrace");
static_assert(sizeof(BP_EncountAreaBase_C_SphereTrace) == 0x0001F8, "Wrong size on BP_EncountAreaBase_C_SphereTrace");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, Start) == 0x000000, "Member 'BP_EncountAreaBase_C_SphereTrace::Start' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, End) == 0x00000C, "Member 'BP_EncountAreaBase_C_SphereTrace::End' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, Radius) == 0x000018, "Member 'BP_EncountAreaBase_C_SphereTrace::Radius' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, ReturnValue) == 0x00001C, "Member 'BP_EncountAreaBase_C_SphereTrace::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, Temp_object_Variable) == 0x000020, "Member 'BP_EncountAreaBase_C_SphereTrace::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, Temp_object_Variable_1) == 0x000030, "Member 'BP_EncountAreaBase_C_SphereTrace::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_EncountAreaBase_C_SphereTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_SphereTraceSingle_OutHit) == 0x000050, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_SphereTraceSingle_ReturnValue) == 0x0000D8, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x0000DC, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000164, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x000165, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x000166, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_BreakHitResult_Time) == 0x000168, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_BreakHitResult_Distance) == 0x00016C, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_BreakHitResult_Location) == 0x000170, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x00017C, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_BreakHitResult_Normal) == 0x000188, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000194, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_BreakHitResult_PhysMat) == 0x0001A0, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_BreakHitResult_HitActor) == 0x0001A8, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_BreakHitResult_HitComponent) == 0x0001B0, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_BreakHitResult_HitBoneName) == 0x0001B8, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_BreakHitResult_HitItem) == 0x0001C0, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_BreakHitResult_ElementIndex) == 0x0001C4, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_BreakHitResult_FaceIndex) == 0x0001C8, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_BreakHitResult_TraceStart) == 0x0001CC, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, CallFunc_BreakHitResult_TraceEnd) == 0x0001D8, "Member 'BP_EncountAreaBase_C_SphereTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, K2Node_DynamicCast_AsBP_Map_Symbol_Block) == 0x0001E8, "Member 'BP_EncountAreaBase_C_SphereTrace::K2Node_DynamicCast_AsBP_Map_Symbol_Block' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_SphereTrace, K2Node_DynamicCast_bSuccess) == 0x0001F0, "Member 'BP_EncountAreaBase_C_SphereTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CalcNotSpawn_WhenLevelDiffEscape
// 0x0010 (0x0010 - 0x0000)
struct BP_EncountAreaBase_C_CalcNotSpawn_WhenLevelDiffEscape final
{
public:
	int32                                         Param_SymbolID;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawn;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_Kamui;                                           // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AA8[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_SymbolLevel;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckLevelDiff_LevelDiff;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CalcNotSpawn_WhenLevelDiffEscape) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_CalcNotSpawn_WhenLevelDiffEscape");
static_assert(sizeof(BP_EncountAreaBase_C_CalcNotSpawn_WhenLevelDiffEscape) == 0x000010, "Wrong size on BP_EncountAreaBase_C_CalcNotSpawn_WhenLevelDiffEscape");
static_assert(offsetof(BP_EncountAreaBase_C_CalcNotSpawn_WhenLevelDiffEscape, Param_SymbolID) == 0x000000, "Member 'BP_EncountAreaBase_C_CalcNotSpawn_WhenLevelDiffEscape::Param_SymbolID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcNotSpawn_WhenLevelDiffEscape, Spawn) == 0x000004, "Member 'BP_EncountAreaBase_C_CalcNotSpawn_WhenLevelDiffEscape::Spawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcNotSpawn_WhenLevelDiffEscape, L_Kamui) == 0x000005, "Member 'BP_EncountAreaBase_C_CalcNotSpawn_WhenLevelDiffEscape::L_Kamui' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcNotSpawn_WhenLevelDiffEscape, L_SymbolLevel) == 0x000008, "Member 'BP_EncountAreaBase_C_CalcNotSpawn_WhenLevelDiffEscape::L_SymbolLevel' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcNotSpawn_WhenLevelDiffEscape, CallFunc_CheckLevelDiff_LevelDiff) == 0x00000C, "Member 'BP_EncountAreaBase_C_CalcNotSpawn_WhenLevelDiffEscape::CallFunc_CheckLevelDiff_LevelDiff' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CalcNotSpawn_WhenLevelDiffEscape, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'BP_EncountAreaBase_C_CalcNotSpawn_WhenLevelDiffEscape::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CheckLevelDiff
// 0x0190 (0x0190 - 0x0000)
struct BP_EncountAreaBase_C_CheckLevelDiff final
{
public:
	int32                                         Param_SymbolID;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LevelDiff;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AA9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_SymbolLevel;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_Kamui;                                           // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AAA[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnemyData                             CallFunc_GetEnemyBaseData_ReturnValue;             // 0x0010(0x00D8)(ConstParm)
	bool                                          CallFunc_IsActiveGodParameterSkill_ReturnValue;    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AAB[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerLevel_ReturnValue;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlag_ReturnValue;               // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AAC[0x2];                                     // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ConvertDevilLevel_ReturnValue;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AAD[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapSymbolHosei                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0100(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AAE[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CheckLevelDiff) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_CheckLevelDiff");
static_assert(sizeof(BP_EncountAreaBase_C_CheckLevelDiff) == 0x000190, "Wrong size on BP_EncountAreaBase_C_CheckLevelDiff");
static_assert(offsetof(BP_EncountAreaBase_C_CheckLevelDiff, Param_SymbolID) == 0x000000, "Member 'BP_EncountAreaBase_C_CheckLevelDiff::Param_SymbolID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckLevelDiff, LevelDiff) == 0x000004, "Member 'BP_EncountAreaBase_C_CheckLevelDiff::LevelDiff' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckLevelDiff, L_SymbolLevel) == 0x000008, "Member 'BP_EncountAreaBase_C_CheckLevelDiff::L_SymbolLevel' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckLevelDiff, L_Kamui) == 0x00000C, "Member 'BP_EncountAreaBase_C_CheckLevelDiff::L_Kamui' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckLevelDiff, CallFunc_GetEnemyBaseData_ReturnValue) == 0x000010, "Member 'BP_EncountAreaBase_C_CheckLevelDiff::CallFunc_GetEnemyBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckLevelDiff, CallFunc_IsActiveGodParameterSkill_ReturnValue) == 0x0000E8, "Member 'BP_EncountAreaBase_C_CheckLevelDiff::CallFunc_IsActiveGodParameterSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckLevelDiff, CallFunc_GetPlayerLevel_ReturnValue) == 0x0000EC, "Member 'BP_EncountAreaBase_C_CheckLevelDiff::CallFunc_GetPlayerLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckLevelDiff, Temp_bool_Variable) == 0x0000F0, "Member 'BP_EncountAreaBase_C_CheckLevelDiff::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckLevelDiff, CallFunc_CheckEventFlag_ReturnValue) == 0x0000F1, "Member 'BP_EncountAreaBase_C_CheckLevelDiff::CallFunc_CheckEventFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckLevelDiff, CallFunc_ConvertDevilLevel_ReturnValue) == 0x0000F4, "Member 'BP_EncountAreaBase_C_CheckLevelDiff::CallFunc_ConvertDevilLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckLevelDiff, CallFunc_Not_PreBool_ReturnValue) == 0x0000F8, "Member 'BP_EncountAreaBase_C_CheckLevelDiff::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckLevelDiff, CallFunc_GetDataTableRowFromName_OutRow) == 0x000100, "Member 'BP_EncountAreaBase_C_CheckLevelDiff::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckLevelDiff, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000180, "Member 'BP_EncountAreaBase_C_CheckLevelDiff::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckLevelDiff, K2Node_Select_Default) == 0x000184, "Member 'BP_EncountAreaBase_C_CheckLevelDiff::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckLevelDiff, CallFunc_Add_IntInt_ReturnValue) == 0x000188, "Member 'BP_EncountAreaBase_C_CheckLevelDiff::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckLevelDiff, CallFunc_Less_IntInt_ReturnValue) == 0x00018C, "Member 'BP_EncountAreaBase_C_CheckLevelDiff::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CheckFloatingIK_OFF
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_CheckFloatingIK_OFF final
{
public:
	int32                                         SpawnListIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_FloatingIK_OFF;                              // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CheckFloatingIK_OFF) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_CheckFloatingIK_OFF");
static_assert(sizeof(BP_EncountAreaBase_C_CheckFloatingIK_OFF) == 0x000008, "Wrong size on BP_EncountAreaBase_C_CheckFloatingIK_OFF");
static_assert(offsetof(BP_EncountAreaBase_C_CheckFloatingIK_OFF, SpawnListIndex) == 0x000000, "Member 'BP_EncountAreaBase_C_CheckFloatingIK_OFF::SpawnListIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckFloatingIK_OFF, Param_FloatingIK_OFF) == 0x000004, "Member 'BP_EncountAreaBase_C_CheckFloatingIK_OFF::Param_FloatingIK_OFF' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.CheckImmediateUpdateFloatingIK_WhenCameraIn
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_CheckImmediateUpdateFloatingIK_WhenCameraIn final
{
public:
	int32                                         SpawnListIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ImmediateUpdateFloatingIK;                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_CheckImmediateUpdateFloatingIK_WhenCameraIn) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_CheckImmediateUpdateFloatingIK_WhenCameraIn");
static_assert(sizeof(BP_EncountAreaBase_C_CheckImmediateUpdateFloatingIK_WhenCameraIn) == 0x000008, "Wrong size on BP_EncountAreaBase_C_CheckImmediateUpdateFloatingIK_WhenCameraIn");
static_assert(offsetof(BP_EncountAreaBase_C_CheckImmediateUpdateFloatingIK_WhenCameraIn, SpawnListIndex) == 0x000000, "Member 'BP_EncountAreaBase_C_CheckImmediateUpdateFloatingIK_WhenCameraIn::SpawnListIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_CheckImmediateUpdateFloatingIK_WhenCameraIn, ImmediateUpdateFloatingIK) == 0x000004, "Member 'BP_EncountAreaBase_C_CheckImmediateUpdateFloatingIK_WhenCameraIn::ImmediateUpdateFloatingIK' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_GetEncountAreaBox
// 0x00C0 (0x00C0 - 0x0000)
struct BP_EncountAreaBase_C_BPI_GetEncountAreaBox final
{
public:
	struct FTransform                             BoxPos;                                            // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FVector                                BoxSize;                                           // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AAF[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        AddPoints;                                         // 0x0040(0x0010)(Parm, OutParm)
	TArray<struct FVector>                        L_AddPoints;                                       // 0x0050(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AB0[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_GetEncountAreaBox) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_BPI_GetEncountAreaBox");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_GetEncountAreaBox) == 0x0000C0, "Wrong size on BP_EncountAreaBase_C_BPI_GetEncountAreaBox");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountAreaBox, BoxPos) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_GetEncountAreaBox::BoxPos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountAreaBox, BoxSize) == 0x000030, "Member 'BP_EncountAreaBase_C_BPI_GetEncountAreaBox::BoxSize' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountAreaBox, AddPoints) == 0x000040, "Member 'BP_EncountAreaBase_C_BPI_GetEncountAreaBox::AddPoints' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountAreaBox, L_AddPoints) == 0x000050, "Member 'BP_EncountAreaBase_C_BPI_GetEncountAreaBox::L_AddPoints' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountAreaBox, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_EncountAreaBase_C_BPI_GetEncountAreaBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountAreaBox, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_EncountAreaBase_C_BPI_GetEncountAreaBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountAreaBox, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_EncountAreaBase_C_BPI_GetEncountAreaBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountAreaBox, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000070, "Member 'BP_EncountAreaBase_C_BPI_GetEncountAreaBox::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountAreaBox, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_EncountAreaBase_C_BPI_GetEncountAreaBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountAreaBox, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A8, "Member 'BP_EncountAreaBase_C_BPI_GetEncountAreaBox::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountAreaBox, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'BP_EncountAreaBase_C_BPI_GetEncountAreaBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountAreaBox, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'BP_EncountAreaBase_C_BPI_GetEncountAreaBox::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountAreaBox, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_EncountAreaBase_C_BPI_GetEncountAreaBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_SpawnSymbol
// 0x0090 (0x0090 - 0x0000)
struct BP_EncountAreaBase_C_BPI_SpawnSymbol final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsManualPos;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AB1[0xB];                                     // 0x0005(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ManualPos;                                         // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          NewParam;                                          // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AB2[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountAreaSpawner_C*               L_Spawner;                                         // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             L_Pos;                                             // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          L_Check;                                           // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_SpawnSymbol) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_BPI_SpawnSymbol");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_SpawnSymbol) == 0x000090, "Wrong size on BP_EncountAreaBase_C_BPI_SpawnSymbol");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SpawnSymbol, Param_Index) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_SpawnSymbol::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SpawnSymbol, IsManualPos) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_SpawnSymbol::IsManualPos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SpawnSymbol, ManualPos) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_SpawnSymbol::ManualPos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SpawnSymbol, NewParam) == 0x000040, "Member 'BP_EncountAreaBase_C_BPI_SpawnSymbol::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SpawnSymbol, L_Spawner) == 0x000048, "Member 'BP_EncountAreaBase_C_BPI_SpawnSymbol::L_Spawner' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SpawnSymbol, L_Pos) == 0x000050, "Member 'BP_EncountAreaBase_C_BPI_SpawnSymbol::L_Pos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SpawnSymbol, L_Check) == 0x000080, "Member 'BP_EncountAreaBase_C_BPI_SpawnSymbol::L_Check' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_DestroySymbol
// 0x0120 (0x0120 - 0x0000)
struct BP_EncountAreaBase_C_BPI_DestroySymbol final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AB3[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_index;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMapSymbolBaseCompornent_C*             L_Comp;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  L_Pawn;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AB4[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AB5[0xF];                                     // 0x0061(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item;                           // 0x0070(0x00A0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_DestroySymbol) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_BPI_DestroySymbol");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_DestroySymbol) == 0x000120, "Wrong size on BP_EncountAreaBase_C_BPI_DestroySymbol");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_DestroySymbol, Pawn) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_DestroySymbol::Pawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_DestroySymbol, NewParam) == 0x000008, "Member 'BP_EncountAreaBase_C_BPI_DestroySymbol::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_DestroySymbol, L_index) == 0x00000C, "Member 'BP_EncountAreaBase_C_BPI_DestroySymbol::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_DestroySymbol, L_Comp) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_DestroySymbol::L_Comp' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_DestroySymbol, L_Pawn) == 0x000018, "Member 'BP_EncountAreaBase_C_BPI_DestroySymbol::L_Pawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_DestroySymbol, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_EncountAreaBase_C_BPI_DestroySymbol::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_DestroySymbol, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_EncountAreaBase_C_BPI_DestroySymbol::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_DestroySymbol, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_EncountAreaBase_C_BPI_DestroySymbol::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_DestroySymbol, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_EncountAreaBase_C_BPI_DestroySymbol::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_DestroySymbol, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_EncountAreaBase_C_BPI_DestroySymbol::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_DestroySymbol, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_EncountAreaBase_C_BPI_DestroySymbol::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_DestroySymbol, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'BP_EncountAreaBase_C_BPI_DestroySymbol::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_DestroySymbol, CallFunc_Less_IntInt_ReturnValue) == 0x000114, "Member 'BP_EncountAreaBase_C_BPI_DestroySymbol::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_DestroySymbol, CallFunc_IsValid_ReturnValue_1) == 0x000115, "Member 'BP_EncountAreaBase_C_BPI_DestroySymbol::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_DestroySymbol, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000116, "Member 'BP_EncountAreaBase_C_BPI_DestroySymbol::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_InComeArea
// 0x0210 (0x0210 - 0x0000)
struct BP_EncountAreaBase_C_BPI_InComeArea final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AddHitSize;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In;                                                // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AB6[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_Pos;                                             // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComeRangeSize_ComeSize;                // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AB7[0x2];                                     // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComeRangeSize_ComeSize_1;              // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AB8[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_3;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAreaIN_AreaIN;                       // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AB9[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0160(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9ABA[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x01D0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPointInBoxWithTransform_ReturnValue;    // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_InComeArea) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_BPI_InComeArea");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_InComeArea) == 0x000210, "Wrong size on BP_EncountAreaBase_C_BPI_InComeArea");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, Pos) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::Pos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, AddHitSize) == 0x00000C, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::AddHitSize' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, In) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::In' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, L_Pos) == 0x000014, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::L_Pos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_ComposeTransforms_ReturnValue) == 0x000080, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_BreakTransform_Location) == 0x0000B0, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_BreakTransform_Rotation) == 0x0000BC, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_BreakTransform_Scale) == 0x0000C8, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_BreakVector_X) == 0x0000D4, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_BreakVector_Y) == 0x0000D8, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_BreakVector_Z) == 0x0000DC, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_BreakVector_X_1) == 0x0000E0, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_BreakVector_Y_1) == 0x0000E4, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_BreakVector_Z_1) == 0x0000E8, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_MakeVector_ReturnValue) == 0x0000EC, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_MakeVector_ReturnValue_1) == 0x0000F8, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_GetComeRangeSize_ComeSize) == 0x000104, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_GetComeRangeSize_ComeSize' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_Vector_Distance_ReturnValue) == 0x000110, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_BreakVector_X_2) == 0x000114, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_BreakVector_Y_2) == 0x000118, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_BreakVector_Z_2) == 0x00011C, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_Add_FloatFloat_ReturnValue) == 0x000120, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000124, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000128, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00012C, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00012D, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000130, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_GetComeRangeSize_ComeSize_1) == 0x000134, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_GetComeRangeSize_ComeSize_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000140, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_BreakVector_X_3) == 0x000144, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_BreakVector_Y_3) == 0x000148, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_BreakVector_Z_3) == 0x00014C, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_BooleanAND_ReturnValue) == 0x000150, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_BooleanAND_ReturnValue_1) == 0x000151, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_CheckAreaIN_AreaIN) == 0x000152, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_CheckAreaIN_AreaIN' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_IsValid_ReturnValue) == 0x000153, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000154, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x000158, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_GetTransform_ReturnValue_1) == 0x000160, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_MakeVector_ReturnValue_2) == 0x000190, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_MakeTransform_ReturnValue_1) == 0x0001A0, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_ComposeTransforms_ReturnValue_1) == 0x0001D0, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InComeArea, CallFunc_IsPointInBoxWithTransform_ReturnValue) == 0x000200, "Member 'BP_EncountAreaBase_C_BPI_InComeArea::CallFunc_IsPointInBoxWithTransform_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_CheckEncountAreaOverlap
// 0x0040 (0x0040 - 0x0000)
struct BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap final
{
public:
	bool                                          Param_Overlap;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9ABB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            L_list;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9ABC[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap) == 0x000040, "Wrong size on BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap, Param_Overlap) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap::Param_Overlap' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap, L_list) == 0x000008, "Member 'BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap::L_list' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap, CallFunc_GetPlayerPawn_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap, CallFunc_GetDistanceTo_ReturnValue) == 0x000020, "Member 'BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000028, "Member 'BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap, K2Node_SwitchEnum_CmpSuccess) == 0x00003D, "Member 'BP_EncountAreaBase_C_BPI_CheckEncountAreaOverlap::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_GetSymbolSpline
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_BPI_GetSymbolSpline final
{
public:
	class USplineComponent*                       Spline;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_GetSymbolSpline) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_BPI_GetSymbolSpline");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_GetSymbolSpline) == 0x000008, "Wrong size on BP_EncountAreaBase_C_BPI_GetSymbolSpline");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetSymbolSpline, Spline) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_GetSymbolSpline::Spline' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_ResetSymbolSpawn
// 0x003C (0x003C - 0x0000)
struct BP_EncountAreaBase_C_BPI_ResetSymbolSpawn final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9ABD[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDeadSaveID_DeadSaveID;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9ABE[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDeadSaveID_DeadSaveID_1;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9ABF[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckEncountAreaOverlap_Overlap;      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AC0[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AC1[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_BPI_ResetSymbolSpawn");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn) == 0x00003C, "Wrong size on BP_EncountAreaBase_C_BPI_ResetSymbolSpawn");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn, NewParam) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_ResetSymbolSpawn::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_ResetSymbolSpawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EncountAreaBase_C_BPI_ResetSymbolSpawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EncountAreaBase_C_BPI_ResetSymbolSpawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn, CallFunc_GetDeadSaveID_DeadSaveID) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_ResetSymbolSpawn::CallFunc_GetDeadSaveID_DeadSaveID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_EncountAreaBase_C_BPI_ResetSymbolSpawn::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_BPI_ResetSymbolSpawn::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn, CallFunc_GetDeadSaveID_DeadSaveID_1) == 0x00001C, "Member 'BP_EncountAreaBase_C_BPI_ResetSymbolSpawn::CallFunc_GetDeadSaveID_DeadSaveID_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_EncountAreaBase_C_BPI_ResetSymbolSpawn::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_EncountAreaBase_C_BPI_ResetSymbolSpawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'BP_EncountAreaBase_C_BPI_ResetSymbolSpawn::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EncountAreaBase_C_BPI_ResetSymbolSpawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn, CallFunc_BPI_CheckEncountAreaOverlap_Overlap) == 0x00002D, "Member 'BP_EncountAreaBase_C_BPI_ResetSymbolSpawn::CallFunc_BPI_CheckEncountAreaOverlap_Overlap' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'BP_EncountAreaBase_C_BPI_ResetSymbolSpawn::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn, CallFunc_Less_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_EncountAreaBase_C_BPI_ResetSymbolSpawn::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ResetSymbolSpawn, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_EncountAreaBase_C_BPI_ResetSymbolSpawn::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_GetSymbolList
// 0x00F0 (0x00F0 - 0x0000)
struct BP_EncountAreaBase_C_BPI_GetSymbolList final
{
public:
	class APawn*                                  IgnorePawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APawn*>                          PawnList;                                          // 0x0008(0x0010)(Parm, OutParm)
	TArray<class APawn*>                          L_list;                                            // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AC2[0xC];                                     // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item;                           // 0x0040(0x00A0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AC3[0x2];                                     // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_GetSymbolList) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_BPI_GetSymbolList");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_GetSymbolList) == 0x0000F0, "Wrong size on BP_EncountAreaBase_C_BPI_GetSymbolList");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetSymbolList, IgnorePawn) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_GetSymbolList::IgnorePawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetSymbolList, PawnList) == 0x000008, "Member 'BP_EncountAreaBase_C_BPI_GetSymbolList::PawnList' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetSymbolList, L_list) == 0x000018, "Member 'BP_EncountAreaBase_C_BPI_GetSymbolList::L_list' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetSymbolList, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_EncountAreaBase_C_BPI_GetSymbolList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetSymbolList, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_EncountAreaBase_C_BPI_GetSymbolList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetSymbolList, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_EncountAreaBase_C_BPI_GetSymbolList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetSymbolList, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_EncountAreaBase_C_BPI_GetSymbolList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetSymbolList, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BP_EncountAreaBase_C_BPI_GetSymbolList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetSymbolList, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_EncountAreaBase_C_BPI_GetSymbolList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetSymbolList, CallFunc_IsValid_ReturnValue) == 0x0000E5, "Member 'BP_EncountAreaBase_C_BPI_GetSymbolList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetSymbolList, CallFunc_Array_Add_ReturnValue) == 0x0000E8, "Member 'BP_EncountAreaBase_C_BPI_GetSymbolList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetSymbolList, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000EC, "Member 'BP_EncountAreaBase_C_BPI_GetSymbolList::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_Discovery_FromOutside
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_BPI_Discovery_FromOutside final
{
public:
	int32                                         OutsideID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_Discovery_FromOutside) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_BPI_Discovery_FromOutside");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_Discovery_FromOutside) == 0x000008, "Wrong size on BP_EncountAreaBase_C_BPI_Discovery_FromOutside");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_Discovery_FromOutside, OutsideID) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_Discovery_FromOutside::OutsideID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_Discovery_FromOutside, NewParam) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_Discovery_FromOutside::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_Discovery_FromOutside, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000005, "Member 'BP_EncountAreaBase_C_BPI_Discovery_FromOutside::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_SpawnSymbol_FromOutside
// 0x0010 (0x0010 - 0x0000)
struct BP_EncountAreaBase_C_BPI_SpawnSymbol_FromOutside final
{
public:
	int32                                         OutsideID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AC4[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSpawnSymbolNum_Num;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_SpawnSymbol_FromOutside) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_BPI_SpawnSymbol_FromOutside");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_SpawnSymbol_FromOutside) == 0x000010, "Wrong size on BP_EncountAreaBase_C_BPI_SpawnSymbol_FromOutside");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SpawnSymbol_FromOutside, OutsideID) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_SpawnSymbol_FromOutside::OutsideID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SpawnSymbol_FromOutside, NewParam) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_SpawnSymbol_FromOutside::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SpawnSymbol_FromOutside, CallFunc_GetSpawnSymbolNum_Num) == 0x000008, "Member 'BP_EncountAreaBase_C_BPI_SpawnSymbol_FromOutside::CallFunc_GetSpawnSymbolNum_Num' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SpawnSymbol_FromOutside, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EncountAreaBase_C_BPI_SpawnSymbol_FromOutside::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SpawnSymbol_FromOutside, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00000D, "Member 'BP_EncountAreaBase_C_BPI_SpawnSymbol_FromOutside::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SpawnSymbol_FromOutside, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'BP_EncountAreaBase_C_BPI_SpawnSymbol_FromOutside::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_ReturnSymbol_FromOutside
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_BPI_ReturnSymbol_FromOutside final
{
public:
	int32                                         OutsideID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_PrevAreaIn;                                      // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_ReturnSymbol_FromOutside) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_BPI_ReturnSymbol_FromOutside");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_ReturnSymbol_FromOutside) == 0x000008, "Wrong size on BP_EncountAreaBase_C_BPI_ReturnSymbol_FromOutside");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ReturnSymbol_FromOutside, OutsideID) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_ReturnSymbol_FromOutside::OutsideID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ReturnSymbol_FromOutside, NewParam) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_ReturnSymbol_FromOutside::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ReturnSymbol_FromOutside, L_PrevAreaIn) == 0x000005, "Member 'BP_EncountAreaBase_C_BPI_ReturnSymbol_FromOutside::L_PrevAreaIn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ReturnSymbol_FromOutside, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000006, "Member 'BP_EncountAreaBase_C_BPI_ReturnSymbol_FromOutside::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ReturnSymbol_FromOutside, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'BP_EncountAreaBase_C_BPI_ReturnSymbol_FromOutside::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_RebornSymbol_FromOutside
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_BPI_RebornSymbol_FromOutside final
{
public:
	int32                                         OutsideID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_RebornSymbol_FromOutside) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_BPI_RebornSymbol_FromOutside");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_RebornSymbol_FromOutside) == 0x000008, "Wrong size on BP_EncountAreaBase_C_BPI_RebornSymbol_FromOutside");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_RebornSymbol_FromOutside, OutsideID) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_RebornSymbol_FromOutside::OutsideID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_RebornSymbol_FromOutside, NewParam) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_RebornSymbol_FromOutside::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_RebornSymbol_FromOutside, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000005, "Member 'BP_EncountAreaBase_C_BPI_RebornSymbol_FromOutside::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_RebornSymbol_FromOutside, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BP_EncountAreaBase_C_BPI_RebornSymbol_FromOutside::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_SpawnSymbols
// 0x000C (0x000C - 0x0000)
struct BP_EncountAreaBase_C_BPI_SpawnSymbols final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AC5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSpawnSymbolNum_Num;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_SpawnSymbols) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_BPI_SpawnSymbols");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_SpawnSymbols) == 0x00000C, "Wrong size on BP_EncountAreaBase_C_BPI_SpawnSymbols");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SpawnSymbols, Success) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_SpawnSymbols::Success' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SpawnSymbols, CallFunc_GetSpawnSymbolNum_Num) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_SpawnSymbols::CallFunc_GetSpawnSymbolNum_Num' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SpawnSymbols, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_EncountAreaBase_C_BPI_SpawnSymbols::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_GiveUpSymbol_FromOutside
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_BPI_GiveUpSymbol_FromOutside final
{
public:
	int32                                         OutsideID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_GiveUpSymbol_FromOutside) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_BPI_GiveUpSymbol_FromOutside");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_GiveUpSymbol_FromOutside) == 0x000008, "Wrong size on BP_EncountAreaBase_C_BPI_GiveUpSymbol_FromOutside");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GiveUpSymbol_FromOutside, OutsideID) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_GiveUpSymbol_FromOutside::OutsideID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GiveUpSymbol_FromOutside, NewParam) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_GiveUpSymbol_FromOutside::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GiveUpSymbol_FromOutside, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000005, "Member 'BP_EncountAreaBase_C_BPI_GiveUpSymbol_FromOutside::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GiveUpSymbol_FromOutside, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BP_EncountAreaBase_C_BPI_GiveUpSymbol_FromOutside::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_SummonSymbol
// 0x000C (0x000C - 0x0000)
struct BP_EncountAreaBase_C_BPI_SummonSymbol final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AC6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSpawnSymbolNum_Num;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_SummonSymbol) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_BPI_SummonSymbol");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_SummonSymbol) == 0x00000C, "Wrong size on BP_EncountAreaBase_C_BPI_SummonSymbol");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SummonSymbol, Success) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_SummonSymbol::Success' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SummonSymbol, CallFunc_GetSpawnSymbolNum_Num) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_SummonSymbol::CallFunc_GetSpawnSymbolNum_Num' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SummonSymbol, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_EncountAreaBase_C_BPI_SummonSymbol::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_GetSafeZoneID
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_BPI_GetSafeZoneID final
{
public:
	bool                                          ManualSafeZoneID;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AC7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_SafeZoneID;                                  // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_GetSafeZoneID) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_BPI_GetSafeZoneID");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_GetSafeZoneID) == 0x000008, "Wrong size on BP_EncountAreaBase_C_BPI_GetSafeZoneID");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetSafeZoneID, ManualSafeZoneID) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_GetSafeZoneID::ManualSafeZoneID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetSafeZoneID, Param_SafeZoneID) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_GetSafeZoneID::Param_SafeZoneID' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_GetEncountArea_RouteNodeList
// 0x0010 (0x0010 - 0x0000)
struct BP_EncountAreaBase_C_BPI_GetEncountArea_RouteNodeList final
{
public:
	TArray<struct FMapSymbolRouteNode>            NodeList;                                          // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_GetEncountArea_RouteNodeList) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_BPI_GetEncountArea_RouteNodeList");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_GetEncountArea_RouteNodeList) == 0x000010, "Wrong size on BP_EncountAreaBase_C_BPI_GetEncountArea_RouteNodeList");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountArea_RouteNodeList, NodeList) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_GetEncountArea_RouteNodeList::NodeList' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_GetEncountArea_RouteNodeSpace
// 0x0004 (0x0004 - 0x0000)
struct BP_EncountAreaBase_C_BPI_GetEncountArea_RouteNodeSpace final
{
public:
	float                                         Space;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_GetEncountArea_RouteNodeSpace) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_BPI_GetEncountArea_RouteNodeSpace");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_GetEncountArea_RouteNodeSpace) == 0x000004, "Wrong size on BP_EncountAreaBase_C_BPI_GetEncountArea_RouteNodeSpace");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountArea_RouteNodeSpace, Space) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_GetEncountArea_RouteNodeSpace::Space' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_GetEncountComeAreaInfo
// 0x00E0 (0x00E0 - 0x0000)
struct BP_EncountAreaBase_C_BPI_GetEncountComeAreaInfo final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FVector                                Param_HitSize;                                     // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComeRangeSize_ComeSize;                // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AC8[0x8];                                     // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_GetEncountComeAreaInfo) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_BPI_GetEncountComeAreaInfo");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_GetEncountComeAreaInfo) == 0x0000E0, "Wrong size on BP_EncountAreaBase_C_BPI_GetEncountComeAreaInfo");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountComeAreaInfo, Transform) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_GetEncountComeAreaInfo::Transform' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountComeAreaInfo, Param_HitSize) == 0x000030, "Member 'BP_EncountAreaBase_C_BPI_GetEncountComeAreaInfo::Param_HitSize' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountComeAreaInfo, CallFunc_GetComeRangeSize_ComeSize) == 0x00003C, "Member 'BP_EncountAreaBase_C_BPI_GetEncountComeAreaInfo::CallFunc_GetComeRangeSize_ComeSize' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountComeAreaInfo, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'BP_EncountAreaBase_C_BPI_GetEncountComeAreaInfo::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountComeAreaInfo, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'BP_EncountAreaBase_C_BPI_GetEncountComeAreaInfo::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetEncountComeAreaInfo, CallFunc_ComposeTransforms_ReturnValue) == 0x0000B0, "Member 'BP_EncountAreaBase_C_BPI_GetEncountComeAreaInfo::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_CheckMagatsukaEncountArea
// 0x0001 (0x0001 - 0x0000)
struct BP_EncountAreaBase_C_BPI_CheckMagatsukaEncountArea final
{
public:
	bool                                          Magatsuka;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_CheckMagatsukaEncountArea) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_CheckMagatsukaEncountArea");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_CheckMagatsukaEncountArea) == 0x000001, "Wrong size on BP_EncountAreaBase_C_BPI_CheckMagatsukaEncountArea");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckMagatsukaEncountArea, Magatsuka) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_CheckMagatsukaEncountArea::Magatsuka' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_GetDeadSaveID
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_BPI_GetDeadSaveID final
{
public:
	int32                                         DeadSaveID;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDeadSaveID_DeadSaveID;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_GetDeadSaveID) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_BPI_GetDeadSaveID");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_GetDeadSaveID) == 0x000008, "Wrong size on BP_EncountAreaBase_C_BPI_GetDeadSaveID");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetDeadSaveID, DeadSaveID) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_GetDeadSaveID::DeadSaveID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetDeadSaveID, CallFunc_GetDeadSaveID_DeadSaveID) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_GetDeadSaveID::CallFunc_GetDeadSaveID_DeadSaveID' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_ActSymbolWhenPause_FromOutside
// 0x00F0 (0x00F0 - 0x0000)
struct BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside final
{
public:
	int32                                         OutsideID;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AC9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9ACA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item;                           // 0x0010(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9ACB[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent;   // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9ACC[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapSymbol_C>      K2Node_DynamicCast_AsBPI_Map_Symbol;               // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9ACD[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9ACE[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside) == 0x0000F0, "Wrong size on BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside, OutsideID) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside::OutsideID' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside, NewParam) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside, CallFunc_IsValid_ReturnValue) == 0x0000B1, "Member 'BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent) == 0x0000B8, "Member 'BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside, CallFunc_Array_Length_ReturnValue) == 0x0000C4, "Member 'BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside, K2Node_DynamicCast_AsBPI_Map_Symbol) == 0x0000C8, "Member 'BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside::K2Node_DynamicCast_AsBPI_Map_Symbol' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside, Temp_int_Loop_Counter_Variable) == 0x0000DC, "Member 'BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside, CallFunc_Add_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_EncountAreaBase_C_BPI_ActSymbolWhenPause_FromOutside::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_CheckViewSymbol
// 0x0001 (0x0001 - 0x0000)
struct BP_EncountAreaBase_C_BPI_CheckViewSymbol final
{
public:
	bool                                          View;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_CheckViewSymbol) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_CheckViewSymbol");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_CheckViewSymbol) == 0x000001, "Wrong size on BP_EncountAreaBase_C_BPI_CheckViewSymbol");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckViewSymbol, View) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_CheckViewSymbol::View' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_CheckAreaIN
// 0x0002 (0x0002 - 0x0000)
struct BP_EncountAreaBase_C_BPI_CheckAreaIN final
{
public:
	bool                                          AreaIN;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAreaIN_AreaIN;                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_CheckAreaIN) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_CheckAreaIN");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_CheckAreaIN) == 0x000002, "Wrong size on BP_EncountAreaBase_C_BPI_CheckAreaIN");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckAreaIN, AreaIN) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_CheckAreaIN::AreaIN' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckAreaIN, CallFunc_CheckAreaIN_AreaIN) == 0x000001, "Member 'BP_EncountAreaBase_C_BPI_CheckAreaIN::CallFunc_CheckAreaIN_AreaIN' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_InHitArea
// 0x00F0 (0x00F0 - 0x0000)
struct BP_EncountAreaBase_C_BPI_InHitArea final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AddHitSize;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In;                                                // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9ACF[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AD0[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AD1[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AD2[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AD3[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AD4[0xC];                                     // 0x00A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPointInBoxWithTransform_ReturnValue;    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_InHitArea) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_BPI_InHitArea");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_InHitArea) == 0x0000F0, "Wrong size on BP_EncountAreaBase_C_BPI_InHitArea");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, Pos) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::Pos' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, AddHitSize) == 0x00000C, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::AddHitSize' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, In) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::In' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_BreakVector_X) == 0x000014, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_BreakVector_Y) == 0x000018, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_BreakVector_Z) == 0x00001C, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_BreakVector_X_1) == 0x000020, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_BreakVector_Y_1) == 0x000024, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_BreakVector_Z_1) == 0x000028, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_MakeVector_ReturnValue) == 0x00002C, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_FMax_ReturnValue) == 0x00003C, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000040, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000044, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_BreakVector_X_2) == 0x000050, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_BreakVector_Y_2) == 0x000054, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_BreakVector_Z_2) == 0x000058, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000060, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000065, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_MakeVector_ReturnValue_1) == 0x000068, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_Vector_Distance_ReturnValue) == 0x000074, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_BreakVector_X_3) == 0x000078, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_BreakVector_Y_3) == 0x00007C, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_BreakVector_Z_3) == 0x000080, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000084, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000088, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_BooleanAND_ReturnValue) == 0x00008C, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x000090, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_BooleanAND_ReturnValue_1) == 0x000094, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_MakeVector_ReturnValue_2) == 0x000098, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000B0, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_InHitArea, CallFunc_IsPointInBoxWithTransform_ReturnValue) == 0x0000E0, "Member 'BP_EncountAreaBase_C_BPI_InHitArea::CallFunc_IsPointInBoxWithTransform_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_NotOutHit
// 0x0001 (0x0001 - 0x0000)
struct BP_EncountAreaBase_C_BPI_NotOutHit final
{
public:
	bool                                          NotOut;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_NotOutHit) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_NotOutHit");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_NotOutHit) == 0x000001, "Wrong size on BP_EncountAreaBase_C_BPI_NotOutHit");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_NotOutHit, NotOut) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_NotOutHit::NotOut' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_ReturnSymbols
// 0x0003 (0x0003 - 0x0000)
struct BP_EncountAreaBase_C_BPI_ReturnSymbols final
{
public:
	bool                                          Effect;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewParam;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_ReturnSymbols) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_ReturnSymbols");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_ReturnSymbols) == 0x000003, "Wrong size on BP_EncountAreaBase_C_BPI_ReturnSymbols");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ReturnSymbols, Effect) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_ReturnSymbols::Effect' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ReturnSymbols, NewParam) == 0x000001, "Member 'BP_EncountAreaBase_C_BPI_ReturnSymbols::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ReturnSymbols, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_EncountAreaBase_C_BPI_ReturnSymbols::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_GetSymbolInfo
// 0x00B0 (0x00B0 - 0x0000)
struct BP_EncountAreaBase_C_BPI_GetSymbolInfo final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AD5[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       SymbolInfo;                                        // 0x0010(0x00A0)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_GetSymbolInfo) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_BPI_GetSymbolInfo");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_GetSymbolInfo) == 0x0000B0, "Wrong size on BP_EncountAreaBase_C_BPI_GetSymbolInfo");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetSymbolInfo, Param_Index) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_GetSymbolInfo::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetSymbolInfo, SymbolInfo) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_GetSymbolInfo::SymbolInfo' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_CheckLastBattleArea
// 0x00D0 (0x00D0 - 0x0000)
struct BP_EncountAreaBase_C_BPI_CheckLastBattleArea final
{
public:
	bool                                          Last;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AD6[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAreaIN_AreaIN;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AD7[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AD8[0xC];                                     // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item;                           // 0x0020(0x00A0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_CheckLastBattleArea) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_BPI_CheckLastBattleArea");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_CheckLastBattleArea) == 0x0000D0, "Wrong size on BP_EncountAreaBase_C_BPI_CheckLastBattleArea");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckLastBattleArea, Last) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_CheckLastBattleArea::Last' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckLastBattleArea, Temp_bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'BP_EncountAreaBase_C_BPI_CheckLastBattleArea::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckLastBattleArea, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_CheckLastBattleArea::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckLastBattleArea, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_EncountAreaBase_C_BPI_CheckLastBattleArea::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckLastBattleArea, CallFunc_CheckAreaIN_AreaIN) == 0x000009, "Member 'BP_EncountAreaBase_C_BPI_CheckLastBattleArea::CallFunc_CheckAreaIN_AreaIN' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckLastBattleArea, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_EncountAreaBase_C_BPI_CheckLastBattleArea::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckLastBattleArea, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_CheckLastBattleArea::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckLastBattleArea, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EncountAreaBase_C_BPI_CheckLastBattleArea::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckLastBattleArea, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BP_EncountAreaBase_C_BPI_CheckLastBattleArea::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckLastBattleArea, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_EncountAreaBase_C_BPI_CheckLastBattleArea::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckLastBattleArea, CallFunc_BooleanAND_ReturnValue) == 0x0000C5, "Member 'BP_EncountAreaBase_C_BPI_CheckLastBattleArea::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_ChangeReturnPoint
// 0x0014 (0x0014 - 0x0000)
struct BP_EncountAreaBase_C_BPI_ChangeReturnPoint final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnPoint;                                       // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_ChangeReturnPoint) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_BPI_ChangeReturnPoint");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_ChangeReturnPoint) == 0x000014, "Wrong size on BP_EncountAreaBase_C_BPI_ChangeReturnPoint");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeReturnPoint, Param_Index) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_ChangeReturnPoint::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeReturnPoint, ReturnPoint) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_ChangeReturnPoint::ReturnPoint' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeReturnPoint, NewParam) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_ChangeReturnPoint::NewParam' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_CheckGiveupHitList
// 0x0028 (0x0028 - 0x0000)
struct BP_EncountAreaBase_C_BPI_CheckGiveupHitList final
{
public:
	bool                                          Param_Hit;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AD9[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9ADA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountArea_OptionHit_C*            CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_CheckGiveupHitList) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_BPI_CheckGiveupHitList");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_CheckGiveupHitList) == 0x000028, "Wrong size on BP_EncountAreaBase_C_BPI_CheckGiveupHitList");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckGiveupHitList, Param_Hit) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_CheckGiveupHitList::Param_Hit' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckGiveupHitList, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_CheckGiveupHitList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckGiveupHitList, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EncountAreaBase_C_BPI_CheckGiveupHitList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckGiveupHitList, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_CheckGiveupHitList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckGiveupHitList, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_BPI_CheckGiveupHitList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckGiveupHitList, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_EncountAreaBase_C_BPI_CheckGiveupHitList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckGiveupHitList, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_EncountAreaBase_C_BPI_CheckGiveupHitList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_SetSpawnSymbolEffect
// 0x0003 (0x0003 - 0x0000)
struct BP_EncountAreaBase_C_BPI_SetSpawnSymbolEffect final
{
public:
	bool                                          EffectON;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewParam1;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_SetSpawnSymbolEffect) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_SetSpawnSymbolEffect");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_SetSpawnSymbolEffect) == 0x000003, "Wrong size on BP_EncountAreaBase_C_BPI_SetSpawnSymbolEffect");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetSpawnSymbolEffect, EffectON) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_SetSpawnSymbolEffect::EffectON' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetSpawnSymbolEffect, NewParam1) == 0x000001, "Member 'BP_EncountAreaBase_C_BPI_SetSpawnSymbolEffect::NewParam1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetSpawnSymbolEffect, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_EncountAreaBase_C_BPI_SetSpawnSymbolEffect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_StopSymbolRespawn
// 0x00D0 (0x00D0 - 0x0000)
struct BP_EncountAreaBase_C_BPI_StopSymbolRespawn final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Stop;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewParam1;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9ADB[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9ADC[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9ADD[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item;                           // 0x0020(0x00A0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_StopSymbolRespawn) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_BPI_StopSymbolRespawn");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_StopSymbolRespawn) == 0x0000D0, "Wrong size on BP_EncountAreaBase_C_BPI_StopSymbolRespawn");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSymbolRespawn, Pawn) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_StopSymbolRespawn::Pawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSymbolRespawn, Stop) == 0x000008, "Member 'BP_EncountAreaBase_C_BPI_StopSymbolRespawn::Stop' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSymbolRespawn, NewParam1) == 0x000009, "Member 'BP_EncountAreaBase_C_BPI_StopSymbolRespawn::NewParam1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSymbolRespawn, Temp_bool_True_if_break_was_hit_Variable) == 0x00000A, "Member 'BP_EncountAreaBase_C_BPI_StopSymbolRespawn::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSymbolRespawn, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_EncountAreaBase_C_BPI_StopSymbolRespawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSymbolRespawn, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_StopSymbolRespawn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSymbolRespawn, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_EncountAreaBase_C_BPI_StopSymbolRespawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSymbolRespawn, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_BPI_StopSymbolRespawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSymbolRespawn, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EncountAreaBase_C_BPI_StopSymbolRespawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSymbolRespawn, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BP_EncountAreaBase_C_BPI_StopSymbolRespawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSymbolRespawn, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_EncountAreaBase_C_BPI_StopSymbolRespawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSymbolRespawn, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000C5, "Member 'BP_EncountAreaBase_C_BPI_StopSymbolRespawn::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSymbolRespawn, CallFunc_BooleanAND_ReturnValue) == 0x0000C6, "Member 'BP_EncountAreaBase_C_BPI_StopSymbolRespawn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_SetChainEncountList
// 0x0060 (0x0060 - 0x0000)
struct BP_EncountAreaBase_C_BPI_SetChainEncountList final
{
public:
	TArray<class UActorComponent*>                Components;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          NewParam;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9ADE[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_index;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMapSymbolBaseCompornent_C*             L_Comp;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent;   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9ADF[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AE0[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AE1[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountAreaBase_C*                  K2Node_DynamicCast_AsBP_Encount_Area_Base;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_SetChainEncountList) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_BPI_SetChainEncountList");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_SetChainEncountList) == 0x000060, "Wrong size on BP_EncountAreaBase_C_BPI_SetChainEncountList");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetChainEncountList, Components) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_SetChainEncountList::Components' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetChainEncountList, NewParam) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_SetChainEncountList::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetChainEncountList, L_index) == 0x000014, "Member 'BP_EncountAreaBase_C_BPI_SetChainEncountList::L_index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetChainEncountList, L_Comp) == 0x000018, "Member 'BP_EncountAreaBase_C_BPI_SetChainEncountList::L_Comp' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetChainEncountList, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_EncountAreaBase_C_BPI_SetChainEncountList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetChainEncountList, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_EncountAreaBase_C_BPI_SetChainEncountList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetChainEncountList, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EncountAreaBase_C_BPI_SetChainEncountList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetChainEncountList, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent) == 0x000030, "Member 'BP_EncountAreaBase_C_BPI_SetChainEncountList::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetChainEncountList, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EncountAreaBase_C_BPI_SetChainEncountList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetChainEncountList, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'BP_EncountAreaBase_C_BPI_SetChainEncountList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetChainEncountList, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_EncountAreaBase_C_BPI_SetChainEncountList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetChainEncountList, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_EncountAreaBase_C_BPI_SetChainEncountList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetChainEncountList, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_EncountAreaBase_C_BPI_SetChainEncountList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetChainEncountList, K2Node_DynamicCast_AsBP_Encount_Area_Base) == 0x000050, "Member 'BP_EncountAreaBase_C_BPI_SetChainEncountList::K2Node_DynamicCast_AsBP_Encount_Area_Base' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetChainEncountList, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_EncountAreaBase_C_BPI_SetChainEncountList::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_TimeAttackEncountAreaStart
// 0x0020 (0x0020 - 0x0000)
struct BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart final
{
public:
	bool                                          CheckMission;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AE2[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionId;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAreaIN_AreaIN;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AE3[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart) == 0x000020, "Wrong size on BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart, CheckMission) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart::CheckMission' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart, MissionId) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart::MissionId' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart, NewParam) == 0x000008, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart, CallFunc_CheckAreaIN_AreaIN) == 0x000009, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart::CallFunc_CheckAreaIN_AreaIN' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart, CallFunc_Greater_IntInt_ReturnValue) == 0x00001A, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaStart::Temp_int_Array_Index_Variable' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_TimeAttackEncountAreaEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd final
{
public:
	bool                                          Effect;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CheckMission;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AE4[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MissionId;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AE5[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSpawnSymbolNum_Num;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAreaIN_AreaIN;                       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd) == 0x000018, "Wrong size on BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd, Effect) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd::Effect' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd, CheckMission) == 0x000001, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd::CheckMission' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd, MissionId) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd::MissionId' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd, NewParam) == 0x000008, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd, CallFunc_GetSpawnSymbolNum_Num) == 0x00000C, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd::CallFunc_GetSpawnSymbolNum_Num' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd, CallFunc_Greater_IntInt_ReturnValue) == 0x000011, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000012, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd, CallFunc_CheckAreaIN_AreaIN) == 0x000014, "Member 'BP_EncountAreaBase_C_BPI_TimeAttackEncountAreaEnd::CallFunc_CheckAreaIN_AreaIN' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_SetMagatsuhiDevilAll
// 0x00E0 (0x00E0 - 0x0000)
struct BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll final
{
public:
	bool                                          Magatsuhi;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewParam;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AE6[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACustomPawn*                            L_Pawn;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AE7[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AE8[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item;                           // 0x0030(0x00A0)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll) == 0x0000E0, "Wrong size on BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll, Magatsuhi) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll::Magatsuhi' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll, NewParam) == 0x000001, "Member 'BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll, L_Pawn) == 0x000008, "Member 'BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll::L_Pawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent) == 0x000020, "Member 'BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_EncountAreaBase_C_BPI_SetMagatsuhiDevilAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_ChangeSplineLocationZ
// 0x0350 (0x0350 - 0x0000)
struct BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ final
{
public:
	struct FVector                                SymbolLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SymbolHalfHeight;                                  // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AE9[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_HitBottom;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_HitTop;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_SplineBottom;                                    // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_SplineTop;                                       // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_Add;                                             // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Location;                                        // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_SplinePointNum;                                  // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       L_SplineComp;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AEA[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AEB[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue;           // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AEC[0xC];                                     // 0x0184(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpawnSymbolInfo                       CallFunc_Array_Get_Item;                           // 0x0190(0x00A0)(HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AED[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapSymbolBaseCompornent_C*             K2Node_DynamicCast_AsMap_Symbol_Base_Compornent;   // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AEE[0x3];                                     // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplineInputKey_ReturnValue;  // 0x026C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplineInputKey_ReturnValue_1; // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn;                  // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AEF[0x3];                                     // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue; // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue_1;         // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_10;                         // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_10;                         // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_10;                         // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_11;                         // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_11;                         // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_11;                         // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AF0[0x3];                                     // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_8;             // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AF1[0x4];                                     // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_GetSpline_Spline;                         // 0x0338(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AF2[0x3];                                     // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFly_IsFly;                           // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ) == 0x000010, "Wrong alignment on BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ) == 0x000350, "Wrong size on BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, SymbolLocation) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::SymbolLocation' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, SymbolHalfHeight) == 0x00000C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::SymbolHalfHeight' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, NewParam) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, L_HitBottom) == 0x000014, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::L_HitBottom' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, L_HitTop) == 0x000018, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::L_HitTop' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, L_SplineBottom) == 0x00001C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::L_SplineBottom' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, L_SplineTop) == 0x000020, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::L_SplineTop' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, L_Add) == 0x000024, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::L_Add' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, L_Location) == 0x000028, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::L_Location' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, L_SplinePointNum) == 0x000034, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::L_SplinePointNum' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, L_SplineComp) == 0x000038, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::L_SplineComp' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, Temp_int_Variable) == 0x000048, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00004C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_X) == 0x000060, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Y) == 0x000064, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Z) == 0x000068, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00006C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_X_1) == 0x000078, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Y_1) == 0x00007C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Z_1) == 0x000080, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000084, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_FClamp_ReturnValue) == 0x00008C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_FMin_ReturnValue) == 0x000090, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_MakeVector_ReturnValue) == 0x000094, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000A0, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_X_2) == 0x000128, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Y_2) == 0x00012C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Z_2) == 0x000130, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000134, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000138, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_FMax_ReturnValue) == 0x00013C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_X_3) == 0x000140, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Y_3) == 0x000144, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Z_3) == 0x000148, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x00014C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000150, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_X_4) == 0x00015C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Y_4) == 0x000160, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Z_4) == 0x000164, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_GetScaledBoxExtent_ReturnValue) == 0x000168, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_GetScaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, Temp_int_Array_Index_Variable) == 0x000174, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_X_5) == 0x000178, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Y_5) == 0x00017C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Z_5) == 0x000180, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Array_Get_Item) == 0x000190, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x000230, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_IsValid_ReturnValue_1) == 0x000234, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, K2Node_DynamicCast_AsMap_Symbol_Base_Compornent) == 0x000238, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::K2Node_DynamicCast_AsMap_Symbol_Base_Compornent' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, K2Node_DynamicCast_bSuccess) == 0x000240, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000244, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x000248, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_X_6) == 0x00024C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Y_6) == 0x000250, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Z_6) == 0x000254, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_FMin_ReturnValue_1) == 0x000258, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00025C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_X_7) == 0x000260, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Y_7) == 0x000264, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Z_7) == 0x000268, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_GetLocationAtSplineInputKey_ReturnValue) == 0x00026C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_GetLocationAtSplineInputKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x000278, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_FMax_ReturnValue_1) == 0x00027C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_GetLocationAtSplineInputKey_ReturnValue_1) == 0x000280, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_GetLocationAtSplineInputKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x00028C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000290, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_X_8) == 0x00029C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Y_8) == 0x0002A0, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Z_8) == 0x0002A4, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_GetPlayerPawn_ReturnValue) == 0x0002A8, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, K2Node_DynamicCast_AsCustom_Pawn) == 0x0002B0, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::K2Node_DynamicCast_AsCustom_Pawn' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, K2Node_DynamicCast_bSuccess_1) == 0x0002B8, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_FindLocationClosestToWorldLocation_ReturnValue) == 0x0002BC, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_FindLocationClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x0002C8, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002CC, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_X_9) == 0x0002D8, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Y_9) == 0x0002DC, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Z_9) == 0x0002E0, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0002E4, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0002E8, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0002EC, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_GetScaledBoxExtent_ReturnValue_1) == 0x0002F0, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_GetScaledBoxExtent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_X_10) == 0x0002FC, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_X_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Y_10) == 0x000300, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Y_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Z_10) == 0x000304, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Z_10' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000308, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_X_11) == 0x000314, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_X_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Y_11) == 0x000318, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Y_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BreakVector_Z_11) == 0x00031C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BreakVector_Z_11' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x000320, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Not_PreBool_ReturnValue) == 0x000324, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Add_FloatFloat_ReturnValue_8) == 0x000328, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Add_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x00032C, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, Temp_int_Loop_Counter_Variable) == 0x000330, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_GetSpline_Spline) == 0x000338, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_GetSpline_Spline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Less_IntInt_ReturnValue) == 0x000340, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_Add_IntInt_ReturnValue_1) == 0x000344, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_CheckFly_IsFly) == 0x000348, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_CheckFly_IsFly' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ, CallFunc_BooleanAND_ReturnValue) == 0x000349, "Member 'BP_EncountAreaBase_C_BPI_ChangeSplineLocationZ::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_UpdateOptionSpline
// 0x00F0 (0x00F0 - 0x0000)
struct BP_EncountAreaBase_C_BPI_UpdateOptionSpline final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AF3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_HeightDiff;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_NearestIndex;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_NearestHeightDiff;                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_PlayerLocation;                                  // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AF4[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       L_BaseSpline;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AF5[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AF6[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AF7[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue; // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AF8[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_GetBaseSpline_Spline;                     // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_EncountArea_OptionSpline_C*> CallFunc_GetOptionSplines_OptionSplines;           // 0x0098(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AF9[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EncountArea_OptionSpline_C*         CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AFA[0x6];                                     // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_GetSpline_Spline;                         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue_1; // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AFB[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_3;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline) == 0x000008, "Wrong alignment on BP_EncountAreaBase_C_BPI_UpdateOptionSpline");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline) == 0x0000F0, "Wrong size on BP_EncountAreaBase_C_BPI_UpdateOptionSpline");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, NewParam) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, L_HeightDiff) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::L_HeightDiff' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, L_NearestIndex) == 0x000008, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::L_NearestIndex' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, L_NearestHeightDiff) == 0x00000C, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::L_NearestHeightDiff' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, L_PlayerLocation) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::L_PlayerLocation' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, L_BaseSpline) == 0x000020, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::L_BaseSpline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_BreakVector_X) == 0x000030, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_BreakVector_Y) == 0x000034, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_BreakVector_Z) == 0x000038, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_Less_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_BreakVector_X_1) == 0x000040, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_BreakVector_Y_1) == 0x000044, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_BreakVector_Z_1) == 0x000048, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_GetPlayerPawn_ReturnValue) == 0x000050, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_FindLocationClosestToWorldLocation_ReturnValue) == 0x000064, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_FindLocationClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_BreakVector_X_2) == 0x000070, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_BreakVector_Y_2) == 0x000074, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_BreakVector_Z_2) == 0x000078, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_GetBaseSpline_Spline) == 0x000080, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_GetBaseSpline_Spline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_Abs_ReturnValue) == 0x00008C, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_GetOptionSplines_OptionSplines) == 0x000098, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_GetOptionSplines_OptionSplines' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_IsValid_ReturnValue_1) == 0x0000B9, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_GetSpline_Spline) == 0x0000C0, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_GetSpline_Spline' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_FindLocationClosestToWorldLocation_ReturnValue_1) == 0x0000CC, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_FindLocationClosestToWorldLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_BreakVector_X_3) == 0x0000DC, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_BreakVector_Y_3) == 0x0000E0, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_BreakVector_Z_3) == 0x0000E4, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000E8, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_UpdateOptionSpline, CallFunc_Abs_ReturnValue_1) == 0x0000EC, "Member 'BP_EncountAreaBase_C_BPI_UpdateOptionSpline::CallFunc_Abs_ReturnValue_1' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_CheckOtherDiscoveryHit
// 0x0002 (0x0002 - 0x0000)
struct BP_EncountAreaBase_C_BPI_CheckOtherDiscoveryHit final
{
public:
	bool                                          Param_Overlap;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_CheckOtherDiscoveryHit) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_CheckOtherDiscoveryHit");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_CheckOtherDiscoveryHit) == 0x000002, "Wrong size on BP_EncountAreaBase_C_BPI_CheckOtherDiscoveryHit");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckOtherDiscoveryHit, Param_Overlap) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_CheckOtherDiscoveryHit::Param_Overlap' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckOtherDiscoveryHit, CallFunc_Greater_IntInt_ReturnValue) == 0x000001, "Member 'BP_EncountAreaBase_C_BPI_CheckOtherDiscoveryHit::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_CheckEncountAreaGenerator
// 0x0001 (0x0001 - 0x0000)
struct BP_EncountAreaBase_C_BPI_CheckEncountAreaGenerator final
{
public:
	bool                                          Param_Generator;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_CheckEncountAreaGenerator) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_CheckEncountAreaGenerator");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_CheckEncountAreaGenerator) == 0x000001, "Wrong size on BP_EncountAreaBase_C_BPI_CheckEncountAreaGenerator");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckEncountAreaGenerator, Param_Generator) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_CheckEncountAreaGenerator::Param_Generator' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_StopSpawn_FromIndex
// 0x0020 (0x0020 - 0x0000)
struct BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AFC[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AFD[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9AFE[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex) == 0x000020, "Wrong size on BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex, Param_Index) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex, NewParam) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EncountAreaBase_C_BPI_StopSpawn_FromIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_GetNowSymbolNum_cpp
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_BPI_GetNowSymbolNum_cpp final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSpawnSymbolNum_Num;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_GetNowSymbolNum_cpp) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_BPI_GetNowSymbolNum_cpp");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_GetNowSymbolNum_cpp) == 0x000008, "Wrong size on BP_EncountAreaBase_C_BPI_GetNowSymbolNum_cpp");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetNowSymbolNum_cpp, ReturnValue) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_GetNowSymbolNum_cpp::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_GetNowSymbolNum_cpp, CallFunc_GetSpawnSymbolNum_Num) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_GetNowSymbolNum_cpp::CallFunc_GetSpawnSymbolNum_Num' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_CheckTimeAttack_cpp
// 0x0002 (0x0002 - 0x0000)
struct BP_EncountAreaBase_C_BPI_CheckTimeAttack_cpp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_CheckTimeAttack_cpp) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_CheckTimeAttack_cpp");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_CheckTimeAttack_cpp) == 0x000002, "Wrong size on BP_EncountAreaBase_C_BPI_CheckTimeAttack_cpp");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckTimeAttack_cpp, ReturnValue) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_CheckTimeAttack_cpp::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckTimeAttack_cpp, CallFunc_Greater_IntInt_ReturnValue) == 0x000001, "Member 'BP_EncountAreaBase_C_BPI_CheckTimeAttack_cpp::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_CheckGenerator_cpp
// 0x0001 (0x0001 - 0x0000)
struct BP_EncountAreaBase_C_BPI_CheckGenerator_cpp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_CheckGenerator_cpp) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_CheckGenerator_cpp");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_CheckGenerator_cpp) == 0x000001, "Wrong size on BP_EncountAreaBase_C_BPI_CheckGenerator_cpp");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckGenerator_cpp, ReturnValue) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_CheckGenerator_cpp::ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_CheckAreaIn_cpp
// 0x0001 (0x0001 - 0x0000)
struct BP_EncountAreaBase_C_BPI_CheckAreaIn_cpp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_CheckAreaIn_cpp) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_CheckAreaIn_cpp");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_CheckAreaIn_cpp) == 0x000001, "Wrong size on BP_EncountAreaBase_C_BPI_CheckAreaIn_cpp");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckAreaIn_cpp, ReturnValue) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_CheckAreaIn_cpp::ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_ProcTimeAttack_cpp
// 0x0004 (0x0004 - 0x0000)
struct BP_EncountAreaBase_C_BPI_ProcTimeAttack_cpp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInTimeAttack_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_TimeAttackEncountAreaEnd_NewParam;    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_ProcTimeAttack_cpp) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_ProcTimeAttack_cpp");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_ProcTimeAttack_cpp) == 0x000004, "Wrong size on BP_EncountAreaBase_C_BPI_ProcTimeAttack_cpp");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ProcTimeAttack_cpp, ReturnValue) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_ProcTimeAttack_cpp::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ProcTimeAttack_cpp, CallFunc_IsInTimeAttack_ReturnValue) == 0x000001, "Member 'BP_EncountAreaBase_C_BPI_ProcTimeAttack_cpp::CallFunc_IsInTimeAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ProcTimeAttack_cpp, CallFunc_BPI_TimeAttackEncountAreaEnd_NewParam) == 0x000002, "Member 'BP_EncountAreaBase_C_BPI_ProcTimeAttack_cpp::CallFunc_BPI_TimeAttackEncountAreaEnd_NewParam' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ProcTimeAttack_cpp, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_EncountAreaBase_C_BPI_ProcTimeAttack_cpp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_ProcGenerator_cpp
// 0x0008 (0x0008 - 0x0000)
struct BP_EncountAreaBase_C_BPI_ProcGenerator_cpp final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_ProcGenerator_cpp) == 0x000004, "Wrong alignment on BP_EncountAreaBase_C_BPI_ProcGenerator_cpp");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_ProcGenerator_cpp) == 0x000008, "Wrong size on BP_EncountAreaBase_C_BPI_ProcGenerator_cpp");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ProcGenerator_cpp, DeltaTime) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_ProcGenerator_cpp::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_ProcGenerator_cpp, ReturnValue) == 0x000004, "Member 'BP_EncountAreaBase_C_BPI_ProcGenerator_cpp::ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_AreaOut_cpp
// 0x0002 (0x0002 - 0x0000)
struct BP_EncountAreaBase_C_BPI_AreaOut_cpp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_AreaOut_cpp) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_AreaOut_cpp");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_AreaOut_cpp) == 0x000002, "Wrong size on BP_EncountAreaBase_C_BPI_AreaOut_cpp");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_AreaOut_cpp, ReturnValue) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_AreaOut_cpp::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_AreaOut_cpp, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_EncountAreaBase_C_BPI_AreaOut_cpp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_AreaIn_cpp
// 0x0002 (0x0002 - 0x0000)
struct BP_EncountAreaBase_C_BPI_AreaIn_cpp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_AreaIn_cpp) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_AreaIn_cpp");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_AreaIn_cpp) == 0x000002, "Wrong size on BP_EncountAreaBase_C_BPI_AreaIn_cpp");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_AreaIn_cpp, ReturnValue) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_AreaIn_cpp::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_AreaIn_cpp, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_EncountAreaBase_C_BPI_AreaIn_cpp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_CheckIgnorePause_cpp
// 0x0001 (0x0001 - 0x0000)
struct BP_EncountAreaBase_C_BPI_CheckIgnorePause_cpp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_CheckIgnorePause_cpp) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_CheckIgnorePause_cpp");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_CheckIgnorePause_cpp) == 0x000001, "Wrong size on BP_EncountAreaBase_C_BPI_CheckIgnorePause_cpp");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckIgnorePause_cpp, ReturnValue) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_CheckIgnorePause_cpp::ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_CheckDaathSpawnType_cpp
// 0x0002 (0x0002 - 0x0000)
struct BP_EncountAreaBase_C_BPI_CheckDaathSpawnType_cpp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_CheckDaathSpawnType_cpp) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_CheckDaathSpawnType_cpp");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_CheckDaathSpawnType_cpp) == 0x000002, "Wrong size on BP_EncountAreaBase_C_BPI_CheckDaathSpawnType_cpp");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckDaathSpawnType_cpp, ReturnValue) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_CheckDaathSpawnType_cpp::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckDaathSpawnType_cpp, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_EncountAreaBase_C_BPI_CheckDaathSpawnType_cpp::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_EncountAreaBase.BP_EncountAreaBase_C.BPI_CheckRoomGuardian_cpp
// 0x0001 (0x0001 - 0x0000)
struct BP_EncountAreaBase_C_BPI_CheckRoomGuardian_cpp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EncountAreaBase_C_BPI_CheckRoomGuardian_cpp) == 0x000001, "Wrong alignment on BP_EncountAreaBase_C_BPI_CheckRoomGuardian_cpp");
static_assert(sizeof(BP_EncountAreaBase_C_BPI_CheckRoomGuardian_cpp) == 0x000001, "Wrong size on BP_EncountAreaBase_C_BPI_CheckRoomGuardian_cpp");
static_assert(offsetof(BP_EncountAreaBase_C_BPI_CheckRoomGuardian_cpp, ReturnValue) == 0x000000, "Member 'BP_EncountAreaBase_C_BPI_CheckRoomGuardian_cpp::ReturnValue' has a wrong offset!");

}

