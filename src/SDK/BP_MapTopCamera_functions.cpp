#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapTopCamera

#include "Basic.hpp"

#include "BP_MapTopCamera_classes.hpp"
#include "BP_MapTopCamera_parameters.hpp"


namespace SDK
{

// Function BP_MapTopCamera.BP_MapTopCamera_C.ExecuteUbergraph_BP_MapTopCamera
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapTopCamera_C::ExecuteUbergraph_BP_MapTopCamera(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "ExecuteUbergraph_BP_MapTopCamera");

	Params::BP_MapTopCamera_C_ExecuteUbergraph_BP_MapTopCamera Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.OnFinishTop
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::OnFinishTop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "OnFinishTop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.OnStartTop
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::OnStartTop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "OnStartTop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapTopCamera_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "ReceiveTick");

	Params::BP_MapTopCamera_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.Start
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.ProcessInput
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapTopCamera_C::ProcessInput(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "ProcessInput");

	Params::BP_MapTopCamera_C_ProcessInput Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.Deactivate
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "Deactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.ProcessInput_Height
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapTopCamera_C::ProcessInput_Height(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "ProcessInput_Height");

	Params::BP_MapTopCamera_C_ProcessInput_Height Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.ProcessInput_Horizontal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapTopCamera_C::ProcessInput_Horizontal(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "ProcessInput_Horizontal");

	Params::BP_MapTopCamera_C_ProcessInput_Horizontal Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.ProcessInput_Target
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapTopCamera_C::ProcessInput_Target(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "ProcessInput_Target");

	Params::BP_MapTopCamera_C_ProcessInput_Target Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.GetHorizontalSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Speed                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapTopCamera_C::GetHorizontalSpeed(float* Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "GetHorizontalSpeed");

	Params::BP_MapTopCamera_C_GetHorizontalSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Speed != nullptr)
		*Speed = Parms.Speed;
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.GetDefaultHeight
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Height                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapTopCamera_C::GetDefaultHeight(float* Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "GetDefaultHeight");

	Params::BP_MapTopCamera_C_GetDefaultHeight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Height != nullptr)
		*Height = Parms.Height;
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.GetHorizontalDistanceLimit
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Limit                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapTopCamera_C::GetHorizontalDistanceLimit(float* Limit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "GetHorizontalDistanceLimit");

	Params::BP_MapTopCamera_C_GetHorizontalDistanceLimit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Limit != nullptr)
		*Limit = Parms.Limit;
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.IsNorthUp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_IsNorthUp                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapTopCamera_C::IsNorthUp(bool* Param_IsNorthUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "IsNorthUp");

	Params::BP_MapTopCamera_C_IsNorthUp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsNorthUp != nullptr)
		*Param_IsNorthUp = Parms.Param_IsNorthUp;
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.GetBlendTime
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Seconds                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapTopCamera_C::GetBlendTime(float* Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "GetBlendTime");

	Params::BP_MapTopCamera_C_GetBlendTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Seconds != nullptr)
		*Seconds = Parms.Seconds;
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.GetBlendExp
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   BlendExp                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapTopCamera_C::GetBlendExp(float* BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "GetBlendExp");

	Params::BP_MapTopCamera_C_GetBlendExp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BlendExp != nullptr)
		*BlendExp = Parms.BlendExp;
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.Init Camera Param
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::Init_Camera_Param()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "Init Camera Param");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.ApplyTransitionDebugParam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::ApplyTransitionDebugParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "ApplyTransitionDebugParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.GetDefaultFOVY
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Height                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapTopCamera_C::GetDefaultFOVY(float* Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "GetDefaultFOVY");

	Params::BP_MapTopCamera_C_GetDefaultFOVY Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Height != nullptr)
		*Height = Parms.Height;
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.OpenButtonHelp
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::OpenButtonHelp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "OpenButtonHelp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.ProcessInputInconHelp
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::ProcessInputInconHelp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "ProcessInputInconHelp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.UpdateButtonHelp
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IconShowing                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapTopCamera_C::UpdateButtonHelp(bool Param_IconShowing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "UpdateButtonHelp");

	Params::BP_MapTopCamera_C_UpdateButtonHelp Parms{};

	Parms.Param_IconShowing = Param_IconShowing;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.ProcessInput_ActorHorizontal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceUpdate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapTopCamera_C::ProcessInput_ActorHorizontal(float DeltaSeconds, bool ForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "ProcessInput_ActorHorizontal");

	Params::BP_MapTopCamera_C_ProcessInput_ActorHorizontal Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.ForceUpdate = ForceUpdate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.TryTrace
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          PrevLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NextLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutNext                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanMove                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapTopCamera_C::TryTrace(const struct FVector& PrevLocation, const struct FVector& NextLocation, struct FVector* OutNext, bool* CanMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "TryTrace");

	Params::BP_MapTopCamera_C_TryTrace Parms{};

	Parms.PrevLocation = std::move(PrevLocation);
	Parms.NextLocation = std::move(NextLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (OutNext != nullptr)
		*OutNext = std::move(Parms.OutNext);

	if (CanMove != nullptr)
		*CanMove = Parms.CanMove;
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.SetLOD
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::SetLOD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "SetLOD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.SetFoliageLOD
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::SetFoliageLOD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "SetFoliageLOD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.ResetLOD
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::ResetLOD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "ResetLOD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.ResetFoliageLOD
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::ResetFoliageLOD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "ResetFoliageLOD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.GetHeightDistanceMin
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Height                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapTopCamera_C::GetHeightDistanceMin(float* Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "GetHeightDistanceMin");

	Params::BP_MapTopCamera_C_GetHeightDistanceMin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Height != nullptr)
		*Height = Parms.Height;
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.GetStartHeight
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Height                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapTopCamera_C::GetStartHeight(float* Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "GetStartHeight");

	Params::BP_MapTopCamera_C_GetStartHeight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Height != nullptr)
		*Height = Parms.Height;
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.GetHorizontalDistanceModifier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Modifier                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapTopCamera_C::GetHorizontalDistanceModifier(float* Modifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "GetHorizontalDistanceModifier");

	Params::BP_MapTopCamera_C_GetHorizontalDistanceModifier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Modifier != nullptr)
		*Modifier = Parms.Modifier;
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.GetConsoleVariables
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::GetConsoleVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "GetConsoleVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.ApplyConsoleVariables
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::ApplyConsoleVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "ApplyConsoleVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.ResetConsoleVariables
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::ResetConsoleVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "ResetConsoleVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.ApplyConsoleVariables_debug
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::ApplyConsoleVariables_debug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "ApplyConsoleVariables_debug");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.FieldVisibilityOnStart
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::FieldVisibilityOnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "FieldVisibilityOnStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapTopCamera.BP_MapTopCamera_C.FieldVisibilityOnFinish
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapTopCamera_C::FieldVisibilityOnFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapTopCamera_C", "FieldVisibilityOnFinish");

	UObject::ProcessEvent(Func, nullptr);
}

}

