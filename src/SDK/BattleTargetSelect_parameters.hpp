#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleTargetSelect

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "RigRailData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BTL_PAD_MAP_structs.hpp"


namespace SDK::Params
{

// Function BattleTargetSelect.BattleTargetSelect_C.ExecuteUbergraph_BattleTargetSelect
// 0x00C0 (0x00C0 - 0x0000)
struct BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10F6[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10F7[0x1];                                     // 0x009F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetMainInterface_AsBPI_Main_Interface;    // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Event_PartyIndex_1;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_CheckBattleFlag_ReturnValue;           // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10F8[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_PartyIndex;                           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect) == 0x000008, "Wrong alignment on BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect");
static_assert(sizeof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect) == 0x0000C0, "Wrong size on BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, EntryPoint) == 0x000000, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, K2Node_CreateDelegate_OutputDelegate_4) == 0x000044, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, K2Node_CreateDelegate_OutputDelegate_5) == 0x000054, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, K2Node_CreateDelegate_OutputDelegate_6) == 0x000064, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, K2Node_CreateDelegate_OutputDelegate_7) == 0x000074, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, CallFunc_Not_PreBool_ReturnValue) == 0x000084, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, K2Node_CreateDelegate_OutputDelegate_8) == 0x000088, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, K2Node_Event_DeltaSeconds) == 0x000098, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, CallFunc_BooleanAND_ReturnValue) == 0x00009C, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, CallFunc_Not_PreBool_ReturnValue_1) == 0x00009D, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, CallFunc_BooleanAND_ReturnValue_1) == 0x00009E, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, CallFunc_GetMainInterface_AsBPI_Main_Interface) == 0x0000A0, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::CallFunc_GetMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, K2Node_Event_PartyIndex_1) == 0x0000B0, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::K2Node_Event_PartyIndex_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, CallFunc_BI_CheckBattleFlag_ReturnValue) == 0x0000B4, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::CallFunc_BI_CheckBattleFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, K2Node_Event_PartyIndex) == 0x0000B8, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::K2Node_Event_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000BC, "Member 'BattleTargetSelect_C_ExecuteUbergraph_BattleTargetSelect::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.BI_DirectDecideTargetIndex
// 0x0004 (0x0004 - 0x0000)
struct BattleTargetSelect_C_BI_DirectDecideTargetIndex final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_BI_DirectDecideTargetIndex) == 0x000004, "Wrong alignment on BattleTargetSelect_C_BI_DirectDecideTargetIndex");
static_assert(sizeof(BattleTargetSelect_C_BI_DirectDecideTargetIndex) == 0x000004, "Wrong size on BattleTargetSelect_C_BI_DirectDecideTargetIndex");
static_assert(offsetof(BattleTargetSelect_C_BI_DirectDecideTargetIndex, PartyIndex) == 0x000000, "Member 'BattleTargetSelect_C_BI_DirectDecideTargetIndex::PartyIndex' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.BI_DirectSelectTargetIndex
// 0x0004 (0x0004 - 0x0000)
struct BattleTargetSelect_C_BI_DirectSelectTargetIndex final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_BI_DirectSelectTargetIndex) == 0x000004, "Wrong alignment on BattleTargetSelect_C_BI_DirectSelectTargetIndex");
static_assert(sizeof(BattleTargetSelect_C_BI_DirectSelectTargetIndex) == 0x000004, "Wrong size on BattleTargetSelect_C_BI_DirectSelectTargetIndex");
static_assert(offsetof(BattleTargetSelect_C_BI_DirectSelectTargetIndex, PartyIndex) == 0x000000, "Member 'BattleTargetSelect_C_BI_DirectSelectTargetIndex::PartyIndex' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BattleTargetSelect_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_ReceiveTick) == 0x000004, "Wrong alignment on BattleTargetSelect_C_ReceiveTick");
static_assert(sizeof(BattleTargetSelect_C_ReceiveTick) == 0x000004, "Wrong size on BattleTargetSelect_C_ReceiveTick");
static_assert(offsetof(BattleTargetSelect_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BattleTargetSelect_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.InvSideOneFunc
// 0x00C0 (0x00C0 - 0x0000)
struct BattleTargetSelect_C_InvSideOneFunc final
{
public:
	int32                                         Lo_Direction;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsUseCamRail;                                   // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10F9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTask;                                       // 0x0008(0x0010)(Edit, BlueprintVisible)
	EBTL_PAD_MAP                                  Lo_A;                                              // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTL_PAD_MAP                                  Lo_Right;                                          // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTL_PAD_MAP                                  Lo_Left;                                           // 0x001A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetMouseWheelAxis_Axis;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10FA[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10FB[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideIsTargetList_ReturnValue;          // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10FC[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcPenetrationEfficacy_IsPenetration;    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcPenetrationEfficacy_IsPenetration_1;  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10FD[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_ATTRIBUTE_TYPE>                      CallFunc_CalcDefenceAishouArray_Aishou;            // 0x0058(0x0010)(ReferenceParm)
	TArray<E_ATTRIBUTE_TYPE>                      CallFunc_CalcDefenceAishouArray_Aishou_1;          // 0x0068(0x0010)(ReferenceParm)
	TArray<E_ATTRIBUTE_TYPE>                      K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	TArray<E_ATTRIBUTE_TYPE>                      K2Node_MakeArray_Array_1;                          // 0x0088(0x0010)(ReferenceParm)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_1;                // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_2;                // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10FE[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetInvSideOneStartIndex_retValue;         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUseCamRailAtInvOne_isUse;               // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_InvSideOneFunc) == 0x000008, "Wrong alignment on BattleTargetSelect_C_InvSideOneFunc");
static_assert(sizeof(BattleTargetSelect_C_InvSideOneFunc) == 0x0000C0, "Wrong size on BattleTargetSelect_C_InvSideOneFunc");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, Lo_Direction) == 0x000000, "Member 'BattleTargetSelect_C_InvSideOneFunc::Lo_Direction' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, Lo_IsUseCamRail) == 0x000004, "Member 'BattleTargetSelect_C_InvSideOneFunc::Lo_IsUseCamRail' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, Lo_WaitTask) == 0x000008, "Member 'BattleTargetSelect_C_InvSideOneFunc::Lo_WaitTask' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, Lo_A) == 0x000018, "Member 'BattleTargetSelect_C_InvSideOneFunc::Lo_A' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, Lo_Right) == 0x000019, "Member 'BattleTargetSelect_C_InvSideOneFunc::Lo_Right' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, Lo_Left) == 0x00001A, "Member 'BattleTargetSelect_C_InvSideOneFunc::Lo_Left' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001B, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_GetMouseWheelAxis_Axis) == 0x00001C, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_GetMouseWheelAxis_Axis' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_FTrunc_ReturnValue) == 0x000020, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_GetPartySystem_retValue) == 0x000028, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_GetSideIsTargetList_ReturnValue) == 0x000038, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_GetSideIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00004C, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_CalcPenetrationEfficacy_IsPenetration) == 0x000054, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_CalcPenetrationEfficacy_IsPenetration' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_CalcPenetrationEfficacy_IsPenetration_1) == 0x000055, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_CalcPenetrationEfficacy_IsPenetration_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_CalcDefenceAishouArray_Aishou) == 0x000058, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_CalcDefenceAishouArray_Aishou' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_CalcDefenceAishouArray_Aishou_1) == 0x000068, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_CalcDefenceAishouArray_Aishou_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, K2Node_MakeArray_Array) == 0x000078, "Member 'BattleTargetSelect_C_InvSideOneFunc::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, K2Node_MakeArray_Array_1) == 0x000088, "Member 'BattleTargetSelect_C_InvSideOneFunc::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_GetPartySystem_retValue_1) == 0x000098, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_GetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_GetPartySystem_retValue_2) == 0x0000A0, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_GetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_BooleanAND_ReturnValue) == 0x0000A9, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_GetInvSideOneStartIndex_retValue) == 0x0000AC, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_GetInvSideOneStartIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, Temp_int_Variable) == 0x0000B0, "Member 'BattleTargetSelect_C_InvSideOneFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, Temp_int_Variable_1) == 0x0000B4, "Member 'BattleTargetSelect_C_InvSideOneFunc::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_IsUseCamRailAtInvOne_isUse) == 0x0000BC, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_IsUseCamRailAtInvOne_isUse' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_IsActionPadCheck_Success) == 0x0000BD, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, CallFunc_IsActionPadCheck_Success_1) == 0x0000BE, "Member 'BattleTargetSelect_C_InvSideOneFunc::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideOneFunc, K2Node_SwitchInteger_CmpSuccess) == 0x0000BF, "Member 'BattleTargetSelect_C_InvSideOneFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.StartSelect
// 0x0030 (0x0030 - 0x0000)
struct BattleTargetSelect_C_StartSelect final
{
public:
	int32                                         InPartyIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCounter;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsInvTarget;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCursorEnable;                                    // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10FF[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   Lo_PartySystem;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_tempIndex;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoEraseUnitMax;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoEraseUnitStart;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1100[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 LoWaitTask;                                        // 0x0020(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(BattleTargetSelect_C_StartSelect) == 0x000008, "Wrong alignment on BattleTargetSelect_C_StartSelect");
static_assert(sizeof(BattleTargetSelect_C_StartSelect) == 0x000030, "Wrong size on BattleTargetSelect_C_StartSelect");
static_assert(offsetof(BattleTargetSelect_C_StartSelect, InPartyIndex) == 0x000000, "Member 'BattleTargetSelect_C_StartSelect::InPartyIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_StartSelect, IsCounter) == 0x000004, "Member 'BattleTargetSelect_C_StartSelect::IsCounter' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_StartSelect, IsInvTarget) == 0x000005, "Member 'BattleTargetSelect_C_StartSelect::IsInvTarget' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_StartSelect, IsCursorEnable) == 0x000006, "Member 'BattleTargetSelect_C_StartSelect::IsCursorEnable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_StartSelect, Lo_PartySystem) == 0x000008, "Member 'BattleTargetSelect_C_StartSelect::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_StartSelect, Lo_tempIndex) == 0x000010, "Member 'BattleTargetSelect_C_StartSelect::Lo_tempIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_StartSelect, LoEraseUnitMax) == 0x000014, "Member 'BattleTargetSelect_C_StartSelect::LoEraseUnitMax' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_StartSelect, LoEraseUnitStart) == 0x000018, "Member 'BattleTargetSelect_C_StartSelect::LoEraseUnitStart' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_StartSelect, LoWaitTask) == 0x000020, "Member 'BattleTargetSelect_C_StartSelect::LoWaitTask' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.GetMainWork
// 0x0020 (0x0020 - 0x0000)
struct BattleTargetSelect_C_GetMainWork final
{
public:
	class ABattleMain_C*                          RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          K2Node_DynamicCast_AsBattle_Main;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_GetMainWork) == 0x000008, "Wrong alignment on BattleTargetSelect_C_GetMainWork");
static_assert(sizeof(BattleTargetSelect_C_GetMainWork) == 0x000020, "Wrong size on BattleTargetSelect_C_GetMainWork");
static_assert(offsetof(BattleTargetSelect_C_GetMainWork, RetValue) == 0x000000, "Member 'BattleTargetSelect_C_GetMainWork::RetValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetMainWork, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BattleTargetSelect_C_GetMainWork::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetMainWork, K2Node_DynamicCast_AsBattle_Main) == 0x000010, "Member 'BattleTargetSelect_C_GetMainWork::K2Node_DynamicCast_AsBattle_Main' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetMainWork, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BattleTargetSelect_C_GetMainWork::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.GetPartySystem
// 0x0008 (0x0008 - 0x0000)
struct BattleTargetSelect_C_GetPartySystem final
{
public:
	class UBattlePartySystem_C*                   RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_GetPartySystem) == 0x000008, "Wrong alignment on BattleTargetSelect_C_GetPartySystem");
static_assert(sizeof(BattleTargetSelect_C_GetPartySystem) == 0x000008, "Wrong size on BattleTargetSelect_C_GetPartySystem");
static_assert(offsetof(BattleTargetSelect_C_GetPartySystem, RetValue) == 0x000000, "Member 'BattleTargetSelect_C_GetPartySystem::RetValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.InvSideAllFunc
// 0x00B8 (0x00B8 - 0x0000)
struct BattleTargetSelect_C_InvSideAllFunc final
{
public:
	int32                                         Lo_Direction;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1101[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_TargetList;                                     // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 LoSelectedTarget;                                  // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 LoWaitTask;                                        // 0x0028(0x0010)(Edit, BlueprintVisible)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1102[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMouseWheelAxis_Axis;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1103[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_1;                // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1104[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideIsTargetList_ReturnValue;          // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CalcPenetrationEfficacy_IsPenetration;    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1105[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_ATTRIBUTE_TYPE>                      CallFunc_CalcDefenceAishouArray_Aishou;            // 0x0088(0x0010)(ReferenceParm)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_2;                // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1106[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetInvSideOneStartIndex_retValue;         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_InvSideAllFunc) == 0x000008, "Wrong alignment on BattleTargetSelect_C_InvSideAllFunc");
static_assert(sizeof(BattleTargetSelect_C_InvSideAllFunc) == 0x0000B8, "Wrong size on BattleTargetSelect_C_InvSideAllFunc");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, Lo_Direction) == 0x000000, "Member 'BattleTargetSelect_C_InvSideAllFunc::Lo_Direction' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, Lo_TargetList) == 0x000008, "Member 'BattleTargetSelect_C_InvSideAllFunc::Lo_TargetList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, LoSelectedTarget) == 0x000018, "Member 'BattleTargetSelect_C_InvSideAllFunc::LoSelectedTarget' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, LoWaitTask) == 0x000028, "Member 'BattleTargetSelect_C_InvSideAllFunc::LoWaitTask' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_GetPartySystem_retValue) == 0x000038, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_GetMouseWheelAxis_Axis) == 0x000044, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_GetMouseWheelAxis_Axis' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_FTrunc_ReturnValue) == 0x000048, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00004E, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_IsActionPadCheck_Success) == 0x00004F, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_IsActionPadCheck_Success_1) == 0x000050, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_GetPartySystem_retValue_1) == 0x000058, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_GetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, Temp_int_Variable) == 0x000060, "Member 'BattleTargetSelect_C_InvSideAllFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_GetSideIsTargetList_ReturnValue) == 0x000068, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_GetSideIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000080, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_CalcPenetrationEfficacy_IsPenetration) == 0x000081, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_CalcPenetrationEfficacy_IsPenetration' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_CalcDefenceAishouArray_Aishou) == 0x000088, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_CalcDefenceAishouArray_Aishou' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_GetPartySystem_retValue_2) == 0x000098, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_GetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, Temp_int_Variable_1) == 0x0000A4, "Member 'BattleTargetSelect_C_InvSideAllFunc::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_BooleanAND_ReturnValue) == 0x0000A9, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, CallFunc_GetInvSideOneStartIndex_retValue) == 0x0000AC, "Member 'BattleTargetSelect_C_InvSideAllFunc::CallFunc_GetInvSideOneStartIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InvSideAllFunc, K2Node_SwitchInteger_CmpSuccess) == 0x0000B0, "Member 'BattleTargetSelect_C_InvSideAllFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.SelfSideOneFunc
// 0x00B8 (0x00B8 - 0x0000)
struct BattleTargetSelect_C_SelfSideOneFunc final
{
public:
	bool                                          Lo_IsUseViewFromCamera;                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1107[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_Direction;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 LoWaitTask;                                        // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1108[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMouseWheelAxis_Axis;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_2;               // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_3;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1109[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSideIsTargetList_ReturnValue;          // 0x0038(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_110A[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_110B[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_ATTRIBUTE_TYPE>                      CallFunc_CalcDefenceAishouArray_Aishou;            // 0x0060(0x0010)(ReferenceParm)
	TArray<E_ATTRIBUTE_TYPE>                      CallFunc_CalcDefenceAishouArray_Aishou_1;          // 0x0070(0x0010)(ReferenceParm)
	TArray<E_ATTRIBUTE_TYPE>                      K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	TArray<E_ATTRIBUTE_TYPE>                      K2Node_MakeArray_Array_1;                          // 0x0090(0x0010)(ReferenceParm)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_1;                // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_2;                // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_110C[0x1];                                     // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_SelfSideOneFunc) == 0x000008, "Wrong alignment on BattleTargetSelect_C_SelfSideOneFunc");
static_assert(sizeof(BattleTargetSelect_C_SelfSideOneFunc) == 0x0000B8, "Wrong size on BattleTargetSelect_C_SelfSideOneFunc");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, Lo_IsUseViewFromCamera) == 0x000000, "Member 'BattleTargetSelect_C_SelfSideOneFunc::Lo_IsUseViewFromCamera' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, Lo_Direction) == 0x000004, "Member 'BattleTargetSelect_C_SelfSideOneFunc::Lo_Direction' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, LoWaitTask) == 0x000008, "Member 'BattleTargetSelect_C_SelfSideOneFunc::LoWaitTask' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_IsActionPadCheck_Success) == 0x000019, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_IsActionPadCheck_Success_1) == 0x00001A, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_GetMouseWheelAxis_Axis) == 0x00001C, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_GetMouseWheelAxis_Axis' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_FTrunc_ReturnValue) == 0x000020, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000026, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_IsActionPadCheck_Success_2) == 0x000027, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_IsActionPadCheck_Success_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_IsActionPadCheck_Success_3) == 0x000028, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_IsActionPadCheck_Success_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_GetPartySystem_retValue) == 0x000030, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_GetSideIsTargetList_ReturnValue) == 0x000038, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_GetSideIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, Temp_int_Variable) == 0x000048, "Member 'BattleTargetSelect_C_SelfSideOneFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000050, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, Temp_int_Variable_1) == 0x000058, "Member 'BattleTargetSelect_C_SelfSideOneFunc::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_CalcDefenceAishouArray_Aishou) == 0x000060, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_CalcDefenceAishouArray_Aishou' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_CalcDefenceAishouArray_Aishou_1) == 0x000070, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_CalcDefenceAishouArray_Aishou_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, K2Node_MakeArray_Array) == 0x000080, "Member 'BattleTargetSelect_C_SelfSideOneFunc::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, K2Node_MakeArray_Array_1) == 0x000090, "Member 'BattleTargetSelect_C_SelfSideOneFunc::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_GetPartySystem_retValue_1) == 0x0000A0, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_GetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_GetPartySystem_retValue_2) == 0x0000A8, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_GetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_Not_PreBool_ReturnValue) == 0x0000B0, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_BooleanAND_ReturnValue) == 0x0000B1, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, K2Node_SwitchInteger_CmpSuccess) == 0x0000B2, "Member 'BattleTargetSelect_C_SelfSideOneFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideOneFunc, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B4, "Member 'BattleTargetSelect_C_SelfSideOneFunc::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.SelfSideAllFunc
// 0x00A8 (0x00A8 - 0x0000)
struct BattleTargetSelect_C_SelfSideAllFunc final
{
public:
	int32                                         Lo_Direction;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsUseViewFromCamera;                            // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_110D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 LoSelectedTarget;                                  // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 LoWaitTask;                                        // 0x0018(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_110E[0x1];                                     // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMouseWheelAxis_Axis;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_2;               // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_3;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_110F[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1110[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideIsTargetList_ReturnValue;          // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1111[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_ATTRIBUTE_TYPE>                      CallFunc_CalcDefenceAishouArray_Aishou;            // 0x0068(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1112[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_1;                // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1113[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_2;                // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1114[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_SelfSideAllFunc) == 0x000008, "Wrong alignment on BattleTargetSelect_C_SelfSideAllFunc");
static_assert(sizeof(BattleTargetSelect_C_SelfSideAllFunc) == 0x0000A8, "Wrong size on BattleTargetSelect_C_SelfSideAllFunc");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, Lo_Direction) == 0x000000, "Member 'BattleTargetSelect_C_SelfSideAllFunc::Lo_Direction' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, Lo_IsUseViewFromCamera) == 0x000004, "Member 'BattleTargetSelect_C_SelfSideAllFunc::Lo_IsUseViewFromCamera' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, LoSelectedTarget) == 0x000008, "Member 'BattleTargetSelect_C_SelfSideAllFunc::LoSelectedTarget' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, LoWaitTask) == 0x000018, "Member 'BattleTargetSelect_C_SelfSideAllFunc::LoWaitTask' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_IsActionPadCheck_Success) == 0x000028, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_IsActionPadCheck_Success_1) == 0x000029, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002A, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_GetMouseWheelAxis_Axis) == 0x00002C, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_GetMouseWheelAxis_Axis' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_FTrunc_ReturnValue) == 0x000030, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000036, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_IsActionPadCheck_Success_2) == 0x000037, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_IsActionPadCheck_Success_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_IsActionPadCheck_Success_3) == 0x000038, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_IsActionPadCheck_Success_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_GetPartySystem_retValue) == 0x000040, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_GetSideIsTargetList_ReturnValue) == 0x000050, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_GetSideIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_CalcDefenceAishouArray_Aishou) == 0x000068, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_CalcDefenceAishouArray_Aishou' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000078, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_GetPartySystem_retValue_1) == 0x000080, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_GetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_Not_PreBool_ReturnValue) == 0x000088, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_BooleanAND_ReturnValue) == 0x000089, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_GetPartySystem_retValue_2) == 0x000090, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_GetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, K2Node_SwitchInteger_CmpSuccess) == 0x000098, "Member 'BattleTargetSelect_C_SelfSideAllFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, Temp_int_Variable) == 0x00009C, "Member 'BattleTargetSelect_C_SelfSideAllFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, Temp_int_Variable_1) == 0x0000A0, "Member 'BattleTargetSelect_C_SelfSideAllFunc::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfSideAllFunc, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BattleTargetSelect_C_SelfSideAllFunc::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.SelfFunc
// 0x0048 (0x0048 - 0x0000)
struct BattleTargetSelect_C_SelfFunc final
{
public:
	TArray<int32>                                 LoWaitTask;                                        // 0x0000(0x0010)(Edit, BlueprintVisible)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<E_ATTRIBUTE_TYPE>                      K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	TArray<E_ATTRIBUTE_TYPE>                      CallFunc_CalcDefenceAishouArray_Aishou;            // 0x0028(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_SelfFunc) == 0x000008, "Wrong alignment on BattleTargetSelect_C_SelfFunc");
static_assert(sizeof(BattleTargetSelect_C_SelfFunc) == 0x000048, "Wrong size on BattleTargetSelect_C_SelfFunc");
static_assert(offsetof(BattleTargetSelect_C_SelfFunc, LoWaitTask) == 0x000000, "Member 'BattleTargetSelect_C_SelfFunc::LoWaitTask' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfFunc, CallFunc_GetPartySystem_retValue) == 0x000010, "Member 'BattleTargetSelect_C_SelfFunc::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfFunc, K2Node_MakeArray_Array) == 0x000018, "Member 'BattleTargetSelect_C_SelfFunc::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfFunc, CallFunc_CalcDefenceAishouArray_Aishou) == 0x000028, "Member 'BattleTargetSelect_C_SelfFunc::CallFunc_CalcDefenceAishouArray_Aishou' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfFunc, Temp_int_Variable) == 0x000038, "Member 'BattleTargetSelect_C_SelfFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfFunc, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BattleTargetSelect_C_SelfFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SelfFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BattleTargetSelect_C_SelfFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.AllSideAllFunc
// 0x0070 (0x0070 - 0x0000)
struct BattleTargetSelect_C_AllSideAllFunc final
{
public:
	TArray<int32>                                 LoSelectedTargets;                                 // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 LoWaitTask;                                        // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTargetableActor_ret;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1115[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0030(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1116[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1117[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1118[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_const_GetPartyLoopMax_retValue;           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1119[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_const_GetPartyStart_retValue;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_AllSideAllFunc) == 0x000008, "Wrong alignment on BattleTargetSelect_C_AllSideAllFunc");
static_assert(sizeof(BattleTargetSelect_C_AllSideAllFunc) == 0x000070, "Wrong size on BattleTargetSelect_C_AllSideAllFunc");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, LoSelectedTargets) == 0x000000, "Member 'BattleTargetSelect_C_AllSideAllFunc::LoSelectedTargets' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, LoWaitTask) == 0x000010, "Member 'BattleTargetSelect_C_AllSideAllFunc::LoWaitTask' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BattleTargetSelect_C_AllSideAllFunc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, Temp_int_Variable) == 0x000024, "Member 'BattleTargetSelect_C_AllSideAllFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, CallFunc_IsTargetableActor_ret) == 0x000028, "Member 'BattleTargetSelect_C_AllSideAllFunc::CallFunc_IsTargetableActor_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BattleTargetSelect_C_AllSideAllFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, Temp_byte_Variable) == 0x000030, "Member 'BattleTargetSelect_C_AllSideAllFunc::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, CallFunc_IsActionPadCheck_Success) == 0x000031, "Member 'BattleTargetSelect_C_AllSideAllFunc::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BattleTargetSelect_C_AllSideAllFunc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BattleTargetSelect_C_AllSideAllFunc::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BattleTargetSelect_C_AllSideAllFunc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BattleTargetSelect_C_AllSideAllFunc::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BattleTargetSelect_C_AllSideAllFunc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, Temp_int_Variable_1) == 0x000048, "Member 'BattleTargetSelect_C_AllSideAllFunc::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BattleTargetSelect_C_AllSideAllFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, CallFunc_GetPartySystem_retValue) == 0x000050, "Member 'BattleTargetSelect_C_AllSideAllFunc::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, CallFunc_IsActionPadCheck_Success_1) == 0x000058, "Member 'BattleTargetSelect_C_AllSideAllFunc::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, CallFunc_const_GetPartyLoopMax_retValue) == 0x00005C, "Member 'BattleTargetSelect_C_AllSideAllFunc::CallFunc_const_GetPartyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000060, "Member 'BattleTargetSelect_C_AllSideAllFunc::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, CallFunc_const_GetPartyStart_retValue) == 0x000064, "Member 'BattleTargetSelect_C_AllSideAllFunc::CallFunc_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, CallFunc_Add_IntInt_ReturnValue_2) == 0x000068, "Member 'BattleTargetSelect_C_AllSideAllFunc::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AllSideAllFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00006C, "Member 'BattleTargetSelect_C_AllSideAllFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.TaskWaitFunc
// 0x0020 (0x0020 - 0x0000)
struct BattleTargetSelect_C_TaskWaitFunc final
{
public:
	class UBattleActionTaskFactory_C*             CallFunc_GetTaskFactory_retValue;                  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetParentNameTaskCnt_retCnt;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_TaskWaitFunc) == 0x000008, "Wrong alignment on BattleTargetSelect_C_TaskWaitFunc");
static_assert(sizeof(BattleTargetSelect_C_TaskWaitFunc) == 0x000020, "Wrong size on BattleTargetSelect_C_TaskWaitFunc");
static_assert(offsetof(BattleTargetSelect_C_TaskWaitFunc, CallFunc_GetTaskFactory_retValue) == 0x000000, "Member 'BattleTargetSelect_C_TaskWaitFunc::CallFunc_GetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_TaskWaitFunc, CallFunc_GetObjectName_ReturnValue) == 0x000008, "Member 'BattleTargetSelect_C_TaskWaitFunc::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_TaskWaitFunc, CallFunc_GetParentNameTaskCnt_retCnt) == 0x000018, "Member 'BattleTargetSelect_C_TaskWaitFunc::CallFunc_GetParentNameTaskCnt_retCnt' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_TaskWaitFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BattleTargetSelect_C_TaskWaitFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.Input
// 0x00D0 (0x00D0 - 0x0000)
struct BattleTargetSelect_C_Input final
{
public:
	EBTL_PAD_MAP                                  Lo_B;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTL_PAD_MAP                                  Lo_A;                                              // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTL_PAD_MAP                                  Lo_UP;                                             // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTL_PAD_MAP                                  Lo_Down;                                           // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTL_PAD_MAP                                  Lo_Right;                                          // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTL_PAD_MAP                                  Lo_Left;                                           // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111A[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BIT_ADD_ReturnValue;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111B[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111C[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue_1;     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111D[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BIT_ADD_ReturnValue_1;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue_2;     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111E[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue_3;     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111F[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BIT_ADD_ReturnValue_2;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue_4;     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1120[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue_5;     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1121[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BIT_ADD_ReturnValue_3;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue_6;     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1122[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_7;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue_7;     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1123[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BIT_ADD_ReturnValue_4;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_8;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue_8;     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1124[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_9;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue_9;     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1125[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BIT_ADD_ReturnValue_5;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_10;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue_10;    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1126[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_11;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue_11;    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_Input) == 0x000008, "Wrong alignment on BattleTargetSelect_C_Input");
static_assert(sizeof(BattleTargetSelect_C_Input) == 0x0000D0, "Wrong size on BattleTargetSelect_C_Input");
static_assert(offsetof(BattleTargetSelect_C_Input, Lo_B) == 0x000000, "Member 'BattleTargetSelect_C_Input::Lo_B' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, Lo_A) == 0x000001, "Member 'BattleTargetSelect_C_Input::Lo_A' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, Lo_UP) == 0x000002, "Member 'BattleTargetSelect_C_Input::Lo_UP' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, Lo_Down) == 0x000003, "Member 'BattleTargetSelect_C_Input::Lo_Down' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, Lo_Right) == 0x000004, "Member 'BattleTargetSelect_C_Input::Lo_Right' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, Lo_Left) == 0x000005, "Member 'BattleTargetSelect_C_Input::Lo_Left' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_BIT_ADD_ReturnValue) == 0x000008, "Member 'BattleTargetSelect_C_Input::CallFunc_BIT_ADD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BattleTargetSelect_C_Input::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_WasInputKeyJustPressed_ReturnValue) == 0x000018, "Member 'BattleTargetSelect_C_Input::CallFunc_WasInputKeyJustPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_GetPlayerController_ReturnValue_1) == 0x000020, "Member 'BattleTargetSelect_C_Input::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_WasInputKeyJustPressed_ReturnValue_1) == 0x000028, "Member 'BattleTargetSelect_C_Input::CallFunc_WasInputKeyJustPressed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'BattleTargetSelect_C_Input::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_BIT_ADD_ReturnValue_1) == 0x00002C, "Member 'BattleTargetSelect_C_Input::CallFunc_BIT_ADD_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_GetPlayerController_ReturnValue_2) == 0x000030, "Member 'BattleTargetSelect_C_Input::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_WasInputKeyJustPressed_ReturnValue_2) == 0x000038, "Member 'BattleTargetSelect_C_Input::CallFunc_WasInputKeyJustPressed_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_GetPlayerController_ReturnValue_3) == 0x000040, "Member 'BattleTargetSelect_C_Input::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_WasInputKeyJustPressed_ReturnValue_3) == 0x000048, "Member 'BattleTargetSelect_C_Input::CallFunc_WasInputKeyJustPressed_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_BooleanOR_ReturnValue_1) == 0x000049, "Member 'BattleTargetSelect_C_Input::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_BIT_ADD_ReturnValue_2) == 0x00004C, "Member 'BattleTargetSelect_C_Input::CallFunc_BIT_ADD_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_GetPlayerController_ReturnValue_4) == 0x000050, "Member 'BattleTargetSelect_C_Input::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_WasInputKeyJustPressed_ReturnValue_4) == 0x000058, "Member 'BattleTargetSelect_C_Input::CallFunc_WasInputKeyJustPressed_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_GetPlayerController_ReturnValue_5) == 0x000060, "Member 'BattleTargetSelect_C_Input::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_WasInputKeyJustPressed_ReturnValue_5) == 0x000068, "Member 'BattleTargetSelect_C_Input::CallFunc_WasInputKeyJustPressed_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_BooleanOR_ReturnValue_2) == 0x000069, "Member 'BattleTargetSelect_C_Input::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_BIT_ADD_ReturnValue_3) == 0x00006C, "Member 'BattleTargetSelect_C_Input::CallFunc_BIT_ADD_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_GetPlayerController_ReturnValue_6) == 0x000070, "Member 'BattleTargetSelect_C_Input::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_WasInputKeyJustPressed_ReturnValue_6) == 0x000078, "Member 'BattleTargetSelect_C_Input::CallFunc_WasInputKeyJustPressed_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_GetPlayerController_ReturnValue_7) == 0x000080, "Member 'BattleTargetSelect_C_Input::CallFunc_GetPlayerController_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_WasInputKeyJustPressed_ReturnValue_7) == 0x000088, "Member 'BattleTargetSelect_C_Input::CallFunc_WasInputKeyJustPressed_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_BooleanOR_ReturnValue_3) == 0x000089, "Member 'BattleTargetSelect_C_Input::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_BIT_ADD_ReturnValue_4) == 0x00008C, "Member 'BattleTargetSelect_C_Input::CallFunc_BIT_ADD_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_GetPlayerController_ReturnValue_8) == 0x000090, "Member 'BattleTargetSelect_C_Input::CallFunc_GetPlayerController_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_WasInputKeyJustPressed_ReturnValue_8) == 0x000098, "Member 'BattleTargetSelect_C_Input::CallFunc_WasInputKeyJustPressed_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_GetPlayerController_ReturnValue_9) == 0x0000A0, "Member 'BattleTargetSelect_C_Input::CallFunc_GetPlayerController_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_WasInputKeyJustPressed_ReturnValue_9) == 0x0000A8, "Member 'BattleTargetSelect_C_Input::CallFunc_WasInputKeyJustPressed_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_BooleanOR_ReturnValue_4) == 0x0000A9, "Member 'BattleTargetSelect_C_Input::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_BIT_ADD_ReturnValue_5) == 0x0000AC, "Member 'BattleTargetSelect_C_Input::CallFunc_BIT_ADD_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_GetPlayerController_ReturnValue_10) == 0x0000B0, "Member 'BattleTargetSelect_C_Input::CallFunc_GetPlayerController_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_WasInputKeyJustPressed_ReturnValue_10) == 0x0000B8, "Member 'BattleTargetSelect_C_Input::CallFunc_WasInputKeyJustPressed_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_GetPlayerController_ReturnValue_11) == 0x0000C0, "Member 'BattleTargetSelect_C_Input::CallFunc_GetPlayerController_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_WasInputKeyJustPressed_ReturnValue_11) == 0x0000C8, "Member 'BattleTargetSelect_C_Input::CallFunc_WasInputKeyJustPressed_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_Input, CallFunc_BooleanOR_ReturnValue_5) == 0x0000C9, "Member 'BattleTargetSelect_C_Input::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.CallEvtFunc
// 0x000A (0x000A - 0x0000)
struct BattleTargetSelect_C_CallEvtFunc final
{
public:
	EBTL_PAD_MAP                                  Lo_B;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTL_PAD_MAP                                  Lo_A;                                              // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTL_PAD_MAP                                  Lo_UP;                                             // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTL_PAD_MAP                                  Lo_Down;                                           // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTL_PAD_MAP                                  Lo_Right;                                          // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBTL_PAD_MAP                                  Lo_Left;                                           // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                CallFunc_GetCurrentTargetType_TargetType;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_CallEvtFunc) == 0x000001, "Wrong alignment on BattleTargetSelect_C_CallEvtFunc");
static_assert(sizeof(BattleTargetSelect_C_CallEvtFunc) == 0x00000A, "Wrong size on BattleTargetSelect_C_CallEvtFunc");
static_assert(offsetof(BattleTargetSelect_C_CallEvtFunc, Lo_B) == 0x000000, "Member 'BattleTargetSelect_C_CallEvtFunc::Lo_B' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CallEvtFunc, Lo_A) == 0x000001, "Member 'BattleTargetSelect_C_CallEvtFunc::Lo_A' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CallEvtFunc, Lo_UP) == 0x000002, "Member 'BattleTargetSelect_C_CallEvtFunc::Lo_UP' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CallEvtFunc, Lo_Down) == 0x000003, "Member 'BattleTargetSelect_C_CallEvtFunc::Lo_Down' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CallEvtFunc, Lo_Right) == 0x000004, "Member 'BattleTargetSelect_C_CallEvtFunc::Lo_Right' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CallEvtFunc, Lo_Left) == 0x000005, "Member 'BattleTargetSelect_C_CallEvtFunc::Lo_Left' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CallEvtFunc, CallFunc_GetCurrentTargetType_TargetType) == 0x000006, "Member 'BattleTargetSelect_C_CallEvtFunc::CallFunc_GetCurrentTargetType_TargetType' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CallEvtFunc, K2Node_SwitchEnum_CmpSuccess) == 0x000007, "Member 'BattleTargetSelect_C_CallEvtFunc::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CallEvtFunc, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000008, "Member 'BattleTargetSelect_C_CallEvtFunc::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CallEvtFunc, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'BattleTargetSelect_C_CallEvtFunc::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.GetTaskFactory
// 0x0018 (0x0018 - 0x0000)
struct BattleTargetSelect_C_GetTaskFactory final
{
public:
	class UBattleActionTaskFactory_C*             RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattleActionTaskFactory_C*             CallFunc_GetTaskFactory_retValue;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_GetTaskFactory) == 0x000008, "Wrong alignment on BattleTargetSelect_C_GetTaskFactory");
static_assert(sizeof(BattleTargetSelect_C_GetTaskFactory) == 0x000018, "Wrong size on BattleTargetSelect_C_GetTaskFactory");
static_assert(offsetof(BattleTargetSelect_C_GetTaskFactory, RetValue) == 0x000000, "Member 'BattleTargetSelect_C_GetTaskFactory::RetValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetTaskFactory, CallFunc_GetMainWork_retValue) == 0x000008, "Member 'BattleTargetSelect_C_GetTaskFactory::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetTaskFactory, CallFunc_GetTaskFactory_retValue) == 0x000010, "Member 'BattleTargetSelect_C_GetTaskFactory::CallFunc_GetTaskFactory_retValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.SetIndexUnit
// 0x0270 (0x0270 - 0x0000)
struct BattleTargetSelect_C_SetIndexUnit final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUseCamRail;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLock;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsNoSetCharSelect;                                 // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1127[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_TargetIndex;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_LoopLast;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_LoopFirst;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_RailOffsetDist;                                 // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Lo_SocketName;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                Lo_LookatOffset;                                   // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1128[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0038(0x0010)(Edit, BlueprintVisible)
	E_SKILL_TARGET                                Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1129[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_8;                            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_9;                            // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_10;                           // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyStart_retValue;             // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112A[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcDistanceToTarget_Distance;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAdjustFovy_isUse;                       // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112B[0x3];                                     // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcFovyToTarget_Fovy;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112C[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBattleActionTaskFactory_C*             CallFunc_GetTaskFactory_retValue;                  // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCamRailTask_retPecID;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCamRailTask_retPecID_1;                // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattleTargetSelect_C*                  CallFunc_GetTargetSelect_BattleTargetSelect;       // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                CallFunc_GetCurrentTargetType_TargetType;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112D[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattleActionTaskFactory_C*             CallFunc_GetTaskFactory_retValue_1;                // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCamSetTargetUnit_retPecID;             // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112E[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRigRailData                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x01A0(0x0090)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112F[0x3];                                     // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_SetIndexUnit) == 0x000010, "Wrong alignment on BattleTargetSelect_C_SetIndexUnit");
static_assert(sizeof(BattleTargetSelect_C_SetIndexUnit) == 0x000270, "Wrong size on BattleTargetSelect_C_SetIndexUnit");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Param_Index) == 0x000000, "Member 'BattleTargetSelect_C_SetIndexUnit::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, IsUseCamRail) == 0x000004, "Member 'BattleTargetSelect_C_SetIndexUnit::IsUseCamRail' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, IsLock) == 0x000005, "Member 'BattleTargetSelect_C_SetIndexUnit::IsLock' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, IsNoSetCharSelect) == 0x000006, "Member 'BattleTargetSelect_C_SetIndexUnit::IsNoSetCharSelect' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Lo_TargetIndex) == 0x000008, "Member 'BattleTargetSelect_C_SetIndexUnit::Lo_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Lo_LoopLast) == 0x00000C, "Member 'BattleTargetSelect_C_SetIndexUnit::Lo_LoopLast' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Lo_LoopFirst) == 0x000010, "Member 'BattleTargetSelect_C_SetIndexUnit::Lo_LoopFirst' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Lo_RailOffsetDist) == 0x000014, "Member 'BattleTargetSelect_C_SetIndexUnit::Lo_RailOffsetDist' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Lo_SocketName) == 0x000018, "Member 'BattleTargetSelect_C_SetIndexUnit::Lo_SocketName' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Lo_LookatOffset) == 0x000028, "Member 'BattleTargetSelect_C_SetIndexUnit::Lo_LookatOffset' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Lo_WaitTaskList) == 0x000038, "Member 'BattleTargetSelect_C_SetIndexUnit::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Temp_byte_Variable) == 0x000048, "Member 'BattleTargetSelect_C_SetIndexUnit::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Temp_string_Variable) == 0x000050, "Member 'BattleTargetSelect_C_SetIndexUnit::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Temp_string_Variable_1) == 0x000060, "Member 'BattleTargetSelect_C_SetIndexUnit::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Temp_string_Variable_2) == 0x000070, "Member 'BattleTargetSelect_C_SetIndexUnit::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Temp_string_Variable_3) == 0x000080, "Member 'BattleTargetSelect_C_SetIndexUnit::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Temp_string_Variable_4) == 0x000090, "Member 'BattleTargetSelect_C_SetIndexUnit::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Temp_string_Variable_5) == 0x0000A0, "Member 'BattleTargetSelect_C_SetIndexUnit::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Temp_string_Variable_6) == 0x0000B0, "Member 'BattleTargetSelect_C_SetIndexUnit::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Temp_string_Variable_7) == 0x0000C0, "Member 'BattleTargetSelect_C_SetIndexUnit::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Temp_string_Variable_8) == 0x0000D0, "Member 'BattleTargetSelect_C_SetIndexUnit::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Temp_string_Variable_9) == 0x0000E0, "Member 'BattleTargetSelect_C_SetIndexUnit::Temp_string_Variable_9' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, Temp_string_Variable_10) == 0x0000F0, "Member 'BattleTargetSelect_C_SetIndexUnit::Temp_string_Variable_10' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_GetPartySystem_retValue) == 0x000100, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_const_GetEnemyStart_retValue) == 0x000108, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_const_GetEnemyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_CalcDistanceToTarget_Distance) == 0x000110, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_CalcDistanceToTarget_Distance' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_IsAdjustFovy_isUse) == 0x000114, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_IsAdjustFovy_isUse' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_CalcFovyToTarget_Fovy) == 0x000118, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_CalcFovyToTarget_Fovy' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_GetObjectName_ReturnValue) == 0x000120, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_GetTaskFactory_retValue) == 0x000130, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_GetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_AddCamRailTask_retPecID) == 0x000138, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_AddCamRailTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_AddCamRailTask_retPecID_1) == 0x00013C, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_AddCamRailTask_retPecID_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_GetMainWork_retValue) == 0x000140, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_GetTargetSelect_BattleTargetSelect) == 0x000148, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_GetTargetSelect_BattleTargetSelect' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_GetObjectName_ReturnValue_1) == 0x000150, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_GetCurrentTargetType_TargetType) == 0x000160, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_GetCurrentTargetType_TargetType' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_GetTaskFactory_retValue_1) == 0x000168, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_GetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, K2Node_Select_Default) == 0x000170, "Member 'BattleTargetSelect_C_SetIndexUnit::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_AddCamSetTargetUnit_retPecID) == 0x000180, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_AddCamSetTargetUnit_retPecID' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_Concat_StrStr_ReturnValue) == 0x000188, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_Conv_StringToName_ReturnValue) == 0x000198, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001A0, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000230, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_BreakTransform_Location) == 0x000234, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_BreakTransform_Rotation) == 0x000240, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_BreakTransform_Scale) == 0x00024C, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_Conv_NameToString_ReturnValue) == 0x000258, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetIndexUnit, CallFunc_VSize_ReturnValue) == 0x000268, "Member 'BattleTargetSelect_C_SetIndexUnit::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.GetResult
// 0x0010 (0x0010 - 0x0000)
struct BattleTargetSelect_C_GetResult final
{
public:
	TArray<uint8>                                 RetValue;                                          // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BattleTargetSelect_C_GetResult) == 0x000008, "Wrong alignment on BattleTargetSelect_C_GetResult");
static_assert(sizeof(BattleTargetSelect_C_GetResult) == 0x000010, "Wrong size on BattleTargetSelect_C_GetResult");
static_assert(offsetof(BattleTargetSelect_C_GetResult, RetValue) == 0x000000, "Member 'BattleTargetSelect_C_GetResult::RetValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.AddUnitIndex
// 0x0080 (0x0080 - 0x0000)
struct BattleTargetSelect_C_AddUnitIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUseCamRail;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLock;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsRecursion;                                       // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsNotSetCharSelect;                                // 0x0007(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsNotSetCharSelect;                             // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1130[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_ValidTargetNum;                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_CurrentTargetIndex;                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsLock;                                         // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsUseCamRail;                                   // 0x0015(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1131[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LoUnitMax;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoUnitStart;                                       // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1132[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1133[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountValidTargets_ValidNum;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPlayerLoopMax_retValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyLoopMax_retValue;           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartyStart_retValue;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyStart_retValue;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTargetTypePlayer_IsPlayer;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1134[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1135[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_1;                // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFlag2_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInField_InField;                        // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_AddUnitIndex) == 0x000008, "Wrong alignment on BattleTargetSelect_C_AddUnitIndex");
static_assert(sizeof(BattleTargetSelect_C_AddUnitIndex) == 0x000080, "Wrong size on BattleTargetSelect_C_AddUnitIndex");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, Param_Index) == 0x000000, "Member 'BattleTargetSelect_C_AddUnitIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, IsUseCamRail) == 0x000004, "Member 'BattleTargetSelect_C_AddUnitIndex::IsUseCamRail' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, IsLock) == 0x000005, "Member 'BattleTargetSelect_C_AddUnitIndex::IsLock' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, IsRecursion) == 0x000006, "Member 'BattleTargetSelect_C_AddUnitIndex::IsRecursion' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, IsNotSetCharSelect) == 0x000007, "Member 'BattleTargetSelect_C_AddUnitIndex::IsNotSetCharSelect' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, Lo_IsNotSetCharSelect) == 0x000008, "Member 'BattleTargetSelect_C_AddUnitIndex::Lo_IsNotSetCharSelect' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, Lo_ValidTargetNum) == 0x00000C, "Member 'BattleTargetSelect_C_AddUnitIndex::Lo_ValidTargetNum' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, Lo_CurrentTargetIndex) == 0x000010, "Member 'BattleTargetSelect_C_AddUnitIndex::Lo_CurrentTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, Lo_IsLock) == 0x000014, "Member 'BattleTargetSelect_C_AddUnitIndex::Lo_IsLock' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, Lo_IsUseCamRail) == 0x000015, "Member 'BattleTargetSelect_C_AddUnitIndex::Lo_IsUseCamRail' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, LoUnitMax) == 0x000018, "Member 'BattleTargetSelect_C_AddUnitIndex::LoUnitMax' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, LoUnitStart) == 0x00001C, "Member 'BattleTargetSelect_C_AddUnitIndex::LoUnitStart' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, Lo_WaitTaskList) == 0x000020, "Member 'BattleTargetSelect_C_AddUnitIndex::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, Temp_bool_Variable) == 0x000030, "Member 'BattleTargetSelect_C_AddUnitIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_Abs_Int_ReturnValue) == 0x000034, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, Temp_bool_Variable_1) == 0x000038, "Member 'BattleTargetSelect_C_AddUnitIndex::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000039, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_CountValidTargets_ValidNum) == 0x000040, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_CountValidTargets_ValidNum' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000045, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000046, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000047, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_GetPartySystem_retValue) == 0x000048, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_const_GetPlayerLoopMax_retValue) == 0x000050, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_const_GetPlayerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_const_GetEnemyLoopMax_retValue) == 0x000054, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_const_GetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_const_GetPartyStart_retValue) == 0x000058, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_const_GetEnemyStart_retValue) == 0x00005C, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_const_GetEnemyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_IsTargetTypePlayer_IsPlayer) == 0x000060, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_IsTargetTypePlayer_IsPlayer' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, K2Node_Select_Default) == 0x000064, "Member 'BattleTargetSelect_C_AddUnitIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, K2Node_Select_Default_1) == 0x000068, "Member 'BattleTargetSelect_C_AddUnitIndex::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_GetPartySystem_retValue_1) == 0x000070, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_GetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_CheckFlag2_ReturnValue) == 0x000078, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_CheckFlag2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex, CallFunc_IsInField_InField) == 0x000079, "Member 'BattleTargetSelect_C_AddUnitIndex::CallFunc_IsInField_InField' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.IsFinished
// 0x0001 (0x0001 - 0x0000)
struct BattleTargetSelect_C_IsFinished final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_IsFinished) == 0x000001, "Wrong alignment on BattleTargetSelect_C_IsFinished");
static_assert(sizeof(BattleTargetSelect_C_IsFinished) == 0x000001, "Wrong size on BattleTargetSelect_C_IsFinished");
static_assert(offsetof(BattleTargetSelect_C_IsFinished, RetValue) == 0x000000, "Member 'BattleTargetSelect_C_IsFinished::RetValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.ClearTargetChar
// 0x0088 (0x0088 - 0x0000)
struct BattleTargetSelect_C_ClearTargetChar final
{
public:
	TArray<int32>                                 Param_Lo_List;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_lopMax;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_LopStart;                                       // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   Lo_PartySystem;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1136[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetAllIsInFieldList_ReturnValue;          // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_GetSideFromIndex_ReturnValue;             // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1137[0x1];                                     // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleTempParticleActor_C*             CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1138[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_ClearTargetChar) == 0x000008, "Wrong alignment on BattleTargetSelect_C_ClearTargetChar");
static_assert(sizeof(BattleTargetSelect_C_ClearTargetChar) == 0x000088, "Wrong size on BattleTargetSelect_C_ClearTargetChar");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, Param_Lo_List) == 0x000000, "Member 'BattleTargetSelect_C_ClearTargetChar::Param_Lo_List' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, Lo_Unit) == 0x000010, "Member 'BattleTargetSelect_C_ClearTargetChar::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, Lo_lopMax) == 0x000018, "Member 'BattleTargetSelect_C_ClearTargetChar::Lo_lopMax' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, Lo_LopStart) == 0x00001C, "Member 'BattleTargetSelect_C_ClearTargetChar::Lo_LopStart' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, Lo_PartySystem) == 0x000020, "Member 'BattleTargetSelect_C_ClearTargetChar::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BattleTargetSelect_C_ClearTargetChar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BattleTargetSelect_C_ClearTargetChar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BattleTargetSelect_C_ClearTargetChar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BattleTargetSelect_C_ClearTargetChar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'BattleTargetSelect_C_ClearTargetChar::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'BattleTargetSelect_C_ClearTargetChar::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BattleTargetSelect_C_ClearTargetChar::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, CallFunc_Array_Get_Item) == 0x000044, "Member 'BattleTargetSelect_C_ClearTargetChar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, CallFunc_GetAllIsInFieldList_ReturnValue) == 0x000048, "Member 'BattleTargetSelect_C_ClearTargetChar::CallFunc_GetAllIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BattleTargetSelect_C_ClearTargetChar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BattleTargetSelect_C_ClearTargetChar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, CallFunc_GetSideFromIndex_ReturnValue) == 0x00005D, "Member 'BattleTargetSelect_C_ClearTargetChar::CallFunc_GetSideFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005E, "Member 'BattleTargetSelect_C_ClearTargetChar::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, CallFunc_GetPartyUnit_retValue) == 0x000060, "Member 'BattleTargetSelect_C_ClearTargetChar::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, CallFunc_GetPartySystem_retValue) == 0x000068, "Member 'BattleTargetSelect_C_ClearTargetChar::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BattleTargetSelect_C_ClearTargetChar::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'BattleTargetSelect_C_ClearTargetChar::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'BattleTargetSelect_C_ClearTargetChar::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ClearTargetChar, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'BattleTargetSelect_C_ClearTargetChar::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.SetCharSelect
// 0x0720 (0x0720 - 0x0000)
struct BattleTargetSelect_C_SetCharSelect final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAllSelect;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1139[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   Lo_PartySystem;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	class UParticleSystem*                        Lo_TargetEffect;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTMemDataInterface> CallFunc_GetPTMemInterface_retValue;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113A[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_BI_GetPartyData_ReturnValue;              // 0x0040(0x0320)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113B[0xF];                                     // 0x0361(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_BI_GetPartyData_ReturnValue_1;            // 0x0370(0x0320)()
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SettleCriticalSkill_ReturnValue;          // 0x0694(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113C[0x3];                                     // 0x0695(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_retValue;              // 0x06A0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue_1;                  // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleTempParticleActor_C*             CallFunc_FinishSpawningActor_ReturnValue;          // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x06E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x06F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113D[0x3];                                     // 0x06F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattleEffectManager_C*                 CallFunc_GetEffectManager_retValue;                // 0x06F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        CallFunc_GetResidentAssetByName_retValue;          // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        CallFunc_GetResidentAssetByName_retValue_1;        // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_SetCharSelect) == 0x000010, "Wrong alignment on BattleTargetSelect_C_SetCharSelect");
static_assert(sizeof(BattleTargetSelect_C_SetCharSelect) == 0x000720, "Wrong size on BattleTargetSelect_C_SetCharSelect");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, Param_Index) == 0x000000, "Member 'BattleTargetSelect_C_SetCharSelect::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, IsAllSelect) == 0x000004, "Member 'BattleTargetSelect_C_SetCharSelect::IsAllSelect' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, Lo_PartySystem) == 0x000008, "Member 'BattleTargetSelect_C_SetCharSelect::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, Lo_WaitTaskList) == 0x000010, "Member 'BattleTargetSelect_C_SetCharSelect::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, Lo_TargetEffect) == 0x000020, "Member 'BattleTargetSelect_C_SetCharSelect::Lo_TargetEffect' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_GetPTMemInterface_retValue) == 0x000028, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_GetPTMemInterface_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_BI_GetPartyData_ReturnValue) == 0x000040, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_BI_GetPartyData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000360, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_BI_GetPartyData_ReturnValue_1) == 0x000370, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_BI_GetPartyData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_SelectInt_ReturnValue) == 0x000690, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_SettleCriticalSkill_ReturnValue) == 0x000694, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_SettleCriticalSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_GetPartyUnit_retValue) == 0x000698, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_GetSocketTransform_retValue) == 0x0006A0, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_GetSocketTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0006D0, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_GetPartyUnit_retValue_1) == 0x0006D8, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_GetPartyUnit_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_FinishSpawningActor_ReturnValue) == 0x0006E0, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_GetPartySystem_retValue) == 0x0006E8, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_Array_Add_ReturnValue) == 0x0006F0, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0006F4, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_GetEffectManager_retValue) == 0x0006F8, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_GetEffectManager_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_GetResidentAssetByName_retValue) == 0x000700, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_GetResidentAssetByName_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_GetResidentAssetByName_retValue_1) == 0x000708, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_GetResidentAssetByName_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelect, CallFunc_Not_PreBool_ReturnValue) == 0x000710, "Member 'BattleTargetSelect_C_SetCharSelect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.GetEffectManager
// 0x0018 (0x0018 - 0x0000)
struct BattleTargetSelect_C_GetEffectManager final
{
public:
	class UBattleEffectManager_C*                 RetValue;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattleEffectManager_C*                 CallFunc_GetEffectManager_retValue;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_GetEffectManager) == 0x000008, "Wrong alignment on BattleTargetSelect_C_GetEffectManager");
static_assert(sizeof(BattleTargetSelect_C_GetEffectManager) == 0x000018, "Wrong size on BattleTargetSelect_C_GetEffectManager");
static_assert(offsetof(BattleTargetSelect_C_GetEffectManager, RetValue) == 0x000000, "Member 'BattleTargetSelect_C_GetEffectManager::RetValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetEffectManager, CallFunc_GetMainWork_retValue) == 0x000008, "Member 'BattleTargetSelect_C_GetEffectManager::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetEffectManager, CallFunc_GetEffectManager_retValue) == 0x000010, "Member 'BattleTargetSelect_C_GetEffectManager::CallFunc_GetEffectManager_retValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.IsTargetTypePlayer
// 0x000A (0x000A - 0x0000)
struct BattleTargetSelect_C_IsTargetTypePlayer final
{
public:
	bool                                          IsPlayer;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_IsTargetTypePlayer) == 0x000001, "Wrong alignment on BattleTargetSelect_C_IsTargetTypePlayer");
static_assert(sizeof(BattleTargetSelect_C_IsTargetTypePlayer) == 0x00000A, "Wrong size on BattleTargetSelect_C_IsTargetTypePlayer");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypePlayer, IsPlayer) == 0x000000, "Member 'BattleTargetSelect_C_IsTargetTypePlayer::IsPlayer' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypePlayer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BattleTargetSelect_C_IsTargetTypePlayer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypePlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BattleTargetSelect_C_IsTargetTypePlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypePlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000003, "Member 'BattleTargetSelect_C_IsTargetTypePlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypePlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000004, "Member 'BattleTargetSelect_C_IsTargetTypePlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypePlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000005, "Member 'BattleTargetSelect_C_IsTargetTypePlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypePlayer, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'BattleTargetSelect_C_IsTargetTypePlayer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypePlayer, CallFunc_BooleanOR_ReturnValue_1) == 0x000007, "Member 'BattleTargetSelect_C_IsTargetTypePlayer::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypePlayer, CallFunc_BooleanOR_ReturnValue_2) == 0x000008, "Member 'BattleTargetSelect_C_IsTargetTypePlayer::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypePlayer, CallFunc_BooleanOR_ReturnValue_3) == 0x000009, "Member 'BattleTargetSelect_C_IsTargetTypePlayer::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.GetCurrentTargetType
// 0x0001 (0x0001 - 0x0000)
struct BattleTargetSelect_C_GetCurrentTargetType final
{
public:
	E_SKILL_TARGET                                TargetType;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_GetCurrentTargetType) == 0x000001, "Wrong alignment on BattleTargetSelect_C_GetCurrentTargetType");
static_assert(sizeof(BattleTargetSelect_C_GetCurrentTargetType) == 0x000001, "Wrong size on BattleTargetSelect_C_GetCurrentTargetType");
static_assert(offsetof(BattleTargetSelect_C_GetCurrentTargetType, TargetType) == 0x000000, "Member 'BattleTargetSelect_C_GetCurrentTargetType::TargetType' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.IsTargetableActor
// 0x0018 (0x0018 - 0x0000)
struct BattleTargetSelect_C_IsTargetableActor final
{
public:
	int32                                         ActorIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInField_InField;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBossFlag_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_IsTargetableActor) == 0x000008, "Wrong alignment on BattleTargetSelect_C_IsTargetableActor");
static_assert(sizeof(BattleTargetSelect_C_IsTargetableActor) == 0x000018, "Wrong size on BattleTargetSelect_C_IsTargetableActor");
static_assert(offsetof(BattleTargetSelect_C_IsTargetableActor, ActorIndex) == 0x000000, "Member 'BattleTargetSelect_C_IsTargetableActor::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetableActor, Ret) == 0x000004, "Member 'BattleTargetSelect_C_IsTargetableActor::Ret' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetableActor, CallFunc_GetPartySystem_retValue) == 0x000008, "Member 'BattleTargetSelect_C_IsTargetableActor::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetableActor, CallFunc_IsInField_InField) == 0x000010, "Member 'BattleTargetSelect_C_IsTargetableActor::CallFunc_IsInField_InField' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetableActor, CallFunc_CheckBossFlag_ReturnValue) == 0x000011, "Member 'BattleTargetSelect_C_IsTargetableActor::CallFunc_CheckBossFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetableActor, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BattleTargetSelect_C_IsTargetableActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetableActor, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BattleTargetSelect_C_IsTargetableActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.CalcLookAtGlobalPos
// 0x00C0 (0x00C0 - 0x0000)
struct BattleTargetSelect_C_CalcLookAtGlobalPos final
{
public:
	E_SKILL_TARGET                                TargetType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_113F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GlobalPos;                                         // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1140[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   Lo_PartySystem;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_SocketName;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_AvePos;                                         // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ValidNum;                                       // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_EndIndex;                                       // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_BeginIndex;                                     // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1141[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInField_InField;                        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1142[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1143[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHitTarget_retValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1144[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_const_GetEnemyLoopMax_retValue;           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartyStart_retValue;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPlayerLoopMax_retValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartyStart_retValue_1;           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyLoopMax_retValue_1;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyStart_retValue;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1145[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1146[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorInt_ReturnValue;             // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_CalcLookAtGlobalPos) == 0x000008, "Wrong alignment on BattleTargetSelect_C_CalcLookAtGlobalPos");
static_assert(sizeof(BattleTargetSelect_C_CalcLookAtGlobalPos) == 0x0000C0, "Wrong size on BattleTargetSelect_C_CalcLookAtGlobalPos");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, TargetType) == 0x000000, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::TargetType' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, SocketName) == 0x000004, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::SocketName' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, GlobalPos) == 0x00000C, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::GlobalPos' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, IsValid) == 0x000018, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::IsValid' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, Lo_PartySystem) == 0x000020, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, Lo_SocketName) == 0x000028, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::Lo_SocketName' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, Lo_AvePos) == 0x000030, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::Lo_AvePos' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, Lo_ValidNum) == 0x00003C, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::Lo_ValidNum' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, Lo_EndIndex) == 0x000040, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::Lo_EndIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, Lo_BeginIndex) == 0x000044, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::Lo_BeginIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, Temp_int_Variable) == 0x000048, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, K2Node_SwitchEnum_CmpSuccess) == 0x00004C, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, Temp_int_Variable_1) == 0x000050, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_IsInField_InField) == 0x000054, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_IsInField_InField' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_GetPartyUnit_retValue) == 0x000060, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_IsHitTarget_retValue) == 0x000068, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_IsHitTarget_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_BooleanOR_ReturnValue) == 0x000069, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_const_GetEnemyLoopMax_retValue) == 0x00006C, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_const_GetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_const_GetPartyStart_retValue) == 0x000070, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_const_GetPlayerLoopMax_retValue) == 0x000074, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_const_GetPlayerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_const_GetPartyStart_retValue_1) == 0x000078, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_const_GetPartyStart_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_const_GetEnemyLoopMax_retValue_1) == 0x00007C, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_const_GetEnemyLoopMax_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_const_GetEnemyStart_retValue) == 0x000080, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_const_GetEnemyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_GetPartySystem_retValue) == 0x000088, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_GetSocketLocation_ReturnValue) == 0x000090, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_Greater_IntInt_ReturnValue) == 0x00009C, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_Divide_VectorInt_ReturnValue) == 0x0000A0, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_Divide_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_Add_VectorVector_ReturnValue) == 0x0000AC, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000BC, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.IsCancel
// 0x0001 (0x0001 - 0x0000)
struct BattleTargetSelect_C_IsCancel final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_IsCancel) == 0x000001, "Wrong alignment on BattleTargetSelect_C_IsCancel");
static_assert(sizeof(BattleTargetSelect_C_IsCancel) == 0x000001, "Wrong size on BattleTargetSelect_C_IsCancel");
static_assert(offsetof(BattleTargetSelect_C_IsCancel, RetValue) == 0x000000, "Member 'BattleTargetSelect_C_IsCancel::RetValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.CancelFunc
// 0x0038 (0x0038 - 0x0000)
struct BattleTargetSelect_C_CancelFunc final
{
public:
	TArray<int32>                                 Lo_WaitTask;                                       // 0x0000(0x0010)(Edit, BlueprintVisible)
	class UBattleActionTaskFactory_C*             CallFunc_GetTaskFactory_retValue;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCamFovyTask_retPecID;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1147[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_CancelFunc) == 0x000008, "Wrong alignment on BattleTargetSelect_C_CancelFunc");
static_assert(sizeof(BattleTargetSelect_C_CancelFunc) == 0x000038, "Wrong size on BattleTargetSelect_C_CancelFunc");
static_assert(offsetof(BattleTargetSelect_C_CancelFunc, Lo_WaitTask) == 0x000000, "Member 'BattleTargetSelect_C_CancelFunc::Lo_WaitTask' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CancelFunc, CallFunc_GetTaskFactory_retValue) == 0x000010, "Member 'BattleTargetSelect_C_CancelFunc::CallFunc_GetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CancelFunc, CallFunc_GetObjectName_ReturnValue) == 0x000018, "Member 'BattleTargetSelect_C_CancelFunc::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CancelFunc, CallFunc_AddCamFovyTask_retPecID) == 0x000028, "Member 'BattleTargetSelect_C_CancelFunc::CallFunc_AddCamFovyTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CancelFunc, CallFunc_GetPartySystem_retValue) == 0x000030, "Member 'BattleTargetSelect_C_CancelFunc::CallFunc_GetPartySystem_retValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.SetCharSelectPanel
// 0x0038 (0x0038 - 0x0000)
struct BattleTargetSelect_C_SetCharSelectPanel final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1148[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0008(0x0010)(Edit, BlueprintVisible)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBattleActionTaskFactory_C*             CallFunc_GetTaskFactory_retValue;                  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPartyPanelCtrlTask_retPecID;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_SetCharSelectPanel) == 0x000008, "Wrong alignment on BattleTargetSelect_C_SetCharSelectPanel");
static_assert(sizeof(BattleTargetSelect_C_SetCharSelectPanel) == 0x000038, "Wrong size on BattleTargetSelect_C_SetCharSelectPanel");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelectPanel, Param_Index) == 0x000000, "Member 'BattleTargetSelect_C_SetCharSelectPanel::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelectPanel, Sw) == 0x000004, "Member 'BattleTargetSelect_C_SetCharSelectPanel::Sw' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelectPanel, Lo_WaitTaskList) == 0x000008, "Member 'BattleTargetSelect_C_SetCharSelectPanel::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelectPanel, CallFunc_GetObjectName_ReturnValue) == 0x000018, "Member 'BattleTargetSelect_C_SetCharSelectPanel::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelectPanel, CallFunc_GetTaskFactory_retValue) == 0x000028, "Member 'BattleTargetSelect_C_SetCharSelectPanel::CallFunc_GetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelectPanel, CallFunc_AddPartyPanelCtrlTask_retPecID) == 0x000030, "Member 'BattleTargetSelect_C_SetCharSelectPanel::CallFunc_AddPartyPanelCtrlTask_retPecID' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.SetSelfSideOnePanel
// 0x0038 (0x0038 - 0x0000)
struct BattleTargetSelect_C_SetSelfSideOnePanel final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1149[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114A[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPlayerLoopMax_retValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartyStart_retValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_114B[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_SetSelfSideOnePanel) == 0x000008, "Wrong alignment on BattleTargetSelect_C_SetSelfSideOnePanel");
static_assert(sizeof(BattleTargetSelect_C_SetSelfSideOnePanel) == 0x000038, "Wrong size on BattleTargetSelect_C_SetSelfSideOnePanel");
static_assert(offsetof(BattleTargetSelect_C_SetSelfSideOnePanel, Param_Index) == 0x000000, "Member 'BattleTargetSelect_C_SetSelfSideOnePanel::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetSelfSideOnePanel, Lo_WaitTaskList) == 0x000008, "Member 'BattleTargetSelect_C_SetSelfSideOnePanel::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetSelfSideOnePanel, Temp_int_Variable) == 0x000018, "Member 'BattleTargetSelect_C_SetSelfSideOnePanel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetSelfSideOnePanel, CallFunc_GetPartySystem_retValue) == 0x000020, "Member 'BattleTargetSelect_C_SetSelfSideOnePanel::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetSelfSideOnePanel, CallFunc_const_GetPlayerLoopMax_retValue) == 0x000028, "Member 'BattleTargetSelect_C_SetSelfSideOnePanel::CallFunc_const_GetPlayerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetSelfSideOnePanel, CallFunc_const_GetPartyStart_retValue) == 0x00002C, "Member 'BattleTargetSelect_C_SetSelfSideOnePanel::CallFunc_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetSelfSideOnePanel, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'BattleTargetSelect_C_SetSelfSideOnePanel::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetSelfSideOnePanel, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000031, "Member 'BattleTargetSelect_C_SetSelfSideOnePanel::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetSelfSideOnePanel, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BattleTargetSelect_C_SetSelfSideOnePanel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.SetCharSelectPanelHideAll
// 0x0030 (0x0030 - 0x0000)
struct BattleTargetSelect_C_SetCharSelectPanelHideAll final
{
public:
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114C[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPlayerLoopMax_retValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartyStart_retValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_114D[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_SetCharSelectPanelHideAll) == 0x000008, "Wrong alignment on BattleTargetSelect_C_SetCharSelectPanelHideAll");
static_assert(sizeof(BattleTargetSelect_C_SetCharSelectPanelHideAll) == 0x000030, "Wrong size on BattleTargetSelect_C_SetCharSelectPanelHideAll");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelectPanelHideAll, Lo_WaitTaskList) == 0x000000, "Member 'BattleTargetSelect_C_SetCharSelectPanelHideAll::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelectPanelHideAll, Temp_int_Variable) == 0x000010, "Member 'BattleTargetSelect_C_SetCharSelectPanelHideAll::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelectPanelHideAll, CallFunc_GetPartySystem_retValue) == 0x000018, "Member 'BattleTargetSelect_C_SetCharSelectPanelHideAll::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelectPanelHideAll, CallFunc_const_GetPlayerLoopMax_retValue) == 0x000020, "Member 'BattleTargetSelect_C_SetCharSelectPanelHideAll::CallFunc_const_GetPlayerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelectPanelHideAll, CallFunc_const_GetPartyStart_retValue) == 0x000024, "Member 'BattleTargetSelect_C_SetCharSelectPanelHideAll::CallFunc_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelectPanelHideAll, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'BattleTargetSelect_C_SetCharSelectPanelHideAll::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetCharSelectPanelHideAll, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BattleTargetSelect_C_SetCharSelectPanelHideAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.IsUseCamRailAtInvOne
// 0x0020 (0x0020 - 0x0000)
struct BattleTargetSelect_C_IsUseCamRailAtInvOne final
{
public:
	bool                                          IsUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_114E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetMainInterface_AsBPI_Main_Interface;    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBattleDebugFlag_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDesignDebugIsPerformRigRail_IsPerform; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_IsUseCamRailAtInvOne) == 0x000008, "Wrong alignment on BattleTargetSelect_C_IsUseCamRailAtInvOne");
static_assert(sizeof(BattleTargetSelect_C_IsUseCamRailAtInvOne) == 0x000020, "Wrong size on BattleTargetSelect_C_IsUseCamRailAtInvOne");
static_assert(offsetof(BattleTargetSelect_C_IsUseCamRailAtInvOne, IsUse) == 0x000000, "Member 'BattleTargetSelect_C_IsUseCamRailAtInvOne::IsUse' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsUseCamRailAtInvOne, CallFunc_GetMainInterface_AsBPI_Main_Interface) == 0x000008, "Member 'BattleTargetSelect_C_IsUseCamRailAtInvOne::CallFunc_GetMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsUseCamRailAtInvOne, CallFunc_BI_CheckBattleDebugFlag_ReturnValue) == 0x000018, "Member 'BattleTargetSelect_C_IsUseCamRailAtInvOne::CallFunc_BI_CheckBattleDebugFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsUseCamRailAtInvOne, CallFunc_BattleDesignDebugIsPerformRigRail_IsPerform) == 0x000019, "Member 'BattleTargetSelect_C_IsUseCamRailAtInvOne::CallFunc_BattleDesignDebugIsPerformRigRail_IsPerform' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsUseCamRailAtInvOne, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'BattleTargetSelect_C_IsUseCamRailAtInvOne::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.CalcFovyToTarget
// 0x000C (0x000C - 0x0000)
struct BattleTargetSelect_C_CalcFovyToTarget final
{
public:
	float                                         Distance_To_Target;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fovy;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BattleDesignDebugCalcTargetFovy_Fovy;     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_CalcFovyToTarget) == 0x000004, "Wrong alignment on BattleTargetSelect_C_CalcFovyToTarget");
static_assert(sizeof(BattleTargetSelect_C_CalcFovyToTarget) == 0x00000C, "Wrong size on BattleTargetSelect_C_CalcFovyToTarget");
static_assert(offsetof(BattleTargetSelect_C_CalcFovyToTarget, Distance_To_Target) == 0x000000, "Member 'BattleTargetSelect_C_CalcFovyToTarget::Distance_To_Target' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcFovyToTarget, Fovy) == 0x000004, "Member 'BattleTargetSelect_C_CalcFovyToTarget::Fovy' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcFovyToTarget, CallFunc_BattleDesignDebugCalcTargetFovy_Fovy) == 0x000008, "Member 'BattleTargetSelect_C_CalcFovyToTarget::CallFunc_BattleDesignDebugCalcTargetFovy_Fovy' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.CalcDistanceToTarget
// 0x0070 (0x0070 - 0x0000)
struct BattleTargetSelect_C_CalcDistanceToTarget final
{
public:
	int32                                         ActorIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetIndex;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1150[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          K2Node_DynamicCast_AsBattle_Main;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1151[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartyAccessor_retValue;                // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue_1;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_CalcDistanceToTarget) == 0x000008, "Wrong alignment on BattleTargetSelect_C_CalcDistanceToTarget");
static_assert(sizeof(BattleTargetSelect_C_CalcDistanceToTarget) == 0x000070, "Wrong size on BattleTargetSelect_C_CalcDistanceToTarget");
static_assert(offsetof(BattleTargetSelect_C_CalcDistanceToTarget, ActorIndex) == 0x000000, "Member 'BattleTargetSelect_C_CalcDistanceToTarget::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDistanceToTarget, TargetIndex) == 0x000004, "Member 'BattleTargetSelect_C_CalcDistanceToTarget::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDistanceToTarget, Distance) == 0x000008, "Member 'BattleTargetSelect_C_CalcDistanceToTarget::Distance' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDistanceToTarget, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleTargetSelect_C_CalcDistanceToTarget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDistanceToTarget, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'BattleTargetSelect_C_CalcDistanceToTarget::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDistanceToTarget, K2Node_DynamicCast_AsBattle_Main) == 0x000020, "Member 'BattleTargetSelect_C_CalcDistanceToTarget::K2Node_DynamicCast_AsBattle_Main' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDistanceToTarget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleTargetSelect_C_CalcDistanceToTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDistanceToTarget, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000029, "Member 'BattleTargetSelect_C_CalcDistanceToTarget::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDistanceToTarget, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BattleTargetSelect_C_CalcDistanceToTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDistanceToTarget, CallFunc_GetPartyAccessor_retValue) == 0x000030, "Member 'BattleTargetSelect_C_CalcDistanceToTarget::CallFunc_GetPartyAccessor_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDistanceToTarget, CallFunc_GetPartyUnit_retValue) == 0x000038, "Member 'BattleTargetSelect_C_CalcDistanceToTarget::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDistanceToTarget, CallFunc_GetPartyUnit_retValue_1) == 0x000040, "Member 'BattleTargetSelect_C_CalcDistanceToTarget::CallFunc_GetPartyUnit_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDistanceToTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BattleTargetSelect_C_CalcDistanceToTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDistanceToTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000054, "Member 'BattleTargetSelect_C_CalcDistanceToTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDistanceToTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000060, "Member 'BattleTargetSelect_C_CalcDistanceToTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDistanceToTarget, CallFunc_VSize_ReturnValue) == 0x00006C, "Member 'BattleTargetSelect_C_CalcDistanceToTarget::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.IsAdjustFovy
// 0x0002 (0x0002 - 0x0000)
struct BattleTargetSelect_C_IsAdjustFovy final
{
public:
	bool                                          IsUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleDesignDebugIsAdjustFovy_IsAdjust;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_IsAdjustFovy) == 0x000001, "Wrong alignment on BattleTargetSelect_C_IsAdjustFovy");
static_assert(sizeof(BattleTargetSelect_C_IsAdjustFovy) == 0x000002, "Wrong size on BattleTargetSelect_C_IsAdjustFovy");
static_assert(offsetof(BattleTargetSelect_C_IsAdjustFovy, IsUse) == 0x000000, "Member 'BattleTargetSelect_C_IsAdjustFovy::IsUse' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsAdjustFovy, CallFunc_BattleDesignDebugIsAdjustFovy_IsAdjust) == 0x000001, "Member 'BattleTargetSelect_C_IsAdjustFovy::CallFunc_BattleDesignDebugIsAdjustFovy_IsAdjust' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.AddCamFovyTask
// 0x00B8 (0x00B8 - 0x0000)
struct BattleTargetSelect_C_AddCamFovyTask final
{
public:
	TArray<int32>                                 WaitCommandList;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         ToFovy;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpSpeedRatio;                                  // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InterpWait;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1152[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcDistanceToTarget_Distance;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1153[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBattleActionTaskFactory_C*             CallFunc_GetTaskFactory_retValue;                  // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddCamFovyTask_retPecID;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1154[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_BattleLog_self_CastInput;              // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_BattleLog_retValue;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_AddCamFovyTask) == 0x000008, "Wrong alignment on BattleTargetSelect_C_AddCamFovyTask");
static_assert(sizeof(BattleTargetSelect_C_AddCamFovyTask) == 0x0000B8, "Wrong size on BattleTargetSelect_C_AddCamFovyTask");
static_assert(offsetof(BattleTargetSelect_C_AddCamFovyTask, WaitCommandList) == 0x000000, "Member 'BattleTargetSelect_C_AddCamFovyTask::WaitCommandList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddCamFovyTask, ToFovy) == 0x000010, "Member 'BattleTargetSelect_C_AddCamFovyTask::ToFovy' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddCamFovyTask, InterpSpeedRatio) == 0x000014, "Member 'BattleTargetSelect_C_AddCamFovyTask::InterpSpeedRatio' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddCamFovyTask, InterpWait) == 0x000018, "Member 'BattleTargetSelect_C_AddCamFovyTask::InterpWait' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddCamFovyTask, CallFunc_GetMainWork_retValue) == 0x000020, "Member 'BattleTargetSelect_C_AddCamFovyTask::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddCamFovyTask, CallFunc_Conv_FloatToString_ReturnValue) == 0x000028, "Member 'BattleTargetSelect_C_AddCamFovyTask::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddCamFovyTask, CallFunc_CalcDistanceToTarget_Distance) == 0x000038, "Member 'BattleTargetSelect_C_AddCamFovyTask::CallFunc_CalcDistanceToTarget_Distance' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddCamFovyTask, CallFunc_GetObjectName_ReturnValue) == 0x000040, "Member 'BattleTargetSelect_C_AddCamFovyTask::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddCamFovyTask, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000050, "Member 'BattleTargetSelect_C_AddCamFovyTask::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddCamFovyTask, CallFunc_GetTaskFactory_retValue) == 0x000060, "Member 'BattleTargetSelect_C_AddCamFovyTask::CallFunc_GetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddCamFovyTask, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BattleTargetSelect_C_AddCamFovyTask::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddCamFovyTask, CallFunc_AddCamFovyTask_retPecID) == 0x000078, "Member 'BattleTargetSelect_C_AddCamFovyTask::CallFunc_AddCamFovyTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddCamFovyTask, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000080, "Member 'BattleTargetSelect_C_AddCamFovyTask::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddCamFovyTask, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000090, "Member 'BattleTargetSelect_C_AddCamFovyTask::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddCamFovyTask, CallFunc_BI_BattleLog_self_CastInput) == 0x0000A0, "Member 'BattleTargetSelect_C_AddCamFovyTask::CallFunc_BI_BattleLog_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddCamFovyTask, CallFunc_BI_BattleLog_retValue) == 0x0000B0, "Member 'BattleTargetSelect_C_AddCamFovyTask::CallFunc_BI_BattleLog_retValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.IsTargetActor
// 0x0018 (0x0018 - 0x0000)
struct BattleTargetSelect_C_IsTargetActor final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1155[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHitTarget_retValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_IsTargetActor) == 0x000008, "Wrong alignment on BattleTargetSelect_C_IsTargetActor");
static_assert(sizeof(BattleTargetSelect_C_IsTargetActor) == 0x000018, "Wrong size on BattleTargetSelect_C_IsTargetActor");
static_assert(offsetof(BattleTargetSelect_C_IsTargetActor, PartyIndex) == 0x000000, "Member 'BattleTargetSelect_C_IsTargetActor::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetActor, Ret) == 0x000004, "Member 'BattleTargetSelect_C_IsTargetActor::Ret' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetActor, CallFunc_GetPartySystem_retValue) == 0x000008, "Member 'BattleTargetSelect_C_IsTargetActor::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetActor, CallFunc_IsHitTarget_retValue) == 0x000010, "Member 'BattleTargetSelect_C_IsTargetActor::CallFunc_IsHitTarget_retValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.CountValidTargets
// 0x0024 (0x0024 - 0x0000)
struct BattleTargetSelect_C_CountValidTargets final
{
public:
	int32                                         StartIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ValidNum;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Num;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInField_InField;                        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1156[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_CountValidTargets) == 0x000004, "Wrong alignment on BattleTargetSelect_C_CountValidTargets");
static_assert(sizeof(BattleTargetSelect_C_CountValidTargets) == 0x000024, "Wrong size on BattleTargetSelect_C_CountValidTargets");
static_assert(offsetof(BattleTargetSelect_C_CountValidTargets, StartIndex) == 0x000000, "Member 'BattleTargetSelect_C_CountValidTargets::StartIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CountValidTargets, LastIndex) == 0x000004, "Member 'BattleTargetSelect_C_CountValidTargets::LastIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CountValidTargets, ValidNum) == 0x000008, "Member 'BattleTargetSelect_C_CountValidTargets::ValidNum' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CountValidTargets, Lo_Num) == 0x00000C, "Member 'BattleTargetSelect_C_CountValidTargets::Lo_Num' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CountValidTargets, Temp_int_Variable) == 0x000010, "Member 'BattleTargetSelect_C_CountValidTargets::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CountValidTargets, CallFunc_IsInField_InField) == 0x000014, "Member 'BattleTargetSelect_C_CountValidTargets::CallFunc_IsInField_InField' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CountValidTargets, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000015, "Member 'BattleTargetSelect_C_CountValidTargets::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CountValidTargets, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BattleTargetSelect_C_CountValidTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CountValidTargets, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BattleTargetSelect_C_CountValidTargets::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CountValidTargets, Temp_int_Variable_1) == 0x000020, "Member 'BattleTargetSelect_C_CountValidTargets::Temp_int_Variable_1' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.PickUpPartyIndices
// 0x0220 (0x0220 - 0x0000)
struct BattleTargetSelect_C_PickUpPartyIndices final
{
public:
	bool                                          IsPlayerSide;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1157[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 PartyIndices;                                      // 0x0008(0x0010)(Parm, OutParm)
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   Lo_PartySystem;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_ActList;                                        // 0x0028(0x0010)(Edit, BlueprintVisible)
	TMap<float, int32>                            Lo_Raw;                                            // 0x0038(0x0050)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_Ret;                                            // 0x0088(0x0010)(Edit, BlueprintVisible)
	TArray<float>                                 Lo_Key;                                            // 0x0098(0x0010)(Edit, BlueprintVisible)
	TArray<float>                                 Lo_SortedKey;                                      // 0x00A8(0x0010)(Edit, BlueprintVisible)
	struct FVector                                Lo_CamRightVec;                                    // 0x00B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_CamPos;                                         // 0x00C4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Temp_byte_Variable;                                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Temp_byte_Variable_1;                              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1158[0x1];                                     // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    K2Node_Select_Default;                             // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1159[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115A[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115B[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115C[0x8];                                     // 0x0108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_retValue;              // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115D[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSideIsTargetList_ReturnValue;          // 0x0168(0x0010)(ReferenceParm)
	float                                         CallFunc_BreakVector_X;                            // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115E[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_Map_Keys_Keys;                            // 0x0188(0x0010)(ReferenceParm)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115F[0x2];                                     // 0x01A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1160[0x3];                                     // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_PickUpPartyIndices) == 0x000010, "Wrong alignment on BattleTargetSelect_C_PickUpPartyIndices");
static_assert(sizeof(BattleTargetSelect_C_PickUpPartyIndices) == 0x000220, "Wrong size on BattleTargetSelect_C_PickUpPartyIndices");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, IsPlayerSide) == 0x000000, "Member 'BattleTargetSelect_C_PickUpPartyIndices::IsPlayerSide' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, PartyIndices) == 0x000008, "Member 'BattleTargetSelect_C_PickUpPartyIndices::PartyIndices' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, Lo_Unit) == 0x000018, "Member 'BattleTargetSelect_C_PickUpPartyIndices::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, Lo_PartySystem) == 0x000020, "Member 'BattleTargetSelect_C_PickUpPartyIndices::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, Lo_ActList) == 0x000028, "Member 'BattleTargetSelect_C_PickUpPartyIndices::Lo_ActList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, Lo_Raw) == 0x000038, "Member 'BattleTargetSelect_C_PickUpPartyIndices::Lo_Raw' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, Lo_Ret) == 0x000088, "Member 'BattleTargetSelect_C_PickUpPartyIndices::Lo_Ret' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, Lo_Key) == 0x000098, "Member 'BattleTargetSelect_C_PickUpPartyIndices::Lo_Key' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, Lo_SortedKey) == 0x0000A8, "Member 'BattleTargetSelect_C_PickUpPartyIndices::Lo_SortedKey' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, Lo_CamRightVec) == 0x0000B8, "Member 'BattleTargetSelect_C_PickUpPartyIndices::Lo_CamRightVec' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, Lo_CamPos) == 0x0000C4, "Member 'BattleTargetSelect_C_PickUpPartyIndices::Lo_CamPos' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, Temp_byte_Variable) == 0x0000D0, "Member 'BattleTargetSelect_C_PickUpPartyIndices::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, Temp_byte_Variable_1) == 0x0000D1, "Member 'BattleTargetSelect_C_PickUpPartyIndices::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, Temp_bool_Variable) == 0x0000D2, "Member 'BattleTargetSelect_C_PickUpPartyIndices::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, Temp_int_Array_Index_Variable) == 0x0000D8, "Member 'BattleTargetSelect_C_PickUpPartyIndices::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, K2Node_Select_Default) == 0x0000DC, "Member 'BattleTargetSelect_C_PickUpPartyIndices::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, Temp_int_Loop_Counter_Variable) == 0x0000E4, "Member 'BattleTargetSelect_C_PickUpPartyIndices::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, Temp_int_Array_Index_Variable_1) == 0x0000EC, "Member 'BattleTargetSelect_C_PickUpPartyIndices::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, Temp_int_Loop_Counter_Variable_1) == 0x0000F0, "Member 'BattleTargetSelect_C_PickUpPartyIndices::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Less_IntInt_ReturnValue) == 0x0000F4, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F8, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_IsValid_ReturnValue) == 0x0000FC, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_GetPartyUnit_retValue) == 0x000100, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_GetSocketTransform_retValue) == 0x000110, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_GetSocketTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_BreakTransform_Location) == 0x000140, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_BreakTransform_Rotation) == 0x00014C, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_BreakTransform_Scale) == 0x000158, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_GetSideIsTargetList_ReturnValue) == 0x000168, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_GetSideIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_BreakVector_X) == 0x000178, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_BreakVector_Y) == 0x00017C, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_BreakVector_Z) == 0x000180, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Map_Keys_Keys) == 0x000188, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Array_Get_Item_1) == 0x000198, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Array_Length_ReturnValue_1) == 0x00019C, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Map_Find_Value) == 0x0001A0, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Map_Find_ReturnValue) == 0x0001A4, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001A5, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Array_Add_ReturnValue) == 0x0001A8, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x0001AC, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_MinOfFloatArray_MinValue) == 0x0001B0, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Array_Length_ReturnValue_2) == 0x0001B4, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Array_Add_ReturnValue_1) == 0x0001B8, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Greater_IntInt_ReturnValue) == 0x0001BC, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_GetPartySystem_retValue) == 0x0001C0, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_BreakVector_X_1) == 0x0001C8, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_BreakVector_Y_1) == 0x0001CC, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_BreakVector_Z_1) == 0x0001D0, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_MakeVector_ReturnValue) == 0x0001D4, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0001E0, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001E8, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001F4, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Normal_ReturnValue) == 0x000200, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_Dot_VectorVector_ReturnValue) == 0x00020C, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PickUpPartyIndices, CallFunc_GetActorRightVector_ReturnValue) == 0x000210, "Member 'BattleTargetSelect_C_PickUpPartyIndices::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.AddUnitIndex_ViewedFromCamera
// 0x0088 (0x0088 - 0x0000)
struct BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUseCamRail;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLock;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsRecursion;                                       // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsNoSetCharSelect;                                 // 0x0007(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsNoSetCharSelect;                              // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1161[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_PartyIndices;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_ValidTargetNum;                                 // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_CurrentTargetIndex;                             // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsLock;                                         // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsUseCamRail;                                   // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1162[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LoUnitMax;                                         // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoUnitStart;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1163[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0038(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1164[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1165[0x2];                                     // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1166[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTargetTypePlayer_IsPlayer;              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1167[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_PickUpPartyIndices_PartyIndices;          // 0x0078(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera) == 0x000008, "Wrong alignment on BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera");
static_assert(sizeof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera) == 0x000088, "Wrong size on BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, Param_Index) == 0x000000, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, IsUseCamRail) == 0x000004, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::IsUseCamRail' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, IsLock) == 0x000005, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::IsLock' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, IsRecursion) == 0x000006, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::IsRecursion' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, IsNoSetCharSelect) == 0x000007, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::IsNoSetCharSelect' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, Lo_IsNoSetCharSelect) == 0x000008, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::Lo_IsNoSetCharSelect' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, Lo_PartyIndices) == 0x000010, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::Lo_PartyIndices' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, Lo_ValidTargetNum) == 0x000020, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::Lo_ValidTargetNum' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, Lo_CurrentTargetIndex) == 0x000024, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::Lo_CurrentTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, Lo_IsLock) == 0x000028, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::Lo_IsLock' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, Lo_IsUseCamRail) == 0x000029, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::Lo_IsUseCamRail' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, LoUnitMax) == 0x00002C, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::LoUnitMax' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, LoUnitStart) == 0x000030, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::LoUnitStart' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, Lo_WaitTaskList) == 0x000038, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000048, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, CallFunc_Clamp_ReturnValue) == 0x00004C, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, CallFunc_Subtract_IntInt_ReturnValue) == 0x000054, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00005C, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00005D, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, CallFunc_Array_Find_ReturnValue) == 0x000060, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, CallFunc_SelectInt_ReturnValue) == 0x00006C, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000070, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, CallFunc_IsTargetTypePlayer_IsPlayer) == 0x000071, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::CallFunc_IsTargetTypePlayer_IsPlayer' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera, CallFunc_PickUpPartyIndices_PartyIndices) == 0x000078, "Member 'BattleTargetSelect_C_AddUnitIndex_ViewedFromCamera::CallFunc_PickUpPartyIndices_PartyIndices' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.ResetPartyDither
// 0x0028 (0x0028 - 0x0000)
struct BattleTargetSelect_C_ResetPartyDither final
{
public:
	float                                         InterpSec;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1168[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   Lo_PartySystem;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Lo_Unit;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_ActList;                                        // 0x0018(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(BattleTargetSelect_C_ResetPartyDither) == 0x000008, "Wrong alignment on BattleTargetSelect_C_ResetPartyDither");
static_assert(sizeof(BattleTargetSelect_C_ResetPartyDither) == 0x000028, "Wrong size on BattleTargetSelect_C_ResetPartyDither");
static_assert(offsetof(BattleTargetSelect_C_ResetPartyDither, InterpSec) == 0x000000, "Member 'BattleTargetSelect_C_ResetPartyDither::InterpSec' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ResetPartyDither, Lo_PartySystem) == 0x000008, "Member 'BattleTargetSelect_C_ResetPartyDither::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ResetPartyDither, Lo_Unit) == 0x000010, "Member 'BattleTargetSelect_C_ResetPartyDither::Lo_Unit' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_ResetPartyDither, Lo_ActList) == 0x000018, "Member 'BattleTargetSelect_C_ResetPartyDither::Lo_ActList' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.GetSaveTargetIndex
// 0x0018 (0x0018 - 0x0000)
struct BattleTargetSelect_C_GetSaveTargetIndex final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1169[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSaveTargetIndex_retValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInField_InField;                        // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_GetSaveTargetIndex) == 0x000008, "Wrong alignment on BattleTargetSelect_C_GetSaveTargetIndex");
static_assert(sizeof(BattleTargetSelect_C_GetSaveTargetIndex) == 0x000018, "Wrong size on BattleTargetSelect_C_GetSaveTargetIndex");
static_assert(offsetof(BattleTargetSelect_C_GetSaveTargetIndex, RetValue) == 0x000000, "Member 'BattleTargetSelect_C_GetSaveTargetIndex::RetValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetSaveTargetIndex, CallFunc_GetMainWork_retValue) == 0x000008, "Member 'BattleTargetSelect_C_GetSaveTargetIndex::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetSaveTargetIndex, CallFunc_GetSaveTargetIndex_retValue) == 0x000010, "Member 'BattleTargetSelect_C_GetSaveTargetIndex::CallFunc_GetSaveTargetIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetSaveTargetIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'BattleTargetSelect_C_GetSaveTargetIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetSaveTargetIndex, CallFunc_IsInField_InField) == 0x000015, "Member 'BattleTargetSelect_C_GetSaveTargetIndex::CallFunc_IsInField_InField' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.ClearSaveTargetIndex
// 0x0008 (0x0008 - 0x0000)
struct BattleTargetSelect_C_ClearSaveTargetIndex final
{
public:
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_ClearSaveTargetIndex) == 0x000008, "Wrong alignment on BattleTargetSelect_C_ClearSaveTargetIndex");
static_assert(sizeof(BattleTargetSelect_C_ClearSaveTargetIndex) == 0x000008, "Wrong size on BattleTargetSelect_C_ClearSaveTargetIndex");
static_assert(offsetof(BattleTargetSelect_C_ClearSaveTargetIndex, CallFunc_GetMainWork_retValue) == 0x000000, "Member 'BattleTargetSelect_C_ClearSaveTargetIndex::CallFunc_GetMainWork_retValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.SetSaveTargetIndex
// 0x0010 (0x0010 - 0x0000)
struct BattleTargetSelect_C_SetSaveTargetIndex final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_116A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_SetSaveTargetIndex) == 0x000008, "Wrong alignment on BattleTargetSelect_C_SetSaveTargetIndex");
static_assert(sizeof(BattleTargetSelect_C_SetSaveTargetIndex) == 0x000010, "Wrong size on BattleTargetSelect_C_SetSaveTargetIndex");
static_assert(offsetof(BattleTargetSelect_C_SetSaveTargetIndex, PartyIndex) == 0x000000, "Member 'BattleTargetSelect_C_SetSaveTargetIndex::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetSaveTargetIndex, CallFunc_GetMainWork_retValue) == 0x000008, "Member 'BattleTargetSelect_C_SetSaveTargetIndex::CallFunc_GetMainWork_retValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.PlaySE
// 0x0018 (0x0018 - 0x0000)
struct BattleTargetSelect_C_PlaySE final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattleSoundManager_C*                  CallFunc_GetSoundManager_BattleSoundManager;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_PlaySE) == 0x000008, "Wrong alignment on BattleTargetSelect_C_PlaySE");
static_assert(sizeof(BattleTargetSelect_C_PlaySE) == 0x000018, "Wrong size on BattleTargetSelect_C_PlaySE");
static_assert(offsetof(BattleTargetSelect_C_PlaySE, Param_Name) == 0x000000, "Member 'BattleTargetSelect_C_PlaySE::Param_Name' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PlaySE, CallFunc_GetMainWork_retValue) == 0x000008, "Member 'BattleTargetSelect_C_PlaySE::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PlaySE, CallFunc_GetSoundManager_BattleSoundManager) == 0x000010, "Member 'BattleTargetSelect_C_PlaySE::CallFunc_GetSoundManager_BattleSoundManager' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.CalcLookAtLocalPos
// 0x0100 (0x0100 - 0x0000)
struct BattleTargetSelect_C_CalcLookAtLocalPos final
{
public:
	E_SKILL_TARGET                                TargetType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_116B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalPos;                                          // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_116C[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Lo_SocketName;                                     // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_AvePos;                                         // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ValidNum;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_EndIndex;                                       // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_BeginIndex;                                     // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_116D[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTargetableActor_ret;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTargetActor_Ret;                        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_116E[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_116F[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorInt_ReturnValue;             // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1170[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_1;                // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyLoopMax_retValue;           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartyStart_retValue;             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPlayerLoopMax_retValue;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartyStart_retValue_1;           // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyLoopMax_retValue_1;         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyStart_retValue;             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_CalcLookAtLocalPos) == 0x000010, "Wrong alignment on BattleTargetSelect_C_CalcLookAtLocalPos");
static_assert(sizeof(BattleTargetSelect_C_CalcLookAtLocalPos) == 0x000100, "Wrong size on BattleTargetSelect_C_CalcLookAtLocalPos");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, TargetType) == 0x000000, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::TargetType' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, SocketName) == 0x000004, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::SocketName' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, LocalPos) == 0x00000C, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::LocalPos' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, IsValid) == 0x000018, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::IsValid' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, Lo_SocketName) == 0x00001C, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::Lo_SocketName' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, Lo_AvePos) == 0x000024, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::Lo_AvePos' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, Lo_ValidNum) == 0x000030, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::Lo_ValidNum' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, Lo_EndIndex) == 0x000034, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::Lo_EndIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, Lo_BeginIndex) == 0x000038, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::Lo_BeginIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, Temp_int_Variable) == 0x00003C, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, Temp_int_Variable_1) == 0x000044, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_IsTargetableActor_ret) == 0x000048, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_IsTargetableActor_ret' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_IsTargetActor_Ret) == 0x000049, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_IsTargetActor_Ret' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_BooleanOR_ReturnValue) == 0x000050, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_Greater_IntInt_ReturnValue) == 0x000051, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_Divide_VectorInt_ReturnValue) == 0x000054, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_Divide_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_GetPartySystem_retValue) == 0x000060, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_GetPartyUnit_retValue) == 0x000068, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_GetSocketTransform_ReturnValue) == 0x000070, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_BreakTransform_Location) == 0x0000A0, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_BreakTransform_Rotation) == 0x0000AC, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_BreakTransform_Scale) == 0x0000B8, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C4, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C8, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D4, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_GetPartySystem_retValue_1) == 0x0000D8, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_GetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_const_GetEnemyLoopMax_retValue) == 0x0000E0, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_const_GetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_const_GetPartyStart_retValue) == 0x0000E4, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_const_GetPlayerLoopMax_retValue) == 0x0000E8, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_const_GetPlayerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_const_GetPartyStart_retValue_1) == 0x0000EC, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_const_GetPartyStart_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_const_GetEnemyLoopMax_retValue_1) == 0x0000F0, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_const_GetEnemyLoopMax_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtLocalPos, CallFunc_const_GetEnemyStart_retValue) == 0x0000F4, "Member 'BattleTargetSelect_C_CalcLookAtLocalPos::CallFunc_const_GetEnemyStart_retValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.EnemyInfoSwitch
// 0x0088 (0x0088 - 0x0000)
struct BattleTargetSelect_C_EnemyInfoSwitch final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1171[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FullIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VisibleAll;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Immediately;                                       // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_VisibleAll;                                     // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1172[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_ActList;                                        // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_FullIndex;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_Sw;                                             // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1173[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCommand                            Lo_ActorCommand;                                   // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_LopEnd;                                         // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_LopStart;                                       // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   Lo_PartySystem;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcExeptionValue_HP_Exeption;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcExeptionValue_MP_Exeption;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1174[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetAllIsTargetList_ReturnValue;           // 0x0078(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleTargetSelect_C_EnemyInfoSwitch) == 0x000008, "Wrong alignment on BattleTargetSelect_C_EnemyInfoSwitch");
static_assert(sizeof(BattleTargetSelect_C_EnemyInfoSwitch) == 0x000088, "Wrong size on BattleTargetSelect_C_EnemyInfoSwitch");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, Sw) == 0x000000, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::Sw' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, FullIndex) == 0x000004, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::FullIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, VisibleAll) == 0x000008, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::VisibleAll' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, Immediately) == 0x000009, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::Immediately' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, Lo_VisibleAll) == 0x00000A, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::Lo_VisibleAll' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, Lo_ActList) == 0x000010, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::Lo_ActList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, Lo_FullIndex) == 0x000020, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::Lo_FullIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, Lo_Sw) == 0x000024, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::Lo_Sw' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, Lo_ActorCommand) == 0x000028, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::Lo_ActorCommand' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, Lo_LopEnd) == 0x000038, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::Lo_LopEnd' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, Lo_LopStart) == 0x00003C, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::Lo_LopStart' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, Lo_PartySystem) == 0x000040, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, CallFunc_Array_Get_Item) == 0x000050, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, CallFunc_CalcExeptionValue_HP_Exeption) == 0x000054, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::CallFunc_CalcExeptionValue_HP_Exeption' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, CallFunc_CalcExeptionValue_MP_Exeption) == 0x000058, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::CallFunc_CalcExeptionValue_MP_Exeption' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000065, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000066, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000067, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000068, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, CallFunc_BooleanOR_ReturnValue) == 0x000069, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, CallFunc_BooleanOR_ReturnValue_1) == 0x00006A, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, CallFunc_BooleanOR_ReturnValue_2) == 0x00006B, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00006C, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, CallFunc_BooleanOR_ReturnValue_3) == 0x00006D, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, CallFunc_GetPartySystem_retValue) == 0x000070, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_EnemyInfoSwitch, CallFunc_GetAllIsTargetList_ReturnValue) == 0x000078, "Member 'BattleTargetSelect_C_EnemyInfoSwitch::CallFunc_GetAllIsTargetList_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.GetInvSideOneStartIndex
// 0x0028 (0x0028 - 0x0000)
struct BattleTargetSelect_C_GetInvSideOneStartIndex final
{
public:
	int32                                         RetValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1175[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Param_Lo_List;                                     // 0x0008(0x0010)(Edit, BlueprintVisible)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSaveTargetIndex_retValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnemyTargetPriorityIndex_retValue;     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_GetInvSideOneStartIndex) == 0x000008, "Wrong alignment on BattleTargetSelect_C_GetInvSideOneStartIndex");
static_assert(sizeof(BattleTargetSelect_C_GetInvSideOneStartIndex) == 0x000028, "Wrong size on BattleTargetSelect_C_GetInvSideOneStartIndex");
static_assert(offsetof(BattleTargetSelect_C_GetInvSideOneStartIndex, RetValue) == 0x000000, "Member 'BattleTargetSelect_C_GetInvSideOneStartIndex::RetValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetInvSideOneStartIndex, Param_Lo_List) == 0x000008, "Member 'BattleTargetSelect_C_GetInvSideOneStartIndex::Param_Lo_List' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetInvSideOneStartIndex, CallFunc_GetPartySystem_retValue) == 0x000018, "Member 'BattleTargetSelect_C_GetInvSideOneStartIndex::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetInvSideOneStartIndex, CallFunc_GetSaveTargetIndex_retValue) == 0x000020, "Member 'BattleTargetSelect_C_GetInvSideOneStartIndex::CallFunc_GetSaveTargetIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetInvSideOneStartIndex, CallFunc_GetEnemyTargetPriorityIndex_retValue) == 0x000024, "Member 'BattleTargetSelect_C_GetInvSideOneStartIndex::CallFunc_GetEnemyTargetPriorityIndex_retValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.AddUnitIndexForPlayer
// 0x0080 (0x0080 - 0x0000)
struct BattleTargetSelect_C_AddUnitIndexForPlayer final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUseCamRail;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLock;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsRecursion;                                       // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1176[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_Add;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1177[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_OrderList;                                      // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_ValidTargetNum;                                 // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_CurrentTargetIndex;                             // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsLock;                                         // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsUseCamRail;                                   // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1178[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LoUnitMax;                                         // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoUnitStart;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1179[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_117A[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSideIsTargetList_ReturnValue;          // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_117B[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_AddUnitIndexForPlayer) == 0x000008, "Wrong alignment on BattleTargetSelect_C_AddUnitIndexForPlayer");
static_assert(sizeof(BattleTargetSelect_C_AddUnitIndexForPlayer) == 0x000080, "Wrong size on BattleTargetSelect_C_AddUnitIndexForPlayer");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, Param_Index) == 0x000000, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, IsUseCamRail) == 0x000004, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::IsUseCamRail' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, IsLock) == 0x000005, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::IsLock' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, IsRecursion) == 0x000006, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::IsRecursion' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, Lo_Add) == 0x000008, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::Lo_Add' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, Lo_OrderList) == 0x000010, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::Lo_OrderList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, Lo_ValidTargetNum) == 0x000020, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::Lo_ValidTargetNum' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, Lo_CurrentTargetIndex) == 0x000024, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::Lo_CurrentTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, Lo_IsLock) == 0x000028, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::Lo_IsLock' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, Lo_IsUseCamRail) == 0x000029, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::Lo_IsUseCamRail' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, LoUnitMax) == 0x00002C, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::LoUnitMax' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, LoUnitStart) == 0x000030, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::LoUnitStart' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, Lo_WaitTaskList) == 0x000038, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, CallFunc_GetPartySystem_retValue) == 0x000058, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, CallFunc_GetSideIsTargetList_ReturnValue) == 0x000060, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::CallFunc_GetSideIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, CallFunc_Array_Find_ReturnValue) == 0x000070, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000074, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, CallFunc_BooleanAND_ReturnValue) == 0x00007C, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00007D, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x00007E, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.CalcLookAtGlobalPos_New
// 0x0250 (0x0250 - 0x0000)
struct BattleTargetSelect_C_CalcLookAtGlobalPos_New final
{
public:
	E_SKILL_TARGET                                TargetType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_117C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GlobalPos;                                         // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_117D[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTUtilInterface>  Lo_BPLPTUtil;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    Lo_SideType;                                       // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                Lo_TargetType;                                     // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsCalcEveryTime;                                // 0x0032(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_117E[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Param_Lo_List;                                     // 0x0038(0x0010)(Edit, BlueprintVisible)
	class UBattlePartySystem_C*                   Lo_PartySystem;                                    // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Lo_SocketName;                                     // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Lo_AvePos;                                         // 0x0058(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ValidNum;                                       // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_EndIndex;                                       // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_BeginIndex;                                     // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_117F[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1180[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BI_GetUnitAveLocation_ReturnValue;        // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1181[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTUtilInterface>  K2Node_DynamicCast_AsBPI_PTUtil_Interface;         // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1182[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BI_GetUnitAveLocation_ReturnValue_1;      // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BI_GetUnitAveLocation_ReturnValue_2;      // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BI_GetUnitAveLocation_ReturnValue_3;      // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                Temp_byte_Variable;                                // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1183[0x2];                                     // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1184[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                K2Node_Select_Default;                             // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1185[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1186[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Map_Find_Value;                           // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1187[0x3];                                     // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Map_Find_Value_1;                         // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1188[0x3];                                     // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Map_Find_Value_2;                         // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1189[0x2];                                     // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Map_Find_Value_3;                         // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_118A[0x3];                                     // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_118B[0x3];                                     // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorInt_ReturnValue;             // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_118C[0x3];                                     // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetActListForTargetGlobal_retValue;       // 0x0210(0x0010)(ReferenceParm)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           CallFunc_GetPartyUnit_retValue;                    // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_CalcLookAtGlobalPos_New) == 0x000008, "Wrong alignment on BattleTargetSelect_C_CalcLookAtGlobalPos_New");
static_assert(sizeof(BattleTargetSelect_C_CalcLookAtGlobalPos_New) == 0x000250, "Wrong size on BattleTargetSelect_C_CalcLookAtGlobalPos_New");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, TargetType) == 0x000000, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::TargetType' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, SocketName) == 0x000004, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::SocketName' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, GlobalPos) == 0x00000C, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::GlobalPos' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, IsValid) == 0x000018, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::IsValid' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, Lo_BPLPTUtil) == 0x000020, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::Lo_BPLPTUtil' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, Lo_SideType) == 0x000030, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::Lo_SideType' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, Lo_TargetType) == 0x000031, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::Lo_TargetType' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, Lo_IsCalcEveryTime) == 0x000032, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::Lo_IsCalcEveryTime' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, Param_Lo_List) == 0x000038, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::Param_Lo_List' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, Lo_PartySystem) == 0x000048, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, Lo_SocketName) == 0x000050, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::Lo_SocketName' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, Lo_AvePos) == 0x000058, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::Lo_AvePos' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, Lo_ValidNum) == 0x000064, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::Lo_ValidNum' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, Lo_EndIndex) == 0x000068, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::Lo_EndIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, Lo_BeginIndex) == 0x00006C, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::Lo_BeginIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, Temp_int_Array_Index_Variable) == 0x000074, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, Temp_int_Variable) == 0x000080, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, K2Node_SwitchEnum_CmpSuccess) == 0x000084, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_GetOwner_ReturnValue) == 0x000088, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_BI_GetUnitAveLocation_ReturnValue) == 0x000090, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_BI_GetUnitAveLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, K2Node_DynamicCast_AsBPI_PTUtil_Interface) == 0x0000A0, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::K2Node_DynamicCast_AsBPI_PTUtil_Interface' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_BI_GetUnitAveLocation_ReturnValue_1) == 0x0000B4, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_BI_GetUnitAveLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C0, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000CC, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_BI_GetUnitAveLocation_ReturnValue_2) == 0x0000D8, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_BI_GetUnitAveLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_BI_GetUnitAveLocation_ReturnValue_3) == 0x0000E4, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_BI_GetUnitAveLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F4, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, Temp_byte_Variable) == 0x0000F5, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Conv_NameToString_ReturnValue) == 0x0000F8, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000108, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Concat_StrStr_ReturnValue) == 0x000118, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000128, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000138, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000148, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, Temp_bool_Variable) == 0x000158, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Conv_NameToString_ReturnValue_2) == 0x000160, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000170, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, K2Node_Select_Default) == 0x000180, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000188, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, K2Node_SwitchEnum_CmpSuccess_1) == 0x000198, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Map_Find_Value) == 0x00019C, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Map_Find_ReturnValue) == 0x0001A8, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Map_Find_Value_1) == 0x0001AC, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Map_Find_ReturnValue_1) == 0x0001B8, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Map_Find_Value_2) == 0x0001BC, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Map_Find_ReturnValue_2) == 0x0001C8, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_BooleanAND_ReturnValue) == 0x0001C9, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001CC, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Map_Find_Value_3) == 0x0001D8, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Map_Find_ReturnValue_3) == 0x0001E4, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001E8, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0001F4, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Divide_VectorInt_ReturnValue) == 0x0001F8, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Divide_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Array_Get_Item) == 0x000204, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Array_Length_ReturnValue_1) == 0x000208, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Less_IntInt_ReturnValue) == 0x00020C, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_GetActListForTargetGlobal_retValue) == 0x000210, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_GetActListForTargetGlobal_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_GetPartySystem_retValue) == 0x000220, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_GetPartyUnit_retValue) == 0x000228, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_GetSocketLocation_ReturnValue) == 0x000230, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00023C, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcLookAtGlobalPos_New, CallFunc_Add_IntInt_ReturnValue_1) == 0x000248, "Member 'BattleTargetSelect_C_CalcLookAtGlobalPos_New::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.InitializeFunc
// 0x0058 (0x0058 - 0x0000)
struct BattleTargetSelect_C_InitializeFunc final
{
public:
	TArray<int32>                                 LoWaitTask;                                        // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         LoEraseUnitMax;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoEraseUnitStart;                                  // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   Lo_PartySystem;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcSelfSideFirstTarget_PartyIndex;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTargetTypeEnemy_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_118D[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetInvSideOneStartIndex_retValue;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTargetTypePlayer_IsPlayer;              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_118E[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSideFirstActIndex_retValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_118F[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1190[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_InitializeFunc) == 0x000008, "Wrong alignment on BattleTargetSelect_C_InitializeFunc");
static_assert(sizeof(BattleTargetSelect_C_InitializeFunc) == 0x000058, "Wrong size on BattleTargetSelect_C_InitializeFunc");
static_assert(offsetof(BattleTargetSelect_C_InitializeFunc, LoWaitTask) == 0x000000, "Member 'BattleTargetSelect_C_InitializeFunc::LoWaitTask' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeFunc, LoEraseUnitMax) == 0x000010, "Member 'BattleTargetSelect_C_InitializeFunc::LoEraseUnitMax' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeFunc, LoEraseUnitStart) == 0x000014, "Member 'BattleTargetSelect_C_InitializeFunc::LoEraseUnitStart' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeFunc, Lo_PartySystem) == 0x000018, "Member 'BattleTargetSelect_C_InitializeFunc::Lo_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeFunc, CallFunc_CalcSelfSideFirstTarget_PartyIndex) == 0x000020, "Member 'BattleTargetSelect_C_InitializeFunc::CallFunc_CalcSelfSideFirstTarget_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeFunc, CallFunc_IsTargetTypeEnemy_ReturnValue) == 0x000024, "Member 'BattleTargetSelect_C_InitializeFunc::CallFunc_IsTargetTypeEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeFunc, CallFunc_SelectInt_ReturnValue) == 0x000028, "Member 'BattleTargetSelect_C_InitializeFunc::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeFunc, CallFunc_GetInvSideOneStartIndex_retValue) == 0x00002C, "Member 'BattleTargetSelect_C_InitializeFunc::CallFunc_GetInvSideOneStartIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeFunc, Temp_int_Variable) == 0x000030, "Member 'BattleTargetSelect_C_InitializeFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeFunc, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000034, "Member 'BattleTargetSelect_C_InitializeFunc::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeFunc, CallFunc_IsTargetTypePlayer_IsPlayer) == 0x000035, "Member 'BattleTargetSelect_C_InitializeFunc::CallFunc_IsTargetTypePlayer_IsPlayer' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeFunc, CallFunc_GetSideFirstActIndex_retValue) == 0x000038, "Member 'BattleTargetSelect_C_InitializeFunc::CallFunc_GetSideFirstActIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeFunc, K2Node_SwitchEnum_CmpSuccess) == 0x00003C, "Member 'BattleTargetSelect_C_InitializeFunc::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BattleTargetSelect_C_InitializeFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeFunc, CallFunc_GetPartySystem_retValue) == 0x000048, "Member 'BattleTargetSelect_C_InitializeFunc::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000050, "Member 'BattleTargetSelect_C_InitializeFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.AddUnitIndexForPlayer_Old
// 0x00E0 (0x00E0 - 0x0000)
struct BattleTargetSelect_C_AddUnitIndexForPlayer_Old final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUseCamRail;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLock;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsRecursion;                                       // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1191[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_OrderList;                                      // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_ValidTargetNum;                                 // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_CurrentTargetIndex;                             // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsLock;                                         // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsUseCamRail;                                   // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1192[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LoUnitMax;                                         // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoUnitStart;                                       // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1193[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1194[0x1];                                     // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1195[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_1;                // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPartyIndexByActOrder_retValue;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1196[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_2;                // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActOrder4Panel_retValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountValidTargets_ValidNum;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1197[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1198[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPartyIndexByActOrder_retValue_1;       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPartyIndexByActOrder_retValue_2;       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1199[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_3;                // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPlayerLoopMax_retValue;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyLoopMax_retValue;           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartyStart_retValue;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyStart_retValue;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTargetTypePlayer_IsPlayer;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119A[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119B[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_4;                // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFlag2_ReturnValue;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119C[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_5;                // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInField_ReturnValue;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old) == 0x000008, "Wrong alignment on BattleTargetSelect_C_AddUnitIndexForPlayer_Old");
static_assert(sizeof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old) == 0x0000E0, "Wrong size on BattleTargetSelect_C_AddUnitIndexForPlayer_Old");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, Param_Index) == 0x000000, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, IsUseCamRail) == 0x000004, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::IsUseCamRail' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, IsLock) == 0x000005, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::IsLock' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, IsRecursion) == 0x000006, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::IsRecursion' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, Lo_OrderList) == 0x000008, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::Lo_OrderList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, Lo_ValidTargetNum) == 0x000018, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::Lo_ValidTargetNum' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, Lo_CurrentTargetIndex) == 0x00001C, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::Lo_CurrentTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, Lo_IsLock) == 0x000020, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::Lo_IsLock' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, Lo_IsUseCamRail) == 0x000021, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::Lo_IsUseCamRail' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, LoUnitMax) == 0x000024, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::LoUnitMax' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, LoUnitStart) == 0x000028, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::LoUnitStart' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, Lo_WaitTaskList) == 0x000030, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, Temp_bool_Variable) == 0x000040, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_Less_IntInt_ReturnValue) == 0x000042, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_Abs_Int_ReturnValue) == 0x000044, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, Temp_bool_Variable_1) == 0x000049, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, Temp_bool_Variable_2) == 0x00004A, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, Temp_bool_Variable_3) == 0x00004B, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004C, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_GetPartySystem_retValue) == 0x000050, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_GetPartySystem_retValue_1) == 0x000058, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_GetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_GetPartyIndexByActOrder_retValue) == 0x000060, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_GetPartyIndexByActOrder_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_GetPartySystem_retValue_2) == 0x000068, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_GetPartySystem_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_GetActOrder4Panel_retValue) == 0x000070, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_GetActOrder4Panel_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_CountValidTargets_ValidNum) == 0x000078, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_CountValidTargets_ValidNum' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_Less_IntInt_ReturnValue_2) == 0x00007C, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_Greater_IntInt_ReturnValue) == 0x00007D, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, K2Node_Select_Default) == 0x000080, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000084, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000085, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, K2Node_Select_Default_1) == 0x000088, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_GetPartyIndexByActOrder_retValue_1) == 0x00008C, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_GetPartyIndexByActOrder_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_GetPartyIndexByActOrder_retValue_2) == 0x000090, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_GetPartyIndexByActOrder_retValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_GetPartySystem_retValue_3) == 0x000098, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_GetPartySystem_retValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_const_GetPlayerLoopMax_retValue) == 0x0000A0, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_const_GetPlayerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_const_GetEnemyLoopMax_retValue) == 0x0000A4, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_const_GetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_const_GetPartyStart_retValue) == 0x0000A8, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_const_GetEnemyStart_retValue) == 0x0000AC, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_const_GetEnemyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_IsTargetTypePlayer_IsPlayer) == 0x0000B0, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_IsTargetTypePlayer_IsPlayer' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, K2Node_Select_Default_2) == 0x0000B4, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, K2Node_Select_Default_3) == 0x0000B8, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_GetPartySystem_retValue_4) == 0x0000C0, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_GetPartySystem_retValue_4' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_CheckFlag2_ReturnValue) == 0x0000C8, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_CheckFlag2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_GetPartySystem_retValue_5) == 0x0000D0, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_GetPartySystem_retValue_5' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_AddUnitIndexForPlayer_Old, CallFunc_IsInField_ReturnValue) == 0x0000D8, "Member 'BattleTargetSelect_C_AddUnitIndexForPlayer_Old::CallFunc_IsInField_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.PauseSelect
// 0x0018 (0x0018 - 0x0000)
struct BattleTargetSelect_C_PauseSelect final
{
public:
	bool                                          Pause;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_PauseSelect) == 0x000008, "Wrong alignment on BattleTargetSelect_C_PauseSelect");
static_assert(sizeof(BattleTargetSelect_C_PauseSelect) == 0x000018, "Wrong size on BattleTargetSelect_C_PauseSelect");
static_assert(offsetof(BattleTargetSelect_C_PauseSelect, Pause) == 0x000000, "Member 'BattleTargetSelect_C_PauseSelect::Pause' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PauseSelect, CallFunc_GetPartySystem_retValue) == 0x000008, "Member 'BattleTargetSelect_C_PauseSelect::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PauseSelect, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BattleTargetSelect_C_PauseSelect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.MakeResult
// 0x0088 (0x0088 - 0x0000)
struct BattleTargetSelect_C_MakeResult final
{
public:
	E_SKILL_TARGET                                TargetType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 Param_M_Select;                                    // 0x0008(0x0010)(Parm, OutParm)
	TArray<int32>                                 Param_Lo_List;                                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Lo_End;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Start;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0030(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Temp_byte_Variable_1;                              // 0x0032(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_2;                              // 0x0033(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_3;                              // 0x0040(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119F[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A0[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetAllIsTargetList_ReturnValue;           // 0x0058(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_GetSideIsTargetList_ReturnValue;          // 0x0068(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_GetSideIsTargetList_ReturnValue_1;        // 0x0078(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleTargetSelect_C_MakeResult) == 0x000008, "Wrong alignment on BattleTargetSelect_C_MakeResult");
static_assert(sizeof(BattleTargetSelect_C_MakeResult) == 0x000088, "Wrong size on BattleTargetSelect_C_MakeResult");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, TargetType) == 0x000000, "Member 'BattleTargetSelect_C_MakeResult::TargetType' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, Param_M_Select) == 0x000008, "Member 'BattleTargetSelect_C_MakeResult::Param_M_Select' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, Param_Lo_List) == 0x000018, "Member 'BattleTargetSelect_C_MakeResult::Param_Lo_List' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, Lo_End) == 0x000028, "Member 'BattleTargetSelect_C_MakeResult::Lo_End' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, Lo_Start) == 0x00002C, "Member 'BattleTargetSelect_C_MakeResult::Lo_Start' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, Temp_byte_Variable) == 0x000030, "Member 'BattleTargetSelect_C_MakeResult::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'BattleTargetSelect_C_MakeResult::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, Temp_byte_Variable_1) == 0x000032, "Member 'BattleTargetSelect_C_MakeResult::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, Temp_byte_Variable_2) == 0x000033, "Member 'BattleTargetSelect_C_MakeResult::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BattleTargetSelect_C_MakeResult::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BattleTargetSelect_C_MakeResult::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BattleTargetSelect_C_MakeResult::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, Temp_byte_Variable_3) == 0x000040, "Member 'BattleTargetSelect_C_MakeResult::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, CallFunc_Array_Get_Item) == 0x000044, "Member 'BattleTargetSelect_C_MakeResult::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BattleTargetSelect_C_MakeResult::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BattleTargetSelect_C_MakeResult::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, CallFunc_GetPartySystem_retValue) == 0x000050, "Member 'BattleTargetSelect_C_MakeResult::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, CallFunc_GetAllIsTargetList_ReturnValue) == 0x000058, "Member 'BattleTargetSelect_C_MakeResult::CallFunc_GetAllIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, CallFunc_GetSideIsTargetList_ReturnValue) == 0x000068, "Member 'BattleTargetSelect_C_MakeResult::CallFunc_GetSideIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_MakeResult, CallFunc_GetSideIsTargetList_ReturnValue_1) == 0x000078, "Member 'BattleTargetSelect_C_MakeResult::CallFunc_GetSideIsTargetList_ReturnValue_1' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.PrepareAcessors
// 0x0030 (0x0030 - 0x0000)
struct BattleTargetSelect_C_PrepareAcessors final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTUtilInterface>  K2Node_DynamicCast_AsBPI_PTUtil_Interface;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A1[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartyAccessor_retValue;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_PrepareAcessors) == 0x000008, "Wrong alignment on BattleTargetSelect_C_PrepareAcessors");
static_assert(sizeof(BattleTargetSelect_C_PrepareAcessors) == 0x000030, "Wrong size on BattleTargetSelect_C_PrepareAcessors");
static_assert(offsetof(BattleTargetSelect_C_PrepareAcessors, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BattleTargetSelect_C_PrepareAcessors::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PrepareAcessors, CallFunc_GetMainWork_retValue) == 0x000008, "Member 'BattleTargetSelect_C_PrepareAcessors::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PrepareAcessors, K2Node_DynamicCast_AsBPI_PTUtil_Interface) == 0x000010, "Member 'BattleTargetSelect_C_PrepareAcessors::K2Node_DynamicCast_AsBPI_PTUtil_Interface' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PrepareAcessors, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BattleTargetSelect_C_PrepareAcessors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_PrepareAcessors, CallFunc_GetPartyAccessor_retValue) == 0x000028, "Member 'BattleTargetSelect_C_PrepareAcessors::CallFunc_GetPartyAccessor_retValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.GetPTMemInterface
// 0x0030 (0x0030 - 0x0000)
struct BattleTargetSelect_C_GetPTMemInterface final
{
public:
	TScriptInterface<class IBPI_PTMemDataInterface> RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTMemDataInterface> K2Node_DynamicCast_AsBPI_PTMem_Data_Interface;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_GetPTMemInterface) == 0x000008, "Wrong alignment on BattleTargetSelect_C_GetPTMemInterface");
static_assert(sizeof(BattleTargetSelect_C_GetPTMemInterface) == 0x000030, "Wrong size on BattleTargetSelect_C_GetPTMemInterface");
static_assert(offsetof(BattleTargetSelect_C_GetPTMemInterface, RetValue) == 0x000000, "Member 'BattleTargetSelect_C_GetPTMemInterface::RetValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetPTMemInterface, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleTargetSelect_C_GetPTMemInterface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetPTMemInterface, K2Node_DynamicCast_AsBPI_PTMem_Data_Interface) == 0x000018, "Member 'BattleTargetSelect_C_GetPTMemInterface::K2Node_DynamicCast_AsBPI_PTMem_Data_Interface' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetPTMemInterface, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleTargetSelect_C_GetPTMemInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.GetMainInterface
// 0x0030 (0x0030 - 0x0000)
struct BattleTargetSelect_C_GetMainInterface final
{
public:
	TScriptInterface<class IBPI_MainInterface>    AsBPI_Main_Interface;                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MainInterface>    K2Node_DynamicCast_AsBPI_Main_Interface;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_GetMainInterface) == 0x000008, "Wrong alignment on BattleTargetSelect_C_GetMainInterface");
static_assert(sizeof(BattleTargetSelect_C_GetMainInterface) == 0x000030, "Wrong size on BattleTargetSelect_C_GetMainInterface");
static_assert(offsetof(BattleTargetSelect_C_GetMainInterface, AsBPI_Main_Interface) == 0x000000, "Member 'BattleTargetSelect_C_GetMainInterface::AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetMainInterface, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleTargetSelect_C_GetMainInterface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetMainInterface, K2Node_DynamicCast_AsBPI_Main_Interface) == 0x000018, "Member 'BattleTargetSelect_C_GetMainInterface::K2Node_DynamicCast_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetMainInterface, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleTargetSelect_C_GetMainInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.GetMainWorkBPI
// 0x0040 (0x0040 - 0x0000)
struct BattleTargetSelect_C_GetMainWorkBPI final
{
public:
	TScriptInterface<class IBPI_BattleMain_C>     RetValue;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleMain_C*                          K2Node_DynamicCast_AsBattle_Main;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A2[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     K2Node_DynamicCast_AsBPI_Battle_Main;              // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_GetMainWorkBPI) == 0x000008, "Wrong alignment on BattleTargetSelect_C_GetMainWorkBPI");
static_assert(sizeof(BattleTargetSelect_C_GetMainWorkBPI) == 0x000040, "Wrong size on BattleTargetSelect_C_GetMainWorkBPI");
static_assert(offsetof(BattleTargetSelect_C_GetMainWorkBPI, RetValue) == 0x000000, "Member 'BattleTargetSelect_C_GetMainWorkBPI::RetValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetMainWorkBPI, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleTargetSelect_C_GetMainWorkBPI::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetMainWorkBPI, K2Node_DynamicCast_AsBattle_Main) == 0x000018, "Member 'BattleTargetSelect_C_GetMainWorkBPI::K2Node_DynamicCast_AsBattle_Main' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetMainWorkBPI, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BattleTargetSelect_C_GetMainWorkBPI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetMainWorkBPI, K2Node_DynamicCast_AsBPI_Battle_Main) == 0x000028, "Member 'BattleTargetSelect_C_GetMainWorkBPI::K2Node_DynamicCast_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetMainWorkBPI, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BattleTargetSelect_C_GetMainWorkBPI::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.SetTargetAll
// 0x0038 (0x0038 - 0x0000)
struct BattleTargetSelect_C_SetTargetAll final
{
public:
	E_BTL_SIDE                                    Side;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A3[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSideIsTargetList_ReturnValue;          // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_SetTargetAll) == 0x000008, "Wrong alignment on BattleTargetSelect_C_SetTargetAll");
static_assert(sizeof(BattleTargetSelect_C_SetTargetAll) == 0x000038, "Wrong size on BattleTargetSelect_C_SetTargetAll");
static_assert(offsetof(BattleTargetSelect_C_SetTargetAll, Side) == 0x000000, "Member 'BattleTargetSelect_C_SetTargetAll::Side' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetTargetAll, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BattleTargetSelect_C_SetTargetAll::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetTargetAll, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BattleTargetSelect_C_SetTargetAll::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetTargetAll, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BattleTargetSelect_C_SetTargetAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetTargetAll, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattleTargetSelect_C_SetTargetAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetTargetAll, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattleTargetSelect_C_SetTargetAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetTargetAll, CallFunc_GetPartySystem_retValue) == 0x000010, "Member 'BattleTargetSelect_C_SetTargetAll::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetTargetAll, CallFunc_GetSideIsTargetList_ReturnValue) == 0x000018, "Member 'BattleTargetSelect_C_SetTargetAll::CallFunc_GetSideIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetTargetAll, CallFunc_Array_Get_Item) == 0x000028, "Member 'BattleTargetSelect_C_SetTargetAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetTargetAll, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BattleTargetSelect_C_SetTargetAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetTargetAll, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BattleTargetSelect_C_SetTargetAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.GetPartyUtilInterface
// 0x0010 (0x0010 - 0x0000)
struct BattleTargetSelect_C_GetPartyUtilInterface final
{
public:
	TScriptInterface<class IBPI_PTUtilInterface>  AsBPI_PTUtil_Interface;                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_GetPartyUtilInterface) == 0x000008, "Wrong alignment on BattleTargetSelect_C_GetPartyUtilInterface");
static_assert(sizeof(BattleTargetSelect_C_GetPartyUtilInterface) == 0x000010, "Wrong size on BattleTargetSelect_C_GetPartyUtilInterface");
static_assert(offsetof(BattleTargetSelect_C_GetPartyUtilInterface, AsBPI_PTUtil_Interface) == 0x000000, "Member 'BattleTargetSelect_C_GetPartyUtilInterface::AsBPI_PTUtil_Interface' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.IsInField
// 0x0030 (0x0030 - 0x0000)
struct BattleTargetSelect_C_IsInField final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InField;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A4[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTUtilInterface>  CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetAllIsInFieldList_ReturnValue;       // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_IsInField) == 0x000008, "Wrong alignment on BattleTargetSelect_C_IsInField");
static_assert(sizeof(BattleTargetSelect_C_IsInField) == 0x000030, "Wrong size on BattleTargetSelect_C_IsInField");
static_assert(offsetof(BattleTargetSelect_C_IsInField, PartyIndex) == 0x000000, "Member 'BattleTargetSelect_C_IsInField::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsInField, InField) == 0x000004, "Member 'BattleTargetSelect_C_IsInField::InField' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsInField, CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface) == 0x000008, "Member 'BattleTargetSelect_C_IsInField::CallFunc_GetPartyUtilInterface_AsBPI_PTUtil_Interface' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsInField, CallFunc_BI_GetAllIsInFieldList_ReturnValue) == 0x000018, "Member 'BattleTargetSelect_C_IsInField::CallFunc_BI_GetAllIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsInField, CallFunc_Array_Contains_ReturnValue) == 0x000028, "Member 'BattleTargetSelect_C_IsInField::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.InitializeSelectResult
// 0x0018 (0x0018 - 0x0000)
struct BattleTargetSelect_C_InitializeSelectResult final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x000C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A5[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_InitializeSelectResult) == 0x000004, "Wrong alignment on BattleTargetSelect_C_InitializeSelectResult");
static_assert(sizeof(BattleTargetSelect_C_InitializeSelectResult) == 0x000018, "Wrong size on BattleTargetSelect_C_InitializeSelectResult");
static_assert(offsetof(BattleTargetSelect_C_InitializeSelectResult, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattleTargetSelect_C_InitializeSelectResult::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeSelectResult, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattleTargetSelect_C_InitializeSelectResult::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeSelectResult, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattleTargetSelect_C_InitializeSelectResult::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeSelectResult, Temp_byte_Variable) == 0x00000C, "Member 'BattleTargetSelect_C_InitializeSelectResult::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeSelectResult, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BattleTargetSelect_C_InitializeSelectResult::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_InitializeSelectResult, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BattleTargetSelect_C_InitializeSelectResult::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.GetHeroIndex
// 0x0018 (0x0018 - 0x0000)
struct BattleTargetSelect_C_GetHeroIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_GetHeroIndex) == 0x000008, "Wrong alignment on BattleTargetSelect_C_GetHeroIndex");
static_assert(sizeof(BattleTargetSelect_C_GetHeroIndex) == 0x000018, "Wrong size on BattleTargetSelect_C_GetHeroIndex");
static_assert(offsetof(BattleTargetSelect_C_GetHeroIndex, ReturnValue) == 0x000000, "Member 'BattleTargetSelect_C_GetHeroIndex::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetHeroIndex, CallFunc_GetPartySystem_retValue) == 0x000008, "Member 'BattleTargetSelect_C_GetHeroIndex::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_GetHeroIndex, CallFunc_GetHeroIndex_ReturnValue) == 0x000010, "Member 'BattleTargetSelect_C_GetHeroIndex::CallFunc_GetHeroIndex_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.CalcDefenceAishou
// 0x0120 (0x0120 - 0x0000)
struct BattleTargetSelect_C_CalcDefenceAishou final
{
public:
	E_ATTRIBUTE_TYPE                              Aishou;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A8[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0018(0x0100)(ConstParm)
	E_ATTRIBUTE_TYPE                              CallFunc_SkillBaseDataGetValue_AtkAttr_ReturnValue; // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_CalcDefenceAishou) == 0x000008, "Wrong alignment on BattleTargetSelect_C_CalcDefenceAishou");
static_assert(sizeof(BattleTargetSelect_C_CalcDefenceAishou) == 0x000120, "Wrong size on BattleTargetSelect_C_CalcDefenceAishou");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishou, Aishou) == 0x000000, "Member 'BattleTargetSelect_C_CalcDefenceAishou::Aishou' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishou, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BattleTargetSelect_C_CalcDefenceAishou::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishou, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BattleTargetSelect_C_CalcDefenceAishou::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishou, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000003, "Member 'BattleTargetSelect_C_CalcDefenceAishou::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishou, CallFunc_GetMainWork_retValue) == 0x000008, "Member 'BattleTargetSelect_C_CalcDefenceAishou::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishou, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'BattleTargetSelect_C_CalcDefenceAishou::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishou, CallFunc_BooleanOR_ReturnValue_1) == 0x000011, "Member 'BattleTargetSelect_C_CalcDefenceAishou::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishou, CallFunc_BooleanOR_ReturnValue_2) == 0x000012, "Member 'BattleTargetSelect_C_CalcDefenceAishou::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishou, CallFunc_GetSkillBaseData_ReturnValue) == 0x000018, "Member 'BattleTargetSelect_C_CalcDefenceAishou::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishou, CallFunc_SkillBaseDataGetValue_AtkAttr_ReturnValue) == 0x000118, "Member 'BattleTargetSelect_C_CalcDefenceAishou::CallFunc_SkillBaseDataGetValue_AtkAttr_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.IsTargetTypeEnemy
// 0x000A (0x000A - 0x0000)
struct BattleTargetSelect_C_IsTargetTypeEnemy final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_IsTargetTypeEnemy) == 0x000001, "Wrong alignment on BattleTargetSelect_C_IsTargetTypeEnemy");
static_assert(sizeof(BattleTargetSelect_C_IsTargetTypeEnemy) == 0x00000A, "Wrong size on BattleTargetSelect_C_IsTargetTypeEnemy");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypeEnemy, ReturnValue) == 0x000000, "Member 'BattleTargetSelect_C_IsTargetTypeEnemy::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypeEnemy, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BattleTargetSelect_C_IsTargetTypeEnemy::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypeEnemy, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BattleTargetSelect_C_IsTargetTypeEnemy::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypeEnemy, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000003, "Member 'BattleTargetSelect_C_IsTargetTypeEnemy::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypeEnemy, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000004, "Member 'BattleTargetSelect_C_IsTargetTypeEnemy::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypeEnemy, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000005, "Member 'BattleTargetSelect_C_IsTargetTypeEnemy::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypeEnemy, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'BattleTargetSelect_C_IsTargetTypeEnemy::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypeEnemy, CallFunc_BooleanOR_ReturnValue_1) == 0x000007, "Member 'BattleTargetSelect_C_IsTargetTypeEnemy::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypeEnemy, CallFunc_BooleanOR_ReturnValue_2) == 0x000008, "Member 'BattleTargetSelect_C_IsTargetTypeEnemy::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_IsTargetTypeEnemy, CallFunc_BooleanOR_ReturnValue_3) == 0x000009, "Member 'BattleTargetSelect_C_IsTargetTypeEnemy::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.CalcDefenceAishouArray
// 0x0148 (0x0148 - 0x0000)
struct BattleTargetSelect_C_CalcDefenceAishouArray final
{
public:
	TArray<E_ATTRIBUTE_TYPE>                      Aishou;                                            // 0x0000(0x0010)(Parm, OutParm)
	TArray<E_ATTRIBUTE_TYPE>                      K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A9[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11AA[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0038(0x0100)(ConstParm)
	TArray<E_ATTRIBUTE_TYPE>                      CallFunc_SkillBaseDataGetValue_AtkAttrTArray_ReturnValue; // 0x0138(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleTargetSelect_C_CalcDefenceAishouArray) == 0x000008, "Wrong alignment on BattleTargetSelect_C_CalcDefenceAishouArray");
static_assert(sizeof(BattleTargetSelect_C_CalcDefenceAishouArray) == 0x000148, "Wrong size on BattleTargetSelect_C_CalcDefenceAishouArray");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishouArray, Aishou) == 0x000000, "Member 'BattleTargetSelect_C_CalcDefenceAishouArray::Aishou' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishouArray, K2Node_MakeArray_Array) == 0x000010, "Member 'BattleTargetSelect_C_CalcDefenceAishouArray::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishouArray, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BattleTargetSelect_C_CalcDefenceAishouArray::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishouArray, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000021, "Member 'BattleTargetSelect_C_CalcDefenceAishouArray::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishouArray, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000022, "Member 'BattleTargetSelect_C_CalcDefenceAishouArray::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishouArray, CallFunc_GetMainWork_retValue) == 0x000028, "Member 'BattleTargetSelect_C_CalcDefenceAishouArray::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishouArray, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'BattleTargetSelect_C_CalcDefenceAishouArray::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishouArray, CallFunc_BooleanOR_ReturnValue_1) == 0x000031, "Member 'BattleTargetSelect_C_CalcDefenceAishouArray::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishouArray, CallFunc_BooleanOR_ReturnValue_2) == 0x000032, "Member 'BattleTargetSelect_C_CalcDefenceAishouArray::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishouArray, CallFunc_GetSkillBaseData_ReturnValue) == 0x000038, "Member 'BattleTargetSelect_C_CalcDefenceAishouArray::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcDefenceAishouArray, CallFunc_SkillBaseDataGetValue_AtkAttrTArray_ReturnValue) == 0x000138, "Member 'BattleTargetSelect_C_CalcDefenceAishouArray::CallFunc_SkillBaseDataGetValue_AtkAttrTArray_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.SetExpectionCharaPanel
// 0x00D0 (0x00D0 - 0x0000)
struct BattleTargetSelect_C_SetExpectionCharaPanel final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sw;                                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsAllTarget;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11AB[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_PartyIndex;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11AC[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_TargetList;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11AD[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11AE[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcExeptionValue_HP_Exeption;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcExeptionValue_MP_Exeption;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11AF[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B0[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B1[0x1];                                     // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSideIsTargetList_ReturnValue;          // 0x0070(0x0010)(ReferenceParm)
	bool                                          K2Node_Select_Default;                             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B2[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B3[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBattleActionTaskFactory_C*             CallFunc_GetTaskFactory_retValue;                  // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPartyPanelCtrlTask_retPecID;           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B4[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBattleActionTaskFactory_C*             CallFunc_GetTaskFactory_retValue_1;                // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddPartyPanelCtrlTask_retPecID_1;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_SetExpectionCharaPanel) == 0x000008, "Wrong alignment on BattleTargetSelect_C_SetExpectionCharaPanel");
static_assert(sizeof(BattleTargetSelect_C_SetExpectionCharaPanel) == 0x0000D0, "Wrong size on BattleTargetSelect_C_SetExpectionCharaPanel");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, Param_Index) == 0x000000, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, Sw) == 0x000004, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::Sw' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, IsAllTarget) == 0x000005, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::IsAllTarget' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, Lo_PartyIndex) == 0x000008, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, Lo_TargetList) == 0x000010, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::Lo_TargetList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, Lo_WaitTaskList) == 0x000020, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, Temp_bool_Variable) == 0x000048, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_CalcExeptionValue_HP_Exeption) == 0x00004C, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_CalcExeptionValue_HP_Exeption' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_CalcExeptionValue_MP_Exeption) == 0x000050, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_CalcExeptionValue_MP_Exeption' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000054, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_Multiply_IntInt_ReturnValue) == 0x000058, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00005C, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000060, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000064, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_Not_PreBool_ReturnValue) == 0x000065, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_BooleanOR_ReturnValue) == 0x000066, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_GetPartySystem_retValue) == 0x000068, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_GetSideIsTargetList_ReturnValue) == 0x000070, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_GetSideIsTargetList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, K2Node_Select_Default) == 0x000080, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_SelectInt_ReturnValue) == 0x000084, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_SelectInt_ReturnValue_1) == 0x000088, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_GetObjectName_ReturnValue) == 0x000090, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_GetTaskFactory_retValue) == 0x0000A0, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_GetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_AddPartyPanelCtrlTask_retPecID) == 0x0000A8, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_AddPartyPanelCtrlTask_retPecID' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_GetObjectName_ReturnValue_1) == 0x0000B0, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_GetTaskFactory_retValue_1) == 0x0000C0, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_GetTaskFactory_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_SetExpectionCharaPanel, CallFunc_AddPartyPanelCtrlTask_retPecID_1) == 0x0000C8, "Member 'BattleTargetSelect_C_SetExpectionCharaPanel::CallFunc_AddPartyPanelCtrlTask_retPecID_1' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.CalcExeptionValue
// 0x0080 (0x0080 - 0x0000)
struct BattleTargetSelect_C_CalcExeptionValue final
{
public:
	int32                                         TargetIndex;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HP_Exeption;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MP_Exeption;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B5[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B6[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTUtilInterface>  CallFunc_BI_GetSkillCureMPValueExpected_self_CastInput; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetSkillCureMPValueExpected_ReturnValue; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B7[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTUtilInterface>  CallFunc_BI_GetItemlCureMPValueExpected_self_CastInput; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetItemlCureMPValueExpected_ReturnValue; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B8[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTUtilInterface>  CallFunc_BI_GetSkillCureHPValueExpected_self_CastInput; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetSkillCureHPValueExpected_ReturnValue; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTUtilInterface>  CallFunc_BI_GetItemlCureHPValueExpected_self_CastInput; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetItemlCureHPValueExpected_ReturnValue; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_CalcExeptionValue) == 0x000008, "Wrong alignment on BattleTargetSelect_C_CalcExeptionValue");
static_assert(sizeof(BattleTargetSelect_C_CalcExeptionValue) == 0x000080, "Wrong size on BattleTargetSelect_C_CalcExeptionValue");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, TargetIndex) == 0x000000, "Member 'BattleTargetSelect_C_CalcExeptionValue::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, HP_Exeption) == 0x000004, "Member 'BattleTargetSelect_C_CalcExeptionValue::HP_Exeption' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, MP_Exeption) == 0x000008, "Member 'BattleTargetSelect_C_CalcExeptionValue::MP_Exeption' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BattleTargetSelect_C_CalcExeptionValue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, CallFunc_Less_IntInt_ReturnValue_1) == 0x00000D, "Member 'BattleTargetSelect_C_CalcExeptionValue::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'BattleTargetSelect_C_CalcExeptionValue::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, CallFunc_GetMainWork_retValue) == 0x000010, "Member 'BattleTargetSelect_C_CalcExeptionValue::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'BattleTargetSelect_C_CalcExeptionValue::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, CallFunc_BI_GetSkillCureMPValueExpected_self_CastInput) == 0x000020, "Member 'BattleTargetSelect_C_CalcExeptionValue::CallFunc_BI_GetSkillCureMPValueExpected_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, CallFunc_BI_GetSkillCureMPValueExpected_ReturnValue) == 0x000030, "Member 'BattleTargetSelect_C_CalcExeptionValue::CallFunc_BI_GetSkillCureMPValueExpected_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, CallFunc_BI_GetItemlCureMPValueExpected_self_CastInput) == 0x000038, "Member 'BattleTargetSelect_C_CalcExeptionValue::CallFunc_BI_GetItemlCureMPValueExpected_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, CallFunc_BI_GetItemlCureMPValueExpected_ReturnValue) == 0x000048, "Member 'BattleTargetSelect_C_CalcExeptionValue::CallFunc_BI_GetItemlCureMPValueExpected_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BattleTargetSelect_C_CalcExeptionValue::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, CallFunc_BI_GetSkillCureHPValueExpected_self_CastInput) == 0x000050, "Member 'BattleTargetSelect_C_CalcExeptionValue::CallFunc_BI_GetSkillCureHPValueExpected_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, CallFunc_BI_GetSkillCureHPValueExpected_ReturnValue) == 0x000060, "Member 'BattleTargetSelect_C_CalcExeptionValue::CallFunc_BI_GetSkillCureHPValueExpected_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, CallFunc_SelectInt_ReturnValue) == 0x000064, "Member 'BattleTargetSelect_C_CalcExeptionValue::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, CallFunc_BI_GetItemlCureHPValueExpected_self_CastInput) == 0x000068, "Member 'BattleTargetSelect_C_CalcExeptionValue::CallFunc_BI_GetItemlCureHPValueExpected_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcExeptionValue, CallFunc_BI_GetItemlCureHPValueExpected_ReturnValue) == 0x000078, "Member 'BattleTargetSelect_C_CalcExeptionValue::CallFunc_BI_GetItemlCureHPValueExpected_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.CalcPenetrationEfficacy
// 0x0018 (0x0018 - 0x0000)
struct BattleTargetSelect_C_CalcPenetrationEfficacy final
{
public:
	bool                                          IsPenetration;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleMain_C*                          CallFunc_GetMainWork_retValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPenetrationEfficacy_IsPenetration;   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_CalcPenetrationEfficacy) == 0x000008, "Wrong alignment on BattleTargetSelect_C_CalcPenetrationEfficacy");
static_assert(sizeof(BattleTargetSelect_C_CalcPenetrationEfficacy) == 0x000018, "Wrong size on BattleTargetSelect_C_CalcPenetrationEfficacy");
static_assert(offsetof(BattleTargetSelect_C_CalcPenetrationEfficacy, IsPenetration) == 0x000000, "Member 'BattleTargetSelect_C_CalcPenetrationEfficacy::IsPenetration' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcPenetrationEfficacy, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BattleTargetSelect_C_CalcPenetrationEfficacy::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcPenetrationEfficacy, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BattleTargetSelect_C_CalcPenetrationEfficacy::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcPenetrationEfficacy, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000003, "Member 'BattleTargetSelect_C_CalcPenetrationEfficacy::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcPenetrationEfficacy, CallFunc_GetMainWork_retValue) == 0x000008, "Member 'BattleTargetSelect_C_CalcPenetrationEfficacy::CallFunc_GetMainWork_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcPenetrationEfficacy, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'BattleTargetSelect_C_CalcPenetrationEfficacy::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcPenetrationEfficacy, CallFunc_BooleanOR_ReturnValue_1) == 0x000011, "Member 'BattleTargetSelect_C_CalcPenetrationEfficacy::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcPenetrationEfficacy, CallFunc_CheckPenetrationEfficacy_IsPenetration) == 0x000012, "Member 'BattleTargetSelect_C_CalcPenetrationEfficacy::CallFunc_CheckPenetrationEfficacy_IsPenetration' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.CalcSelfSideFirstTarget
// 0x0020 (0x0020 - 0x0000)
struct BattleTargetSelect_C_CalcSelfSideFirstTarget final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTMemDataInterface> CallFunc_GetPTMemInterface_retValue;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetStartPartyIndexWhenPlayerTargetSelect_ReturnValue; // 0x0018(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_CalcSelfSideFirstTarget) == 0x000008, "Wrong alignment on BattleTargetSelect_C_CalcSelfSideFirstTarget");
static_assert(sizeof(BattleTargetSelect_C_CalcSelfSideFirstTarget) == 0x000020, "Wrong size on BattleTargetSelect_C_CalcSelfSideFirstTarget");
static_assert(offsetof(BattleTargetSelect_C_CalcSelfSideFirstTarget, PartyIndex) == 0x000000, "Member 'BattleTargetSelect_C_CalcSelfSideFirstTarget::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcSelfSideFirstTarget, CallFunc_GetHeroIndex_ReturnValue) == 0x000004, "Member 'BattleTargetSelect_C_CalcSelfSideFirstTarget::CallFunc_GetHeroIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcSelfSideFirstTarget, CallFunc_GetPTMemInterface_retValue) == 0x000008, "Member 'BattleTargetSelect_C_CalcSelfSideFirstTarget::CallFunc_GetPTMemInterface_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcSelfSideFirstTarget, CallFunc_BI_GetStartPartyIndexWhenPlayerTargetSelect_ReturnValue) == 0x000018, "Member 'BattleTargetSelect_C_CalcSelfSideFirstTarget::CallFunc_BI_GetStartPartyIndexWhenPlayerTargetSelect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_CalcSelfSideFirstTarget, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BattleTargetSelect_C_CalcSelfSideFirstTarget::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.DirectSetUnitIndex
// 0x0078 (0x0078 - 0x0000)
struct BattleTargetSelect_C_DirectSetUnitIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUseCamRail;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLock;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsNotSetCharSelect;                                // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsNotSetCharSelect;                             // 0x0007(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Lo_ValidTargetNum;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_CurrentTargetIndex;                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsLock;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsUseCamRail;                                   // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11BA[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LoUnitMax;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoUnitStart;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11BB[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11BC[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountValidTargets_ValidNum;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11BD[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue;                  // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPlayerLoopMax_retValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyLoopMax_retValue;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetPartyStart_retValue;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_const_GetEnemyStart_retValue;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTargetTypePlayer_IsPlayer;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11BE[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11BF[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBattlePartySystem_C*                   CallFunc_GetPartySystem_retValue_1;                // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFlag2_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInField_InField;                        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_DirectSetUnitIndex) == 0x000008, "Wrong alignment on BattleTargetSelect_C_DirectSetUnitIndex");
static_assert(sizeof(BattleTargetSelect_C_DirectSetUnitIndex) == 0x000078, "Wrong size on BattleTargetSelect_C_DirectSetUnitIndex");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, Param_Index) == 0x000000, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, IsUseCamRail) == 0x000004, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::IsUseCamRail' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, IsLock) == 0x000005, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::IsLock' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, IsNotSetCharSelect) == 0x000006, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::IsNotSetCharSelect' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, Lo_IsNotSetCharSelect) == 0x000007, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::Lo_IsNotSetCharSelect' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, Lo_ValidTargetNum) == 0x000008, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::Lo_ValidTargetNum' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, Lo_CurrentTargetIndex) == 0x00000C, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::Lo_CurrentTargetIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, Lo_IsLock) == 0x000010, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::Lo_IsLock' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, Lo_IsUseCamRail) == 0x000011, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::Lo_IsUseCamRail' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, LoUnitMax) == 0x000014, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::LoUnitMax' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, LoUnitStart) == 0x000018, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::LoUnitStart' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, Lo_WaitTaskList) == 0x000020, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, Temp_bool_Variable) == 0x000030, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, Temp_bool_Variable_1) == 0x000031, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, CallFunc_CountValidTargets_ValidNum) == 0x000034, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::CallFunc_CountValidTargets_ValidNum' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000039, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, CallFunc_GetPartySystem_retValue) == 0x000040, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::CallFunc_GetPartySystem_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, CallFunc_const_GetPlayerLoopMax_retValue) == 0x000048, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::CallFunc_const_GetPlayerLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, CallFunc_const_GetEnemyLoopMax_retValue) == 0x00004C, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::CallFunc_const_GetEnemyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, CallFunc_const_GetPartyStart_retValue) == 0x000050, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::CallFunc_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, CallFunc_const_GetEnemyStart_retValue) == 0x000054, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::CallFunc_const_GetEnemyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, CallFunc_IsTargetTypePlayer_IsPlayer) == 0x000058, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::CallFunc_IsTargetTypePlayer_IsPlayer' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, K2Node_Select_Default) == 0x00005C, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, K2Node_Select_Default_1) == 0x000060, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, CallFunc_GetPartySystem_retValue_1) == 0x000068, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::CallFunc_GetPartySystem_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, CallFunc_CheckFlag2_ReturnValue) == 0x000070, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::CallFunc_CheckFlag2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_DirectSetUnitIndex, CallFunc_IsInField_InField) == 0x000071, "Member 'BattleTargetSelect_C_DirectSetUnitIndex::CallFunc_IsInField_InField' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.BI_GetCurrentTargetType
// 0x0002 (0x0002 - 0x0000)
struct BattleTargetSelect_C_BI_GetCurrentTargetType final
{
public:
	E_SKILL_TARGET                                TargetType;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                CallFunc_GetCurrentTargetType_TargetType;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_BI_GetCurrentTargetType) == 0x000001, "Wrong alignment on BattleTargetSelect_C_BI_GetCurrentTargetType");
static_assert(sizeof(BattleTargetSelect_C_BI_GetCurrentTargetType) == 0x000002, "Wrong size on BattleTargetSelect_C_BI_GetCurrentTargetType");
static_assert(offsetof(BattleTargetSelect_C_BI_GetCurrentTargetType, TargetType) == 0x000000, "Member 'BattleTargetSelect_C_BI_GetCurrentTargetType::TargetType' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_GetCurrentTargetType, CallFunc_GetCurrentTargetType_TargetType) == 0x000001, "Member 'BattleTargetSelect_C_BI_GetCurrentTargetType::CallFunc_GetCurrentTargetType_TargetType' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.BI_CalcLookAtGlobalPos
// 0x002C (0x002C - 0x0000)
struct BattleTargetSelect_C_BI_CalcLookAtGlobalPos final
{
public:
	E_SKILL_TARGET                                TargetType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C0[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GlobalPos;                                         // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11C1[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcLookAtGlobalPos_New_GlobalPos;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcLookAtGlobalPos_New_IsValid;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_BI_CalcLookAtGlobalPos) == 0x000004, "Wrong alignment on BattleTargetSelect_C_BI_CalcLookAtGlobalPos");
static_assert(sizeof(BattleTargetSelect_C_BI_CalcLookAtGlobalPos) == 0x00002C, "Wrong size on BattleTargetSelect_C_BI_CalcLookAtGlobalPos");
static_assert(offsetof(BattleTargetSelect_C_BI_CalcLookAtGlobalPos, TargetType) == 0x000000, "Member 'BattleTargetSelect_C_BI_CalcLookAtGlobalPos::TargetType' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_CalcLookAtGlobalPos, SocketName) == 0x000004, "Member 'BattleTargetSelect_C_BI_CalcLookAtGlobalPos::SocketName' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_CalcLookAtGlobalPos, GlobalPos) == 0x00000C, "Member 'BattleTargetSelect_C_BI_CalcLookAtGlobalPos::GlobalPos' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_CalcLookAtGlobalPos, IsValid) == 0x000018, "Member 'BattleTargetSelect_C_BI_CalcLookAtGlobalPos::IsValid' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_CalcLookAtGlobalPos, CallFunc_CalcLookAtGlobalPos_New_GlobalPos) == 0x00001C, "Member 'BattleTargetSelect_C_BI_CalcLookAtGlobalPos::CallFunc_CalcLookAtGlobalPos_New_GlobalPos' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_CalcLookAtGlobalPos, CallFunc_CalcLookAtGlobalPos_New_IsValid) == 0x000028, "Member 'BattleTargetSelect_C_BI_CalcLookAtGlobalPos::CallFunc_CalcLookAtGlobalPos_New_IsValid' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.BI_GetInvTargetIndex
// 0x0030 (0x0030 - 0x0000)
struct BattleTargetSelect_C_BI_GetInvTargetIndex final
{
public:
	int32                                         TargetIndex;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11C2[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetInvSideOneStartIndex_retValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTMemDataInterface> CallFunc_GetPTMemInterface_retValue;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_SIDE                                    CallFunc_BI_GetSide_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsInField_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11C4[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_BI_GetInvTargetIndex) == 0x000008, "Wrong alignment on BattleTargetSelect_C_BI_GetInvTargetIndex");
static_assert(sizeof(BattleTargetSelect_C_BI_GetInvTargetIndex) == 0x000030, "Wrong size on BattleTargetSelect_C_BI_GetInvTargetIndex");
static_assert(offsetof(BattleTargetSelect_C_BI_GetInvTargetIndex, TargetIndex) == 0x000000, "Member 'BattleTargetSelect_C_BI_GetInvTargetIndex::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_GetInvTargetIndex, Temp_bool_Variable) == 0x000004, "Member 'BattleTargetSelect_C_BI_GetInvTargetIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_GetInvTargetIndex, CallFunc_GetInvSideOneStartIndex_retValue) == 0x000008, "Member 'BattleTargetSelect_C_BI_GetInvTargetIndex::CallFunc_GetInvSideOneStartIndex_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_GetInvTargetIndex, CallFunc_GetPTMemInterface_retValue) == 0x000010, "Member 'BattleTargetSelect_C_BI_GetInvTargetIndex::CallFunc_GetPTMemInterface_retValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_GetInvTargetIndex, CallFunc_BI_GetSide_ReturnValue) == 0x000020, "Member 'BattleTargetSelect_C_BI_GetInvTargetIndex::CallFunc_BI_GetSide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_GetInvTargetIndex, CallFunc_BI_IsInField_ReturnValue) == 0x000021, "Member 'BattleTargetSelect_C_BI_GetInvTargetIndex::CallFunc_BI_IsInField_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_GetInvTargetIndex, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000022, "Member 'BattleTargetSelect_C_BI_GetInvTargetIndex::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_GetInvTargetIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000023, "Member 'BattleTargetSelect_C_BI_GetInvTargetIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_GetInvTargetIndex, CallFunc_BooleanOR_ReturnValue) == 0x000024, "Member 'BattleTargetSelect_C_BI_GetInvTargetIndex::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_GetInvTargetIndex, K2Node_Select_Default) == 0x000028, "Member 'BattleTargetSelect_C_BI_GetInvTargetIndex::K2Node_Select_Default' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.BI_DrawClearAll
// 0x0001 (0x0001 - 0x0000)
struct BattleTargetSelect_C_BI_DrawClearAll final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_BI_DrawClearAll) == 0x000001, "Wrong alignment on BattleTargetSelect_C_BI_DrawClearAll");
static_assert(sizeof(BattleTargetSelect_C_BI_DrawClearAll) == 0x000001, "Wrong size on BattleTargetSelect_C_BI_DrawClearAll");
static_assert(offsetof(BattleTargetSelect_C_BI_DrawClearAll, NoUse) == 0x000000, "Member 'BattleTargetSelect_C_BI_DrawClearAll::NoUse' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.BI_SetInvTargetIndex
// 0x0008 (0x0008 - 0x0000)
struct BattleTargetSelect_C_BI_SetInvTargetIndex final
{
public:
	int32                                         TargetIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_BI_SetInvTargetIndex) == 0x000004, "Wrong alignment on BattleTargetSelect_C_BI_SetInvTargetIndex");
static_assert(sizeof(BattleTargetSelect_C_BI_SetInvTargetIndex) == 0x000008, "Wrong size on BattleTargetSelect_C_BI_SetInvTargetIndex");
static_assert(offsetof(BattleTargetSelect_C_BI_SetInvTargetIndex, TargetIndex) == 0x000000, "Member 'BattleTargetSelect_C_BI_SetInvTargetIndex::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetInvTargetIndex, NoUse) == 0x000004, "Member 'BattleTargetSelect_C_BI_SetInvTargetIndex::NoUse' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.BI_SetOverrideCommandCamera
// 0x0002 (0x0002 - 0x0000)
struct BattleTargetSelect_C_BI_SetOverrideCommandCamera final
{
public:
	bool                                          IsOverride;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoUse;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_BI_SetOverrideCommandCamera) == 0x000001, "Wrong alignment on BattleTargetSelect_C_BI_SetOverrideCommandCamera");
static_assert(sizeof(BattleTargetSelect_C_BI_SetOverrideCommandCamera) == 0x000002, "Wrong size on BattleTargetSelect_C_BI_SetOverrideCommandCamera");
static_assert(offsetof(BattleTargetSelect_C_BI_SetOverrideCommandCamera, IsOverride) == 0x000000, "Member 'BattleTargetSelect_C_BI_SetOverrideCommandCamera::IsOverride' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetOverrideCommandCamera, NoUse) == 0x000001, "Member 'BattleTargetSelect_C_BI_SetOverrideCommandCamera::NoUse' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.BI_IsOverrideCommandCamera
// 0x0001 (0x0001 - 0x0000)
struct BattleTargetSelect_C_BI_IsOverrideCommandCamera final
{
public:
	bool                                          IsOverride;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_BI_IsOverrideCommandCamera) == 0x000001, "Wrong alignment on BattleTargetSelect_C_BI_IsOverrideCommandCamera");
static_assert(sizeof(BattleTargetSelect_C_BI_IsOverrideCommandCamera) == 0x000001, "Wrong size on BattleTargetSelect_C_BI_IsOverrideCommandCamera");
static_assert(offsetof(BattleTargetSelect_C_BI_IsOverrideCommandCamera, IsOverride) == 0x000000, "Member 'BattleTargetSelect_C_BI_IsOverrideCommandCamera::IsOverride' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.BI_SetPlayerTargetIndex
// 0x0008 (0x0008 - 0x0000)
struct BattleTargetSelect_C_BI_SetPlayerTargetIndex final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_BI_SetPlayerTargetIndex) == 0x000004, "Wrong alignment on BattleTargetSelect_C_BI_SetPlayerTargetIndex");
static_assert(sizeof(BattleTargetSelect_C_BI_SetPlayerTargetIndex) == 0x000008, "Wrong size on BattleTargetSelect_C_BI_SetPlayerTargetIndex");
static_assert(offsetof(BattleTargetSelect_C_BI_SetPlayerTargetIndex, PartyIndex) == 0x000000, "Member 'BattleTargetSelect_C_BI_SetPlayerTargetIndex::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetPlayerTargetIndex, NoUse) == 0x000004, "Member 'BattleTargetSelect_C_BI_SetPlayerTargetIndex::NoUse' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.BI_SetTargetType_Item
// 0x0178 (0x0178 - 0x0000)
struct BattleTargetSelect_C_BI_SetTargetType_Item final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11C5[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUseItemData                           CallFunc_GetUseItemData_ReturnValue;               // 0x0008(0x005C)(ConstParm, NoDestructor)
	E_SKILL_TARGET                                Temp_byte_Variable;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_UseItemDataGetValue_All_ReturnValue;      // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11C6[0x1];                                     // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_UseItemDataGetValue_SkillNo_ReturnValue;  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C7[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0070(0x0100)(ConstParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                CallFunc_SkillBaseDataGetValue_Area_ReturnValue;   // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                Temp_byte_Variable_1;                              // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                K2Node_Select_Default;                             // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                K2Node_Select_Default_1;                           // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_BI_SetTargetType_Item) == 0x000008, "Wrong alignment on BattleTargetSelect_C_BI_SetTargetType_Item");
static_assert(sizeof(BattleTargetSelect_C_BI_SetTargetType_Item) == 0x000178, "Wrong size on BattleTargetSelect_C_BI_SetTargetType_Item");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Item, ItemId) == 0x000000, "Member 'BattleTargetSelect_C_BI_SetTargetType_Item::ItemId' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Item, NoUse) == 0x000004, "Member 'BattleTargetSelect_C_BI_SetTargetType_Item::NoUse' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Item, Temp_bool_Variable) == 0x000005, "Member 'BattleTargetSelect_C_BI_SetTargetType_Item::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Item, CallFunc_GetUseItemData_ReturnValue) == 0x000008, "Member 'BattleTargetSelect_C_BI_SetTargetType_Item::CallFunc_GetUseItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Item, Temp_byte_Variable) == 0x000064, "Member 'BattleTargetSelect_C_BI_SetTargetType_Item::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Item, CallFunc_UseItemDataGetValue_All_ReturnValue) == 0x000065, "Member 'BattleTargetSelect_C_BI_SetTargetType_Item::CallFunc_UseItemDataGetValue_All_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Item, CallFunc_Greater_ByteByte_ReturnValue) == 0x000066, "Member 'BattleTargetSelect_C_BI_SetTargetType_Item::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Item, CallFunc_UseItemDataGetValue_SkillNo_ReturnValue) == 0x000068, "Member 'BattleTargetSelect_C_BI_SetTargetType_Item::CallFunc_UseItemDataGetValue_SkillNo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Item, CallFunc_GetSkillBaseData_ReturnValue) == 0x000070, "Member 'BattleTargetSelect_C_BI_SetTargetType_Item::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Item, CallFunc_Greater_IntInt_ReturnValue) == 0x000170, "Member 'BattleTargetSelect_C_BI_SetTargetType_Item::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Item, CallFunc_SkillBaseDataGetValue_Area_ReturnValue) == 0x000171, "Member 'BattleTargetSelect_C_BI_SetTargetType_Item::CallFunc_SkillBaseDataGetValue_Area_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Item, Temp_byte_Variable_1) == 0x000172, "Member 'BattleTargetSelect_C_BI_SetTargetType_Item::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Item, Temp_bool_Variable_1) == 0x000173, "Member 'BattleTargetSelect_C_BI_SetTargetType_Item::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Item, K2Node_Select_Default) == 0x000174, "Member 'BattleTargetSelect_C_BI_SetTargetType_Item::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Item, K2Node_Select_Default_1) == 0x000175, "Member 'BattleTargetSelect_C_BI_SetTargetType_Item::K2Node_Select_Default_1' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.BI_SetTargetType_Skill
// 0x0110 (0x0110 - 0x0000)
struct BattleTargetSelect_C_BI_SetTargetType_Skill final
{
public:
	int32                                         SkillId;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11C8[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0008(0x0100)(ConstParm)
	E_SKILL_TARGET                                CallFunc_SkillBaseDataGetValue_Area_ReturnValue;   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_BI_SetTargetType_Skill) == 0x000008, "Wrong alignment on BattleTargetSelect_C_BI_SetTargetType_Skill");
static_assert(sizeof(BattleTargetSelect_C_BI_SetTargetType_Skill) == 0x000110, "Wrong size on BattleTargetSelect_C_BI_SetTargetType_Skill");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Skill, SkillId) == 0x000000, "Member 'BattleTargetSelect_C_BI_SetTargetType_Skill::SkillId' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Skill, NoUse) == 0x000004, "Member 'BattleTargetSelect_C_BI_SetTargetType_Skill::NoUse' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Skill, CallFunc_GetSkillBaseData_ReturnValue) == 0x000008, "Member 'BattleTargetSelect_C_BI_SetTargetType_Skill::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetTargetType_Skill, CallFunc_SkillBaseDataGetValue_Area_ReturnValue) == 0x000108, "Member 'BattleTargetSelect_C_BI_SetTargetType_Skill::CallFunc_SkillBaseDataGetValue_Area_ReturnValue' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.BI_GetCurrentTargetIndex
// 0x0004 (0x0004 - 0x0000)
struct BattleTargetSelect_C_BI_GetCurrentTargetIndex final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleTargetSelect_C_BI_GetCurrentTargetIndex) == 0x000004, "Wrong alignment on BattleTargetSelect_C_BI_GetCurrentTargetIndex");
static_assert(sizeof(BattleTargetSelect_C_BI_GetCurrentTargetIndex) == 0x000004, "Wrong size on BattleTargetSelect_C_BI_GetCurrentTargetIndex");
static_assert(offsetof(BattleTargetSelect_C_BI_GetCurrentTargetIndex, PartyIndex) == 0x000000, "Member 'BattleTargetSelect_C_BI_GetCurrentTargetIndex::PartyIndex' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.BI_SetCureHPExpection_Item
// 0x000C (0x000C - 0x0000)
struct BattleTargetSelect_C_BI_SetCureHPExpection_Item final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_BI_SetCureHPExpection_Item) == 0x000004, "Wrong alignment on BattleTargetSelect_C_BI_SetCureHPExpection_Item");
static_assert(sizeof(BattleTargetSelect_C_BI_SetCureHPExpection_Item) == 0x00000C, "Wrong size on BattleTargetSelect_C_BI_SetCureHPExpection_Item");
static_assert(offsetof(BattleTargetSelect_C_BI_SetCureHPExpection_Item, ItemId) == 0x000000, "Member 'BattleTargetSelect_C_BI_SetCureHPExpection_Item::ItemId' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetCureHPExpection_Item, UserIndex) == 0x000004, "Member 'BattleTargetSelect_C_BI_SetCureHPExpection_Item::UserIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetCureHPExpection_Item, NoUse) == 0x000008, "Member 'BattleTargetSelect_C_BI_SetCureHPExpection_Item::NoUse' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.BI_SetCureHPExpection_Skill
// 0x000C (0x000C - 0x0000)
struct BattleTargetSelect_C_BI_SetCureHPExpection_Skill final
{
public:
	int32                                         SkillId;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UserIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_BI_SetCureHPExpection_Skill) == 0x000004, "Wrong alignment on BattleTargetSelect_C_BI_SetCureHPExpection_Skill");
static_assert(sizeof(BattleTargetSelect_C_BI_SetCureHPExpection_Skill) == 0x00000C, "Wrong size on BattleTargetSelect_C_BI_SetCureHPExpection_Skill");
static_assert(offsetof(BattleTargetSelect_C_BI_SetCureHPExpection_Skill, SkillId) == 0x000000, "Member 'BattleTargetSelect_C_BI_SetCureHPExpection_Skill::SkillId' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetCureHPExpection_Skill, UserIndex) == 0x000004, "Member 'BattleTargetSelect_C_BI_SetCureHPExpection_Skill::UserIndex' has a wrong offset!");
static_assert(offsetof(BattleTargetSelect_C_BI_SetCureHPExpection_Skill, NoUse) == 0x000008, "Member 'BattleTargetSelect_C_BI_SetCureHPExpection_Skill::NoUse' has a wrong offset!");

// Function BattleTargetSelect.BattleTargetSelect_C.BI_IsDirectDicided
// 0x0001 (0x0001 - 0x0000)
struct BattleTargetSelect_C_BI_IsDirectDicided final
{
public:
	bool                                          IsDecided;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleTargetSelect_C_BI_IsDirectDicided) == 0x000001, "Wrong alignment on BattleTargetSelect_C_BI_IsDirectDicided");
static_assert(sizeof(BattleTargetSelect_C_BI_IsDirectDicided) == 0x000001, "Wrong size on BattleTargetSelect_C_BI_IsDirectDicided");
static_assert(offsetof(BattleTargetSelect_C_BI_IsDirectDicided, IsDecided) == 0x000000, "Member 'BattleTargetSelect_C_BI_IsDirectDicided::IsDecided' has a wrong offset!");

}

