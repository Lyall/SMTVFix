#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ClockingParticleSystem

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ClockingParticleSystem.ClockingParticleSystem_C.ExecuteUbergraph_ClockingParticleSystem
// 0x0010 (0x0010 - 0x0000)
struct ClockingParticleSystem_C_ExecuteUbergraph_ClockingParticleSystem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ClockingParticleSystem_C_ExecuteUbergraph_ClockingParticleSystem) == 0x000004, "Wrong alignment on ClockingParticleSystem_C_ExecuteUbergraph_ClockingParticleSystem");
static_assert(sizeof(ClockingParticleSystem_C_ExecuteUbergraph_ClockingParticleSystem) == 0x000010, "Wrong size on ClockingParticleSystem_C_ExecuteUbergraph_ClockingParticleSystem");
static_assert(offsetof(ClockingParticleSystem_C_ExecuteUbergraph_ClockingParticleSystem, EntryPoint) == 0x000000, "Member 'ClockingParticleSystem_C_ExecuteUbergraph_ClockingParticleSystem::EntryPoint' has a wrong offset!");
static_assert(offsetof(ClockingParticleSystem_C_ExecuteUbergraph_ClockingParticleSystem, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'ClockingParticleSystem_C_ExecuteUbergraph_ClockingParticleSystem::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ClockingParticleSystem_C_ExecuteUbergraph_ClockingParticleSystem, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'ClockingParticleSystem_C_ExecuteUbergraph_ClockingParticleSystem::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ClockingParticleSystem_C_ExecuteUbergraph_ClockingParticleSystem, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'ClockingParticleSystem_C_ExecuteUbergraph_ClockingParticleSystem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ClockingParticleSystem.ClockingParticleSystem_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct ClockingParticleSystem_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ClockingParticleSystem_C_ReceiveTick) == 0x000004, "Wrong alignment on ClockingParticleSystem_C_ReceiveTick");
static_assert(sizeof(ClockingParticleSystem_C_ReceiveTick) == 0x000004, "Wrong size on ClockingParticleSystem_C_ReceiveTick");
static_assert(offsetof(ClockingParticleSystem_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'ClockingParticleSystem_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function ClockingParticleSystem.ClockingParticleSystem_C.GetSpendSec
// 0x0004 (0x0004 - 0x0000)
struct ClockingParticleSystem_C_GetSpendSec final
{
public:
	float                                         Param_SpendSec;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ClockingParticleSystem_C_GetSpendSec) == 0x000004, "Wrong alignment on ClockingParticleSystem_C_GetSpendSec");
static_assert(sizeof(ClockingParticleSystem_C_GetSpendSec) == 0x000004, "Wrong size on ClockingParticleSystem_C_GetSpendSec");
static_assert(offsetof(ClockingParticleSystem_C_GetSpendSec, Param_SpendSec) == 0x000000, "Member 'ClockingParticleSystem_C_GetSpendSec::Param_SpendSec' has a wrong offset!");

// Function ClockingParticleSystem.ClockingParticleSystem_C.SpawnEmitterAttached
// 0x0060 (0x0060 - 0x0000)
struct ClockingParticleSystem_C_SpawnEmitterAttached final
{
public:
	class UParticleSystem*                        EmitterTemplate;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AttachToComponent;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Scale;                                             // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttachLocation                               LocationType;                                      // 0x003C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCastShadow;                                      // 0x003D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAutoDestroy;                                      // 0x003E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ClockingParticleSystem_C_SpawnEmitterAttached) == 0x000008, "Wrong alignment on ClockingParticleSystem_C_SpawnEmitterAttached");
static_assert(sizeof(ClockingParticleSystem_C_SpawnEmitterAttached) == 0x000060, "Wrong size on ClockingParticleSystem_C_SpawnEmitterAttached");
static_assert(offsetof(ClockingParticleSystem_C_SpawnEmitterAttached, EmitterTemplate) == 0x000000, "Member 'ClockingParticleSystem_C_SpawnEmitterAttached::EmitterTemplate' has a wrong offset!");
static_assert(offsetof(ClockingParticleSystem_C_SpawnEmitterAttached, AttachToComponent) == 0x000008, "Member 'ClockingParticleSystem_C_SpawnEmitterAttached::AttachToComponent' has a wrong offset!");
static_assert(offsetof(ClockingParticleSystem_C_SpawnEmitterAttached, AttachPointName) == 0x000010, "Member 'ClockingParticleSystem_C_SpawnEmitterAttached::AttachPointName' has a wrong offset!");
static_assert(offsetof(ClockingParticleSystem_C_SpawnEmitterAttached, Location) == 0x000018, "Member 'ClockingParticleSystem_C_SpawnEmitterAttached::Location' has a wrong offset!");
static_assert(offsetof(ClockingParticleSystem_C_SpawnEmitterAttached, Rotation) == 0x000024, "Member 'ClockingParticleSystem_C_SpawnEmitterAttached::Rotation' has a wrong offset!");
static_assert(offsetof(ClockingParticleSystem_C_SpawnEmitterAttached, Scale) == 0x000030, "Member 'ClockingParticleSystem_C_SpawnEmitterAttached::Scale' has a wrong offset!");
static_assert(offsetof(ClockingParticleSystem_C_SpawnEmitterAttached, LocationType) == 0x00003C, "Member 'ClockingParticleSystem_C_SpawnEmitterAttached::LocationType' has a wrong offset!");
static_assert(offsetof(ClockingParticleSystem_C_SpawnEmitterAttached, IsCastShadow) == 0x00003D, "Member 'ClockingParticleSystem_C_SpawnEmitterAttached::IsCastShadow' has a wrong offset!");
static_assert(offsetof(ClockingParticleSystem_C_SpawnEmitterAttached, bAutoDestroy) == 0x00003E, "Member 'ClockingParticleSystem_C_SpawnEmitterAttached::bAutoDestroy' has a wrong offset!");
static_assert(offsetof(ClockingParticleSystem_C_SpawnEmitterAttached, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000040, "Member 'ClockingParticleSystem_C_SpawnEmitterAttached::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(ClockingParticleSystem_C_SpawnEmitterAttached, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000048, "Member 'ClockingParticleSystem_C_SpawnEmitterAttached::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ClockingParticleSystem_C_SpawnEmitterAttached, CallFunc_GetSocketLocation_ReturnValue) == 0x00004C, "Member 'ClockingParticleSystem_C_SpawnEmitterAttached::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ClockingParticleSystem_C_SpawnEmitterAttached, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000058, "Member 'ClockingParticleSystem_C_SpawnEmitterAttached::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");

// Function ClockingParticleSystem.ClockingParticleSystem_C.GetSpawnedEmitter
// 0x0010 (0x0010 - 0x0000)
struct ClockingParticleSystem_C_GetSpawnedEmitter final
{
public:
	class UParticleSystemComponent*               Param_SpawnedEmitter;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ClockingParticleSystem_C_GetSpawnedEmitter) == 0x000008, "Wrong alignment on ClockingParticleSystem_C_GetSpawnedEmitter");
static_assert(sizeof(ClockingParticleSystem_C_GetSpawnedEmitter) == 0x000010, "Wrong size on ClockingParticleSystem_C_GetSpawnedEmitter");
static_assert(offsetof(ClockingParticleSystem_C_GetSpawnedEmitter, Param_SpawnedEmitter) == 0x000000, "Member 'ClockingParticleSystem_C_GetSpawnedEmitter::Param_SpawnedEmitter' has a wrong offset!");
static_assert(offsetof(ClockingParticleSystem_C_GetSpawnedEmitter, IsValid) == 0x000008, "Member 'ClockingParticleSystem_C_GetSpawnedEmitter::IsValid' has a wrong offset!");
static_assert(offsetof(ClockingParticleSystem_C_GetSpawnedEmitter, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'ClockingParticleSystem_C_GetSpawnedEmitter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

