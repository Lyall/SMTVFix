#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_BtlTargetDevil_HP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_BtlTargetDevil_HP.WB_BtlTargetDevil_HP_C
// 0x0088 (0x02E8 - 0x0260)
class UWB_BtlTargetDevil_HP_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USsPlayerWidget*                        SsPlayer_HP;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_HP_Pos;                                   // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_HPBar;                                    // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_HPBarBG;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_HPBarInner;                               // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_NNumberIcon03_C*                    WB_NNumber_HP;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         M_Param;                                           // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         M_ParamMax;                                        // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_PlayAddAnim;                                     // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         M_ParamAnimParam;                                  // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_IsDownAnim;                                      // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         M_EndAnimParam;                                    // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_PlayAnimTime;                                    // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_NowAnimTime;                                     // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         M_StartAnimParam;                                  // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_ValidDebugPrint;                                 // 0x02BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD[0x3];                                      // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         M_ParamResult;                                     // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAppeared;                                        // 0x02C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsAnalyzed;                                        // 0x02C5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsAllowAddAnim;                                    // 0x02C6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C7[0x1];                                      // 0x02C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            M_DamageAnimCurve;                                 // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_PlayRate;                                        // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             Evt_HPBarDisappeared;                              // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void Evt_HPBarDisappeared__DelegateSignature();
	void ExecuteUbergraph_WB_BtlTargetDevil_HP(int32 EntryPoint);
	void BndEvt__WB_BtlTargetDevil_HP_SsPlayer_HP_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayer_HP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void Disappear(float Rate, bool Immediately);
	void Appear(float Rate, bool Immediately);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void CallTick(float Delta);
	void InitDisappeared();
	void SettingParam(int32 Param, int32 ParamMax, int32 ParamResult, bool Param_IsAnalyzed);
	void StartAddAnim(int32 AddParam, float Time, bool Overflow);
	void EndAddAnim();
	void PlayDamageAnim(float Time);
	void IsPlayDamageAnim(bool* M_PlayDamageAnim);
	void DebugPrint(const class FString& InString);
	void PlayHPBarAnim(int32 AnimIndex, bool IsLoop, bool IsEndOfAnim);
	void UpDataHPBarColor();
	void PlayHPBarInnerAnim(int32 AnimIndex, bool IsLoop);
	void SetSsPlayerPartSize(class UWidget* SsPlayer, const struct FVector2D& PartSize);
	void ApplyHP_Num();
	void PauseHPBarAnim();
	void ApplyHPGauge(int32 InnerGauge, int32 Destination);
	void ShowCureExpection(int32 ExpectedHP);
	void GetCurrentHP(int32* Hp);
	void SetAllWidgetTick(bool Enable);
	void IsDisappeared(bool* Param_IsDisappeared);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_BtlTargetDevil_HP_C">();
	}
	static class UWB_BtlTargetDevil_HP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_BtlTargetDevil_HP_C>();
	}
};
static_assert(alignof(UWB_BtlTargetDevil_HP_C) == 0x000008, "Wrong alignment on UWB_BtlTargetDevil_HP_C");
static_assert(sizeof(UWB_BtlTargetDevil_HP_C) == 0x0002E8, "Wrong size on UWB_BtlTargetDevil_HP_C");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, UberGraphFrame) == 0x000260, "Member 'UWB_BtlTargetDevil_HP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, SsPlayer_HP) == 0x000268, "Member 'UWB_BtlTargetDevil_HP_C::SsPlayer_HP' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, SsPlayer_HP_Pos) == 0x000270, "Member 'UWB_BtlTargetDevil_HP_C::SsPlayer_HP_Pos' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, SsPlayer_HPBar) == 0x000278, "Member 'UWB_BtlTargetDevil_HP_C::SsPlayer_HPBar' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, SsPlayer_HPBarBG) == 0x000280, "Member 'UWB_BtlTargetDevil_HP_C::SsPlayer_HPBarBG' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, SsPlayer_HPBarInner) == 0x000288, "Member 'UWB_BtlTargetDevil_HP_C::SsPlayer_HPBarInner' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, WB_NNumber_HP) == 0x000290, "Member 'UWB_BtlTargetDevil_HP_C::WB_NNumber_HP' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, M_Param) == 0x000298, "Member 'UWB_BtlTargetDevil_HP_C::M_Param' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, M_ParamMax) == 0x00029C, "Member 'UWB_BtlTargetDevil_HP_C::M_ParamMax' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, M_PlayAddAnim) == 0x0002A0, "Member 'UWB_BtlTargetDevil_HP_C::M_PlayAddAnim' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, M_ParamAnimParam) == 0x0002A4, "Member 'UWB_BtlTargetDevil_HP_C::M_ParamAnimParam' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, M_IsDownAnim) == 0x0002A8, "Member 'UWB_BtlTargetDevil_HP_C::M_IsDownAnim' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, M_EndAnimParam) == 0x0002AC, "Member 'UWB_BtlTargetDevil_HP_C::M_EndAnimParam' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, M_PlayAnimTime) == 0x0002B0, "Member 'UWB_BtlTargetDevil_HP_C::M_PlayAnimTime' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, M_NowAnimTime) == 0x0002B4, "Member 'UWB_BtlTargetDevil_HP_C::M_NowAnimTime' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, M_StartAnimParam) == 0x0002B8, "Member 'UWB_BtlTargetDevil_HP_C::M_StartAnimParam' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, M_ValidDebugPrint) == 0x0002BC, "Member 'UWB_BtlTargetDevil_HP_C::M_ValidDebugPrint' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, M_ParamResult) == 0x0002C0, "Member 'UWB_BtlTargetDevil_HP_C::M_ParamResult' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, IsAppeared) == 0x0002C4, "Member 'UWB_BtlTargetDevil_HP_C::IsAppeared' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, IsAnalyzed) == 0x0002C5, "Member 'UWB_BtlTargetDevil_HP_C::IsAnalyzed' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, IsAllowAddAnim) == 0x0002C6, "Member 'UWB_BtlTargetDevil_HP_C::IsAllowAddAnim' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, M_DamageAnimCurve) == 0x0002C8, "Member 'UWB_BtlTargetDevil_HP_C::M_DamageAnimCurve' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, M_PlayRate) == 0x0002D0, "Member 'UWB_BtlTargetDevil_HP_C::M_PlayRate' has a wrong offset!");
static_assert(offsetof(UWB_BtlTargetDevil_HP_C, Evt_HPBarDisappeared) == 0x0002D8, "Member 'UWB_BtlTargetDevil_HP_C::Evt_HPBarDisappeared' has a wrong offset!");

}

