#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProjectPlayerController

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function ProjectPlayerController.ProjectPlayerController_C.ExecuteUbergraph_ProjectPlayerController
// 0x0678 (0x0678 - 0x0000)
struct ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1; // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_InputAxisEvent_AxisValue_5;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_4;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue_1;     // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_295A[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCheatManager*                    K2Node_DynamicCast_AsPlayer_Cheat_Manager;         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDebugFlyMovement_ReturnValue;           // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_295B[0x6];                                     // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0110(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsProjectMoveInputIgnored_ReturnValue;    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_295C[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_295D[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_2;                 // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_3;                 // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_ActionPadEvent_Key;                         // 0x0150(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_295E[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_4;                 // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProjectMoveInputIgnored_ReturnValue_1;  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_295F[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_5;                 // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInputReceiver_C> K2Node_DynamicCast_AsBPI_Player_Input_Receiver;    // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2960[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_ActionPadEvent_Key_7;                       // 0x01A0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsProjectActionInputIgnored_ReturnValue;  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2961[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_6;                 // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInputReceiver_C> K2Node_DynamicCast_AsBPI_Player_Input_Receiver_1;  // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2962[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_ActionPadEvent_Key_8;                       // 0x01E0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x01F8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsProjectActionInputIgnored_ReturnValue_1; // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2963[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_7;                 // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInputReceiver_C> K2Node_DynamicCast_AsBPI_Player_Input_Receiver_2;  // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2964[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInputReceiver_C> K2Node_DynamicCast_AsBPI_Player_Input_Receiver_3;  // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProjectMoveInputIgnored_ReturnValue_2;  // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2965[0x6];                                     // 0x024A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_8;                 // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInputReceiver_C> K2Node_DynamicCast_AsBPI_Player_Input_Receiver_4;  // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2966[0x7];                                     // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInputReceiver_C> K2Node_DynamicCast_AsBPI_Player_Input_Receiver_5;  // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2967[0x7];                                     // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInputReceiver_C> K2Node_DynamicCast_AsBPI_Player_Input_Receiver_6;  // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2968[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x029C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAutoRunning_bAutoRunning;               // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2969[0x3];                                     // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue; // 0x02A8(0x00D0)()
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_296A[0x7];                                     // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x0380(0x0018)(HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0398(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_296B[0x7];                                     // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_ActionPadEvent_Key_9;                       // 0x03B0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsProjectActionInputIgnored_ReturnValue_2; // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_296C[0x3];                                     // 0x03C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x03CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_296D[0x4];                                     // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_1; // 0x03D8(0x00D0)()
	bool                                          CallFunc_CheckEventFlag_ReturnValue;               // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue_1;             // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_296E[0x6];                                     // 0x04AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_ActionPadEvent_Key_10;                      // 0x04B0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsProjectMoveInputIgnored_ReturnValue_3;  // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_296F[0x7];                                     // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_9;                 // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInputReceiver_C> K2Node_DynamicCast_AsBPI_Player_Input_Receiver_7;  // 0x04D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2970[0x7];                                     // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_10;                // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInputReceiver_C> K2Node_DynamicCast_AsBPI_Player_Input_Receiver_8;  // 0x04F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0509(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2971[0x6];                                     // 0x050A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_ActionPadEvent_Key_11;                      // 0x0510(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_bNewIgnoreInput;                      // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2972[0x6];                                     // 0x052A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_ActionPadEvent_Key_1;                       // 0x0530(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_ActionPadEvent_Key_2;                       // 0x0548(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2973[0x7];                                     // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_11;                // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2974[0x7];                                     // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInputReceiver_C> K2Node_DynamicCast_AsBPI_Player_Input_Receiver_9;  // 0x0578(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0589(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAutoRunning_bAutoRunning_1;             // 0x058A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2975[0x5];                                     // 0x058B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInputReceiver_C> K2Node_DynamicCast_AsBPI_Player_Input_Receiver_10; // 0x0590(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2976[0x7];                                     // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_ActionPadEvent_Key_3;                       // 0x05A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x05C0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_ActionPadEvent_Key_4;                       // 0x05D8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_ActionPadEvent_Key_5;                       // 0x05F0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_ActionPadEvent_Key_6;                       // 0x0608(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_3;                 // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_2;                 // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ConvertAxisMovingScale_OutAxisValue;      // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ConvertAxisMovingScale_OutAxisValue_1;    // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0634(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2977[0x3];                                     // 0x0635(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x063C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Use_Garden_Tribute_ShouldUse;             // 0x063D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2978[0x2];                                     // 0x063E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGardenManager*                         CallFunc_GetGardenManager_ReturnValue;             // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GardenManager_C>  K2Node_DynamicCast_AsBPI_Garden_Manager;           // 0x0648(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2979[0x3];                                     // 0x0659(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_297A[0x4];                                     // 0x0664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProjectMoveInputIgnored_ReturnValue_4;  // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProjectMoveInputIgnored_ReturnValue_5;  // 0x0671(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0672(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0673(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0674(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0675(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController) == 0x000008, "Wrong alignment on ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController");
static_assert(sizeof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController) == 0x000678, "Wrong size on ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, EntryPoint) == 0x000000, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000005, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1) == 0x000006, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, Temp_bool_Has_Been_Initd_Variable) == 0x000007, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_InputAxisEvent_AxisValue_5) == 0x000008, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_InputAxisEvent_AxisValue_5' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_InputAxisEvent_AxisValue_4) == 0x00000C, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_InputAxisEvent_AxisValue_4' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_GetCameraRotation_ReturnValue) == 0x000018, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000024, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_GetRightVector_ReturnValue) == 0x000030, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_GetForwardVector_ReturnValue) == 0x00003C, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000048, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_LessLess_VectorRotator_ReturnValue_1) == 0x000054, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_LessLess_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_BreakVector_X) == 0x000060, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_BreakVector_Y) == 0x000064, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_BreakVector_Z) == 0x000068, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_BreakVector_X_1) == 0x00006C, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_BreakVector_Y_1) == 0x000070, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_BreakVector_Z_1) == 0x000074, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_MakeVector_ReturnValue) == 0x000078, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_MakeVector_ReturnValue_1) == 0x000084, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000090, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000094, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_MakeVector_ReturnValue_2) == 0x000098, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_MakeVector_ReturnValue_3) == 0x0000A4, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B0, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000BC, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000C8, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x0000D4, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Normal_ReturnValue) == 0x0000E0, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Normal_ReturnValue_1) == 0x0000EC, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, Temp_bool_Has_Been_Initd_Variable_1) == 0x0000F8, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_AsPlayer_Cheat_Manager) == 0x000100, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_AsPlayer_Cheat_Manager' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_IsDebugFlyMovement_ReturnValue) == 0x000109, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_IsDebugFlyMovement_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_InputKeyEvent_Key) == 0x000110, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_IsProjectMoveInputIgnored_ReturnValue) == 0x000128, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_IsProjectMoveInputIgnored_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000130, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_IsValid_ReturnValue) == 0x000138, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_K2_GetPawn_ReturnValue_2) == 0x000140, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_K2_GetPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_K2_GetPawn_ReturnValue_3) == 0x000148, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_K2_GetPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_ActionPadEvent_Key) == 0x000150, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_ActionPadEvent_Key' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_IsValid_ReturnValue_1) == 0x000168, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_K2_GetPawn_ReturnValue_4) == 0x000170, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_K2_GetPawn_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_IsProjectMoveInputIgnored_ReturnValue_1) == 0x000178, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_IsProjectMoveInputIgnored_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_K2_GetPawn_ReturnValue_5) == 0x000180, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_K2_GetPawn_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_AsBPI_Player_Input_Receiver) == 0x000188, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_AsBPI_Player_Input_Receiver' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_bSuccess_1) == 0x000198, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_ActionPadEvent_Key_7) == 0x0001A0, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_ActionPadEvent_Key_7' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_IsProjectActionInputIgnored_ReturnValue) == 0x0001B8, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_IsProjectActionInputIgnored_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_K2_GetPawn_ReturnValue_6) == 0x0001C0, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_K2_GetPawn_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_AsBPI_Player_Input_Receiver_1) == 0x0001C8, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_AsBPI_Player_Input_Receiver_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_bSuccess_2) == 0x0001D8, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_ActionPadEvent_Key_8) == 0x0001E0, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_ActionPadEvent_Key_8' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_InputKeyEvent_Key_1) == 0x0001F8, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_IsProjectActionInputIgnored_ReturnValue_1) == 0x000210, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_IsProjectActionInputIgnored_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_K2_GetPawn_ReturnValue_7) == 0x000218, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_K2_GetPawn_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_AsBPI_Player_Input_Receiver_2) == 0x000220, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_AsBPI_Player_Input_Receiver_2' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_bSuccess_3) == 0x000230, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_AsBPI_Player_Input_Receiver_3) == 0x000238, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_AsBPI_Player_Input_Receiver_3' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_bSuccess_4) == 0x000248, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_IsProjectMoveInputIgnored_ReturnValue_2) == 0x000249, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_IsProjectMoveInputIgnored_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_K2_GetPawn_ReturnValue_8) == 0x000250, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_K2_GetPawn_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_AsBPI_Player_Input_Receiver_4) == 0x000258, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_AsBPI_Player_Input_Receiver_4' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_bSuccess_5) == 0x000268, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_AsBPI_Player_Input_Receiver_5) == 0x000270, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_AsBPI_Player_Input_Receiver_5' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_bSuccess_6) == 0x000280, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_AsBPI_Player_Input_Receiver_6) == 0x000288, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_AsBPI_Player_Input_Receiver_6' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_bSuccess_7) == 0x000298, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_MakeLiteralName_ReturnValue) == 0x00029C, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_IsAutoRunning_bAutoRunning) == 0x0002A4, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_IsAutoRunning_bAutoRunning' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue) == 0x0002A8, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Conv_IntToBool_ReturnValue) == 0x000378, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, Temp_struct_Variable) == 0x000380, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_SelectString_ReturnValue) == 0x000398, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Not_PreBool_ReturnValue) == 0x0003A8, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_ActionPadEvent_Key_9) == 0x0003B0, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_ActionPadEvent_Key_9' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_IsProjectActionInputIgnored_ReturnValue_2) == 0x0003C8, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_IsProjectActionInputIgnored_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_MakeLiteralName_ReturnValue_1) == 0x0003CC, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_1) == 0x0003D8, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_CheckEventFlag_ReturnValue) == 0x0004A8, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_CheckEventFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Conv_IntToBool_ReturnValue_1) == 0x0004A9, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Conv_IntToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_ActionPadEvent_Key_10) == 0x0004B0, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_ActionPadEvent_Key_10' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_IsProjectMoveInputIgnored_ReturnValue_3) == 0x0004C8, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_IsProjectMoveInputIgnored_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_K2_GetPawn_ReturnValue_9) == 0x0004D0, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_K2_GetPawn_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_AsBPI_Player_Input_Receiver_7) == 0x0004D8, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_AsBPI_Player_Input_Receiver_7' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_bSuccess_8) == 0x0004E8, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_K2_GetPawn_ReturnValue_10) == 0x0004F0, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_K2_GetPawn_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_AsBPI_Player_Input_Receiver_8) == 0x0004F8, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_AsBPI_Player_Input_Receiver_8' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_bSuccess_9) == 0x000508, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_BooleanAND_ReturnValue) == 0x000509, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_ActionPadEvent_Key_11) == 0x000510, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_ActionPadEvent_Key_11' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_Event_bNewIgnoreInput) == 0x000528, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_Event_bNewIgnoreInput' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, Temp_bool_IsClosed_Variable_1) == 0x000529, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_ActionPadEvent_Key_1) == 0x000530, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_ActionPadEvent_Key_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_ActionPadEvent_Key_2) == 0x000548, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_ActionPadEvent_Key_2' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Not_PreBool_ReturnValue_1) == 0x000560, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_K2_GetPawn_ReturnValue_11) == 0x000568, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_K2_GetPawn_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Not_PreBool_ReturnValue_2) == 0x000570, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_AsBPI_Player_Input_Receiver_9) == 0x000578, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_AsBPI_Player_Input_Receiver_9' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_bSuccess_10) == 0x000588, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_BooleanAND_ReturnValue_1) == 0x000589, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_IsAutoRunning_bAutoRunning_1) == 0x00058A, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_IsAutoRunning_bAutoRunning_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_AsBPI_Player_Input_Receiver_10) == 0x000590, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_AsBPI_Player_Input_Receiver_10' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_bSuccess_11) == 0x0005A0, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_ActionPadEvent_Key_3) == 0x0005A8, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_ActionPadEvent_Key_3' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, Temp_struct_Variable_1) == 0x0005C0, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_ActionPadEvent_Key_4) == 0x0005D8, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_ActionPadEvent_Key_4' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_ActionPadEvent_Key_5) == 0x0005F0, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_ActionPadEvent_Key_5' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_ActionPadEvent_Key_6) == 0x000608, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_ActionPadEvent_Key_6' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_InputAxisEvent_AxisValue_3) == 0x000620, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_InputAxisEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_InputAxisEvent_AxisValue_2) == 0x000624, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_InputAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_ConvertAxisMovingScale_OutAxisValue) == 0x000628, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_ConvertAxisMovingScale_OutAxisValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_ConvertAxisMovingScale_OutAxisValue_1) == 0x00062C, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_ConvertAxisMovingScale_OutAxisValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Abs_ReturnValue) == 0x000630, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Less_FloatFloat_ReturnValue) == 0x000634, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Abs_ReturnValue_1) == 0x000638, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00063C, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Use_Garden_Tribute_ShouldUse) == 0x00063D, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Use_Garden_Tribute_ShouldUse' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_GetGardenManager_ReturnValue) == 0x000640, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_GetGardenManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_AsBPI_Garden_Manager) == 0x000648, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_AsBPI_Garden_Manager' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_DynamicCast_bSuccess_12) == 0x000658, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_InputAxisEvent_AxisValue_1) == 0x00065C, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_InputAxisEvent_AxisValue) == 0x000660, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, K2Node_Event_PossessedPawn) == 0x000668, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::K2Node_Event_PossessedPawn' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_IsProjectMoveInputIgnored_ReturnValue_4) == 0x000670, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_IsProjectMoveInputIgnored_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_IsProjectMoveInputIgnored_ReturnValue_5) == 0x000671, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_IsProjectMoveInputIgnored_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_BooleanOR_ReturnValue) == 0x000672, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_BooleanOR_ReturnValue_1) == 0x000673, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Not_PreBool_ReturnValue_3) == 0x000674, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController, CallFunc_Not_PreBool_ReturnValue_4) == 0x000675, "Member 'ProjectPlayerController_C_ExecuteUbergraph_ProjectPlayerController::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct ProjectPlayerController_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_ReceivePossess) == 0x000008, "Wrong alignment on ProjectPlayerController_C_ReceivePossess");
static_assert(sizeof(ProjectPlayerController_C_ReceivePossess) == 0x000008, "Wrong size on ProjectPlayerController_C_ReceivePossess");
static_assert(offsetof(ProjectPlayerController_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'ProjectPlayerController_C_ReceivePossess::PossessedPawn' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.InpAxisEvt_LookRight_Mouse_K2Node_InputAxisEvent_9
// 0x0004 (0x0004 - 0x0000)
struct ProjectPlayerController_C_InpAxisEvt_LookRight_Mouse_K2Node_InputAxisEvent_9 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_InpAxisEvt_LookRight_Mouse_K2Node_InputAxisEvent_9) == 0x000004, "Wrong alignment on ProjectPlayerController_C_InpAxisEvt_LookRight_Mouse_K2Node_InputAxisEvent_9");
static_assert(sizeof(ProjectPlayerController_C_InpAxisEvt_LookRight_Mouse_K2Node_InputAxisEvent_9) == 0x000004, "Wrong size on ProjectPlayerController_C_InpAxisEvt_LookRight_Mouse_K2Node_InputAxisEvent_9");
static_assert(offsetof(ProjectPlayerController_C_InpAxisEvt_LookRight_Mouse_K2Node_InputAxisEvent_9, AxisValue) == 0x000000, "Member 'ProjectPlayerController_C_InpAxisEvt_LookRight_Mouse_K2Node_InputAxisEvent_9::AxisValue' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.InpAxisEvt_LookUp_Mouse_K2Node_InputAxisEvent_8
// 0x0004 (0x0004 - 0x0000)
struct ProjectPlayerController_C_InpAxisEvt_LookUp_Mouse_K2Node_InputAxisEvent_8 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_InpAxisEvt_LookUp_Mouse_K2Node_InputAxisEvent_8) == 0x000004, "Wrong alignment on ProjectPlayerController_C_InpAxisEvt_LookUp_Mouse_K2Node_InputAxisEvent_8");
static_assert(sizeof(ProjectPlayerController_C_InpAxisEvt_LookUp_Mouse_K2Node_InputAxisEvent_8) == 0x000004, "Wrong size on ProjectPlayerController_C_InpAxisEvt_LookUp_Mouse_K2Node_InputAxisEvent_8");
static_assert(offsetof(ProjectPlayerController_C_InpAxisEvt_LookUp_Mouse_K2Node_InputAxisEvent_8, AxisValue) == 0x000000, "Member 'ProjectPlayerController_C_InpAxisEvt_LookUp_Mouse_K2Node_InputAxisEvent_8::AxisValue' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_4
// 0x0004 (0x0004 - 0x0000)
struct ProjectPlayerController_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_4 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_4) == 0x000004, "Wrong alignment on ProjectPlayerController_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_4");
static_assert(sizeof(ProjectPlayerController_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_4) == 0x000004, "Wrong size on ProjectPlayerController_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_4");
static_assert(offsetof(ProjectPlayerController_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_4, AxisValue) == 0x000000, "Member 'ProjectPlayerController_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_4::AxisValue' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_2
// 0x0004 (0x0004 - 0x0000)
struct ProjectPlayerController_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_2 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_2) == 0x000004, "Wrong alignment on ProjectPlayerController_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_2");
static_assert(sizeof(ProjectPlayerController_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_2) == 0x000004, "Wrong size on ProjectPlayerController_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_2");
static_assert(offsetof(ProjectPlayerController_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_2, AxisValue) == 0x000000, "Member 'ProjectPlayerController_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_2::AxisValue' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.OnChangeIgnoreMoveInput
// 0x0001 (0x0001 - 0x0000)
struct ProjectPlayerController_C_OnChangeIgnoreMoveInput final
{
public:
	bool                                          bNewIgnoreInput;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectPlayerController_C_OnChangeIgnoreMoveInput) == 0x000001, "Wrong alignment on ProjectPlayerController_C_OnChangeIgnoreMoveInput");
static_assert(sizeof(ProjectPlayerController_C_OnChangeIgnoreMoveInput) == 0x000001, "Wrong size on ProjectPlayerController_C_OnChangeIgnoreMoveInput");
static_assert(offsetof(ProjectPlayerController_C_OnChangeIgnoreMoveInput, bNewIgnoreInput) == 0x000000, "Member 'ProjectPlayerController_C_OnChangeIgnoreMoveInput::bNewIgnoreInput' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.InpAxisEvt_LookRight_K2Node_InputAxisEvent_1
// 0x0004 (0x0004 - 0x0000)
struct ProjectPlayerController_C_InpAxisEvt_LookRight_K2Node_InputAxisEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_InpAxisEvt_LookRight_K2Node_InputAxisEvent_1) == 0x000004, "Wrong alignment on ProjectPlayerController_C_InpAxisEvt_LookRight_K2Node_InputAxisEvent_1");
static_assert(sizeof(ProjectPlayerController_C_InpAxisEvt_LookRight_K2Node_InputAxisEvent_1) == 0x000004, "Wrong size on ProjectPlayerController_C_InpAxisEvt_LookRight_K2Node_InputAxisEvent_1");
static_assert(offsetof(ProjectPlayerController_C_InpAxisEvt_LookRight_K2Node_InputAxisEvent_1, AxisValue) == 0x000000, "Member 'ProjectPlayerController_C_InpAxisEvt_LookRight_K2Node_InputAxisEvent_1::AxisValue' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct ProjectPlayerController_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on ProjectPlayerController_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_0");
static_assert(sizeof(ProjectPlayerController_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on ProjectPlayerController_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_0");
static_assert(offsetof(ProjectPlayerController_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'ProjectPlayerController_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.InpActEvt_One_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct ProjectPlayerController_C_InpActEvt_One_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_InpActEvt_One_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on ProjectPlayerController_C_InpActEvt_One_K2Node_InputKeyEvent_0");
static_assert(sizeof(ProjectPlayerController_C_InpActEvt_One_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on ProjectPlayerController_C_InpActEvt_One_K2Node_InputKeyEvent_0");
static_assert(offsetof(ProjectPlayerController_C_InpActEvt_One_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'ProjectPlayerController_C_InpActEvt_One_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_ActionJump_K2Node_ActionPadEvent_0
// 0x0018 (0x0018 - 0x0000)
struct ProjectPlayerController_C_ActPadEvt_Map_ActionJump_K2Node_ActionPadEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_ActPadEvt_Map_ActionJump_K2Node_ActionPadEvent_0) == 0x000008, "Wrong alignment on ProjectPlayerController_C_ActPadEvt_Map_ActionJump_K2Node_ActionPadEvent_0");
static_assert(sizeof(ProjectPlayerController_C_ActPadEvt_Map_ActionJump_K2Node_ActionPadEvent_0) == 0x000018, "Wrong size on ProjectPlayerController_C_ActPadEvt_Map_ActionJump_K2Node_ActionPadEvent_0");
static_assert(offsetof(ProjectPlayerController_C_ActPadEvt_Map_ActionJump_K2Node_ActionPadEvent_0, Key) == 0x000000, "Member 'ProjectPlayerController_C_ActPadEvt_Map_ActionJump_K2Node_ActionPadEvent_0::Key' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_Dash_K2Node_ActionPadEvent_1
// 0x0018 (0x0018 - 0x0000)
struct ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_1) == 0x000008, "Wrong alignment on ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_1");
static_assert(sizeof(ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_1) == 0x000018, "Wrong size on ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_1");
static_assert(offsetof(ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_1, Key) == 0x000000, "Member 'ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_1::Key' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_Dash_K2Node_ActionPadEvent_2
// 0x0018 (0x0018 - 0x0000)
struct ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_2) == 0x000008, "Wrong alignment on ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_2");
static_assert(sizeof(ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_2) == 0x000018, "Wrong size on ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_2");
static_assert(offsetof(ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_2, Key) == 0x000000, "Member 'ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_2::Key' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_Dash_K2Node_ActionPadEvent_3
// 0x0018 (0x0018 - 0x0000)
struct ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_3) == 0x000008, "Wrong alignment on ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_3");
static_assert(sizeof(ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_3) == 0x000018, "Wrong size on ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_3");
static_assert(offsetof(ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_3, Key) == 0x000000, "Member 'ProjectPlayerController_C_ActPadEvt_Map_Dash_K2Node_ActionPadEvent_3::Key' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_4
// 0x0018 (0x0018 - 0x0000)
struct ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_4) == 0x000008, "Wrong alignment on ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_4");
static_assert(sizeof(ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_4) == 0x000018, "Wrong size on ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_4");
static_assert(offsetof(ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_4, Key) == 0x000000, "Member 'ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_4::Key' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_5
// 0x0018 (0x0018 - 0x0000)
struct ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_5) == 0x000008, "Wrong alignment on ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_5");
static_assert(sizeof(ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_5) == 0x000018, "Wrong size on ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_5");
static_assert(offsetof(ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_5, Key) == 0x000000, "Member 'ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_5::Key' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_6
// 0x0018 (0x0018 - 0x0000)
struct ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_6) == 0x000008, "Wrong alignment on ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_6");
static_assert(sizeof(ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_6) == 0x000018, "Wrong size on ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_6");
static_assert(offsetof(ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_6, Key) == 0x000000, "Member 'ProjectPlayerController_C_ActPadEvt_Map_Dash_R_K2Node_ActionPadEvent_6::Key' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_ToggleAutoRun_K2Node_ActionPadEvent_7
// 0x0018 (0x0018 - 0x0000)
struct ProjectPlayerController_C_ActPadEvt_Map_ToggleAutoRun_K2Node_ActionPadEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_ActPadEvt_Map_ToggleAutoRun_K2Node_ActionPadEvent_7) == 0x000008, "Wrong alignment on ProjectPlayerController_C_ActPadEvt_Map_ToggleAutoRun_K2Node_ActionPadEvent_7");
static_assert(sizeof(ProjectPlayerController_C_ActPadEvt_Map_ToggleAutoRun_K2Node_ActionPadEvent_7) == 0x000018, "Wrong size on ProjectPlayerController_C_ActPadEvt_Map_ToggleAutoRun_K2Node_ActionPadEvent_7");
static_assert(offsetof(ProjectPlayerController_C_ActPadEvt_Map_ToggleAutoRun_K2Node_ActionPadEvent_7, Key) == 0x000000, "Member 'ProjectPlayerController_C_ActPadEvt_Map_ToggleAutoRun_K2Node_ActionPadEvent_7::Key' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_CameraReset_K2Node_ActionPadEvent_8
// 0x0018 (0x0018 - 0x0000)
struct ProjectPlayerController_C_ActPadEvt_Map_CameraReset_K2Node_ActionPadEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_ActPadEvt_Map_CameraReset_K2Node_ActionPadEvent_8) == 0x000008, "Wrong alignment on ProjectPlayerController_C_ActPadEvt_Map_CameraReset_K2Node_ActionPadEvent_8");
static_assert(sizeof(ProjectPlayerController_C_ActPadEvt_Map_CameraReset_K2Node_ActionPadEvent_8) == 0x000018, "Wrong size on ProjectPlayerController_C_ActPadEvt_Map_CameraReset_K2Node_ActionPadEvent_8");
static_assert(offsetof(ProjectPlayerController_C_ActPadEvt_Map_CameraReset_K2Node_ActionPadEvent_8, Key) == 0x000000, "Member 'ProjectPlayerController_C_ActPadEvt_Map_CameraReset_K2Node_ActionPadEvent_8::Key' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.InpActEvt_Z_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct ProjectPlayerController_C_InpActEvt_Z_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_InpActEvt_Z_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on ProjectPlayerController_C_InpActEvt_Z_K2Node_InputKeyEvent_1");
static_assert(sizeof(ProjectPlayerController_C_InpActEvt_Z_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on ProjectPlayerController_C_InpActEvt_Z_K2Node_InputKeyEvent_1");
static_assert(offsetof(ProjectPlayerController_C_InpActEvt_Z_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'ProjectPlayerController_C_InpActEvt_Z_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_ViewDown_K2Node_ActionPadEvent_9
// 0x0018 (0x0018 - 0x0000)
struct ProjectPlayerController_C_ActPadEvt_Map_ViewDown_K2Node_ActionPadEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_ActPadEvt_Map_ViewDown_K2Node_ActionPadEvent_9) == 0x000008, "Wrong alignment on ProjectPlayerController_C_ActPadEvt_Map_ViewDown_K2Node_ActionPadEvent_9");
static_assert(sizeof(ProjectPlayerController_C_ActPadEvt_Map_ViewDown_K2Node_ActionPadEvent_9) == 0x000018, "Wrong size on ProjectPlayerController_C_ActPadEvt_Map_ViewDown_K2Node_ActionPadEvent_9");
static_assert(offsetof(ProjectPlayerController_C_ActPadEvt_Map_ViewDown_K2Node_ActionPadEvent_9, Key) == 0x000000, "Member 'ProjectPlayerController_C_ActPadEvt_Map_ViewDown_K2Node_ActionPadEvent_9::Key' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Utl_Cancel_K2Node_ActionPadEvent_10
// 0x0018 (0x0018 - 0x0000)
struct ProjectPlayerController_C_ActPadEvt_Utl_Cancel_K2Node_ActionPadEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_ActPadEvt_Utl_Cancel_K2Node_ActionPadEvent_10) == 0x000008, "Wrong alignment on ProjectPlayerController_C_ActPadEvt_Utl_Cancel_K2Node_ActionPadEvent_10");
static_assert(sizeof(ProjectPlayerController_C_ActPadEvt_Utl_Cancel_K2Node_ActionPadEvent_10) == 0x000018, "Wrong size on ProjectPlayerController_C_ActPadEvt_Utl_Cancel_K2Node_ActionPadEvent_10");
static_assert(offsetof(ProjectPlayerController_C_ActPadEvt_Utl_Cancel_K2Node_ActionPadEvent_10, Key) == 0x000000, "Member 'ProjectPlayerController_C_ActPadEvt_Utl_Cancel_K2Node_ActionPadEvent_10::Key' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.ActPadEvt_Map_Attack_K2Node_ActionPadEvent_11
// 0x0018 (0x0018 - 0x0000)
struct ProjectPlayerController_C_ActPadEvt_Map_Attack_K2Node_ActionPadEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_ActPadEvt_Map_Attack_K2Node_ActionPadEvent_11) == 0x000008, "Wrong alignment on ProjectPlayerController_C_ActPadEvt_Map_Attack_K2Node_ActionPadEvent_11");
static_assert(sizeof(ProjectPlayerController_C_ActPadEvt_Map_Attack_K2Node_ActionPadEvent_11) == 0x000018, "Wrong size on ProjectPlayerController_C_ActPadEvt_Map_Attack_K2Node_ActionPadEvent_11");
static_assert(offsetof(ProjectPlayerController_C_ActPadEvt_Map_Attack_K2Node_ActionPadEvent_11, Key) == 0x000000, "Member 'ProjectPlayerController_C_ActPadEvt_Map_Attack_K2Node_ActionPadEvent_11::Key' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.Look Up
// 0x0030 (0x0030 - 0x0000)
struct ProjectPlayerController_C_Look_Up final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMouse;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_297B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ClampCameraInput_ClampValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_297C[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_297D[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalulateCameraSpeed_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProjectLookInputIgnored_ReturnValue;    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectPlayerController_C_Look_Up) == 0x000008, "Wrong alignment on ProjectPlayerController_C_Look_Up");
static_assert(sizeof(ProjectPlayerController_C_Look_Up) == 0x000030, "Wrong size on ProjectPlayerController_C_Look_Up");
static_assert(offsetof(ProjectPlayerController_C_Look_Up, Value) == 0x000000, "Member 'ProjectPlayerController_C_Look_Up::Value' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Up, IsMouse) == 0x000004, "Member 'ProjectPlayerController_C_Look_Up::IsMouse' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Up, CallFunc_ClampCameraInput_ClampValue) == 0x000008, "Member 'ProjectPlayerController_C_Look_Up::CallFunc_ClampCameraInput_ClampValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Up, Temp_bool_Variable) == 0x00000C, "Member 'ProjectPlayerController_C_Look_Up::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Up, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'ProjectPlayerController_C_Look_Up::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Up, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000018, "Member 'ProjectPlayerController_C_Look_Up::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Up, K2Node_Select_Default) == 0x000020, "Member 'ProjectPlayerController_C_Look_Up::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Up, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'ProjectPlayerController_C_Look_Up::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Up, CallFunc_CalulateCameraSpeed_ReturnValue) == 0x000028, "Member 'ProjectPlayerController_C_Look_Up::CallFunc_CalulateCameraSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Up, CallFunc_IsProjectLookInputIgnored_ReturnValue) == 0x00002C, "Member 'ProjectPlayerController_C_Look_Up::CallFunc_IsProjectLookInputIgnored_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Up, CallFunc_Not_PreBool_ReturnValue) == 0x00002D, "Member 'ProjectPlayerController_C_Look_Up::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.Look Right
// 0x0038 (0x0038 - 0x0000)
struct ProjectPlayerController_C_Look_Right final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMouse;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_297E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ClampCameraInput_ClampValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_297F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProjectLookInputIgnored_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2980[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2981[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalulateCameraSpeed_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectPlayerController_C_Look_Right) == 0x000008, "Wrong alignment on ProjectPlayerController_C_Look_Right");
static_assert(sizeof(ProjectPlayerController_C_Look_Right) == 0x000038, "Wrong size on ProjectPlayerController_C_Look_Right");
static_assert(offsetof(ProjectPlayerController_C_Look_Right, Value) == 0x000000, "Member 'ProjectPlayerController_C_Look_Right::Value' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Right, IsMouse) == 0x000004, "Member 'ProjectPlayerController_C_Look_Right::IsMouse' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Right, CallFunc_ClampCameraInput_ClampValue) == 0x000008, "Member 'ProjectPlayerController_C_Look_Right::CallFunc_ClampCameraInput_ClampValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Right, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'ProjectPlayerController_C_Look_Right::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Right, CallFunc_IsProjectLookInputIgnored_ReturnValue) == 0x000018, "Member 'ProjectPlayerController_C_Look_Right::CallFunc_IsProjectLookInputIgnored_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Right, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'ProjectPlayerController_C_Look_Right::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Right, Temp_bool_Variable) == 0x00001A, "Member 'ProjectPlayerController_C_Look_Right::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Right, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000020, "Member 'ProjectPlayerController_C_Look_Right::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Right, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'ProjectPlayerController_C_Look_Right::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Right, K2Node_Select_Default) == 0x00002C, "Member 'ProjectPlayerController_C_Look_Right::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Right, CallFunc_CalulateCameraSpeed_ReturnValue) == 0x000030, "Member 'ProjectPlayerController_C_Look_Right::CallFunc_CalulateCameraSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Look_Right, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'ProjectPlayerController_C_Look_Right::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.ClampCameraInput
// 0x001C (0x001C - 0x0000)
struct ProjectPlayerController_C_ClampCameraInput final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClampValue;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckGamePadEnable_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2982[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetStickSensitivityScale_ReturnValue;     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_ClampCameraInput) == 0x000004, "Wrong alignment on ProjectPlayerController_C_ClampCameraInput");
static_assert(sizeof(ProjectPlayerController_C_ClampCameraInput) == 0x00001C, "Wrong size on ProjectPlayerController_C_ClampCameraInput");
static_assert(offsetof(ProjectPlayerController_C_ClampCameraInput, Value) == 0x000000, "Member 'ProjectPlayerController_C_ClampCameraInput::Value' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ClampCameraInput, ClampValue) == 0x000004, "Member 'ProjectPlayerController_C_ClampCameraInput::ClampValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ClampCameraInput, CallFunc_CheckGamePadEnable_ReturnValue) == 0x000008, "Member 'ProjectPlayerController_C_ClampCameraInput::CallFunc_CheckGamePadEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ClampCameraInput, CallFunc_GetStickSensitivityScale_ReturnValue) == 0x00000C, "Member 'ProjectPlayerController_C_ClampCameraInput::CallFunc_GetStickSensitivityScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ClampCameraInput, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'ProjectPlayerController_C_ClampCameraInput::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ClampCameraInput, CallFunc_FClamp_ReturnValue) == 0x000014, "Member 'ProjectPlayerController_C_ClampCameraInput::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_ClampCameraInput, CallFunc_FClamp_ReturnValue_1) == 0x000018, "Member 'ProjectPlayerController_C_ClampCameraInput::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.DebugcameraSpeed_LR
// 0x00E0 (0x00E0 - 0x0000)
struct ProjectPlayerController_C_DebugcameraSpeed_LR final
{
public:
	float                                         Return;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2983[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue; // 0x0008(0x00D0)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2984[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_DebugcameraSpeed_LR) == 0x000008, "Wrong alignment on ProjectPlayerController_C_DebugcameraSpeed_LR");
static_assert(sizeof(ProjectPlayerController_C_DebugcameraSpeed_LR) == 0x0000E0, "Wrong size on ProjectPlayerController_C_DebugcameraSpeed_LR");
static_assert(offsetof(ProjectPlayerController_C_DebugcameraSpeed_LR, Return) == 0x000000, "Member 'ProjectPlayerController_C_DebugcameraSpeed_LR::Return' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_DebugcameraSpeed_LR, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue) == 0x000008, "Member 'ProjectPlayerController_C_DebugcameraSpeed_LR::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_DebugcameraSpeed_LR, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'ProjectPlayerController_C_DebugcameraSpeed_LR::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_DebugcameraSpeed_LR, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000DC, "Member 'ProjectPlayerController_C_DebugcameraSpeed_LR::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.DebugcameraSpeed_UD
// 0x00E0 (0x00E0 - 0x0000)
struct ProjectPlayerController_C_DebugcameraSpeed_UD final
{
public:
	float                                         Return;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2985[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue; // 0x0008(0x00D0)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2986[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_DebugcameraSpeed_UD) == 0x000008, "Wrong alignment on ProjectPlayerController_C_DebugcameraSpeed_UD");
static_assert(sizeof(ProjectPlayerController_C_DebugcameraSpeed_UD) == 0x0000E0, "Wrong size on ProjectPlayerController_C_DebugcameraSpeed_UD");
static_assert(offsetof(ProjectPlayerController_C_DebugcameraSpeed_UD, Return) == 0x000000, "Member 'ProjectPlayerController_C_DebugcameraSpeed_UD::Return' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_DebugcameraSpeed_UD, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue) == 0x000008, "Member 'ProjectPlayerController_C_DebugcameraSpeed_UD::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_DebugcameraSpeed_UD, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'ProjectPlayerController_C_DebugcameraSpeed_UD::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_DebugcameraSpeed_UD, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000DC, "Member 'ProjectPlayerController_C_DebugcameraSpeed_UD::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.Use Garden Tribute
// 0x0100 (0x0100 - 0x0000)
struct ProjectPlayerController_C_Use_Garden_Tribute final
{
public:
	bool                                          ShouldUse;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2987[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameMode_C>       K2Node_DynamicCast_AsBPI_Game_Mode;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2988[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromName_ReturnValue;     // 0x0028(0x00D0)()
	bool                                          CallFunc_IsInGardenLevel_IsInGardenLevel;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectPlayerController_C_Use_Garden_Tribute) == 0x000008, "Wrong alignment on ProjectPlayerController_C_Use_Garden_Tribute");
static_assert(sizeof(ProjectPlayerController_C_Use_Garden_Tribute) == 0x000100, "Wrong size on ProjectPlayerController_C_Use_Garden_Tribute");
static_assert(offsetof(ProjectPlayerController_C_Use_Garden_Tribute, ShouldUse) == 0x000000, "Member 'ProjectPlayerController_C_Use_Garden_Tribute::ShouldUse' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Use_Garden_Tribute, Temp_bool_Variable) == 0x000001, "Member 'ProjectPlayerController_C_Use_Garden_Tribute::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Use_Garden_Tribute, Temp_bool_Variable_1) == 0x000002, "Member 'ProjectPlayerController_C_Use_Garden_Tribute::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Use_Garden_Tribute, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'ProjectPlayerController_C_Use_Garden_Tribute::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Use_Garden_Tribute, K2Node_DynamicCast_AsBPI_Game_Mode) == 0x000010, "Member 'ProjectPlayerController_C_Use_Garden_Tribute::K2Node_DynamicCast_AsBPI_Game_Mode' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Use_Garden_Tribute, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ProjectPlayerController_C_Use_Garden_Tribute::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Use_Garden_Tribute, CallFunc_GetDebugMenuItemFromName_ReturnValue) == 0x000028, "Member 'ProjectPlayerController_C_Use_Garden_Tribute::CallFunc_GetDebugMenuItemFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Use_Garden_Tribute, CallFunc_IsInGardenLevel_IsInGardenLevel) == 0x0000F8, "Member 'ProjectPlayerController_C_Use_Garden_Tribute::CallFunc_IsInGardenLevel_IsInGardenLevel' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Use_Garden_Tribute, CallFunc_Conv_IntToBool_ReturnValue) == 0x0000F9, "Member 'ProjectPlayerController_C_Use_Garden_Tribute::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Use_Garden_Tribute, CallFunc_Greater_IntInt_ReturnValue) == 0x0000FA, "Member 'ProjectPlayerController_C_Use_Garden_Tribute::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Use_Garden_Tribute, K2Node_Select_Default) == 0x0000FB, "Member 'ProjectPlayerController_C_Use_Garden_Tribute::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_Use_Garden_Tribute, CallFunc_BooleanAND_ReturnValue) == 0x0000FC, "Member 'ProjectPlayerController_C_Use_Garden_Tribute::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.NewFunction_0
// 0x0020 (0x0020 - 0x0000)
struct ProjectPlayerController_C_NewFunction_0 final
{
public:
	float                                         CalcInput;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Final;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp;                                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max;                                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2989[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_NewFunction_0) == 0x000004, "Wrong alignment on ProjectPlayerController_C_NewFunction_0");
static_assert(sizeof(ProjectPlayerController_C_NewFunction_0) == 0x000020, "Wrong size on ProjectPlayerController_C_NewFunction_0");
static_assert(offsetof(ProjectPlayerController_C_NewFunction_0, CalcInput) == 0x000000, "Member 'ProjectPlayerController_C_NewFunction_0::CalcInput' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_NewFunction_0, Final) == 0x000004, "Member 'ProjectPlayerController_C_NewFunction_0::Final' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_NewFunction_0, Temp) == 0x000008, "Member 'ProjectPlayerController_C_NewFunction_0::Temp' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_NewFunction_0, Max) == 0x00000C, "Member 'ProjectPlayerController_C_NewFunction_0::Max' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_NewFunction_0, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'ProjectPlayerController_C_NewFunction_0::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_NewFunction_0, CallFunc_FClamp_ReturnValue) == 0x000014, "Member 'ProjectPlayerController_C_NewFunction_0::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_NewFunction_0, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000018, "Member 'ProjectPlayerController_C_NewFunction_0::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_NewFunction_0, CallFunc_SelectFloat_ReturnValue) == 0x00001C, "Member 'ProjectPlayerController_C_NewFunction_0::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.GetInitRotation
// 0x000C (0x000C - 0x0000)
struct ProjectPlayerController_C_GetInitRotation final
{
public:
	struct FRotator                               Param_InitRotation;                                // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProjectPlayerController_C_GetInitRotation) == 0x000004, "Wrong alignment on ProjectPlayerController_C_GetInitRotation");
static_assert(sizeof(ProjectPlayerController_C_GetInitRotation) == 0x00000C, "Wrong size on ProjectPlayerController_C_GetInitRotation");
static_assert(offsetof(ProjectPlayerController_C_GetInitRotation, Param_InitRotation) == 0x000000, "Member 'ProjectPlayerController_C_GetInitRotation::Param_InitRotation' has a wrong offset!");

// Function ProjectPlayerController.ProjectPlayerController_C.CalcCameraSpeed
// 0x0030 (0x0030 - 0x0000)
struct ProjectPlayerController_C_CalcCameraSpeed final
{
public:
	E_AXIS_MAPPING_TYPE                           CameraAxis;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_298A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InputSpeed;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMouseInput;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_298B[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CameraSpeed;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InputSign;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_298C[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SwitchPlatformName;                                // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_CalulateCameraSpeed_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectPlayerController_C_CalcCameraSpeed) == 0x000008, "Wrong alignment on ProjectPlayerController_C_CalcCameraSpeed");
static_assert(sizeof(ProjectPlayerController_C_CalcCameraSpeed) == 0x000030, "Wrong size on ProjectPlayerController_C_CalcCameraSpeed");
static_assert(offsetof(ProjectPlayerController_C_CalcCameraSpeed, CameraAxis) == 0x000000, "Member 'ProjectPlayerController_C_CalcCameraSpeed::CameraAxis' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_CalcCameraSpeed, InputSpeed) == 0x000004, "Member 'ProjectPlayerController_C_CalcCameraSpeed::InputSpeed' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_CalcCameraSpeed, IsMouseInput) == 0x000008, "Member 'ProjectPlayerController_C_CalcCameraSpeed::IsMouseInput' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_CalcCameraSpeed, CameraSpeed) == 0x00000C, "Member 'ProjectPlayerController_C_CalcCameraSpeed::CameraSpeed' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_CalcCameraSpeed, InputSign) == 0x000010, "Member 'ProjectPlayerController_C_CalcCameraSpeed::InputSign' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_CalcCameraSpeed, SwitchPlatformName) == 0x000018, "Member 'ProjectPlayerController_C_CalcCameraSpeed::SwitchPlatformName' has a wrong offset!");
static_assert(offsetof(ProjectPlayerController_C_CalcCameraSpeed, CallFunc_CalulateCameraSpeed_ReturnValue) == 0x000028, "Member 'ProjectPlayerController_C_CalcCameraSpeed::CallFunc_CalulateCameraSpeed_ReturnValue' has a wrong offset!");

}

