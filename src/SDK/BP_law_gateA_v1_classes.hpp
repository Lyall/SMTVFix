#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_law_gateA_v1

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Project_structs.hpp"
#include "MapActorCore_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_law_gateA_v1.BP_law_gateA_v1_C
// 0x0080 (0x02F8 - 0x0278)
class ABP_law_gateA_v1_C final : public AMapActorCore_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_law_gateA_v1_C;                  // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          CollisionBox;                                      // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1;                                       // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_law_gateA_00;                                   // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_law_doorA_00_L;                                 // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_law_doorA_00_R;                                 // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CloseBox;                                          // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          OpenBox;                                           // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Door_Open_open_3E1720DD4FD20FADE6F625B22617979E;   // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Door_Open__Direction_3E1720DD4FD20FADE6F625B22617979E; // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9643[0x3];                                     // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Door_Open;                                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DoorOpenSecond;                                    // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OpenDistance;                                      // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DevilMoveLength;                                   // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpen;                                            // 0x02DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsForceOpened;                                     // 0x02DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9644[0x2];                                     // 0x02DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMinimapIconTableHelper                IconHelper;                                        // 0x02E0(0x000C)(Edit, BlueprintVisible, NoDestructor)
	uint8                                         Pad_9645[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         LoopSE;                                            // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_law_gateA_v1(int32 EntryPoint);
	void BndEvt__CloseBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void SetTimeSpeed(float InTimeSpeed);
	void ToMoveEffect(float EffectDuration);
	void ReceiveBeginPlay();
	void ToStopEffect(float EffectDuration);
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Door_Open__UpdateFunc();
	void Door_Open__FinishedFunc();
	void UserConstructionScript();
	void MoveOverlappingDevil();
	void IsShouldClose(bool* Param_IsShouldClose);
	void SwitchLoopSE(class UAtomComponent*& NewSE);
	void ResetLoopSE();
	void IsPlayerOverlap(class AActor*& OtherActor, bool* IsPlayer);
	void SetMinimapIconTableRow(int32 Param_Index, struct FMinimapIconTableRow* OutRow, bool* NeedToAddMore);
	void BPI_SetDataId(int32 DataId, bool* Dummy);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_law_gateA_v1_C">();
	}
	static class ABP_law_gateA_v1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_law_gateA_v1_C>();
	}
};
static_assert(alignof(ABP_law_gateA_v1_C) == 0x000008, "Wrong alignment on ABP_law_gateA_v1_C");
static_assert(sizeof(ABP_law_gateA_v1_C) == 0x0002F8, "Wrong size on ABP_law_gateA_v1_C");
static_assert(offsetof(ABP_law_gateA_v1_C, UberGraphFrame_BP_law_gateA_v1_C) == 0x000278, "Member 'ABP_law_gateA_v1_C::UberGraphFrame_BP_law_gateA_v1_C' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, CollisionBox) == 0x000280, "Member 'ABP_law_gateA_v1_C::CollisionBox' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, PointLight1) == 0x000288, "Member 'ABP_law_gateA_v1_C::PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, PointLight) == 0x000290, "Member 'ABP_law_gateA_v1_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, SM_law_gateA_00) == 0x000298, "Member 'ABP_law_gateA_v1_C::SM_law_gateA_00' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, SM_law_doorA_00_L) == 0x0002A0, "Member 'ABP_law_gateA_v1_C::SM_law_doorA_00_L' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, SM_law_doorA_00_R) == 0x0002A8, "Member 'ABP_law_gateA_v1_C::SM_law_doorA_00_R' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, CloseBox) == 0x0002B0, "Member 'ABP_law_gateA_v1_C::CloseBox' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, OpenBox) == 0x0002B8, "Member 'ABP_law_gateA_v1_C::OpenBox' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, Door_Open_open_3E1720DD4FD20FADE6F625B22617979E) == 0x0002C0, "Member 'ABP_law_gateA_v1_C::Door_Open_open_3E1720DD4FD20FADE6F625B22617979E' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, Door_Open__Direction_3E1720DD4FD20FADE6F625B22617979E) == 0x0002C4, "Member 'ABP_law_gateA_v1_C::Door_Open__Direction_3E1720DD4FD20FADE6F625B22617979E' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, Door_Open) == 0x0002C8, "Member 'ABP_law_gateA_v1_C::Door_Open' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, DoorOpenSecond) == 0x0002D0, "Member 'ABP_law_gateA_v1_C::DoorOpenSecond' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, OpenDistance) == 0x0002D4, "Member 'ABP_law_gateA_v1_C::OpenDistance' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, DevilMoveLength) == 0x0002D8, "Member 'ABP_law_gateA_v1_C::DevilMoveLength' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, IsOpen) == 0x0002DC, "Member 'ABP_law_gateA_v1_C::IsOpen' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, IsForceOpened) == 0x0002DD, "Member 'ABP_law_gateA_v1_C::IsForceOpened' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, IconHelper) == 0x0002E0, "Member 'ABP_law_gateA_v1_C::IconHelper' has a wrong offset!");
static_assert(offsetof(ABP_law_gateA_v1_C, LoopSE) == 0x0002F0, "Member 'ABP_law_gateA_v1_C::LoopSE' has a wrong offset!");

}

