#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattlePostProcessCtrl

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.ExecuteUbergraph_BattlePostProcessCtrl
// 0x00E8 (0x00E8 - 0x0000)
struct BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPI_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ActorIndex;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_Unit;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPartyUnit_IsValid;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPI_ReturnValue_1;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BPL_GetBIBattleMain_retValue;             // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPL_GetBIBattleMain_success;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BI_GetBattlePlayRate_PlayRate;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_7;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPI_ReturnValue_2;                      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_8;          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_9;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_10;         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl");
static_assert(sizeof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl) == 0x0000E8, "Wrong size on BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, EntryPoint) == 0x000000, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000004, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_GetPI_ReturnValue) == 0x00000C, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_GetPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000010, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000014, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000018, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, K2Node_CustomEvent_ActorIndex) == 0x00001C, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::K2Node_CustomEvent_ActorIndex' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_GetPartyUnit_Unit) == 0x000028, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_GetPartyUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_GetPartyUnit_IsValid) == 0x000030, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_GetPartyUnit_IsValid' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000034, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_GetPI_ReturnValue_1) == 0x000038, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_GetPI_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x00003C, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000040, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, K2Node_CustomEvent_Actor) == 0x000048, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x000050, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Array_Add_ReturnValue_1) == 0x000058, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_BPL_GetBIBattleMain_retValue) == 0x000060, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_BPL_GetBIBattleMain_retValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_BPL_GetBIBattleMain_success) == 0x000070, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_BPL_GetBIBattleMain_success' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_BI_GetBattlePlayRate_PlayRate) == 0x000074, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_BI_GetBattlePlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x000078, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00007C, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_GetTimeSeconds_ReturnValue) == 0x000080, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Divide_FloatFloat_ReturnValue_7) == 0x000084, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Divide_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Conv_FloatToString_ReturnValue) == 0x000088, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Concat_StrStr_ReturnValue) == 0x000098, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x0000A8, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x0000B0, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C0, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_GetPI_ReturnValue_2) == 0x0000D0, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_GetPI_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Divide_FloatFloat_ReturnValue_8) == 0x0000D4, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Divide_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, K2Node_Event_DeltaSeconds) == 0x0000D8, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Divide_FloatFloat_ReturnValue_9) == 0x0000DC, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Divide_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000E0, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl, CallFunc_Divide_FloatFloat_ReturnValue_10) == 0x0000E4, "Member 'BattlePostProcessCtrl_C_ExecuteUbergraph_BattlePostProcessCtrl::CallFunc_Divide_FloatFloat_ReturnValue_10' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BattlePostProcessCtrl_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_ReceiveTick) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_ReceiveTick");
static_assert(sizeof(BattlePostProcessCtrl_C_ReceiveTick) == 0x000004, "Wrong size on BattlePostProcessCtrl_C_ReceiveTick");
static_assert(offsetof(BattlePostProcessCtrl_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BattlePostProcessCtrl_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.CounterActorStopEnd2
// 0x0008 (0x0008 - 0x0000)
struct BattlePostProcessCtrl_C_CounterActorStopEnd2 final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_CounterActorStopEnd2) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_CounterActorStopEnd2");
static_assert(sizeof(BattlePostProcessCtrl_C_CounterActorStopEnd2) == 0x000008, "Wrong size on BattlePostProcessCtrl_C_CounterActorStopEnd2");
static_assert(offsetof(BattlePostProcessCtrl_C_CounterActorStopEnd2, Actor) == 0x000000, "Member 'BattlePostProcessCtrl_C_CounterActorStopEnd2::Actor' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.CounterActorStopEnd
// 0x0004 (0x0004 - 0x0000)
struct BattlePostProcessCtrl_C_CounterActorStopEnd final
{
public:
	int32                                         ActorIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_CounterActorStopEnd) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_CounterActorStopEnd");
static_assert(sizeof(BattlePostProcessCtrl_C_CounterActorStopEnd) == 0x000004, "Wrong size on BattlePostProcessCtrl_C_CounterActorStopEnd");
static_assert(offsetof(BattlePostProcessCtrl_C_CounterActorStopEnd, ActorIndex) == 0x000000, "Member 'BattlePostProcessCtrl_C_CounterActorStopEnd::ActorIndex' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.Setup
// 0x0048 (0x0048 - 0x0000)
struct BattlePostProcessCtrl_C_Setup final
{
public:
	class UMaterialInstanceDynamic*               BattleMapDark;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattlePostProcessActor_C*              CallFunc_GetActorOfClass_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_AddOrUpdateBlendable_RetVal;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattlePostProcessVolume*               K2Node_DynamicCast_AsBattle_Post_Process_Volume;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_Setup) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_Setup");
static_assert(sizeof(BattlePostProcessCtrl_C_Setup) == 0x000048, "Wrong size on BattlePostProcessCtrl_C_Setup");
static_assert(offsetof(BattlePostProcessCtrl_C_Setup, BattleMapDark) == 0x000000, "Member 'BattlePostProcessCtrl_C_Setup::BattleMapDark' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_Setup, CallFunc_GetActorOfClass_ReturnValue) == 0x000008, "Member 'BattlePostProcessCtrl_C_Setup::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_Setup, CallFunc_BI_AddOrUpdateBlendable_RetVal) == 0x000010, "Member 'BattlePostProcessCtrl_C_Setup::CallFunc_BI_AddOrUpdateBlendable_RetVal' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_Setup, CallFunc_GetAllActorsWithTag_OutActors) == 0x000018, "Member 'BattlePostProcessCtrl_C_Setup::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_Setup, CallFunc_Array_Get_Item) == 0x000028, "Member 'BattlePostProcessCtrl_C_Setup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_Setup, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BattlePostProcessCtrl_C_Setup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_Setup, K2Node_DynamicCast_AsBattle_Post_Process_Volume) == 0x000038, "Member 'BattlePostProcessCtrl_C_Setup::K2Node_DynamicCast_AsBattle_Post_Process_Volume' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_Setup, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BattlePostProcessCtrl_C_Setup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_Setup, CallFunc_Greater_IntInt_ReturnValue) == 0x000041, "Member 'BattlePostProcessCtrl_C_Setup::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.SwRadialBlur
// 0x0020 (0x0020 - 0x0000)
struct BattlePostProcessCtrl_C_SwRadialBlur final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lo_Value;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BPL_GetBIBattleMain_retValue;             // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPL_GetBIBattleMain_success;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BI_GetBattlePlayRate_PlayRate;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_SwRadialBlur) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_SwRadialBlur");
static_assert(sizeof(BattlePostProcessCtrl_C_SwRadialBlur) == 0x000020, "Wrong size on BattlePostProcessCtrl_C_SwRadialBlur");
static_assert(offsetof(BattlePostProcessCtrl_C_SwRadialBlur, Sw) == 0x000000, "Member 'BattlePostProcessCtrl_C_SwRadialBlur::Sw' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_SwRadialBlur, Lo_Value) == 0x000004, "Member 'BattlePostProcessCtrl_C_SwRadialBlur::Lo_Value' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_SwRadialBlur, CallFunc_BPL_GetBIBattleMain_retValue) == 0x000008, "Member 'BattlePostProcessCtrl_C_SwRadialBlur::CallFunc_BPL_GetBIBattleMain_retValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_SwRadialBlur, CallFunc_BPL_GetBIBattleMain_success) == 0x000018, "Member 'BattlePostProcessCtrl_C_SwRadialBlur::CallFunc_BPL_GetBIBattleMain_success' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_SwRadialBlur, CallFunc_BI_GetBattlePlayRate_PlayRate) == 0x00001C, "Member 'BattlePostProcessCtrl_C_SwRadialBlur::CallFunc_BI_GetBattlePlayRate_PlayRate' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateCounterPostProcess
// 0x0038 (0x0038 - 0x0000)
struct BattlePostProcessCtrl_C_UpdateCounterPostProcess final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Sin_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_AddOrUpdateBlendable_RetVal;           // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_UpdateCounterPostProcess) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_UpdateCounterPostProcess");
static_assert(sizeof(BattlePostProcessCtrl_C_UpdateCounterPostProcess) == 0x000038, "Wrong size on BattlePostProcessCtrl_C_UpdateCounterPostProcess");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterPostProcess, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattlePostProcessCtrl_C_UpdateCounterPostProcess::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterPostProcess, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattlePostProcessCtrl_C_UpdateCounterPostProcess::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterPostProcess, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattlePostProcessCtrl_C_UpdateCounterPostProcess::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterPostProcess, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BattlePostProcessCtrl_C_UpdateCounterPostProcess::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterPostProcess, CallFunc_Array_Length_ReturnValue_1) == 0x000010, "Member 'BattlePostProcessCtrl_C_UpdateCounterPostProcess::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterPostProcess, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'BattlePostProcessCtrl_C_UpdateCounterPostProcess::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterPostProcess, CallFunc_Array_Get_Item) == 0x000018, "Member 'BattlePostProcessCtrl_C_UpdateCounterPostProcess::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterPostProcess, CallFunc_Array_Length_ReturnValue_2) == 0x000020, "Member 'BattlePostProcessCtrl_C_UpdateCounterPostProcess::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterPostProcess, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BattlePostProcessCtrl_C_UpdateCounterPostProcess::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterPostProcess, CallFunc_Sin_ReturnValue) == 0x000028, "Member 'BattlePostProcessCtrl_C_UpdateCounterPostProcess::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterPostProcess, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'BattlePostProcessCtrl_C_UpdateCounterPostProcess::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterPostProcess, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'BattlePostProcessCtrl_C_UpdateCounterPostProcess::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterPostProcess, CallFunc_Less_FloatFloat_ReturnValue) == 0x000034, "Member 'BattlePostProcessCtrl_C_UpdateCounterPostProcess::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterPostProcess, CallFunc_BI_AddOrUpdateBlendable_RetVal) == 0x000035, "Member 'BattlePostProcessCtrl_C_UpdateCounterPostProcess::CallFunc_BI_AddOrUpdateBlendable_RetVal' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterPostProcess, CallFunc_BooleanOR_ReturnValue) == 0x000036, "Member 'BattlePostProcessCtrl_C_UpdateCounterPostProcess::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateCounterTheta
// 0x0024 (0x0024 - 0x0000)
struct BattlePostProcessCtrl_C_UpdateCounterTheta final
{
public:
	bool                                          Lo_PlayRate;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPI_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPI_ReturnValue_1;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_UpdateCounterTheta) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_UpdateCounterTheta");
static_assert(sizeof(BattlePostProcessCtrl_C_UpdateCounterTheta) == 0x000024, "Wrong size on BattlePostProcessCtrl_C_UpdateCounterTheta");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTheta, Lo_PlayRate) == 0x000000, "Member 'BattlePostProcessCtrl_C_UpdateCounterTheta::Lo_PlayRate' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTheta, CallFunc_GetPI_ReturnValue) == 0x000004, "Member 'BattlePostProcessCtrl_C_UpdateCounterTheta::CallFunc_GetPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTheta, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BattlePostProcessCtrl_C_UpdateCounterTheta::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTheta, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BattlePostProcessCtrl_C_UpdateCounterTheta::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTheta, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'BattlePostProcessCtrl_C_UpdateCounterTheta::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTheta, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000014, "Member 'BattlePostProcessCtrl_C_UpdateCounterTheta::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTheta, CallFunc_GetPI_ReturnValue_1) == 0x000018, "Member 'BattlePostProcessCtrl_C_UpdateCounterTheta::CallFunc_GetPI_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTheta, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'BattlePostProcessCtrl_C_UpdateCounterTheta::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTheta, CallFunc_FClamp_ReturnValue_1) == 0x000020, "Member 'BattlePostProcessCtrl_C_UpdateCounterTheta::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateCounterTimeDilation
// 0x0098 (0x0098 - 0x0000)
struct BattlePostProcessCtrl_C_UpdateCounterTimeDilation final
{
public:
	TArray<class ACharaBase_C*>                   Lo_SlomoActors;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BPL_GetBIBattleMain_retValue;             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPL_GetBIBattleMain_success;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_ret;                    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetPartyLoopMax_retValue;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_const_GetPartyStart_retValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExist_isExist;                          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           CallFunc_GetPartyUnit_Unit;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPartyUnit_IsValid;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue_1;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_UpdateCounterTimeDilation");
static_assert(sizeof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation) == 0x000098, "Wrong size on BattlePostProcessCtrl_C_UpdateCounterTimeDilation");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, Lo_SlomoActors) == 0x000000, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::Lo_SlomoActors' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_BPL_GetBIBattleMain_retValue) == 0x000020, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_BPL_GetBIBattleMain_retValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_BPL_GetBIBattleMain_success) == 0x000030, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_BPL_GetBIBattleMain_success' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_Array_Get_Item) == 0x000038, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_BI_GetPartySystem_ret) == 0x000040, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_BI_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_BI_const_GetPartyLoopMax_retValue) == 0x000054, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_BI_const_GetPartyLoopMax_retValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_Subtract_IntInt_ReturnValue) == 0x00005C, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_BI_const_GetPartyStart_retValue) == 0x000060, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_BI_const_GetPartyStart_retValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, Temp_int_Variable) == 0x000064, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_IsExist_isExist) == 0x000068, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_IsExist_isExist' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_GetPartyUnit_Unit) == 0x000070, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_GetPartyUnit_Unit' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_GetPartyUnit_IsValid) == 0x000078, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_GetPartyUnit_IsValid' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000080, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_Sin_ReturnValue) == 0x000088, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_Sin_ReturnValue_1) == 0x00008C, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_Sin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_FClamp_ReturnValue) == 0x000090, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounterTimeDilation, CallFunc_FClamp_ReturnValue_1) == 0x000094, "Member 'BattlePostProcessCtrl_C_UpdateCounterTimeDilation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateCounter
// 0x0001 (0x0001 - 0x0000)
struct BattlePostProcessCtrl_C_UpdateCounter final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_UpdateCounter) == 0x000001, "Wrong alignment on BattlePostProcessCtrl_C_UpdateCounter");
static_assert(sizeof(BattlePostProcessCtrl_C_UpdateCounter) == 0x000001, "Wrong size on BattlePostProcessCtrl_C_UpdateCounter");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateCounter, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'BattlePostProcessCtrl_C_UpdateCounter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.InitializeCounterDMI
// 0x0030 (0x0030 - 0x0000)
struct BattlePostProcessCtrl_C_InitializeCounterDMI final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_InitializeCounterDMI) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_InitializeCounterDMI");
static_assert(sizeof(BattlePostProcessCtrl_C_InitializeCounterDMI) == 0x000030, "Wrong size on BattlePostProcessCtrl_C_InitializeCounterDMI");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeCounterDMI, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattlePostProcessCtrl_C_InitializeCounterDMI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeCounterDMI, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattlePostProcessCtrl_C_InitializeCounterDMI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeCounterDMI, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattlePostProcessCtrl_C_InitializeCounterDMI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeCounterDMI, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BattlePostProcessCtrl_C_InitializeCounterDMI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeCounterDMI, CallFunc_Array_Get_Item) == 0x000010, "Member 'BattlePostProcessCtrl_C_InitializeCounterDMI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeCounterDMI, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BattlePostProcessCtrl_C_InitializeCounterDMI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeCounterDMI, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'BattlePostProcessCtrl_C_InitializeCounterDMI::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeCounterDMI, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'BattlePostProcessCtrl_C_InitializeCounterDMI::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateBlur
// 0x004C (0x004C - 0x0000)
struct BattlePostProcessCtrl_C_UpdateBlur final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lo_progress;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_RadialBlurSetValue_retValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcBlurUV_ValueU;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcBlurUV_ValueV;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPI_ReturnValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_UpdateBlur) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_UpdateBlur");
static_assert(sizeof(BattlePostProcessCtrl_C_UpdateBlur) == 0x00004C, "Wrong size on BattlePostProcessCtrl_C_UpdateBlur");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, DeltaTime) == 0x000000, "Member 'BattlePostProcessCtrl_C_UpdateBlur::DeltaTime' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, Lo_progress) == 0x000004, "Member 'BattlePostProcessCtrl_C_UpdateBlur::Lo_progress' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, CallFunc_Less_FloatFloat_ReturnValue) == 0x000008, "Member 'BattlePostProcessCtrl_C_UpdateBlur::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'BattlePostProcessCtrl_C_UpdateBlur::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, CallFunc_BI_RadialBlurSetValue_retValue) == 0x000010, "Member 'BattlePostProcessCtrl_C_UpdateBlur::CallFunc_BI_RadialBlurSetValue_retValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, CallFunc_CalcBlurUV_ValueU) == 0x000014, "Member 'BattlePostProcessCtrl_C_UpdateBlur::CallFunc_CalcBlurUV_ValueU' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, CallFunc_CalcBlurUV_ValueV) == 0x000018, "Member 'BattlePostProcessCtrl_C_UpdateBlur::CallFunc_CalcBlurUV_ValueV' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'BattlePostProcessCtrl_C_UpdateBlur::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000020, "Member 'BattlePostProcessCtrl_C_UpdateBlur::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, CallFunc_GetPI_ReturnValue) == 0x000024, "Member 'BattlePostProcessCtrl_C_UpdateBlur::CallFunc_GetPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'BattlePostProcessCtrl_C_UpdateBlur::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BattlePostProcessCtrl_C_UpdateBlur::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000030, "Member 'BattlePostProcessCtrl_C_UpdateBlur::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, CallFunc_Sin_ReturnValue) == 0x000034, "Member 'BattlePostProcessCtrl_C_UpdateBlur::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000038, "Member 'BattlePostProcessCtrl_C_UpdateBlur::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, CallFunc_Lerp_ReturnValue) == 0x00003C, "Member 'BattlePostProcessCtrl_C_UpdateBlur::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'BattlePostProcessCtrl_C_UpdateBlur::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000044, "Member 'BattlePostProcessCtrl_C_UpdateBlur::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateBlur, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000048, "Member 'BattlePostProcessCtrl_C_UpdateBlur::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.GetPartyUnit
// 0x0068 (0x0068 - 0x0000)
struct BattlePostProcessCtrl_C_GetPartyUnit final
{
public:
	int32                                         ActorIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Unit;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     K2Node_DynamicCast_AsBPI_Battle_Main;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_ret;                    // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetPartyUnit_retValue;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_GetPartyUnit) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_GetPartyUnit");
static_assert(sizeof(BattlePostProcessCtrl_C_GetPartyUnit) == 0x000068, "Wrong size on BattlePostProcessCtrl_C_GetPartyUnit");
static_assert(offsetof(BattlePostProcessCtrl_C_GetPartyUnit, ActorIndex) == 0x000000, "Member 'BattlePostProcessCtrl_C_GetPartyUnit::ActorIndex' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_GetPartyUnit, Unit) == 0x000008, "Member 'BattlePostProcessCtrl_C_GetPartyUnit::Unit' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_GetPartyUnit, IsValid) == 0x000010, "Member 'BattlePostProcessCtrl_C_GetPartyUnit::IsValid' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_GetPartyUnit, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BattlePostProcessCtrl_C_GetPartyUnit::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_GetPartyUnit, K2Node_DynamicCast_AsBPI_Battle_Main) == 0x000020, "Member 'BattlePostProcessCtrl_C_GetPartyUnit::K2Node_DynamicCast_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_GetPartyUnit, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BattlePostProcessCtrl_C_GetPartyUnit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_GetPartyUnit, CallFunc_BI_GetPartySystem_ret) == 0x000038, "Member 'BattlePostProcessCtrl_C_GetPartyUnit::CallFunc_BI_GetPartySystem_ret' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_GetPartyUnit, CallFunc_BI_GetPartyUnit_retValue) == 0x000048, "Member 'BattlePostProcessCtrl_C_GetPartyUnit::CallFunc_BI_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_GetPartyUnit, K2Node_DynamicCast_AsChara_Base) == 0x000058, "Member 'BattlePostProcessCtrl_C_GetPartyUnit::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_GetPartyUnit, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BattlePostProcessCtrl_C_GetPartyUnit::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.IsExist
// 0x0038 (0x0038 - 0x0000)
struct BattlePostProcessCtrl_C_IsExist final
{
public:
	TArray<class AActor*>                         Source;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AActor*                                 Checker;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsExist;                                     // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_IsExist) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_IsExist");
static_assert(sizeof(BattlePostProcessCtrl_C_IsExist) == 0x000038, "Wrong size on BattlePostProcessCtrl_C_IsExist");
static_assert(offsetof(BattlePostProcessCtrl_C_IsExist, Source) == 0x000000, "Member 'BattlePostProcessCtrl_C_IsExist::Source' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_IsExist, Checker) == 0x000010, "Member 'BattlePostProcessCtrl_C_IsExist::Checker' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_IsExist, Param_IsExist) == 0x000018, "Member 'BattlePostProcessCtrl_C_IsExist::Param_IsExist' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_IsExist, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BattlePostProcessCtrl_C_IsExist::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_IsExist, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BattlePostProcessCtrl_C_IsExist::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_IsExist, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BattlePostProcessCtrl_C_IsExist::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_IsExist, CallFunc_Array_Get_Item) == 0x000028, "Member 'BattlePostProcessCtrl_C_IsExist::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_IsExist, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'BattlePostProcessCtrl_C_IsExist::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_IsExist, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'BattlePostProcessCtrl_C_IsExist::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_IsExist, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BattlePostProcessCtrl_C_IsExist::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.CalcBlurUV
// 0x0068 (0x0068 - 0x0000)
struct BattlePostProcessCtrl_C_CalcBlurUV final
{
public:
	struct FVector                                BlurOrigin;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ValueU;                                            // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ValueV;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IS_SHIPPING_BUILD_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_CalcBlurUV) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_CalcBlurUV");
static_assert(sizeof(BattlePostProcessCtrl_C_CalcBlurUV) == 0x000068, "Wrong size on BattlePostProcessCtrl_C_CalcBlurUV");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, BlurOrigin) == 0x000000, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::BlurOrigin' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, ValueU) == 0x00000C, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::ValueU' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, ValueV) == 0x000010, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::ValueV' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, CallFunc_IS_SHIPPING_BUILD_ReturnValue) == 0x000014, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::CallFunc_IS_SHIPPING_BUILD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, CallFunc_GetViewportSize_ReturnValue) == 0x000018, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, CallFunc_BreakVector2D_X) == 0x000020, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, CallFunc_GetViewportSize_ReturnValue_1) == 0x000030, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::CallFunc_GetViewportSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, CallFunc_ProjectWorldLocationToScreen_ScreenLocation) == 0x000038, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::CallFunc_ProjectWorldLocationToScreen_ScreenLocation' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, CallFunc_ProjectWorldLocationToScreen_ReturnValue) == 0x000040, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::CallFunc_ProjectWorldLocationToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, CallFunc_BreakVector2D_X_1) == 0x000044, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, CallFunc_BreakVector2D_Y_1) == 0x000048, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, CallFunc_BreakVector2D_X_2) == 0x00004C, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, CallFunc_BreakVector2D_Y_2) == 0x000050, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000054, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000058, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00005C, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_CalcBlurUV, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000060, "Member 'BattlePostProcessCtrl_C_CalcBlurUV::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.InitializeYugamiDMI
// 0x0030 (0x0030 - 0x0000)
struct BattlePostProcessCtrl_C_InitializeYugamiDMI final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_InitializeYugamiDMI) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_InitializeYugamiDMI");
static_assert(sizeof(BattlePostProcessCtrl_C_InitializeYugamiDMI) == 0x000030, "Wrong size on BattlePostProcessCtrl_C_InitializeYugamiDMI");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeYugamiDMI, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattlePostProcessCtrl_C_InitializeYugamiDMI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeYugamiDMI, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattlePostProcessCtrl_C_InitializeYugamiDMI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeYugamiDMI, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattlePostProcessCtrl_C_InitializeYugamiDMI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeYugamiDMI, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BattlePostProcessCtrl_C_InitializeYugamiDMI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeYugamiDMI, CallFunc_Array_Get_Item) == 0x000010, "Member 'BattlePostProcessCtrl_C_InitializeYugamiDMI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeYugamiDMI, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BattlePostProcessCtrl_C_InitializeYugamiDMI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeYugamiDMI, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'BattlePostProcessCtrl_C_InitializeYugamiDMI::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeYugamiDMI, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'BattlePostProcessCtrl_C_InitializeYugamiDMI::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateYugami
// 0x0038 (0x0038 - 0x0000)
struct BattlePostProcessCtrl_C_UpdateYugami final
{
public:
	float                                         Weight;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FogColor;                                          // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_AddOrUpdateBlendable_RetVal;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_UpdateYugami) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_UpdateYugami");
static_assert(sizeof(BattlePostProcessCtrl_C_UpdateYugami) == 0x000038, "Wrong size on BattlePostProcessCtrl_C_UpdateYugami");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateYugami, Weight) == 0x000000, "Member 'BattlePostProcessCtrl_C_UpdateYugami::Weight' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateYugami, FogColor) == 0x000004, "Member 'BattlePostProcessCtrl_C_UpdateYugami::FogColor' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateYugami, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BattlePostProcessCtrl_C_UpdateYugami::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateYugami, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BattlePostProcessCtrl_C_UpdateYugami::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateYugami, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BattlePostProcessCtrl_C_UpdateYugami::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateYugami, CallFunc_Array_Get_Item) == 0x000020, "Member 'BattlePostProcessCtrl_C_UpdateYugami::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateYugami, CallFunc_BI_AddOrUpdateBlendable_RetVal) == 0x000028, "Member 'BattlePostProcessCtrl_C_UpdateYugami::CallFunc_BI_AddOrUpdateBlendable_RetVal' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateYugami, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BattlePostProcessCtrl_C_UpdateYugami::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateYugami, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BattlePostProcessCtrl_C_UpdateYugami::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.InitializeOomagatokiDMI
// 0x0018 (0x0018 - 0x0000)
struct BattlePostProcessCtrl_C_InitializeOomagatokiDMI final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_InitializeOomagatokiDMI) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_InitializeOomagatokiDMI");
static_assert(sizeof(BattlePostProcessCtrl_C_InitializeOomagatokiDMI) == 0x000018, "Wrong size on BattlePostProcessCtrl_C_InitializeOomagatokiDMI");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeOomagatokiDMI, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BattlePostProcessCtrl_C_InitializeOomagatokiDMI::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeOomagatokiDMI, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'BattlePostProcessCtrl_C_InitializeOomagatokiDMI::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeOomagatokiDMI, CallFunc_Array_Add_ReturnValue) == 0x000010, "Member 'BattlePostProcessCtrl_C_InitializeOomagatokiDMI::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeOomagatokiDMI, CallFunc_Array_Add_ReturnValue_1) == 0x000014, "Member 'BattlePostProcessCtrl_C_InitializeOomagatokiDMI::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateOomagatoki
// 0x0028 (0x0028 - 0x0000)
struct BattlePostProcessCtrl_C_UpdateOomagatoki final
{
public:
	float                                         Weight;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_AddOrUpdateBlendable_RetVal;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_UpdateOomagatoki) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_UpdateOomagatoki");
static_assert(sizeof(BattlePostProcessCtrl_C_UpdateOomagatoki) == 0x000028, "Wrong size on BattlePostProcessCtrl_C_UpdateOomagatoki");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateOomagatoki, Weight) == 0x000000, "Member 'BattlePostProcessCtrl_C_UpdateOomagatoki::Weight' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateOomagatoki, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BattlePostProcessCtrl_C_UpdateOomagatoki::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateOomagatoki, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattlePostProcessCtrl_C_UpdateOomagatoki::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateOomagatoki, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattlePostProcessCtrl_C_UpdateOomagatoki::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateOomagatoki, CallFunc_Array_Get_Item) == 0x000010, "Member 'BattlePostProcessCtrl_C_UpdateOomagatoki::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateOomagatoki, CallFunc_BI_AddOrUpdateBlendable_RetVal) == 0x000018, "Member 'BattlePostProcessCtrl_C_UpdateOomagatoki::CallFunc_BI_AddOrUpdateBlendable_RetVal' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateOomagatoki, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BattlePostProcessCtrl_C_UpdateOomagatoki::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateOomagatoki, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BattlePostProcessCtrl_C_UpdateOomagatoki::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.InitializeWhiteOut
// 0x0010 (0x0010 - 0x0000)
struct BattlePostProcessCtrl_C_InitializeWhiteOut final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_InitializeWhiteOut) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_InitializeWhiteOut");
static_assert(sizeof(BattlePostProcessCtrl_C_InitializeWhiteOut) == 0x000010, "Wrong size on BattlePostProcessCtrl_C_InitializeWhiteOut");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeWhiteOut, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BattlePostProcessCtrl_C_InitializeWhiteOut::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeWhiteOut, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'BattlePostProcessCtrl_C_InitializeWhiteOut::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateWhiteOut
// 0x0028 (0x0028 - 0x0000)
struct BattlePostProcessCtrl_C_UpdateWhiteOut final
{
public:
	float                                         Weight;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_AddOrUpdateBlendable_RetVal;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_UpdateWhiteOut) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_UpdateWhiteOut");
static_assert(sizeof(BattlePostProcessCtrl_C_UpdateWhiteOut) == 0x000028, "Wrong size on BattlePostProcessCtrl_C_UpdateWhiteOut");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateWhiteOut, Weight) == 0x000000, "Member 'BattlePostProcessCtrl_C_UpdateWhiteOut::Weight' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateWhiteOut, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BattlePostProcessCtrl_C_UpdateWhiteOut::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateWhiteOut, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattlePostProcessCtrl_C_UpdateWhiteOut::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateWhiteOut, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattlePostProcessCtrl_C_UpdateWhiteOut::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateWhiteOut, CallFunc_Array_Get_Item) == 0x000010, "Member 'BattlePostProcessCtrl_C_UpdateWhiteOut::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateWhiteOut, CallFunc_BI_AddOrUpdateBlendable_RetVal) == 0x000018, "Member 'BattlePostProcessCtrl_C_UpdateWhiteOut::CallFunc_BI_AddOrUpdateBlendable_RetVal' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateWhiteOut, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BattlePostProcessCtrl_C_UpdateWhiteOut::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateWhiteOut, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BattlePostProcessCtrl_C_UpdateWhiteOut::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.SetMapDarkAlpha
// 0x0008 (0x0008 - 0x0000)
struct BattlePostProcessCtrl_C_SetMapDarkAlpha final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_SetMapDarkAlpha) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_SetMapDarkAlpha");
static_assert(sizeof(BattlePostProcessCtrl_C_SetMapDarkAlpha) == 0x000008, "Wrong size on BattlePostProcessCtrl_C_SetMapDarkAlpha");
static_assert(offsetof(BattlePostProcessCtrl_C_SetMapDarkAlpha, Alpha) == 0x000000, "Member 'BattlePostProcessCtrl_C_SetMapDarkAlpha::Alpha' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_SetMapDarkAlpha, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BattlePostProcessCtrl_C_SetMapDarkAlpha::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.InitializeCharaBlack
// 0x0008 (0x0008 - 0x0000)
struct BattlePostProcessCtrl_C_InitializeCharaBlack final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_InitializeCharaBlack) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_InitializeCharaBlack");
static_assert(sizeof(BattlePostProcessCtrl_C_InitializeCharaBlack) == 0x000008, "Wrong size on BattlePostProcessCtrl_C_InitializeCharaBlack");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeCharaBlack, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BattlePostProcessCtrl_C_InitializeCharaBlack::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.UpdateQuiz
// 0x0005 (0x0005 - 0x0000)
struct BattlePostProcessCtrl_C_UpdateQuiz final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_AddOrUpdateBlendable_RetVal;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_AddOrUpdateBlendable_RetVal_1;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_AddOrUpdateBlendable_RetVal_2;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_AddOrUpdateBlendable_RetVal_3;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_UpdateQuiz) == 0x000001, "Wrong alignment on BattlePostProcessCtrl_C_UpdateQuiz");
static_assert(sizeof(BattlePostProcessCtrl_C_UpdateQuiz) == 0x000005, "Wrong size on BattlePostProcessCtrl_C_UpdateQuiz");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateQuiz, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BattlePostProcessCtrl_C_UpdateQuiz::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateQuiz, CallFunc_BI_AddOrUpdateBlendable_RetVal) == 0x000001, "Member 'BattlePostProcessCtrl_C_UpdateQuiz::CallFunc_BI_AddOrUpdateBlendable_RetVal' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateQuiz, CallFunc_BI_AddOrUpdateBlendable_RetVal_1) == 0x000002, "Member 'BattlePostProcessCtrl_C_UpdateQuiz::CallFunc_BI_AddOrUpdateBlendable_RetVal_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateQuiz, CallFunc_BI_AddOrUpdateBlendable_RetVal_2) == 0x000003, "Member 'BattlePostProcessCtrl_C_UpdateQuiz::CallFunc_BI_AddOrUpdateBlendable_RetVal_2' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_UpdateQuiz, CallFunc_BI_AddOrUpdateBlendable_RetVal_3) == 0x000004, "Member 'BattlePostProcessCtrl_C_UpdateQuiz::CallFunc_BI_AddOrUpdateBlendable_RetVal_3' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.InitializeBlur
// 0x0018 (0x0018 - 0x0000)
struct BattlePostProcessCtrl_C_InitializeBlur final
{
public:
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_InitializeBlur) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_InitializeBlur");
static_assert(sizeof(BattlePostProcessCtrl_C_InitializeBlur) == 0x000018, "Wrong size on BattlePostProcessCtrl_C_InitializeBlur");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeBlur, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000000, "Member 'BattlePostProcessCtrl_C_InitializeBlur::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_InitializeBlur, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BattlePostProcessCtrl_C_InitializeBlur::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_RadialBlurSetValue
// 0x003C (0x003C - 0x0000)
struct BattlePostProcessCtrl_C_BI_RadialBlurSetValue final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BlurOrigin;                                        // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartAmount;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndAmount;                                         // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartKeepSec;                                      // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LeapSec;                                           // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcBlurUV_ValueU;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcBlurUV_ValueV;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_RadialBlurSetValue) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_RadialBlurSetValue");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_RadialBlurSetValue) == 0x00003C, "Wrong size on BattlePostProcessCtrl_C_BI_RadialBlurSetValue");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RadialBlurSetValue, Sw) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_RadialBlurSetValue::Sw' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RadialBlurSetValue, BlurOrigin) == 0x000004, "Member 'BattlePostProcessCtrl_C_BI_RadialBlurSetValue::BlurOrigin' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RadialBlurSetValue, Scale) == 0x000010, "Member 'BattlePostProcessCtrl_C_BI_RadialBlurSetValue::Scale' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RadialBlurSetValue, Damage) == 0x000014, "Member 'BattlePostProcessCtrl_C_BI_RadialBlurSetValue::Damage' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RadialBlurSetValue, StartAmount) == 0x000018, "Member 'BattlePostProcessCtrl_C_BI_RadialBlurSetValue::StartAmount' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RadialBlurSetValue, EndAmount) == 0x00001C, "Member 'BattlePostProcessCtrl_C_BI_RadialBlurSetValue::EndAmount' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RadialBlurSetValue, StartKeepSec) == 0x000020, "Member 'BattlePostProcessCtrl_C_BI_RadialBlurSetValue::StartKeepSec' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RadialBlurSetValue, LeapSec) == 0x000024, "Member 'BattlePostProcessCtrl_C_BI_RadialBlurSetValue::LeapSec' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RadialBlurSetValue, RetValue) == 0x000028, "Member 'BattlePostProcessCtrl_C_BI_RadialBlurSetValue::RetValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RadialBlurSetValue, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'BattlePostProcessCtrl_C_BI_RadialBlurSetValue::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RadialBlurSetValue, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'BattlePostProcessCtrl_C_BI_RadialBlurSetValue::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RadialBlurSetValue, CallFunc_CalcBlurUV_ValueU) == 0x000034, "Member 'BattlePostProcessCtrl_C_BI_RadialBlurSetValue::CallFunc_CalcBlurUV_ValueU' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RadialBlurSetValue, CallFunc_CalcBlurUV_ValueV) == 0x000038, "Member 'BattlePostProcessCtrl_C_BI_RadialBlurSetValue::CallFunc_CalcBlurUV_ValueV' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_AddOrUpdateBlendable
// 0x0020 (0x0020 - 0x0000)
struct BattlePostProcessCtrl_C_BI_AddOrUpdateBlendable final
{
public:
	class UMaterialInstanceDynamic*               PostProcessMaterial;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Waight;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetVal;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_AddOrUpdateBlendable) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_BI_AddOrUpdateBlendable");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_AddOrUpdateBlendable) == 0x000020, "Wrong size on BattlePostProcessCtrl_C_BI_AddOrUpdateBlendable");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_AddOrUpdateBlendable, PostProcessMaterial) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_AddOrUpdateBlendable::PostProcessMaterial' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_AddOrUpdateBlendable, Waight) == 0x000008, "Member 'BattlePostProcessCtrl_C_BI_AddOrUpdateBlendable::Waight' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_AddOrUpdateBlendable, RetVal) == 0x00000C, "Member 'BattlePostProcessCtrl_C_BI_AddOrUpdateBlendable::RetVal' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_AddOrUpdateBlendable, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000010, "Member 'BattlePostProcessCtrl_C_BI_AddOrUpdateBlendable::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_CounterEnd
// 0x0001 (0x0001 - 0x0000)
struct BattlePostProcessCtrl_C_BI_CounterEnd final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_CounterEnd) == 0x000001, "Wrong alignment on BattlePostProcessCtrl_C_BI_CounterEnd");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_CounterEnd) == 0x000001, "Wrong size on BattlePostProcessCtrl_C_BI_CounterEnd");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_CounterEnd, NoUse) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_CounterEnd::NoUse' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_CounterBegin
// 0x0001 (0x0001 - 0x0000)
struct BattlePostProcessCtrl_C_BI_CounterBegin final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_CounterBegin) == 0x000001, "Wrong alignment on BattlePostProcessCtrl_C_BI_CounterBegin");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_CounterBegin) == 0x000001, "Wrong size on BattlePostProcessCtrl_C_BI_CounterBegin");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_CounterBegin, NoUse) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_CounterBegin::NoUse' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_CounterActorStopEnd
// 0x0008 (0x0008 - 0x0000)
struct BattlePostProcessCtrl_C_BI_CounterActorStopEnd final
{
public:
	int32                                         ActorPartyIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_CounterActorStopEnd) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_CounterActorStopEnd");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_CounterActorStopEnd) == 0x000008, "Wrong size on BattlePostProcessCtrl_C_BI_CounterActorStopEnd");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_CounterActorStopEnd, ActorPartyIndex) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_CounterActorStopEnd::ActorPartyIndex' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_CounterActorStopEnd, NoUse) == 0x000004, "Member 'BattlePostProcessCtrl_C_BI_CounterActorStopEnd::NoUse' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_CounterActorStopEnd2
// 0x0010 (0x0010 - 0x0000)
struct BattlePostProcessCtrl_C_BI_CounterActorStopEnd2 final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetVal;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_CounterActorStopEnd2) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_BI_CounterActorStopEnd2");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_CounterActorStopEnd2) == 0x000010, "Wrong size on BattlePostProcessCtrl_C_BI_CounterActorStopEnd2");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_CounterActorStopEnd2, Actor) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_CounterActorStopEnd2::Actor' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_CounterActorStopEnd2, RetVal) == 0x000008, "Member 'BattlePostProcessCtrl_C_BI_CounterActorStopEnd2::RetVal' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_MotionBlurEnable
// 0x0003 (0x0003 - 0x0000)
struct BattlePostProcessCtrl_C_BI_MotionBlurEnable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoUse;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_MotionBlurEnable) == 0x000001, "Wrong alignment on BattlePostProcessCtrl_C_BI_MotionBlurEnable");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_MotionBlurEnable) == 0x000003, "Wrong size on BattlePostProcessCtrl_C_BI_MotionBlurEnable");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_MotionBlurEnable, Enable) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_MotionBlurEnable::Enable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_MotionBlurEnable, NoUse) == 0x000001, "Member 'BattlePostProcessCtrl_C_BI_MotionBlurEnable::NoUse' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_MotionBlurEnable, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BattlePostProcessCtrl_C_BI_MotionBlurEnable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_YugamiUpdate
// 0x0018 (0x0018 - 0x0000)
struct BattlePostProcessCtrl_C_BI_YugamiUpdate final
{
public:
	float                                         Weight;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FogColor;                                          // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_YugamiUpdate) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_YugamiUpdate");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_YugamiUpdate) == 0x000018, "Wrong size on BattlePostProcessCtrl_C_BI_YugamiUpdate");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_YugamiUpdate, Weight) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_YugamiUpdate::Weight' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_YugamiUpdate, FogColor) == 0x000004, "Member 'BattlePostProcessCtrl_C_BI_YugamiUpdate::FogColor' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_YugamiUpdate, NoUse) == 0x000014, "Member 'BattlePostProcessCtrl_C_BI_YugamiUpdate::NoUse' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_OomagatokiUpdate
// 0x0008 (0x0008 - 0x0000)
struct BattlePostProcessCtrl_C_BI_OomagatokiUpdate final
{
public:
	float                                         Weight;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_OomagatokiUpdate) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_OomagatokiUpdate");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_OomagatokiUpdate) == 0x000008, "Wrong size on BattlePostProcessCtrl_C_BI_OomagatokiUpdate");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_OomagatokiUpdate, Weight) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_OomagatokiUpdate::Weight' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_OomagatokiUpdate, NoUse) == 0x000004, "Member 'BattlePostProcessCtrl_C_BI_OomagatokiUpdate::NoUse' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_WhiteOutUpdate
// 0x0008 (0x0008 - 0x0000)
struct BattlePostProcessCtrl_C_BI_WhiteOutUpdate final
{
public:
	float                                         Weight;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_WhiteOutUpdate) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_WhiteOutUpdate");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_WhiteOutUpdate) == 0x000008, "Wrong size on BattlePostProcessCtrl_C_BI_WhiteOutUpdate");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_WhiteOutUpdate, Weight) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_WhiteOutUpdate::Weight' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_WhiteOutUpdate, NoUse) == 0x000004, "Member 'BattlePostProcessCtrl_C_BI_WhiteOutUpdate::NoUse' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetMapDarkAlpha
// 0x0008 (0x0008 - 0x0000)
struct BattlePostProcessCtrl_C_BI_SetMapDarkAlpha final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_SetMapDarkAlpha) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_SetMapDarkAlpha");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_SetMapDarkAlpha) == 0x000008, "Wrong size on BattlePostProcessCtrl_C_BI_SetMapDarkAlpha");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetMapDarkAlpha, Alpha) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_SetMapDarkAlpha::Alpha' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetMapDarkAlpha, NoUse) == 0x000004, "Member 'BattlePostProcessCtrl_C_BI_SetMapDarkAlpha::NoUse' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetCharaBlackWeight
// 0x0008 (0x0008 - 0x0000)
struct BattlePostProcessCtrl_C_BI_SetCharaBlackWeight final
{
public:
	float                                         Weight;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_SetCharaBlackWeight) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_SetCharaBlackWeight");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_SetCharaBlackWeight) == 0x000008, "Wrong size on BattlePostProcessCtrl_C_BI_SetCharaBlackWeight");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetCharaBlackWeight, Weight) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_SetCharaBlackWeight::Weight' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetCharaBlackWeight, Dummy) == 0x000004, "Member 'BattlePostProcessCtrl_C_BI_SetCharaBlackWeight::Dummy' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetCharaBlackScalar
// 0x0010 (0x0010 - 0x0000)
struct BattlePostProcessCtrl_C_BI_SetCharaBlackScalar final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_SetCharaBlackScalar) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_SetCharaBlackScalar");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_SetCharaBlackScalar) == 0x000010, "Wrong size on BattlePostProcessCtrl_C_BI_SetCharaBlackScalar");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetCharaBlackScalar, ParameterName) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_SetCharaBlackScalar::ParameterName' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetCharaBlackScalar, Value) == 0x000008, "Member 'BattlePostProcessCtrl_C_BI_SetCharaBlackScalar::Value' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetCharaBlackScalar, Dummy) == 0x00000C, "Member 'BattlePostProcessCtrl_C_BI_SetCharaBlackScalar::Dummy' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetCharaBlackVector
// 0x001C (0x001C - 0x0000)
struct BattlePostProcessCtrl_C_BI_SetCharaBlackVector final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Value;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_SetCharaBlackVector) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_SetCharaBlackVector");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_SetCharaBlackVector) == 0x00001C, "Wrong size on BattlePostProcessCtrl_C_BI_SetCharaBlackVector");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetCharaBlackVector, ParameterName) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_SetCharaBlackVector::ParameterName' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetCharaBlackVector, Value) == 0x000008, "Member 'BattlePostProcessCtrl_C_BI_SetCharaBlackVector::Value' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetCharaBlackVector, Dummy) == 0x000018, "Member 'BattlePostProcessCtrl_C_BI_SetCharaBlackVector::Dummy' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_RemovePostMaterial
// 0x0020 (0x0020 - 0x0000)
struct BattlePostProcessCtrl_C_BI_RemovePostMaterial final
{
public:
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_RemovedInLoop;                                   // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_RemoveBlendable_InBlendableObject_CastInput; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_RemovePostMaterial) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_BI_RemovePostMaterial");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_RemovePostMaterial) == 0x000020, "Wrong size on BattlePostProcessCtrl_C_BI_RemovePostMaterial");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemovePostMaterial, Mid) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_RemovePostMaterial::Mid' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemovePostMaterial, NoUse) == 0x000008, "Member 'BattlePostProcessCtrl_C_BI_RemovePostMaterial::NoUse' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemovePostMaterial, L_RemovedInLoop) == 0x000009, "Member 'BattlePostProcessCtrl_C_BI_RemovePostMaterial::L_RemovedInLoop' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemovePostMaterial, CallFunc_RemoveBlendable_InBlendableObject_CastInput) == 0x000010, "Member 'BattlePostProcessCtrl_C_BI_RemovePostMaterial::CallFunc_RemoveBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_InitializeQuiz
// 0x00A0 (0x00A0 - 0x0000)
struct BattlePostProcessCtrl_C_BI_InitializeQuiz final
{
public:
	struct FTransform                             OriginTransform;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          Dummy;                                             // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APostProcessVolume*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0038(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetExposureCompensation_OutIsOverride;    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetExposureCompensation_OutExposureCompensation; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentActiveExposureCompensation_ReturnValue; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_InitializeQuiz) == 0x000010, "Wrong alignment on BattlePostProcessCtrl_C_BI_InitializeQuiz");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_InitializeQuiz) == 0x0000A0, "Wrong size on BattlePostProcessCtrl_C_BI_InitializeQuiz");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_InitializeQuiz, OriginTransform) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_InitializeQuiz::OriginTransform' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_InitializeQuiz, Dummy) == 0x000030, "Member 'BattlePostProcessCtrl_C_BI_InitializeQuiz::Dummy' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_InitializeQuiz, CallFunc_GetAllActorsOfClass_OutActors) == 0x000038, "Member 'BattlePostProcessCtrl_C_BI_InitializeQuiz::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_InitializeQuiz, CallFunc_BreakTransform_Location) == 0x000048, "Member 'BattlePostProcessCtrl_C_BI_InitializeQuiz::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_InitializeQuiz, CallFunc_BreakTransform_Rotation) == 0x000054, "Member 'BattlePostProcessCtrl_C_BI_InitializeQuiz::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_InitializeQuiz, CallFunc_BreakTransform_Scale) == 0x000060, "Member 'BattlePostProcessCtrl_C_BI_InitializeQuiz::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_InitializeQuiz, CallFunc_GetExposureCompensation_OutIsOverride) == 0x00006C, "Member 'BattlePostProcessCtrl_C_BI_InitializeQuiz::CallFunc_GetExposureCompensation_OutIsOverride' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_InitializeQuiz, CallFunc_GetExposureCompensation_OutExposureCompensation) == 0x000070, "Member 'BattlePostProcessCtrl_C_BI_InitializeQuiz::CallFunc_GetExposureCompensation_OutExposureCompensation' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_InitializeQuiz, CallFunc_GetCurrentActiveExposureCompensation_ReturnValue) == 0x000074, "Member 'BattlePostProcessCtrl_C_BI_InitializeQuiz::CallFunc_GetCurrentActiveExposureCompensation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_InitializeQuiz, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000078, "Member 'BattlePostProcessCtrl_C_BI_InitializeQuiz::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_InitializeQuiz, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000080, "Member 'BattlePostProcessCtrl_C_BI_InitializeQuiz::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_InitializeQuiz, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000088, "Member 'BattlePostProcessCtrl_C_BI_InitializeQuiz::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_InitializeQuiz, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x000090, "Member 'BattlePostProcessCtrl_C_BI_InitializeQuiz::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_FinalizeQuiz
// 0x0009 (0x0009 - 0x0000)
struct BattlePostProcessCtrl_C_BI_FinalizeQuiz final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_RemovePostMaterial_NoUse;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_RemovePostMaterial_NoUse_1;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_RemovePostMaterial_NoUse_2;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_RemovePostMaterial_NoUse_3;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_FinalizeQuiz) == 0x000001, "Wrong alignment on BattlePostProcessCtrl_C_BI_FinalizeQuiz");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_FinalizeQuiz) == 0x000009, "Wrong size on BattlePostProcessCtrl_C_BI_FinalizeQuiz");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_FinalizeQuiz, Dummy) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_FinalizeQuiz::Dummy' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_FinalizeQuiz, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BattlePostProcessCtrl_C_BI_FinalizeQuiz::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_FinalizeQuiz, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BattlePostProcessCtrl_C_BI_FinalizeQuiz::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_FinalizeQuiz, CallFunc_BI_RemovePostMaterial_NoUse) == 0x000003, "Member 'BattlePostProcessCtrl_C_BI_FinalizeQuiz::CallFunc_BI_RemovePostMaterial_NoUse' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_FinalizeQuiz, CallFunc_BI_RemovePostMaterial_NoUse_1) == 0x000004, "Member 'BattlePostProcessCtrl_C_BI_FinalizeQuiz::CallFunc_BI_RemovePostMaterial_NoUse_1' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_FinalizeQuiz, CallFunc_IsValid_ReturnValue_2) == 0x000005, "Member 'BattlePostProcessCtrl_C_BI_FinalizeQuiz::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_FinalizeQuiz, CallFunc_IsValid_ReturnValue_3) == 0x000006, "Member 'BattlePostProcessCtrl_C_BI_FinalizeQuiz::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_FinalizeQuiz, CallFunc_BI_RemovePostMaterial_NoUse_2) == 0x000007, "Member 'BattlePostProcessCtrl_C_BI_FinalizeQuiz::CallFunc_BI_RemovePostMaterial_NoUse_2' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_FinalizeQuiz, CallFunc_BI_RemovePostMaterial_NoUse_3) == 0x000008, "Member 'BattlePostProcessCtrl_C_BI_FinalizeQuiz::CallFunc_BI_RemovePostMaterial_NoUse_3' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizWipeWeight
// 0x0008 (0x0008 - 0x0000)
struct BattlePostProcessCtrl_C_BI_SetQuizWipeWeight final
{
public:
	float                                         Weight;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_SetQuizWipeWeight) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_SetQuizWipeWeight");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_SetQuizWipeWeight) == 0x000008, "Wrong size on BattlePostProcessCtrl_C_BI_SetQuizWipeWeight");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizWipeWeight, Weight) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_SetQuizWipeWeight::Weight' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizWipeWeight, Dummy) == 0x000004, "Member 'BattlePostProcessCtrl_C_BI_SetQuizWipeWeight::Dummy' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizWipeScalar
// 0x0010 (0x0010 - 0x0000)
struct BattlePostProcessCtrl_C_BI_SetQuizWipeScalar final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_SetQuizWipeScalar) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_SetQuizWipeScalar");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_SetQuizWipeScalar) == 0x000010, "Wrong size on BattlePostProcessCtrl_C_BI_SetQuizWipeScalar");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizWipeScalar, ParameterName) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_SetQuizWipeScalar::ParameterName' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizWipeScalar, Value) == 0x000008, "Member 'BattlePostProcessCtrl_C_BI_SetQuizWipeScalar::Value' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizWipeScalar, Dummy) == 0x00000C, "Member 'BattlePostProcessCtrl_C_BI_SetQuizWipeScalar::Dummy' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizWipeVector
// 0x001C (0x001C - 0x0000)
struct BattlePostProcessCtrl_C_BI_SetQuizWipeVector final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Value;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_SetQuizWipeVector) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_SetQuizWipeVector");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_SetQuizWipeVector) == 0x00001C, "Wrong size on BattlePostProcessCtrl_C_BI_SetQuizWipeVector");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizWipeVector, ParameterName) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_SetQuizWipeVector::ParameterName' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizWipeVector, Value) == 0x000008, "Member 'BattlePostProcessCtrl_C_BI_SetQuizWipeVector::Value' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizWipeVector, Dummy) == 0x000018, "Member 'BattlePostProcessCtrl_C_BI_SetQuizWipeVector::Dummy' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizCorrectWeight
// 0x0008 (0x0008 - 0x0000)
struct BattlePostProcessCtrl_C_BI_SetQuizCorrectWeight final
{
public:
	float                                         Weight;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_SetQuizCorrectWeight) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_SetQuizCorrectWeight");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_SetQuizCorrectWeight) == 0x000008, "Wrong size on BattlePostProcessCtrl_C_BI_SetQuizCorrectWeight");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizCorrectWeight, Weight) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_SetQuizCorrectWeight::Weight' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizCorrectWeight, Dummy) == 0x000004, "Member 'BattlePostProcessCtrl_C_BI_SetQuizCorrectWeight::Dummy' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizCorrectScalar
// 0x0010 (0x0010 - 0x0000)
struct BattlePostProcessCtrl_C_BI_SetQuizCorrectScalar final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_SetQuizCorrectScalar) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_SetQuizCorrectScalar");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_SetQuizCorrectScalar) == 0x000010, "Wrong size on BattlePostProcessCtrl_C_BI_SetQuizCorrectScalar");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizCorrectScalar, ParameterName) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_SetQuizCorrectScalar::ParameterName' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizCorrectScalar, Value) == 0x000008, "Member 'BattlePostProcessCtrl_C_BI_SetQuizCorrectScalar::Value' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizCorrectScalar, Dummy) == 0x00000C, "Member 'BattlePostProcessCtrl_C_BI_SetQuizCorrectScalar::Dummy' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizCorrectVector
// 0x001C (0x001C - 0x0000)
struct BattlePostProcessCtrl_C_BI_SetQuizCorrectVector final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Value;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_SetQuizCorrectVector) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_SetQuizCorrectVector");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_SetQuizCorrectVector) == 0x00001C, "Wrong size on BattlePostProcessCtrl_C_BI_SetQuizCorrectVector");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizCorrectVector, ParameterName) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_SetQuizCorrectVector::ParameterName' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizCorrectVector, Value) == 0x000008, "Member 'BattlePostProcessCtrl_C_BI_SetQuizCorrectVector::Value' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizCorrectVector, Dummy) == 0x000018, "Member 'BattlePostProcessCtrl_C_BI_SetQuizCorrectVector::Dummy' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizWrongWeight
// 0x0008 (0x0008 - 0x0000)
struct BattlePostProcessCtrl_C_BI_SetQuizWrongWeight final
{
public:
	float                                         Weight;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_SetQuizWrongWeight) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_SetQuizWrongWeight");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_SetQuizWrongWeight) == 0x000008, "Wrong size on BattlePostProcessCtrl_C_BI_SetQuizWrongWeight");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizWrongWeight, Weight) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_SetQuizWrongWeight::Weight' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizWrongWeight, Dummy) == 0x000004, "Member 'BattlePostProcessCtrl_C_BI_SetQuizWrongWeight::Dummy' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizWrongScalar
// 0x0010 (0x0010 - 0x0000)
struct BattlePostProcessCtrl_C_BI_SetQuizWrongScalar final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_SetQuizWrongScalar) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_SetQuizWrongScalar");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_SetQuizWrongScalar) == 0x000010, "Wrong size on BattlePostProcessCtrl_C_BI_SetQuizWrongScalar");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizWrongScalar, ParameterName) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_SetQuizWrongScalar::ParameterName' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizWrongScalar, Value) == 0x000008, "Member 'BattlePostProcessCtrl_C_BI_SetQuizWrongScalar::Value' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizWrongScalar, Dummy) == 0x00000C, "Member 'BattlePostProcessCtrl_C_BI_SetQuizWrongScalar::Dummy' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_SetQuizWrongVector
// 0x001C (0x001C - 0x0000)
struct BattlePostProcessCtrl_C_BI_SetQuizWrongVector final
{
public:
	class FName                                   ParameterName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Value;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_SetQuizWrongVector) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_SetQuizWrongVector");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_SetQuizWrongVector) == 0x00001C, "Wrong size on BattlePostProcessCtrl_C_BI_SetQuizWrongVector");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizWrongVector, ParameterName) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_SetQuizWrongVector::ParameterName' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizWrongVector, Value) == 0x000008, "Member 'BattlePostProcessCtrl_C_BI_SetQuizWrongVector::Value' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_SetQuizWrongVector, Dummy) == 0x000018, "Member 'BattlePostProcessCtrl_C_BI_SetQuizWrongVector::Dummy' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_RemoveYugami
// 0x0020 (0x0020 - 0x0000)
struct BattlePostProcessCtrl_C_BI_RemoveYugami final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_RemovePostMaterial_NoUse;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_RemoveYugami) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_BI_RemoveYugami");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_RemoveYugami) == 0x000020, "Wrong size on BattlePostProcessCtrl_C_BI_RemoveYugami");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemoveYugami, NoUse) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_RemoveYugami::NoUse' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemoveYugami, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BattlePostProcessCtrl_C_BI_RemoveYugami::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemoveYugami, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattlePostProcessCtrl_C_BI_RemoveYugami::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemoveYugami, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattlePostProcessCtrl_C_BI_RemoveYugami::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemoveYugami, CallFunc_Array_Get_Item) == 0x000010, "Member 'BattlePostProcessCtrl_C_BI_RemoveYugami::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemoveYugami, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BattlePostProcessCtrl_C_BI_RemoveYugami::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemoveYugami, CallFunc_BI_RemovePostMaterial_NoUse) == 0x00001C, "Member 'BattlePostProcessCtrl_C_BI_RemoveYugami::CallFunc_BI_RemovePostMaterial_NoUse' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemoveYugami, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BattlePostProcessCtrl_C_BI_RemoveYugami::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_RemoveWhiteOut
// 0x0020 (0x0020 - 0x0000)
struct BattlePostProcessCtrl_C_BI_RemoveWhiteOut final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_RemovePostMaterial_NoUse;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_RemoveWhiteOut) == 0x000008, "Wrong alignment on BattlePostProcessCtrl_C_BI_RemoveWhiteOut");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_RemoveWhiteOut) == 0x000020, "Wrong size on BattlePostProcessCtrl_C_BI_RemoveWhiteOut");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemoveWhiteOut, NoUse) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_RemoveWhiteOut::NoUse' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemoveWhiteOut, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BattlePostProcessCtrl_C_BI_RemoveWhiteOut::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemoveWhiteOut, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BattlePostProcessCtrl_C_BI_RemoveWhiteOut::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemoveWhiteOut, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattlePostProcessCtrl_C_BI_RemoveWhiteOut::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemoveWhiteOut, CallFunc_Array_Get_Item) == 0x000010, "Member 'BattlePostProcessCtrl_C_BI_RemoveWhiteOut::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemoveWhiteOut, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BattlePostProcessCtrl_C_BI_RemoveWhiteOut::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemoveWhiteOut, CallFunc_BI_RemovePostMaterial_NoUse) == 0x00001C, "Member 'BattlePostProcessCtrl_C_BI_RemoveWhiteOut::CallFunc_BI_RemovePostMaterial_NoUse' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_RemoveWhiteOut, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BattlePostProcessCtrl_C_BI_RemoveWhiteOut::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_AddQuizExposureCompensation
// 0x000C (0x000C - 0x0000)
struct BattlePostProcessCtrl_C_BI_AddQuizExposureCompensation final
{
public:
	float                                         AddValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_AddQuizExposureCompensation) == 0x000004, "Wrong alignment on BattlePostProcessCtrl_C_BI_AddQuizExposureCompensation");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_AddQuizExposureCompensation) == 0x00000C, "Wrong size on BattlePostProcessCtrl_C_BI_AddQuizExposureCompensation");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_AddQuizExposureCompensation, AddValue) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_AddQuizExposureCompensation::AddValue' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_AddQuizExposureCompensation, Dummy) == 0x000004, "Member 'BattlePostProcessCtrl_C_BI_AddQuizExposureCompensation::Dummy' has a wrong offset!");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_AddQuizExposureCompensation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BattlePostProcessCtrl_C_BI_AddQuizExposureCompensation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BattlePostProcessCtrl.BattlePostProcessCtrl_C.BI_ResetQuizExposureCompensation
// 0x0001 (0x0001 - 0x0000)
struct BattlePostProcessCtrl_C_BI_ResetQuizExposureCompensation final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattlePostProcessCtrl_C_BI_ResetQuizExposureCompensation) == 0x000001, "Wrong alignment on BattlePostProcessCtrl_C_BI_ResetQuizExposureCompensation");
static_assert(sizeof(BattlePostProcessCtrl_C_BI_ResetQuizExposureCompensation) == 0x000001, "Wrong size on BattlePostProcessCtrl_C_BI_ResetQuizExposureCompensation");
static_assert(offsetof(BattlePostProcessCtrl_C_BI_ResetQuizExposureCompensation, Dummy) == 0x000000, "Member 'BattlePostProcessCtrl_C_BI_ResetQuizExposureCompensation::Dummy' has a wrong offset!");

}

