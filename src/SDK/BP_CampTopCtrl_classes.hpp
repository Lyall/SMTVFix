#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CampTopCtrl

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_CAMPTOPCTRL_GSTATUS_structs.hpp"
#include "E_CAMP_SYSTEM_STATE_structs.hpp"
#include "E_CampQuest_CtrlState_structs.hpp"
#include "Project_structs.hpp"
#include "Project_classes.hpp"
#include "E_SaveLoadEndType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CampTopCtrl.BP_CampTopCtrl_C
// 0x02A0 (0x0528 - 0x0288)
class ABP_CampTopCtrl_C final : public ACampTopCtrlBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWB_CampTopWindow_C*                    WBCampTopWindow;                                   // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGstatusChange;                                   // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	E_CAMPTOPCTRL_GSTATUS                         Maingstatus;                                       // 0x02A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CAMPTOPCTRL_GSTATUS                         Changegstatus;                                     // 0x02A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F57[0x5];                                     // 0x02A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   SORCampCharaPanelCtrl;                             // 0x02A8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CampCharaPanelCtrl_C> BPICampCharaPanelCtrl;                             // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsLoadedActor;                                     // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	E_WIDGET_PRIO                                 WidgetPriority;                                    // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F58[0x2];                                     // 0x02E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Topmenucursor;                                     // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Padbutton;                                         // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Padcursor;                                         // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFinished;                                        // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F59[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   SORCampItemCtrl;                                   // 0x02F8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CampItemCtrl_C>   BPICampItemCtrl;                                   // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsLoadedCharaPanel;                                // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsLoadedCampItemCtrl;                              // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsLoadedCampSkillCtrl;                             // 0x0332(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F5A[0x5];                                     // 0x0333(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DestroyCampCharaPanelCtrl;                         // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DestroyCampItemCtrl;                               // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedItemId;                                    // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUsedPillar;                                      // 0x034C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F5B[0x3];                                     // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   SORCampSkillCtrl;                                  // 0x0350(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CampSkillCtrl_C>  BPICampSkillCtrl;                                  // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AActor*                                 DestroyCampSkillCtrl;                              // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Oldskillnkmindex;                                  // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F5C[0x4];                                     // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   SORCampQuestCtrl2;                                 // 0x0398(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AActor*                                 DestroyCampQuestCtrl2;                             // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CampQuestCtrl2_C> BPICampQuestCtrl2;                                 // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsLoadedCampQuestCtrl;                             // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F5D[0x3];                                     // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Systemmenucursor;                                  // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Testcounter;                                       // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_loadFadeTime;                                    // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_canSystemTick;                                   // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	E_CAMP_SYSTEM_STATE                           M_systemState;                                     // 0x03E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F5E[0x6];                                     // 0x03EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   M_optionCtrl_Soft;                                 // 0x03F0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AActor*                                 M_optionCtrl;                                      // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNewIconUtsusemi;                                 // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsNewIconQuest;                                    // 0x0421(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsNewIconAnalyze;                                  // 0x0422(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F5F[0x5];                                     // 0x0423(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIMovieCtrl_C>    BPIMovieCtrl;                                      // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnableMovieCtrl;                                   // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F60[0x3];                                     // 0x0439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TopMenuInitColorType;                              // 0x043C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Endwaitcounter;                                    // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Substatus;                                         // 0x0444(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Confirmgstatus;                                    // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBackSystemMenu;                                  // 0x044C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsJmupTitle;                                       // 0x044D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F61[0x2];                                     // 0x044E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Returntitlestep;                                   // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Adddeltatime;                                      // 0x0454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Countuptime;                                       // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Itemusesubstatus;                                  // 0x045C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInitializedOpen;                                 // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F62[0x3];                                     // 0x0461(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Substep;                                           // 0x0464(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   SORSaveCtrl;                                       // 0x0468(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AActor*                                 SaveCtrl;                                          // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNewIconSkill;                                    // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsNewIconItem;                                     // 0x0499(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsNewIconParty;                                    // 0x049A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F63[0x1];                                     // 0x049B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Topmenumouseindex;                                 // 0x049C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Systemmenumouseindex;                              // 0x04A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F64[0x4];                                     // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   SORCampHelpCtrl;                                   // 0x04A8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CampHelpCtrl_C>   BPICampHelpCtrl;                                   // 0x04D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AActor*                                 DestroyCampHelpCtrl;                               // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoadedCampHelpCtrl;                              // 0x04E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsGarden;                                          // 0x04E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsNotSave;                                         // 0x04EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F65[0x5];                                     // 0x04EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   SORCampResult;                                     // 0x04F0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AActor*                                 CampResult;                                        // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrevMapId;                                         // 0x0520(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrevAreaId;                                        // 0x0524(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GSubstatus_CampChangeParameter(bool* OurFinished);
	void GSubstatus_CampResult(bool* OurFinished);
	void CalcIconHelp(bool* OutProc);
	void CloseMiitsuWindow(bool InSkipAnimation);
	void OpenMiitsuWindow(bool InSkipAnimation);
	void GSubStatus_Help();
	void ResetSystemMenuMouseFocus();
	void SetSystemMenuMouseFocus();
	void ResetTopMenuMouseFocus();
	void SetTopMenuMouseFocus();
	void SystemMenuMouseMove(int32 InIndex);
	void IsSystemMenuFocus(bool* OutFocus);
	void IsTopMenuFocus(bool* RetForcus);
	void SetTopMenuMouseMove(int32 InIndex);
	void GSubstatus_Save();
	void GSubstatus_Load();
	void GSubstatus_Top();
	void IsInitializedOpenTopMenu(bool* IsOpened);
	void UpdatePartyPanelBySkillList();
	void SetTopMenuButtonHelp(bool InDirectPlay);
	void CalcMenuBGOff();
	void CalcMenuBGOn();
	void RestartNewIcon();
	void CalcMainTitleOn();
	void CalcMainTitleOff();
	void InitializeUtsusemiProc();
	void ReturnStatusUpdateAnalyzeProc();
	void ReturnStatusCreateAnalyzeProc();
	void InitializeAnalyzeProc();
	void ReturnUpdatePartyProc();
	void ReturnCreatePartyProc();
	void InitializePartyProc();
	void Gstatus_SkillUserStatus();
	void MovingCursorCheck(int32 InType);
	void GSubstatus_ReturnTitle();
	void Gstatus_ConfirmMission();
	void Gstatus_WaitQuestEnd();
	void SetWaitUtsusemiParameter();
	void Gstatus_WaitUtsusemiEnd();
	void Gstatus_WaitAnalyzeEnd();
	void SetWaitAnalyzeEndParameter();
	void SubGstatus_TopMenuFadeOut(bool* OutEnd);
	void SetWaitPartyEndParameter();
	void Gstatus_WaitPartyEnd();
	void SetTopMenuColorType(int32 InColorType);
	void SetTopMenuNewIcon();
	void ChangeTopMenuSelectOff();
	void ChangeTopMeneSelectOn();
	void SetSystemTickEnable(bool InEnable);
	void ChangeSystemSubState(E_CAMP_SYSTEM_STATE InState);
	void Gstatus_UtsusemiSkill();
	void Gstatus_Utsusemi();
	void Gstatus_System();
	void Gstatus_Analyze();
	void Gstatus_Quest();
	void Gstatus_UseSkill();
	void Gstatus_Skill();
	void Gstatus_UseItem();
	void Gstatus_Item();
	void IsLoadedCtrl(bool* OutFinished);
	void CanCampStart(bool* OutCando);
	void ChangeCampHelpMessage(int32 InHelpMessageNo, bool InChangeAnime, bool InExecutionText);
	void Gstatus_TopMenu();
	void PadCheck();
	void Gstatus_Party();
	void Gstatus_WaitEnd();
	void Gstatus_WaitLoad();
	void ChangeGstatusParam(E_CAMPTOPCTRL_GSTATUS InParam, bool InMain);
	void OnLoaded_9A4985A1470BFBEED687C19E6B8EFB22(TSubclassOf<class UObject> Loaded);
	void OnLoaded_F9E27D104F02AA706FDDCB979AC97CF8(TSubclassOf<class UObject> Loaded);
	void OnLoaded_7562946E445D209C019A2181204279CE(TSubclassOf<class UObject> Loaded);
	void SystemMenuMouseOnClicked(int32 InIndex);
	void SystemMenuMouseOnHovered(int32 InIndex);
	void EvtCreateCampSaveLoadCtrl();
	void CloseListBG();
	void StartOptionScreen();
	void EndOptionScreen();
	void BeginMouseEvent();
	void InitializeTopMenuListIn();
	void BIESetInitializeTopMenuAnimation(int32 InIndex, int32 InType);
	void BIESetInitializeTopMenuCursorAnimation(int32 InIndex);
	void TopMenuStopList();
	void BIESetInitializeSubMenuAnimation(int32 InIndex);
	void BIESetInitializeSubMenuCursorAnimation(int32 InIndex);
	void InitializeSubMenuListIn(float InStartTime);
	void SubMenuStopList();
	void TopMenuMouseOnHovered(int32 InIndex);
	void BIESetInitializeTopMenuNewIcon();
	void BIESetInitializeTopMenuCursorOn(int32 InIndex);
	void BIESetInitializeTopMenuOn(int32 InIndex, int32 InType);
	void TopMenuMouseOnClicked(int32 InIndex);
	void ICampTopRemove();
	void ICampTopCreate(E_WIDGET_PRIO InPrio);
	void EvtCreateCampResult();
	void ICampTopSetUIMovieCtrl(const class UObject*& UIMovieCtrl);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_BP_CampTopCtrl(int32 EntryPoint);
	void ICampTopIsReturnTitle(bool* OutReturnTitle);
	void ICampTopGetUsedPillar(bool* OutParam);
	void ICampTopIsFinished(bool* OutFinished);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CampTopCtrl_C">();
	}
	static class ABP_CampTopCtrl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CampTopCtrl_C>();
	}
};
static_assert(alignof(ABP_CampTopCtrl_C) == 0x000008, "Wrong alignment on ABP_CampTopCtrl_C");
static_assert(sizeof(ABP_CampTopCtrl_C) == 0x000528, "Wrong size on ABP_CampTopCtrl_C");
static_assert(offsetof(ABP_CampTopCtrl_C, UberGraphFrame) == 0x000288, "Member 'ABP_CampTopCtrl_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, DefaultSceneRoot) == 0x000290, "Member 'ABP_CampTopCtrl_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, WBCampTopWindow) == 0x000298, "Member 'ABP_CampTopCtrl_C::WBCampTopWindow' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsGstatusChange) == 0x0002A0, "Member 'ABP_CampTopCtrl_C::IsGstatusChange' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Maingstatus) == 0x0002A1, "Member 'ABP_CampTopCtrl_C::Maingstatus' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Changegstatus) == 0x0002A2, "Member 'ABP_CampTopCtrl_C::Changegstatus' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, SORCampCharaPanelCtrl) == 0x0002A8, "Member 'ABP_CampTopCtrl_C::SORCampCharaPanelCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, BPICampCharaPanelCtrl) == 0x0002D0, "Member 'ABP_CampTopCtrl_C::BPICampCharaPanelCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsLoadedActor) == 0x0002E0, "Member 'ABP_CampTopCtrl_C::IsLoadedActor' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, WidgetPriority) == 0x0002E1, "Member 'ABP_CampTopCtrl_C::WidgetPriority' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Topmenucursor) == 0x0002E4, "Member 'ABP_CampTopCtrl_C::Topmenucursor' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Padbutton) == 0x0002E8, "Member 'ABP_CampTopCtrl_C::Padbutton' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Padcursor) == 0x0002EC, "Member 'ABP_CampTopCtrl_C::Padcursor' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsFinished) == 0x0002F0, "Member 'ABP_CampTopCtrl_C::IsFinished' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, SORCampItemCtrl) == 0x0002F8, "Member 'ABP_CampTopCtrl_C::SORCampItemCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, BPICampItemCtrl) == 0x000320, "Member 'ABP_CampTopCtrl_C::BPICampItemCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsLoadedCharaPanel) == 0x000330, "Member 'ABP_CampTopCtrl_C::IsLoadedCharaPanel' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsLoadedCampItemCtrl) == 0x000331, "Member 'ABP_CampTopCtrl_C::IsLoadedCampItemCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsLoadedCampSkillCtrl) == 0x000332, "Member 'ABP_CampTopCtrl_C::IsLoadedCampSkillCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, DestroyCampCharaPanelCtrl) == 0x000338, "Member 'ABP_CampTopCtrl_C::DestroyCampCharaPanelCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, DestroyCampItemCtrl) == 0x000340, "Member 'ABP_CampTopCtrl_C::DestroyCampItemCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, SelectedItemId) == 0x000348, "Member 'ABP_CampTopCtrl_C::SelectedItemId' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsUsedPillar) == 0x00034C, "Member 'ABP_CampTopCtrl_C::IsUsedPillar' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, SORCampSkillCtrl) == 0x000350, "Member 'ABP_CampTopCtrl_C::SORCampSkillCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, BPICampSkillCtrl) == 0x000378, "Member 'ABP_CampTopCtrl_C::BPICampSkillCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, DestroyCampSkillCtrl) == 0x000388, "Member 'ABP_CampTopCtrl_C::DestroyCampSkillCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Oldskillnkmindex) == 0x000390, "Member 'ABP_CampTopCtrl_C::Oldskillnkmindex' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, SORCampQuestCtrl2) == 0x000398, "Member 'ABP_CampTopCtrl_C::SORCampQuestCtrl2' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, DestroyCampQuestCtrl2) == 0x0003C0, "Member 'ABP_CampTopCtrl_C::DestroyCampQuestCtrl2' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, BPICampQuestCtrl2) == 0x0003C8, "Member 'ABP_CampTopCtrl_C::BPICampQuestCtrl2' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsLoadedCampQuestCtrl) == 0x0003D8, "Member 'ABP_CampTopCtrl_C::IsLoadedCampQuestCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Systemmenucursor) == 0x0003DC, "Member 'ABP_CampTopCtrl_C::Systemmenucursor' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Testcounter) == 0x0003E0, "Member 'ABP_CampTopCtrl_C::Testcounter' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, M_loadFadeTime) == 0x0003E4, "Member 'ABP_CampTopCtrl_C::M_loadFadeTime' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, M_canSystemTick) == 0x0003E8, "Member 'ABP_CampTopCtrl_C::M_canSystemTick' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, M_systemState) == 0x0003E9, "Member 'ABP_CampTopCtrl_C::M_systemState' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, M_optionCtrl_Soft) == 0x0003F0, "Member 'ABP_CampTopCtrl_C::M_optionCtrl_Soft' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, M_optionCtrl) == 0x000418, "Member 'ABP_CampTopCtrl_C::M_optionCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsNewIconUtsusemi) == 0x000420, "Member 'ABP_CampTopCtrl_C::IsNewIconUtsusemi' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsNewIconQuest) == 0x000421, "Member 'ABP_CampTopCtrl_C::IsNewIconQuest' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsNewIconAnalyze) == 0x000422, "Member 'ABP_CampTopCtrl_C::IsNewIconAnalyze' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, BPIMovieCtrl) == 0x000428, "Member 'ABP_CampTopCtrl_C::BPIMovieCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, EnableMovieCtrl) == 0x000438, "Member 'ABP_CampTopCtrl_C::EnableMovieCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, TopMenuInitColorType) == 0x00043C, "Member 'ABP_CampTopCtrl_C::TopMenuInitColorType' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Endwaitcounter) == 0x000440, "Member 'ABP_CampTopCtrl_C::Endwaitcounter' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Substatus) == 0x000444, "Member 'ABP_CampTopCtrl_C::Substatus' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Confirmgstatus) == 0x000448, "Member 'ABP_CampTopCtrl_C::Confirmgstatus' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsBackSystemMenu) == 0x00044C, "Member 'ABP_CampTopCtrl_C::IsBackSystemMenu' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsJmupTitle) == 0x00044D, "Member 'ABP_CampTopCtrl_C::IsJmupTitle' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Returntitlestep) == 0x000450, "Member 'ABP_CampTopCtrl_C::Returntitlestep' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Adddeltatime) == 0x000454, "Member 'ABP_CampTopCtrl_C::Adddeltatime' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Countuptime) == 0x000458, "Member 'ABP_CampTopCtrl_C::Countuptime' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Itemusesubstatus) == 0x00045C, "Member 'ABP_CampTopCtrl_C::Itemusesubstatus' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsInitializedOpen) == 0x000460, "Member 'ABP_CampTopCtrl_C::IsInitializedOpen' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Substep) == 0x000464, "Member 'ABP_CampTopCtrl_C::Substep' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, SORSaveCtrl) == 0x000468, "Member 'ABP_CampTopCtrl_C::SORSaveCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, SaveCtrl) == 0x000490, "Member 'ABP_CampTopCtrl_C::SaveCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsNewIconSkill) == 0x000498, "Member 'ABP_CampTopCtrl_C::IsNewIconSkill' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsNewIconItem) == 0x000499, "Member 'ABP_CampTopCtrl_C::IsNewIconItem' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsNewIconParty) == 0x00049A, "Member 'ABP_CampTopCtrl_C::IsNewIconParty' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Topmenumouseindex) == 0x00049C, "Member 'ABP_CampTopCtrl_C::Topmenumouseindex' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, Systemmenumouseindex) == 0x0004A0, "Member 'ABP_CampTopCtrl_C::Systemmenumouseindex' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, SORCampHelpCtrl) == 0x0004A8, "Member 'ABP_CampTopCtrl_C::SORCampHelpCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, BPICampHelpCtrl) == 0x0004D0, "Member 'ABP_CampTopCtrl_C::BPICampHelpCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, DestroyCampHelpCtrl) == 0x0004E0, "Member 'ABP_CampTopCtrl_C::DestroyCampHelpCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsLoadedCampHelpCtrl) == 0x0004E8, "Member 'ABP_CampTopCtrl_C::IsLoadedCampHelpCtrl' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsGarden) == 0x0004E9, "Member 'ABP_CampTopCtrl_C::IsGarden' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, IsNotSave) == 0x0004EA, "Member 'ABP_CampTopCtrl_C::IsNotSave' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, SORCampResult) == 0x0004F0, "Member 'ABP_CampTopCtrl_C::SORCampResult' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, CampResult) == 0x000518, "Member 'ABP_CampTopCtrl_C::CampResult' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, PrevMapId) == 0x000520, "Member 'ABP_CampTopCtrl_C::PrevMapId' has a wrong offset!");
static_assert(offsetof(ABP_CampTopCtrl_C, PrevAreaId) == 0x000524, "Member 'ABP_CampTopCtrl_C::PrevAreaId' has a wrong offset!");

}

