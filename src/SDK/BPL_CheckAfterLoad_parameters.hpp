#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_CheckAfterLoad

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Project_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPL_CheckAfterLoad.BPL_CheckAfterLoad_C.CheckPlayerOverlapComponent_AfterLoad
// 0x0580 (0x0580 - 0x0000)
struct BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad final
{
public:
	TArray<class UPrimitiveComponent*>            CheckComponents;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	float                                         IgnoreDistance;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_961F[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverlapComponent;                                  // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9620[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_PlayerLocation;                                  // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_PlayerCollisionHeight;                           // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_PlayerCollisionRadius;                           // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_PlayerCollisionOffset;                           // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9621[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9622[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ProjectGameInstance_C> K2Node_DynamicCast_AsBPI_Project_Game_Instance;    // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckLoadMap_LoadMap;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9623[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleHalfHeight_WithoutHemisphere_ReturnValue; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9624[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9625[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9626[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMapData                               CallFunc_GetMapData_ReturnValue;                   // 0x00B0(0x03A0)()
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0460(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x046C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0478(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9627[0x3];                                     // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9628[0x3];                                     // 0x048D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0494(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x04A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x04B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x04BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x04C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_SphereTraceComponent_HitLocation;      // 0x04D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_SphereTraceComponent_HitNormal;        // 0x04E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_K2_SphereTraceComponent_BoneName;         // 0x04EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SphereTraceComponent_OutHit;           // 0x04F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SphereTraceComponent_ReturnValue;      // 0x057C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad) == 0x000010, "Wrong alignment on BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad");
static_assert(sizeof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad) == 0x000580, "Wrong size on BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CheckComponents) == 0x000000, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CheckComponents' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, IgnoreDistance) == 0x000010, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::IgnoreDistance' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, __WorldContext) == 0x000018, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, OverlapComponent) == 0x000020, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::OverlapComponent' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, L_PlayerLocation) == 0x000024, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::L_PlayerLocation' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, L_PlayerCollisionHeight) == 0x000030, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::L_PlayerCollisionHeight' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, L_PlayerCollisionRadius) == 0x000034, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::L_PlayerCollisionRadius' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, L_PlayerCollisionOffset) == 0x000038, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::L_PlayerCollisionOffset' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_GetPlayerPawn_ReturnValue) == 0x000048, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_GetGameInstance_ReturnValue) == 0x000050, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, K2Node_DynamicCast_AsCustom_Pawn) == 0x000058, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::K2Node_DynamicCast_AsCustom_Pawn' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, K2Node_DynamicCast_AsBPI_Project_Game_Instance) == 0x000068, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::K2Node_DynamicCast_AsBPI_Project_Game_Instance' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_BPI_CheckLoadMap_LoadMap) == 0x000079, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_BPI_CheckLoadMap_LoadMap' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_GetScaledCapsuleHalfHeight_WithoutHemisphere_ReturnValue) == 0x00007C, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_GetScaledCapsuleHalfHeight_WithoutHemisphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000080, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_Greater_IntInt_ReturnValue) == 0x000088, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_Array_Get_Item) == 0x000090, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_IsValid_ReturnValue) == 0x00009C, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000A0, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_GetMapData_ReturnValue) == 0x0000B0, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_GetMapData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_Add_VectorVector_ReturnValue) == 0x000450, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_Vector_Distance_ReturnValue) == 0x00045C, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_BreakTransform_Location) == 0x000460, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_BreakTransform_Rotation) == 0x00046C, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_BreakTransform_Scale) == 0x000478, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_Less_FloatFloat_ReturnValue) == 0x000484, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, Temp_int_Loop_Counter_Variable) == 0x000488, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_Less_IntInt_ReturnValue) == 0x00048C, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_Add_IntInt_ReturnValue) == 0x000490, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_MakeVector_ReturnValue) == 0x000494, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0004A0, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_MakeVector_ReturnValue_1) == 0x0004A4, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0004B0, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0004BC, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0004C8, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_K2_SphereTraceComponent_HitLocation) == 0x0004D4, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_K2_SphereTraceComponent_HitLocation' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_K2_SphereTraceComponent_HitNormal) == 0x0004E0, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_K2_SphereTraceComponent_HitNormal' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_K2_SphereTraceComponent_BoneName) == 0x0004EC, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_K2_SphereTraceComponent_BoneName' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_K2_SphereTraceComponent_OutHit) == 0x0004F4, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_K2_SphereTraceComponent_OutHit' has a wrong offset!");
static_assert(offsetof(BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad, CallFunc_K2_SphereTraceComponent_ReturnValue) == 0x00057C, "Member 'BPL_CheckAfterLoad_C_CheckPlayerOverlapComponent_AfterLoad::CallFunc_K2_SphereTraceComponent_ReturnValue' has a wrong offset!");

}

