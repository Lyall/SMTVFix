#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventScriptCamera

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_EventScriptCamera.BP_EventScriptCamera_C.ExecuteUbergraph_BP_EventScriptCamera
// 0x0290 (0x0290 - 0x0000)
struct BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Delay_1;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_ArmLength;                      // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_FieldOfView;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_BlendTime;                      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CameraRot;                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x009C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Delay;                          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRotateScale_RotateScale;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRotateScale_RotateScale_1;             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_136[0x2];                                      // 0x0136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_2;        // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0170(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x01FC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_286[0x2];                                      // 0x0286(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera) == 0x000008, "Wrong alignment on BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera");
static_assert(sizeof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera) == 0x000290, "Wrong size on BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, EntryPoint) == 0x000000, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_Less_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000005, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, K2Node_CustomEvent_Delay_1) == 0x000010, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::K2Node_CustomEvent_Delay_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000014, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000020, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_GetPlayerController_ReturnValue_1) == 0x000030, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000038, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_GetComponentByClass_ReturnValue) == 0x000040, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_GetPlayerController_ReturnValue_2) == 0x000048, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000050, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_GetViewTarget_ReturnValue) == 0x000060, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_BreakRotator_Roll) == 0x000068, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_BreakRotator_Pitch) == 0x00006C, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_BreakRotator_Yaw) == 0x000070, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_MakeRotator_ReturnValue) == 0x000074, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, K2Node_CustomEvent_ArmLength) == 0x000080, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::K2Node_CustomEvent_ArmLength' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, K2Node_CustomEvent_FieldOfView) == 0x000084, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::K2Node_CustomEvent_FieldOfView' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, K2Node_CustomEvent_BlendTime) == 0x000088, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::K2Node_CustomEvent_BlendTime' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, K2Node_CustomEvent_CameraRot) == 0x00008C, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::K2Node_CustomEvent_CameraRot' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_MakeRotator_ReturnValue_1) == 0x000090, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00009C, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, K2Node_Event_DeltaSeconds) == 0x000124, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, K2Node_CustomEvent_Delay) == 0x000128, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_GetRotateScale_RotateScale) == 0x00012C, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_GetRotateScale_RotateScale' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_GetRotateScale_RotateScale_1) == 0x000130, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_GetRotateScale_RotateScale_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000134, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000135, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_BreakRotator_Roll_1) == 0x000138, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_BreakRotator_Pitch_1) == 0x00013C, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_BreakRotator_Yaw_1) == 0x000140, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_Add_FloatFloat_ReturnValue) == 0x000144, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x000148, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00014C, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_MakeRotator_ReturnValue_2) == 0x000150, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_K2_SetActorRotation_ReturnValue_2) == 0x00015C, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_K2_SetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000160, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_VEase_ReturnValue) == 0x000164, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_VEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000170, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001F8, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x0001FC, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x000284, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000285, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000288, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x00028C, "Member 'BP_EventScriptCamera_C_ExecuteUbergraph_BP_EventScriptCamera::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function BP_EventScriptCamera.BP_EventScriptCamera_C.CheckStart
// 0x0004 (0x0004 - 0x0000)
struct BP_EventScriptCamera_C_CheckStart final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventScriptCamera_C_CheckStart) == 0x000004, "Wrong alignment on BP_EventScriptCamera_C_CheckStart");
static_assert(sizeof(BP_EventScriptCamera_C_CheckStart) == 0x000004, "Wrong size on BP_EventScriptCamera_C_CheckStart");
static_assert(offsetof(BP_EventScriptCamera_C_CheckStart, Delay) == 0x000000, "Member 'BP_EventScriptCamera_C_CheckStart::Delay' has a wrong offset!");

// Function BP_EventScriptCamera.BP_EventScriptCamera_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_EventScriptCamera_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventScriptCamera_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_EventScriptCamera_C_ReceiveTick");
static_assert(sizeof(BP_EventScriptCamera_C_ReceiveTick) == 0x000004, "Wrong size on BP_EventScriptCamera_C_ReceiveTick");
static_assert(offsetof(BP_EventScriptCamera_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_EventScriptCamera_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_EventScriptCamera.BP_EventScriptCamera_C.InitializeCore
// 0x0010 (0x0010 - 0x0000)
struct BP_EventScriptCamera_C_InitializeCore final
{
public:
	float                                         ArmLength;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FieldOfView;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraRot;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventScriptCamera_C_InitializeCore) == 0x000004, "Wrong alignment on BP_EventScriptCamera_C_InitializeCore");
static_assert(sizeof(BP_EventScriptCamera_C_InitializeCore) == 0x000010, "Wrong size on BP_EventScriptCamera_C_InitializeCore");
static_assert(offsetof(BP_EventScriptCamera_C_InitializeCore, ArmLength) == 0x000000, "Member 'BP_EventScriptCamera_C_InitializeCore::ArmLength' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_InitializeCore, FieldOfView) == 0x000004, "Member 'BP_EventScriptCamera_C_InitializeCore::FieldOfView' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_InitializeCore, BlendTime) == 0x000008, "Member 'BP_EventScriptCamera_C_InitializeCore::BlendTime' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_InitializeCore, CameraRot) == 0x00000C, "Member 'BP_EventScriptCamera_C_InitializeCore::CameraRot' has a wrong offset!");

// Function BP_EventScriptCamera.BP_EventScriptCamera_C.CheckFinish
// 0x0004 (0x0004 - 0x0000)
struct BP_EventScriptCamera_C_CheckFinish final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventScriptCamera_C_CheckFinish) == 0x000004, "Wrong alignment on BP_EventScriptCamera_C_CheckFinish");
static_assert(sizeof(BP_EventScriptCamera_C_CheckFinish) == 0x000004, "Wrong size on BP_EventScriptCamera_C_CheckFinish");
static_assert(offsetof(BP_EventScriptCamera_C_CheckFinish, Delay) == 0x000000, "Member 'BP_EventScriptCamera_C_CheckFinish::Delay' has a wrong offset!");

// Function BP_EventScriptCamera.BP_EventScriptCamera_C.Initialize
// 0x0030 (0x0030 - 0x0000)
struct BP_EventScriptCamera_C_Initialize final
{
public:
	float                                         ArmLength;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FieldOfView;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraRot;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Accessor;      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventScriptCamera_C_Initialize) == 0x000008, "Wrong alignment on BP_EventScriptCamera_C_Initialize");
static_assert(sizeof(BP_EventScriptCamera_C_Initialize) == 0x000030, "Wrong size on BP_EventScriptCamera_C_Initialize");
static_assert(offsetof(BP_EventScriptCamera_C_Initialize, ArmLength) == 0x000000, "Member 'BP_EventScriptCamera_C_Initialize::ArmLength' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_Initialize, FieldOfView) == 0x000004, "Member 'BP_EventScriptCamera_C_Initialize::FieldOfView' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_Initialize, BlendTime) == 0x000008, "Member 'BP_EventScriptCamera_C_Initialize::BlendTime' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_Initialize, CameraRot) == 0x00000C, "Member 'BP_EventScriptCamera_C_Initialize::CameraRot' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_Initialize, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'BP_EventScriptCamera_C_Initialize::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_Initialize, K2Node_DynamicCast_AsBPI_Chara_Base_Accessor) == 0x000018, "Member 'BP_EventScriptCamera_C_Initialize::K2Node_DynamicCast_AsBPI_Chara_Base_Accessor' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EventScriptCamera_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EventScriptCamera.BP_EventScriptCamera_C.Finalize
// 0x0028 (0x0028 - 0x0000)
struct BP_EventScriptCamera_C_Finalize final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> K2Node_DynamicCast_AsBPI_Chara_Base_Accessor;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventScriptCamera_C_Finalize) == 0x000008, "Wrong alignment on BP_EventScriptCamera_C_Finalize");
static_assert(sizeof(BP_EventScriptCamera_C_Finalize) == 0x000028, "Wrong size on BP_EventScriptCamera_C_Finalize");
static_assert(offsetof(BP_EventScriptCamera_C_Finalize, BlendTime) == 0x000000, "Member 'BP_EventScriptCamera_C_Finalize::BlendTime' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_Finalize, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_EventScriptCamera_C_Finalize::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_Finalize, K2Node_DynamicCast_AsBPI_Chara_Base_Accessor) == 0x000010, "Member 'BP_EventScriptCamera_C_Finalize::K2Node_DynamicCast_AsBPI_Chara_Base_Accessor' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_Finalize, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EventScriptCamera_C_Finalize::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EventScriptCamera.BP_EventScriptCamera_C.ReturnCamera
// 0x0068 (0x0068 - 0x0000)
struct BP_EventScriptCamera_C_ReturnCamera final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalZ;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalY;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventScriptCamera_C_ReturnCamera) == 0x000008, "Wrong alignment on BP_EventScriptCamera_C_ReturnCamera");
static_assert(sizeof(BP_EventScriptCamera_C_ReturnCamera) == 0x000068, "Wrong size on BP_EventScriptCamera_C_ReturnCamera");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, BlendTime) == 0x000000, "Member 'BP_EventScriptCamera_C_ReturnCamera::BlendTime' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, LocalZ) == 0x000004, "Member 'BP_EventScriptCamera_C_ReturnCamera::LocalZ' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, LocalY) == 0x000008, "Member 'BP_EventScriptCamera_C_ReturnCamera::LocalY' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_EventScriptCamera_C_ReturnCamera::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'BP_EventScriptCamera_C_ReturnCamera::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'BP_EventScriptCamera_C_ReturnCamera::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_EventScriptCamera_C_ReturnCamera::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BP_EventScriptCamera_C_ReturnCamera::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, CallFunc_GetPlayerPawn_ReturnValue) == 0x000028, "Member 'BP_EventScriptCamera_C_ReturnCamera::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000030, "Member 'BP_EventScriptCamera_C_ReturnCamera::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, CallFunc_BreakRotator_Roll) == 0x00003C, "Member 'BP_EventScriptCamera_C_ReturnCamera::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, CallFunc_BreakRotator_Pitch) == 0x000040, "Member 'BP_EventScriptCamera_C_ReturnCamera::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, CallFunc_BreakRotator_Yaw) == 0x000044, "Member 'BP_EventScriptCamera_C_ReturnCamera::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, CallFunc_BreakRotator_Roll_1) == 0x000048, "Member 'BP_EventScriptCamera_C_ReturnCamera::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, CallFunc_BreakRotator_Pitch_1) == 0x00004C, "Member 'BP_EventScriptCamera_C_ReturnCamera::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, CallFunc_BreakRotator_Yaw_1) == 0x000050, "Member 'BP_EventScriptCamera_C_ReturnCamera::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_EventScriptCamera_C_ReturnCamera::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000058, "Member 'BP_EventScriptCamera_C_ReturnCamera::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_ReturnCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'BP_EventScriptCamera_C_ReturnCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_EventScriptCamera.BP_EventScriptCamera_C.MovePosition
// 0x001C (0x001C - 0x0000)
struct BP_EventScriptCamera_C_MovePosition final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_Time;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventScriptCamera_C_MovePosition) == 0x000004, "Wrong alignment on BP_EventScriptCamera_C_MovePosition");
static_assert(sizeof(BP_EventScriptCamera_C_MovePosition) == 0x00001C, "Wrong size on BP_EventScriptCamera_C_MovePosition");
static_assert(offsetof(BP_EventScriptCamera_C_MovePosition, Location) == 0x000000, "Member 'BP_EventScriptCamera_C_MovePosition::Location' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_MovePosition, Param_Time) == 0x00000C, "Member 'BP_EventScriptCamera_C_MovePosition::Param_Time' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_MovePosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_EventScriptCamera_C_MovePosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_EventScriptCamera.BP_EventScriptCamera_C.SetKeyFree
// 0x0001 (0x0001 - 0x0000)
struct BP_EventScriptCamera_C_SetKeyFree final
{
public:
	bool                                          Param_KeyFree;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventScriptCamera_C_SetKeyFree) == 0x000001, "Wrong alignment on BP_EventScriptCamera_C_SetKeyFree");
static_assert(sizeof(BP_EventScriptCamera_C_SetKeyFree) == 0x000001, "Wrong size on BP_EventScriptCamera_C_SetKeyFree");
static_assert(offsetof(BP_EventScriptCamera_C_SetKeyFree, Param_KeyFree) == 0x000000, "Member 'BP_EventScriptCamera_C_SetKeyFree::Param_KeyFree' has a wrong offset!");

// Function BP_EventScriptCamera.BP_EventScriptCamera_C.GetRotateScale
// 0x0088 (0x0088 - 0x0000)
struct BP_EventScriptCamera_C_GetRotateScale final
{
public:
	E_AXIS_MAPPING_TYPE                           Axis;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RotateScale;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempScale;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAxisPad_Value;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ProjectPlayerController_C> K2Node_DynamicCast_AsBPI_Project_Player_Controller; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAxisPad_Value_1;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMouseAxis_Axis;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcCameraSpeed_CameraSpeed;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ProjectPlayerController_C> K2Node_DynamicCast_AsBPI_Project_Player_Controller_1; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMouseAxis_Axis_1;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcCameraSpeed_CameraSpeed_1;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventScriptCamera_C_GetRotateScale) == 0x000008, "Wrong alignment on BP_EventScriptCamera_C_GetRotateScale");
static_assert(sizeof(BP_EventScriptCamera_C_GetRotateScale) == 0x000088, "Wrong size on BP_EventScriptCamera_C_GetRotateScale");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, Axis) == 0x000000, "Member 'BP_EventScriptCamera_C_GetRotateScale::Axis' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, RotateScale) == 0x000004, "Member 'BP_EventScriptCamera_C_GetRotateScale::RotateScale' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, TempScale) == 0x000008, "Member 'BP_EventScriptCamera_C_GetRotateScale::TempScale' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_EventScriptCamera_C_GetRotateScale::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, CallFunc_GetAxisPad_Value) == 0x000018, "Member 'BP_EventScriptCamera_C_GetRotateScale::CallFunc_GetAxisPad_Value' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, K2Node_DynamicCast_AsBPI_Project_Player_Controller) == 0x000020, "Member 'BP_EventScriptCamera_C_GetRotateScale::K2Node_DynamicCast_AsBPI_Project_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_EventScriptCamera_C_GetRotateScale::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, CallFunc_GetAxisPad_Value_1) == 0x000034, "Member 'BP_EventScriptCamera_C_GetRotateScale::CallFunc_GetAxisPad_Value_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, CallFunc_GetMouseAxis_Axis) == 0x000038, "Member 'BP_EventScriptCamera_C_GetRotateScale::CallFunc_GetMouseAxis_Axis' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003C, "Member 'BP_EventScriptCamera_C_GetRotateScale::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00003D, "Member 'BP_EventScriptCamera_C_GetRotateScale::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_EventScriptCamera_C_GetRotateScale::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, CallFunc_GetPlayerController_ReturnValue_1) == 0x000048, "Member 'BP_EventScriptCamera_C_GetRotateScale::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, CallFunc_CalcCameraSpeed_CameraSpeed) == 0x000050, "Member 'BP_EventScriptCamera_C_GetRotateScale::CallFunc_CalcCameraSpeed_CameraSpeed' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, K2Node_DynamicCast_AsBPI_Project_Player_Controller_1) == 0x000058, "Member 'BP_EventScriptCamera_C_GetRotateScale::K2Node_DynamicCast_AsBPI_Project_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_EventScriptCamera_C_GetRotateScale::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_EventScriptCamera_C_GetRotateScale::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, CallFunc_GetMouseAxis_Axis_1) == 0x000070, "Member 'BP_EventScriptCamera_C_GetRotateScale::CallFunc_GetMouseAxis_Axis_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000074, "Member 'BP_EventScriptCamera_C_GetRotateScale::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000078, "Member 'BP_EventScriptCamera_C_GetRotateScale::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, CallFunc_CalcCameraSpeed_CameraSpeed_1) == 0x00007C, "Member 'BP_EventScriptCamera_C_GetRotateScale::CallFunc_CalcCameraSpeed_CameraSpeed_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetRotateScale, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000080, "Member 'BP_EventScriptCamera_C_GetRotateScale::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_EventScriptCamera.BP_EventScriptCamera_C.CheckMouseButtonDown
// 0x0050 (0x0050 - 0x0000)
struct BP_EventScriptCamera_C_CheckMouseButtonDown final
{
public:
	struct FMouseCursorState                      L_MouseData;                                       // 0x0000(0x0018)(Edit, BlueprintVisible)
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHold_MouseAnyButton_Hold;               // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovedMouseCursor_Moved;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHold_MouseAnyButton_Hold_1;             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMouseCursorState                      CallFunc_PeekShowMouseCursor_ReturnValue;          // 0x0038(0x0018)(ConstParm)
};
static_assert(alignof(BP_EventScriptCamera_C_CheckMouseButtonDown) == 0x000008, "Wrong alignment on BP_EventScriptCamera_C_CheckMouseButtonDown");
static_assert(sizeof(BP_EventScriptCamera_C_CheckMouseButtonDown) == 0x000050, "Wrong size on BP_EventScriptCamera_C_CheckMouseButtonDown");
static_assert(offsetof(BP_EventScriptCamera_C_CheckMouseButtonDown, L_MouseData) == 0x000000, "Member 'BP_EventScriptCamera_C_CheckMouseButtonDown::L_MouseData' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_CheckMouseButtonDown, CallFunc_GetMapCommon_rerutn) == 0x000018, "Member 'BP_EventScriptCamera_C_CheckMouseButtonDown::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_CheckMouseButtonDown, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000020, "Member 'BP_EventScriptCamera_C_CheckMouseButtonDown::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_CheckMouseButtonDown, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_EventScriptCamera_C_CheckMouseButtonDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_CheckMouseButtonDown, CallFunc_BPI_CheckMapPause_IsPause) == 0x000031, "Member 'BP_EventScriptCamera_C_CheckMouseButtonDown::CallFunc_BPI_CheckMapPause_IsPause' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_CheckMouseButtonDown, CallFunc_IsHold_MouseAnyButton_Hold) == 0x000032, "Member 'BP_EventScriptCamera_C_CheckMouseButtonDown::CallFunc_IsHold_MouseAnyButton_Hold' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_CheckMouseButtonDown, CallFunc_Not_PreBool_ReturnValue) == 0x000033, "Member 'BP_EventScriptCamera_C_CheckMouseButtonDown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_CheckMouseButtonDown, CallFunc_IsMovedMouseCursor_Moved) == 0x000034, "Member 'BP_EventScriptCamera_C_CheckMouseButtonDown::CallFunc_IsMovedMouseCursor_Moved' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_CheckMouseButtonDown, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000035, "Member 'BP_EventScriptCamera_C_CheckMouseButtonDown::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_CheckMouseButtonDown, CallFunc_IsHold_MouseAnyButton_Hold_1) == 0x000036, "Member 'BP_EventScriptCamera_C_CheckMouseButtonDown::CallFunc_IsHold_MouseAnyButton_Hold_1' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_CheckMouseButtonDown, CallFunc_PeekShowMouseCursor_ReturnValue) == 0x000038, "Member 'BP_EventScriptCamera_C_CheckMouseButtonDown::CallFunc_PeekShowMouseCursor_ReturnValue' has a wrong offset!");

// Function BP_EventScriptCamera.BP_EventScriptCamera_C.GetMouseAxis
// 0x0010 (0x0010 - 0x0000)
struct BP_EventScriptCamera_C_GetMouseAxis final
{
public:
	E_AXIS_MAPPING_TYPE                           AxisMapping;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Axis;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHold_MouseAnyButton_Hold;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAxisPad_Value;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventScriptCamera_C_GetMouseAxis) == 0x000004, "Wrong alignment on BP_EventScriptCamera_C_GetMouseAxis");
static_assert(sizeof(BP_EventScriptCamera_C_GetMouseAxis) == 0x000010, "Wrong size on BP_EventScriptCamera_C_GetMouseAxis");
static_assert(offsetof(BP_EventScriptCamera_C_GetMouseAxis, AxisMapping) == 0x000000, "Member 'BP_EventScriptCamera_C_GetMouseAxis::AxisMapping' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetMouseAxis, Axis) == 0x000004, "Member 'BP_EventScriptCamera_C_GetMouseAxis::Axis' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetMouseAxis, CallFunc_IsHold_MouseAnyButton_Hold) == 0x000008, "Member 'BP_EventScriptCamera_C_GetMouseAxis::CallFunc_IsHold_MouseAnyButton_Hold' has a wrong offset!");
static_assert(offsetof(BP_EventScriptCamera_C_GetMouseAxis, CallFunc_GetAxisPad_Value) == 0x00000C, "Member 'BP_EventScriptCamera_C_GetMouseAxis::CallFunc_GetAxisPad_Value' has a wrong offset!");

}

