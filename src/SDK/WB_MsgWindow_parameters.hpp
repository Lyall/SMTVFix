#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MsgWindow

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Project_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_MsgWindow.WB_MsgWindow_C.ExecuteUbergraph_WB_MsgWindow
// 0x0170 (0x0170 - 0x0000)
struct WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x000C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_2;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_2;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_2;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_2;       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CBE[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_1;         // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_1;        // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_1;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_1;       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CBF[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex;          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex;         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_Pos;                    // 0x00A0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_ComponentBoundEvent_UV;                     // 0x00A8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_2;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_2;                       // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_3;                       // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x00B4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CC0[0x1];                                     // 0x00C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC1[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundAtomCue>           CallFunc_Array_Get_Item;                           // 0x00D0(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_GetDrawStrLen_ReturnValue;                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDrawStrLen_ReturnValue_1;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPageCompleted_ReturnValue;              // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMessageCompleted_ReturnValue;           // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_VoiceLoadProc_IsLoaded;                   // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_2;               // 0x0107(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetRevealPerSecond_ReturnValue;           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_OPTION_MESSAGE_SPEED_TYPE                   CallFunc_GetMessageSpeedType_ReturnValue;          // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CC2[0x1];                                     // 0x010B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetRevealPerSecond_ReturnValue_1;         // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CC3[0x2];                                     // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CC4[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CC5[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetVoiceName_OutVoiceName;                // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetVoiceAsset_OutSoundAtomCue;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CC6[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_SpawnSound2D_ReturnValue;                 // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue_4;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_5;                       // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_6;                       // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_7;                       // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_8;                       // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CC7[0x2];                                     // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow) == 0x000008, "Wrong alignment on WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow");
static_assert(sizeof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow) == 0x000170, "Wrong size on WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, EntryPoint) == 0x000000, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_IsActionPadCheck_Success) == 0x000008, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_IsActionPadCheck_Success_1) == 0x000009, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_Event_IsDesignTime) == 0x00000A, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_Event_MyGeometry) == 0x00000C, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_Event_InDeltaTime) == 0x000044, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_ComponentBoundEvent_AnimPackName_2) == 0x000048, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_ComponentBoundEvent_AnimPackName_2' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_ComponentBoundEvent_AnimationName_2) == 0x000050, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_ComponentBoundEvent_AnimationName_2' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_ComponentBoundEvent_AnimPackIndex_2) == 0x000058, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_ComponentBoundEvent_AnimPackIndex_2' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_ComponentBoundEvent_AnimationIndex_2) == 0x00005C, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_ComponentBoundEvent_AnimationIndex_2' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_SwitchName_CmpSuccess) == 0x000060, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_Play_ReturnValue) == 0x000061, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_ComponentBoundEvent_AnimPackName_1) == 0x000064, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_ComponentBoundEvent_AnimPackName_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_ComponentBoundEvent_AnimationName_1) == 0x00006C, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_ComponentBoundEvent_AnimationName_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_ComponentBoundEvent_AnimPackIndex_1) == 0x000074, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_ComponentBoundEvent_AnimPackIndex_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_ComponentBoundEvent_AnimationIndex_1) == 0x000078, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_ComponentBoundEvent_AnimationIndex_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_SwitchName_CmpSuccess_1) == 0x00007C, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_CustomEvent_Loaded) == 0x000080, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_ComponentBoundEvent_AnimPackName) == 0x000088, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_ComponentBoundEvent_AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_ComponentBoundEvent_AnimationName) == 0x000090, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_ComponentBoundEvent_AnimationName' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_ComponentBoundEvent_AnimPackIndex) == 0x000098, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_ComponentBoundEvent_AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_ComponentBoundEvent_AnimationIndex) == 0x00009C, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_ComponentBoundEvent_AnimationIndex' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_ComponentBoundEvent_Pos) == 0x0000A0, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_ComponentBoundEvent_Pos' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_ComponentBoundEvent_UV) == 0x0000A8, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_ComponentBoundEvent_UV' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_SwitchName_CmpSuccess_2) == 0x0000B0, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_SwitchName_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_Play_ReturnValue_1) == 0x0000B1, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_Play_ReturnValue_2) == 0x0000B2, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_Play_ReturnValue_3) == 0x0000B3, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_Play_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_CreateDelegate_OutputDelegate) == 0x0000B4, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_IsVisible_ReturnValue) == 0x0000C4, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_IsVisible_ReturnValue_1) == 0x0000C5, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_IsVisible_ReturnValue_2) == 0x0000C6, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_GetDrawStrLen_ReturnValue) == 0x0000F8, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_GetDrawStrLen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_GetDrawStrLen_ReturnValue_1) == 0x0000FC, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_GetDrawStrLen_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_SwitchInteger_CmpSuccess) == 0x000100, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_SwitchInteger_CmpSuccess_1) == 0x000101, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_IsPageCompleted_ReturnValue) == 0x000102, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_IsPageCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_IsMessageCompleted_ReturnValue) == 0x000103, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_IsMessageCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_IsValid_ReturnValue) == 0x000104, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_IsValid_ReturnValue_1) == 0x000105, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_VoiceLoadProc_IsLoaded) == 0x000106, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_VoiceLoadProc_IsLoaded' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_IsActionPadCheck_Success_2) == 0x000107, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_IsActionPadCheck_Success_2' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_SetRevealPerSecond_ReturnValue) == 0x000108, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_SetRevealPerSecond_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_GetMessageSpeedType_ReturnValue) == 0x000109, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_GetMessageSpeedType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_SwitchEnum_CmpSuccess) == 0x00010A, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, Temp_int_Loop_Counter_Variable) == 0x00010C, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_SetRevealPerSecond_ReturnValue_1) == 0x000110, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_SetRevealPerSecond_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_Less_IntInt_ReturnValue) == 0x000111, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_Add_IntInt_ReturnValue) == 0x000114, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_IsValid_ReturnValue_2) == 0x000118, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, Temp_object_Variable) == 0x000120, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x000128, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_Array_Add_ReturnValue) == 0x000134, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_GetVoiceName_OutVoiceName) == 0x000138, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_GetVoiceName_OutVoiceName' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_GetVoiceAsset_OutSoundAtomCue) == 0x000148, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_GetVoiceAsset_OutSoundAtomCue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_IsValid_ReturnValue_3) == 0x000150, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_SpawnSound2D_ReturnValue) == 0x000158, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_Play_ReturnValue_4) == 0x000160, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_Play_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_Play_ReturnValue_5) == 0x000161, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_Play_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_Play_ReturnValue_6) == 0x000162, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_Play_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_Play_ReturnValue_7) == 0x000163, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_Play_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_Play_ReturnValue_8) == 0x000164, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_Play_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000165, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow, CallFunc_Array_Add_ReturnValue_1) == 0x000168, "Member 'WB_MsgWindow_C_ExecuteUbergraph_WB_MsgWindow::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.BndEvt__WB_MsgWindow_ButtonS5PageIcon_K2Node_ComponentBoundEvent_0_ButtonClickEventS5__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_MsgWindow_C_BndEvt__WB_MsgWindow_ButtonS5PageIcon_K2Node_ComponentBoundEvent_0_ButtonClickEventS5__DelegateSignature final
{
public:
	struct FVector2D                              Pos;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UV;                                                // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_BndEvt__WB_MsgWindow_ButtonS5PageIcon_K2Node_ComponentBoundEvent_0_ButtonClickEventS5__DelegateSignature) == 0x000004, "Wrong alignment on WB_MsgWindow_C_BndEvt__WB_MsgWindow_ButtonS5PageIcon_K2Node_ComponentBoundEvent_0_ButtonClickEventS5__DelegateSignature");
static_assert(sizeof(WB_MsgWindow_C_BndEvt__WB_MsgWindow_ButtonS5PageIcon_K2Node_ComponentBoundEvent_0_ButtonClickEventS5__DelegateSignature) == 0x000010, "Wrong size on WB_MsgWindow_C_BndEvt__WB_MsgWindow_ButtonS5PageIcon_K2Node_ComponentBoundEvent_0_ButtonClickEventS5__DelegateSignature");
static_assert(offsetof(WB_MsgWindow_C_BndEvt__WB_MsgWindow_ButtonS5PageIcon_K2Node_ComponentBoundEvent_0_ButtonClickEventS5__DelegateSignature, Pos) == 0x000000, "Member 'WB_MsgWindow_C_BndEvt__WB_MsgWindow_ButtonS5PageIcon_K2Node_ComponentBoundEvent_0_ButtonClickEventS5__DelegateSignature::Pos' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_BndEvt__WB_MsgWindow_ButtonS5PageIcon_K2Node_ComponentBoundEvent_0_ButtonClickEventS5__DelegateSignature, UV) == 0x000008, "Member 'WB_MsgWindow_C_BndEvt__WB_MsgWindow_ButtonS5PageIcon_K2Node_ComponentBoundEvent_0_ButtonClickEventS5__DelegateSignature::UV' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.BndEvt__MessagePageIcon_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_MsgWindow_C_BndEvt__MessagePageIcon_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_BndEvt__MessagePageIcon_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_MsgWindow_C_BndEvt__MessagePageIcon_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_MsgWindow_C_BndEvt__MessagePageIcon_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_MsgWindow_C_BndEvt__MessagePageIcon_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_MsgWindow_C_BndEvt__MessagePageIcon_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_MsgWindow_C_BndEvt__MessagePageIcon_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_BndEvt__MessagePageIcon_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_MsgWindow_C_BndEvt__MessagePageIcon_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_BndEvt__MessagePageIcon_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_MsgWindow_C_BndEvt__MessagePageIcon_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_BndEvt__MessagePageIcon_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_MsgWindow_C_BndEvt__MessagePageIcon_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.BndEvt__NameWindow_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_MsgWindow_C_BndEvt__NameWindow_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_BndEvt__NameWindow_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_MsgWindow_C_BndEvt__NameWindow_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_MsgWindow_C_BndEvt__NameWindow_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_MsgWindow_C_BndEvt__NameWindow_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_MsgWindow_C_BndEvt__NameWindow_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_MsgWindow_C_BndEvt__NameWindow_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_BndEvt__NameWindow_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_MsgWindow_C_BndEvt__NameWindow_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_BndEvt__NameWindow_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_MsgWindow_C_BndEvt__NameWindow_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_BndEvt__NameWindow_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_MsgWindow_C_BndEvt__NameWindow_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.BndEvt__MessageWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_MsgWindow_C_BndEvt__MessageWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_BndEvt__MessageWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_MsgWindow_C_BndEvt__MessageWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_MsgWindow_C_BndEvt__MessageWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_MsgWindow_C_BndEvt__MessageWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_MsgWindow_C_BndEvt__MessageWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_MsgWindow_C_BndEvt__MessageWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_BndEvt__MessageWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_MsgWindow_C_BndEvt__MessageWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_BndEvt__MessageWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_MsgWindow_C_BndEvt__MessageWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_BndEvt__MessageWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_MsgWindow_C_BndEvt__MessageWindow_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_MsgWindow_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_Tick) == 0x000004, "Wrong alignment on WB_MsgWindow_C_Tick");
static_assert(sizeof(WB_MsgWindow_C_Tick) == 0x00003C, "Wrong size on WB_MsgWindow_C_Tick");
static_assert(offsetof(WB_MsgWindow_C_Tick, MyGeometry) == 0x000000, "Member 'WB_MsgWindow_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_MsgWindow_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_MsgWindow_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_PreConstruct) == 0x000001, "Wrong alignment on WB_MsgWindow_C_PreConstruct");
static_assert(sizeof(WB_MsgWindow_C_PreConstruct) == 0x000001, "Wrong size on WB_MsgWindow_C_PreConstruct");
static_assert(offsetof(WB_MsgWindow_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_MsgWindow_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.OnLoaded_522740664FF1A06057B4DD8760092DA1
// 0x0008 (0x0008 - 0x0000)
struct WB_MsgWindow_C_OnLoaded_522740664FF1A06057B4DD8760092DA1 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_OnLoaded_522740664FF1A06057B4DD8760092DA1) == 0x000008, "Wrong alignment on WB_MsgWindow_C_OnLoaded_522740664FF1A06057B4DD8760092DA1");
static_assert(sizeof(WB_MsgWindow_C_OnLoaded_522740664FF1A06057B4DD8760092DA1) == 0x000008, "Wrong size on WB_MsgWindow_C_OnLoaded_522740664FF1A06057B4DD8760092DA1");
static_assert(offsetof(WB_MsgWindow_C_OnLoaded_522740664FF1A06057B4DD8760092DA1, Loaded) == 0x000000, "Member 'WB_MsgWindow_C_OnLoaded_522740664FF1A06057B4DD8760092DA1::Loaded' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.GetText_0
// 0x00B0 (0x00B0 - 0x0000)
struct WB_MsgWindow_C_GetText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsNameText_namewindow;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CC8[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScriptMessagePageData                 CallFunc_GetCurrentPageData_ReturnValue;           // 0x0020(0x0070)(ConstParm)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC9[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetCharaName_ReturnValue;                 // 0x0098(0x0018)(ConstParm)
};
static_assert(alignof(WB_MsgWindow_C_GetText_0) == 0x000008, "Wrong alignment on WB_MsgWindow_C_GetText_0");
static_assert(sizeof(WB_MsgWindow_C_GetText_0) == 0x0000B0, "Wrong size on WB_MsgWindow_C_GetText_0");
static_assert(offsetof(WB_MsgWindow_C_GetText_0, ReturnValue) == 0x000000, "Member 'WB_MsgWindow_C_GetText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetText_0, CallFunc_IsNameText_namewindow) == 0x000018, "Member 'WB_MsgWindow_C_GetText_0::CallFunc_IsNameText_namewindow' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetText_0, CallFunc_GetCurrentPageData_ReturnValue) == 0x000020, "Member 'WB_MsgWindow_C_GetText_0::CallFunc_GetCurrentPageData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetText_0, CallFunc_Conv_StringToInt_ReturnValue) == 0x000090, "Member 'WB_MsgWindow_C_GetText_0::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetText_0, CallFunc_GetCharaName_ReturnValue) == 0x000098, "Member 'WB_MsgWindow_C_GetText_0::CallFunc_GetCharaName_ReturnValue' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.messagetextstop
// 0x0018 (0x0018 - 0x0000)
struct WB_MsgWindow_C_Messagetextstop final
{
public:
	bool                                          InNonClearText;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CCA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByID_self_CastInput;      // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_Messagetextstop) == 0x000008, "Wrong alignment on WB_MsgWindow_C_Messagetextstop");
static_assert(sizeof(WB_MsgWindow_C_Messagetextstop) == 0x000018, "Wrong size on WB_MsgWindow_C_Messagetextstop");
static_assert(offsetof(WB_MsgWindow_C_Messagetextstop, InNonClearText) == 0x000000, "Member 'WB_MsgWindow_C_Messagetextstop::InNonClearText' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_Messagetextstop, CallFunc_SetScriptMessageByID_self_CastInput) == 0x000008, "Member 'WB_MsgWindow_C_Messagetextstop::CallFunc_SetScriptMessageByID_self_CastInput' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.messagetextplay
// 0x0005 (0x0005 - 0x0000)
struct WB_MsgWindow_C_Messagetextplay final
{
public:
	bool                                          OutCompleted;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Messagecompleted;                                  // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMessageCompleted_ReturnValue;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPageCompleted_ReturnValue;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMessageCompleted_ReturnValue_1;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_Messagetextplay) == 0x000001, "Wrong alignment on WB_MsgWindow_C_Messagetextplay");
static_assert(sizeof(WB_MsgWindow_C_Messagetextplay) == 0x000005, "Wrong size on WB_MsgWindow_C_Messagetextplay");
static_assert(offsetof(WB_MsgWindow_C_Messagetextplay, OutCompleted) == 0x000000, "Member 'WB_MsgWindow_C_Messagetextplay::OutCompleted' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_Messagetextplay, Messagecompleted) == 0x000001, "Member 'WB_MsgWindow_C_Messagetextplay::Messagecompleted' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_Messagetextplay, CallFunc_IsMessageCompleted_ReturnValue) == 0x000002, "Member 'WB_MsgWindow_C_Messagetextplay::CallFunc_IsMessageCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_Messagetextplay, CallFunc_IsPageCompleted_ReturnValue) == 0x000003, "Member 'WB_MsgWindow_C_Messagetextplay::CallFunc_IsPageCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_Messagetextplay, CallFunc_IsMessageCompleted_ReturnValue_1) == 0x000004, "Member 'WB_MsgWindow_C_Messagetextplay::CallFunc_IsMessageCompleted_ReturnValue_1' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.IsNameText
// 0x0080 (0x0080 - 0x0000)
struct WB_MsgWindow_C_IsNameText final
{
public:
	bool                                          Param_NameWindow;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Nameon;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CCB[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScriptMessagePageData                 CallFunc_GetCurrentPageData_ReturnValue;           // 0x0008(0x0070)(ConstParm)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_IsNameText) == 0x000008, "Wrong alignment on WB_MsgWindow_C_IsNameText");
static_assert(sizeof(WB_MsgWindow_C_IsNameText) == 0x000080, "Wrong size on WB_MsgWindow_C_IsNameText");
static_assert(offsetof(WB_MsgWindow_C_IsNameText, Param_NameWindow) == 0x000000, "Member 'WB_MsgWindow_C_IsNameText::Param_NameWindow' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsNameText, Nameon) == 0x000001, "Member 'WB_MsgWindow_C_IsNameText::Nameon' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsNameText, CallFunc_GetCurrentPageData_ReturnValue) == 0x000008, "Member 'WB_MsgWindow_C_IsNameText::CallFunc_GetCurrentPageData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsNameText, CallFunc_Conv_StringToInt_ReturnValue) == 0x000078, "Member 'WB_MsgWindow_C_IsNameText::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsNameText, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00007C, "Member 'WB_MsgWindow_C_IsNameText::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.SetSelectCursorOffsest
// 0x0004 (0x0004 - 0x0000)
struct WB_MsgWindow_C_SetSelectCursorOffsest final
{
public:
	int32                                         Defaultcursorpos;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_SetSelectCursorOffsest) == 0x000004, "Wrong alignment on WB_MsgWindow_C_SetSelectCursorOffsest");
static_assert(sizeof(WB_MsgWindow_C_SetSelectCursorOffsest) == 0x000004, "Wrong size on WB_MsgWindow_C_SetSelectCursorOffsest");
static_assert(offsetof(WB_MsgWindow_C_SetSelectCursorOffsest, Defaultcursorpos) == 0x000000, "Member 'WB_MsgWindow_C_SetSelectCursorOffsest::Defaultcursorpos' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.SetNameWindow
// 0x00B0 (0x00B0 - 0x0000)
struct WB_MsgWindow_C_SetNameWindow final
{
public:
	bool                                          InExecution;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Executionflag;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CCC[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              baseposition;                                      // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDecorator_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CCD[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0038(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0060(0x0028)()
	bool                                          CallFunc_IsNameText_namewindow;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CCE[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPositionDataByPartsName_OutVec;        // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNameText_namewindow_1;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CCF[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPositionDataByPartsName_OutVec_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CD0[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_SetNameWindow) == 0x000008, "Wrong alignment on WB_MsgWindow_C_SetNameWindow");
static_assert(sizeof(WB_MsgWindow_C_SetNameWindow) == 0x0000B0, "Wrong size on WB_MsgWindow_C_SetNameWindow");
static_assert(offsetof(WB_MsgWindow_C_SetNameWindow, InExecution) == 0x000000, "Member 'WB_MsgWindow_C_SetNameWindow::InExecution' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetNameWindow, Executionflag) == 0x000001, "Member 'WB_MsgWindow_C_SetNameWindow::Executionflag' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetNameWindow, baseposition) == 0x000004, "Member 'WB_MsgWindow_C_SetNameWindow::baseposition' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetNameWindow, CallFunc_SetDecorator_ReturnValue) == 0x00000C, "Member 'WB_MsgWindow_C_SetNameWindow::CallFunc_SetDecorator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetNameWindow, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'WB_MsgWindow_C_SetNameWindow::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetNameWindow, K2Node_MakeStruct_SlateColor_1) == 0x000038, "Member 'WB_MsgWindow_C_SetNameWindow::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetNameWindow, K2Node_MakeStruct_SlateColor_2) == 0x000060, "Member 'WB_MsgWindow_C_SetNameWindow::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetNameWindow, CallFunc_IsNameText_namewindow) == 0x000088, "Member 'WB_MsgWindow_C_SetNameWindow::CallFunc_IsNameText_namewindow' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetNameWindow, CallFunc_GetPositionDataByPartsName_OutVec) == 0x00008C, "Member 'WB_MsgWindow_C_SetNameWindow::CallFunc_GetPositionDataByPartsName_OutVec' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetNameWindow, CallFunc_IsNameText_namewindow_1) == 0x000094, "Member 'WB_MsgWindow_C_SetNameWindow::CallFunc_IsNameText_namewindow_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetNameWindow, CallFunc_GetPositionDataByPartsName_OutVec_1) == 0x000098, "Member 'WB_MsgWindow_C_SetNameWindow::CallFunc_GetPositionDataByPartsName_OutVec_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetNameWindow, CallFunc_Play_ReturnValue) == 0x0000A0, "Member 'WB_MsgWindow_C_SetNameWindow::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetNameWindow, CallFunc_Play_ReturnValue_1) == 0x0000A1, "Member 'WB_MsgWindow_C_SetNameWindow::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetNameWindow, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000A8, "Member 'WB_MsgWindow_C_SetNameWindow::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.DecidesSelectCursor
// 0x000C (0x000C - 0x0000)
struct WB_MsgWindow_C_DecidesSelectCursor final
{
public:
	int32                                         OutParam;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Retparam;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectCursorIndex_outcursorindex;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_DecidesSelectCursor) == 0x000004, "Wrong alignment on WB_MsgWindow_C_DecidesSelectCursor");
static_assert(sizeof(WB_MsgWindow_C_DecidesSelectCursor) == 0x00000C, "Wrong size on WB_MsgWindow_C_DecidesSelectCursor");
static_assert(offsetof(WB_MsgWindow_C_DecidesSelectCursor, OutParam) == 0x000000, "Member 'WB_MsgWindow_C_DecidesSelectCursor::OutParam' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_DecidesSelectCursor, Retparam) == 0x000004, "Member 'WB_MsgWindow_C_DecidesSelectCursor::Retparam' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_DecidesSelectCursor, CallFunc_GetSelectCursorIndex_outcursorindex) == 0x000008, "Member 'WB_MsgWindow_C_DecidesSelectCursor::CallFunc_GetSelectCursorIndex_outcursorindex' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.CreatePositionData
// 0x0040 (0x0040 - 0x0000)
struct WB_MsgWindow_C_CreatePositionData final
{
public:
	struct FVector2D                              InVec;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InSizeX;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InSizeY;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OutVec;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_CreatePositionData) == 0x000004, "Wrong alignment on WB_MsgWindow_C_CreatePositionData");
static_assert(sizeof(WB_MsgWindow_C_CreatePositionData) == 0x000040, "Wrong size on WB_MsgWindow_C_CreatePositionData");
static_assert(offsetof(WB_MsgWindow_C_CreatePositionData, InVec) == 0x000000, "Member 'WB_MsgWindow_C_CreatePositionData::InVec' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_CreatePositionData, InSizeX) == 0x000008, "Member 'WB_MsgWindow_C_CreatePositionData::InSizeX' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_CreatePositionData, InSizeY) == 0x00000C, "Member 'WB_MsgWindow_C_CreatePositionData::InSizeY' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_CreatePositionData, OutVec) == 0x000010, "Member 'WB_MsgWindow_C_CreatePositionData::OutVec' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_CreatePositionData, CallFunc_BreakVector2D_X) == 0x000018, "Member 'WB_MsgWindow_C_CreatePositionData::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_CreatePositionData, CallFunc_BreakVector2D_Y) == 0x00001C, "Member 'WB_MsgWindow_C_CreatePositionData::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_CreatePositionData, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'WB_MsgWindow_C_CreatePositionData::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_CreatePositionData, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'WB_MsgWindow_C_CreatePositionData::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_CreatePositionData, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000028, "Member 'WB_MsgWindow_C_CreatePositionData::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_CreatePositionData, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'WB_MsgWindow_C_CreatePositionData::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_CreatePositionData, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000030, "Member 'WB_MsgWindow_C_CreatePositionData::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_CreatePositionData, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000034, "Member 'WB_MsgWindow_C_CreatePositionData::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_CreatePositionData, CallFunc_MakeVector2D_ReturnValue) == 0x000038, "Member 'WB_MsgWindow_C_CreatePositionData::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.GetPositionDataByPartsName
// 0x0040 (0x0040 - 0x0000)
struct WB_MsgWindow_C_GetPositionDataByPartsName final
{
public:
	class FName                                   InPartsName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USsPlayerWidget*                        InSSData;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InSizeX;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InSizeY;                                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OutVec;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPartTransform_OutPosition;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPartTransform_OutAngle;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPartTransform_OutScale;                // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPartTransform_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CD1[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_CreatePositionData_OutVec;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_GetPositionDataByPartsName) == 0x000008, "Wrong alignment on WB_MsgWindow_C_GetPositionDataByPartsName");
static_assert(sizeof(WB_MsgWindow_C_GetPositionDataByPartsName) == 0x000040, "Wrong size on WB_MsgWindow_C_GetPositionDataByPartsName");
static_assert(offsetof(WB_MsgWindow_C_GetPositionDataByPartsName, InPartsName) == 0x000000, "Member 'WB_MsgWindow_C_GetPositionDataByPartsName::InPartsName' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetPositionDataByPartsName, InSSData) == 0x000008, "Member 'WB_MsgWindow_C_GetPositionDataByPartsName::InSSData' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetPositionDataByPartsName, InSizeX) == 0x000010, "Member 'WB_MsgWindow_C_GetPositionDataByPartsName::InSizeX' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetPositionDataByPartsName, InSizeY) == 0x000014, "Member 'WB_MsgWindow_C_GetPositionDataByPartsName::InSizeY' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetPositionDataByPartsName, OutVec) == 0x000018, "Member 'WB_MsgWindow_C_GetPositionDataByPartsName::OutVec' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetPositionDataByPartsName, CallFunc_GetPartTransform_OutPosition) == 0x000020, "Member 'WB_MsgWindow_C_GetPositionDataByPartsName::CallFunc_GetPartTransform_OutPosition' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetPositionDataByPartsName, CallFunc_GetPartTransform_OutAngle) == 0x000028, "Member 'WB_MsgWindow_C_GetPositionDataByPartsName::CallFunc_GetPartTransform_OutAngle' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetPositionDataByPartsName, CallFunc_GetPartTransform_OutScale) == 0x00002C, "Member 'WB_MsgWindow_C_GetPositionDataByPartsName::CallFunc_GetPartTransform_OutScale' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetPositionDataByPartsName, CallFunc_GetPartTransform_ReturnValue) == 0x000034, "Member 'WB_MsgWindow_C_GetPositionDataByPartsName::CallFunc_GetPartTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetPositionDataByPartsName, CallFunc_CreatePositionData_OutVec) == 0x000038, "Member 'WB_MsgWindow_C_GetPositionDataByPartsName::CallFunc_CreatePositionData_OutVec' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.SetMessageWindowPosition
// 0x0010 (0x0010 - 0x0000)
struct WB_MsgWindow_C_SetMessageWindowPosition final
{
public:
	struct FVector2D                              baseposition;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPositionDataByPartsName_OutVec;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_SetMessageWindowPosition) == 0x000004, "Wrong alignment on WB_MsgWindow_C_SetMessageWindowPosition");
static_assert(sizeof(WB_MsgWindow_C_SetMessageWindowPosition) == 0x000010, "Wrong size on WB_MsgWindow_C_SetMessageWindowPosition");
static_assert(offsetof(WB_MsgWindow_C_SetMessageWindowPosition, baseposition) == 0x000000, "Member 'WB_MsgWindow_C_SetMessageWindowPosition::baseposition' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageWindowPosition, CallFunc_GetPositionDataByPartsName_OutVec) == 0x000008, "Member 'WB_MsgWindow_C_SetMessageWindowPosition::CallFunc_GetPositionDataByPartsName_OutVec' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.IsFinishedWindowIn
// 0x0002 (0x0002 - 0x0000)
struct WB_MsgWindow_C_IsFinishedWindowIn final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OutFinishedParam;                                  // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_IsFinishedWindowIn) == 0x000001, "Wrong alignment on WB_MsgWindow_C_IsFinishedWindowIn");
static_assert(sizeof(WB_MsgWindow_C_IsFinishedWindowIn) == 0x000002, "Wrong size on WB_MsgWindow_C_IsFinishedWindowIn");
static_assert(offsetof(WB_MsgWindow_C_IsFinishedWindowIn, OutFinished) == 0x000000, "Member 'WB_MsgWindow_C_IsFinishedWindowIn::OutFinished' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsFinishedWindowIn, OutFinishedParam) == 0x000001, "Member 'WB_MsgWindow_C_IsFinishedWindowIn::OutFinishedParam' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.SetMessageText
// 0x00A8 (0x00A8 - 0x0000)
struct WB_MsgWindow_C_SetMessageText final
{
public:
	class UScriptMessageAsset*                    ArgScriptMessageAsset;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InLabel;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InExecutionText;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InShowIconAfterCompleted;                          // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CD2[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMessageData                           CallFunc_GetMessageDataFromLabel_ReturnValue;      // 0x0018(0x0070)()
	TScriptInterface<class IMessageTagInterface>  CallFunc_BuildText_self_CastInput;                 // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByLabel_self_CastInput;   // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_SetMessageText) == 0x000008, "Wrong alignment on WB_MsgWindow_C_SetMessageText");
static_assert(sizeof(WB_MsgWindow_C_SetMessageText) == 0x0000A8, "Wrong size on WB_MsgWindow_C_SetMessageText");
static_assert(offsetof(WB_MsgWindow_C_SetMessageText, ArgScriptMessageAsset) == 0x000000, "Member 'WB_MsgWindow_C_SetMessageText::ArgScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageText, InLabel) == 0x000008, "Member 'WB_MsgWindow_C_SetMessageText::InLabel' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageText, InExecutionText) == 0x000010, "Member 'WB_MsgWindow_C_SetMessageText::InExecutionText' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageText, InShowIconAfterCompleted) == 0x000011, "Member 'WB_MsgWindow_C_SetMessageText::InShowIconAfterCompleted' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageText, CallFunc_GetMessageDataFromLabel_ReturnValue) == 0x000018, "Member 'WB_MsgWindow_C_SetMessageText::CallFunc_GetMessageDataFromLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageText, CallFunc_BuildText_self_CastInput) == 0x000088, "Member 'WB_MsgWindow_C_SetMessageText::CallFunc_BuildText_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageText, CallFunc_SetScriptMessageByLabel_self_CastInput) == 0x000098, "Member 'WB_MsgWindow_C_SetMessageText::CallFunc_SetScriptMessageByLabel_self_CastInput' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.IsSetMessageText
// 0x0001 (0x0001 - 0x0000)
struct WB_MsgWindow_C_IsSetMessageText final
{
public:
	bool                                          OutFlag;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_IsSetMessageText) == 0x000001, "Wrong alignment on WB_MsgWindow_C_IsSetMessageText");
static_assert(sizeof(WB_MsgWindow_C_IsSetMessageText) == 0x000001, "Wrong size on WB_MsgWindow_C_IsSetMessageText");
static_assert(offsetof(WB_MsgWindow_C_IsSetMessageText, OutFlag) == 0x000000, "Member 'WB_MsgWindow_C_IsSetMessageText::OutFlag' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.ExecutionWindowIn
// 0x0001 (0x0001 - 0x0000)
struct WB_MsgWindow_C_ExecutionWindowIn final
{
public:
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_ExecutionWindowIn) == 0x000001, "Wrong alignment on WB_MsgWindow_C_ExecutionWindowIn");
static_assert(sizeof(WB_MsgWindow_C_ExecutionWindowIn) == 0x000001, "Wrong size on WB_MsgWindow_C_ExecutionWindowIn");
static_assert(offsetof(WB_MsgWindow_C_ExecutionWindowIn, CallFunc_Play_ReturnValue) == 0x000000, "Member 'WB_MsgWindow_C_ExecutionWindowIn::CallFunc_Play_ReturnValue' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.IsFinishedWindowOut
// 0x000A (0x000A - 0x0000)
struct WB_MsgWindow_C_IsFinishedWindowOut final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Finished;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFinishedSelectMenu_OutParam;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_1;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_2;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_IsFinishedWindowOut) == 0x000001, "Wrong alignment on WB_MsgWindow_C_IsFinishedWindowOut");
static_assert(sizeof(WB_MsgWindow_C_IsFinishedWindowOut) == 0x00000A, "Wrong size on WB_MsgWindow_C_IsFinishedWindowOut");
static_assert(offsetof(WB_MsgWindow_C_IsFinishedWindowOut, OutFinished) == 0x000000, "Member 'WB_MsgWindow_C_IsFinishedWindowOut::OutFinished' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsFinishedWindowOut, Finished) == 0x000001, "Member 'WB_MsgWindow_C_IsFinishedWindowOut::Finished' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsFinishedWindowOut, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'WB_MsgWindow_C_IsFinishedWindowOut::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsFinishedWindowOut, CallFunc_IsFinishedSelectMenu_OutParam) == 0x000003, "Member 'WB_MsgWindow_C_IsFinishedWindowOut::CallFunc_IsFinishedSelectMenu_OutParam' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsFinishedWindowOut, CallFunc_GetVisibility_ReturnValue) == 0x000004, "Member 'WB_MsgWindow_C_IsFinishedWindowOut::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsFinishedWindowOut, CallFunc_GetVisibility_ReturnValue_1) == 0x000005, "Member 'WB_MsgWindow_C_IsFinishedWindowOut::CallFunc_GetVisibility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsFinishedWindowOut, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'WB_MsgWindow_C_IsFinishedWindowOut::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsFinishedWindowOut, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000007, "Member 'WB_MsgWindow_C_IsFinishedWindowOut::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsFinishedWindowOut, CallFunc_GetVisibility_ReturnValue_2) == 0x000008, "Member 'WB_MsgWindow_C_IsFinishedWindowOut::CallFunc_GetVisibility_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsFinishedWindowOut, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000009, "Member 'WB_MsgWindow_C_IsFinishedWindowOut::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.SetSelectMenu
// 0x0090 (0x0090 - 0x0000)
struct WB_MsgWindow_C_SetSelectMenu final
{
public:
	int32                                         InMenuNumber;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InInitCursorPosition;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           InSelectItemName;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          InUseNewIcon;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CD3[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  InSelectItemNewIcon;                               // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<bool>                                  InSelectTextDisabledColor;                         // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FName>                           LabelName;                                         // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CD4[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CD5[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FName                                   Temp_name_Variable;                                // 0x0088(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_SetSelectMenu) == 0x000008, "Wrong alignment on WB_MsgWindow_C_SetSelectMenu");
static_assert(sizeof(WB_MsgWindow_C_SetSelectMenu) == 0x000090, "Wrong size on WB_MsgWindow_C_SetSelectMenu");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenu, InMenuNumber) == 0x000000, "Member 'WB_MsgWindow_C_SetSelectMenu::InMenuNumber' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenu, InInitCursorPosition) == 0x000004, "Member 'WB_MsgWindow_C_SetSelectMenu::InInitCursorPosition' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenu, InScriptMessageAsset) == 0x000008, "Member 'WB_MsgWindow_C_SetSelectMenu::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenu, InSelectItemName) == 0x000010, "Member 'WB_MsgWindow_C_SetSelectMenu::InSelectItemName' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenu, InUseNewIcon) == 0x000020, "Member 'WB_MsgWindow_C_SetSelectMenu::InUseNewIcon' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenu, InSelectItemNewIcon) == 0x000028, "Member 'WB_MsgWindow_C_SetSelectMenu::InSelectItemNewIcon' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenu, InSelectTextDisabledColor) == 0x000038, "Member 'WB_MsgWindow_C_SetSelectMenu::InSelectTextDisabledColor' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenu, LabelName) == 0x000048, "Member 'WB_MsgWindow_C_SetSelectMenu::LabelName' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenu, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'WB_MsgWindow_C_SetSelectMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenu, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'WB_MsgWindow_C_SetSelectMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenu, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'WB_MsgWindow_C_SetSelectMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenu, CallFunc_Array_Get_Item) == 0x000064, "Member 'WB_MsgWindow_C_SetSelectMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenu, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00006C, "Member 'WB_MsgWindow_C_SetSelectMenu::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenu, CallFunc_Less_IntInt_ReturnValue) == 0x00006D, "Member 'WB_MsgWindow_C_SetSelectMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenu, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'WB_MsgWindow_C_SetSelectMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenu, K2Node_MakeArray_Array) == 0x000078, "Member 'WB_MsgWindow_C_SetSelectMenu::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenu, Temp_name_Variable) == 0x000088, "Member 'WB_MsgWindow_C_SetSelectMenu::Temp_name_Variable' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.SetMessageTextByIndex
// 0x00A0 (0x00A0 - 0x0000)
struct WB_MsgWindow_C_SetMessageTextByIndex final
{
public:
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIndex;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InExecutionText;                                   // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InShowIconAfterCompleted;                          // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewLocalVar_0;                                     // 0x000E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CD6[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMessageData                           CallFunc_GetMessageDataFromId_ReturnValue;         // 0x0010(0x0070)()
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByID_self_CastInput;      // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_BuildText_self_CastInput;                 // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_SetMessageTextByIndex) == 0x000008, "Wrong alignment on WB_MsgWindow_C_SetMessageTextByIndex");
static_assert(sizeof(WB_MsgWindow_C_SetMessageTextByIndex) == 0x0000A0, "Wrong size on WB_MsgWindow_C_SetMessageTextByIndex");
static_assert(offsetof(WB_MsgWindow_C_SetMessageTextByIndex, InScriptMessageAsset) == 0x000000, "Member 'WB_MsgWindow_C_SetMessageTextByIndex::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageTextByIndex, InIndex) == 0x000008, "Member 'WB_MsgWindow_C_SetMessageTextByIndex::InIndex' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageTextByIndex, InExecutionText) == 0x00000C, "Member 'WB_MsgWindow_C_SetMessageTextByIndex::InExecutionText' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageTextByIndex, InShowIconAfterCompleted) == 0x00000D, "Member 'WB_MsgWindow_C_SetMessageTextByIndex::InShowIconAfterCompleted' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageTextByIndex, NewLocalVar_0) == 0x00000E, "Member 'WB_MsgWindow_C_SetMessageTextByIndex::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageTextByIndex, CallFunc_GetMessageDataFromId_ReturnValue) == 0x000010, "Member 'WB_MsgWindow_C_SetMessageTextByIndex::CallFunc_GetMessageDataFromId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageTextByIndex, CallFunc_SetScriptMessageByID_self_CastInput) == 0x000080, "Member 'WB_MsgWindow_C_SetMessageTextByIndex::CallFunc_SetScriptMessageByID_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageTextByIndex, CallFunc_BuildText_self_CastInput) == 0x000090, "Member 'WB_MsgWindow_C_SetMessageTextByIndex::CallFunc_BuildText_self_CastInput' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.SetSelectMenuByIndex
// 0x0088 (0x0088 - 0x0000)
struct WB_MsgWindow_C_SetSelectMenuByIndex final
{
public:
	int32                                         InMenuNumber;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InInitCursorPosition;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 InSelectItemIndex;                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          InUseNewIcon;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CD7[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  InSelectItemNewIcon;                               // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<bool>                                  InSelectTextDisabledColor;                         // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 LabelIndex;                                        // 0x0048(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CD8[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_SetSelectMenuByIndex) == 0x000008, "Wrong alignment on WB_MsgWindow_C_SetSelectMenuByIndex");
static_assert(sizeof(WB_MsgWindow_C_SetSelectMenuByIndex) == 0x000088, "Wrong size on WB_MsgWindow_C_SetSelectMenuByIndex");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenuByIndex, InMenuNumber) == 0x000000, "Member 'WB_MsgWindow_C_SetSelectMenuByIndex::InMenuNumber' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenuByIndex, InInitCursorPosition) == 0x000004, "Member 'WB_MsgWindow_C_SetSelectMenuByIndex::InInitCursorPosition' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenuByIndex, InScriptMessageAsset) == 0x000008, "Member 'WB_MsgWindow_C_SetSelectMenuByIndex::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenuByIndex, InSelectItemIndex) == 0x000010, "Member 'WB_MsgWindow_C_SetSelectMenuByIndex::InSelectItemIndex' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenuByIndex, InUseNewIcon) == 0x000020, "Member 'WB_MsgWindow_C_SetSelectMenuByIndex::InUseNewIcon' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenuByIndex, InSelectItemNewIcon) == 0x000028, "Member 'WB_MsgWindow_C_SetSelectMenuByIndex::InSelectItemNewIcon' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenuByIndex, InSelectTextDisabledColor) == 0x000038, "Member 'WB_MsgWindow_C_SetSelectMenuByIndex::InSelectTextDisabledColor' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenuByIndex, LabelIndex) == 0x000048, "Member 'WB_MsgWindow_C_SetSelectMenuByIndex::LabelIndex' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenuByIndex, K2Node_MakeArray_Array) == 0x000058, "Member 'WB_MsgWindow_C_SetSelectMenuByIndex::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenuByIndex, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'WB_MsgWindow_C_SetSelectMenuByIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenuByIndex, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'WB_MsgWindow_C_SetSelectMenuByIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenuByIndex, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'WB_MsgWindow_C_SetSelectMenuByIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenuByIndex, CallFunc_Array_Get_Item) == 0x000074, "Member 'WB_MsgWindow_C_SetSelectMenuByIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenuByIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000078, "Member 'WB_MsgWindow_C_SetSelectMenuByIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenuByIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000079, "Member 'WB_MsgWindow_C_SetSelectMenuByIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenuByIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'WB_MsgWindow_C_SetSelectMenuByIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMenuByIndex, Temp_int_Variable) == 0x000080, "Member 'WB_MsgWindow_C_SetSelectMenuByIndex::Temp_int_Variable' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.IsMessageCompleted
// 0x0003 (0x0003 - 0x0000)
struct WB_MsgWindow_C_IsMessageCompleted final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Retparam;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMessageCompleted_ReturnValue;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_IsMessageCompleted) == 0x000001, "Wrong alignment on WB_MsgWindow_C_IsMessageCompleted");
static_assert(sizeof(WB_MsgWindow_C_IsMessageCompleted) == 0x000003, "Wrong size on WB_MsgWindow_C_IsMessageCompleted");
static_assert(offsetof(WB_MsgWindow_C_IsMessageCompleted, OutFinished) == 0x000000, "Member 'WB_MsgWindow_C_IsMessageCompleted::OutFinished' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsMessageCompleted, Retparam) == 0x000001, "Member 'WB_MsgWindow_C_IsMessageCompleted::Retparam' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsMessageCompleted, CallFunc_IsMessageCompleted_ReturnValue) == 0x000002, "Member 'WB_MsgWindow_C_IsMessageCompleted::CallFunc_IsMessageCompleted_ReturnValue' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.IsPressNextPageButton
// 0x0001 (0x0001 - 0x0000)
struct WB_MsgWindow_C_IsPressNextPageButton final
{
public:
	bool                                          OutNextPage;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_IsPressNextPageButton) == 0x000001, "Wrong alignment on WB_MsgWindow_C_IsPressNextPageButton");
static_assert(sizeof(WB_MsgWindow_C_IsPressNextPageButton) == 0x000001, "Wrong size on WB_MsgWindow_C_IsPressNextPageButton");
static_assert(offsetof(WB_MsgWindow_C_IsPressNextPageButton, OutNextPage) == 0x000000, "Member 'WB_MsgWindow_C_IsPressNextPageButton::OutNextPage' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.SetMessageRichTextByLabel
// 0x00A8 (0x00A8 - 0x0000)
struct WB_MsgWindow_C_SetMessageRichTextByLabel final
{
public:
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InLabel;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InExecutionText;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InShowIconAfterCompleted;                          // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InBuildText;                                       // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CD9[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMessageData                           CallFunc_GetMessageDataFromLabel_ReturnValue;      // 0x0018(0x0070)()
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByLabel_self_CastInput;   // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_BuildText_self_CastInput;                 // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_SetMessageRichTextByLabel) == 0x000008, "Wrong alignment on WB_MsgWindow_C_SetMessageRichTextByLabel");
static_assert(sizeof(WB_MsgWindow_C_SetMessageRichTextByLabel) == 0x0000A8, "Wrong size on WB_MsgWindow_C_SetMessageRichTextByLabel");
static_assert(offsetof(WB_MsgWindow_C_SetMessageRichTextByLabel, InScriptMessageAsset) == 0x000000, "Member 'WB_MsgWindow_C_SetMessageRichTextByLabel::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageRichTextByLabel, InLabel) == 0x000008, "Member 'WB_MsgWindow_C_SetMessageRichTextByLabel::InLabel' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageRichTextByLabel, InExecutionText) == 0x000010, "Member 'WB_MsgWindow_C_SetMessageRichTextByLabel::InExecutionText' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageRichTextByLabel, InShowIconAfterCompleted) == 0x000011, "Member 'WB_MsgWindow_C_SetMessageRichTextByLabel::InShowIconAfterCompleted' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageRichTextByLabel, InBuildText) == 0x000012, "Member 'WB_MsgWindow_C_SetMessageRichTextByLabel::InBuildText' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageRichTextByLabel, CallFunc_GetMessageDataFromLabel_ReturnValue) == 0x000018, "Member 'WB_MsgWindow_C_SetMessageRichTextByLabel::CallFunc_GetMessageDataFromLabel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageRichTextByLabel, CallFunc_SetScriptMessageByLabel_self_CastInput) == 0x000088, "Member 'WB_MsgWindow_C_SetMessageRichTextByLabel::CallFunc_SetScriptMessageByLabel_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageRichTextByLabel, CallFunc_BuildText_self_CastInput) == 0x000098, "Member 'WB_MsgWindow_C_SetMessageRichTextByLabel::CallFunc_BuildText_self_CastInput' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.SetBuildText
// 0x0010 (0x0010 - 0x0000)
struct WB_MsgWindow_C_SetBuildText final
{
public:
	TScriptInterface<class IMessageTagInterface>  CallFunc_BuildText_self_CastInput;                 // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_SetBuildText) == 0x000008, "Wrong alignment on WB_MsgWindow_C_SetBuildText");
static_assert(sizeof(WB_MsgWindow_C_SetBuildText) == 0x000010, "Wrong size on WB_MsgWindow_C_SetBuildText");
static_assert(offsetof(WB_MsgWindow_C_SetBuildText, CallFunc_BuildText_self_CastInput) == 0x000000, "Member 'WB_MsgWindow_C_SetBuildText::CallFunc_BuildText_self_CastInput' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.SetMessageRickTextByIndex
// 0x00A0 (0x00A0 - 0x0000)
struct WB_MsgWindow_C_SetMessageRickTextByIndex final
{
public:
	class UScriptMessageAsset*                    InScriptMessageAset;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIndex;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InExecutionText;                                   // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InShowIconAfterCompleted;                          // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InBuildText;                                       // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CDA[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMessageData                           CallFunc_GetMessageDataFromId_ReturnValue;         // 0x0010(0x0070)()
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByID_self_CastInput;      // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IMessageTagInterface>  CallFunc_BuildText_self_CastInput;                 // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_SetMessageRickTextByIndex) == 0x000008, "Wrong alignment on WB_MsgWindow_C_SetMessageRickTextByIndex");
static_assert(sizeof(WB_MsgWindow_C_SetMessageRickTextByIndex) == 0x0000A0, "Wrong size on WB_MsgWindow_C_SetMessageRickTextByIndex");
static_assert(offsetof(WB_MsgWindow_C_SetMessageRickTextByIndex, InScriptMessageAset) == 0x000000, "Member 'WB_MsgWindow_C_SetMessageRickTextByIndex::InScriptMessageAset' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageRickTextByIndex, InIndex) == 0x000008, "Member 'WB_MsgWindow_C_SetMessageRickTextByIndex::InIndex' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageRickTextByIndex, InExecutionText) == 0x00000C, "Member 'WB_MsgWindow_C_SetMessageRickTextByIndex::InExecutionText' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageRickTextByIndex, InShowIconAfterCompleted) == 0x00000D, "Member 'WB_MsgWindow_C_SetMessageRickTextByIndex::InShowIconAfterCompleted' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageRickTextByIndex, InBuildText) == 0x00000E, "Member 'WB_MsgWindow_C_SetMessageRickTextByIndex::InBuildText' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageRickTextByIndex, CallFunc_GetMessageDataFromId_ReturnValue) == 0x000010, "Member 'WB_MsgWindow_C_SetMessageRickTextByIndex::CallFunc_GetMessageDataFromId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageRickTextByIndex, CallFunc_SetScriptMessageByID_self_CastInput) == 0x000080, "Member 'WB_MsgWindow_C_SetMessageRickTextByIndex::CallFunc_SetScriptMessageByID_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMessageRickTextByIndex, CallFunc_BuildText_self_CastInput) == 0x000090, "Member 'WB_MsgWindow_C_SetMessageRickTextByIndex::CallFunc_BuildText_self_CastInput' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.GetVoiceName
// 0x0020 (0x0020 - 0x0000)
struct WB_MsgWindow_C_GetVoiceName final
{
public:
	class FString                                 OutVoiceName;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetVoiceName_ReturnValue;                 // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_GetVoiceName) == 0x000008, "Wrong alignment on WB_MsgWindow_C_GetVoiceName");
static_assert(sizeof(WB_MsgWindow_C_GetVoiceName) == 0x000020, "Wrong size on WB_MsgWindow_C_GetVoiceName");
static_assert(offsetof(WB_MsgWindow_C_GetVoiceName, OutVoiceName) == 0x000000, "Member 'WB_MsgWindow_C_GetVoiceName::OutVoiceName' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetVoiceName, CallFunc_GetVoiceName_ReturnValue) == 0x000010, "Member 'WB_MsgWindow_C_GetVoiceName::CallFunc_GetVoiceName_ReturnValue' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.GetVoiceAsset
// 0x0050 (0x0050 - 0x0000)
struct WB_MsgWindow_C_GetVoiceAsset final
{
public:
	class FString                                 InName;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class USoundAtomCue*                          OutSoundAtomCue;                                   // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CDB[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CDC[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_GetVoiceAsset) == 0x000008, "Wrong alignment on WB_MsgWindow_C_GetVoiceAsset");
static_assert(sizeof(WB_MsgWindow_C_GetVoiceAsset) == 0x000050, "Wrong size on WB_MsgWindow_C_GetVoiceAsset");
static_assert(offsetof(WB_MsgWindow_C_GetVoiceAsset, InName) == 0x000000, "Member 'WB_MsgWindow_C_GetVoiceAsset::InName' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetVoiceAsset, OutSoundAtomCue) == 0x000010, "Member 'WB_MsgWindow_C_GetVoiceAsset::OutSoundAtomCue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetVoiceAsset, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WB_MsgWindow_C_GetVoiceAsset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetVoiceAsset, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WB_MsgWindow_C_GetVoiceAsset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetVoiceAsset, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WB_MsgWindow_C_GetVoiceAsset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetVoiceAsset, CallFunc_Array_Get_Item) == 0x000028, "Member 'WB_MsgWindow_C_GetVoiceAsset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetVoiceAsset, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WB_MsgWindow_C_GetVoiceAsset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetVoiceAsset, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'WB_MsgWindow_C_GetVoiceAsset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetVoiceAsset, CallFunc_GetObjectName_ReturnValue) == 0x000038, "Member 'WB_MsgWindow_C_GetVoiceAsset::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetVoiceAsset, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000048, "Member 'WB_MsgWindow_C_GetVoiceAsset::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.VoiceLoadProc
// 0x0010 (0x0010 - 0x0000)
struct WB_MsgWindow_C_VoiceLoadProc final
{
public:
	bool                                          IsLoaded;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CDD[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_VoiceLoadProc) == 0x000004, "Wrong alignment on WB_MsgWindow_C_VoiceLoadProc");
static_assert(sizeof(WB_MsgWindow_C_VoiceLoadProc) == 0x000010, "Wrong size on WB_MsgWindow_C_VoiceLoadProc");
static_assert(offsetof(WB_MsgWindow_C_VoiceLoadProc, IsLoaded) == 0x000000, "Member 'WB_MsgWindow_C_VoiceLoadProc::IsLoaded' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_VoiceLoadProc, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WB_MsgWindow_C_VoiceLoadProc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_VoiceLoadProc, CallFunc_Array_Length_ReturnValue_1) == 0x000008, "Member 'WB_MsgWindow_C_VoiceLoadProc::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_VoiceLoadProc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'WB_MsgWindow_C_VoiceLoadProc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.SetMsgSettings
// 0x0068 (0x0068 - 0x0000)
struct WB_MsgWindow_C_SetMsgSettings final
{
public:
	int32                                         InType;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CDE[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CDF[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0014(0x001C)(NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform_1;               // 0x0040(0x001C)(NoDestructor)
	uint8                                         Pad_4CE0[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_SetMsgSettings) == 0x000008, "Wrong alignment on WB_MsgWindow_C_SetMsgSettings");
static_assert(sizeof(WB_MsgWindow_C_SetMsgSettings) == 0x000068, "Wrong size on WB_MsgWindow_C_SetMsgSettings");
static_assert(offsetof(WB_MsgWindow_C_SetMsgSettings, InType) == 0x000000, "Member 'WB_MsgWindow_C_SetMsgSettings::InType' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMsgSettings, CallFunc_Conv_IntToBool_ReturnValue) == 0x000004, "Member 'WB_MsgWindow_C_SetMsgSettings::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMsgSettings, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WB_MsgWindow_C_SetMsgSettings::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMsgSettings, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'WB_MsgWindow_C_SetMsgSettings::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMsgSettings, K2Node_MakeStruct_WidgetTransform) == 0x000014, "Member 'WB_MsgWindow_C_SetMsgSettings::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMsgSettings, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000030, "Member 'WB_MsgWindow_C_SetMsgSettings::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMsgSettings, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000038, "Member 'WB_MsgWindow_C_SetMsgSettings::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMsgSettings, K2Node_MakeStruct_WidgetTransform_1) == 0x000040, "Member 'WB_MsgWindow_C_SetMsgSettings::K2Node_MakeStruct_WidgetTransform_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetMsgSettings, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x000060, "Member 'WB_MsgWindow_C_SetMsgSettings::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.GetVoiceCompornent
// 0x0008 (0x0008 - 0x0000)
struct WB_MsgWindow_C_GetVoiceCompornent final
{
public:
	class UAtomComponent*                         OutVoiceCompornent;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_GetVoiceCompornent) == 0x000008, "Wrong alignment on WB_MsgWindow_C_GetVoiceCompornent");
static_assert(sizeof(WB_MsgWindow_C_GetVoiceCompornent) == 0x000008, "Wrong size on WB_MsgWindow_C_GetVoiceCompornent");
static_assert(offsetof(WB_MsgWindow_C_GetVoiceCompornent, OutVoiceCompornent) == 0x000000, "Member 'WB_MsgWindow_C_GetVoiceCompornent::OutVoiceCompornent' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.SetPageIconPosition
// 0x00B0 (0x00B0 - 0x0000)
struct WB_MsgWindow_C_SetPageIconPosition final
{
public:
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_1;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetTextEndOffset_ReturnValue;             // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetTextEndOffset_ReturnValue_1;           // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue_2;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CE1[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDrawStrLen_ReturnValue;                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPageCompleted_ReturnValue;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMessageCompleted_ReturnValue;           // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CE2[0x5];                                     // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_SetPageIconPosition) == 0x000008, "Wrong alignment on WB_MsgWindow_C_SetPageIconPosition");
static_assert(sizeof(WB_MsgWindow_C_SetPageIconPosition) == 0x0000B0, "Wrong size on WB_MsgWindow_C_SetPageIconPosition");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_GetDesiredSize_ReturnValue) == 0x000000, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_GetDesiredSize_ReturnValue_1) == 0x000008, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_GetDesiredSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_BreakVector2D_X) == 0x000010, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000018, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_GetTextEndOffset_ReturnValue) == 0x000024, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_GetTextEndOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_GetTextEndOffset_ReturnValue_1) == 0x00002C, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_GetTextEndOffset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000034, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_BreakVector2D_X_1) == 0x00003C, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_BreakVector2D_Y_1) == 0x000040, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_BreakVector2D_X_2) == 0x000044, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_BreakVector2D_Y_2) == 0x000048, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_Add_FloatFloat_ReturnValue) == 0x00004C, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000050, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000054, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000058, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_MakeVector2D_ReturnValue) == 0x00005C, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000064, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000068, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_MakeVector2D_ReturnValue_1) == 0x000070, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_GetDesiredSize_ReturnValue_2) == 0x000078, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_GetDesiredSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_BreakVector2D_X_3) == 0x000080, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_BreakVector2D_Y_3) == 0x000084, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000088, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_GetDrawStrLen_ReturnValue) == 0x00008C, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_GetDrawStrLen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_IsPageCompleted_ReturnValue) == 0x000090, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_IsPageCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, K2Node_SwitchInteger_CmpSuccess) == 0x000091, "Member 'WB_MsgWindow_C_SetPageIconPosition::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_IsMessageCompleted_ReturnValue) == 0x000092, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_IsMessageCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000098, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_GetPosition_ReturnValue) == 0x0000A0, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetPageIconPosition, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x0000A8, "Member 'WB_MsgWindow_C_SetPageIconPosition::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.SetSelectMessageBuildLater
// 0x0001 (0x0001 - 0x0000)
struct WB_MsgWindow_C_SetSelectMessageBuildLater final
{
public:
	bool                                          InBuildLater;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_SetSelectMessageBuildLater) == 0x000001, "Wrong alignment on WB_MsgWindow_C_SetSelectMessageBuildLater");
static_assert(sizeof(WB_MsgWindow_C_SetSelectMessageBuildLater) == 0x000001, "Wrong size on WB_MsgWindow_C_SetSelectMessageBuildLater");
static_assert(offsetof(WB_MsgWindow_C_SetSelectMessageBuildLater, InBuildLater) == 0x000000, "Member 'WB_MsgWindow_C_SetSelectMessageBuildLater::InBuildLater' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.SetEventMessageFlag
// 0x0001 (0x0001 - 0x0000)
struct WB_MsgWindow_C_SetEventMessageFlag final
{
public:
	bool                                          InEventFlag;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_SetEventMessageFlag) == 0x000001, "Wrong alignment on WB_MsgWindow_C_SetEventMessageFlag");
static_assert(sizeof(WB_MsgWindow_C_SetEventMessageFlag) == 0x000001, "Wrong size on WB_MsgWindow_C_SetEventMessageFlag");
static_assert(offsetof(WB_MsgWindow_C_SetEventMessageFlag, InEventFlag) == 0x000000, "Member 'WB_MsgWindow_C_SetEventMessageFlag::InEventFlag' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.SetRichSelectTextValueParam
// 0x000C (0x000C - 0x0000)
struct WB_MsgWindow_C_SetRichSelectTextValueParam final
{
public:
	int32                                         InSelectIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIndex;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InValueParam;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_SetRichSelectTextValueParam) == 0x000004, "Wrong alignment on WB_MsgWindow_C_SetRichSelectTextValueParam");
static_assert(sizeof(WB_MsgWindow_C_SetRichSelectTextValueParam) == 0x00000C, "Wrong size on WB_MsgWindow_C_SetRichSelectTextValueParam");
static_assert(offsetof(WB_MsgWindow_C_SetRichSelectTextValueParam, InSelectIndex) == 0x000000, "Member 'WB_MsgWindow_C_SetRichSelectTextValueParam::InSelectIndex' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetRichSelectTextValueParam, InIndex) == 0x000004, "Member 'WB_MsgWindow_C_SetRichSelectTextValueParam::InIndex' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetRichSelectTextValueParam, InValueParam) == 0x000008, "Member 'WB_MsgWindow_C_SetRichSelectTextValueParam::InValueParam' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.SetRichTextValueParam
// 0x0018 (0x0018 - 0x0000)
struct WB_MsgWindow_C_SetRichTextValueParam final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InValueParam;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetValueParam_self_CastInput;             // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_SetRichTextValueParam) == 0x000008, "Wrong alignment on WB_MsgWindow_C_SetRichTextValueParam");
static_assert(sizeof(WB_MsgWindow_C_SetRichTextValueParam) == 0x000018, "Wrong size on WB_MsgWindow_C_SetRichTextValueParam");
static_assert(offsetof(WB_MsgWindow_C_SetRichTextValueParam, InIndex) == 0x000000, "Member 'WB_MsgWindow_C_SetRichTextValueParam::InIndex' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetRichTextValueParam, InValueParam) == 0x000004, "Member 'WB_MsgWindow_C_SetRichTextValueParam::InValueParam' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetRichTextValueParam, CallFunc_SetValueParam_self_CastInput) == 0x000008, "Member 'WB_MsgWindow_C_SetRichTextValueParam::CallFunc_SetValueParam_self_CastInput' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.GetRichTextDrawStrLen
// 0x0008 (0x0008 - 0x0000)
struct WB_MsgWindow_C_GetRichTextDrawStrLen final
{
public:
	int32                                         OutParam;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDrawStrLen_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_GetRichTextDrawStrLen) == 0x000004, "Wrong alignment on WB_MsgWindow_C_GetRichTextDrawStrLen");
static_assert(sizeof(WB_MsgWindow_C_GetRichTextDrawStrLen) == 0x000008, "Wrong size on WB_MsgWindow_C_GetRichTextDrawStrLen");
static_assert(offsetof(WB_MsgWindow_C_GetRichTextDrawStrLen, OutParam) == 0x000000, "Member 'WB_MsgWindow_C_GetRichTextDrawStrLen::OutParam' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetRichTextDrawStrLen, CallFunc_GetDrawStrLen_ReturnValue) == 0x000004, "Member 'WB_MsgWindow_C_GetRichTextDrawStrLen::CallFunc_GetDrawStrLen_ReturnValue' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.SetRichTextProgramValue
// 0x0028 (0x0028 - 0x0000)
struct WB_MsgWindow_C_SetRichTextProgramValue final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CE3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InValue;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetProgramValue_self_CastInput;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_SetRichTextProgramValue) == 0x000008, "Wrong alignment on WB_MsgWindow_C_SetRichTextProgramValue");
static_assert(sizeof(WB_MsgWindow_C_SetRichTextProgramValue) == 0x000028, "Wrong size on WB_MsgWindow_C_SetRichTextProgramValue");
static_assert(offsetof(WB_MsgWindow_C_SetRichTextProgramValue, InIndex) == 0x000000, "Member 'WB_MsgWindow_C_SetRichTextProgramValue::InIndex' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetRichTextProgramValue, InValue) == 0x000008, "Member 'WB_MsgWindow_C_SetRichTextProgramValue::InValue' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_SetRichTextProgramValue, CallFunc_SetProgramValue_self_CastInput) == 0x000018, "Member 'WB_MsgWindow_C_SetRichTextProgramValue::CallFunc_SetProgramValue_self_CastInput' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.IsPageCompleted
// 0x0003 (0x0003 - 0x0000)
struct WB_MsgWindow_C_IsPageCompleted final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Retparam;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPageCompleted_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_IsPageCompleted) == 0x000001, "Wrong alignment on WB_MsgWindow_C_IsPageCompleted");
static_assert(sizeof(WB_MsgWindow_C_IsPageCompleted) == 0x000003, "Wrong size on WB_MsgWindow_C_IsPageCompleted");
static_assert(offsetof(WB_MsgWindow_C_IsPageCompleted, OutFinished) == 0x000000, "Member 'WB_MsgWindow_C_IsPageCompleted::OutFinished' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsPageCompleted, Retparam) == 0x000001, "Member 'WB_MsgWindow_C_IsPageCompleted::Retparam' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsPageCompleted, CallFunc_IsPageCompleted_ReturnValue) == 0x000002, "Member 'WB_MsgWindow_C_IsPageCompleted::CallFunc_IsPageCompleted_ReturnValue' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.InitializeTextSelectMenu
// 0x0018 (0x0018 - 0x0000)
struct WB_MsgWindow_C_InitializeTextSelectMenu final
{
public:
	bool                                          InNonClearText;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CE4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByID_self_CastInput;      // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_InitializeTextSelectMenu) == 0x000008, "Wrong alignment on WB_MsgWindow_C_InitializeTextSelectMenu");
static_assert(sizeof(WB_MsgWindow_C_InitializeTextSelectMenu) == 0x000018, "Wrong size on WB_MsgWindow_C_InitializeTextSelectMenu");
static_assert(offsetof(WB_MsgWindow_C_InitializeTextSelectMenu, InNonClearText) == 0x000000, "Member 'WB_MsgWindow_C_InitializeTextSelectMenu::InNonClearText' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_InitializeTextSelectMenu, CallFunc_SetScriptMessageByID_self_CastInput) == 0x000008, "Member 'WB_MsgWindow_C_InitializeTextSelectMenu::CallFunc_SetScriptMessageByID_self_CastInput' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.MessageTextStopNoSelectMenuOff
// 0x0018 (0x0018 - 0x0000)
struct WB_MsgWindow_C_MessageTextStopNoSelectMenuOff final
{
public:
	bool                                          InNonClearText;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CE5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByID_self_CastInput;      // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_MessageTextStopNoSelectMenuOff) == 0x000008, "Wrong alignment on WB_MsgWindow_C_MessageTextStopNoSelectMenuOff");
static_assert(sizeof(WB_MsgWindow_C_MessageTextStopNoSelectMenuOff) == 0x000018, "Wrong size on WB_MsgWindow_C_MessageTextStopNoSelectMenuOff");
static_assert(offsetof(WB_MsgWindow_C_MessageTextStopNoSelectMenuOff, InNonClearText) == 0x000000, "Member 'WB_MsgWindow_C_MessageTextStopNoSelectMenuOff::InNonClearText' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_MessageTextStopNoSelectMenuOff, CallFunc_SetScriptMessageByID_self_CastInput) == 0x000008, "Member 'WB_MsgWindow_C_MessageTextStopNoSelectMenuOff::CallFunc_SetScriptMessageByID_self_CastInput' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.GetSelectCursorNum
// 0x0014 (0x0014 - 0x0000)
struct WB_MsgWindow_C_GetSelectCursorNum final
{
public:
	int32                                         OutParam;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CE6[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectCursorNum_OutCursorNum;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_GetSelectCursorNum) == 0x000004, "Wrong alignment on WB_MsgWindow_C_GetSelectCursorNum");
static_assert(sizeof(WB_MsgWindow_C_GetSelectCursorNum) == 0x000014, "Wrong size on WB_MsgWindow_C_GetSelectCursorNum");
static_assert(offsetof(WB_MsgWindow_C_GetSelectCursorNum, OutParam) == 0x000000, "Member 'WB_MsgWindow_C_GetSelectCursorNum::OutParam' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetSelectCursorNum, Temp_bool_Variable) == 0x000004, "Member 'WB_MsgWindow_C_GetSelectCursorNum::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetSelectCursorNum, Temp_int_Variable) == 0x000008, "Member 'WB_MsgWindow_C_GetSelectCursorNum::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetSelectCursorNum, CallFunc_GetSelectCursorNum_OutCursorNum) == 0x00000C, "Member 'WB_MsgWindow_C_GetSelectCursorNum::CallFunc_GetSelectCursorNum_OutCursorNum' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetSelectCursorNum, K2Node_Select_Default) == 0x000010, "Member 'WB_MsgWindow_C_GetSelectCursorNum::K2Node_Select_Default' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.GetRichTextStrLenExcludingTag
// 0x0008 (0x0008 - 0x0000)
struct WB_MsgWindow_C_GetRichTextStrLenExcludingTag final
{
public:
	int32                                         StrLen;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStrLenExcludingTag_ReturnValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MsgWindow_C_GetRichTextStrLenExcludingTag) == 0x000004, "Wrong alignment on WB_MsgWindow_C_GetRichTextStrLenExcludingTag");
static_assert(sizeof(WB_MsgWindow_C_GetRichTextStrLenExcludingTag) == 0x000008, "Wrong size on WB_MsgWindow_C_GetRichTextStrLenExcludingTag");
static_assert(offsetof(WB_MsgWindow_C_GetRichTextStrLenExcludingTag, StrLen) == 0x000000, "Member 'WB_MsgWindow_C_GetRichTextStrLenExcludingTag::StrLen' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_GetRichTextStrLenExcludingTag, CallFunc_GetStrLenExcludingTag_ReturnValue) == 0x000004, "Member 'WB_MsgWindow_C_GetRichTextStrLenExcludingTag::CallFunc_GetStrLenExcludingTag_ReturnValue' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.GetNextPageIconClicked
// 0x0001 (0x0001 - 0x0000)
struct WB_MsgWindow_C_GetNextPageIconClicked final
{
public:
	bool                                          OutClicked;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_GetNextPageIconClicked) == 0x000001, "Wrong alignment on WB_MsgWindow_C_GetNextPageIconClicked");
static_assert(sizeof(WB_MsgWindow_C_GetNextPageIconClicked) == 0x000001, "Wrong size on WB_MsgWindow_C_GetNextPageIconClicked");
static_assert(offsetof(WB_MsgWindow_C_GetNextPageIconClicked, OutClicked) == 0x000000, "Member 'WB_MsgWindow_C_GetNextPageIconClicked::OutClicked' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.OldSelectCursorOff
// 0x0001 (0x0001 - 0x0000)
struct WB_MsgWindow_C_OldSelectCursorOff final
{
public:
	bool                                          InAllClear;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_OldSelectCursorOff) == 0x000001, "Wrong alignment on WB_MsgWindow_C_OldSelectCursorOff");
static_assert(sizeof(WB_MsgWindow_C_OldSelectCursorOff) == 0x000001, "Wrong size on WB_MsgWindow_C_OldSelectCursorOff");
static_assert(offsetof(WB_MsgWindow_C_OldSelectCursorOff, InAllClear) == 0x000000, "Member 'WB_MsgWindow_C_OldSelectCursorOff::InAllClear' has a wrong offset!");

// Function WB_MsgWindow.WB_MsgWindow_C.IsMouseHover
// 0x0002 (0x0002 - 0x0000)
struct WB_MsgWindow_C_IsMouseHover final
{
public:
	bool                                          OutHover;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_MsgWindow_C_IsMouseHover) == 0x000001, "Wrong alignment on WB_MsgWindow_C_IsMouseHover");
static_assert(sizeof(WB_MsgWindow_C_IsMouseHover) == 0x000002, "Wrong size on WB_MsgWindow_C_IsMouseHover");
static_assert(offsetof(WB_MsgWindow_C_IsMouseHover, OutHover) == 0x000000, "Member 'WB_MsgWindow_C_IsMouseHover::OutHover' has a wrong offset!");
static_assert(offsetof(WB_MsgWindow_C_IsMouseHover, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'WB_MsgWindow_C_IsMouseHover::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

