#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_QuestSlot2

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "ST_CampQuest_SlotInfo_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_QuestSlot2.WB_QuestSlot2_C.GetCursorState
// 0x0001 (0x0001 - 0x0000)
struct WB_QuestSlot2_C_GetCursorState final
{
public:
	bool                                          Param_OnCursor;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_QuestSlot2_C_GetCursorState) == 0x000001, "Wrong alignment on WB_QuestSlot2_C_GetCursorState");
static_assert(sizeof(WB_QuestSlot2_C_GetCursorState) == 0x000001, "Wrong size on WB_QuestSlot2_C_GetCursorState");
static_assert(offsetof(WB_QuestSlot2_C_GetCursorState, Param_OnCursor) == 0x000000, "Member 'WB_QuestSlot2_C_GetCursorState::Param_OnCursor' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.GetSlotInfo
// 0x0008 (0x0008 - 0x0000)
struct WB_QuestSlot2_C_GetSlotInfo final
{
public:
	struct FST_CampQuest_SlotInfo                 Param_SlotInfo;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_QuestSlot2_C_GetSlotInfo) == 0x000004, "Wrong alignment on WB_QuestSlot2_C_GetSlotInfo");
static_assert(sizeof(WB_QuestSlot2_C_GetSlotInfo) == 0x000008, "Wrong size on WB_QuestSlot2_C_GetSlotInfo");
static_assert(offsetof(WB_QuestSlot2_C_GetSlotInfo, Param_SlotInfo) == 0x000000, "Member 'WB_QuestSlot2_C_GetSlotInfo::Param_SlotInfo' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.UpdateCursorAnim
// 0x0044 (0x0044 - 0x0000)
struct WB_QuestSlot2_C_UpdateCursorAnim final
{
public:
	class FName                                   L_AnimName;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_937A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName;  // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName; // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_937B[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayFrame_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_937C[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetSlotAssignAnim_AnimationName;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSlotAssignAnim_IsPlaying;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_937D[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_QuestSlot2_C_UpdateCursorAnim) == 0x000004, "Wrong alignment on WB_QuestSlot2_C_UpdateCursorAnim");
static_assert(sizeof(WB_QuestSlot2_C_UpdateCursorAnim) == 0x000044, "Wrong size on WB_QuestSlot2_C_UpdateCursorAnim");
static_assert(offsetof(WB_QuestSlot2_C_UpdateCursorAnim, L_AnimName) == 0x000000, "Member 'WB_QuestSlot2_C_UpdateCursorAnim::L_AnimName' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateCursorAnim, Temp_int_Variable) == 0x000008, "Member 'WB_QuestSlot2_C_UpdateCursorAnim::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateCursorAnim, Temp_int_Variable_1) == 0x00000C, "Member 'WB_QuestSlot2_C_UpdateCursorAnim::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateCursorAnim, CallFunc_IsPlaying_ReturnValue) == 0x000010, "Member 'WB_QuestSlot2_C_UpdateCursorAnim::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateCursorAnim, CallFunc_GetPlayingAnimationName_OutAnimPackName) == 0x000014, "Member 'WB_QuestSlot2_C_UpdateCursorAnim::CallFunc_GetPlayingAnimationName_OutAnimPackName' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateCursorAnim, CallFunc_GetPlayingAnimationName_OutAnimationName) == 0x00001C, "Member 'WB_QuestSlot2_C_UpdateCursorAnim::CallFunc_GetPlayingAnimationName_OutAnimationName' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateCursorAnim, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000024, "Member 'WB_QuestSlot2_C_UpdateCursorAnim::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateCursorAnim, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'WB_QuestSlot2_C_UpdateCursorAnim::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateCursorAnim, CallFunc_GetPlayFrame_ReturnValue) == 0x000028, "Member 'WB_QuestSlot2_C_UpdateCursorAnim::CallFunc_GetPlayFrame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateCursorAnim, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00002C, "Member 'WB_QuestSlot2_C_UpdateCursorAnim::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateCursorAnim, Temp_bool_Variable) == 0x00002D, "Member 'WB_QuestSlot2_C_UpdateCursorAnim::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateCursorAnim, CallFunc_GetSlotAssignAnim_AnimationName) == 0x000030, "Member 'WB_QuestSlot2_C_UpdateCursorAnim::CallFunc_GetSlotAssignAnim_AnimationName' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateCursorAnim, CallFunc_GetSlotAssignAnim_IsPlaying) == 0x000038, "Member 'WB_QuestSlot2_C_UpdateCursorAnim::CallFunc_GetSlotAssignAnim_IsPlaying' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateCursorAnim, K2Node_SwitchName_CmpSuccess) == 0x000039, "Member 'WB_QuestSlot2_C_UpdateCursorAnim::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateCursorAnim, K2Node_Select_Default) == 0x00003C, "Member 'WB_QuestSlot2_C_UpdateCursorAnim::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateCursorAnim, CallFunc_Play_ReturnValue) == 0x000040, "Member 'WB_QuestSlot2_C_UpdateCursorAnim::CallFunc_Play_ReturnValue' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.UpdateColor
// 0x00F8 (0x00F8 - 0x0000)
struct WB_QuestSlot2_C_UpdateColor final
{
public:
	float                                         L_AnimPlayFrame;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_937E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 L_AnimCategory;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0048(0x0028)()
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_937F[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayFrame_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetSlotAssignAnim_AnimationName;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSlotAssignAnim_IsPlaying;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_2;                       // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9380[0x5];                                     // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00A0(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x00C8(0x0028)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_QuestSlot2_C_UpdateColor) == 0x000008, "Wrong alignment on WB_QuestSlot2_C_UpdateColor");
static_assert(sizeof(WB_QuestSlot2_C_UpdateColor) == 0x0000F8, "Wrong size on WB_QuestSlot2_C_UpdateColor");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, L_AnimPlayFrame) == 0x000000, "Member 'WB_QuestSlot2_C_UpdateColor::L_AnimPlayFrame' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, L_AnimCategory) == 0x000008, "Member 'WB_QuestSlot2_C_UpdateColor::L_AnimCategory' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'WB_QuestSlot2_C_UpdateColor::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000028, "Member 'WB_QuestSlot2_C_UpdateColor::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, CallFunc_Conv_StringToName_ReturnValue) == 0x000038, "Member 'WB_QuestSlot2_C_UpdateColor::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000040, "Member 'WB_QuestSlot2_C_UpdateColor::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, K2Node_MakeStruct_SlateColor) == 0x000048, "Member 'WB_QuestSlot2_C_UpdateColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, CallFunc_Play_ReturnValue) == 0x000070, "Member 'WB_QuestSlot2_C_UpdateColor::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, CallFunc_Play_ReturnValue_1) == 0x000071, "Member 'WB_QuestSlot2_C_UpdateColor::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, CallFunc_GetPlayFrame_ReturnValue) == 0x000074, "Member 'WB_QuestSlot2_C_UpdateColor::CallFunc_GetPlayFrame_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'WB_QuestSlot2_C_UpdateColor::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, CallFunc_Conv_StringToName_ReturnValue_2) == 0x000088, "Member 'WB_QuestSlot2_C_UpdateColor::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, CallFunc_GetSlotAssignAnim_AnimationName) == 0x000090, "Member 'WB_QuestSlot2_C_UpdateColor::CallFunc_GetSlotAssignAnim_AnimationName' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, CallFunc_GetSlotAssignAnim_IsPlaying) == 0x000098, "Member 'WB_QuestSlot2_C_UpdateColor::CallFunc_GetSlotAssignAnim_IsPlaying' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, CallFunc_Play_ReturnValue_2) == 0x000099, "Member 'WB_QuestSlot2_C_UpdateColor::CallFunc_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, K2Node_SwitchName_CmpSuccess) == 0x00009A, "Member 'WB_QuestSlot2_C_UpdateColor::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, K2Node_MakeStruct_SlateColor_1) == 0x0000A0, "Member 'WB_QuestSlot2_C_UpdateColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, K2Node_MakeStruct_SlateColor_2) == 0x0000C8, "Member 'WB_QuestSlot2_C_UpdateColor::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_UpdateColor, K2Node_SwitchEnum_CmpSuccess) == 0x0000F0, "Member 'WB_QuestSlot2_C_UpdateColor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.SetIconAnimFrame
// 0x0008 (0x0008 - 0x0000)
struct WB_QuestSlot2_C_SetIconAnimFrame final
{
public:
	float                                         InAnimFrame;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNewIcon;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUpdateIcon;                                      // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_QuestSlot2_C_SetIconAnimFrame) == 0x000004, "Wrong alignment on WB_QuestSlot2_C_SetIconAnimFrame");
static_assert(sizeof(WB_QuestSlot2_C_SetIconAnimFrame) == 0x000008, "Wrong size on WB_QuestSlot2_C_SetIconAnimFrame");
static_assert(offsetof(WB_QuestSlot2_C_SetIconAnimFrame, InAnimFrame) == 0x000000, "Member 'WB_QuestSlot2_C_SetIconAnimFrame::InAnimFrame' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetIconAnimFrame, IsNewIcon) == 0x000004, "Member 'WB_QuestSlot2_C_SetIconAnimFrame::IsNewIcon' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetIconAnimFrame, IsUpdateIcon) == 0x000005, "Member 'WB_QuestSlot2_C_SetIconAnimFrame::IsUpdateIcon' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.GetUpdateIconAnimFrame
// 0x0010 (0x0010 - 0x0000)
struct WB_QuestSlot2_C_GetUpdateIconAnimFrame final
{
public:
	float                                         PlayFrame;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   L_AnimName;                                        // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayFrame_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_QuestSlot2_C_GetUpdateIconAnimFrame) == 0x000004, "Wrong alignment on WB_QuestSlot2_C_GetUpdateIconAnimFrame");
static_assert(sizeof(WB_QuestSlot2_C_GetUpdateIconAnimFrame) == 0x000010, "Wrong size on WB_QuestSlot2_C_GetUpdateIconAnimFrame");
static_assert(offsetof(WB_QuestSlot2_C_GetUpdateIconAnimFrame, PlayFrame) == 0x000000, "Member 'WB_QuestSlot2_C_GetUpdateIconAnimFrame::PlayFrame' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_GetUpdateIconAnimFrame, L_AnimName) == 0x000004, "Member 'WB_QuestSlot2_C_GetUpdateIconAnimFrame::L_AnimName' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_GetUpdateIconAnimFrame, CallFunc_GetPlayFrame_ReturnValue) == 0x00000C, "Member 'WB_QuestSlot2_C_GetUpdateIconAnimFrame::CallFunc_GetPlayFrame_ReturnValue' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.GetNewIconAnimFrame
// 0x0010 (0x0010 - 0x0000)
struct WB_QuestSlot2_C_GetNewIconAnimFrame final
{
public:
	float                                         PlayFrame;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   L_AnimName;                                        // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayFrame_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_QuestSlot2_C_GetNewIconAnimFrame) == 0x000004, "Wrong alignment on WB_QuestSlot2_C_GetNewIconAnimFrame");
static_assert(sizeof(WB_QuestSlot2_C_GetNewIconAnimFrame) == 0x000010, "Wrong size on WB_QuestSlot2_C_GetNewIconAnimFrame");
static_assert(offsetof(WB_QuestSlot2_C_GetNewIconAnimFrame, PlayFrame) == 0x000000, "Member 'WB_QuestSlot2_C_GetNewIconAnimFrame::PlayFrame' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_GetNewIconAnimFrame, L_AnimName) == 0x000004, "Member 'WB_QuestSlot2_C_GetNewIconAnimFrame::L_AnimName' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_GetNewIconAnimFrame, CallFunc_GetPlayFrame_ReturnValue) == 0x00000C, "Member 'WB_QuestSlot2_C_GetNewIconAnimFrame::CallFunc_GetPlayFrame_ReturnValue' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.GetSlotAssignAnim
// 0x0020 (0x0020 - 0x0000)
struct WB_QuestSlot2_C_GetSlotAssignAnim final
{
public:
	class FName                                   AnimationName;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlaying;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9381[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimPackName;  // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPlayingAnimationName_OutAnimationName; // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_QuestSlot2_C_GetSlotAssignAnim) == 0x000004, "Wrong alignment on WB_QuestSlot2_C_GetSlotAssignAnim");
static_assert(sizeof(WB_QuestSlot2_C_GetSlotAssignAnim) == 0x000020, "Wrong size on WB_QuestSlot2_C_GetSlotAssignAnim");
static_assert(offsetof(WB_QuestSlot2_C_GetSlotAssignAnim, AnimationName) == 0x000000, "Member 'WB_QuestSlot2_C_GetSlotAssignAnim::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_GetSlotAssignAnim, IsPlaying) == 0x000008, "Member 'WB_QuestSlot2_C_GetSlotAssignAnim::IsPlaying' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_GetSlotAssignAnim, CallFunc_GetPlayingAnimationName_OutAnimPackName) == 0x00000C, "Member 'WB_QuestSlot2_C_GetSlotAssignAnim::CallFunc_GetPlayingAnimationName_OutAnimPackName' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_GetSlotAssignAnim, CallFunc_GetPlayingAnimationName_OutAnimationName) == 0x000014, "Member 'WB_QuestSlot2_C_GetSlotAssignAnim::CallFunc_GetPlayingAnimationName_OutAnimationName' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_GetSlotAssignAnim, CallFunc_IsPlaying_ReturnValue) == 0x00001C, "Member 'WB_QuestSlot2_C_GetSlotAssignAnim::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.SetUpdateIconState
// 0x0005 (0x0005 - 0x0000)
struct WB_QuestSlot2_C_SetUpdateIconState final
{
public:
	bool                                          Param_IsVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_QuestSlot2_C_SetUpdateIconState) == 0x000001, "Wrong alignment on WB_QuestSlot2_C_SetUpdateIconState");
static_assert(sizeof(WB_QuestSlot2_C_SetUpdateIconState) == 0x000005, "Wrong size on WB_QuestSlot2_C_SetUpdateIconState");
static_assert(offsetof(WB_QuestSlot2_C_SetUpdateIconState, Param_IsVisible) == 0x000000, "Member 'WB_QuestSlot2_C_SetUpdateIconState::Param_IsVisible' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetUpdateIconState, Temp_bool_Variable) == 0x000001, "Member 'WB_QuestSlot2_C_SetUpdateIconState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetUpdateIconState, Temp_byte_Variable) == 0x000002, "Member 'WB_QuestSlot2_C_SetUpdateIconState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetUpdateIconState, Temp_byte_Variable_1) == 0x000003, "Member 'WB_QuestSlot2_C_SetUpdateIconState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetUpdateIconState, K2Node_Select_Default) == 0x000004, "Member 'WB_QuestSlot2_C_SetUpdateIconState::K2Node_Select_Default' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.SetNewIconState
// 0x0005 (0x0005 - 0x0000)
struct WB_QuestSlot2_C_SetNewIconState final
{
public:
	bool                                          Param_IsVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_QuestSlot2_C_SetNewIconState) == 0x000001, "Wrong alignment on WB_QuestSlot2_C_SetNewIconState");
static_assert(sizeof(WB_QuestSlot2_C_SetNewIconState) == 0x000005, "Wrong size on WB_QuestSlot2_C_SetNewIconState");
static_assert(offsetof(WB_QuestSlot2_C_SetNewIconState, Param_IsVisible) == 0x000000, "Member 'WB_QuestSlot2_C_SetNewIconState::Param_IsVisible' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetNewIconState, Temp_bool_Variable) == 0x000001, "Member 'WB_QuestSlot2_C_SetNewIconState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetNewIconState, Temp_byte_Variable) == 0x000002, "Member 'WB_QuestSlot2_C_SetNewIconState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetNewIconState, Temp_byte_Variable_1) == 0x000003, "Member 'WB_QuestSlot2_C_SetNewIconState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetNewIconState, K2Node_Select_Default) == 0x000004, "Member 'WB_QuestSlot2_C_SetNewIconState::K2Node_Select_Default' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.SetCursorState
// 0x0001 (0x0001 - 0x0000)
struct WB_QuestSlot2_C_SetCursorState final
{
public:
	bool                                          Param_OnCursor;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_QuestSlot2_C_SetCursorState) == 0x000001, "Wrong alignment on WB_QuestSlot2_C_SetCursorState");
static_assert(sizeof(WB_QuestSlot2_C_SetCursorState) == 0x000001, "Wrong size on WB_QuestSlot2_C_SetCursorState");
static_assert(offsetof(WB_QuestSlot2_C_SetCursorState, Param_OnCursor) == 0x000000, "Member 'WB_QuestSlot2_C_SetCursorState::Param_OnCursor' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.SetSlotInfo
// 0x0060 (0x0060 - 0x0000)
struct WB_QuestSlot2_C_SetSlotInfo final
{
public:
	int32                                         InMsgID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MISSION_TYPE                                InQuestType;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CAMP_QUEST_PROGRESS_STATE                   InQuestProgress;                                   // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNewIcon;                                         // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsUpdateIcon;                                      // 0x0007(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MISSION_TYPE                                Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9382[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CAMP_QUEST_PROGRESS_STATE                   Temp_byte_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9383[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9384[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByID_self_CastInput;      // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_QuestSlot2_C_SetSlotInfo) == 0x000008, "Wrong alignment on WB_QuestSlot2_C_SetSlotInfo");
static_assert(sizeof(WB_QuestSlot2_C_SetSlotInfo) == 0x000060, "Wrong size on WB_QuestSlot2_C_SetSlotInfo");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, InMsgID) == 0x000000, "Member 'WB_QuestSlot2_C_SetSlotInfo::InMsgID' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, InQuestType) == 0x000004, "Member 'WB_QuestSlot2_C_SetSlotInfo::InQuestType' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, InQuestProgress) == 0x000005, "Member 'WB_QuestSlot2_C_SetSlotInfo::InQuestProgress' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, IsNewIcon) == 0x000006, "Member 'WB_QuestSlot2_C_SetSlotInfo::IsNewIcon' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, IsUpdateIcon) == 0x000007, "Member 'WB_QuestSlot2_C_SetSlotInfo::IsUpdateIcon' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, Temp_name_Variable) == 0x000008, "Member 'WB_QuestSlot2_C_SetSlotInfo::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, Temp_name_Variable_1) == 0x000010, "Member 'WB_QuestSlot2_C_SetSlotInfo::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, Temp_byte_Variable) == 0x000018, "Member 'WB_QuestSlot2_C_SetSlotInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, Temp_int_Variable) == 0x00001C, "Member 'WB_QuestSlot2_C_SetSlotInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, Temp_int_Variable_1) == 0x000020, "Member 'WB_QuestSlot2_C_SetSlotInfo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, Temp_int_Variable_2) == 0x000024, "Member 'WB_QuestSlot2_C_SetSlotInfo::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, Temp_int_Variable_3) == 0x000028, "Member 'WB_QuestSlot2_C_SetSlotInfo::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, Temp_int_Variable_4) == 0x00002C, "Member 'WB_QuestSlot2_C_SetSlotInfo::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, Temp_int_Variable_5) == 0x000030, "Member 'WB_QuestSlot2_C_SetSlotInfo::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, K2Node_Select_Default) == 0x000034, "Member 'WB_QuestSlot2_C_SetSlotInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, Temp_name_Variable_2) == 0x000038, "Member 'WB_QuestSlot2_C_SetSlotInfo::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, Temp_byte_Variable_1) == 0x000040, "Member 'WB_QuestSlot2_C_SetSlotInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, K2Node_Select_Default_1) == 0x000044, "Member 'WB_QuestSlot2_C_SetSlotInfo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, CallFunc_Play_ReturnValue) == 0x00004C, "Member 'WB_QuestSlot2_C_SetSlotInfo::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_SetSlotInfo, CallFunc_SetScriptMessageByID_self_CastInput) == 0x000050, "Member 'WB_QuestSlot2_C_SetSlotInfo::CallFunc_SetScriptMessageByID_self_CastInput' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.PlayAnim_Out
// 0x0020 (0x0020 - 0x0000)
struct WB_QuestSlot2_C_PlayAnim_Out final
{
public:
	class FName                                   Temp_name_Variable;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9385[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_QuestSlot2_C_PlayAnim_Out) == 0x000004, "Wrong alignment on WB_QuestSlot2_C_PlayAnim_Out");
static_assert(sizeof(WB_QuestSlot2_C_PlayAnim_Out) == 0x000020, "Wrong size on WB_QuestSlot2_C_PlayAnim_Out");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_Out, Temp_name_Variable) == 0x000000, "Member 'WB_QuestSlot2_C_PlayAnim_Out::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_Out, Temp_name_Variable_1) == 0x000008, "Member 'WB_QuestSlot2_C_PlayAnim_Out::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_Out, Temp_bool_Variable) == 0x000010, "Member 'WB_QuestSlot2_C_PlayAnim_Out::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_Out, K2Node_Select_Default) == 0x000014, "Member 'WB_QuestSlot2_C_PlayAnim_Out::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_Out, CallFunc_Play_ReturnValue) == 0x00001C, "Member 'WB_QuestSlot2_C_PlayAnim_Out::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_Out, CallFunc_Play_ReturnValue_1) == 0x00001D, "Member 'WB_QuestSlot2_C_PlayAnim_Out::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_Out, K2Node_SwitchEnum_CmpSuccess) == 0x00001E, "Member 'WB_QuestSlot2_C_PlayAnim_Out::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.PlayAnim_Loop
// 0x0020 (0x0020 - 0x0000)
struct WB_QuestSlot2_C_PlayAnim_Loop final
{
public:
	class FName                                   Temp_name_Variable;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9386[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_QuestSlot2_C_PlayAnim_Loop) == 0x000004, "Wrong alignment on WB_QuestSlot2_C_PlayAnim_Loop");
static_assert(sizeof(WB_QuestSlot2_C_PlayAnim_Loop) == 0x000020, "Wrong size on WB_QuestSlot2_C_PlayAnim_Loop");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_Loop, Temp_name_Variable) == 0x000000, "Member 'WB_QuestSlot2_C_PlayAnim_Loop::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_Loop, Temp_name_Variable_1) == 0x000008, "Member 'WB_QuestSlot2_C_PlayAnim_Loop::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_Loop, Temp_bool_Variable) == 0x000010, "Member 'WB_QuestSlot2_C_PlayAnim_Loop::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_Loop, K2Node_Select_Default) == 0x000014, "Member 'WB_QuestSlot2_C_PlayAnim_Loop::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_Loop, CallFunc_Play_ReturnValue) == 0x00001C, "Member 'WB_QuestSlot2_C_PlayAnim_Loop::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_Loop, CallFunc_Play_ReturnValue_1) == 0x00001D, "Member 'WB_QuestSlot2_C_PlayAnim_Loop::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_Loop, K2Node_SwitchEnum_CmpSuccess) == 0x00001E, "Member 'WB_QuestSlot2_C_PlayAnim_Loop::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.PlayAnim_In
// 0x0020 (0x0020 - 0x0000)
struct WB_QuestSlot2_C_PlayAnim_In final
{
public:
	class FName                                   Temp_name_Variable;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9387[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_QuestSlot2_C_PlayAnim_In) == 0x000004, "Wrong alignment on WB_QuestSlot2_C_PlayAnim_In");
static_assert(sizeof(WB_QuestSlot2_C_PlayAnim_In) == 0x000020, "Wrong size on WB_QuestSlot2_C_PlayAnim_In");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_In, Temp_name_Variable) == 0x000000, "Member 'WB_QuestSlot2_C_PlayAnim_In::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_In, Temp_name_Variable_1) == 0x000008, "Member 'WB_QuestSlot2_C_PlayAnim_In::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_In, Temp_bool_Variable) == 0x000010, "Member 'WB_QuestSlot2_C_PlayAnim_In::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_In, K2Node_Select_Default) == 0x000014, "Member 'WB_QuestSlot2_C_PlayAnim_In::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_In, CallFunc_Play_ReturnValue) == 0x00001C, "Member 'WB_QuestSlot2_C_PlayAnim_In::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_In, CallFunc_Play_ReturnValue_1) == 0x00001D, "Member 'WB_QuestSlot2_C_PlayAnim_In::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_In, K2Node_SwitchEnum_CmpSuccess) == 0x00001E, "Member 'WB_QuestSlot2_C_PlayAnim_In::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.PlayAnim_Setup
// 0x0001 (0x0001 - 0x0000)
struct WB_QuestSlot2_C_PlayAnim_Setup final
{
public:
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_QuestSlot2_C_PlayAnim_Setup) == 0x000001, "Wrong alignment on WB_QuestSlot2_C_PlayAnim_Setup");
static_assert(sizeof(WB_QuestSlot2_C_PlayAnim_Setup) == 0x000001, "Wrong size on WB_QuestSlot2_C_PlayAnim_Setup");
static_assert(offsetof(WB_QuestSlot2_C_PlayAnim_Setup, CallFunc_Play_ReturnValue) == 0x000000, "Member 'WB_QuestSlot2_C_PlayAnim_Setup::CallFunc_Play_ReturnValue' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_QuestSlot2_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_QuestSlot2_C_PreConstruct) == 0x000001, "Wrong alignment on WB_QuestSlot2_C_PreConstruct");
static_assert(sizeof(WB_QuestSlot2_C_PreConstruct) == 0x000001, "Wrong size on WB_QuestSlot2_C_PreConstruct");
static_assert(offsetof(WB_QuestSlot2_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_QuestSlot2_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.BndEvt__WB_QuestSlot2_SsPlayer_SlotBase_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_QuestSlot2_C_BndEvt__WB_QuestSlot2_SsPlayer_SlotBase_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_QuestSlot2_C_BndEvt__WB_QuestSlot2_SsPlayer_SlotBase_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_QuestSlot2_C_BndEvt__WB_QuestSlot2_SsPlayer_SlotBase_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_QuestSlot2_C_BndEvt__WB_QuestSlot2_SsPlayer_SlotBase_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_QuestSlot2_C_BndEvt__WB_QuestSlot2_SsPlayer_SlotBase_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_QuestSlot2_C_BndEvt__WB_QuestSlot2_SsPlayer_SlotBase_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_QuestSlot2_C_BndEvt__WB_QuestSlot2_SsPlayer_SlotBase_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_BndEvt__WB_QuestSlot2_SsPlayer_SlotBase_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_QuestSlot2_C_BndEvt__WB_QuestSlot2_SsPlayer_SlotBase_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_BndEvt__WB_QuestSlot2_SsPlayer_SlotBase_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_QuestSlot2_C_BndEvt__WB_QuestSlot2_SsPlayer_SlotBase_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_BndEvt__WB_QuestSlot2_SsPlayer_SlotBase_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_QuestSlot2_C_BndEvt__WB_QuestSlot2_SsPlayer_SlotBase_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.ExecuteUbergraph_WB_QuestSlot2
// 0x0024 (0x0024 - 0x0000)
struct WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9388[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2) == 0x000004, "Wrong alignment on WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2");
static_assert(sizeof(WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2) == 0x000024, "Wrong size on WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2");
static_assert(offsetof(WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2, EntryPoint) == 0x000000, "Member 'WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2, CallFunc_Play_ReturnValue) == 0x000004, "Member 'WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2, CallFunc_Play_ReturnValue_1) == 0x000005, "Member 'WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2, K2Node_Event_IsDesignTime) == 0x000006, "Member 'WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2, K2Node_ComponentBoundEvent_AnimPackName) == 0x000008, "Member 'WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2::K2Node_ComponentBoundEvent_AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2, K2Node_ComponentBoundEvent_AnimationName) == 0x000010, "Member 'WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2::K2Node_ComponentBoundEvent_AnimationName' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2, K2Node_ComponentBoundEvent_AnimPackIndex) == 0x000018, "Member 'WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2::K2Node_ComponentBoundEvent_AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2, K2Node_ComponentBoundEvent_AnimationIndex) == 0x00001C, "Member 'WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2::K2Node_ComponentBoundEvent_AnimationIndex' has a wrong offset!");
static_assert(offsetof(WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2, K2Node_SwitchName_CmpSuccess) == 0x000020, "Member 'WB_QuestSlot2_C_ExecuteUbergraph_WB_QuestSlot2::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function WB_QuestSlot2.WB_QuestSlot2_C.OnHoveredMouse__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_QuestSlot2_C_OnHoveredMouse__DelegateSignature final
{
public:
	int32                                         SlotIdx;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_QuestSlot2_C_OnHoveredMouse__DelegateSignature) == 0x000004, "Wrong alignment on WB_QuestSlot2_C_OnHoveredMouse__DelegateSignature");
static_assert(sizeof(WB_QuestSlot2_C_OnHoveredMouse__DelegateSignature) == 0x000004, "Wrong size on WB_QuestSlot2_C_OnHoveredMouse__DelegateSignature");
static_assert(offsetof(WB_QuestSlot2_C_OnHoveredMouse__DelegateSignature, SlotIdx) == 0x000000, "Member 'WB_QuestSlot2_C_OnHoveredMouse__DelegateSignature::SlotIdx' has a wrong offset!");

}

