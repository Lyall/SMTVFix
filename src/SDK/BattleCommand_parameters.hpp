#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleCommand

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "BTL_CURSOR_MEMORY_T_structs.hpp"
#include "UMG_structs.hpp"
#include "E_TutorialWindow_WidgetState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BtlUISkill_UseData_st_structs.hpp"
#include "BtlUIItemData_structs.hpp"
#include "ST_BtnHelp_ColorInfo_byIdx_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BattleCommand.BattleCommand_C.ExecuteUbergraph_BattleCommand
// 0x01C0 (0x01C0 - 0x0000)
struct BattleCommand_C_ExecuteUbergraph_BattleCommand final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7957[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7958[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsWB_Btl_Command_Menu;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7959[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlCommandMenu_C*                   CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_2;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(E_BTL_UI_COMMAND Command)>     K2Node_CreateDelegate_OutputDelegate_1;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 ShiftIndex)>             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	E_BTL_UI_COMM_STEP                            K2Node_CustomEvent_m_MainStep;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_795A[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_StartCursorIndex;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TopIndex;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_795B[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_795C[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_795D[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_1;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_795E[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetBPIMainInterface_AsBPI_Main_Interface; // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBPIMainInterface_bSuccess;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_795F[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_TUTORIAL_WINDOW_MESSAGE_TYPE>        K2Node_CustomEvent_MessageType;                    // 0x00C0(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_CleanUp;                        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7960[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7961[0x6];                                     // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_1;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7962[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded;                         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TutorialWindow_WidgetState                  CallFunc_BPL_TutorialWIndow2_GetAnimState_AnimState; // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7963[0x1];                                     // 0x0107(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_OptionCtrl_C>     K2Node_DynamicCast_AsBPI_Option_Ctrl;              // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7964[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPL_TutorialWIndow2_IsClickedByMouse_IsClicked; // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCancel_ReturnValue;                  // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7965[0x1];                                     // 0x0123(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0124(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7966[0xC];                                     // 0x0134(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0140(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7967[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0184(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7968[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_2;                             // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TUTORIAL_WINDOW_MESSAGE_TYPE                CallFunc_Array_Get_Item;                           // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7969[0x6];                                     // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetBPIMainInterface_AsBPI_Main_Interface_1; // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBPIMainInterface_bSuccess_1;           // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_ExecuteUbergraph_BattleCommand) == 0x000010, "Wrong alignment on BattleCommand_C_ExecuteUbergraph_BattleCommand");
static_assert(sizeof(BattleCommand_C_ExecuteUbergraph_BattleCommand) == 0x0001C0, "Wrong size on BattleCommand_C_ExecuteUbergraph_BattleCommand");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, EntryPoint) == 0x000000, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, Temp_class_Variable) == 0x000008, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, Temp_int_Variable) == 0x000010, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_ClassDynamicCast_AsWB_Btl_Command_Menu) == 0x000018, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_ClassDynamicCast_AsWB_Btl_Command_Menu' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_ClassDynamicCast_bSuccess) == 0x000020, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_Create_ReturnValue) == 0x000028, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_CustomEvent_Loaded_2) == 0x000030, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_CreateDelegate_OutputDelegate_1) == 0x000048, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_CreateDelegate_OutputDelegate_2) == 0x000058, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_CreateDelegate_OutputDelegate_3) == 0x000068, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_CustomEvent_m_MainStep) == 0x000078, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_CustomEvent_m_MainStep' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_CustomEvent_StartCursorIndex) == 0x00007C, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_CustomEvent_StartCursorIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_CustomEvent_TopIndex) == 0x000080, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_CustomEvent_TopIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_Event_EndPlayReason) == 0x000084, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_Event_DeltaSeconds) == 0x000088, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_SwitchInteger_CmpSuccess) == 0x00008C, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_CustomEvent_Loaded_1) == 0x000098, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_GetBPIMainInterface_AsBPI_Main_Interface) == 0x0000A8, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_GetBPIMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_GetBPIMainInterface_bSuccess) == 0x0000B8, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_GetBPIMainInterface_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_CustomEvent_MessageType) == 0x0000C0, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_CustomEvent_MessageType' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_CustomEvent_CleanUp) == 0x0000D0, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_CustomEvent_CleanUp' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D4, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000D8, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0000D9, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, Temp_class_Variable_1) == 0x0000E0, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_ClassDynamicCast_AsActor) == 0x0000E8, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_ClassDynamicCast_bSuccess_1) == 0x0000F0, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_CustomEvent_Loaded) == 0x0000F8, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, Temp_int_Variable_1) == 0x000100, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_IsValid_ReturnValue) == 0x000104, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_BPL_TutorialWIndow2_GetAnimState_AnimState) == 0x000105, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_BPL_TutorialWIndow2_GetAnimState_AnimState' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_SwitchEnum_CmpSuccess) == 0x000106, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_DynamicCast_AsBPI_Option_Ctrl) == 0x000108, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_DynamicCast_AsBPI_Option_Ctrl' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, Temp_int_Variable_2) == 0x00011C, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_BPL_TutorialWIndow2_IsClickedByMouse_IsClicked) == 0x000120, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_BPL_TutorialWIndow2_IsClickedByMouse_IsClicked' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_CheckCancel_ReturnValue) == 0x000121, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_CheckCancel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_BooleanOR_ReturnValue) == 0x000122, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_CreateDelegate_OutputDelegate_4) == 0x000124, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_MakeTransform_ReturnValue) == 0x000140, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000170, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_FinishSpawningActor_ReturnValue) == 0x000178, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_IsValid_ReturnValue_1) == 0x000180, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, K2Node_CreateDelegate_OutputDelegate_5) == 0x000184, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, Temp_class_Variable_2) == 0x000198, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001A1, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_GetBPIMainInterface_AsBPI_Main_Interface_1) == 0x0001A8, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_GetBPIMainInterface_AsBPI_Main_Interface_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ExecuteUbergraph_BattleCommand, CallFunc_GetBPIMainInterface_bSuccess_1) == 0x0001B8, "Member 'BattleCommand_C_ExecuteUbergraph_BattleCommand::CallFunc_GetBPIMainInterface_bSuccess_1' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.OpenTutorialWindow
// 0x0018 (0x0018 - 0x0000)
struct BattleCommand_C_OpenTutorialWindow final
{
public:
	TArray<E_TUTORIAL_WINDOW_MESSAGE_TYPE>        MessageType;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CleanUp;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_OpenTutorialWindow) == 0x000008, "Wrong alignment on BattleCommand_C_OpenTutorialWindow");
static_assert(sizeof(BattleCommand_C_OpenTutorialWindow) == 0x000018, "Wrong size on BattleCommand_C_OpenTutorialWindow");
static_assert(offsetof(BattleCommand_C_OpenTutorialWindow, MessageType) == 0x000000, "Member 'BattleCommand_C_OpenTutorialWindow::MessageType' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenTutorialWindow, CleanUp) == 0x000010, "Member 'BattleCommand_C_OpenTutorialWindow::CleanUp' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BattleCommand_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_ReceiveTick) == 0x000004, "Wrong alignment on BattleCommand_C_ReceiveTick");
static_assert(sizeof(BattleCommand_C_ReceiveTick) == 0x000004, "Wrong size on BattleCommand_C_ReceiveTick");
static_assert(offsetof(BattleCommand_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BattleCommand_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BattleCommand_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BattleCommand_C_ReceiveEndPlay");
static_assert(sizeof(BattleCommand_C_ReceiveEndPlay) == 0x000001, "Wrong size on BattleCommand_C_ReceiveEndPlay");
static_assert(offsetof(BattleCommand_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BattleCommand_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CallStep
// 0x000C (0x000C - 0x0000)
struct BattleCommand_C_CallStep final
{
public:
	E_BTL_UI_COMM_STEP                            M_MainStep;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_796A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StartCursorIndex;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TopIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_CallStep) == 0x000004, "Wrong alignment on BattleCommand_C_CallStep");
static_assert(sizeof(BattleCommand_C_CallStep) == 0x00000C, "Wrong size on BattleCommand_C_CallStep");
static_assert(offsetof(BattleCommand_C_CallStep, M_MainStep) == 0x000000, "Member 'BattleCommand_C_CallStep::M_MainStep' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallStep, StartCursorIndex) == 0x000004, "Member 'BattleCommand_C_CallStep::StartCursorIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallStep, TopIndex) == 0x000008, "Member 'BattleCommand_C_CallStep::TopIndex' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.OnLoaded_DDD9B75145880DA34D813688855E615B
// 0x0008 (0x0008 - 0x0000)
struct BattleCommand_C_OnLoaded_DDD9B75145880DA34D813688855E615B final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_OnLoaded_DDD9B75145880DA34D813688855E615B) == 0x000008, "Wrong alignment on BattleCommand_C_OnLoaded_DDD9B75145880DA34D813688855E615B");
static_assert(sizeof(BattleCommand_C_OnLoaded_DDD9B75145880DA34D813688855E615B) == 0x000008, "Wrong size on BattleCommand_C_OnLoaded_DDD9B75145880DA34D813688855E615B");
static_assert(offsetof(BattleCommand_C_OnLoaded_DDD9B75145880DA34D813688855E615B, Loaded) == 0x000000, "Member 'BattleCommand_C_OnLoaded_DDD9B75145880DA34D813688855E615B::Loaded' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.OnLoaded_7D39E72949435427115CBCBD25F297DF
// 0x0008 (0x0008 - 0x0000)
struct BattleCommand_C_OnLoaded_7D39E72949435427115CBCBD25F297DF final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_OnLoaded_7D39E72949435427115CBCBD25F297DF) == 0x000008, "Wrong alignment on BattleCommand_C_OnLoaded_7D39E72949435427115CBCBD25F297DF");
static_assert(sizeof(BattleCommand_C_OnLoaded_7D39E72949435427115CBCBD25F297DF) == 0x000008, "Wrong size on BattleCommand_C_OnLoaded_7D39E72949435427115CBCBD25F297DF");
static_assert(offsetof(BattleCommand_C_OnLoaded_7D39E72949435427115CBCBD25F297DF, Loaded) == 0x000000, "Member 'BattleCommand_C_OnLoaded_7D39E72949435427115CBCBD25F297DF::Loaded' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.OnLoaded_FC22B888429A4250960F64AD7E05ED41
// 0x0008 (0x0008 - 0x0000)
struct BattleCommand_C_OnLoaded_FC22B888429A4250960F64AD7E05ED41 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_OnLoaded_FC22B888429A4250960F64AD7E05ED41) == 0x000008, "Wrong alignment on BattleCommand_C_OnLoaded_FC22B888429A4250960F64AD7E05ED41");
static_assert(sizeof(BattleCommand_C_OnLoaded_FC22B888429A4250960F64AD7E05ED41) == 0x000008, "Wrong size on BattleCommand_C_OnLoaded_FC22B888429A4250960F64AD7E05ED41");
static_assert(offsetof(BattleCommand_C_OnLoaded_FC22B888429A4250960F64AD7E05ED41, Loaded) == 0x000000, "Member 'BattleCommand_C_OnLoaded_FC22B888429A4250960F64AD7E05ED41::Loaded' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.StartSeq
// 0x03C0 (0x03C0 - 0x0000)
struct BattleCommand_C_StartSeq final
{
public:
	struct FBtlParty                              InParty;                                           // 0x0000(0x0320)(BlueprintVisible, BlueprintReadOnly, Parm)
	TScriptInterface<class IBPI_BattleMain_C>     InMainWork;                                        // 0x0320(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCounterActor;                                    // 0x0330(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsNoMoveCamera;                                    // 0x0331(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewParam;                                          // 0x0332(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_796B[0x5];                                     // 0x0333(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillCriticalValueOne>         SettleCriticalInfo;                                // 0x0338(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_InitDisappeared_self_CastInput;           // 0x0348(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_796C[0x7];                                     // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTUtilInterface>  CallFunc_BI_GetPartyUtilInterface_retValue;        // 0x0360(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetBattleCursorPositionType_ReturnValue;  // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_796D[0x7];                                     // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_BI_GetSideIsInFieldList_ReturnValue;      // 0x0378(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_796E[0x3];                                     // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetBPIMainInterface_AsBPI_Main_Interface; // 0x0390(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBPIMainInterface_bSuccess;             // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_796F[0x3];                                     // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_CURSOR_MEMORY_T                   CallFunc_Map_Find_Value;                           // 0x03A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBattleDebugFlag2_ReturnValue;     // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7970[0x2];                                     // 0x03B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcItemCursorIndex_ItemCursorIndex;      // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x03BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_StartSeq) == 0x000010, "Wrong alignment on BattleCommand_C_StartSeq");
static_assert(sizeof(BattleCommand_C_StartSeq) == 0x0003C0, "Wrong size on BattleCommand_C_StartSeq");
static_assert(offsetof(BattleCommand_C_StartSeq, InParty) == 0x000000, "Member 'BattleCommand_C_StartSeq::InParty' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, InMainWork) == 0x000320, "Member 'BattleCommand_C_StartSeq::InMainWork' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, IsCounterActor) == 0x000330, "Member 'BattleCommand_C_StartSeq::IsCounterActor' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, IsNoMoveCamera) == 0x000331, "Member 'BattleCommand_C_StartSeq::IsNoMoveCamera' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, NewParam) == 0x000332, "Member 'BattleCommand_C_StartSeq::NewParam' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, SettleCriticalInfo) == 0x000338, "Member 'BattleCommand_C_StartSeq::SettleCriticalInfo' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, CallFunc_InitDisappeared_self_CastInput) == 0x000348, "Member 'BattleCommand_C_StartSeq::CallFunc_InitDisappeared_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000358, "Member 'BattleCommand_C_StartSeq::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, CallFunc_BI_GetPartyUtilInterface_retValue) == 0x000360, "Member 'BattleCommand_C_StartSeq::CallFunc_BI_GetPartyUtilInterface_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, CallFunc_GetBattleCursorPositionType_ReturnValue) == 0x000370, "Member 'BattleCommand_C_StartSeq::CallFunc_GetBattleCursorPositionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, CallFunc_BI_GetSideIsInFieldList_ReturnValue) == 0x000378, "Member 'BattleCommand_C_StartSeq::CallFunc_BI_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000388, "Member 'BattleCommand_C_StartSeq::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, CallFunc_Array_Length_ReturnValue) == 0x00038C, "Member 'BattleCommand_C_StartSeq::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, CallFunc_GetBPIMainInterface_AsBPI_Main_Interface) == 0x000390, "Member 'BattleCommand_C_StartSeq::CallFunc_GetBPIMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, CallFunc_GetBPIMainInterface_bSuccess) == 0x0003A0, "Member 'BattleCommand_C_StartSeq::CallFunc_GetBPIMainInterface_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, CallFunc_Map_Find_Value) == 0x0003A4, "Member 'BattleCommand_C_StartSeq::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, CallFunc_Map_Find_ReturnValue) == 0x0003B0, "Member 'BattleCommand_C_StartSeq::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, CallFunc_BI_CheckBattleDebugFlag2_ReturnValue) == 0x0003B1, "Member 'BattleCommand_C_StartSeq::CallFunc_BI_CheckBattleDebugFlag2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, CallFunc_CalcItemCursorIndex_ItemCursorIndex) == 0x0003B4, "Member 'BattleCommand_C_StartSeq::CallFunc_CalcItemCursorIndex_ItemCursorIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, CallFunc_SelectInt_ReturnValue) == 0x0003B8, "Member 'BattleCommand_C_StartSeq::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, CallFunc_AddToWidgetPrio_ReturnValue) == 0x0003BC, "Member 'BattleCommand_C_StartSeq::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSeq, CallFunc_IsInViewport_ReturnValue) == 0x0003BD, "Member 'BattleCommand_C_StartSeq::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.ChangeStep
// 0x0030 (0x0030 - 0x0000)
struct BattleCommand_C_ChangeStep final
{
public:
	E_BTL_UI_COMM_STEP                            Step;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7971[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CursorIndex;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TopIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Top;                                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_UI_COMM_STEP                            CallFunc_TopStep_TopStep;                          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMM_STEP                            CallFunc_TopStep_TopStep_1;                        // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7972[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetBPIMainInterface_AsBPI_Main_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBPIMainInterface_bSuccess;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBattleDebugFlag2_ReturnValue;     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_ChangeStep) == 0x000008, "Wrong alignment on BattleCommand_C_ChangeStep");
static_assert(sizeof(BattleCommand_C_ChangeStep) == 0x000030, "Wrong size on BattleCommand_C_ChangeStep");
static_assert(offsetof(BattleCommand_C_ChangeStep, Step) == 0x000000, "Member 'BattleCommand_C_ChangeStep::Step' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeStep, CursorIndex) == 0x000004, "Member 'BattleCommand_C_ChangeStep::CursorIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeStep, TopIndex) == 0x000008, "Member 'BattleCommand_C_ChangeStep::TopIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeStep, Top) == 0x00000C, "Member 'BattleCommand_C_ChangeStep::Top' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeStep, Param_Index) == 0x000010, "Member 'BattleCommand_C_ChangeStep::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeStep, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000014, "Member 'BattleCommand_C_ChangeStep::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeStep, CallFunc_TopStep_TopStep) == 0x000015, "Member 'BattleCommand_C_ChangeStep::CallFunc_TopStep_TopStep' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeStep, CallFunc_TopStep_TopStep_1) == 0x000016, "Member 'BattleCommand_C_ChangeStep::CallFunc_TopStep_TopStep_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeStep, CallFunc_GetBPIMainInterface_AsBPI_Main_Interface) == 0x000018, "Member 'BattleCommand_C_ChangeStep::CallFunc_GetBPIMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeStep, CallFunc_GetBPIMainInterface_bSuccess) == 0x000028, "Member 'BattleCommand_C_ChangeStep::CallFunc_GetBPIMainInterface_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeStep, CallFunc_BI_CheckBattleDebugFlag2_ReturnValue) == 0x000029, "Member 'BattleCommand_C_ChangeStep::CallFunc_BI_CheckBattleDebugFlag2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeStep, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BattleCommand_C_ChangeStep::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CallEndStep
// 0x0002 (0x0002 - 0x0000)
struct BattleCommand_C_CallEndStep final
{
public:
	E_BTL_UI_COMM_STEP                            Param_PrevStep;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CallEndStep) == 0x000001, "Wrong alignment on BattleCommand_C_CallEndStep");
static_assert(sizeof(BattleCommand_C_CallEndStep) == 0x000002, "Wrong size on BattleCommand_C_CallEndStep");
static_assert(offsetof(BattleCommand_C_CallEndStep, Param_PrevStep) == 0x000000, "Member 'BattleCommand_C_CallEndStep::Param_PrevStep' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallEndStep, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BattleCommand_C_CallEndStep::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.ChangeMenuVisibility
// 0x0028 (0x0028 - 0x0000)
struct BattleCommand_C_ChangeMenuVisibility final
{
public:
	bool                                          IsView;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7973[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Disappear_self_CastInput;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Appear_self_CastInput;                    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_ChangeMenuVisibility) == 0x000008, "Wrong alignment on BattleCommand_C_ChangeMenuVisibility");
static_assert(sizeof(BattleCommand_C_ChangeMenuVisibility) == 0x000028, "Wrong size on BattleCommand_C_ChangeMenuVisibility");
static_assert(offsetof(BattleCommand_C_ChangeMenuVisibility, IsView) == 0x000000, "Member 'BattleCommand_C_ChangeMenuVisibility::IsView' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeMenuVisibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BattleCommand_C_ChangeMenuVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeMenuVisibility, CallFunc_Disappear_self_CastInput) == 0x000008, "Member 'BattleCommand_C_ChangeMenuVisibility::CallFunc_Disappear_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeMenuVisibility, CallFunc_Appear_self_CastInput) == 0x000018, "Member 'BattleCommand_C_ChangeMenuVisibility::CallFunc_Appear_self_CastInput' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.EndSkillMenu
// 0x0003 (0x0003 - 0x0000)
struct BattleCommand_C_EndSkillMenu final
{
public:
	bool                                          CloseList;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCharaChange;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCancel;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_EndSkillMenu) == 0x000001, "Wrong alignment on BattleCommand_C_EndSkillMenu");
static_assert(sizeof(BattleCommand_C_EndSkillMenu) == 0x000003, "Wrong size on BattleCommand_C_EndSkillMenu");
static_assert(offsetof(BattleCommand_C_EndSkillMenu, CloseList) == 0x000000, "Member 'BattleCommand_C_EndSkillMenu::CloseList' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_EndSkillMenu, IsCharaChange) == 0x000001, "Member 'BattleCommand_C_EndSkillMenu::IsCharaChange' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_EndSkillMenu, IsCancel) == 0x000002, "Member 'BattleCommand_C_EndSkillMenu::IsCancel' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SetVisibilitySkillList
// 0x0028 (0x0028 - 0x0000)
struct BattleCommand_C_SetVisibilitySkillList final
{
public:
	ESlateVisibility                              IsVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCancel;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7974[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Appear_self_CastInput;                    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Disappear_self_CastInput;                 // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_SetVisibilitySkillList) == 0x000008, "Wrong alignment on BattleCommand_C_SetVisibilitySkillList");
static_assert(sizeof(BattleCommand_C_SetVisibilitySkillList) == 0x000028, "Wrong size on BattleCommand_C_SetVisibilitySkillList");
static_assert(offsetof(BattleCommand_C_SetVisibilitySkillList, IsVisibility) == 0x000000, "Member 'BattleCommand_C_SetVisibilitySkillList::IsVisibility' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetVisibilitySkillList, IsCancel) == 0x000001, "Member 'BattleCommand_C_SetVisibilitySkillList::IsCancel' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetVisibilitySkillList, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'BattleCommand_C_SetVisibilitySkillList::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetVisibilitySkillList, CallFunc_Appear_self_CastInput) == 0x000008, "Member 'BattleCommand_C_SetVisibilitySkillList::CallFunc_Appear_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetVisibilitySkillList, CallFunc_Disappear_self_CastInput) == 0x000018, "Member 'BattleCommand_C_SetVisibilitySkillList::CallFunc_Disappear_self_CastInput' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SetVisibilityItemList
// 0x0028 (0x0028 - 0x0000)
struct BattleCommand_C_SetVisibilityItemList final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7975[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Disappear_self_CastInput;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Appear_self_CastInput;                    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_SetVisibilityItemList) == 0x000008, "Wrong alignment on BattleCommand_C_SetVisibilityItemList");
static_assert(sizeof(BattleCommand_C_SetVisibilityItemList) == 0x000028, "Wrong size on BattleCommand_C_SetVisibilityItemList");
static_assert(offsetof(BattleCommand_C_SetVisibilityItemList, InVisibility) == 0x000000, "Member 'BattleCommand_C_SetVisibilityItemList::InVisibility' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetVisibilityItemList, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BattleCommand_C_SetVisibilityItemList::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetVisibilityItemList, CallFunc_Disappear_self_CastInput) == 0x000008, "Member 'BattleCommand_C_SetVisibilityItemList::CallFunc_Disappear_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetVisibilityItemList, CallFunc_Appear_self_CastInput) == 0x000018, "Member 'BattleCommand_C_SetVisibilityItemList::CallFunc_Appear_self_CastInput' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.EndCondition
// 0x0001 (0x0001 - 0x0000)
struct BattleCommand_C_EndCondition final
{
public:
	bool                                          CallFunc_BI_BattleUISwitch_NoUse;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_EndCondition) == 0x000001, "Wrong alignment on BattleCommand_C_EndCondition");
static_assert(sizeof(BattleCommand_C_EndCondition) == 0x000001, "Wrong size on BattleCommand_C_EndCondition");
static_assert(offsetof(BattleCommand_C_EndCondition, CallFunc_BI_BattleUISwitch_NoUse) == 0x000000, "Member 'BattleCommand_C_EndCondition::CallFunc_BI_BattleUISwitch_NoUse' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CallEvent
// 0x0048 (0x0048 - 0x0000)
struct BattleCommand_C_CallEvent final
{
public:
	E_BTL_UI_COMM_STEP                            CallFunc_TopStep_TopStep;                          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7976[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 MoveDirection)>          K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7977[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsWB_Btl_List_Menu;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7978[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtlListMenu_C*                      CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CallEvent) == 0x000008, "Wrong alignment on BattleCommand_C_CallEvent");
static_assert(sizeof(BattleCommand_C_CallEvent) == 0x000048, "Wrong size on BattleCommand_C_CallEvent");
static_assert(offsetof(BattleCommand_C_CallEvent, CallFunc_TopStep_TopStep) == 0x000000, "Member 'BattleCommand_C_CallEvent::CallFunc_TopStep_TopStep' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallEvent, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BattleCommand_C_CallEvent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BattleCommand_C_CallEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallEvent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BattleCommand_C_CallEvent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallEvent, K2Node_ClassDynamicCast_AsWB_Btl_List_Menu) == 0x000028, "Member 'BattleCommand_C_CallEvent::K2Node_ClassDynamicCast_AsWB_Btl_List_Menu' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallEvent, K2Node_ClassDynamicCast_bSuccess) == 0x000030, "Member 'BattleCommand_C_CallEvent::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallEvent, CallFunc_Create_ReturnValue) == 0x000038, "Member 'BattleCommand_C_CallEvent::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallEvent, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BattleCommand_C_CallEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallEvent, CallFunc_IsValidClass_ReturnValue) == 0x000041, "Member 'BattleCommand_C_CallEvent::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallEvent, CallFunc_IsValid_ReturnValue_1) == 0x000042, "Member 'BattleCommand_C_CallEvent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.StartCommandMenu
// 0x0060 (0x0060 - 0x0000)
struct BattleCommand_C_StartCommandMenu final
{
public:
	struct FBtlCommand                            K2Node_MakeStruct_BtlCommand;                      // 0x0000(0x0010)()
	struct FST_BtnHelp_ColorInfo_byIdx            K2Node_MakeStruct_ST_BtnHelp_ColorInfo_byIdx;      // 0x0010(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FST_BtnHelp_ColorInfo_byIdx>    K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_PartySystem;            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetActorIndex_m_PartyIndex;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsHero_retValue;                       // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsGuest_Valid;                         // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHeroSleeped_Sleeped;                    // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK;                          // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckFirstBattleTutorial_IsTutorial;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPassSelectable_ReturnValue;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPassSelectable_ReturnValue_1;           // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7979[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetBPIMainInterface_AsBPI_Main_Interface; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBPIMainInterface_bSuccess;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_EncountIsNotEscape_ReturnValue;        // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_StartCommandMenu) == 0x000008, "Wrong alignment on BattleCommand_C_StartCommandMenu");
static_assert(sizeof(BattleCommand_C_StartCommandMenu) == 0x000060, "Wrong size on BattleCommand_C_StartCommandMenu");
static_assert(offsetof(BattleCommand_C_StartCommandMenu, K2Node_MakeStruct_BtlCommand) == 0x000000, "Member 'BattleCommand_C_StartCommandMenu::K2Node_MakeStruct_BtlCommand' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCommandMenu, K2Node_MakeStruct_ST_BtnHelp_ColorInfo_byIdx) == 0x000010, "Member 'BattleCommand_C_StartCommandMenu::K2Node_MakeStruct_ST_BtnHelp_ColorInfo_byIdx' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCommandMenu, K2Node_MakeArray_Array) == 0x000018, "Member 'BattleCommand_C_StartCommandMenu::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCommandMenu, CallFunc_BI_GetPartySystem_PartySystem) == 0x000028, "Member 'BattleCommand_C_StartCommandMenu::CallFunc_BI_GetPartySystem_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCommandMenu, CallFunc_GetActorIndex_m_PartyIndex) == 0x000038, "Member 'BattleCommand_C_StartCommandMenu::CallFunc_GetActorIndex_m_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCommandMenu, CallFunc_BI_IsHero_retValue) == 0x00003C, "Member 'BattleCommand_C_StartCommandMenu::CallFunc_BI_IsHero_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCommandMenu, CallFunc_BI_IsGuest_Valid) == 0x00003D, "Member 'BattleCommand_C_StartCommandMenu::CallFunc_BI_IsGuest_Valid' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCommandMenu, CallFunc_IsHeroSleeped_Sleeped) == 0x00003E, "Member 'BattleCommand_C_StartCommandMenu::CallFunc_IsHeroSleeped_Sleeped' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCommandMenu, CallFunc_IsKeyInputOK_OK) == 0x00003F, "Member 'BattleCommand_C_StartCommandMenu::CallFunc_IsKeyInputOK_OK' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCommandMenu, CallFunc_CheckFirstBattleTutorial_IsTutorial) == 0x000040, "Member 'BattleCommand_C_StartCommandMenu::CallFunc_CheckFirstBattleTutorial_IsTutorial' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCommandMenu, CallFunc_IsPassSelectable_ReturnValue) == 0x000041, "Member 'BattleCommand_C_StartCommandMenu::CallFunc_IsPassSelectable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCommandMenu, CallFunc_IsPassSelectable_ReturnValue_1) == 0x000042, "Member 'BattleCommand_C_StartCommandMenu::CallFunc_IsPassSelectable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCommandMenu, CallFunc_GetBPIMainInterface_AsBPI_Main_Interface) == 0x000048, "Member 'BattleCommand_C_StartCommandMenu::CallFunc_GetBPIMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCommandMenu, CallFunc_GetBPIMainInterface_bSuccess) == 0x000058, "Member 'BattleCommand_C_StartCommandMenu::CallFunc_GetBPIMainInterface_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCommandMenu, CallFunc_BI_EncountIsNotEscape_ReturnValue) == 0x000059, "Member 'BattleCommand_C_StartCommandMenu::CallFunc_BI_EncountIsNotEscape_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCommandMenu, CallFunc_Not_PreBool_ReturnValue) == 0x00005A, "Member 'BattleCommand_C_StartCommandMenu::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.StartSkillMenu
// 0x0028 (0x0028 - 0x0000)
struct BattleCommand_C_StartSkillMenu final
{
public:
	int32                                         CursorIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TopIndex;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_BtnHelp_ColorInfo_byIdx            K2Node_MakeStruct_ST_BtnHelp_ColorInfo_byIdx;      // 0x0008(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FST_BtnHelp_ColorInfo_byIdx>    K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsKeyInputOK_OK;                          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPassSelectable_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_StartSkillMenu) == 0x000008, "Wrong alignment on BattleCommand_C_StartSkillMenu");
static_assert(sizeof(BattleCommand_C_StartSkillMenu) == 0x000028, "Wrong size on BattleCommand_C_StartSkillMenu");
static_assert(offsetof(BattleCommand_C_StartSkillMenu, CursorIndex) == 0x000000, "Member 'BattleCommand_C_StartSkillMenu::CursorIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu, TopIndex) == 0x000004, "Member 'BattleCommand_C_StartSkillMenu::TopIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu, K2Node_MakeStruct_ST_BtnHelp_ColorInfo_byIdx) == 0x000008, "Member 'BattleCommand_C_StartSkillMenu::K2Node_MakeStruct_ST_BtnHelp_ColorInfo_byIdx' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu, K2Node_MakeArray_Array) == 0x000010, "Member 'BattleCommand_C_StartSkillMenu::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu, CallFunc_IsKeyInputOK_OK) == 0x000020, "Member 'BattleCommand_C_StartSkillMenu::CallFunc_IsKeyInputOK_OK' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu, CallFunc_IsPassSelectable_ReturnValue) == 0x000021, "Member 'BattleCommand_C_StartSkillMenu::CallFunc_IsPassSelectable_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.StartItemMenu
// 0x0028 (0x0028 - 0x0000)
struct BattleCommand_C_StartItemMenu final
{
public:
	int32                                         CursorIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TopIndex;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_BtnHelp_ColorInfo_byIdx            K2Node_MakeStruct_ST_BtnHelp_ColorInfo_byIdx;      // 0x0008(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FST_BtnHelp_ColorInfo_byIdx>    K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsKeyInputOK_OK;                          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPassSelectable_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_StartItemMenu) == 0x000008, "Wrong alignment on BattleCommand_C_StartItemMenu");
static_assert(sizeof(BattleCommand_C_StartItemMenu) == 0x000028, "Wrong size on BattleCommand_C_StartItemMenu");
static_assert(offsetof(BattleCommand_C_StartItemMenu, CursorIndex) == 0x000000, "Member 'BattleCommand_C_StartItemMenu::CursorIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartItemMenu, TopIndex) == 0x000004, "Member 'BattleCommand_C_StartItemMenu::TopIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartItemMenu, K2Node_MakeStruct_ST_BtnHelp_ColorInfo_byIdx) == 0x000008, "Member 'BattleCommand_C_StartItemMenu::K2Node_MakeStruct_ST_BtnHelp_ColorInfo_byIdx' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartItemMenu, K2Node_MakeArray_Array) == 0x000010, "Member 'BattleCommand_C_StartItemMenu::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartItemMenu, CallFunc_IsKeyInputOK_OK) == 0x000020, "Member 'BattleCommand_C_StartItemMenu::CallFunc_IsKeyInputOK_OK' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartItemMenu, CallFunc_IsPassSelectable_ReturnValue) == 0x000021, "Member 'BattleCommand_C_StartItemMenu::CallFunc_IsPassSelectable_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.GetItemData
// 0x0150 (0x0150 - 0x0000)
struct BattleCommand_C_GetItemData final
{
public:
	TArray<struct FBtlUIItemData>                 ItemData;                                          // 0x0000(0x0010)(Parm, OutParm)
	bool                                          Lo_IsAllUse;                                       // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_797A[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtlParty>                      Lo_PartyData;                                      // 0x0018(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_Escapable;                                      // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_797B[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemId;                                            // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlUIItemData                         Data;                                              // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBtlUIItemData>                 Datas;                                             // 0x0040(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_IsRecameItemUse;                                // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_797C[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_OPTION_CONTENT_ITEM_PRIORITIZE_TYPE         CallFunc_GetBattleItemSortType_ReturnValue;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_797D[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_ItemGetHaveItems_Battle_ReturnValue;      // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_797E[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ItemGetMaxNum_ReturnValue;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ItemGetNum_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUseItemData                           CallFunc_GetUseItemData_ReturnValue;               // 0x0088(0x005C)(ConstParm, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UseItemDataIsRecome_ReturnValue;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_797F[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetBPIMainInterface_AsBPI_Main_Interface; // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBPIMainInterface_bSuccess;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBattleDebugFlag2_ReturnValue;     // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7980[0x6];                                     // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtlParty>                      K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetBPIMainInterface_AsBPI_Main_Interface_1; // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBPIMainInterface_bSuccess_1;           // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUseItemCommandMainWork_ReturnValue;     // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_EncountIsNotEscape_ReturnValue;        // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7981[0x1];                                     // 0x012B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlUIItemData                         K2Node_MakeStruct_BtlUIItemData;                   // 0x012C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattlePartyIsItemUseableItemList_ReturnValue; // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7982[0x2];                                     // 0x013E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7983[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_GetItemData) == 0x000008, "Wrong alignment on BattleCommand_C_GetItemData");
static_assert(sizeof(BattleCommand_C_GetItemData) == 0x000150, "Wrong size on BattleCommand_C_GetItemData");
static_assert(offsetof(BattleCommand_C_GetItemData, ItemData) == 0x000000, "Member 'BattleCommand_C_GetItemData::ItemData' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, Lo_IsAllUse) == 0x000010, "Member 'BattleCommand_C_GetItemData::Lo_IsAllUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, Lo_PartyData) == 0x000018, "Member 'BattleCommand_C_GetItemData::Lo_PartyData' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, Lo_Escapable) == 0x000028, "Member 'BattleCommand_C_GetItemData::Lo_Escapable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, ItemId) == 0x00002C, "Member 'BattleCommand_C_GetItemData::ItemId' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, Data) == 0x000030, "Member 'BattleCommand_C_GetItemData::Data' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, Datas) == 0x000040, "Member 'BattleCommand_C_GetItemData::Datas' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, Lo_IsRecameItemUse) == 0x000050, "Member 'BattleCommand_C_GetItemData::Lo_IsRecameItemUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BattleCommand_C_GetItemData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_GetBattleItemSortType_ReturnValue) == 0x000058, "Member 'BattleCommand_C_GetItemData::CallFunc_GetBattleItemSortType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_ItemGetHaveItems_Battle_ReturnValue) == 0x000060, "Member 'BattleCommand_C_GetItemData::CallFunc_ItemGetHaveItems_Battle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_Array_Get_Item) == 0x000070, "Member 'BattleCommand_C_GetItemData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000078, "Member 'BattleCommand_C_GetItemData::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_ItemGetMaxNum_ReturnValue) == 0x000080, "Member 'BattleCommand_C_GetItemData::CallFunc_ItemGetMaxNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_ItemGetNum_ReturnValue) == 0x000084, "Member 'BattleCommand_C_GetItemData::CallFunc_ItemGetNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_GetUseItemData_ReturnValue) == 0x000088, "Member 'BattleCommand_C_GetItemData::CallFunc_GetUseItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_Array_Length_ReturnValue) == 0x0000E4, "Member 'BattleCommand_C_GetItemData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_UseItemDataIsRecome_ReturnValue) == 0x0000E8, "Member 'BattleCommand_C_GetItemData::CallFunc_UseItemDataIsRecome_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_GetBPIMainInterface_AsBPI_Main_Interface) == 0x0000F0, "Member 'BattleCommand_C_GetItemData::CallFunc_GetBPIMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_GetBPIMainInterface_bSuccess) == 0x000100, "Member 'BattleCommand_C_GetItemData::CallFunc_GetBPIMainInterface_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_BI_CheckBattleDebugFlag2_ReturnValue) == 0x000101, "Member 'BattleCommand_C_GetItemData::CallFunc_BI_CheckBattleDebugFlag2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, K2Node_MakeArray_Array) == 0x000108, "Member 'BattleCommand_C_GetItemData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_GetBPIMainInterface_AsBPI_Main_Interface_1) == 0x000118, "Member 'BattleCommand_C_GetItemData::CallFunc_GetBPIMainInterface_AsBPI_Main_Interface_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_GetBPIMainInterface_bSuccess_1) == 0x000128, "Member 'BattleCommand_C_GetItemData::CallFunc_GetBPIMainInterface_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_IsUseItemCommandMainWork_ReturnValue) == 0x000129, "Member 'BattleCommand_C_GetItemData::CallFunc_IsUseItemCommandMainWork_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_BI_EncountIsNotEscape_ReturnValue) == 0x00012A, "Member 'BattleCommand_C_GetItemData::CallFunc_BI_EncountIsNotEscape_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, K2Node_MakeStruct_BtlUIItemData) == 0x00012C, "Member 'BattleCommand_C_GetItemData::K2Node_MakeStruct_BtlUIItemData' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_Not_PreBool_ReturnValue) == 0x00013C, "Member 'BattleCommand_C_GetItemData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_BattlePartyIsItemUseableItemList_ReturnValue) == 0x00013D, "Member 'BattleCommand_C_GetItemData::CallFunc_BattlePartyIsItemUseableItemList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_Array_Add_ReturnValue) == 0x000140, "Member 'BattleCommand_C_GetItemData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, Temp_int_Loop_Counter_Variable) == 0x000144, "Member 'BattleCommand_C_GetItemData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_Less_IntInt_ReturnValue) == 0x000148, "Member 'BattleCommand_C_GetItemData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemData, CallFunc_Add_IntInt_ReturnValue) == 0x00014C, "Member 'BattleCommand_C_GetItemData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.StartCondition
// 0x0018 (0x0018 - 0x0000)
struct BattleCommand_C_StartCondition final
{
public:
	TScriptInterface<class IBPI_BattleUIManager_C> CallFunc_BI_GetBattleUIManager_Ret;                // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_UpliftingGaugeSlideOut_Ret;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_PressIconSlideOut_Ret;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_BattleStatusCreatePanel_RetValue;      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_StartCondition) == 0x000008, "Wrong alignment on BattleCommand_C_StartCondition");
static_assert(sizeof(BattleCommand_C_StartCondition) == 0x000018, "Wrong size on BattleCommand_C_StartCondition");
static_assert(offsetof(BattleCommand_C_StartCondition, CallFunc_BI_GetBattleUIManager_Ret) == 0x000000, "Member 'BattleCommand_C_StartCondition::CallFunc_BI_GetBattleUIManager_Ret' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCondition, CallFunc_BI_UpliftingGaugeSlideOut_Ret) == 0x000010, "Member 'BattleCommand_C_StartCondition::CallFunc_BI_UpliftingGaugeSlideOut_Ret' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCondition, CallFunc_BI_PressIconSlideOut_Ret) == 0x000011, "Member 'BattleCommand_C_StartCondition::CallFunc_BI_PressIconSlideOut_Ret' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartCondition, CallFunc_BI_BattleStatusCreatePanel_RetValue) == 0x000012, "Member 'BattleCommand_C_StartCondition::CallFunc_BI_BattleStatusCreatePanel_RetValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SeqCommandMenuFunc
// 0x00E0 (0x00E0 - 0x0000)
struct BattleCommand_C_SeqCommandMenuFunc final
{
public:
	int32                                         Lo_CursorDirection;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HaveToDoTutorial_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7984[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_TUTORIAL_WINDOW_MESSAGE_TYPE>        K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateIconHelpWindow_WindowClose;         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK;                          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAction_ReturnValue;                  // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_2;               // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_3;               // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_4;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7985[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_TUTORIAL_WINDOW_MESSAGE_TYPE>        K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_HaveToDoTutorial_ReturnValue_1;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7986[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_TUTORIAL_WINDOW_MESSAGE_TYPE>        K2Node_MakeArray_Array_2;                          // 0x0048(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_HaveToDoTutorial_ReturnValue_2;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HaveToDoTutorial_ReturnValue_3;           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HaveToDoTutorial_ReturnValue_4;           // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK_1;                        // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK_2;                        // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK_3;                        // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK_4;                        // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7987[0x1];                                     // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_TUTORIAL_WINDOW_MESSAGE_TYPE>        K2Node_MakeArray_Array_3;                          // 0x0060(0x0010)(ConstParm, ReferenceParm)
	TArray<E_TUTORIAL_WINDOW_MESSAGE_TYPE>        K2Node_MakeArray_Array_4;                          // 0x0070(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsActionPadCheck_Success_5;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_6;               // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7988[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorIndex_m_PartyIndex;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<E_TUTORIAL_WINDOW_MESSAGE_TYPE>        K2Node_MakeArray_Array_5;                          // 0x0088(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsPassSelectable_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HaveToDoTutorial_ReturnValue_5;           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7989[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCommand                            K2Node_MakeStruct_BtlCommand;                      // 0x009C(0x0010)()
	bool                                          CallFunc_CallCommand_IsCursor;                     // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CallCommand_IsOK;                         // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_7;               // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetBattleTargetSelect_BPI;             // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetTargetType_Skill_NoUse;             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetBattleCursorPositionType_ReturnValue;  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_8;               // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_UI_COMMAND                              CallFunc_GetResult_Return;                         // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResult_Selectable;                     // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_UI_COMMAND                              CallFunc_GetResult_Return_1;                       // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResult_Selectable_1;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_9;               // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_10;              // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_UI_COMMAND                              CallFunc_GetResult_Return_2;                       // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResult_Selectable_2;                   // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CursorCtrl_CursorMoved;                   // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CallCommand_IsCursor_1;                   // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CallCommand_IsOK_1;                       // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_11;              // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_12;              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_798A[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_SeqCommandMenuFunc) == 0x000008, "Wrong alignment on BattleCommand_C_SeqCommandMenuFunc");
static_assert(sizeof(BattleCommand_C_SeqCommandMenuFunc) == 0x0000E0, "Wrong size on BattleCommand_C_SeqCommandMenuFunc");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, Lo_CursorDirection) == 0x000000, "Member 'BattleCommand_C_SeqCommandMenuFunc::Lo_CursorDirection' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_HaveToDoTutorial_ReturnValue) == 0x000004, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_HaveToDoTutorial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, K2Node_MakeArray_Array) == 0x000008, "Member 'BattleCommand_C_SeqCommandMenuFunc::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, Temp_int_Variable) == 0x000018, "Member 'BattleCommand_C_SeqCommandMenuFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_UpdateIconHelpWindow_WindowClose) == 0x00001C, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_UpdateIconHelpWindow_WindowClose' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsKeyInputOK_OK) == 0x00001D, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsKeyInputOK_OK' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsActionPadCheck_Success) == 0x00001E, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_CheckAction_ReturnValue) == 0x00001F, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_CheckAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsActionPadCheck_Success_1) == 0x000021, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsActionPadCheck_Success_2) == 0x000022, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsActionPadCheck_Success_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsActionPadCheck_Success_3) == 0x000023, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsActionPadCheck_Success_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsActionPadCheck_Success_4) == 0x000024, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsActionPadCheck_Success_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_BooleanOR_ReturnValue) == 0x000025, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_BooleanOR_ReturnValue_1) == 0x000026, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_BooleanOR_ReturnValue_2) == 0x000027, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000029, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, K2Node_MakeArray_Array_1) == 0x000030, "Member 'BattleCommand_C_SeqCommandMenuFunc::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_HaveToDoTutorial_ReturnValue_1) == 0x000040, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_HaveToDoTutorial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000041, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_BooleanOR_ReturnValue_3) == 0x000042, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, K2Node_MakeArray_Array_2) == 0x000048, "Member 'BattleCommand_C_SeqCommandMenuFunc::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_HaveToDoTutorial_ReturnValue_2) == 0x000058, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_HaveToDoTutorial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_HaveToDoTutorial_ReturnValue_3) == 0x000059, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_HaveToDoTutorial_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_HaveToDoTutorial_ReturnValue_4) == 0x00005A, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_HaveToDoTutorial_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsKeyInputOK_OK_1) == 0x00005B, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsKeyInputOK_OK_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsKeyInputOK_OK_2) == 0x00005C, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsKeyInputOK_OK_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsKeyInputOK_OK_3) == 0x00005D, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsKeyInputOK_OK_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsKeyInputOK_OK_4) == 0x00005E, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsKeyInputOK_OK_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, K2Node_MakeArray_Array_3) == 0x000060, "Member 'BattleCommand_C_SeqCommandMenuFunc::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, K2Node_MakeArray_Array_4) == 0x000070, "Member 'BattleCommand_C_SeqCommandMenuFunc::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsActionPadCheck_Success_5) == 0x000080, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsActionPadCheck_Success_5' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsActionPadCheck_Success_6) == 0x000081, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsActionPadCheck_Success_6' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_GetActorIndex_m_PartyIndex) == 0x000084, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_GetActorIndex_m_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, K2Node_MakeArray_Array_5) == 0x000088, "Member 'BattleCommand_C_SeqCommandMenuFunc::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsPassSelectable_ReturnValue) == 0x000098, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsPassSelectable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_HaveToDoTutorial_ReturnValue_5) == 0x000099, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_HaveToDoTutorial_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, K2Node_MakeStruct_BtlCommand) == 0x00009C, "Member 'BattleCommand_C_SeqCommandMenuFunc::K2Node_MakeStruct_BtlCommand' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_CallCommand_IsCursor) == 0x0000AC, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_CallCommand_IsCursor' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_CallCommand_IsOK) == 0x0000AD, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_CallCommand_IsOK' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsActionPadCheck_Success_7) == 0x0000AE, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsActionPadCheck_Success_7' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_BooleanAND_ReturnValue_1) == 0x0000AF, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_BI_GetBattleTargetSelect_BPI) == 0x0000B0, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_BI_GetBattleTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_BI_SetTargetType_Skill_NoUse) == 0x0000C0, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_BI_SetTargetType_Skill_NoUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_GetBattleCursorPositionType_ReturnValue) == 0x0000C1, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_GetBattleCursorPositionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C2, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsActionPadCheck_Success_8) == 0x0000C3, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsActionPadCheck_Success_8' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_BooleanAND_ReturnValue_2) == 0x0000C4, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_GetResult_Return) == 0x0000C5, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_GetResult_Return' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_GetResult_Selectable) == 0x0000C6, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_GetResult_Selectable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_GetResult_Return_1) == 0x0000C7, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_GetResult_Return_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_GetResult_Selectable_1) == 0x0000C8, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_GetResult_Selectable_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsActionPadCheck_Success_9) == 0x0000C9, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsActionPadCheck_Success_9' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsActionPadCheck_Success_10) == 0x0000CA, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsActionPadCheck_Success_10' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_BooleanAND_ReturnValue_3) == 0x0000CB, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_BooleanAND_ReturnValue_4) == 0x0000CC, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_GetResult_Return_2) == 0x0000CD, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_GetResult_Return_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_GetResult_Selectable_2) == 0x0000CE, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_GetResult_Selectable_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_CursorCtrl_CursorMoved) == 0x0000CF, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_CursorCtrl_CursorMoved' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000D0, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_CallCommand_IsCursor_1) == 0x0000D1, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_CallCommand_IsCursor_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_CallCommand_IsOK_1) == 0x0000D2, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_CallCommand_IsOK_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsActionPadCheck_Success_11) == 0x0000D3, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsActionPadCheck_Success_11' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_IsActionPadCheck_Success_12) == 0x0000D4, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_IsActionPadCheck_Success_12' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, K2Node_SwitchInteger_CmpSuccess) == 0x0000D5, "Member 'BattleCommand_C_SeqCommandMenuFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqCommandMenuFunc, CallFunc_Add_IntInt_ReturnValue) == 0x0000D8, "Member 'BattleCommand_C_SeqCommandMenuFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CallCommand
// 0x0030 (0x0030 - 0x0000)
struct BattleCommand_C_CallCommand final
{
public:
	E_BTL_UI_COMMAND                              Selection;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCursor;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOK;                                              // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_798B[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCommand                            K2Node_MakeStruct_BtlCommand;                      // 0x0004(0x0010)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_798C[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetBattleTargetSelect_BPI;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetTargetType_Skill_NoUse;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ChangeActChara_retValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CallCommand) == 0x000008, "Wrong alignment on BattleCommand_C_CallCommand");
static_assert(sizeof(BattleCommand_C_CallCommand) == 0x000030, "Wrong size on BattleCommand_C_CallCommand");
static_assert(offsetof(BattleCommand_C_CallCommand, Selection) == 0x000000, "Member 'BattleCommand_C_CallCommand::Selection' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallCommand, IsCursor) == 0x000001, "Member 'BattleCommand_C_CallCommand::IsCursor' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallCommand, IsOK) == 0x000002, "Member 'BattleCommand_C_CallCommand::IsOK' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallCommand, K2Node_MakeStruct_BtlCommand) == 0x000004, "Member 'BattleCommand_C_CallCommand::K2Node_MakeStruct_BtlCommand' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallCommand, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'BattleCommand_C_CallCommand::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallCommand, CallFunc_BI_GetBattleTargetSelect_BPI) == 0x000018, "Member 'BattleCommand_C_CallCommand::CallFunc_BI_GetBattleTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallCommand, CallFunc_BI_SetTargetType_Skill_NoUse) == 0x000028, "Member 'BattleCommand_C_CallCommand::CallFunc_BI_SetTargetType_Skill_NoUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallCommand, CallFunc_ChangeActChara_retValue) == 0x000029, "Member 'BattleCommand_C_CallCommand::CallFunc_ChangeActChara_retValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.PlaySeCommand
// 0x0007 (0x0007 - 0x0000)
struct BattleCommand_C_PlaySeCommand final
{
public:
	bool                                          IsCursor;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsOK;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCancel;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsTargetChange;                                    // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsTargetDecide;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsError;                                           // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsWindowOpen;                                      // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_PlaySeCommand) == 0x000001, "Wrong alignment on BattleCommand_C_PlaySeCommand");
static_assert(sizeof(BattleCommand_C_PlaySeCommand) == 0x000007, "Wrong size on BattleCommand_C_PlaySeCommand");
static_assert(offsetof(BattleCommand_C_PlaySeCommand, IsCursor) == 0x000000, "Member 'BattleCommand_C_PlaySeCommand::IsCursor' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_PlaySeCommand, IsOK) == 0x000001, "Member 'BattleCommand_C_PlaySeCommand::IsOK' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_PlaySeCommand, IsCancel) == 0x000002, "Member 'BattleCommand_C_PlaySeCommand::IsCancel' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_PlaySeCommand, IsTargetChange) == 0x000003, "Member 'BattleCommand_C_PlaySeCommand::IsTargetChange' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_PlaySeCommand, IsTargetDecide) == 0x000004, "Member 'BattleCommand_C_PlaySeCommand::IsTargetDecide' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_PlaySeCommand, IsError) == 0x000005, "Member 'BattleCommand_C_PlaySeCommand::IsError' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_PlaySeCommand, IsWindowOpen) == 0x000006, "Member 'BattleCommand_C_PlaySeCommand::IsWindowOpen' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.PlaySE
// 0x0020 (0x0020 - 0x0000)
struct BattleCommand_C_PlaySE final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleSoundManager_C> CallFunc_BI_GetBattleSoundManager_retValue;        // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_PlayResidentSE_retValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_PlaySE) == 0x000008, "Wrong alignment on BattleCommand_C_PlaySE");
static_assert(sizeof(BattleCommand_C_PlaySE) == 0x000020, "Wrong size on BattleCommand_C_PlaySE");
static_assert(offsetof(BattleCommand_C_PlaySE, InName) == 0x000000, "Member 'BattleCommand_C_PlaySE::InName' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_PlaySE, CallFunc_BI_GetBattleSoundManager_retValue) == 0x000008, "Member 'BattleCommand_C_PlaySE::CallFunc_BI_GetBattleSoundManager_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_PlaySE, CallFunc_BI_PlayResidentSE_retValue) == 0x000018, "Member 'BattleCommand_C_PlaySE::CallFunc_BI_PlayResidentSE_retValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CallSummon
// 0x0014 (0x0014 - 0x0000)
struct BattleCommand_C_CallSummon final
{
public:
	struct FBtlCommand                            K2Node_MakeStruct_BtlCommand;                      // 0x0000(0x0010)()
	bool                                          CallFunc_BI_TargetSelectPause_retValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CallSummon) == 0x000004, "Wrong alignment on BattleCommand_C_CallSummon");
static_assert(sizeof(BattleCommand_C_CallSummon) == 0x000014, "Wrong size on BattleCommand_C_CallSummon");
static_assert(offsetof(BattleCommand_C_CallSummon, K2Node_MakeStruct_BtlCommand) == 0x000000, "Member 'BattleCommand_C_CallSummon::K2Node_MakeStruct_BtlCommand' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallSummon, CallFunc_BI_TargetSelectPause_retValue) == 0x000010, "Member 'BattleCommand_C_CallSummon::CallFunc_BI_TargetSelectPause_retValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.ChangeActChara
// 0x0020 (0x0020 - 0x0000)
struct BattleCommand_C_ChangeActChara final
{
public:
	int32                                         InAdd;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkillMenu;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_798D[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlCommand                            K2Node_MakeStruct_BtlCommand;                      // 0x000C(0x0010)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_ChangeActChara) == 0x000004, "Wrong alignment on BattleCommand_C_ChangeActChara");
static_assert(sizeof(BattleCommand_C_ChangeActChara) == 0x000020, "Wrong size on BattleCommand_C_ChangeActChara");
static_assert(offsetof(BattleCommand_C_ChangeActChara, InAdd) == 0x000000, "Member 'BattleCommand_C_ChangeActChara::InAdd' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeActChara, IsSkillMenu) == 0x000004, "Member 'BattleCommand_C_ChangeActChara::IsSkillMenu' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeActChara, RetValue) == 0x000005, "Member 'BattleCommand_C_ChangeActChara::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeActChara, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000008, "Member 'BattleCommand_C_ChangeActChara::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeActChara, K2Node_MakeStruct_BtlCommand) == 0x00000C, "Member 'BattleCommand_C_ChangeActChara::K2Node_MakeStruct_BtlCommand' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeActChara, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BattleCommand_C_ChangeActChara::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CallUnionForm
// 0x0014 (0x0014 - 0x0000)
struct BattleCommand_C_CallUnionForm final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_COMM_TYPE                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_COMM_TYPE                               Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_COMM_TYPE                               K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlCommand                            K2Node_MakeStruct_BtlCommand;                      // 0x0004(0x0010)()
};
static_assert(alignof(BattleCommand_C_CallUnionForm) == 0x000004, "Wrong alignment on BattleCommand_C_CallUnionForm");
static_assert(sizeof(BattleCommand_C_CallUnionForm) == 0x000014, "Wrong size on BattleCommand_C_CallUnionForm");
static_assert(offsetof(BattleCommand_C_CallUnionForm, Temp_bool_Variable) == 0x000000, "Member 'BattleCommand_C_CallUnionForm::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallUnionForm, Temp_byte_Variable) == 0x000001, "Member 'BattleCommand_C_CallUnionForm::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallUnionForm, Temp_byte_Variable_1) == 0x000002, "Member 'BattleCommand_C_CallUnionForm::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallUnionForm, K2Node_Select_Default) == 0x000003, "Member 'BattleCommand_C_CallUnionForm::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallUnionForm, K2Node_MakeStruct_BtlCommand) == 0x000004, "Member 'BattleCommand_C_CallUnionForm::K2Node_MakeStruct_BtlCommand' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SeqSkillMenuFunc
// 0x0138 (0x0138 - 0x0000)
struct BattleCommand_C_SeqSkillMenuFunc final
{
public:
	int32                                         Lo_ShiftDirection;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_CursorMoved;                                    // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_798E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0008(0x0010)(Edit, BlueprintVisible)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetBattleCursorPositionType_ReturnValue;  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetBattleCursorPositionType_ReturnValue_1; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetBattleCursorPositionType_ReturnValue_2; // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_798F[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateIconHelpWindow_WindowClose;         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK;                          // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAction_ReturnValue;                  // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCancel_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_2;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_3;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_4;               // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetBattleCursorPositionType_ReturnValue_3; // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReturnFromSelfTargeting_ReturnValue;    // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HaveToDoTutorial_ReturnValue;             // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK_1;                        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK_2;                        // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK_3;                        // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK_4;                        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7990[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_TUTORIAL_WINDOW_MESSAGE_TYPE>        K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsPassSelectable_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CallCommand_IsCursor;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CallCommand_IsOK;                         // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_5;               // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7991[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 ID)>                     K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsAllMenuDisappeared_IsDisappeared;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSummonSkill_IsSummon;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7992[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetBattleTargetSelect_BPI;             // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetTargetType_Skill_NoUse;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7993[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionPadCheck_Success_6;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_7;               // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(int32 ID)>                     K2Node_CreateDelegate_OutputDelegate_1;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_8;               // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7994[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlUISkill_UseData_st                 CallFunc_GetSelectedSkillData_Data;                // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResult_CursorIndex;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResult_ID;                             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResult_IsUsable;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetResult_IsSkill;                        // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_9;               // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CursorCtrl_CursorMoved;                   // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetResult_CursorIndex_1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResult_ID_1;                           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResult_IsUsable_1;                     // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetResult_IsSkill_1;                      // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7995[0x2];                                     // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlUISkill_UseData_st                 CallFunc_GetSelectedSkillData_Data_1;              // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResult_CursorIndex_2;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResult_ID_2;                           // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResult_IsUsable_2;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetResult_IsSkill_2;                      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInputEnable_Enable;                    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetLabelConcealed_Concealed;              // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetResult_CursorIndex_3;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResult_ID_3;                           // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResult_IsUsable_3;                     // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetResult_IsSkill_3;                      // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_10;              // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_11;              // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7996[0x2];                                     // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7997[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlCommand                            CallFunc_BattleCommandSetSkill_ReturnValue;        // 0x0114(0x0010)()
	struct FBtlCommand                            CallFunc_BattleCommandSetAttack_ReturnValue;       // 0x0124(0x0010)()
};
static_assert(alignof(BattleCommand_C_SeqSkillMenuFunc) == 0x000008, "Wrong alignment on BattleCommand_C_SeqSkillMenuFunc");
static_assert(sizeof(BattleCommand_C_SeqSkillMenuFunc) == 0x000138, "Wrong size on BattleCommand_C_SeqSkillMenuFunc");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, Lo_ShiftDirection) == 0x000000, "Member 'BattleCommand_C_SeqSkillMenuFunc::Lo_ShiftDirection' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, Lo_CursorMoved) == 0x000004, "Member 'BattleCommand_C_SeqSkillMenuFunc::Lo_CursorMoved' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, Lo_WaitTaskList) == 0x000008, "Member 'BattleCommand_C_SeqSkillMenuFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetBattleCursorPositionType_ReturnValue) == 0x000018, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetBattleCursorPositionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetBattleCursorPositionType_ReturnValue_1) == 0x000019, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetBattleCursorPositionType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001B, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetBattleCursorPositionType_ReturnValue_2) == 0x00001C, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetBattleCursorPositionType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00001D, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, Temp_int_Variable) == 0x000020, "Member 'BattleCommand_C_SeqSkillMenuFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_UpdateIconHelpWindow_WindowClose) == 0x000024, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_UpdateIconHelpWindow_WindowClose' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsKeyInputOK_OK) == 0x000025, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsKeyInputOK_OK' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsActionPadCheck_Success) == 0x000026, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_CheckAction_ReturnValue) == 0x000027, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_CheckAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_CheckCancel_ReturnValue) == 0x000029, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_CheckCancel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsActionPadCheck_Success_1) == 0x00002A, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_BooleanOR_ReturnValue) == 0x00002B, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsActionPadCheck_Success_2) == 0x00002C, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsActionPadCheck_Success_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsActionPadCheck_Success_3) == 0x00002D, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsActionPadCheck_Success_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsActionPadCheck_Success_4) == 0x00002E, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsActionPadCheck_Success_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_BooleanOR_ReturnValue_1) == 0x00002F, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_BooleanOR_ReturnValue_2) == 0x000030, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_BooleanOR_ReturnValue_3) == 0x000031, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000033, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetBattleCursorPositionType_ReturnValue_3) == 0x000034, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetBattleCursorPositionType_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000035, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsReturnFromSelfTargeting_ReturnValue) == 0x000036, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsReturnFromSelfTargeting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_HaveToDoTutorial_ReturnValue) == 0x000037, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_HaveToDoTutorial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsKeyInputOK_OK_1) == 0x000038, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsKeyInputOK_OK_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_BooleanAND_ReturnValue_1) == 0x000039, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsKeyInputOK_OK_2) == 0x00003A, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsKeyInputOK_OK_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsKeyInputOK_OK_3) == 0x00003B, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsKeyInputOK_OK_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsKeyInputOK_OK_4) == 0x00003C, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsKeyInputOK_OK_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, K2Node_MakeArray_Array) == 0x000040, "Member 'BattleCommand_C_SeqSkillMenuFunc::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsPassSelectable_ReturnValue) == 0x000050, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsPassSelectable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_CallCommand_IsCursor) == 0x000051, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_CallCommand_IsCursor' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_CallCommand_IsOK) == 0x000052, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_CallCommand_IsOK' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsActionPadCheck_Success_5) == 0x000053, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsActionPadCheck_Success_5' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_BooleanAND_ReturnValue_2) == 0x000054, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'BattleCommand_C_SeqSkillMenuFunc::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsAllMenuDisappeared_IsDisappeared) == 0x000068, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsAllMenuDisappeared_IsDisappeared' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsSummonSkill_IsSummon) == 0x000069, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsSummonSkill_IsSummon' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_BI_GetBattleTargetSelect_BPI) == 0x000070, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_BI_GetBattleTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_BI_SetTargetType_Skill_NoUse) == 0x000080, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_BI_SetTargetType_Skill_NoUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, Temp_int_Variable_1) == 0x000084, "Member 'BattleCommand_C_SeqSkillMenuFunc::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsActionPadCheck_Success_6) == 0x000088, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsActionPadCheck_Success_6' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_BooleanAND_ReturnValue_3) == 0x000089, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsActionPadCheck_Success_7) == 0x00008A, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsActionPadCheck_Success_7' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_BooleanAND_ReturnValue_4) == 0x00008B, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, K2Node_CreateDelegate_OutputDelegate_1) == 0x00008C, "Member 'BattleCommand_C_SeqSkillMenuFunc::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsActionPadCheck_Success_8) == 0x00009C, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsActionPadCheck_Success_8' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetSelectedSkillData_Data) == 0x0000A0, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetSelectedSkillData_Data' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetResult_CursorIndex) == 0x0000B8, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetResult_CursorIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetResult_ID) == 0x0000BC, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetResult_ID' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetResult_IsUsable) == 0x0000C0, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetResult_IsUsable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetResult_IsSkill) == 0x0000C1, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetResult_IsSkill' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsActionPadCheck_Success_9) == 0x0000C2, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsActionPadCheck_Success_9' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_CursorCtrl_CursorMoved) == 0x0000C3, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_CursorCtrl_CursorMoved' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetResult_CursorIndex_1) == 0x0000C4, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetResult_CursorIndex_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetResult_ID_1) == 0x0000C8, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetResult_ID_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetResult_IsUsable_1) == 0x0000CC, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetResult_IsUsable_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetResult_IsSkill_1) == 0x0000CD, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetResult_IsSkill_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetSelectedSkillData_Data_1) == 0x0000D0, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetSelectedSkillData_Data_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetResult_CursorIndex_2) == 0x0000E8, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetResult_CursorIndex_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetResult_ID_2) == 0x0000EC, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetResult_ID_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetResult_IsUsable_2) == 0x0000F0, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetResult_IsUsable_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetResult_IsSkill_2) == 0x0000F1, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetResult_IsSkill_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetInputEnable_Enable) == 0x0000F2, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetInputEnable_Enable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetLabelConcealed_Concealed) == 0x0000F3, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetLabelConcealed_Concealed' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetResult_CursorIndex_3) == 0x0000F4, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetResult_CursorIndex_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetResult_ID_3) == 0x0000F8, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetResult_ID_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetResult_IsUsable_3) == 0x0000FC, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetResult_IsUsable_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_GetResult_IsSkill_3) == 0x0000FD, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_GetResult_IsSkill_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000FE, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_BooleanAND_ReturnValue_5) == 0x0000FF, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_BooleanAND_ReturnValue_6) == 0x000100, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_AddToWidgetPrio_ReturnValue) == 0x000101, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsInViewport_ReturnValue) == 0x000102, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_Less_IntInt_ReturnValue) == 0x000103, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsActionPadCheck_Success_10) == 0x000104, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsActionPadCheck_Success_10' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_IsActionPadCheck_Success_11) == 0x000105, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_IsActionPadCheck_Success_11' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000108, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, K2Node_SwitchInteger_CmpSuccess) == 0x00010C, "Member 'BattleCommand_C_SeqSkillMenuFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_Add_IntInt_ReturnValue_1) == 0x000110, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_BattleCommandSetSkill_ReturnValue) == 0x000114, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_BattleCommandSetSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqSkillMenuFunc, CallFunc_BattleCommandSetAttack_ReturnValue) == 0x000124, "Member 'BattleCommand_C_SeqSkillMenuFunc::CallFunc_BattleCommandSetAttack_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.StartSkillMenu_Core
// 0x0110 (0x0110 - 0x0000)
struct BattleCommand_C_StartSkillMenu_Core final
{
public:
	int32                                         Lo_CursorIndex1;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TopIndex1;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Aptitude;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_Mp;                                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  Lo_UseableSkillList;                               // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<struct FBtlUISkill_UseData_st>         Lo_UseSubSkillData;                                // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<struct FBtlUISkill_UseData_st>         Lo_UseSkillData;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_NahobinoSkillList;                              // 0x0040(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0050(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_SkillList;                                      // 0x0060(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 Lo_SkillSubList;                                   // 0x0070(0x0010)(Edit, BlueprintVisible)
	bool                                          Lo_IsHero;                                         // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7998[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_PartyIndex;                                     // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_TopIndex;                                       // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_CursorIndex;                                    // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x00A0(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7999[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  K2Node_MakeArray_Array_2;                          // 0x00B8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_799A[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_799B[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcSkillAptitude_Aptitude;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlUISkill_UseData_st                 K2Node_MakeStruct_BtlUISkill_UseData_st;           // 0x00EC(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_799C[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_StartSkillMenu_Core) == 0x000008, "Wrong alignment on BattleCommand_C_StartSkillMenu_Core");
static_assert(sizeof(BattleCommand_C_StartSkillMenu_Core) == 0x000110, "Wrong size on BattleCommand_C_StartSkillMenu_Core");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, Lo_CursorIndex1) == 0x000000, "Member 'BattleCommand_C_StartSkillMenu_Core::Lo_CursorIndex1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, Lo_TopIndex1) == 0x000004, "Member 'BattleCommand_C_StartSkillMenu_Core::Lo_TopIndex1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, Lo_Aptitude) == 0x000008, "Member 'BattleCommand_C_StartSkillMenu_Core::Lo_Aptitude' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, Lo_Mp) == 0x00000C, "Member 'BattleCommand_C_StartSkillMenu_Core::Lo_Mp' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, Lo_UseableSkillList) == 0x000010, "Member 'BattleCommand_C_StartSkillMenu_Core::Lo_UseableSkillList' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, Lo_UseSubSkillData) == 0x000020, "Member 'BattleCommand_C_StartSkillMenu_Core::Lo_UseSubSkillData' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, Lo_UseSkillData) == 0x000030, "Member 'BattleCommand_C_StartSkillMenu_Core::Lo_UseSkillData' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, Lo_NahobinoSkillList) == 0x000040, "Member 'BattleCommand_C_StartSkillMenu_Core::Lo_NahobinoSkillList' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, Lo_WaitTaskList) == 0x000050, "Member 'BattleCommand_C_StartSkillMenu_Core::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, Lo_SkillList) == 0x000060, "Member 'BattleCommand_C_StartSkillMenu_Core::Lo_SkillList' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, Lo_SkillSubList) == 0x000070, "Member 'BattleCommand_C_StartSkillMenu_Core::Lo_SkillSubList' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, Lo_IsHero) == 0x000080, "Member 'BattleCommand_C_StartSkillMenu_Core::Lo_IsHero' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, Lo_PartyIndex) == 0x000084, "Member 'BattleCommand_C_StartSkillMenu_Core::Lo_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, Lo_TopIndex) == 0x000088, "Member 'BattleCommand_C_StartSkillMenu_Core::Lo_TopIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, Lo_CursorIndex) == 0x00008C, "Member 'BattleCommand_C_StartSkillMenu_Core::Lo_CursorIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, K2Node_MakeArray_Array) == 0x000090, "Member 'BattleCommand_C_StartSkillMenu_Core::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, K2Node_MakeArray_Array_1) == 0x0000A0, "Member 'BattleCommand_C_StartSkillMenu_Core::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'BattleCommand_C_StartSkillMenu_Core::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, K2Node_MakeArray_Array_2) == 0x0000B8, "Member 'BattleCommand_C_StartSkillMenu_Core::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000C8, "Member 'BattleCommand_C_StartSkillMenu_Core::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, Temp_int_Loop_Counter_Variable) == 0x0000CC, "Member 'BattleCommand_C_StartSkillMenu_Core::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'BattleCommand_C_StartSkillMenu_Core::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'BattleCommand_C_StartSkillMenu_Core::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000D8, "Member 'BattleCommand_C_StartSkillMenu_Core::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, CallFunc_Array_Get_Item) == 0x0000DC, "Member 'BattleCommand_C_StartSkillMenu_Core::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E0, "Member 'BattleCommand_C_StartSkillMenu_Core::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, CallFunc_CalcSkillAptitude_Aptitude) == 0x0000E4, "Member 'BattleCommand_C_StartSkillMenu_Core::CallFunc_CalcSkillAptitude_Aptitude' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'BattleCommand_C_StartSkillMenu_Core::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, K2Node_MakeStruct_BtlUISkill_UseData_st) == 0x0000EC, "Member 'BattleCommand_C_StartSkillMenu_Core::K2Node_MakeStruct_BtlUISkill_UseData_st' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, CallFunc_Less_IntInt_ReturnValue) == 0x000104, "Member 'BattleCommand_C_StartSkillMenu_Core::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartSkillMenu_Core, CallFunc_Array_Add_ReturnValue) == 0x000108, "Member 'BattleCommand_C_StartSkillMenu_Core::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CheckIsHero
// 0x0020 (0x0020 - 0x0000)
struct BattleCommand_C_CheckIsHero final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ret;                                               // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_799D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_PartySystem;            // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_CHAR_TYPE                               CallFunc_BI_GetHeroCharaType_NewParam;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CheckIsHero) == 0x000008, "Wrong alignment on BattleCommand_C_CheckIsHero");
static_assert(sizeof(BattleCommand_C_CheckIsHero) == 0x000020, "Wrong size on BattleCommand_C_CheckIsHero");
static_assert(offsetof(BattleCommand_C_CheckIsHero, Param_Index) == 0x000000, "Member 'BattleCommand_C_CheckIsHero::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckIsHero, Ret) == 0x000004, "Member 'BattleCommand_C_CheckIsHero::Ret' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckIsHero, CallFunc_BI_GetPartySystem_PartySystem) == 0x000008, "Member 'BattleCommand_C_CheckIsHero::CallFunc_BI_GetPartySystem_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckIsHero, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'BattleCommand_C_CheckIsHero::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckIsHero, CallFunc_BI_GetHeroCharaType_NewParam) == 0x000019, "Member 'BattleCommand_C_CheckIsHero::CallFunc_BI_GetHeroCharaType_NewParam' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckIsHero, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BattleCommand_C_CheckIsHero::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CheckSkillList
// 0x0170 (0x0170 - 0x0000)
struct BattleCommand_C_CheckSkillList final
{
public:
	TArray<int32>                                 Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 OutList;                                           // 0x0010(0x0010)(Parm, OutParm)
	int32                                         ID;                                                // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                Target;                                            // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_799E[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 List;                                              // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_799F[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79A0[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79A1[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0058(0x0100)(ConstParm)
	E_SKILL_TARGET                                CallFunc_SkillBaseDataGetValue_Area_ReturnValue;   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79A2[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79A3[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CheckSkillList) == 0x000008, "Wrong alignment on BattleCommand_C_CheckSkillList");
static_assert(sizeof(BattleCommand_C_CheckSkillList) == 0x000170, "Wrong size on BattleCommand_C_CheckSkillList");
static_assert(offsetof(BattleCommand_C_CheckSkillList, Array) == 0x000000, "Member 'BattleCommand_C_CheckSkillList::Array' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, OutList) == 0x000010, "Member 'BattleCommand_C_CheckSkillList::OutList' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, ID) == 0x000020, "Member 'BattleCommand_C_CheckSkillList::ID' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, Target) == 0x000024, "Member 'BattleCommand_C_CheckSkillList::Target' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, List) == 0x000028, "Member 'BattleCommand_C_CheckSkillList::List' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BattleCommand_C_CheckSkillList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003C, "Member 'BattleCommand_C_CheckSkillList::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00003D, "Member 'BattleCommand_C_CheckSkillList::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00003E, "Member 'BattleCommand_C_CheckSkillList::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00003F, "Member 'BattleCommand_C_CheckSkillList::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000040, "Member 'BattleCommand_C_CheckSkillList::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, CallFunc_BooleanOR_ReturnValue) == 0x000041, "Member 'BattleCommand_C_CheckSkillList::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BattleCommand_C_CheckSkillList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, CallFunc_BooleanOR_ReturnValue_1) == 0x000048, "Member 'BattleCommand_C_CheckSkillList::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, CallFunc_Array_Get_Item) == 0x00004C, "Member 'BattleCommand_C_CheckSkillList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, CallFunc_BooleanOR_ReturnValue_2) == 0x000050, "Member 'BattleCommand_C_CheckSkillList::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, CallFunc_BooleanOR_ReturnValue_3) == 0x000051, "Member 'BattleCommand_C_CheckSkillList::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, CallFunc_GetSkillBaseData_ReturnValue) == 0x000058, "Member 'BattleCommand_C_CheckSkillList::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, CallFunc_SkillBaseDataGetValue_Area_ReturnValue) == 0x000158, "Member 'BattleCommand_C_CheckSkillList::CallFunc_SkillBaseDataGetValue_Area_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, Temp_int_Loop_Counter_Variable) == 0x00015C, "Member 'BattleCommand_C_CheckSkillList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, CallFunc_Array_Add_ReturnValue) == 0x000160, "Member 'BattleCommand_C_CheckSkillList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, CallFunc_Less_IntInt_ReturnValue) == 0x000164, "Member 'BattleCommand_C_CheckSkillList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, CallFunc_Add_IntInt_ReturnValue) == 0x000168, "Member 'BattleCommand_C_CheckSkillList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList, CallFunc_BooleanAND_ReturnValue) == 0x00016C, "Member 'BattleCommand_C_CheckSkillList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SeqItemMenuFunc
// 0x00D8 (0x00D8 - 0x0000)
struct BattleCommand_C_SeqItemMenuFunc final
{
public:
	int32                                         Lo_ShiftDirection;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_CursorMoved;                                    // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                Lo_ItemArea;                                       // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetBattleCursorPositionType_ReturnValue;  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetBattleCursorPositionType_ReturnValue_1; // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetBattleCursorPositionType_ReturnValue_2; // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateIconHelpWindow_WindowClose;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK;                          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAction_ReturnValue;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCancel_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CursorCtrl_CursorMoved;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_2;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_3;               // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_4;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetBattleCursorPositionType_ReturnValue_3; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReturnFromSelfTargeting_ReturnValue;    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK_1;                        // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK_2;                        // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK_3;                        // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPassSelectable_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CallCommand_IsCursor;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CallCommand_IsOK;                         // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_5;               // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79A4[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 ID)>                     K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsAllMenuDisappeared_IsDisappeared;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                CallFunc_CalcItemArea_ReturnValue;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79A5[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetBattleTargetSelect_BPI;             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetTargetType_Skill_NoUse;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79A6[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionPadCheck_Success_6;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_7;               // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(int32 ID)>                     K2Node_CreateDelegate_OutputDelegate_1;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	struct FBtlCommand                            K2Node_MakeStruct_BtlCommand;                      // 0x0074(0x0010)()
	struct FBtlUIItemData                         CallFunc_GetSelectedItemData_Data;                 // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResult_CursorIndex;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResult_ID;                             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResult_IsUsable;                       // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetResult_IsSkill;                        // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79A7[0x2];                                     // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetResult_CursorIndex_1;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResult_ID_1;                           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResult_IsUsable_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetResult_IsSkill_1;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_8;               // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_9;               // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_10;              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79A8[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetResult_CursorIndex_2;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResult_ID_2;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResult_IsUsable_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetResult_IsSkill_2;                      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetLabelConcealed_Concealed;              // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInputEnable_Enable;                    // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79A9[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetResult_CursorIndex_3;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResult_ID_3;                           // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResult_IsUsable_3;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetResult_IsSkill_3;                      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_11;              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_SeqItemMenuFunc) == 0x000008, "Wrong alignment on BattleCommand_C_SeqItemMenuFunc");
static_assert(sizeof(BattleCommand_C_SeqItemMenuFunc) == 0x0000D8, "Wrong size on BattleCommand_C_SeqItemMenuFunc");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, Lo_ShiftDirection) == 0x000000, "Member 'BattleCommand_C_SeqItemMenuFunc::Lo_ShiftDirection' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, Lo_CursorMoved) == 0x000004, "Member 'BattleCommand_C_SeqItemMenuFunc::Lo_CursorMoved' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, Lo_ItemArea) == 0x000005, "Member 'BattleCommand_C_SeqItemMenuFunc::Lo_ItemArea' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetBattleCursorPositionType_ReturnValue) == 0x000006, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetBattleCursorPositionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetBattleCursorPositionType_ReturnValue_1) == 0x000007, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetBattleCursorPositionType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000009, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetBattleCursorPositionType_ReturnValue_2) == 0x00000A, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetBattleCursorPositionType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00000B, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_UpdateIconHelpWindow_WindowClose) == 0x00000C, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_UpdateIconHelpWindow_WindowClose' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsKeyInputOK_OK) == 0x00000D, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsKeyInputOK_OK' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsActionPadCheck_Success) == 0x00000E, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_CheckAction_ReturnValue) == 0x00000F, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_CheckAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_CheckCancel_ReturnValue) == 0x000011, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_CheckCancel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_CursorCtrl_CursorMoved) == 0x000013, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_CursorCtrl_CursorMoved' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000014, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000015, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000016, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsActionPadCheck_Success_1) == 0x000017, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_BooleanOR_ReturnValue_1) == 0x000018, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsActionPadCheck_Success_2) == 0x000019, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsActionPadCheck_Success_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_BooleanOR_ReturnValue_2) == 0x00001A, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsActionPadCheck_Success_3) == 0x00001B, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsActionPadCheck_Success_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsActionPadCheck_Success_4) == 0x00001C, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsActionPadCheck_Success_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_BooleanOR_ReturnValue_3) == 0x00001D, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_BooleanOR_ReturnValue_4) == 0x00001E, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_BooleanOR_ReturnValue_5) == 0x00001F, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetBattleCursorPositionType_ReturnValue_3) == 0x000021, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetBattleCursorPositionType_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000022, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsReturnFromSelfTargeting_ReturnValue) == 0x000023, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsReturnFromSelfTargeting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000024, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsKeyInputOK_OK_1) == 0x000025, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsKeyInputOK_OK_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsKeyInputOK_OK_2) == 0x000026, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsKeyInputOK_OK_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsKeyInputOK_OK_3) == 0x000027, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsKeyInputOK_OK_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsPassSelectable_ReturnValue) == 0x000028, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsPassSelectable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_CallCommand_IsCursor) == 0x000029, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_CallCommand_IsCursor' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_CallCommand_IsOK) == 0x00002A, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_CallCommand_IsOK' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsActionPadCheck_Success_5) == 0x00002B, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsActionPadCheck_Success_5' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_BooleanAND_ReturnValue_1) == 0x00002C, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'BattleCommand_C_SeqItemMenuFunc::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsAllMenuDisappeared_IsDisappeared) == 0x000040, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsAllMenuDisappeared_IsDisappeared' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_CalcItemArea_ReturnValue) == 0x000041, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_CalcItemArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_BI_GetBattleTargetSelect_BPI) == 0x000048, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_BI_GetBattleTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_BI_SetTargetType_Skill_NoUse) == 0x000058, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_BI_SetTargetType_Skill_NoUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, Temp_int_Variable) == 0x00005C, "Member 'BattleCommand_C_SeqItemMenuFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsActionPadCheck_Success_6) == 0x000060, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsActionPadCheck_Success_6' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_BooleanAND_ReturnValue_2) == 0x000061, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsActionPadCheck_Success_7) == 0x000062, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsActionPadCheck_Success_7' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_BooleanAND_ReturnValue_3) == 0x000063, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, K2Node_CreateDelegate_OutputDelegate_1) == 0x000064, "Member 'BattleCommand_C_SeqItemMenuFunc::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, K2Node_MakeStruct_BtlCommand) == 0x000074, "Member 'BattleCommand_C_SeqItemMenuFunc::K2Node_MakeStruct_BtlCommand' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetSelectedItemData_Data) == 0x000084, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetSelectedItemData_Data' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetResult_CursorIndex) == 0x000094, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetResult_CursorIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetResult_ID) == 0x000098, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetResult_ID' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetResult_IsUsable) == 0x00009C, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetResult_IsUsable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetResult_IsSkill) == 0x00009D, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetResult_IsSkill' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetResult_CursorIndex_1) == 0x0000A0, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetResult_CursorIndex_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetResult_ID_1) == 0x0000A4, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetResult_ID_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetResult_IsUsable_1) == 0x0000A8, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetResult_IsUsable_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetResult_IsSkill_1) == 0x0000A9, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetResult_IsSkill_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsActionPadCheck_Success_8) == 0x0000AA, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsActionPadCheck_Success_8' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsActionPadCheck_Success_9) == 0x0000AB, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsActionPadCheck_Success_9' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsActionPadCheck_Success_10) == 0x0000AC, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsActionPadCheck_Success_10' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetResult_CursorIndex_2) == 0x0000B0, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetResult_CursorIndex_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetResult_ID_2) == 0x0000B4, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetResult_ID_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetResult_IsUsable_2) == 0x0000B8, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetResult_IsUsable_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetResult_IsSkill_2) == 0x0000B9, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetResult_IsSkill_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetLabelConcealed_Concealed) == 0x0000BA, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetLabelConcealed_Concealed' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetInputEnable_Enable) == 0x0000BB, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetInputEnable_Enable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000BC, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetResult_CursorIndex_3) == 0x0000C0, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetResult_CursorIndex_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetResult_ID_3) == 0x0000C4, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetResult_ID_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetResult_IsUsable_3) == 0x0000C8, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetResult_IsUsable_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_GetResult_IsSkill_3) == 0x0000C9, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_GetResult_IsSkill_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_BooleanAND_ReturnValue_4) == 0x0000CA, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_BooleanAND_ReturnValue_5) == 0x0000CB, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsActionPadCheck_Success_11) == 0x0000CC, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsActionPadCheck_Success_11' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_AddToWidgetPrio_ReturnValue) == 0x0000CD, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_IsInViewport_ReturnValue) == 0x0000CE, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, K2Node_SwitchInteger_CmpSuccess) == 0x0000CF, "Member 'BattleCommand_C_SeqItemMenuFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqItemMenuFunc, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'BattleCommand_C_SeqItemMenuFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SeqEscapeMenuFunc
// 0x0058 (0x0058 - 0x0000)
struct BattleCommand_C_SeqEscapeMenuFunc final
{
public:
	bool                                          CallFunc_IsKeyInputOK_OK;                          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79AA[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateIconHelpWindow_WindowClose;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCancel_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAction_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79AB[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetTargetSelect_BPI;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetTargetSelect_BPI_1;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsDirectDicided_IsDecided;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK_1;                        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79AC[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorIndex_m_PartyIndex;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79AD[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlCommand                            K2Node_MakeStruct_BtlCommand;                      // 0x003C(0x0010)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_SeqEscapeMenuFunc) == 0x000008, "Wrong alignment on BattleCommand_C_SeqEscapeMenuFunc");
static_assert(sizeof(BattleCommand_C_SeqEscapeMenuFunc) == 0x000058, "Wrong size on BattleCommand_C_SeqEscapeMenuFunc");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, CallFunc_IsKeyInputOK_OK) == 0x000000, "Member 'BattleCommand_C_SeqEscapeMenuFunc::CallFunc_IsKeyInputOK_OK' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, CallFunc_IsActionPadCheck_Success) == 0x000001, "Member 'BattleCommand_C_SeqEscapeMenuFunc::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, Temp_int_Variable) == 0x000004, "Member 'BattleCommand_C_SeqEscapeMenuFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'BattleCommand_C_SeqEscapeMenuFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, CallFunc_UpdateIconHelpWindow_WindowClose) == 0x000009, "Member 'BattleCommand_C_SeqEscapeMenuFunc::CallFunc_UpdateIconHelpWindow_WindowClose' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, CallFunc_CheckCancel_ReturnValue) == 0x00000A, "Member 'BattleCommand_C_SeqEscapeMenuFunc::CallFunc_CheckCancel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, CallFunc_CheckAction_ReturnValue) == 0x00000B, "Member 'BattleCommand_C_SeqEscapeMenuFunc::CallFunc_CheckAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, CallFunc_BI_GetTargetSelect_BPI) == 0x000010, "Member 'BattleCommand_C_SeqEscapeMenuFunc::CallFunc_BI_GetTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, CallFunc_BI_GetTargetSelect_BPI_1) == 0x000020, "Member 'BattleCommand_C_SeqEscapeMenuFunc::CallFunc_BI_GetTargetSelect_BPI_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, CallFunc_BI_IsDirectDicided_IsDecided) == 0x000030, "Member 'BattleCommand_C_SeqEscapeMenuFunc::CallFunc_BI_IsDirectDicided_IsDecided' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, CallFunc_IsKeyInputOK_OK_1) == 0x000031, "Member 'BattleCommand_C_SeqEscapeMenuFunc::CallFunc_IsKeyInputOK_OK_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, CallFunc_BooleanOR_ReturnValue) == 0x000032, "Member 'BattleCommand_C_SeqEscapeMenuFunc::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, CallFunc_GetActorIndex_m_PartyIndex) == 0x000034, "Member 'BattleCommand_C_SeqEscapeMenuFunc::CallFunc_GetActorIndex_m_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, CallFunc_IsActionPadCheck_Success_1) == 0x000038, "Member 'BattleCommand_C_SeqEscapeMenuFunc::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, CallFunc_BooleanAND_ReturnValue_1) == 0x000039, "Member 'BattleCommand_C_SeqEscapeMenuFunc::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, K2Node_MakeStruct_BtlCommand) == 0x00003C, "Member 'BattleCommand_C_SeqEscapeMenuFunc::K2Node_MakeStruct_BtlCommand' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BattleCommand_C_SeqEscapeMenuFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqEscapeMenuFunc, K2Node_SwitchInteger_CmpSuccess) == 0x000050, "Member 'BattleCommand_C_SeqEscapeMenuFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SeqActEndMenuFunc
// 0x0058 (0x0058 - 0x0000)
struct BattleCommand_C_SeqActEndMenuFunc final
{
public:
	bool                                          CallFunc_IsKeyInputOK_OK;                          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79AE[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateIconHelpWindow_WindowClose;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCancel_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAction_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79AF[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetTargetSelect_BPI;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetTargetSelect_BPI_1;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsDirectDicided_IsDecided;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK_1;                        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK_2;                        // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetActorIndex_m_PartyIndex;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_2;               // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBtlCommand                            K2Node_MakeStruct_BtlCommand;                      // 0x003C(0x0010)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_SeqActEndMenuFunc) == 0x000008, "Wrong alignment on BattleCommand_C_SeqActEndMenuFunc");
static_assert(sizeof(BattleCommand_C_SeqActEndMenuFunc) == 0x000058, "Wrong size on BattleCommand_C_SeqActEndMenuFunc");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_IsKeyInputOK_OK) == 0x000000, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_IsKeyInputOK_OK' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_IsActionPadCheck_Success) == 0x000001, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, Temp_int_Variable) == 0x000004, "Member 'BattleCommand_C_SeqActEndMenuFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_UpdateIconHelpWindow_WindowClose) == 0x000009, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_UpdateIconHelpWindow_WindowClose' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_CheckCancel_ReturnValue) == 0x00000A, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_CheckCancel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_CheckAction_ReturnValue) == 0x00000B, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_CheckAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_BI_GetTargetSelect_BPI) == 0x000010, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_BI_GetTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_BI_GetTargetSelect_BPI_1) == 0x000020, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_BI_GetTargetSelect_BPI_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_BI_IsDirectDicided_IsDecided) == 0x000030, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_BI_IsDirectDicided_IsDecided' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_IsKeyInputOK_OK_1) == 0x000031, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_IsKeyInputOK_OK_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_BooleanOR_ReturnValue) == 0x000032, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_IsKeyInputOK_OK_2) == 0x000033, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_IsKeyInputOK_OK_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_GetActorIndex_m_PartyIndex) == 0x000034, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_GetActorIndex_m_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_IsActionPadCheck_Success_1) == 0x000038, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_BooleanAND_ReturnValue_1) == 0x000039, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_IsActionPadCheck_Success_2) == 0x00003A, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_IsActionPadCheck_Success_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_BooleanAND_ReturnValue_2) == 0x00003B, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, K2Node_MakeStruct_BtlCommand) == 0x00003C, "Member 'BattleCommand_C_SeqActEndMenuFunc::K2Node_MakeStruct_BtlCommand' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BattleCommand_C_SeqActEndMenuFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqActEndMenuFunc, K2Node_SwitchInteger_CmpSuccess) == 0x000050, "Member 'BattleCommand_C_SeqActEndMenuFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SeqTalkMenuFunc
// 0x0040 (0x0040 - 0x0000)
struct BattleCommand_C_SeqTalkMenuFunc final
{
public:
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	struct FBtlCommand                            K2Node_MakeStruct_BtlCommand;                      // 0x0010(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79B0[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_TaskFactoryAddCamRailTask_retValue;    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_SeqTalkMenuFunc) == 0x000008, "Wrong alignment on BattleCommand_C_SeqTalkMenuFunc");
static_assert(sizeof(BattleCommand_C_SeqTalkMenuFunc) == 0x000040, "Wrong size on BattleCommand_C_SeqTalkMenuFunc");
static_assert(offsetof(BattleCommand_C_SeqTalkMenuFunc, Lo_WaitTaskList) == 0x000000, "Member 'BattleCommand_C_SeqTalkMenuFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTalkMenuFunc, K2Node_MakeStruct_BtlCommand) == 0x000010, "Member 'BattleCommand_C_SeqTalkMenuFunc::K2Node_MakeStruct_BtlCommand' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTalkMenuFunc, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BattleCommand_C_SeqTalkMenuFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTalkMenuFunc, CallFunc_GetObjectName_ReturnValue) == 0x000028, "Member 'BattleCommand_C_SeqTalkMenuFunc::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTalkMenuFunc, CallFunc_BI_TaskFactoryAddCamRailTask_retValue) == 0x000038, "Member 'BattleCommand_C_SeqTalkMenuFunc::CallFunc_BI_TaskFactoryAddCamRailTask_retValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SeqConditionFunc
// 0x0028 (0x0028 - 0x0000)
struct BattleCommand_C_SeqConditionFunc final
{
public:
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsAllMenuDisappeared_IsDisappeared;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79B1[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79B2[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_BattleStatusIsFinished_OutFinished;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_AutoSeqPause_retValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_SeqConditionFunc) == 0x000008, "Wrong alignment on BattleCommand_C_SeqConditionFunc");
static_assert(sizeof(BattleCommand_C_SeqConditionFunc) == 0x000028, "Wrong size on BattleCommand_C_SeqConditionFunc");
static_assert(offsetof(BattleCommand_C_SeqConditionFunc, Lo_WaitTaskList) == 0x000000, "Member 'BattleCommand_C_SeqConditionFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqConditionFunc, CallFunc_IsAllMenuDisappeared_IsDisappeared) == 0x000010, "Member 'BattleCommand_C_SeqConditionFunc::CallFunc_IsAllMenuDisappeared_IsDisappeared' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqConditionFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BattleCommand_C_SeqConditionFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqConditionFunc, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'BattleCommand_C_SeqConditionFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqConditionFunc, Temp_int_Variable) == 0x00001C, "Member 'BattleCommand_C_SeqConditionFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqConditionFunc, CallFunc_BI_BattleStatusIsFinished_OutFinished) == 0x000020, "Member 'BattleCommand_C_SeqConditionFunc::CallFunc_BI_BattleStatusIsFinished_OutFinished' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqConditionFunc, CallFunc_BI_AutoSeqPause_retValue) == 0x000021, "Member 'BattleCommand_C_SeqConditionFunc::CallFunc_BI_AutoSeqPause_retValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.IsInitialized
// 0x0001 (0x0001 - 0x0000)
struct BattleCommand_C_IsInitialized final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_IsInitialized) == 0x000001, "Wrong alignment on BattleCommand_C_IsInitialized");
static_assert(sizeof(BattleCommand_C_IsInitialized) == 0x000001, "Wrong size on BattleCommand_C_IsInitialized");
static_assert(offsetof(BattleCommand_C_IsInitialized, RetValue) == 0x000000, "Member 'BattleCommand_C_IsInitialized::RetValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.UIRemoveFromParent
// 0x0002 (0x0002 - 0x0000)
struct BattleCommand_C_UIRemoveFromParent final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_UIRemoveFromParent) == 0x000001, "Wrong alignment on BattleCommand_C_UIRemoveFromParent");
static_assert(sizeof(BattleCommand_C_UIRemoveFromParent) == 0x000002, "Wrong size on BattleCommand_C_UIRemoveFromParent");
static_assert(offsetof(BattleCommand_C_UIRemoveFromParent, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BattleCommand_C_UIRemoveFromParent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UIRemoveFromParent, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BattleCommand_C_UIRemoveFromParent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.IsFinished
// 0x0030 (0x0030 - 0x0000)
struct BattleCommand_C_IsFinished final
{
public:
	bool                                          RetValue;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsResultCommandRecome_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSummonSkill_IsSummon;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAllMenuDisappeared_IsDisappeared;       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79B3[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79B4[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_GetTaskFactoryParentNameTaskCnt_retValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_IsFinished) == 0x000008, "Wrong alignment on BattleCommand_C_IsFinished");
static_assert(sizeof(BattleCommand_C_IsFinished) == 0x000030, "Wrong size on BattleCommand_C_IsFinished");
static_assert(offsetof(BattleCommand_C_IsFinished, RetValue) == 0x000000, "Member 'BattleCommand_C_IsFinished::RetValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsFinished, CallFunc_IsResultCommandRecome_ReturnValue) == 0x000001, "Member 'BattleCommand_C_IsFinished::CallFunc_IsResultCommandRecome_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsFinished, CallFunc_IsSummonSkill_IsSummon) == 0x000002, "Member 'BattleCommand_C_IsFinished::CallFunc_IsSummonSkill_IsSummon' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsFinished, Temp_bool_Variable) == 0x000003, "Member 'BattleCommand_C_IsFinished::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsFinished, Temp_bool_Variable_1) == 0x000004, "Member 'BattleCommand_C_IsFinished::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsFinished, CallFunc_IsAllMenuDisappeared_IsDisappeared) == 0x000005, "Member 'BattleCommand_C_IsFinished::CallFunc_IsAllMenuDisappeared_IsDisappeared' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsFinished, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'BattleCommand_C_IsFinished::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsFinished, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000007, "Member 'BattleCommand_C_IsFinished::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsFinished, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'BattleCommand_C_IsFinished::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsFinished, CallFunc_GetObjectName_ReturnValue) == 0x000010, "Member 'BattleCommand_C_IsFinished::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsFinished, CallFunc_BooleanOR_ReturnValue_1) == 0x000020, "Member 'BattleCommand_C_IsFinished::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsFinished, CallFunc_BooleanOR_ReturnValue_2) == 0x000021, "Member 'BattleCommand_C_IsFinished::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsFinished, CallFunc_BI_GetTaskFactoryParentNameTaskCnt_retValue) == 0x000024, "Member 'BattleCommand_C_IsFinished::CallFunc_BI_GetTaskFactoryParentNameTaskCnt_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsFinished, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'BattleCommand_C_IsFinished::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsFinished, K2Node_Select_Default) == 0x000029, "Member 'BattleCommand_C_IsFinished::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsFinished, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BattleCommand_C_IsFinished::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsFinished, CallFunc_BooleanAND_ReturnValue_1) == 0x00002B, "Member 'BattleCommand_C_IsFinished::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.GetResult
// 0x0010 (0x0010 - 0x0000)
struct BattleCommand_C_GetResult final
{
public:
	struct FBtlCommand                            RetValue;                                          // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BattleCommand_C_GetResult) == 0x000004, "Wrong alignment on BattleCommand_C_GetResult");
static_assert(sizeof(BattleCommand_C_GetResult) == 0x000010, "Wrong size on BattleCommand_C_GetResult");
static_assert(offsetof(BattleCommand_C_GetResult, RetValue) == 0x000000, "Member 'BattleCommand_C_GetResult::RetValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.GetSkillMenuCursor
// 0x0014 (0x0014 - 0x0000)
struct BattleCommand_C_GetSkillMenuCursor final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Top_Index;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResult_CursorIndex;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResult_ID;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResult_IsUsable;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetResult_IsSkill;                        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_GetSkillMenuCursor) == 0x000004, "Wrong alignment on BattleCommand_C_GetSkillMenuCursor");
static_assert(sizeof(BattleCommand_C_GetSkillMenuCursor) == 0x000014, "Wrong size on BattleCommand_C_GetSkillMenuCursor");
static_assert(offsetof(BattleCommand_C_GetSkillMenuCursor, PartyIndex) == 0x000000, "Member 'BattleCommand_C_GetSkillMenuCursor::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetSkillMenuCursor, Top_Index) == 0x000004, "Member 'BattleCommand_C_GetSkillMenuCursor::Top_Index' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetSkillMenuCursor, CallFunc_GetResult_CursorIndex) == 0x000008, "Member 'BattleCommand_C_GetSkillMenuCursor::CallFunc_GetResult_CursorIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetSkillMenuCursor, CallFunc_GetResult_ID) == 0x00000C, "Member 'BattleCommand_C_GetSkillMenuCursor::CallFunc_GetResult_ID' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetSkillMenuCursor, CallFunc_GetResult_IsUsable) == 0x000010, "Member 'BattleCommand_C_GetSkillMenuCursor::CallFunc_GetResult_IsUsable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetSkillMenuCursor, CallFunc_GetResult_IsSkill) == 0x000011, "Member 'BattleCommand_C_GetSkillMenuCursor::CallFunc_GetResult_IsSkill' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.GetItemMenuCursor
// 0x0014 (0x0014 - 0x0000)
struct BattleCommand_C_GetItemMenuCursor final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TopIndex;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResult_CursorIndex;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResult_ID;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResult_IsUsable;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetResult_IsSkill;                        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_GetItemMenuCursor) == 0x000004, "Wrong alignment on BattleCommand_C_GetItemMenuCursor");
static_assert(sizeof(BattleCommand_C_GetItemMenuCursor) == 0x000014, "Wrong size on BattleCommand_C_GetItemMenuCursor");
static_assert(offsetof(BattleCommand_C_GetItemMenuCursor, PartyIndex) == 0x000000, "Member 'BattleCommand_C_GetItemMenuCursor::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemMenuCursor, TopIndex) == 0x000004, "Member 'BattleCommand_C_GetItemMenuCursor::TopIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemMenuCursor, CallFunc_GetResult_CursorIndex) == 0x000008, "Member 'BattleCommand_C_GetItemMenuCursor::CallFunc_GetResult_CursorIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemMenuCursor, CallFunc_GetResult_ID) == 0x00000C, "Member 'BattleCommand_C_GetItemMenuCursor::CallFunc_GetResult_ID' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemMenuCursor, CallFunc_GetResult_IsUsable) == 0x000010, "Member 'BattleCommand_C_GetItemMenuCursor::CallFunc_GetResult_IsUsable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetItemMenuCursor, CallFunc_GetResult_IsSkill) == 0x000011, "Member 'BattleCommand_C_GetItemMenuCursor::CallFunc_GetResult_IsSkill' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.EndSeq
// 0x0018 (0x0018 - 0x0000)
struct BattleCommand_C_EndSeq final
{
public:
	struct FMouseCursorState                      CallFunc_PopShowMouseCursor_ReturnValue;           // 0x0000(0x0018)()
};
static_assert(alignof(BattleCommand_C_EndSeq) == 0x000008, "Wrong alignment on BattleCommand_C_EndSeq");
static_assert(sizeof(BattleCommand_C_EndSeq) == 0x000018, "Wrong size on BattleCommand_C_EndSeq");
static_assert(offsetof(BattleCommand_C_EndSeq, CallFunc_PopShowMouseCursor_ReturnValue) == 0x000000, "Member 'BattleCommand_C_EndSeq::CallFunc_PopShowMouseCursor_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.Pause
// 0x0001 (0x0001 - 0x0000)
struct BattleCommand_C_Pause final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_Pause) == 0x000001, "Wrong alignment on BattleCommand_C_Pause");
static_assert(sizeof(BattleCommand_C_Pause) == 0x000001, "Wrong size on BattleCommand_C_Pause");
static_assert(offsetof(BattleCommand_C_Pause, Sw) == 0x000000, "Member 'BattleCommand_C_Pause::Sw' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SetMainWork
// 0x0010 (0x0010 - 0x0000)
struct BattleCommand_C_SetMainWork final
{
public:
	TScriptInterface<class IBPI_BattleMain_C>     MainWork;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_SetMainWork) == 0x000008, "Wrong alignment on BattleCommand_C_SetMainWork");
static_assert(sizeof(BattleCommand_C_SetMainWork) == 0x000010, "Wrong size on BattleCommand_C_SetMainWork");
static_assert(offsetof(BattleCommand_C_SetMainWork, MainWork) == 0x000000, "Member 'BattleCommand_C_SetMainWork::MainWork' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.StartItemMenu_Core
// 0x0018 (0x0018 - 0x0000)
struct BattleCommand_C_StartItemMenu_Core final
{
public:
	int32                                         CursorIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TopIndex;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBtlUIItemData>                 CallFunc_GetItemData_ItemData;                     // 0x0008(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleCommand_C_StartItemMenu_Core) == 0x000008, "Wrong alignment on BattleCommand_C_StartItemMenu_Core");
static_assert(sizeof(BattleCommand_C_StartItemMenu_Core) == 0x000018, "Wrong size on BattleCommand_C_StartItemMenu_Core");
static_assert(offsetof(BattleCommand_C_StartItemMenu_Core, CursorIndex) == 0x000000, "Member 'BattleCommand_C_StartItemMenu_Core::CursorIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartItemMenu_Core, TopIndex) == 0x000004, "Member 'BattleCommand_C_StartItemMenu_Core::TopIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartItemMenu_Core, CallFunc_GetItemData_ItemData) == 0x000008, "Member 'BattleCommand_C_StartItemMenu_Core::CallFunc_GetItemData_ItemData' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CheckUsedSkillNahobino
// 0x0050 (0x0050 - 0x0000)
struct BattleCommand_C_CheckUsedSkillNahobino final
{
public:
	int32                                         SkillId;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79B5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CheckSkillId;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<bool>                                  IsUsedList;                                        // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsUsed;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79B6[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79B7[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79B8[0x1];                                     // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CheckUsedSkillNahobino) == 0x000008, "Wrong alignment on BattleCommand_C_CheckUsedSkillNahobino");
static_assert(sizeof(BattleCommand_C_CheckUsedSkillNahobino) == 0x000050, "Wrong size on BattleCommand_C_CheckUsedSkillNahobino");
static_assert(offsetof(BattleCommand_C_CheckUsedSkillNahobino, SkillId) == 0x000000, "Member 'BattleCommand_C_CheckUsedSkillNahobino::SkillId' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckUsedSkillNahobino, CheckSkillId) == 0x000008, "Member 'BattleCommand_C_CheckUsedSkillNahobino::CheckSkillId' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckUsedSkillNahobino, IsUsedList) == 0x000018, "Member 'BattleCommand_C_CheckUsedSkillNahobino::IsUsedList' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckUsedSkillNahobino, IsUsed) == 0x000028, "Member 'BattleCommand_C_CheckUsedSkillNahobino::IsUsed' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckUsedSkillNahobino, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BattleCommand_C_CheckUsedSkillNahobino::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckUsedSkillNahobino, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'BattleCommand_C_CheckUsedSkillNahobino::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckUsedSkillNahobino, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BattleCommand_C_CheckUsedSkillNahobino::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckUsedSkillNahobino, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BattleCommand_C_CheckUsedSkillNahobino::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckUsedSkillNahobino, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BattleCommand_C_CheckUsedSkillNahobino::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckUsedSkillNahobino, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000040, "Member 'BattleCommand_C_CheckUsedSkillNahobino::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckUsedSkillNahobino, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BattleCommand_C_CheckUsedSkillNahobino::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckUsedSkillNahobino, CallFunc_BooleanOR_ReturnValue) == 0x000042, "Member 'BattleCommand_C_CheckUsedSkillNahobino::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckUsedSkillNahobino, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BattleCommand_C_CheckUsedSkillNahobino::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckUsedSkillNahobino, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000048, "Member 'BattleCommand_C_CheckUsedSkillNahobino::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CheckSkillList_UseData
// 0x0180 (0x0180 - 0x0000)
struct BattleCommand_C_CheckSkillList_UseData final
{
public:
	TArray<struct FBtlUISkill_UseData_st>         SkillUseData;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FBtlUISkill_UseData_st>         Out;                                               // 0x0010(0x0010)(Parm, OutParm)
	E_SKILL_TARGET                                Target;                                            // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79B9[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtlUISkill_UseData_st>         Lo_List;                                           // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79BA[0x1];                                     // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79BB[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlUISkill_UseData_st                 CallFunc_Array_Get_Item;                           // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79BC[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0068(0x0100)(ConstParm)
	E_SKILL_TARGET                                CallFunc_SkillBaseDataGetValue_Area_ReturnValue;   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79BD[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79BE[0x3];                                     // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CheckSkillList_UseData) == 0x000008, "Wrong alignment on BattleCommand_C_CheckSkillList_UseData");
static_assert(sizeof(BattleCommand_C_CheckSkillList_UseData) == 0x000180, "Wrong size on BattleCommand_C_CheckSkillList_UseData");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, SkillUseData) == 0x000000, "Member 'BattleCommand_C_CheckSkillList_UseData::SkillUseData' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, Out) == 0x000010, "Member 'BattleCommand_C_CheckSkillList_UseData::Out' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, Target) == 0x000020, "Member 'BattleCommand_C_CheckSkillList_UseData::Target' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, Lo_List) == 0x000028, "Member 'BattleCommand_C_CheckSkillList_UseData::Lo_List' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BattleCommand_C_CheckSkillList_UseData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003C, "Member 'BattleCommand_C_CheckSkillList_UseData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00003D, "Member 'BattleCommand_C_CheckSkillList_UseData::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, CallFunc_BooleanOR_ReturnValue) == 0x00003E, "Member 'BattleCommand_C_CheckSkillList_UseData::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BattleCommand_C_CheckSkillList_UseData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, CallFunc_BooleanOR_ReturnValue_1) == 0x000044, "Member 'BattleCommand_C_CheckSkillList_UseData::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, CallFunc_Array_Get_Item) == 0x000048, "Member 'BattleCommand_C_CheckSkillList_UseData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, CallFunc_BooleanOR_ReturnValue_2) == 0x000060, "Member 'BattleCommand_C_CheckSkillList_UseData::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, CallFunc_GetSkillBaseData_ReturnValue) == 0x000068, "Member 'BattleCommand_C_CheckSkillList_UseData::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, CallFunc_SkillBaseDataGetValue_Area_ReturnValue) == 0x000168, "Member 'BattleCommand_C_CheckSkillList_UseData::CallFunc_SkillBaseDataGetValue_Area_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, Temp_int_Loop_Counter_Variable) == 0x00016C, "Member 'BattleCommand_C_CheckSkillList_UseData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, CallFunc_Array_Add_ReturnValue) == 0x000170, "Member 'BattleCommand_C_CheckSkillList_UseData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, CallFunc_Less_IntInt_ReturnValue) == 0x000174, "Member 'BattleCommand_C_CheckSkillList_UseData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, CallFunc_Add_IntInt_ReturnValue) == 0x000178, "Member 'BattleCommand_C_CheckSkillList_UseData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckSkillList_UseData, CallFunc_BooleanAND_ReturnValue) == 0x00017C, "Member 'BattleCommand_C_CheckSkillList_UseData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CallCommandCamera
// 0x0028 (0x0028 - 0x0000)
struct BattleCommand_C_CallCommandCamera final
{
public:
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_TaskFactoryAddCamRailTask_retValue;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_CallCommandCamera) == 0x000008, "Wrong alignment on BattleCommand_C_CallCommandCamera");
static_assert(sizeof(BattleCommand_C_CallCommandCamera) == 0x000028, "Wrong size on BattleCommand_C_CallCommandCamera");
static_assert(offsetof(BattleCommand_C_CallCommandCamera, Lo_WaitTaskList) == 0x000000, "Member 'BattleCommand_C_CallCommandCamera::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallCommandCamera, CallFunc_GetObjectName_ReturnValue) == 0x000010, "Member 'BattleCommand_C_CallCommandCamera::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallCommandCamera, CallFunc_BI_TaskFactoryAddCamRailTask_retValue) == 0x000020, "Member 'BattleCommand_C_CallCommandCamera::CallFunc_BI_TaskFactoryAddCamRailTask_retValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.ChangeCursorFunc
// 0x0088 (0x0088 - 0x0000)
struct BattleCommand_C_ChangeCursorFunc final
{
public:
	bool                                          IsSkill;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsTargetStart;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCallCamera;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsSelf;                                         // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsSkill;                                        // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsCallCamera;                                   // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_CursorEnable;                                   // 0x0006(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsStart;                                        // 0x0007(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                Lo_Area;                                           // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_SIDE                                    Lo_side;                                           // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_InvTarget;                                      // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79BF[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetBattleTargetSelect_BPI;             // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                CallFunc_BI_GetCurrentTargetType_TargetType;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79C0[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUseItemData                           CallFunc_GetUseItemData_ReturnValue;               // 0x0024(0x005C)(ConstParm, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_TargetSelectStartSelect_retValue;      // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_ChangeCursorFunc) == 0x000008, "Wrong alignment on BattleCommand_C_ChangeCursorFunc");
static_assert(sizeof(BattleCommand_C_ChangeCursorFunc) == 0x000088, "Wrong size on BattleCommand_C_ChangeCursorFunc");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, IsSkill) == 0x000000, "Member 'BattleCommand_C_ChangeCursorFunc::IsSkill' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, IsTargetStart) == 0x000001, "Member 'BattleCommand_C_ChangeCursorFunc::IsTargetStart' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, IsCallCamera) == 0x000002, "Member 'BattleCommand_C_ChangeCursorFunc::IsCallCamera' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, Lo_IsSelf) == 0x000003, "Member 'BattleCommand_C_ChangeCursorFunc::Lo_IsSelf' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, Lo_IsSkill) == 0x000004, "Member 'BattleCommand_C_ChangeCursorFunc::Lo_IsSkill' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, Lo_IsCallCamera) == 0x000005, "Member 'BattleCommand_C_ChangeCursorFunc::Lo_IsCallCamera' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, Lo_CursorEnable) == 0x000006, "Member 'BattleCommand_C_ChangeCursorFunc::Lo_CursorEnable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, Lo_IsStart) == 0x000007, "Member 'BattleCommand_C_ChangeCursorFunc::Lo_IsStart' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, Lo_Area) == 0x000008, "Member 'BattleCommand_C_ChangeCursorFunc::Lo_Area' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, Lo_side) == 0x000009, "Member 'BattleCommand_C_ChangeCursorFunc::Lo_side' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, Lo_InvTarget) == 0x00000A, "Member 'BattleCommand_C_ChangeCursorFunc::Lo_InvTarget' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, CallFunc_BI_GetBattleTargetSelect_BPI) == 0x000010, "Member 'BattleCommand_C_ChangeCursorFunc::CallFunc_BI_GetBattleTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, CallFunc_BI_GetCurrentTargetType_TargetType) == 0x000020, "Member 'BattleCommand_C_ChangeCursorFunc::CallFunc_BI_GetCurrentTargetType_TargetType' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, CallFunc_Greater_IntInt_ReturnValue) == 0x000021, "Member 'BattleCommand_C_ChangeCursorFunc::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, CallFunc_GetUseItemData_ReturnValue) == 0x000024, "Member 'BattleCommand_C_ChangeCursorFunc::CallFunc_GetUseItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, K2Node_SwitchEnum_CmpSuccess) == 0x000080, "Member 'BattleCommand_C_ChangeCursorFunc::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000081, "Member 'BattleCommand_C_ChangeCursorFunc::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ChangeCursorFunc, CallFunc_BI_TargetSelectStartSelect_retValue) == 0x000082, "Member 'BattleCommand_C_ChangeCursorFunc::CallFunc_BI_TargetSelectStartSelect_retValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SetAllUIVisibility
// 0x0058 (0x0058 - 0x0000)
struct BattleCommand_C_SetAllUIVisibility final
{
public:
	bool                                          Sw;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Lo_Visibility;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79C1[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Disappear_self_CastInput;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_Appear_self_CastInput;                    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79C2[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor;     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_SetAllUIVisibility) == 0x000008, "Wrong alignment on BattleCommand_C_SetAllUIVisibility");
static_assert(sizeof(BattleCommand_C_SetAllUIVisibility) == 0x000058, "Wrong size on BattleCommand_C_SetAllUIVisibility");
static_assert(offsetof(BattleCommand_C_SetAllUIVisibility, Sw) == 0x000000, "Member 'BattleCommand_C_SetAllUIVisibility::Sw' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetAllUIVisibility, Lo_Visibility) == 0x000001, "Member 'BattleCommand_C_SetAllUIVisibility::Lo_Visibility' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetAllUIVisibility, Temp_bool_Variable) == 0x000002, "Member 'BattleCommand_C_SetAllUIVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetAllUIVisibility, Temp_byte_Variable) == 0x000003, "Member 'BattleCommand_C_SetAllUIVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetAllUIVisibility, Temp_byte_Variable_1) == 0x000004, "Member 'BattleCommand_C_SetAllUIVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetAllUIVisibility, K2Node_Select_Default) == 0x000005, "Member 'BattleCommand_C_SetAllUIVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetAllUIVisibility, CallFunc_IsValid_ReturnValue) == 0x000006, "Member 'BattleCommand_C_SetAllUIVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetAllUIVisibility, CallFunc_Disappear_self_CastInput) == 0x000008, "Member 'BattleCommand_C_SetAllUIVisibility::CallFunc_Disappear_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetAllUIVisibility, CallFunc_Appear_self_CastInput) == 0x000018, "Member 'BattleCommand_C_SetAllUIVisibility::CallFunc_Appear_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetAllUIVisibility, CallFunc_Get_ReturnValue) == 0x000028, "Member 'BattleCommand_C_SetAllUIVisibility::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetAllUIVisibility, K2Node_DynamicCast_AsBPI_UIManager) == 0x000030, "Member 'BattleCommand_C_SetAllUIVisibility::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetAllUIVisibility, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BattleCommand_C_SetAllUIVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetAllUIVisibility, CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor) == 0x000048, "Member 'BattleCommand_C_SetAllUIVisibility::CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SeqTargetSelectFunc
// 0x00F8 (0x00F8 - 0x0000)
struct BattleCommand_C_SeqTargetSelectFunc final
{
public:
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_TargetSelectPause_retValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateIconHelpWindow_WindowClose;         // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK;                          // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCancel_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79C3[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetTargetSelect_BPI;                   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetTargetSelect_BPI_1;                 // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_IsDirectDicided_IsDecided;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_TargetSelectPause_retValue_1;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK_1;                        // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK_2;                        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK_3;                        // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79C4[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetTargetSelect_BPI_2;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckAction_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79C5[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_GetCurrentTargetIndex_PartyIndex;      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79C6[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleUIManager_C> CallFunc_BI_GetBattleUIManager_Ret;                // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_IsDisappearedMainUI_IsDisappeared;     // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsResultCommandRecome_ReturnValue;        // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79C7[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelectableTarget_Selectable;            // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillTargetSelect_IsSkill;              // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_2;               // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHaveToHideActionName_HaveToDo;          // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79C8[0x2];                                     // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleUIManager_C> CallFunc_BI_GetBattleUIManager_Ret_1;              // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleUIManager_C> CallFunc_BI_GetBattleUIManager_Ret_2;              // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_PressIconSlideIn_Ret;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_UpliftingGaugeSlideOut_Ret;            // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_PressIconSlideOut_Ret;                 // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_UpliftingGaugeSlideIn_Ret;             // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79C9[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetTargetSelect_BPI_3;                 // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsResultCommandRecome_ReturnValue_1;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79CA[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_StockSelectGetResult_retValue;         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_SetPlayerTargetIndex_NoUse;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_StockSelectClose_retValue;             // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_StockSelectIsCancel_retValue;          // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_StockSelectIsFinished_retValue;        // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsResultCommandRecome_ReturnValue_2;      // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_StockSelectSeqStart_retValue;          // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79CB[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetTargetSelect_BPI_4;                 // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_2;                               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_SetOverrideCommandCamera_NoUse;        // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79CC[0x2];                                     // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_SeqTargetSelectFunc) == 0x000008, "Wrong alignment on BattleCommand_C_SeqTargetSelectFunc");
static_assert(sizeof(BattleCommand_C_SeqTargetSelectFunc) == 0x0000F8, "Wrong size on BattleCommand_C_SeqTargetSelectFunc");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, Lo_WaitTaskList) == 0x000000, "Member 'BattleCommand_C_SeqTargetSelectFunc::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, Temp_int_Variable) == 0x000010, "Member 'BattleCommand_C_SeqTargetSelectFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_TargetSelectPause_retValue) == 0x000014, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_TargetSelectPause_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_UpdateIconHelpWindow_WindowClose) == 0x000015, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_UpdateIconHelpWindow_WindowClose' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_IsKeyInputOK_OK) == 0x000016, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_IsKeyInputOK_OK' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_IsActionPadCheck_Success) == 0x000017, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_CheckCancel_ReturnValue) == 0x000018, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_CheckCancel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_GetTargetSelect_BPI) == 0x000020, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_GetTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_GetTargetSelect_BPI_1) == 0x000030, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_GetTargetSelect_BPI_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_IsDirectDicided_IsDecided) == 0x000040, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_IsDirectDicided_IsDecided' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_TargetSelectPause_retValue_1) == 0x000041, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_TargetSelectPause_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_IsKeyInputOK_OK_1) == 0x000042, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_IsKeyInputOK_OK_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BooleanAND_ReturnValue_1) == 0x000043, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_IsKeyInputOK_OK_2) == 0x000044, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_IsKeyInputOK_OK_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_IsKeyInputOK_OK_3) == 0x000045, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_IsKeyInputOK_OK_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_GetTargetSelect_BPI_2) == 0x000048, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_GetTargetSelect_BPI_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_CheckAction_ReturnValue) == 0x000058, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_CheckAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_GetCurrentTargetIndex_PartyIndex) == 0x00005C, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_GetCurrentTargetIndex_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BooleanOR_ReturnValue) == 0x000060, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, Temp_int_Variable_1) == 0x000064, "Member 'BattleCommand_C_SeqTargetSelectFunc::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_GetBattleUIManager_Ret) == 0x000068, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_GetBattleUIManager_Ret' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_IsDisappearedMainUI_IsDisappeared) == 0x00007C, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_IsDisappearedMainUI_IsDisappeared' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_IsResultCommandRecome_ReturnValue) == 0x00007D, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_IsResultCommandRecome_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000084, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_IsSelectableTarget_Selectable) == 0x000085, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_IsSelectableTarget_Selectable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_Not_PreBool_ReturnValue) == 0x000086, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_IsSkillTargetSelect_IsSkill) == 0x000087, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_IsSkillTargetSelect_IsSkill' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_IsActionPadCheck_Success_1) == 0x000088, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BooleanAND_ReturnValue_2) == 0x000089, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_IsActionPadCheck_Success_2) == 0x00008A, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_IsActionPadCheck_Success_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BooleanAND_ReturnValue_3) == 0x00008B, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BooleanAND_ReturnValue_4) == 0x00008C, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_IsHaveToHideActionName_HaveToDo) == 0x00008D, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_IsHaveToHideActionName_HaveToDo' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_GetBattleUIManager_Ret_1) == 0x000090, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_GetBattleUIManager_Ret_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_GetBattleUIManager_Ret_2) == 0x0000A0, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_GetBattleUIManager_Ret_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_PressIconSlideIn_Ret) == 0x0000B0, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_PressIconSlideIn_Ret' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_UpliftingGaugeSlideOut_Ret) == 0x0000B1, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_UpliftingGaugeSlideOut_Ret' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_PressIconSlideOut_Ret) == 0x0000B2, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_PressIconSlideOut_Ret' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_UpliftingGaugeSlideIn_Ret) == 0x0000B3, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_UpliftingGaugeSlideIn_Ret' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_GetTargetSelect_BPI_3) == 0x0000B8, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_GetTargetSelect_BPI_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_IsResultCommandRecome_ReturnValue_1) == 0x0000C8, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_IsResultCommandRecome_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_StockSelectGetResult_retValue) == 0x0000CC, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_StockSelectGetResult_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_SetPlayerTargetIndex_NoUse) == 0x0000D0, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_SetPlayerTargetIndex_NoUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_StockSelectClose_retValue) == 0x0000D1, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_StockSelectClose_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_StockSelectIsCancel_retValue) == 0x0000D2, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_StockSelectIsCancel_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_StockSelectIsFinished_retValue) == 0x0000D3, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_StockSelectIsFinished_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_IsResultCommandRecome_ReturnValue_2) == 0x0000D4, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_IsResultCommandRecome_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_StockSelectSeqStart_retValue) == 0x0000D5, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_StockSelectSeqStart_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_GetTargetSelect_BPI_4) == 0x0000D8, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_GetTargetSelect_BPI_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, Temp_int_Variable_2) == 0x0000E8, "Member 'BattleCommand_C_SeqTargetSelectFunc::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_BI_SetOverrideCommandCamera_NoUse) == 0x0000EC, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_BI_SetOverrideCommandCamera_NoUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, K2Node_SwitchInteger_CmpSuccess) == 0x0000ED, "Member 'BattleCommand_C_SeqTargetSelectFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqTargetSelectFunc, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000F0, "Member 'BattleCommand_C_SeqTargetSelectFunc::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.StartTargetSelect
// 0x0030 (0x0030 - 0x0000)
struct BattleCommand_C_StartTargetSelect final
{
public:
	TScriptInterface<class IBPI_BattleTargetSelect_C> Lo_TargetSelect;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKeyInputOK_OK;                          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsResultCommandRecome_ReturnValue;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79CD[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorIndex_m_PartyIndex;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetBattleTargetSelect_BPI;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetCureHPExpection_Skill_NoUse;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetCureHPExpection_Item_NoUse;         // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetTargetType_Item_NoUse;              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetTargetType_Skill_NoUse;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_UI_COMM_STEP                            CallFunc_PrevStep_PrevStep;                        // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_StartTargetSelect) == 0x000008, "Wrong alignment on BattleCommand_C_StartTargetSelect");
static_assert(sizeof(BattleCommand_C_StartTargetSelect) == 0x000030, "Wrong size on BattleCommand_C_StartTargetSelect");
static_assert(offsetof(BattleCommand_C_StartTargetSelect, Lo_TargetSelect) == 0x000000, "Member 'BattleCommand_C_StartTargetSelect::Lo_TargetSelect' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartTargetSelect, CallFunc_IsKeyInputOK_OK) == 0x000010, "Member 'BattleCommand_C_StartTargetSelect::CallFunc_IsKeyInputOK_OK' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartTargetSelect, CallFunc_IsResultCommandRecome_ReturnValue) == 0x000011, "Member 'BattleCommand_C_StartTargetSelect::CallFunc_IsResultCommandRecome_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartTargetSelect, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'BattleCommand_C_StartTargetSelect::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartTargetSelect, CallFunc_GetActorIndex_m_PartyIndex) == 0x000014, "Member 'BattleCommand_C_StartTargetSelect::CallFunc_GetActorIndex_m_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartTargetSelect, CallFunc_BI_GetBattleTargetSelect_BPI) == 0x000018, "Member 'BattleCommand_C_StartTargetSelect::CallFunc_BI_GetBattleTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartTargetSelect, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000028, "Member 'BattleCommand_C_StartTargetSelect::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartTargetSelect, CallFunc_BI_SetCureHPExpection_Skill_NoUse) == 0x000029, "Member 'BattleCommand_C_StartTargetSelect::CallFunc_BI_SetCureHPExpection_Skill_NoUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartTargetSelect, CallFunc_BI_SetCureHPExpection_Item_NoUse) == 0x00002A, "Member 'BattleCommand_C_StartTargetSelect::CallFunc_BI_SetCureHPExpection_Item_NoUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartTargetSelect, CallFunc_BI_SetTargetType_Item_NoUse) == 0x00002B, "Member 'BattleCommand_C_StartTargetSelect::CallFunc_BI_SetTargetType_Item_NoUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartTargetSelect, CallFunc_BI_SetTargetType_Skill_NoUse) == 0x00002C, "Member 'BattleCommand_C_StartTargetSelect::CallFunc_BI_SetTargetType_Skill_NoUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartTargetSelect, CallFunc_PrevStep_PrevStep) == 0x00002D, "Member 'BattleCommand_C_StartTargetSelect::CallFunc_PrevStep_PrevStep' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartTargetSelect, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00002E, "Member 'BattleCommand_C_StartTargetSelect::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartTargetSelect, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00002F, "Member 'BattleCommand_C_StartTargetSelect::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.EndTargetSelect
// 0x0020 (0x0020 - 0x0000)
struct BattleCommand_C_EndTargetSelect final
{
public:
	bool                                          IsDoEscape;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79CE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetTargetSelect_BPI;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetOverrideCommandCamera_NoUse;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_TargetSelectPause_retValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_DrawClearAll_NoUse;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_EndTargetSelect) == 0x000008, "Wrong alignment on BattleCommand_C_EndTargetSelect");
static_assert(sizeof(BattleCommand_C_EndTargetSelect) == 0x000020, "Wrong size on BattleCommand_C_EndTargetSelect");
static_assert(offsetof(BattleCommand_C_EndTargetSelect, IsDoEscape) == 0x000000, "Member 'BattleCommand_C_EndTargetSelect::IsDoEscape' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_EndTargetSelect, CallFunc_BI_GetTargetSelect_BPI) == 0x000008, "Member 'BattleCommand_C_EndTargetSelect::CallFunc_BI_GetTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_EndTargetSelect, CallFunc_BI_SetOverrideCommandCamera_NoUse) == 0x000018, "Member 'BattleCommand_C_EndTargetSelect::CallFunc_BI_SetOverrideCommandCamera_NoUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_EndTargetSelect, CallFunc_BI_TargetSelectPause_retValue) == 0x000019, "Member 'BattleCommand_C_EndTargetSelect::CallFunc_BI_TargetSelectPause_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_EndTargetSelect, CallFunc_BI_DrawClearAll_NoUse) == 0x00001A, "Member 'BattleCommand_C_EndTargetSelect::CallFunc_BI_DrawClearAll_NoUse' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.BI_GetTargetSelect
// 0x0020 (0x0020 - 0x0000)
struct BattleCommand_C_BI_GetTargetSelect final
{
public:
	TScriptInterface<class IBPI_BattleTargetSelect_C> BPI;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetBattleTargetSelect_BPI;             // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_BI_GetTargetSelect) == 0x000008, "Wrong alignment on BattleCommand_C_BI_GetTargetSelect");
static_assert(sizeof(BattleCommand_C_BI_GetTargetSelect) == 0x000020, "Wrong size on BattleCommand_C_BI_GetTargetSelect");
static_assert(offsetof(BattleCommand_C_BI_GetTargetSelect, BPI) == 0x000000, "Member 'BattleCommand_C_BI_GetTargetSelect::BPI' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_BI_GetTargetSelect, CallFunc_BI_GetBattleTargetSelect_BPI) == 0x000010, "Member 'BattleCommand_C_BI_GetTargetSelect::CallFunc_BI_GetBattleTargetSelect_BPI' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.GetBPIPTUtilInterface
// 0x0030 (0x0030 - 0x0000)
struct BattleCommand_C_GetBPIPTUtilInterface final
{
public:
	TScriptInterface<class IBPI_PTUtilInterface>  Ret;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTUtilInterface>  K2Node_DynamicCast_AsBPI_PTUtil_Interface;         // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_GetBPIPTUtilInterface) == 0x000008, "Wrong alignment on BattleCommand_C_GetBPIPTUtilInterface");
static_assert(sizeof(BattleCommand_C_GetBPIPTUtilInterface) == 0x000030, "Wrong size on BattleCommand_C_GetBPIPTUtilInterface");
static_assert(offsetof(BattleCommand_C_GetBPIPTUtilInterface, Ret) == 0x000000, "Member 'BattleCommand_C_GetBPIPTUtilInterface::Ret' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetBPIPTUtilInterface, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleCommand_C_GetBPIPTUtilInterface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetBPIPTUtilInterface, K2Node_DynamicCast_AsBPI_PTUtil_Interface) == 0x000018, "Member 'BattleCommand_C_GetBPIPTUtilInterface::K2Node_DynamicCast_AsBPI_PTUtil_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetBPIPTUtilInterface, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleCommand_C_GetBPIPTUtilInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.GetPTMemDataInterface
// 0x0030 (0x0030 - 0x0000)
struct BattleCommand_C_GetPTMemDataInterface final
{
public:
	TScriptInterface<class IBPI_PTMemDataInterface> Ret;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PTMemDataInterface> K2Node_DynamicCast_AsBPI_PTMem_Data_Interface;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_GetPTMemDataInterface) == 0x000008, "Wrong alignment on BattleCommand_C_GetPTMemDataInterface");
static_assert(sizeof(BattleCommand_C_GetPTMemDataInterface) == 0x000030, "Wrong size on BattleCommand_C_GetPTMemDataInterface");
static_assert(offsetof(BattleCommand_C_GetPTMemDataInterface, Ret) == 0x000000, "Member 'BattleCommand_C_GetPTMemDataInterface::Ret' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetPTMemDataInterface, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleCommand_C_GetPTMemDataInterface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetPTMemDataInterface, K2Node_DynamicCast_AsBPI_PTMem_Data_Interface) == 0x000018, "Member 'BattleCommand_C_GetPTMemDataInterface::K2Node_DynamicCast_AsBPI_PTMem_Data_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetPTMemDataInterface, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleCommand_C_GetPTMemDataInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.GetBPIMainInterface
// 0x0038 (0x0038 - 0x0000)
struct BattleCommand_C_GetBPIMainInterface final
{
public:
	TScriptInterface<class IBPI_MainInterface>    AsBPI_Main_Interface;                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSuccess;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79CF[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MainInterface>    K2Node_DynamicCast_AsBPI_Main_Interface;           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_GetBPIMainInterface) == 0x000008, "Wrong alignment on BattleCommand_C_GetBPIMainInterface");
static_assert(sizeof(BattleCommand_C_GetBPIMainInterface) == 0x000038, "Wrong size on BattleCommand_C_GetBPIMainInterface");
static_assert(offsetof(BattleCommand_C_GetBPIMainInterface, AsBPI_Main_Interface) == 0x000000, "Member 'BattleCommand_C_GetBPIMainInterface::AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetBPIMainInterface, bSuccess) == 0x000010, "Member 'BattleCommand_C_GetBPIMainInterface::bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetBPIMainInterface, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BattleCommand_C_GetBPIMainInterface::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetBPIMainInterface, K2Node_DynamicCast_AsBPI_Main_Interface) == 0x000020, "Member 'BattleCommand_C_GetBPIMainInterface::K2Node_DynamicCast_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetBPIMainInterface, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BattleCommand_C_GetBPIMainInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CallPartyCamera
// 0x0050 (0x0050 - 0x0000)
struct BattleCommand_C_CallPartyCamera final
{
public:
	bool                                          IsSelf;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79D0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTaskList;                                   // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetFirstTargetSelfSide_TargetIndex;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79D1[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_GetBattleMain_BattleMain;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_GetBattleMain_bSuccess;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_StartBlendOverride_retValue;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79D2[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_TaskFactoryAddCamRailTask_retValue;    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_CallPartyCamera) == 0x000008, "Wrong alignment on BattleCommand_C_CallPartyCamera");
static_assert(sizeof(BattleCommand_C_CallPartyCamera) == 0x000050, "Wrong size on BattleCommand_C_CallPartyCamera");
static_assert(offsetof(BattleCommand_C_CallPartyCamera, IsSelf) == 0x000000, "Member 'BattleCommand_C_CallPartyCamera::IsSelf' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallPartyCamera, Lo_WaitTaskList) == 0x000008, "Member 'BattleCommand_C_CallPartyCamera::Lo_WaitTaskList' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallPartyCamera, CallFunc_GetFirstTargetSelfSide_TargetIndex) == 0x000018, "Member 'BattleCommand_C_CallPartyCamera::CallFunc_GetFirstTargetSelfSide_TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallPartyCamera, CallFunc_BI_GetBattleMain_BattleMain) == 0x000020, "Member 'BattleCommand_C_CallPartyCamera::CallFunc_BI_GetBattleMain_BattleMain' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallPartyCamera, CallFunc_BI_GetBattleMain_bSuccess) == 0x000030, "Member 'BattleCommand_C_CallPartyCamera::CallFunc_BI_GetBattleMain_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallPartyCamera, CallFunc_BI_StartBlendOverride_retValue) == 0x000031, "Member 'BattleCommand_C_CallPartyCamera::CallFunc_BI_StartBlendOverride_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallPartyCamera, CallFunc_SelectInt_ReturnValue) == 0x000034, "Member 'BattleCommand_C_CallPartyCamera::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallPartyCamera, CallFunc_GetObjectName_ReturnValue) == 0x000038, "Member 'BattleCommand_C_CallPartyCamera::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallPartyCamera, CallFunc_BI_TaskFactoryAddCamRailTask_retValue) == 0x000048, "Member 'BattleCommand_C_CallPartyCamera::CallFunc_BI_TaskFactoryAddCamRailTask_retValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.BI_GetBattleMain
// 0x0038 (0x0038 - 0x0000)
struct BattleCommand_C_BI_GetBattleMain final
{
public:
	TScriptInterface<class IBPI_BattleMain_C>     BattleMain;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSuccess;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79D3[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     K2Node_DynamicCast_AsBPI_Battle_Main;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_BI_GetBattleMain) == 0x000008, "Wrong alignment on BattleCommand_C_BI_GetBattleMain");
static_assert(sizeof(BattleCommand_C_BI_GetBattleMain) == 0x000038, "Wrong size on BattleCommand_C_BI_GetBattleMain");
static_assert(offsetof(BattleCommand_C_BI_GetBattleMain, BattleMain) == 0x000000, "Member 'BattleCommand_C_BI_GetBattleMain::BattleMain' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_BI_GetBattleMain, bSuccess) == 0x000010, "Member 'BattleCommand_C_BI_GetBattleMain::bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_BI_GetBattleMain, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BattleCommand_C_BI_GetBattleMain::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_BI_GetBattleMain, K2Node_DynamicCast_AsBPI_Battle_Main) == 0x000020, "Member 'BattleCommand_C_BI_GetBattleMain::K2Node_DynamicCast_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_BI_GetBattleMain, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BattleCommand_C_BI_GetBattleMain::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.ShowPlayerParty
// 0x00D8 (0x00D8 - 0x0000)
struct BattleCommand_C_ShowPlayerParty final
{
public:
	bool                                          HideEnemy;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsShowOnlyMyself;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79D4[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lo_WaitTask;                                       // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79D5[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_PartySystem;            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetSideIsTargetList_List;              // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79D6[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetPartyUnit_retValue;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CHARA_MOTION_ID                             CallFunc_BI_GetDefaultIdleMotion_Motion;           // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79D7[0x1];                                     // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue_2;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_GetBattleMain_BattleMain;              // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_GetBattleMain_bSuccess;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79D8[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_GetTaskFactory_retValue;               // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddBeHomeSideAllTask_PecID;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddSetUnitMotion_retValue;             // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitVisibilityTask_PecID;           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitVisibilitySideAll_PecID;        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitVisibilitySideAll_PecID_1;      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitVisibilitySideAll_PecID_2;      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_ShowPlayerParty) == 0x000008, "Wrong alignment on BattleCommand_C_ShowPlayerParty");
static_assert(sizeof(BattleCommand_C_ShowPlayerParty) == 0x0000D8, "Wrong size on BattleCommand_C_ShowPlayerParty");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, HideEnemy) == 0x000000, "Member 'BattleCommand_C_ShowPlayerParty::HideEnemy' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, IsShowOnlyMyself) == 0x000001, "Member 'BattleCommand_C_ShowPlayerParty::IsShowOnlyMyself' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, Lo_WaitTask) == 0x000008, "Member 'BattleCommand_C_ShowPlayerParty::Lo_WaitTask' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BattleCommand_C_ShowPlayerParty::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BattleCommand_C_ShowPlayerParty::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_GetObjectName_ReturnValue) == 0x000028, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_BI_GetPartySystem_PartySystem) == 0x000038, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_BI_GetPartySystem_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_BI_GetSideIsTargetList_List) == 0x000048, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_BI_GetSideIsTargetList_List' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_Array_Get_Item) == 0x000058, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_GetObjectName_ReturnValue_1) == 0x000060, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_BI_GetPartyUnit_retValue) == 0x000070, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_BI_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_BI_GetDefaultIdleMotion_Motion) == 0x000084, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_BI_GetDefaultIdleMotion_Motion' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_Less_IntInt_ReturnValue) == 0x000085, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_Not_PreBool_ReturnValue) == 0x000086, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_GetObjectName_ReturnValue_2) == 0x000088, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_GetObjectName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_BI_GetBattleMain_BattleMain) == 0x000098, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_BI_GetBattleMain_BattleMain' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_BI_GetBattleMain_bSuccess) == 0x0000A8, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_BI_GetBattleMain_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_BI_GetTaskFactory_retValue) == 0x0000B0, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_BI_GetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_BI_AddBeHomeSideAllTask_PecID) == 0x0000C0, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_BI_AddBeHomeSideAllTask_PecID' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_BI_AddSetUnitMotion_retValue) == 0x0000C4, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_BI_AddSetUnitMotion_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_BI_AddUnitVisibilityTask_PecID) == 0x0000C8, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_BI_AddUnitVisibilityTask_PecID' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_BI_AddUnitVisibilitySideAll_PecID) == 0x0000CC, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_BI_AddUnitVisibilitySideAll_PecID' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_BI_AddUnitVisibilitySideAll_PecID_1) == 0x0000D0, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_BI_AddUnitVisibilitySideAll_PecID_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowPlayerParty, CallFunc_BI_AddUnitVisibilitySideAll_PecID_2) == 0x0000D4, "Member 'BattleCommand_C_ShowPlayerParty::CallFunc_BI_AddUnitVisibilitySideAll_PecID_2' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.HidePlayerParty
// 0x01C0 (0x01C0 - 0x0000)
struct BattleCommand_C_HidePlayerParty final
{
public:
	TArray<int32>                                 Lo_WaitTask;                                       // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79D9[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_PartySystem;            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_PartySystem_1;          // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetSideActList_retValue;               // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79DA[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_GetBattleMain_BattleMain;              // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_GetBattleMain_bSuccess;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79DB[0xF];                                     // 0x0091(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_BI_FieldGetComandBoxTransform_retValue;   // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79DC[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetPartyUnit_retValue;                 // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79DD[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCapsuleComponent*                      CallFunc_BI_GetCapsuleComponent_Param;             // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79DE[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79DF[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_GetBattleMain_BattleMain_1;            // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_GetBattleMain_bSuccess_1;              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79E0[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_GetTaskFactory_retValue;               // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddUnitVisibilitySideAll_PecID;        // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79E1[0x8];                                     // 0x0178(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddUnitVisibilityTask_PecID;           // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BI_AddSetActorTransformTask_RetPecID;     // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_HidePlayerParty) == 0x000010, "Wrong alignment on BattleCommand_C_HidePlayerParty");
static_assert(sizeof(BattleCommand_C_HidePlayerParty) == 0x0001C0, "Wrong size on BattleCommand_C_HidePlayerParty");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, Lo_WaitTask) == 0x000000, "Member 'BattleCommand_C_HidePlayerParty::Lo_WaitTask' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BattleCommand_C_HidePlayerParty::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BattleCommand_C_HidePlayerParty::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_BI_GetPartySystem_PartySystem) == 0x000020, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_BI_GetPartySystem_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_BI_GetPartySystem_PartySystem_1) == 0x000030, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_BI_GetPartySystem_PartySystem_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_BI_GetSideActList_retValue) == 0x000040, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_BI_GetSideActList_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_Array_Get_Item) == 0x000050, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_GetObjectName_ReturnValue) == 0x000060, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_GetObjectName_ReturnValue_1) == 0x000070, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_BI_GetBattleMain_BattleMain) == 0x000080, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_BI_GetBattleMain_BattleMain' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_BI_GetBattleMain_bSuccess) == 0x000090, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_BI_GetBattleMain_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_BI_FieldGetComandBoxTransform_retValue) == 0x0000A0, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_BI_FieldGetComandBoxTransform_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_BreakTransform_Location) == 0x0000D0, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_BreakTransform_Rotation) == 0x0000DC, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_BreakTransform_Scale) == 0x0000E8, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_BI_GetPartyUnit_retValue) == 0x0000F8, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_BI_GetPartyUnit_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_GetUpVector_ReturnValue) == 0x000108, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_BI_GetCapsuleComponent_Param) == 0x000118, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_BI_GetCapsuleComponent_Param' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000120, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000124, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000130, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_BI_GetBattleMain_BattleMain_1) == 0x000138, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_BI_GetBattleMain_BattleMain_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_BI_GetBattleMain_bSuccess_1) == 0x000148, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_BI_GetBattleMain_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00014C, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_BI_GetTaskFactory_retValue) == 0x000158, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_BI_GetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_Add_VectorVector_ReturnValue) == 0x000168, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_BI_AddUnitVisibilitySideAll_PecID) == 0x000174, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_BI_AddUnitVisibilitySideAll_PecID' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_MakeTransform_ReturnValue) == 0x000180, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_BI_AddUnitVisibilityTask_PecID) == 0x0001B0, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_BI_AddUnitVisibilityTask_PecID' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HidePlayerParty, CallFunc_BI_AddSetActorTransformTask_RetPecID) == 0x0001B4, "Member 'BattleCommand_C_HidePlayerParty::CallFunc_BI_AddSetActorTransformTask_RetPecID' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CommonHelpWindowFinalize
// 0x0030 (0x0030 - 0x0000)
struct BattleCommand_C_CommonHelpWindowFinalize final
{
public:
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79E2[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor;     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CommonHelpWindowFinalize) == 0x000008, "Wrong alignment on BattleCommand_C_CommonHelpWindowFinalize");
static_assert(sizeof(BattleCommand_C_CommonHelpWindowFinalize) == 0x000030, "Wrong size on BattleCommand_C_CommonHelpWindowFinalize");
static_assert(offsetof(BattleCommand_C_CommonHelpWindowFinalize, CallFunc_Get_ReturnValue) == 0x000000, "Member 'BattleCommand_C_CommonHelpWindowFinalize::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CommonHelpWindowFinalize, K2Node_DynamicCast_AsBPI_UIManager) == 0x000008, "Member 'BattleCommand_C_CommonHelpWindowFinalize::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CommonHelpWindowFinalize, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BattleCommand_C_CommonHelpWindowFinalize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CommonHelpWindowFinalize, CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor) == 0x000020, "Member 'BattleCommand_C_CommonHelpWindowFinalize::CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CommonHelpWindowInitialize
// 0x0038 (0x0038 - 0x0000)
struct BattleCommand_C_CommonHelpWindowInitialize final
{
public:
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79E3[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor;     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_ICommonHelpWindowGetWidgetVisibility_Visibility; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_CommonHelpWindowInitialize) == 0x000008, "Wrong alignment on BattleCommand_C_CommonHelpWindowInitialize");
static_assert(sizeof(BattleCommand_C_CommonHelpWindowInitialize) == 0x000038, "Wrong size on BattleCommand_C_CommonHelpWindowInitialize");
static_assert(offsetof(BattleCommand_C_CommonHelpWindowInitialize, CallFunc_Get_ReturnValue) == 0x000000, "Member 'BattleCommand_C_CommonHelpWindowInitialize::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CommonHelpWindowInitialize, K2Node_DynamicCast_AsBPI_UIManager) == 0x000008, "Member 'BattleCommand_C_CommonHelpWindowInitialize::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CommonHelpWindowInitialize, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BattleCommand_C_CommonHelpWindowInitialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CommonHelpWindowInitialize, CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor) == 0x000020, "Member 'BattleCommand_C_CommonHelpWindowInitialize::CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CommonHelpWindowInitialize, CallFunc_ICommonHelpWindowGetWidgetVisibility_Visibility) == 0x000030, "Member 'BattleCommand_C_CommonHelpWindowInitialize::CallFunc_ICommonHelpWindowGetWidgetVisibility_Visibility' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.BI_GetBattleUIManager
// 0x0020 (0x0020 - 0x0000)
struct BattleCommand_C_BI_GetBattleUIManager final
{
public:
	TScriptInterface<class IBPI_BattleUIManager_C> Ret;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleUIManager_C> CallFunc_BI_GetBattleUIManager_Ret;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_BI_GetBattleUIManager) == 0x000008, "Wrong alignment on BattleCommand_C_BI_GetBattleUIManager");
static_assert(sizeof(BattleCommand_C_BI_GetBattleUIManager) == 0x000020, "Wrong size on BattleCommand_C_BI_GetBattleUIManager");
static_assert(offsetof(BattleCommand_C_BI_GetBattleUIManager, Ret) == 0x000000, "Member 'BattleCommand_C_BI_GetBattleUIManager::Ret' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_BI_GetBattleUIManager, CallFunc_BI_GetBattleUIManager_Ret) == 0x000010, "Member 'BattleCommand_C_BI_GetBattleUIManager::CallFunc_BI_GetBattleUIManager_Ret' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CommandFinished
// 0x0010 (0x0010 - 0x0000)
struct BattleCommand_C_CommandFinished final
{
public:
	struct FBTL_CURSOR_MEMORY_T                   Lo_SavedCursor;                                    // 0x0000(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CommandFinished) == 0x000004, "Wrong alignment on BattleCommand_C_CommandFinished");
static_assert(sizeof(BattleCommand_C_CommandFinished) == 0x000010, "Wrong size on BattleCommand_C_CommandFinished");
static_assert(offsetof(BattleCommand_C_CommandFinished, Lo_SavedCursor) == 0x000000, "Member 'BattleCommand_C_CommandFinished::Lo_SavedCursor' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CommandFinished, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'BattleCommand_C_CommandFinished::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.GetHeroIndex
// 0x0020 (0x0020 - 0x0000)
struct BattleCommand_C_GetHeroIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79E4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_PartySystem;            // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetHeroIndex_index;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_GetHeroIndex) == 0x000008, "Wrong alignment on BattleCommand_C_GetHeroIndex");
static_assert(sizeof(BattleCommand_C_GetHeroIndex) == 0x000020, "Wrong size on BattleCommand_C_GetHeroIndex");
static_assert(offsetof(BattleCommand_C_GetHeroIndex, Param_Index) == 0x000000, "Member 'BattleCommand_C_GetHeroIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetHeroIndex, CallFunc_BI_GetPartySystem_PartySystem) == 0x000008, "Member 'BattleCommand_C_GetHeroIndex::CallFunc_BI_GetPartySystem_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetHeroIndex, CallFunc_BI_GetHeroIndex_index) == 0x000018, "Member 'BattleCommand_C_GetHeroIndex::CallFunc_BI_GetHeroIndex_index' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SetMP Forecast
// 0x0008 (0x0008 - 0x0000)
struct BattleCommand_C_SetMP_Forecast final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_PartyPanelCtrl_retValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_SetMP_Forecast) == 0x000004, "Wrong alignment on BattleCommand_C_SetMP_Forecast");
static_assert(sizeof(BattleCommand_C_SetMP_Forecast) == 0x000008, "Wrong size on BattleCommand_C_SetMP_Forecast");
static_assert(offsetof(BattleCommand_C_SetMP_Forecast, Value) == 0x000000, "Member 'BattleCommand_C_SetMP_Forecast::Value' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetMP_Forecast, CallFunc_BI_PartyPanelCtrl_retValue) == 0x000004, "Member 'BattleCommand_C_SetMP_Forecast::CallFunc_BI_PartyPanelCtrl_retValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SetSkillHelpText
// 0x0070 (0x0070 - 0x0000)
struct BattleCommand_C_SetSkillHelpText final
{
public:
	int32                                         SkillId;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79E5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_1;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79E6[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79E7[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor;     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor_1;   // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_SetSkillHelpText) == 0x000008, "Wrong alignment on BattleCommand_C_SetSkillHelpText");
static_assert(sizeof(BattleCommand_C_SetSkillHelpText) == 0x000070, "Wrong size on BattleCommand_C_SetSkillHelpText");
static_assert(offsetof(BattleCommand_C_SetSkillHelpText, SkillId) == 0x000000, "Member 'BattleCommand_C_SetSkillHelpText::SkillId' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetSkillHelpText, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BattleCommand_C_SetSkillHelpText::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetSkillHelpText, CallFunc_Get_ReturnValue_1) == 0x000010, "Member 'BattleCommand_C_SetSkillHelpText::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetSkillHelpText, K2Node_DynamicCast_AsBPI_UIManager) == 0x000018, "Member 'BattleCommand_C_SetSkillHelpText::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetSkillHelpText, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleCommand_C_SetSkillHelpText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetSkillHelpText, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000030, "Member 'BattleCommand_C_SetSkillHelpText::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetSkillHelpText, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BattleCommand_C_SetSkillHelpText::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetSkillHelpText, CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor) == 0x000048, "Member 'BattleCommand_C_SetSkillHelpText::CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetSkillHelpText, CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor_1) == 0x000058, "Member 'BattleCommand_C_SetSkillHelpText::CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetSkillHelpText, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'BattleCommand_C_SetSkillHelpText::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetSkillHelpText, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00006C, "Member 'BattleCommand_C_SetSkillHelpText::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.OpenCommonHelpWindow
// 0x0038 (0x0038 - 0x0000)
struct BattleCommand_C_OpenCommonHelpWindow final
{
public:
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79E8[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor;     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ICommonHelpWindowIsClosed_OutFinished;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_OpenCommonHelpWindow) == 0x000008, "Wrong alignment on BattleCommand_C_OpenCommonHelpWindow");
static_assert(sizeof(BattleCommand_C_OpenCommonHelpWindow) == 0x000038, "Wrong size on BattleCommand_C_OpenCommonHelpWindow");
static_assert(offsetof(BattleCommand_C_OpenCommonHelpWindow, CallFunc_Get_ReturnValue) == 0x000000, "Member 'BattleCommand_C_OpenCommonHelpWindow::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenCommonHelpWindow, K2Node_DynamicCast_AsBPI_UIManager) == 0x000008, "Member 'BattleCommand_C_OpenCommonHelpWindow::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenCommonHelpWindow, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BattleCommand_C_OpenCommonHelpWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenCommonHelpWindow, CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor) == 0x000020, "Member 'BattleCommand_C_OpenCommonHelpWindow::CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenCommonHelpWindow, CallFunc_ICommonHelpWindowIsClosed_OutFinished) == 0x000030, "Member 'BattleCommand_C_OpenCommonHelpWindow::CallFunc_ICommonHelpWindowIsClosed_OutFinished' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CloseCommonHelpWindow
// 0x0038 (0x0038 - 0x0000)
struct BattleCommand_C_CloseCommonHelpWindow final
{
public:
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79E9[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor;     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ICommonHelpWindowIsClosed_OutFinished;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CloseCommonHelpWindow) == 0x000008, "Wrong alignment on BattleCommand_C_CloseCommonHelpWindow");
static_assert(sizeof(BattleCommand_C_CloseCommonHelpWindow) == 0x000038, "Wrong size on BattleCommand_C_CloseCommonHelpWindow");
static_assert(offsetof(BattleCommand_C_CloseCommonHelpWindow, CallFunc_Get_ReturnValue) == 0x000000, "Member 'BattleCommand_C_CloseCommonHelpWindow::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CloseCommonHelpWindow, K2Node_DynamicCast_AsBPI_UIManager) == 0x000008, "Member 'BattleCommand_C_CloseCommonHelpWindow::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CloseCommonHelpWindow, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BattleCommand_C_CloseCommonHelpWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CloseCommonHelpWindow, CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor) == 0x000020, "Member 'BattleCommand_C_CloseCommonHelpWindow::CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CloseCommonHelpWindow, CallFunc_ICommonHelpWindowIsClosed_OutFinished) == 0x000030, "Member 'BattleCommand_C_CloseCommonHelpWindow::CallFunc_ICommonHelpWindowIsClosed_OutFinished' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SetItemHelpText
// 0x0038 (0x0038 - 0x0000)
struct BattleCommand_C_SetItemHelpText final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79EA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79EB[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor;     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_SetItemHelpText) == 0x000008, "Wrong alignment on BattleCommand_C_SetItemHelpText");
static_assert(sizeof(BattleCommand_C_SetItemHelpText) == 0x000038, "Wrong size on BattleCommand_C_SetItemHelpText");
static_assert(offsetof(BattleCommand_C_SetItemHelpText, ItemId) == 0x000000, "Member 'BattleCommand_C_SetItemHelpText::ItemId' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetItemHelpText, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BattleCommand_C_SetItemHelpText::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetItemHelpText, K2Node_DynamicCast_AsBPI_UIManager) == 0x000010, "Member 'BattleCommand_C_SetItemHelpText::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetItemHelpText, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BattleCommand_C_SetItemHelpText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetItemHelpText, CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor) == 0x000028, "Member 'BattleCommand_C_SetItemHelpText::CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.StartActEndMenu
// 0x0030 (0x0030 - 0x0000)
struct BattleCommand_C_StartActEndMenu final
{
public:
	bool                                          NoAutoBattleButtonHelp;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_SET                                Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_SET                                Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_SET                                K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79EC[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetTargetSelect_BPI;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetBattleTargetSelect_BPI;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetOverrideCommandCamera_NoUse;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_SetTargetType_Skill_NoUse;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_StartActEndMenu) == 0x000008, "Wrong alignment on BattleCommand_C_StartActEndMenu");
static_assert(sizeof(BattleCommand_C_StartActEndMenu) == 0x000030, "Wrong size on BattleCommand_C_StartActEndMenu");
static_assert(offsetof(BattleCommand_C_StartActEndMenu, NoAutoBattleButtonHelp) == 0x000000, "Member 'BattleCommand_C_StartActEndMenu::NoAutoBattleButtonHelp' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartActEndMenu, Temp_bool_Variable) == 0x000001, "Member 'BattleCommand_C_StartActEndMenu::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartActEndMenu, Temp_byte_Variable) == 0x000002, "Member 'BattleCommand_C_StartActEndMenu::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartActEndMenu, Temp_byte_Variable_1) == 0x000003, "Member 'BattleCommand_C_StartActEndMenu::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartActEndMenu, K2Node_Select_Default) == 0x000004, "Member 'BattleCommand_C_StartActEndMenu::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartActEndMenu, CallFunc_BI_GetTargetSelect_BPI) == 0x000008, "Member 'BattleCommand_C_StartActEndMenu::CallFunc_BI_GetTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartActEndMenu, CallFunc_BI_GetBattleTargetSelect_BPI) == 0x000018, "Member 'BattleCommand_C_StartActEndMenu::CallFunc_BI_GetBattleTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartActEndMenu, CallFunc_BI_SetOverrideCommandCamera_NoUse) == 0x000028, "Member 'BattleCommand_C_StartActEndMenu::CallFunc_BI_SetOverrideCommandCamera_NoUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StartActEndMenu, CallFunc_BI_SetTargetType_Skill_NoUse) == 0x000029, "Member 'BattleCommand_C_StartActEndMenu::CallFunc_BI_SetTargetType_Skill_NoUse' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.ShowActionName
// 0x02D8 (0x02D8 - 0x0000)
struct BattleCommand_C_ShowActionName final
{
public:
	E_BTL_COMM_TYPE                               OverrideCommType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HaveToGoActingPosition;                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79ED[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_SkillAptitude;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_ItemID;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_SkillId;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Lo_IsUnder;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79EE[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_MessageID;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkillOrItem;                                     // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_COMM_TYPE                               Lo_Command;                                        // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79EF[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_Element;                                        // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Lo_SkillName;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<int32>                                 Lo_WaitList;                                       // 0x0030(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79F0[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_BattleGetCommonMess_ReturnValue;          // 0x0048(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsResultCommandRecome_ReturnValue;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79F1[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79F2[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcSkillAptitude_Aptitude;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x00A0(0x0100)(ConstParm)
	uint8                                         CallFunc_SkillBaseDataGetValue_Icon_ReturnValue;   // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79F3[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue_1;           // 0x01A8(0x0100)(ConstParm)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_SkillBaseDataGetValue_Icon_ReturnValue_1; // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79F4[0x3];                                     // 0x02AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemIconIdByItemId_ReturnValue;        // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_COMM_TYPE                               K2Node_Select_Default;                             // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79F5[0x7];                                     // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_GetTaskFactory_retValue;               // 0x02C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddMessageTask_retValue;               // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_ShowActionName) == 0x000008, "Wrong alignment on BattleCommand_C_ShowActionName");
static_assert(sizeof(BattleCommand_C_ShowActionName) == 0x0002D8, "Wrong size on BattleCommand_C_ShowActionName");
static_assert(offsetof(BattleCommand_C_ShowActionName, OverrideCommType) == 0x000000, "Member 'BattleCommand_C_ShowActionName::OverrideCommType' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, HaveToGoActingPosition) == 0x000001, "Member 'BattleCommand_C_ShowActionName::HaveToGoActingPosition' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, Lo_SkillAptitude) == 0x000004, "Member 'BattleCommand_C_ShowActionName::Lo_SkillAptitude' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, Lo_ItemID) == 0x000008, "Member 'BattleCommand_C_ShowActionName::Lo_ItemID' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, Lo_SkillId) == 0x00000C, "Member 'BattleCommand_C_ShowActionName::Lo_SkillId' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, Lo_IsUnder) == 0x000010, "Member 'BattleCommand_C_ShowActionName::Lo_IsUnder' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, Lo_MessageID) == 0x000014, "Member 'BattleCommand_C_ShowActionName::Lo_MessageID' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, IsSkillOrItem) == 0x000018, "Member 'BattleCommand_C_ShowActionName::IsSkillOrItem' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, Lo_Command) == 0x000019, "Member 'BattleCommand_C_ShowActionName::Lo_Command' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, Lo_Element) == 0x00001C, "Member 'BattleCommand_C_ShowActionName::Lo_Element' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, Lo_SkillName) == 0x000020, "Member 'BattleCommand_C_ShowActionName::Lo_SkillName' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, Lo_WaitList) == 0x000030, "Member 'BattleCommand_C_ShowActionName::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000040, "Member 'BattleCommand_C_ShowActionName::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_BattleGetCommonMess_ReturnValue) == 0x000048, "Member 'BattleCommand_C_ShowActionName::CallFunc_BattleGetCommonMess_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_Conv_TextToString_ReturnValue) == 0x000060, "Member 'BattleCommand_C_ShowActionName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'BattleCommand_C_ShowActionName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000071, "Member 'BattleCommand_C_ShowActionName::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000072, "Member 'BattleCommand_C_ShowActionName::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000073, "Member 'BattleCommand_C_ShowActionName::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000074, "Member 'BattleCommand_C_ShowActionName::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000075, "Member 'BattleCommand_C_ShowActionName::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000076, "Member 'BattleCommand_C_ShowActionName::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000077, "Member 'BattleCommand_C_ShowActionName::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_IsResultCommandRecome_ReturnValue) == 0x000078, "Member 'BattleCommand_C_ShowActionName::CallFunc_IsResultCommandRecome_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_SelectInt_ReturnValue) == 0x00007C, "Member 'BattleCommand_C_ShowActionName::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_SelectInt_ReturnValue_1) == 0x000080, "Member 'BattleCommand_C_ShowActionName::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, Temp_bool_Variable) == 0x000084, "Member 'BattleCommand_C_ShowActionName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_SelectInt_ReturnValue_2) == 0x000088, "Member 'BattleCommand_C_ShowActionName::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_CalcSkillAptitude_Aptitude) == 0x00008C, "Member 'BattleCommand_C_ShowActionName::CallFunc_CalcSkillAptitude_Aptitude' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_GetObjectName_ReturnValue) == 0x000090, "Member 'BattleCommand_C_ShowActionName::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_GetSkillBaseData_ReturnValue) == 0x0000A0, "Member 'BattleCommand_C_ShowActionName::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_SkillBaseDataGetValue_Icon_ReturnValue) == 0x0001A0, "Member 'BattleCommand_C_ShowActionName::CallFunc_SkillBaseDataGetValue_Icon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_GetSkillBaseData_ReturnValue_1) == 0x0001A8, "Member 'BattleCommand_C_ShowActionName::CallFunc_GetSkillBaseData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0002A8, "Member 'BattleCommand_C_ShowActionName::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_SkillBaseDataGetValue_Icon_ReturnValue_1) == 0x0002AC, "Member 'BattleCommand_C_ShowActionName::CallFunc_SkillBaseDataGetValue_Icon_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x0002B0, "Member 'BattleCommand_C_ShowActionName::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_GetItemIconIdByItemId_ReturnValue) == 0x0002B4, "Member 'BattleCommand_C_ShowActionName::CallFunc_GetItemIconIdByItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, K2Node_Select_Default) == 0x0002B8, "Member 'BattleCommand_C_ShowActionName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_BI_GetTaskFactory_retValue) == 0x0002C0, "Member 'BattleCommand_C_ShowActionName::CallFunc_BI_GetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ShowActionName, CallFunc_BI_AddMessageTask_retValue) == 0x0002D0, "Member 'BattleCommand_C_ShowActionName::CallFunc_BI_AddMessageTask_retValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.HideActionName
// 0x0038 (0x0038 - 0x0000)
struct BattleCommand_C_HideActionName final
{
public:
	TArray<int32>                                 Lo_WaitList;                                       // 0x0000(0x0010)(Edit, BlueprintVisible)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleTaskFactory_C> CallFunc_BI_GetTaskFactory_retValue;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_AddMessageTask_retValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_HideActionName) == 0x000008, "Wrong alignment on BattleCommand_C_HideActionName");
static_assert(sizeof(BattleCommand_C_HideActionName) == 0x000038, "Wrong size on BattleCommand_C_HideActionName");
static_assert(offsetof(BattleCommand_C_HideActionName, Lo_WaitList) == 0x000000, "Member 'BattleCommand_C_HideActionName::Lo_WaitList' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HideActionName, CallFunc_GetObjectName_ReturnValue) == 0x000010, "Member 'BattleCommand_C_HideActionName::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HideActionName, CallFunc_BI_GetTaskFactory_retValue) == 0x000020, "Member 'BattleCommand_C_HideActionName::CallFunc_BI_GetTaskFactory_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HideActionName, CallFunc_BI_AddMessageTask_retValue) == 0x000030, "Member 'BattleCommand_C_HideActionName::CallFunc_BI_AddMessageTask_retValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.IsResultCommandRecome
// 0x0170 (0x0170 - 0x0000)
struct BattleCommand_C_IsResultCommandRecome final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79F6[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUseItemData                           CallFunc_GetUseItemData_ReturnValue;               // 0x0004(0x005C)(ConstParm, NoDestructor)
	bool                                          CallFunc_UseItemDataIsRecome_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79F7[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0068(0x0100)(ConstParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SkillBaseDataIsRecome_ReturnValue;        // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_IsResultCommandRecome) == 0x000008, "Wrong alignment on BattleCommand_C_IsResultCommandRecome");
static_assert(sizeof(BattleCommand_C_IsResultCommandRecome) == 0x000170, "Wrong size on BattleCommand_C_IsResultCommandRecome");
static_assert(offsetof(BattleCommand_C_IsResultCommandRecome, ReturnValue) == 0x000000, "Member 'BattleCommand_C_IsResultCommandRecome::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsResultCommandRecome, Temp_bool_Variable) == 0x000001, "Member 'BattleCommand_C_IsResultCommandRecome::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsResultCommandRecome, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BattleCommand_C_IsResultCommandRecome::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsResultCommandRecome, CallFunc_GetUseItemData_ReturnValue) == 0x000004, "Member 'BattleCommand_C_IsResultCommandRecome::CallFunc_GetUseItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsResultCommandRecome, CallFunc_UseItemDataIsRecome_ReturnValue) == 0x000060, "Member 'BattleCommand_C_IsResultCommandRecome::CallFunc_UseItemDataIsRecome_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsResultCommandRecome, CallFunc_GetSkillBaseData_ReturnValue) == 0x000068, "Member 'BattleCommand_C_IsResultCommandRecome::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsResultCommandRecome, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000168, "Member 'BattleCommand_C_IsResultCommandRecome::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsResultCommandRecome, CallFunc_SkillBaseDataIsRecome_ReturnValue) == 0x000169, "Member 'BattleCommand_C_IsResultCommandRecome::CallFunc_SkillBaseDataIsRecome_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsResultCommandRecome, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00016A, "Member 'BattleCommand_C_IsResultCommandRecome::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsResultCommandRecome, K2Node_Select_Default) == 0x00016B, "Member 'BattleCommand_C_IsResultCommandRecome::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsResultCommandRecome, CallFunc_BooleanOR_ReturnValue) == 0x00016C, "Member 'BattleCommand_C_IsResultCommandRecome::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SetCommandHelpText
// 0x0160 (0x0160 - 0x0000)
struct BattleCommand_C_SetCommandHelpText final
{
public:
	E_BTL_UI_COMMAND                              Command;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79F8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BTL_UI_COMMAND>                      Lo_IgnoreDuplicateCommands;                        // 0x0008(0x0010)(Edit, BlueprintVisible)
	TMap<E_BTL_UI_COMMAND, class FName>           Lo_CommandHelp;                                    // 0x0018(0x0050)(Edit, BlueprintVisible)
	TMap<E_BTL_UI_COMMAND, class FName>           K2Node_MakeVariable_MakeVariableOutput;            // 0x0068(0x0050)()
	TArray<E_BTL_UI_COMMAND>                      K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_CalcInterface>    CallFunc_GetBPICalc_AsBPI_Calc_Interface;          // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79F9[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_GetEscapeRate_ReturnValue;             // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79FA[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79FB[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEntryNkmNum_ReturnValue;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEntryNkmMax_ReturnValue;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79FC[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79FD[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value;                           // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79FE[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor;     // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_SetCommandHelpText) == 0x000008, "Wrong alignment on BattleCommand_C_SetCommandHelpText");
static_assert(sizeof(BattleCommand_C_SetCommandHelpText) == 0x000160, "Wrong size on BattleCommand_C_SetCommandHelpText");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, Command) == 0x000000, "Member 'BattleCommand_C_SetCommandHelpText::Command' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, Lo_IgnoreDuplicateCommands) == 0x000008, "Member 'BattleCommand_C_SetCommandHelpText::Lo_IgnoreDuplicateCommands' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, Lo_CommandHelp) == 0x000018, "Member 'BattleCommand_C_SetCommandHelpText::Lo_CommandHelp' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, K2Node_MakeVariable_MakeVariableOutput) == 0x000068, "Member 'BattleCommand_C_SetCommandHelpText::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BattleCommand_C_SetCommandHelpText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, CallFunc_GetBPICalc_AsBPI_Calc_Interface) == 0x0000C8, "Member 'BattleCommand_C_SetCommandHelpText::CallFunc_GetBPICalc_AsBPI_Calc_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D8, "Member 'BattleCommand_C_SetCommandHelpText::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, CallFunc_BI_GetEscapeRate_ReturnValue) == 0x0000DC, "Member 'BattleCommand_C_SetCommandHelpText::CallFunc_BI_GetEscapeRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, CallFunc_Array_Contains_ReturnValue) == 0x0000E0, "Member 'BattleCommand_C_SetCommandHelpText::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, CallFunc_Conv_IntToString_ReturnValue) == 0x0000E8, "Member 'BattleCommand_C_SetCommandHelpText::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, CallFunc_BooleanAND_ReturnValue) == 0x0000F8, "Member 'BattleCommand_C_SetCommandHelpText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, K2Node_SwitchEnum_CmpSuccess) == 0x0000F9, "Member 'BattleCommand_C_SetCommandHelpText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, CallFunc_GetEntryNkmNum_ReturnValue) == 0x0000FC, "Member 'BattleCommand_C_SetCommandHelpText::CallFunc_GetEntryNkmNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, CallFunc_GetEntryNkmMax_ReturnValue) == 0x000100, "Member 'BattleCommand_C_SetCommandHelpText::CallFunc_GetEntryNkmMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000108, "Member 'BattleCommand_C_SetCommandHelpText::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000118, "Member 'BattleCommand_C_SetCommandHelpText::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, CallFunc_Get_ReturnValue) == 0x000128, "Member 'BattleCommand_C_SetCommandHelpText::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, K2Node_DynamicCast_AsBPI_UIManager) == 0x000130, "Member 'BattleCommand_C_SetCommandHelpText::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BattleCommand_C_SetCommandHelpText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, CallFunc_Map_Find_Value) == 0x000144, "Member 'BattleCommand_C_SetCommandHelpText::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, CallFunc_Map_Find_ReturnValue) == 0x00014C, "Member 'BattleCommand_C_SetCommandHelpText::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetCommandHelpText, CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor) == 0x000150, "Member 'BattleCommand_C_SetCommandHelpText::CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.IsHaveToHideActionName
// 0x0007 (0x0007 - 0x0000)
struct BattleCommand_C_IsHaveToHideActionName final
{
public:
	bool                                          HaveToDo;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_IsHaveToHideActionName) == 0x000001, "Wrong alignment on BattleCommand_C_IsHaveToHideActionName");
static_assert(sizeof(BattleCommand_C_IsHaveToHideActionName) == 0x000007, "Wrong size on BattleCommand_C_IsHaveToHideActionName");
static_assert(offsetof(BattleCommand_C_IsHaveToHideActionName, HaveToDo) == 0x000000, "Member 'BattleCommand_C_IsHaveToHideActionName::HaveToDo' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsHaveToHideActionName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BattleCommand_C_IsHaveToHideActionName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsHaveToHideActionName, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BattleCommand_C_IsHaveToHideActionName::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsHaveToHideActionName, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000003, "Member 'BattleCommand_C_IsHaveToHideActionName::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsHaveToHideActionName, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'BattleCommand_C_IsHaveToHideActionName::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsHaveToHideActionName, CallFunc_BooleanOR_ReturnValue_1) == 0x000005, "Member 'BattleCommand_C_IsHaveToHideActionName::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsHaveToHideActionName, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BattleCommand_C_IsHaveToHideActionName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.StackStep
// 0x0008 (0x0008 - 0x0000)
struct BattleCommand_C_StackStep final
{
public:
	E_BTL_UI_COMM_STEP                            Step;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79FF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_StackStep) == 0x000004, "Wrong alignment on BattleCommand_C_StackStep");
static_assert(sizeof(BattleCommand_C_StackStep) == 0x000008, "Wrong size on BattleCommand_C_StackStep");
static_assert(offsetof(BattleCommand_C_StackStep, Step) == 0x000000, "Member 'BattleCommand_C_StackStep::Step' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_StackStep, CallFunc_Array_Add_ReturnValue) == 0x000004, "Member 'BattleCommand_C_StackStep::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.PopStep
// 0x000C (0x000C - 0x0000)
struct BattleCommand_C_PopStep final
{
public:
	E_BTL_UI_COMM_STEP                            PopedStep;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMM_STEP                            Lo_Step;                                           // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A00[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_PopStep) == 0x000004, "Wrong alignment on BattleCommand_C_PopStep");
static_assert(sizeof(BattleCommand_C_PopStep) == 0x00000C, "Wrong size on BattleCommand_C_PopStep");
static_assert(offsetof(BattleCommand_C_PopStep, PopedStep) == 0x000000, "Member 'BattleCommand_C_PopStep::PopedStep' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_PopStep, Lo_Step) == 0x000001, "Member 'BattleCommand_C_PopStep::Lo_Step' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_PopStep, CallFunc_Array_LastIndex_ReturnValue) == 0x000004, "Member 'BattleCommand_C_PopStep::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_PopStep, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'BattleCommand_C_PopStep::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.ClearStep
// 0x0001 (0x0001 - 0x0000)
struct BattleCommand_C_ClearStep final
{
public:
	E_BTL_UI_COMM_STEP                            Lo_Step;                                           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_ClearStep) == 0x000001, "Wrong alignment on BattleCommand_C_ClearStep");
static_assert(sizeof(BattleCommand_C_ClearStep) == 0x000001, "Wrong size on BattleCommand_C_ClearStep");
static_assert(offsetof(BattleCommand_C_ClearStep, Lo_Step) == 0x000000, "Member 'BattleCommand_C_ClearStep::Lo_Step' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.TopStep
// 0x000C (0x000C - 0x0000)
struct BattleCommand_C_TopStep final
{
public:
	E_BTL_UI_COMM_STEP                            Param_TopStep;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A01[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_TopStep) == 0x000004, "Wrong alignment on BattleCommand_C_TopStep");
static_assert(sizeof(BattleCommand_C_TopStep) == 0x00000C, "Wrong size on BattleCommand_C_TopStep");
static_assert(offsetof(BattleCommand_C_TopStep, Param_TopStep) == 0x000000, "Member 'BattleCommand_C_TopStep::Param_TopStep' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_TopStep, CallFunc_Array_LastIndex_ReturnValue) == 0x000004, "Member 'BattleCommand_C_TopStep::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_TopStep, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000008, "Member 'BattleCommand_C_TopStep::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CallStartStep
// 0x0010 (0x0010 - 0x0000)
struct BattleCommand_C_CallStartStep final
{
public:
	E_BTL_UI_COMM_STEP                            Step;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A02[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Top;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_AutoSeqPause_retValue;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CallStartStep) == 0x000004, "Wrong alignment on BattleCommand_C_CallStartStep");
static_assert(sizeof(BattleCommand_C_CallStartStep) == 0x000010, "Wrong size on BattleCommand_C_CallStartStep");
static_assert(offsetof(BattleCommand_C_CallStartStep, Step) == 0x000000, "Member 'BattleCommand_C_CallStartStep::Step' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallStartStep, Param_Index) == 0x000004, "Member 'BattleCommand_C_CallStartStep::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallStartStep, Top) == 0x000008, "Member 'BattleCommand_C_CallStartStep::Top' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallStartStep, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'BattleCommand_C_CallStartStep::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CallStartStep, CallFunc_BI_AutoSeqPause_retValue) == 0x00000D, "Member 'BattleCommand_C_CallStartStep::CallFunc_BI_AutoSeqPause_retValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.ReverseStep
// 0x0030 (0x0030 - 0x0000)
struct BattleCommand_C_ReverseStep final
{
public:
	int32                                         CursorIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TopIndex;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Top;                                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMM_STEP                            CallFunc_PopStep_PopedStep;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMM_STEP                            CallFunc_TopStep_TopStep;                          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMM_STEP                            CallFunc_TopStep_TopStep_1;                        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_UI_COMM_STEP                            CallFunc_TopStep_TopStep_2;                        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A03[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetBPIMainInterface_AsBPI_Main_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBPIMainInterface_bSuccess;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBattleDebugFlag2_ReturnValue;     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_ReverseStep) == 0x000008, "Wrong alignment on BattleCommand_C_ReverseStep");
static_assert(sizeof(BattleCommand_C_ReverseStep) == 0x000030, "Wrong size on BattleCommand_C_ReverseStep");
static_assert(offsetof(BattleCommand_C_ReverseStep, CursorIndex) == 0x000000, "Member 'BattleCommand_C_ReverseStep::CursorIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ReverseStep, TopIndex) == 0x000004, "Member 'BattleCommand_C_ReverseStep::TopIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ReverseStep, Top) == 0x000008, "Member 'BattleCommand_C_ReverseStep::Top' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ReverseStep, Param_Index) == 0x00000C, "Member 'BattleCommand_C_ReverseStep::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ReverseStep, CallFunc_PopStep_PopedStep) == 0x000010, "Member 'BattleCommand_C_ReverseStep::CallFunc_PopStep_PopedStep' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ReverseStep, CallFunc_TopStep_TopStep) == 0x000011, "Member 'BattleCommand_C_ReverseStep::CallFunc_TopStep_TopStep' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ReverseStep, CallFunc_TopStep_TopStep_1) == 0x000012, "Member 'BattleCommand_C_ReverseStep::CallFunc_TopStep_TopStep_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ReverseStep, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000013, "Member 'BattleCommand_C_ReverseStep::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ReverseStep, CallFunc_TopStep_TopStep_2) == 0x000014, "Member 'BattleCommand_C_ReverseStep::CallFunc_TopStep_TopStep_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ReverseStep, CallFunc_GetBPIMainInterface_AsBPI_Main_Interface) == 0x000018, "Member 'BattleCommand_C_ReverseStep::CallFunc_GetBPIMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ReverseStep, CallFunc_GetBPIMainInterface_bSuccess) == 0x000028, "Member 'BattleCommand_C_ReverseStep::CallFunc_GetBPIMainInterface_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ReverseStep, CallFunc_BI_CheckBattleDebugFlag2_ReturnValue) == 0x000029, "Member 'BattleCommand_C_ReverseStep::CallFunc_BI_CheckBattleDebugFlag2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ReverseStep, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BattleCommand_C_ReverseStep::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.PrevStep
// 0x0010 (0x0010 - 0x0000)
struct BattleCommand_C_PrevStep final
{
public:
	E_BTL_UI_COMM_STEP                            Param_PrevStep;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A04[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_PrevStep) == 0x000004, "Wrong alignment on BattleCommand_C_PrevStep");
static_assert(sizeof(BattleCommand_C_PrevStep) == 0x000010, "Wrong size on BattleCommand_C_PrevStep");
static_assert(offsetof(BattleCommand_C_PrevStep, Param_PrevStep) == 0x000000, "Member 'BattleCommand_C_PrevStep::Param_PrevStep' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_PrevStep, CallFunc_Array_LastIndex_ReturnValue) == 0x000004, "Member 'BattleCommand_C_PrevStep::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_PrevStep, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BattleCommand_C_PrevStep::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_PrevStep, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000C, "Member 'BattleCommand_C_PrevStep::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SeqAutoBattleCheckFunc
// 0x01D8 (0x01D8 - 0x0000)
struct BattleCommand_C_SeqAutoBattleCheckFunc final
{
public:
	bool                                          Lo_IsAskAutoBattleActionType;                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsAskAutoBattleType;                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A05[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_CanselPosition;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lo_NextStep;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCancel_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_OPTION_CONTENT_BATTLE_ACTION_TYPE           CallFunc_GetAutoBattleActionType_ReturnValue;      // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A06[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A07[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor;         // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_OPTION_CONTENT_BATTLE_ACTION_TYPE           CallFunc_GetAutoBattleActionType_ReturnValue_1;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IIsClosedDialogWindow_OutFinished;        // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_OPTION_CONTENT_BATTLE_ACTION_TYPE           CallFunc_GetAutoBattleActionType_ReturnValue_2;    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A08[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_1;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A09[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_2;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor_1;       // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_2;              // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A0A[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor_2;       // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IIsOpenedDialogWindow_OutFinished;        // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IIsClosedDialogWindow_OutFinished_1;      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IWasConfirmedByMouse_bConfirmed;          // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A0B[0x1];                                     // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IWasConfirmedByMouse_ItemIndex;           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A0C[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue_3;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A0D[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue_4;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue_5;                        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMM_STEP                            CallFunc_TopStep_TopStep;                          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_TargetSelectPause_retValue;            // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_TargetSelectPause_retValue_1;          // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_UI_COMM_STEP                            CallFunc_TopStep_TopStep_1;                        // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetAutoBattleType_ReturnValue;            // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_2;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A0E[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_6;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_7;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_3;              // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A0F[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_4;              // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A10[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor_3;       // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor_4;       // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_IGetDialogSelectedCursorPosition_OutIndex; // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_2;               // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0157(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_8;                        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionPadCheck_Success_3;               // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A11[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_5;              // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A12[0x6];                                     // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor_5;       // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_IGetDialogSelectedCursorPosition_OutIndex_1; // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_4;               // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0197(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A13[0x5];                                     // 0x019B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_9;                        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_6;              // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A14[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor_6;       // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_BeginAutoBattle_NoUse;                 // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A15[0x3];                                     // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IGetDialogSelectedCursorPosition_OutIndex_2; // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_SeqAutoBattleCheckFunc) == 0x000008, "Wrong alignment on BattleCommand_C_SeqAutoBattleCheckFunc");
static_assert(sizeof(BattleCommand_C_SeqAutoBattleCheckFunc) == 0x0001D8, "Wrong size on BattleCommand_C_SeqAutoBattleCheckFunc");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, Lo_IsAskAutoBattleActionType) == 0x000000, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::Lo_IsAskAutoBattleActionType' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, Lo_IsAskAutoBattleType) == 0x000001, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::Lo_IsAskAutoBattleType' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, Lo_CanselPosition) == 0x000004, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::Lo_CanselPosition' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, Lo_NextStep) == 0x000008, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::Lo_NextStep' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_CheckCancel_ReturnValue) == 0x00000C, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_CheckCancel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_GetAutoBattleActionType_ReturnValue) == 0x00000E, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_GetAutoBattleActionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, K2Node_SwitchInteger_CmpSuccess) == 0x00000F, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, K2Node_SwitchInteger_CmpSuccess_1) == 0x000011, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_Get_ReturnValue) == 0x000018, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, K2Node_DynamicCast_AsBPI_UIManager) == 0x000020, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BPI_GetDialogWindowCtrl_OutActor) == 0x000038, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BPI_GetDialogWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_GetAutoBattleActionType_ReturnValue_1) == 0x000048, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_GetAutoBattleActionType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000049, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_IIsClosedDialogWindow_OutFinished) == 0x00004A, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_IIsClosedDialogWindow_OutFinished' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004B, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_GetAutoBattleActionType_ReturnValue_2) == 0x00004C, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_GetAutoBattleActionType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00004D, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_Get_ReturnValue_1) == 0x000050, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000058, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_Get_ReturnValue_2) == 0x000070, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_Get_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BPI_GetDialogWindowCtrl_OutActor_1) == 0x000078, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BPI_GetDialogWindowCtrl_OutActor_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, K2Node_DynamicCast_AsBPI_UIManager_2) == 0x000088, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::K2Node_DynamicCast_AsBPI_UIManager_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BPI_GetDialogWindowCtrl_OutActor_2) == 0x0000A0, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BPI_GetDialogWindowCtrl_OutActor_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_IIsOpenedDialogWindow_OutFinished) == 0x0000B0, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_IIsOpenedDialogWindow_OutFinished' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_IIsClosedDialogWindow_OutFinished_1) == 0x0000B1, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_IIsClosedDialogWindow_OutFinished_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_IWasConfirmedByMouse_bConfirmed) == 0x0000B2, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_IWasConfirmedByMouse_bConfirmed' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_IWasConfirmedByMouse_ItemIndex) == 0x0000B4, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_IWasConfirmedByMouse_ItemIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_IsActionPadCheck_Success) == 0x0000B8, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_IsActionPadCheck_Success_1) == 0x0000B9, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BooleanOR_ReturnValue) == 0x0000BA, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_Not_PreBool_ReturnValue) == 0x0000BB, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_Get_ReturnValue_3) == 0x0000C0, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_Get_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C8, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_Get_ReturnValue_4) == 0x0000D0, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_Get_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_Get_ReturnValue_5) == 0x0000D8, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_Get_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_TopStep_TopStep) == 0x0000E0, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_TopStep_TopStep' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BI_TargetSelectPause_retValue) == 0x0000E1, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BI_TargetSelectPause_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000E2, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BI_TargetSelectPause_retValue_1) == 0x0000E3, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BI_TargetSelectPause_retValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_TopStep_TopStep_1) == 0x0000E4, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_TopStep_TopStep_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0000E5, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_GetAutoBattleType_ReturnValue) == 0x0000E6, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_GetAutoBattleType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0000E7, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, K2Node_SwitchInteger_CmpSuccess_2) == 0x0000E8, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::K2Node_SwitchInteger_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_Get_ReturnValue_6) == 0x0000F0, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_Get_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_Get_ReturnValue_7) == 0x0000F8, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_Get_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, K2Node_DynamicCast_AsBPI_UIManager_3) == 0x000100, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::K2Node_DynamicCast_AsBPI_UIManager_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, K2Node_DynamicCast_bSuccess_3) == 0x000110, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, K2Node_DynamicCast_AsBPI_UIManager_4) == 0x000118, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::K2Node_DynamicCast_AsBPI_UIManager_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, K2Node_DynamicCast_bSuccess_4) == 0x000128, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BPI_GetDialogWindowCtrl_OutActor_3) == 0x000130, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BPI_GetDialogWindowCtrl_OutActor_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BPI_GetDialogWindowCtrl_OutActor_4) == 0x000140, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BPI_GetDialogWindowCtrl_OutActor_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_IGetDialogSelectedCursorPosition_OutIndex) == 0x000150, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_IGetDialogSelectedCursorPosition_OutIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000154, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_IsActionPadCheck_Success_2) == 0x000155, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_IsActionPadCheck_Success_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BooleanAND_ReturnValue_1) == 0x000156, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_Not_PreBool_ReturnValue_2) == 0x000157, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_Get_ReturnValue_8) == 0x000158, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_Get_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_IsActionPadCheck_Success_3) == 0x000160, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_IsActionPadCheck_Success_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, K2Node_DynamicCast_AsBPI_UIManager_5) == 0x000168, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::K2Node_DynamicCast_AsBPI_UIManager_5' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, K2Node_DynamicCast_bSuccess_5) == 0x000178, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BooleanAND_ReturnValue_2) == 0x000179, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BPI_GetDialogWindowCtrl_OutActor_5) == 0x000180, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BPI_GetDialogWindowCtrl_OutActor_5' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_IGetDialogSelectedCursorPosition_OutIndex_1) == 0x000190, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_IGetDialogSelectedCursorPosition_OutIndex_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000194, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_IsActionPadCheck_Success_4) == 0x000195, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_IsActionPadCheck_Success_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BooleanOR_ReturnValue_1) == 0x000196, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_Not_PreBool_ReturnValue_3) == 0x000197, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BooleanAND_ReturnValue_3) == 0x000198, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BooleanAND_ReturnValue_4) == 0x000199, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BooleanAND_ReturnValue_5) == 0x00019A, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_Get_ReturnValue_9) == 0x0001A0, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_Get_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, K2Node_DynamicCast_AsBPI_UIManager_6) == 0x0001A8, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::K2Node_DynamicCast_AsBPI_UIManager_6' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, K2Node_DynamicCast_bSuccess_6) == 0x0001B8, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BPI_GetDialogWindowCtrl_OutActor_6) == 0x0001C0, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BPI_GetDialogWindowCtrl_OutActor_6' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_BI_BeginAutoBattle_NoUse) == 0x0001D0, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_BI_BeginAutoBattle_NoUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqAutoBattleCheckFunc, CallFunc_IGetDialogSelectedCursorPosition_OutIndex_2) == 0x0001D4, "Member 'BattleCommand_C_SeqAutoBattleCheckFunc::CallFunc_IGetDialogSelectedCursorPosition_OutIndex_2' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.EndOptionMenu
// 0x0001 (0x0001 - 0x0000)
struct BattleCommand_C_EndOptionMenu final
{
public:
	bool                                          CallFunc_BI_BattleUISwitch_NoUse;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_EndOptionMenu) == 0x000001, "Wrong alignment on BattleCommand_C_EndOptionMenu");
static_assert(sizeof(BattleCommand_C_EndOptionMenu) == 0x000001, "Wrong size on BattleCommand_C_EndOptionMenu");
static_assert(offsetof(BattleCommand_C_EndOptionMenu, CallFunc_BI_BattleUISwitch_NoUse) == 0x000000, "Member 'BattleCommand_C_EndOptionMenu::CallFunc_BI_BattleUISwitch_NoUse' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SeqOptionMenuFunc
// 0x0048 (0x0048 - 0x0000)
struct BattleCommand_C_SeqOptionMenuFunc final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlagGotoTitle_Flag;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCompleteInitialize_IsComplete;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEndOptionCtrl_IsEnd;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A16[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A17[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_BattleUISwitch_NoUse;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A18[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetBPIMainInterface_AsBPI_Main_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBPIMainInterface_bSuccess;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAllMenuDisappeared_IsDisappeared;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A19[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAllMenuDisappeared_IsDisappeared_1;     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A1A[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_SeqOptionMenuFunc) == 0x000008, "Wrong alignment on BattleCommand_C_SeqOptionMenuFunc");
static_assert(sizeof(BattleCommand_C_SeqOptionMenuFunc) == 0x000048, "Wrong size on BattleCommand_C_SeqOptionMenuFunc");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, Temp_int_Variable) == 0x000000, "Member 'BattleCommand_C_SeqOptionMenuFunc::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, Temp_int_Variable_1) == 0x000004, "Member 'BattleCommand_C_SeqOptionMenuFunc::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, CallFunc_GetFlagGotoTitle_Flag) == 0x000008, "Member 'BattleCommand_C_SeqOptionMenuFunc::CallFunc_GetFlagGotoTitle_Flag' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, CallFunc_IsCompleteInitialize_IsComplete) == 0x000009, "Member 'BattleCommand_C_SeqOptionMenuFunc::CallFunc_IsCompleteInitialize_IsComplete' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, CallFunc_IsEndOptionCtrl_IsEnd) == 0x00000A, "Member 'BattleCommand_C_SeqOptionMenuFunc::CallFunc_IsEndOptionCtrl_IsEnd' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BattleCommand_C_SeqOptionMenuFunc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, Temp_int_Variable_2) == 0x000010, "Member 'BattleCommand_C_SeqOptionMenuFunc::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BattleCommand_C_SeqOptionMenuFunc::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, Temp_int_Variable_3) == 0x000018, "Member 'BattleCommand_C_SeqOptionMenuFunc::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, CallFunc_BI_BattleUISwitch_NoUse) == 0x00001C, "Member 'BattleCommand_C_SeqOptionMenuFunc::CallFunc_BI_BattleUISwitch_NoUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, CallFunc_GetBPIMainInterface_AsBPI_Main_Interface) == 0x000020, "Member 'BattleCommand_C_SeqOptionMenuFunc::CallFunc_GetBPIMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, CallFunc_GetBPIMainInterface_bSuccess) == 0x000030, "Member 'BattleCommand_C_SeqOptionMenuFunc::CallFunc_GetBPIMainInterface_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, CallFunc_IsAllMenuDisappeared_IsDisappeared) == 0x000031, "Member 'BattleCommand_C_SeqOptionMenuFunc::CallFunc_IsAllMenuDisappeared_IsDisappeared' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BattleCommand_C_SeqOptionMenuFunc::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, CallFunc_IsAllMenuDisappeared_IsDisappeared_1) == 0x000038, "Member 'BattleCommand_C_SeqOptionMenuFunc::CallFunc_IsAllMenuDisappeared_IsDisappeared_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, CallFunc_Add_IntInt_ReturnValue_2) == 0x00003C, "Member 'BattleCommand_C_SeqOptionMenuFunc::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, CallFunc_Add_IntInt_ReturnValue_3) == 0x000040, "Member 'BattleCommand_C_SeqOptionMenuFunc::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SeqOptionMenuFunc, K2Node_SwitchInteger_CmpSuccess) == 0x000044, "Member 'BattleCommand_C_SeqOptionMenuFunc::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CalcItemArea
// 0x0170 (0x0170 - 0x0000)
struct BattleCommand_C_CalcItemArea final
{
public:
	E_SKILL_TARGET                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A1B[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUseItemData                           CallFunc_GetUseItemData_ReturnValue;               // 0x0004(0x005C)(ConstParm, NoDestructor)
	int32                                         CallFunc_UseItemDataGetValue_SkillNo_ReturnValue;  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A1C[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0068(0x0100)(ConstParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                CallFunc_SkillBaseDataGetValue_Area_ReturnValue;   // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                K2Node_Select_Default;                             // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_CalcItemArea) == 0x000008, "Wrong alignment on BattleCommand_C_CalcItemArea");
static_assert(sizeof(BattleCommand_C_CalcItemArea) == 0x000170, "Wrong size on BattleCommand_C_CalcItemArea");
static_assert(offsetof(BattleCommand_C_CalcItemArea, ReturnValue) == 0x000000, "Member 'BattleCommand_C_CalcItemArea::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemArea, Temp_bool_Variable) == 0x000001, "Member 'BattleCommand_C_CalcItemArea::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemArea, Temp_byte_Variable) == 0x000002, "Member 'BattleCommand_C_CalcItemArea::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemArea, CallFunc_GetUseItemData_ReturnValue) == 0x000004, "Member 'BattleCommand_C_CalcItemArea::CallFunc_GetUseItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemArea, CallFunc_UseItemDataGetValue_SkillNo_ReturnValue) == 0x000060, "Member 'BattleCommand_C_CalcItemArea::CallFunc_UseItemDataGetValue_SkillNo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemArea, CallFunc_GetSkillBaseData_ReturnValue) == 0x000068, "Member 'BattleCommand_C_CalcItemArea::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemArea, CallFunc_Greater_IntInt_ReturnValue) == 0x000168, "Member 'BattleCommand_C_CalcItemArea::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemArea, CallFunc_SkillBaseDataGetValue_Area_ReturnValue) == 0x000169, "Member 'BattleCommand_C_CalcItemArea::CallFunc_SkillBaseDataGetValue_Area_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemArea, K2Node_Select_Default) == 0x00016A, "Member 'BattleCommand_C_CalcItemArea::K2Node_Select_Default' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CalcItemDefenseAishou
// 0x0170 (0x0170 - 0x0000)
struct BattleCommand_C_CalcItemDefenseAishou final
{
public:
	E_ATTRIBUTE_TYPE                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ATTRIBUTE_TYPE                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A1D[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUseItemData                           CallFunc_GetUseItemData_ReturnValue;               // 0x0004(0x005C)(ConstParm, NoDestructor)
	int32                                         CallFunc_UseItemDataGetValue_SkillNo_ReturnValue;  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A1E[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0068(0x0100)(ConstParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ATTRIBUTE_TYPE                              CallFunc_SkillBaseDataGetValue_AtkAttr_ReturnValue; // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ATTRIBUTE_TYPE                              K2Node_Select_Default;                             // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_CalcItemDefenseAishou) == 0x000008, "Wrong alignment on BattleCommand_C_CalcItemDefenseAishou");
static_assert(sizeof(BattleCommand_C_CalcItemDefenseAishou) == 0x000170, "Wrong size on BattleCommand_C_CalcItemDefenseAishou");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishou, ReturnValue) == 0x000000, "Member 'BattleCommand_C_CalcItemDefenseAishou::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishou, Temp_bool_Variable) == 0x000001, "Member 'BattleCommand_C_CalcItemDefenseAishou::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishou, Temp_byte_Variable) == 0x000002, "Member 'BattleCommand_C_CalcItemDefenseAishou::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishou, CallFunc_GetUseItemData_ReturnValue) == 0x000004, "Member 'BattleCommand_C_CalcItemDefenseAishou::CallFunc_GetUseItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishou, CallFunc_UseItemDataGetValue_SkillNo_ReturnValue) == 0x000060, "Member 'BattleCommand_C_CalcItemDefenseAishou::CallFunc_UseItemDataGetValue_SkillNo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishou, CallFunc_GetSkillBaseData_ReturnValue) == 0x000068, "Member 'BattleCommand_C_CalcItemDefenseAishou::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishou, CallFunc_Greater_IntInt_ReturnValue) == 0x000168, "Member 'BattleCommand_C_CalcItemDefenseAishou::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishou, CallFunc_SkillBaseDataGetValue_AtkAttr_ReturnValue) == 0x000169, "Member 'BattleCommand_C_CalcItemDefenseAishou::CallFunc_SkillBaseDataGetValue_AtkAttr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishou, K2Node_Select_Default) == 0x00016A, "Member 'BattleCommand_C_CalcItemDefenseAishou::K2Node_Select_Default' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.IsSkillTargetSelect
// 0x0003 (0x0003 - 0x0000)
struct BattleCommand_C_IsSkillTargetSelect final
{
public:
	bool                                          IsSkill;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_UI_COMM_STEP                            CallFunc_PrevStep_PrevStep;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_IsSkillTargetSelect) == 0x000001, "Wrong alignment on BattleCommand_C_IsSkillTargetSelect");
static_assert(sizeof(BattleCommand_C_IsSkillTargetSelect) == 0x000003, "Wrong size on BattleCommand_C_IsSkillTargetSelect");
static_assert(offsetof(BattleCommand_C_IsSkillTargetSelect, IsSkill) == 0x000000, "Member 'BattleCommand_C_IsSkillTargetSelect::IsSkill' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSkillTargetSelect, CallFunc_PrevStep_PrevStep) == 0x000001, "Member 'BattleCommand_C_IsSkillTargetSelect::CallFunc_PrevStep_PrevStep' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSkillTargetSelect, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'BattleCommand_C_IsSkillTargetSelect::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.IsSelectableTarget
// 0x0810 (0x0810 - 0x0000)
struct BattleCommand_C_IsSelectableTarget final
{
public:
	bool                                          Selectable;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_AllUse;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A1F[0xE];                                     // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              LoTarget;                                          // 0x0010(0x0320)(Edit, BlueprintVisible)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_PartySystem;            // 0x0330(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUseItemData                           CallFunc_GetUseItemData_ReturnValue;               // 0x0348(0x005C)(ConstParm, NoDestructor)
	uint8                                         Pad_7A20[0x4];                                     // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetBPIMainInterface_AsBPI_Main_Interface; // 0x03A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBPIMainInterface_bSuccess;             // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUseItemTargetSelect_ReturnValue;        // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBattleDebugFlag2_ReturnValue;     // 0x03BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A21[0x5];                                     // 0x03BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x03C0(0x0100)(ConstParm)
	TScriptInterface<class IBPI_BattleTargetSelect_C> CallFunc_BI_GetTargetSelect_BPI;                   // 0x04C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUseSkillTargetSelect_ReturnValue;       // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A22[0x3];                                     // 0x04D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_GetCurrentTargetIndex_PartyIndex;      // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A23[0x8];                                     // 0x04D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBtlParty                              CallFunc_BI_GetPartyData_retValue;                 // 0x04E0(0x0320)()
	bool                                          CallFunc_IsSkillTargetSelect_IsSkill;              // 0x0800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_IsSelectableTarget) == 0x000010, "Wrong alignment on BattleCommand_C_IsSelectableTarget");
static_assert(sizeof(BattleCommand_C_IsSelectableTarget) == 0x000810, "Wrong size on BattleCommand_C_IsSelectableTarget");
static_assert(offsetof(BattleCommand_C_IsSelectableTarget, Selectable) == 0x000000, "Member 'BattleCommand_C_IsSelectableTarget::Selectable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSelectableTarget, Lo_AllUse) == 0x000001, "Member 'BattleCommand_C_IsSelectableTarget::Lo_AllUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSelectableTarget, LoTarget) == 0x000010, "Member 'BattleCommand_C_IsSelectableTarget::LoTarget' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSelectableTarget, CallFunc_BI_GetPartySystem_PartySystem) == 0x000330, "Member 'BattleCommand_C_IsSelectableTarget::CallFunc_BI_GetPartySystem_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSelectableTarget, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000340, "Member 'BattleCommand_C_IsSelectableTarget::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSelectableTarget, CallFunc_GetUseItemData_ReturnValue) == 0x000348, "Member 'BattleCommand_C_IsSelectableTarget::CallFunc_GetUseItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSelectableTarget, CallFunc_GetBPIMainInterface_AsBPI_Main_Interface) == 0x0003A8, "Member 'BattleCommand_C_IsSelectableTarget::CallFunc_GetBPIMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSelectableTarget, CallFunc_GetBPIMainInterface_bSuccess) == 0x0003B8, "Member 'BattleCommand_C_IsSelectableTarget::CallFunc_GetBPIMainInterface_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSelectableTarget, CallFunc_IsUseItemTargetSelect_ReturnValue) == 0x0003B9, "Member 'BattleCommand_C_IsSelectableTarget::CallFunc_IsUseItemTargetSelect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSelectableTarget, CallFunc_BI_CheckBattleDebugFlag2_ReturnValue) == 0x0003BA, "Member 'BattleCommand_C_IsSelectableTarget::CallFunc_BI_CheckBattleDebugFlag2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSelectableTarget, CallFunc_GetSkillBaseData_ReturnValue) == 0x0003C0, "Member 'BattleCommand_C_IsSelectableTarget::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSelectableTarget, CallFunc_BI_GetTargetSelect_BPI) == 0x0004C0, "Member 'BattleCommand_C_IsSelectableTarget::CallFunc_BI_GetTargetSelect_BPI' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSelectableTarget, CallFunc_IsUseSkillTargetSelect_ReturnValue) == 0x0004D0, "Member 'BattleCommand_C_IsSelectableTarget::CallFunc_IsUseSkillTargetSelect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSelectableTarget, CallFunc_BI_GetCurrentTargetIndex_PartyIndex) == 0x0004D4, "Member 'BattleCommand_C_IsSelectableTarget::CallFunc_BI_GetCurrentTargetIndex_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSelectableTarget, CallFunc_BI_GetPartyData_retValue) == 0x0004E0, "Member 'BattleCommand_C_IsSelectableTarget::CallFunc_BI_GetPartyData_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSelectableTarget, CallFunc_IsSkillTargetSelect_IsSkill) == 0x000800, "Member 'BattleCommand_C_IsSelectableTarget::CallFunc_IsSkillTargetSelect_IsSkill' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.IsSummonSkill
// 0x0110 (0x0110 - 0x0000)
struct BattleCommand_C_IsSummonSkill final
{
public:
	bool                                          IsSummon;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A24[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0008(0x0100)(ConstParm)
	E_SKILL_TYPE                                  CallFunc_SkillBaseDataGetValue_Type_ReturnValue;   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_IsSummonSkill) == 0x000008, "Wrong alignment on BattleCommand_C_IsSummonSkill");
static_assert(sizeof(BattleCommand_C_IsSummonSkill) == 0x000110, "Wrong size on BattleCommand_C_IsSummonSkill");
static_assert(offsetof(BattleCommand_C_IsSummonSkill, IsSummon) == 0x000000, "Member 'BattleCommand_C_IsSummonSkill::IsSummon' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSummonSkill, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BattleCommand_C_IsSummonSkill::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSummonSkill, CallFunc_GetSkillBaseData_ReturnValue) == 0x000008, "Member 'BattleCommand_C_IsSummonSkill::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSummonSkill, CallFunc_SkillBaseDataGetValue_Type_ReturnValue) == 0x000108, "Member 'BattleCommand_C_IsSummonSkill::CallFunc_SkillBaseDataGetValue_Type_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSummonSkill, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000109, "Member 'BattleCommand_C_IsSummonSkill::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsSummonSkill, CallFunc_BooleanAND_ReturnValue) == 0x00010A, "Member 'BattleCommand_C_IsSummonSkill::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.UpdateEnemyInfoAishouNotice
// 0x0158 (0x0158 - 0x0000)
struct BattleCommand_C_UpdateEnemyInfoAishouNotice final
{
public:
	bool                                          IsSkill;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Sw;                                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsPenetration;                                  // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetActorIndex_m_PartyIndex;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPenetrationEfficacy_IsPenetration;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A25[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_PartySystem;            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<E_ATTRIBUTE_TYPE>                      CallFunc_CalcItemDefenseAishouArray_ReturnValue;   // 0x0020(0x0010)(ReferenceParm)
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0030(0x0100)(ConstParm)
	TArray<E_ATTRIBUTE_TYPE>                      CallFunc_SkillBaseDataGetValue_AtkAttrTArray_ReturnValue; // 0x0130(0x0010)(ReferenceParm)
	TArray<E_ATTRIBUTE_TYPE>                      K2Node_Select_Default;                             // 0x0140(0x0010)(ReferenceParm)
	bool                                          CallFunc_BI_EnemyInfoDrawSwitchAishouNoticeAll_NoUse; // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_UpdateEnemyInfoAishouNotice) == 0x000008, "Wrong alignment on BattleCommand_C_UpdateEnemyInfoAishouNotice");
static_assert(sizeof(BattleCommand_C_UpdateEnemyInfoAishouNotice) == 0x000158, "Wrong size on BattleCommand_C_UpdateEnemyInfoAishouNotice");
static_assert(offsetof(BattleCommand_C_UpdateEnemyInfoAishouNotice, IsSkill) == 0x000000, "Member 'BattleCommand_C_UpdateEnemyInfoAishouNotice::IsSkill' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateEnemyInfoAishouNotice, Sw) == 0x000001, "Member 'BattleCommand_C_UpdateEnemyInfoAishouNotice::Sw' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateEnemyInfoAishouNotice, Lo_IsPenetration) == 0x000002, "Member 'BattleCommand_C_UpdateEnemyInfoAishouNotice::Lo_IsPenetration' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateEnemyInfoAishouNotice, Temp_bool_Variable) == 0x000003, "Member 'BattleCommand_C_UpdateEnemyInfoAishouNotice::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateEnemyInfoAishouNotice, CallFunc_GetActorIndex_m_PartyIndex) == 0x000004, "Member 'BattleCommand_C_UpdateEnemyInfoAishouNotice::CallFunc_GetActorIndex_m_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateEnemyInfoAishouNotice, CallFunc_CheckPenetrationEfficacy_IsPenetration) == 0x000008, "Member 'BattleCommand_C_UpdateEnemyInfoAishouNotice::CallFunc_CheckPenetrationEfficacy_IsPenetration' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateEnemyInfoAishouNotice, CallFunc_BI_GetPartySystem_PartySystem) == 0x000010, "Member 'BattleCommand_C_UpdateEnemyInfoAishouNotice::CallFunc_BI_GetPartySystem_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateEnemyInfoAishouNotice, CallFunc_CalcItemDefenseAishouArray_ReturnValue) == 0x000020, "Member 'BattleCommand_C_UpdateEnemyInfoAishouNotice::CallFunc_CalcItemDefenseAishouArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateEnemyInfoAishouNotice, CallFunc_GetSkillBaseData_ReturnValue) == 0x000030, "Member 'BattleCommand_C_UpdateEnemyInfoAishouNotice::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateEnemyInfoAishouNotice, CallFunc_SkillBaseDataGetValue_AtkAttrTArray_ReturnValue) == 0x000130, "Member 'BattleCommand_C_UpdateEnemyInfoAishouNotice::CallFunc_SkillBaseDataGetValue_AtkAttrTArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateEnemyInfoAishouNotice, K2Node_Select_Default) == 0x000140, "Member 'BattleCommand_C_UpdateEnemyInfoAishouNotice::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateEnemyInfoAishouNotice, CallFunc_BI_EnemyInfoDrawSwitchAishouNoticeAll_NoUse) == 0x000150, "Member 'BattleCommand_C_UpdateEnemyInfoAishouNotice::CallFunc_BI_EnemyInfoDrawSwitchAishouNoticeAll_NoUse' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.BI_GetPartySystem
// 0x0038 (0x0038 - 0x0000)
struct BattleCommand_C_BI_GetPartySystem final
{
public:
	TScriptInterface<class IBPI_BattleParty_C>    PartySystem;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_BI_GetBattleMain_BattleMain;              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_GetBattleMain_bSuccess;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A26[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_ret;                    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_BI_GetPartySystem) == 0x000008, "Wrong alignment on BattleCommand_C_BI_GetPartySystem");
static_assert(sizeof(BattleCommand_C_BI_GetPartySystem) == 0x000038, "Wrong size on BattleCommand_C_BI_GetPartySystem");
static_assert(offsetof(BattleCommand_C_BI_GetPartySystem, PartySystem) == 0x000000, "Member 'BattleCommand_C_BI_GetPartySystem::PartySystem' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_BI_GetPartySystem, CallFunc_BI_GetBattleMain_BattleMain) == 0x000010, "Member 'BattleCommand_C_BI_GetPartySystem::CallFunc_BI_GetBattleMain_BattleMain' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_BI_GetPartySystem, CallFunc_BI_GetBattleMain_bSuccess) == 0x000020, "Member 'BattleCommand_C_BI_GetPartySystem::CallFunc_BI_GetBattleMain_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_BI_GetPartySystem, CallFunc_BI_GetPartySystem_ret) == 0x000028, "Member 'BattleCommand_C_BI_GetPartySystem::CallFunc_BI_GetPartySystem_ret' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.GetBPICalc
// 0x0030 (0x0030 - 0x0000)
struct BattleCommand_C_GetBPICalc final
{
public:
	TScriptInterface<class IBPI_CalcInterface>    AsBPI_Calc_Interface;                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CalcInterface>    K2Node_DynamicCast_AsBPI_Calc_Interface;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_GetBPICalc) == 0x000008, "Wrong alignment on BattleCommand_C_GetBPICalc");
static_assert(sizeof(BattleCommand_C_GetBPICalc) == 0x000030, "Wrong size on BattleCommand_C_GetBPICalc");
static_assert(offsetof(BattleCommand_C_GetBPICalc, AsBPI_Calc_Interface) == 0x000000, "Member 'BattleCommand_C_GetBPICalc::AsBPI_Calc_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetBPICalc, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BattleCommand_C_GetBPICalc::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetBPICalc, K2Node_DynamicCast_AsBPI_Calc_Interface) == 0x000018, "Member 'BattleCommand_C_GetBPICalc::K2Node_DynamicCast_AsBPI_Calc_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetBPICalc, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BattleCommand_C_GetBPICalc::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CalcItemDefenseAishouArray
// 0x01C0 (0x01C0 - 0x0000)
struct BattleCommand_C_CalcItemDefenseAishouArray final
{
public:
	TArray<E_ATTRIBUTE_TYPE>                      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	TArray<E_ATTRIBUTE_TYPE>                      Lo_TmpArray;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A27[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_ATTRIBUTE_TYPE>                      K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	struct FUseItemData                           CallFunc_GetUseItemData_ReturnValue;               // 0x0038(0x005C)(ConstParm, NoDestructor)
	int32                                         CallFunc_UseItemDataGetValue_SkillNo_ReturnValue;  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0098(0x0100)(ConstParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A28[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_ATTRIBUTE_TYPE>                      CallFunc_SkillBaseDataGetValue_AtkAttrTArray_ReturnValue; // 0x01A0(0x0010)(ReferenceParm)
	TArray<E_ATTRIBUTE_TYPE>                      K2Node_Select_Default;                             // 0x01B0(0x0010)(ReferenceParm)
};
static_assert(alignof(BattleCommand_C_CalcItemDefenseAishouArray) == 0x000008, "Wrong alignment on BattleCommand_C_CalcItemDefenseAishouArray");
static_assert(sizeof(BattleCommand_C_CalcItemDefenseAishouArray) == 0x0001C0, "Wrong size on BattleCommand_C_CalcItemDefenseAishouArray");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishouArray, ReturnValue) == 0x000000, "Member 'BattleCommand_C_CalcItemDefenseAishouArray::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishouArray, Lo_TmpArray) == 0x000010, "Member 'BattleCommand_C_CalcItemDefenseAishouArray::Lo_TmpArray' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishouArray, Temp_bool_Variable) == 0x000020, "Member 'BattleCommand_C_CalcItemDefenseAishouArray::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishouArray, K2Node_MakeArray_Array) == 0x000028, "Member 'BattleCommand_C_CalcItemDefenseAishouArray::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishouArray, CallFunc_GetUseItemData_ReturnValue) == 0x000038, "Member 'BattleCommand_C_CalcItemDefenseAishouArray::CallFunc_GetUseItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishouArray, CallFunc_UseItemDataGetValue_SkillNo_ReturnValue) == 0x000094, "Member 'BattleCommand_C_CalcItemDefenseAishouArray::CallFunc_UseItemDataGetValue_SkillNo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishouArray, CallFunc_GetSkillBaseData_ReturnValue) == 0x000098, "Member 'BattleCommand_C_CalcItemDefenseAishouArray::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishouArray, CallFunc_Greater_IntInt_ReturnValue) == 0x000198, "Member 'BattleCommand_C_CalcItemDefenseAishouArray::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishouArray, CallFunc_SkillBaseDataGetValue_AtkAttrTArray_ReturnValue) == 0x0001A0, "Member 'BattleCommand_C_CalcItemDefenseAishouArray::CallFunc_SkillBaseDataGetValue_AtkAttrTArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemDefenseAishouArray, K2Node_Select_Default) == 0x0001B0, "Member 'BattleCommand_C_CalcItemDefenseAishouArray::K2Node_Select_Default' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.IsAllMenuDisappeared
// 0x0038 (0x0038 - 0x0000)
struct BattleCommand_C_IsAllMenuDisappeared final
{
public:
	bool                                          IsDisappeared;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A29[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_IsDisappeared_self_CastInput;             // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisappeared_IsDisappeared;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A2A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_IsDisappeared_self_CastInput_1;           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisappeared_IsDisappeared_1;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_IsAllMenuDisappeared) == 0x000008, "Wrong alignment on BattleCommand_C_IsAllMenuDisappeared");
static_assert(sizeof(BattleCommand_C_IsAllMenuDisappeared) == 0x000038, "Wrong size on BattleCommand_C_IsAllMenuDisappeared");
static_assert(offsetof(BattleCommand_C_IsAllMenuDisappeared, IsDisappeared) == 0x000000, "Member 'BattleCommand_C_IsAllMenuDisappeared::IsDisappeared' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsAllMenuDisappeared, CallFunc_IsDisappeared_self_CastInput) == 0x000008, "Member 'BattleCommand_C_IsAllMenuDisappeared::CallFunc_IsDisappeared_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsAllMenuDisappeared, CallFunc_IsDisappeared_IsDisappeared) == 0x000018, "Member 'BattleCommand_C_IsAllMenuDisappeared::CallFunc_IsDisappeared_IsDisappeared' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsAllMenuDisappeared, CallFunc_IsDisappeared_self_CastInput_1) == 0x000020, "Member 'BattleCommand_C_IsAllMenuDisappeared::CallFunc_IsDisappeared_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsAllMenuDisappeared, CallFunc_IsDisappeared_IsDisappeared_1) == 0x000030, "Member 'BattleCommand_C_IsAllMenuDisappeared::CallFunc_IsDisappeared_IsDisappeared_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsAllMenuDisappeared, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'BattleCommand_C_IsAllMenuDisappeared::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.GetActorIndex
// 0x0004 (0x0004 - 0x0000)
struct BattleCommand_C_GetActorIndex final
{
public:
	int32                                         M_PartyIndex;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_GetActorIndex) == 0x000004, "Wrong alignment on BattleCommand_C_GetActorIndex");
static_assert(sizeof(BattleCommand_C_GetActorIndex) == 0x000004, "Wrong size on BattleCommand_C_GetActorIndex");
static_assert(offsetof(BattleCommand_C_GetActorIndex, M_PartyIndex) == 0x000000, "Member 'BattleCommand_C_GetActorIndex::M_PartyIndex' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.HideEnemyInfoAishouNotice
// 0x0030 (0x0030 - 0x0000)
struct BattleCommand_C_HideEnemyInfoAishouNotice final
{
public:
	bool                                          ForEnemy;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForFriend;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Immediately;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A2B[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorIndex_m_PartyIndex;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_PartySystem;            // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<E_ATTRIBUTE_TYPE>                      K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_BI_EnemyInfoDrawSwitchAishouNoticeAll_NoUse; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_HideEnemyInfoAishouNotice) == 0x000008, "Wrong alignment on BattleCommand_C_HideEnemyInfoAishouNotice");
static_assert(sizeof(BattleCommand_C_HideEnemyInfoAishouNotice) == 0x000030, "Wrong size on BattleCommand_C_HideEnemyInfoAishouNotice");
static_assert(offsetof(BattleCommand_C_HideEnemyInfoAishouNotice, ForEnemy) == 0x000000, "Member 'BattleCommand_C_HideEnemyInfoAishouNotice::ForEnemy' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HideEnemyInfoAishouNotice, ForFriend) == 0x000001, "Member 'BattleCommand_C_HideEnemyInfoAishouNotice::ForFriend' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HideEnemyInfoAishouNotice, Immediately) == 0x000002, "Member 'BattleCommand_C_HideEnemyInfoAishouNotice::Immediately' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HideEnemyInfoAishouNotice, CallFunc_GetActorIndex_m_PartyIndex) == 0x000004, "Member 'BattleCommand_C_HideEnemyInfoAishouNotice::CallFunc_GetActorIndex_m_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HideEnemyInfoAishouNotice, CallFunc_BI_GetPartySystem_PartySystem) == 0x000008, "Member 'BattleCommand_C_HideEnemyInfoAishouNotice::CallFunc_BI_GetPartySystem_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HideEnemyInfoAishouNotice, K2Node_MakeArray_Array) == 0x000018, "Member 'BattleCommand_C_HideEnemyInfoAishouNotice::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HideEnemyInfoAishouNotice, CallFunc_BI_EnemyInfoDrawSwitchAishouNoticeAll_NoUse) == 0x000028, "Member 'BattleCommand_C_HideEnemyInfoAishouNotice::CallFunc_BI_EnemyInfoDrawSwitchAishouNoticeAll_NoUse' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.HideEnemyInfo
// 0x0018 (0x0018 - 0x0000)
struct BattleCommand_C_HideEnemyInfo final
{
public:
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_PartySystem;            // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_EnemyInfoDrawSwitchPartyAll_NoUse;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_HideEnemyInfo) == 0x000008, "Wrong alignment on BattleCommand_C_HideEnemyInfo");
static_assert(sizeof(BattleCommand_C_HideEnemyInfo) == 0x000018, "Wrong size on BattleCommand_C_HideEnemyInfo");
static_assert(offsetof(BattleCommand_C_HideEnemyInfo, CallFunc_BI_GetPartySystem_PartySystem) == 0x000000, "Member 'BattleCommand_C_HideEnemyInfo::CallFunc_BI_GetPartySystem_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HideEnemyInfo, CallFunc_BI_EnemyInfoDrawSwitchPartyAll_NoUse) == 0x000010, "Member 'BattleCommand_C_HideEnemyInfo::CallFunc_BI_EnemyInfoDrawSwitchPartyAll_NoUse' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CheckPenetrationEfficacy
// 0x0148 (0x0148 - 0x0000)
struct BattleCommand_C_CheckPenetrationEfficacy final
{
public:
	bool                                          IsSkill;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPenetration;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_IsPenetration;                                  // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A2C[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CalcInterface>    CallFunc_GetBPICalc_AsBPI_Calc_Interface;          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetActorIndex_m_PartyIndex;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BI_UniqueSkill_KantuuNormalAttack_ReturnValue; // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A2D[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTMemDataInterface> CallFunc_GetPTMemDataInterface_Ret;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetAidCounter_ReturnValue;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A2E[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillBaseData                         CallFunc_GetSkillBaseData_ReturnValue;             // 0x0038(0x0100)(ConstParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SkillBaseDataGetValue_IsKantuu_ReturnValue; // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A2F[0x2];                                     // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BI_GetAidCounter_ReturnValue_1;           // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CheckPenetrationEfficacy) == 0x000008, "Wrong alignment on BattleCommand_C_CheckPenetrationEfficacy");
static_assert(sizeof(BattleCommand_C_CheckPenetrationEfficacy) == 0x000148, "Wrong size on BattleCommand_C_CheckPenetrationEfficacy");
static_assert(offsetof(BattleCommand_C_CheckPenetrationEfficacy, IsSkill) == 0x000000, "Member 'BattleCommand_C_CheckPenetrationEfficacy::IsSkill' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckPenetrationEfficacy, IsPenetration) == 0x000001, "Member 'BattleCommand_C_CheckPenetrationEfficacy::IsPenetration' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckPenetrationEfficacy, Lo_IsPenetration) == 0x000002, "Member 'BattleCommand_C_CheckPenetrationEfficacy::Lo_IsPenetration' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckPenetrationEfficacy, CallFunc_GetBPICalc_AsBPI_Calc_Interface) == 0x000008, "Member 'BattleCommand_C_CheckPenetrationEfficacy::CallFunc_GetBPICalc_AsBPI_Calc_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckPenetrationEfficacy, CallFunc_GetActorIndex_m_PartyIndex) == 0x000018, "Member 'BattleCommand_C_CheckPenetrationEfficacy::CallFunc_GetActorIndex_m_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckPenetrationEfficacy, CallFunc_BI_UniqueSkill_KantuuNormalAttack_ReturnValue) == 0x00001C, "Member 'BattleCommand_C_CheckPenetrationEfficacy::CallFunc_BI_UniqueSkill_KantuuNormalAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckPenetrationEfficacy, CallFunc_GetPTMemDataInterface_Ret) == 0x000020, "Member 'BattleCommand_C_CheckPenetrationEfficacy::CallFunc_GetPTMemDataInterface_Ret' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckPenetrationEfficacy, CallFunc_BI_GetAidCounter_ReturnValue) == 0x000030, "Member 'BattleCommand_C_CheckPenetrationEfficacy::CallFunc_BI_GetAidCounter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckPenetrationEfficacy, CallFunc_GetSkillBaseData_ReturnValue) == 0x000038, "Member 'BattleCommand_C_CheckPenetrationEfficacy::CallFunc_GetSkillBaseData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckPenetrationEfficacy, CallFunc_Greater_IntInt_ReturnValue) == 0x000138, "Member 'BattleCommand_C_CheckPenetrationEfficacy::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckPenetrationEfficacy, CallFunc_SkillBaseDataGetValue_IsKantuu_ReturnValue) == 0x000139, "Member 'BattleCommand_C_CheckPenetrationEfficacy::CallFunc_SkillBaseDataGetValue_IsKantuu_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckPenetrationEfficacy, CallFunc_BI_GetAidCounter_ReturnValue_1) == 0x00013C, "Member 'BattleCommand_C_CheckPenetrationEfficacy::CallFunc_BI_GetAidCounter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckPenetrationEfficacy, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000140, "Member 'BattleCommand_C_CheckPenetrationEfficacy::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckPenetrationEfficacy, CallFunc_BooleanOR_ReturnValue) == 0x000141, "Member 'BattleCommand_C_CheckPenetrationEfficacy::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckPenetrationEfficacy, CallFunc_BooleanOR_ReturnValue_1) == 0x000142, "Member 'BattleCommand_C_CheckPenetrationEfficacy::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SetItemAishouNotice
// 0x000C (0x000C - 0x0000)
struct BattleCommand_C_SetItemAishouNotice final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                Lo_ItemArea;                                       // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TARGET                                CallFunc_CalcItemArea_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_SetItemAishouNotice) == 0x000004, "Wrong alignment on BattleCommand_C_SetItemAishouNotice");
static_assert(sizeof(BattleCommand_C_SetItemAishouNotice) == 0x00000C, "Wrong size on BattleCommand_C_SetItemAishouNotice");
static_assert(offsetof(BattleCommand_C_SetItemAishouNotice, ItemId) == 0x000000, "Member 'BattleCommand_C_SetItemAishouNotice::ItemId' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetItemAishouNotice, Lo_ItemArea) == 0x000004, "Member 'BattleCommand_C_SetItemAishouNotice::Lo_ItemArea' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetItemAishouNotice, CallFunc_CalcItemArea_ReturnValue) == 0x000005, "Member 'BattleCommand_C_SetItemAishouNotice::CallFunc_CalcItemArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetItemAishouNotice, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000006, "Member 'BattleCommand_C_SetItemAishouNotice::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetItemAishouNotice, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000007, "Member 'BattleCommand_C_SetItemAishouNotice::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetItemAishouNotice, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000008, "Member 'BattleCommand_C_SetItemAishouNotice::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetItemAishouNotice, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'BattleCommand_C_SetItemAishouNotice::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetItemAishouNotice, CallFunc_BooleanOR_ReturnValue_1) == 0x00000A, "Member 'BattleCommand_C_SetItemAishouNotice::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SetSkillAishouNotice
// 0x001C (0x001C - 0x0000)
struct BattleCommand_C_SetSkillAishouNotice final
{
public:
	int32                                         SkillId;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBtlUISkill_UseData_st                 CallFunc_GetSelectedSkillData_Data;                // 0x0004(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_SetSkillAishouNotice) == 0x000004, "Wrong alignment on BattleCommand_C_SetSkillAishouNotice");
static_assert(sizeof(BattleCommand_C_SetSkillAishouNotice) == 0x00001C, "Wrong size on BattleCommand_C_SetSkillAishouNotice");
static_assert(offsetof(BattleCommand_C_SetSkillAishouNotice, SkillId) == 0x000000, "Member 'BattleCommand_C_SetSkillAishouNotice::SkillId' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetSkillAishouNotice, CallFunc_GetSelectedSkillData_Data) == 0x000004, "Member 'BattleCommand_C_SetSkillAishouNotice::CallFunc_GetSelectedSkillData_Data' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CloseButtonHelp
// 0x0018 (0x0018 - 0x0000)
struct BattleCommand_C_CloseButtonHelp final
{
public:
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetBPIMainInterface_AsBPI_Main_Interface; // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBPIMainInterface_bSuccess;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckBattleFlag_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CloseButtonHelp) == 0x000008, "Wrong alignment on BattleCommand_C_CloseButtonHelp");
static_assert(sizeof(BattleCommand_C_CloseButtonHelp) == 0x000018, "Wrong size on BattleCommand_C_CloseButtonHelp");
static_assert(offsetof(BattleCommand_C_CloseButtonHelp, CallFunc_GetBPIMainInterface_AsBPI_Main_Interface) == 0x000000, "Member 'BattleCommand_C_CloseButtonHelp::CallFunc_GetBPIMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CloseButtonHelp, CallFunc_GetBPIMainInterface_bSuccess) == 0x000010, "Member 'BattleCommand_C_CloseButtonHelp::CallFunc_GetBPIMainInterface_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CloseButtonHelp, CallFunc_BI_CheckBattleFlag_ReturnValue) == 0x000011, "Member 'BattleCommand_C_CloseButtonHelp::CallFunc_BI_CheckBattleFlag_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.MakeSkillName
// 0x00A0 (0x00A0 - 0x0000)
struct BattleCommand_C_MakeSkillName final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A30[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	int32                                         Lo_Aptitude;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcSkillAptitude_Aptitude;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A31[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSkillName_ReturnValue;                 // 0x0028(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A32[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A33[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_MakeSkillName) == 0x000008, "Wrong alignment on BattleCommand_C_MakeSkillName");
static_assert(sizeof(BattleCommand_C_MakeSkillName) == 0x0000A0, "Wrong size on BattleCommand_C_MakeSkillName");
static_assert(offsetof(BattleCommand_C_MakeSkillName, ID) == 0x000000, "Member 'BattleCommand_C_MakeSkillName::ID' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_MakeSkillName, ReturnValue) == 0x000008, "Member 'BattleCommand_C_MakeSkillName::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_MakeSkillName, Lo_Aptitude) == 0x000018, "Member 'BattleCommand_C_MakeSkillName::Lo_Aptitude' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_MakeSkillName, CallFunc_CalcSkillAptitude_Aptitude) == 0x00001C, "Member 'BattleCommand_C_MakeSkillName::CallFunc_CalcSkillAptitude_Aptitude' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_MakeSkillName, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'BattleCommand_C_MakeSkillName::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_MakeSkillName, CallFunc_GetSkillName_ReturnValue) == 0x000028, "Member 'BattleCommand_C_MakeSkillName::CallFunc_GetSkillName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_MakeSkillName, CallFunc_Conv_TextToString_ReturnValue) == 0x000040, "Member 'BattleCommand_C_MakeSkillName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_MakeSkillName, CallFunc_Abs_Int_ReturnValue) == 0x000050, "Member 'BattleCommand_C_MakeSkillName::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_MakeSkillName, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'BattleCommand_C_MakeSkillName::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_MakeSkillName, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'BattleCommand_C_MakeSkillName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_MakeSkillName, CallFunc_SelectString_ReturnValue) == 0x000070, "Member 'BattleCommand_C_MakeSkillName::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_MakeSkillName, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'BattleCommand_C_MakeSkillName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_MakeSkillName, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'BattleCommand_C_MakeSkillName::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CalcSkillAptitude
// 0x0014 (0x0014 - 0x0000)
struct BattleCommand_C_CalcSkillAptitude final
{
public:
	int32                                         SkillId;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Aptitude;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SKILL_TEKISEI_CATEGORY                      CallFunc_GetSkillTekiseiCategory_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A34[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CalcSkillAptitude) == 0x000004, "Wrong alignment on BattleCommand_C_CalcSkillAptitude");
static_assert(sizeof(BattleCommand_C_CalcSkillAptitude) == 0x000014, "Wrong size on BattleCommand_C_CalcSkillAptitude");
static_assert(offsetof(BattleCommand_C_CalcSkillAptitude, SkillId) == 0x000000, "Member 'BattleCommand_C_CalcSkillAptitude::SkillId' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcSkillAptitude, Aptitude) == 0x000004, "Member 'BattleCommand_C_CalcSkillAptitude::Aptitude' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcSkillAptitude, CallFunc_GetSkillTekiseiCategory_ReturnValue) == 0x000008, "Member 'BattleCommand_C_CalcSkillAptitude::CallFunc_GetSkillTekiseiCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcSkillAptitude, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'BattleCommand_C_CalcSkillAptitude::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcSkillAptitude, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000010, "Member 'BattleCommand_C_CalcSkillAptitude::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.IsPassSelectable
// 0x0030 (0x0030 - 0x0000)
struct BattleCommand_C_IsPassSelectable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A35[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTUtilInterface>  CallFunc_GetBPIPTUtilInterface_Ret;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_BI_GetSideIsInFieldList_ReturnValue;      // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_IsPassSelectable) == 0x000008, "Wrong alignment on BattleCommand_C_IsPassSelectable");
static_assert(sizeof(BattleCommand_C_IsPassSelectable) == 0x000030, "Wrong size on BattleCommand_C_IsPassSelectable");
static_assert(offsetof(BattleCommand_C_IsPassSelectable, ReturnValue) == 0x000000, "Member 'BattleCommand_C_IsPassSelectable::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsPassSelectable, CallFunc_GetBPIPTUtilInterface_Ret) == 0x000008, "Member 'BattleCommand_C_IsPassSelectable::CallFunc_GetBPIPTUtilInterface_Ret' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsPassSelectable, CallFunc_BI_GetSideIsInFieldList_ReturnValue) == 0x000018, "Member 'BattleCommand_C_IsPassSelectable::CallFunc_BI_GetSideIsInFieldList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsPassSelectable, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BattleCommand_C_IsPassSelectable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsPassSelectable, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'BattleCommand_C_IsPassSelectable::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.IsInFirstBattleTutorial
// 0x0001 (0x0001 - 0x0000)
struct BattleCommand_C_IsInFirstBattleTutorial final
{
public:
	bool                                          IsTutorial;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_IsInFirstBattleTutorial) == 0x000001, "Wrong alignment on BattleCommand_C_IsInFirstBattleTutorial");
static_assert(sizeof(BattleCommand_C_IsInFirstBattleTutorial) == 0x000001, "Wrong size on BattleCommand_C_IsInFirstBattleTutorial");
static_assert(offsetof(BattleCommand_C_IsInFirstBattleTutorial, IsTutorial) == 0x000000, "Member 'BattleCommand_C_IsInFirstBattleTutorial::IsTutorial' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CheckFirstBattleTutorial
// 0x0020 (0x0020 - 0x0000)
struct BattleCommand_C_CheckFirstBattleTutorial final
{
public:
	bool                                          IsTutorial;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A36[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetBPIMainInterface_AsBPI_Main_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBPIMainInterface_bSuccess;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckTutorial_ReturnValue;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckTutorial_ReturnValue_1;           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckTutorial_ReturnValue_2;           // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckTutorial_ReturnValue_3;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CheckFirstBattleTutorial) == 0x000008, "Wrong alignment on BattleCommand_C_CheckFirstBattleTutorial");
static_assert(sizeof(BattleCommand_C_CheckFirstBattleTutorial) == 0x000020, "Wrong size on BattleCommand_C_CheckFirstBattleTutorial");
static_assert(offsetof(BattleCommand_C_CheckFirstBattleTutorial, IsTutorial) == 0x000000, "Member 'BattleCommand_C_CheckFirstBattleTutorial::IsTutorial' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckFirstBattleTutorial, CallFunc_GetBPIMainInterface_AsBPI_Main_Interface) == 0x000008, "Member 'BattleCommand_C_CheckFirstBattleTutorial::CallFunc_GetBPIMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckFirstBattleTutorial, CallFunc_GetBPIMainInterface_bSuccess) == 0x000018, "Member 'BattleCommand_C_CheckFirstBattleTutorial::CallFunc_GetBPIMainInterface_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckFirstBattleTutorial, CallFunc_BI_CheckTutorial_ReturnValue) == 0x000019, "Member 'BattleCommand_C_CheckFirstBattleTutorial::CallFunc_BI_CheckTutorial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckFirstBattleTutorial, CallFunc_BI_CheckTutorial_ReturnValue_1) == 0x00001A, "Member 'BattleCommand_C_CheckFirstBattleTutorial::CallFunc_BI_CheckTutorial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckFirstBattleTutorial, CallFunc_BI_CheckTutorial_ReturnValue_2) == 0x00001B, "Member 'BattleCommand_C_CheckFirstBattleTutorial::CallFunc_BI_CheckTutorial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckFirstBattleTutorial, CallFunc_BI_CheckTutorial_ReturnValue_3) == 0x00001C, "Member 'BattleCommand_C_CheckFirstBattleTutorial::CallFunc_BI_CheckTutorial_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckFirstBattleTutorial, CallFunc_BooleanOR_ReturnValue) == 0x00001D, "Member 'BattleCommand_C_CheckFirstBattleTutorial::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckFirstBattleTutorial, CallFunc_BooleanOR_ReturnValue_1) == 0x00001E, "Member 'BattleCommand_C_CheckFirstBattleTutorial::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckFirstBattleTutorial, CallFunc_BooleanOR_ReturnValue_2) == 0x00001F, "Member 'BattleCommand_C_CheckFirstBattleTutorial::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.IsKeyInputOK
// 0x0006 (0x0006 - 0x0000)
struct BattleCommand_C_IsKeyInputOK final
{
public:
	bool                                          OK;                                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInFirstBattleTutorial_IsTutorial;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlag_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_IsKeyInputOK) == 0x000001, "Wrong alignment on BattleCommand_C_IsKeyInputOK");
static_assert(sizeof(BattleCommand_C_IsKeyInputOK) == 0x000006, "Wrong size on BattleCommand_C_IsKeyInputOK");
static_assert(offsetof(BattleCommand_C_IsKeyInputOK, OK) == 0x000000, "Member 'BattleCommand_C_IsKeyInputOK::OK' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsKeyInputOK, CallFunc_IsInFirstBattleTutorial_IsTutorial) == 0x000001, "Member 'BattleCommand_C_IsKeyInputOK::CallFunc_IsInFirstBattleTutorial_IsTutorial' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsKeyInputOK, CallFunc_CheckEventFlag_ReturnValue) == 0x000002, "Member 'BattleCommand_C_IsKeyInputOK::CallFunc_CheckEventFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsKeyInputOK, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BattleCommand_C_IsKeyInputOK::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsKeyInputOK, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'BattleCommand_C_IsKeyInputOK::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsKeyInputOK, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BattleCommand_C_IsKeyInputOK::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.HaveToDoTutorial
// 0x0020 (0x0020 - 0x0000)
struct BattleCommand_C_HaveToDoTutorial final
{
public:
	E_BTL_TUTORIAL                                Tutorial;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A37[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetBPIMainInterface_AsBPI_Main_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBPIMainInterface_bSuccess;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_CheckTutorial_ReturnValue;             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_HaveToDoTutorial) == 0x000008, "Wrong alignment on BattleCommand_C_HaveToDoTutorial");
static_assert(sizeof(BattleCommand_C_HaveToDoTutorial) == 0x000020, "Wrong size on BattleCommand_C_HaveToDoTutorial");
static_assert(offsetof(BattleCommand_C_HaveToDoTutorial, Tutorial) == 0x000000, "Member 'BattleCommand_C_HaveToDoTutorial::Tutorial' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HaveToDoTutorial, ReturnValue) == 0x000001, "Member 'BattleCommand_C_HaveToDoTutorial::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HaveToDoTutorial, CallFunc_GetBPIMainInterface_AsBPI_Main_Interface) == 0x000008, "Member 'BattleCommand_C_HaveToDoTutorial::CallFunc_GetBPIMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HaveToDoTutorial, CallFunc_GetBPIMainInterface_bSuccess) == 0x000018, "Member 'BattleCommand_C_HaveToDoTutorial::CallFunc_GetBPIMainInterface_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HaveToDoTutorial, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BattleCommand_C_HaveToDoTutorial::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HaveToDoTutorial, CallFunc_BI_CheckTutorial_ReturnValue) == 0x00001A, "Member 'BattleCommand_C_HaveToDoTutorial::CallFunc_BI_CheckTutorial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_HaveToDoTutorial, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'BattleCommand_C_HaveToDoTutorial::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.ReduceBGM
// 0x0018 (0x0018 - 0x0000)
struct BattleCommand_C_ReduceBGM final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameVolume_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_ReduceBGM) == 0x000008, "Wrong alignment on BattleCommand_C_ReduceBGM");
static_assert(sizeof(BattleCommand_C_ReduceBGM) == 0x000018, "Wrong size on BattleCommand_C_ReduceBGM");
static_assert(offsetof(BattleCommand_C_ReduceBGM, Rate) == 0x000000, "Member 'BattleCommand_C_ReduceBGM::Rate' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ReduceBGM, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BattleCommand_C_ReduceBGM::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ReduceBGM, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BattleCommand_C_ReduceBGM::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_ReduceBGM, CallFunc_GetGameVolume_ReturnValue) == 0x000010, "Member 'BattleCommand_C_ReduceBGM::CallFunc_GetGameVolume_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.ResumeBGM
// 0x0008 (0x0008 - 0x0000)
struct BattleCommand_C_ResumeBGM final
{
public:
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_ResumeBGM) == 0x000008, "Wrong alignment on BattleCommand_C_ResumeBGM");
static_assert(sizeof(BattleCommand_C_ResumeBGM) == 0x000008, "Wrong size on BattleCommand_C_ResumeBGM");
static_assert(offsetof(BattleCommand_C_ResumeBGM, CallFunc_Get_ReturnValue) == 0x000000, "Member 'BattleCommand_C_ResumeBGM::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.IsReturnFromSelfTargeting
// 0x0009 (0x0009 - 0x0000)
struct BattleCommand_C_IsReturnFromSelfTargeting final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SKILL_TARGET                                CallFunc_BI_TargetSelectGetCurrentTargetType_NewParam; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_IsReturnFromSelfTargeting) == 0x000001, "Wrong alignment on BattleCommand_C_IsReturnFromSelfTargeting");
static_assert(sizeof(BattleCommand_C_IsReturnFromSelfTargeting) == 0x000009, "Wrong size on BattleCommand_C_IsReturnFromSelfTargeting");
static_assert(offsetof(BattleCommand_C_IsReturnFromSelfTargeting, ReturnValue) == 0x000000, "Member 'BattleCommand_C_IsReturnFromSelfTargeting::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsReturnFromSelfTargeting, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BattleCommand_C_IsReturnFromSelfTargeting::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsReturnFromSelfTargeting, CallFunc_BI_TargetSelectGetCurrentTargetType_NewParam) == 0x000002, "Member 'BattleCommand_C_IsReturnFromSelfTargeting::CallFunc_BI_TargetSelectGetCurrentTargetType_NewParam' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsReturnFromSelfTargeting, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'BattleCommand_C_IsReturnFromSelfTargeting::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsReturnFromSelfTargeting, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000004, "Member 'BattleCommand_C_IsReturnFromSelfTargeting::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsReturnFromSelfTargeting, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000005, "Member 'BattleCommand_C_IsReturnFromSelfTargeting::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsReturnFromSelfTargeting, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'BattleCommand_C_IsReturnFromSelfTargeting::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsReturnFromSelfTargeting, CallFunc_BooleanOR_ReturnValue_1) == 0x000007, "Member 'BattleCommand_C_IsReturnFromSelfTargeting::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsReturnFromSelfTargeting, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'BattleCommand_C_IsReturnFromSelfTargeting::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.IsHeroSleeped
// 0x0020 (0x0020 - 0x0000)
struct BattleCommand_C_IsHeroSleeped final
{
public:
	bool                                          Sleeped;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A38[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHeroIndex_Index;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleParty_C>    CallFunc_BI_GetPartySystem_PartySystem;            // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetBadStatus_retValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BIT_AND_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_IsHeroSleeped) == 0x000008, "Wrong alignment on BattleCommand_C_IsHeroSleeped");
static_assert(sizeof(BattleCommand_C_IsHeroSleeped) == 0x000020, "Wrong size on BattleCommand_C_IsHeroSleeped");
static_assert(offsetof(BattleCommand_C_IsHeroSleeped, Sleeped) == 0x000000, "Member 'BattleCommand_C_IsHeroSleeped::Sleeped' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsHeroSleeped, CallFunc_MakeLiteralByte_ReturnValue) == 0x000001, "Member 'BattleCommand_C_IsHeroSleeped::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsHeroSleeped, CallFunc_GetHeroIndex_Index) == 0x000004, "Member 'BattleCommand_C_IsHeroSleeped::CallFunc_GetHeroIndex_Index' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsHeroSleeped, CallFunc_BI_GetPartySystem_PartySystem) == 0x000008, "Member 'BattleCommand_C_IsHeroSleeped::CallFunc_BI_GetPartySystem_PartySystem' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsHeroSleeped, CallFunc_BI_GetBadStatus_retValue) == 0x000018, "Member 'BattleCommand_C_IsHeroSleeped::CallFunc_BI_GetBadStatus_retValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_IsHeroSleeped, CallFunc_BIT_AND_ReturnValue) == 0x00001C, "Member 'BattleCommand_C_IsHeroSleeped::CallFunc_BIT_AND_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.EndEscapeMenu
// 0x0001 (0x0001 - 0x0000)
struct BattleCommand_C_EndEscapeMenu final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_EndEscapeMenu) == 0x000001, "Wrong alignment on BattleCommand_C_EndEscapeMenu");
static_assert(sizeof(BattleCommand_C_EndEscapeMenu) == 0x000001, "Wrong size on BattleCommand_C_EndEscapeMenu");
static_assert(offsetof(BattleCommand_C_EndEscapeMenu, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BattleCommand_C_EndEscapeMenu::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.OnCommandListHovered
// 0x0004 (0x0004 - 0x0000)
struct BattleCommand_C_OnCommandListHovered final
{
public:
	int32                                         ShiftIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_OnCommandListHovered) == 0x000004, "Wrong alignment on BattleCommand_C_OnCommandListHovered");
static_assert(sizeof(BattleCommand_C_OnCommandListHovered) == 0x000004, "Wrong size on BattleCommand_C_OnCommandListHovered");
static_assert(offsetof(BattleCommand_C_OnCommandListHovered, ShiftIndex) == 0x000000, "Member 'BattleCommand_C_OnCommandListHovered::ShiftIndex' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.OnCommandListClicked
// 0x0001 (0x0001 - 0x0000)
struct BattleCommand_C_OnCommandListClicked final
{
public:
	E_BTL_UI_COMMAND                              Command;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_OnCommandListClicked) == 0x000001, "Wrong alignment on BattleCommand_C_OnCommandListClicked");
static_assert(sizeof(BattleCommand_C_OnCommandListClicked) == 0x000001, "Wrong size on BattleCommand_C_OnCommandListClicked");
static_assert(offsetof(BattleCommand_C_OnCommandListClicked, Command) == 0x000000, "Member 'BattleCommand_C_OnCommandListClicked::Command' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.UpdateCtrl
// 0x0003 (0x0003 - 0x0000)
struct BattleCommand_C_UpdateCtrl final
{
public:
	E_BTL_UI_COMM_STEP                            CallFunc_TopStep_TopStep;                          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_UpdateCtrl) == 0x000001, "Wrong alignment on BattleCommand_C_UpdateCtrl");
static_assert(sizeof(BattleCommand_C_UpdateCtrl) == 0x000003, "Wrong size on BattleCommand_C_UpdateCtrl");
static_assert(offsetof(BattleCommand_C_UpdateCtrl, CallFunc_TopStep_TopStep) == 0x000000, "Member 'BattleCommand_C_UpdateCtrl::CallFunc_TopStep_TopStep' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateCtrl, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BattleCommand_C_UpdateCtrl::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateCtrl, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BattleCommand_C_UpdateCtrl::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.UpdateUI
// 0x0020 (0x0020 - 0x0000)
struct BattleCommand_C_UpdateUI final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A39[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IWBPI_BtlCommon_C>     CallFunc_CallTick_self_CastInput;                  // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_UpdateUI) == 0x000008, "Wrong alignment on BattleCommand_C_UpdateUI");
static_assert(sizeof(BattleCommand_C_UpdateUI) == 0x000020, "Wrong size on BattleCommand_C_UpdateUI");
static_assert(offsetof(BattleCommand_C_UpdateUI, Delta) == 0x000000, "Member 'BattleCommand_C_UpdateUI::Delta' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateUI, CallFunc_CallTick_self_CastInput) == 0x000008, "Member 'BattleCommand_C_UpdateUI::CallFunc_CallTick_self_CastInput' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateUI, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BattleCommand_C_UpdateUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.OnListMenuMoveCursor
// 0x0004 (0x0004 - 0x0000)
struct BattleCommand_C_OnListMenuMoveCursor final
{
public:
	int32                                         MoveDirection;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_OnListMenuMoveCursor) == 0x000004, "Wrong alignment on BattleCommand_C_OnListMenuMoveCursor");
static_assert(sizeof(BattleCommand_C_OnListMenuMoveCursor) == 0x000004, "Wrong size on BattleCommand_C_OnListMenuMoveCursor");
static_assert(offsetof(BattleCommand_C_OnListMenuMoveCursor, MoveDirection) == 0x000000, "Member 'BattleCommand_C_OnListMenuMoveCursor::MoveDirection' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CheckCancel
// 0x0004 (0x0004 - 0x0000)
struct BattleCommand_C_CheckCancel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CheckCancel) == 0x000001, "Wrong alignment on BattleCommand_C_CheckCancel");
static_assert(sizeof(BattleCommand_C_CheckCancel) == 0x000004, "Wrong size on BattleCommand_C_CheckCancel");
static_assert(offsetof(BattleCommand_C_CheckCancel, ReturnValue) == 0x000000, "Member 'BattleCommand_C_CheckCancel::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckCancel, CallFunc_IsActionPadCheck_Success) == 0x000001, "Member 'BattleCommand_C_CheckCancel::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckCancel, CallFunc_IsActionPadCheck_Success_1) == 0x000002, "Member 'BattleCommand_C_CheckCancel::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckCancel, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BattleCommand_C_CheckCancel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CheckAction
// 0x000B (0x000B - 0x0000)
struct BattleCommand_C_CheckAction final
{
public:
	E_INPUT_TYPE                                  InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForSkillAndItem;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_2;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_CheckAction) == 0x000001, "Wrong alignment on BattleCommand_C_CheckAction");
static_assert(sizeof(BattleCommand_C_CheckAction) == 0x00000B, "Wrong size on BattleCommand_C_CheckAction");
static_assert(offsetof(BattleCommand_C_CheckAction, InputType) == 0x000000, "Member 'BattleCommand_C_CheckAction::InputType' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckAction, ForSkillAndItem) == 0x000001, "Member 'BattleCommand_C_CheckAction::ForSkillAndItem' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckAction, ReturnValue) == 0x000002, "Member 'BattleCommand_C_CheckAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckAction, Temp_bool_Variable) == 0x000003, "Member 'BattleCommand_C_CheckAction::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckAction, CallFunc_IsActionPadCheck_Success) == 0x000004, "Member 'BattleCommand_C_CheckAction::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckAction, CallFunc_IsActionPadCheck_Success_1) == 0x000005, "Member 'BattleCommand_C_CheckAction::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckAction, CallFunc_IsActionPadCheck_Success_2) == 0x000006, "Member 'BattleCommand_C_CheckAction::CallFunc_IsActionPadCheck_Success_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckAction, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000007, "Member 'BattleCommand_C_CheckAction::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckAction, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'BattleCommand_C_CheckAction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckAction, K2Node_Select_Default) == 0x000009, "Member 'BattleCommand_C_CheckAction::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CheckAction, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'BattleCommand_C_CheckAction::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.UpdateIconHelpWindow
// 0x0006 (0x0006 - 0x0000)
struct BattleCommand_C_UpdateIconHelpWindow final
{
public:
	bool                                          WindowClose;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TutorialWindow_WidgetState                  CallFunc_BPL_TutorialWIndow2_GetAnimState_AnimState; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCancel_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPL_TutorialWIndow2_IsClickedByMouse_IsClicked; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_UpdateIconHelpWindow) == 0x000001, "Wrong alignment on BattleCommand_C_UpdateIconHelpWindow");
static_assert(sizeof(BattleCommand_C_UpdateIconHelpWindow) == 0x000006, "Wrong size on BattleCommand_C_UpdateIconHelpWindow");
static_assert(offsetof(BattleCommand_C_UpdateIconHelpWindow, WindowClose) == 0x000000, "Member 'BattleCommand_C_UpdateIconHelpWindow::WindowClose' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateIconHelpWindow, CallFunc_BPL_TutorialWIndow2_GetAnimState_AnimState) == 0x000001, "Member 'BattleCommand_C_UpdateIconHelpWindow::CallFunc_BPL_TutorialWIndow2_GetAnimState_AnimState' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateIconHelpWindow, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'BattleCommand_C_UpdateIconHelpWindow::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateIconHelpWindow, CallFunc_CheckCancel_ReturnValue) == 0x000003, "Member 'BattleCommand_C_UpdateIconHelpWindow::CallFunc_CheckCancel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateIconHelpWindow, CallFunc_BPL_TutorialWIndow2_IsClickedByMouse_IsClicked) == 0x000004, "Member 'BattleCommand_C_UpdateIconHelpWindow::CallFunc_BPL_TutorialWIndow2_IsClickedByMouse_IsClicked' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateIconHelpWindow, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'BattleCommand_C_UpdateIconHelpWindow::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.OpenAutoBattleActionTypeDialog
// 0x0070 (0x0070 - 0x0000)
struct BattleCommand_C_OpenAutoBattleActionTypeDialog final
{
public:
	bool                                          AllInOne;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A3A[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A3B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A3C[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A3D[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor;         // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IWasConfirmedByMouse_bConfirmed;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A3E[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IWasConfirmedByMouse_ItemIndex;           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_SpawnSound2D_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_OpenAutoBattleActionTypeDialog) == 0x000008, "Wrong alignment on BattleCommand_C_OpenAutoBattleActionTypeDialog");
static_assert(sizeof(BattleCommand_C_OpenAutoBattleActionTypeDialog) == 0x000070, "Wrong size on BattleCommand_C_OpenAutoBattleActionTypeDialog");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleActionTypeDialog, AllInOne) == 0x000000, "Member 'BattleCommand_C_OpenAutoBattleActionTypeDialog::AllInOne' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleActionTypeDialog, Temp_bool_Variable) == 0x000001, "Member 'BattleCommand_C_OpenAutoBattleActionTypeDialog::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleActionTypeDialog, Temp_name_Variable) == 0x000004, "Member 'BattleCommand_C_OpenAutoBattleActionTypeDialog::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleActionTypeDialog, Temp_name_Variable_1) == 0x00000C, "Member 'BattleCommand_C_OpenAutoBattleActionTypeDialog::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleActionTypeDialog, CallFunc_Get_ReturnValue) == 0x000018, "Member 'BattleCommand_C_OpenAutoBattleActionTypeDialog::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleActionTypeDialog, K2Node_DynamicCast_AsBPI_UIManager) == 0x000020, "Member 'BattleCommand_C_OpenAutoBattleActionTypeDialog::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleActionTypeDialog, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BattleCommand_C_OpenAutoBattleActionTypeDialog::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleActionTypeDialog, K2Node_Select_Default) == 0x000034, "Member 'BattleCommand_C_OpenAutoBattleActionTypeDialog::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleActionTypeDialog, CallFunc_BPI_GetDialogWindowCtrl_OutActor) == 0x000040, "Member 'BattleCommand_C_OpenAutoBattleActionTypeDialog::CallFunc_BPI_GetDialogWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleActionTypeDialog, K2Node_MakeArray_Array) == 0x000050, "Member 'BattleCommand_C_OpenAutoBattleActionTypeDialog::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleActionTypeDialog, CallFunc_IWasConfirmedByMouse_bConfirmed) == 0x000060, "Member 'BattleCommand_C_OpenAutoBattleActionTypeDialog::CallFunc_IWasConfirmedByMouse_bConfirmed' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleActionTypeDialog, CallFunc_IWasConfirmedByMouse_ItemIndex) == 0x000064, "Member 'BattleCommand_C_OpenAutoBattleActionTypeDialog::CallFunc_IWasConfirmedByMouse_ItemIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleActionTypeDialog, CallFunc_SpawnSound2D_ReturnValue) == 0x000068, "Member 'BattleCommand_C_OpenAutoBattleActionTypeDialog::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.OpenAutoBattleStartDialog
// 0x0050 (0x0050 - 0x0000)
struct BattleCommand_C_OpenAutoBattleStartDialog final
{
public:
	class UAtomComponent*                         CallFunc_SpawnSound2D_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A3F[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor;         // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IWasConfirmedByMouse_bConfirmed;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A40[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IWasConfirmedByMouse_ItemIndex;           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_OpenAutoBattleStartDialog) == 0x000008, "Wrong alignment on BattleCommand_C_OpenAutoBattleStartDialog");
static_assert(sizeof(BattleCommand_C_OpenAutoBattleStartDialog) == 0x000050, "Wrong size on BattleCommand_C_OpenAutoBattleStartDialog");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleStartDialog, CallFunc_SpawnSound2D_ReturnValue) == 0x000000, "Member 'BattleCommand_C_OpenAutoBattleStartDialog::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleStartDialog, K2Node_MakeArray_Array) == 0x000008, "Member 'BattleCommand_C_OpenAutoBattleStartDialog::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleStartDialog, CallFunc_Get_ReturnValue) == 0x000018, "Member 'BattleCommand_C_OpenAutoBattleStartDialog::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleStartDialog, K2Node_DynamicCast_AsBPI_UIManager) == 0x000020, "Member 'BattleCommand_C_OpenAutoBattleStartDialog::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleStartDialog, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BattleCommand_C_OpenAutoBattleStartDialog::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleStartDialog, CallFunc_BPI_GetDialogWindowCtrl_OutActor) == 0x000038, "Member 'BattleCommand_C_OpenAutoBattleStartDialog::CallFunc_BPI_GetDialogWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleStartDialog, CallFunc_IWasConfirmedByMouse_bConfirmed) == 0x000048, "Member 'BattleCommand_C_OpenAutoBattleStartDialog::CallFunc_IWasConfirmedByMouse_bConfirmed' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_OpenAutoBattleStartDialog, CallFunc_IWasConfirmedByMouse_ItemIndex) == 0x00004C, "Member 'BattleCommand_C_OpenAutoBattleStartDialog::CallFunc_IWasConfirmedByMouse_ItemIndex' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SetWeakAutoBattle
// 0x0020 (0x0020 - 0x0000)
struct BattleCommand_C_SetWeakAutoBattle final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A41[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MainInterface>    CallFunc_GetBPIMainInterface_AsBPI_Main_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBPIMainInterface_bSuccess;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_SetWeakAutoBattle) == 0x000008, "Wrong alignment on BattleCommand_C_SetWeakAutoBattle");
static_assert(sizeof(BattleCommand_C_SetWeakAutoBattle) == 0x000020, "Wrong size on BattleCommand_C_SetWeakAutoBattle");
static_assert(offsetof(BattleCommand_C_SetWeakAutoBattle, Condition) == 0x000000, "Member 'BattleCommand_C_SetWeakAutoBattle::Condition' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetWeakAutoBattle, CallFunc_GetBPIMainInterface_AsBPI_Main_Interface) == 0x000008, "Member 'BattleCommand_C_SetWeakAutoBattle::CallFunc_GetBPIMainInterface_AsBPI_Main_Interface' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SetWeakAutoBattle, CallFunc_GetBPIMainInterface_bSuccess) == 0x000018, "Member 'BattleCommand_C_SetWeakAutoBattle::CallFunc_GetBPIMainInterface_bSuccess' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.CalcItemCursorIndex
// 0x0028 (0x0028 - 0x0000)
struct BattleCommand_C_CalcItemCursorIndex final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemCursorIndex;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_OPTION_CONTENT_ITEM_PRIORITIZE_TYPE         CallFunc_GetBattleItemSortType_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A42[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_ItemGetHaveItems_Battle_ReturnValue;      // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_CalcItemCursorIndex) == 0x000008, "Wrong alignment on BattleCommand_C_CalcItemCursorIndex");
static_assert(sizeof(BattleCommand_C_CalcItemCursorIndex) == 0x000028, "Wrong size on BattleCommand_C_CalcItemCursorIndex");
static_assert(offsetof(BattleCommand_C_CalcItemCursorIndex, ItemId) == 0x000000, "Member 'BattleCommand_C_CalcItemCursorIndex::ItemId' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemCursorIndex, ItemCursorIndex) == 0x000004, "Member 'BattleCommand_C_CalcItemCursorIndex::ItemCursorIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemCursorIndex, CallFunc_GetBattleItemSortType_ReturnValue) == 0x000008, "Member 'BattleCommand_C_CalcItemCursorIndex::CallFunc_GetBattleItemSortType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemCursorIndex, CallFunc_ItemGetHaveItems_Battle_ReturnValue) == 0x000010, "Member 'BattleCommand_C_CalcItemCursorIndex::CallFunc_ItemGetHaveItems_Battle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemCursorIndex, CallFunc_Array_Find_ReturnValue) == 0x000020, "Member 'BattleCommand_C_CalcItemCursorIndex::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_CalcItemCursorIndex, CallFunc_Max_ReturnValue) == 0x000024, "Member 'BattleCommand_C_CalcItemCursorIndex::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.RestoreCursorIndex
// 0x001C (0x001C - 0x0000)
struct BattleCommand_C_RestoreCursorIndex final
{
public:
	E_BTL_UI_COMMAND                              Command;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetBattleCursorPositionType_ReturnValue;  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A43[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_CURSOR_MEMORY_T                   CallFunc_Map_Find_Value;                           // 0x0008(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A44[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcItemCursorIndex_ItemCursorIndex;      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleCommand_C_RestoreCursorIndex) == 0x000004, "Wrong alignment on BattleCommand_C_RestoreCursorIndex");
static_assert(sizeof(BattleCommand_C_RestoreCursorIndex) == 0x00001C, "Wrong size on BattleCommand_C_RestoreCursorIndex");
static_assert(offsetof(BattleCommand_C_RestoreCursorIndex, Command) == 0x000000, "Member 'BattleCommand_C_RestoreCursorIndex::Command' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_RestoreCursorIndex, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BattleCommand_C_RestoreCursorIndex::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_RestoreCursorIndex, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BattleCommand_C_RestoreCursorIndex::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_RestoreCursorIndex, CallFunc_GetBattleCursorPositionType_ReturnValue) == 0x000003, "Member 'BattleCommand_C_RestoreCursorIndex::CallFunc_GetBattleCursorPositionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_RestoreCursorIndex, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000004, "Member 'BattleCommand_C_RestoreCursorIndex::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_RestoreCursorIndex, CallFunc_Map_Find_Value) == 0x000008, "Member 'BattleCommand_C_RestoreCursorIndex::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_RestoreCursorIndex, CallFunc_Map_Find_ReturnValue) == 0x000014, "Member 'BattleCommand_C_RestoreCursorIndex::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_RestoreCursorIndex, CallFunc_CalcItemCursorIndex_ItemCursorIndex) == 0x000018, "Member 'BattleCommand_C_RestoreCursorIndex::CallFunc_CalcItemCursorIndex_ItemCursorIndex' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.SaveCursorIndex
// 0x003C (0x003C - 0x0000)
struct BattleCommand_C_SaveCursorIndex final
{
public:
	struct FBTL_CURSOR_MEMORY_T                   Lo_SavedCursor;                                    // 0x0000(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_UI_COMMAND                              Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetBattleCursorPositionType_ReturnValue;  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A45[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTL_UI_COMMAND                              K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A46[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_CURSOR_MEMORY_T                   K2Node_MakeStruct_BTL_CURSOR_MEMORY_T;             // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBTL_CURSOR_MEMORY_T                   CallFunc_Map_Find_Value;                           // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_SaveCursorIndex) == 0x000004, "Wrong alignment on BattleCommand_C_SaveCursorIndex");
static_assert(sizeof(BattleCommand_C_SaveCursorIndex) == 0x00003C, "Wrong size on BattleCommand_C_SaveCursorIndex");
static_assert(offsetof(BattleCommand_C_SaveCursorIndex, Lo_SavedCursor) == 0x000000, "Member 'BattleCommand_C_SaveCursorIndex::Lo_SavedCursor' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SaveCursorIndex, Temp_byte_Variable) == 0x00000C, "Member 'BattleCommand_C_SaveCursorIndex::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SaveCursorIndex, Temp_bool_Variable) == 0x00000D, "Member 'BattleCommand_C_SaveCursorIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SaveCursorIndex, CallFunc_GetBattleCursorPositionType_ReturnValue) == 0x00000E, "Member 'BattleCommand_C_SaveCursorIndex::CallFunc_GetBattleCursorPositionType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SaveCursorIndex, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000F, "Member 'BattleCommand_C_SaveCursorIndex::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SaveCursorIndex, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000010, "Member 'BattleCommand_C_SaveCursorIndex::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SaveCursorIndex, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000011, "Member 'BattleCommand_C_SaveCursorIndex::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SaveCursorIndex, CallFunc_SelectInt_ReturnValue) == 0x000014, "Member 'BattleCommand_C_SaveCursorIndex::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SaveCursorIndex, CallFunc_SelectInt_ReturnValue_1) == 0x000018, "Member 'BattleCommand_C_SaveCursorIndex::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SaveCursorIndex, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00001C, "Member 'BattleCommand_C_SaveCursorIndex::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SaveCursorIndex, K2Node_Select_Default) == 0x00001D, "Member 'BattleCommand_C_SaveCursorIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SaveCursorIndex, K2Node_MakeStruct_BTL_CURSOR_MEMORY_T) == 0x000020, "Member 'BattleCommand_C_SaveCursorIndex::K2Node_MakeStruct_BTL_CURSOR_MEMORY_T' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SaveCursorIndex, CallFunc_Map_Find_Value) == 0x00002C, "Member 'BattleCommand_C_SaveCursorIndex::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_SaveCursorIndex, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'BattleCommand_C_SaveCursorIndex::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.GetFirstTargetSelfSide
// 0x0030 (0x0030 - 0x0000)
struct BattleCommand_C_GetFirstTargetSelfSide final
{
public:
	int32                                         TargetIndex;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeroIndex_Index;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A47[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActorIndex_m_PartyIndex;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A48[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PTMemDataInterface> CallFunc_GetPTMemDataInterface_Ret;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BI_GetStartPartyIndexWhenPlayerTargetSelect_ReturnValue; // 0x0028(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_GetFirstTargetSelfSide) == 0x000008, "Wrong alignment on BattleCommand_C_GetFirstTargetSelfSide");
static_assert(sizeof(BattleCommand_C_GetFirstTargetSelfSide) == 0x000030, "Wrong size on BattleCommand_C_GetFirstTargetSelfSide");
static_assert(offsetof(BattleCommand_C_GetFirstTargetSelfSide, TargetIndex) == 0x000000, "Member 'BattleCommand_C_GetFirstTargetSelfSide::TargetIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetFirstTargetSelfSide, CallFunc_GetHeroIndex_Index) == 0x000004, "Member 'BattleCommand_C_GetFirstTargetSelfSide::CallFunc_GetHeroIndex_Index' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetFirstTargetSelfSide, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BattleCommand_C_GetFirstTargetSelfSide::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetFirstTargetSelfSide, CallFunc_GetActorIndex_m_PartyIndex) == 0x00000C, "Member 'BattleCommand_C_GetFirstTargetSelfSide::CallFunc_GetActorIndex_m_PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetFirstTargetSelfSide, CallFunc_SelectInt_ReturnValue) == 0x000010, "Member 'BattleCommand_C_GetFirstTargetSelfSide::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetFirstTargetSelfSide, CallFunc_GetPTMemDataInterface_Ret) == 0x000018, "Member 'BattleCommand_C_GetFirstTargetSelfSide::CallFunc_GetPTMemDataInterface_Ret' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetFirstTargetSelfSide, CallFunc_BI_GetStartPartyIndexWhenPlayerTargetSelect_ReturnValue) == 0x000028, "Member 'BattleCommand_C_GetFirstTargetSelfSide::CallFunc_BI_GetStartPartyIndexWhenPlayerTargetSelect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_GetFirstTargetSelfSide, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BattleCommand_C_GetFirstTargetSelfSide::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.BI_ResetCursorMemory
// 0x0024 (0x0024 - 0x0000)
struct BattleCommand_C_BI_ResetCursorMemory final
{
public:
	int32                                         PartyIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A49[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_CURSOR_MEMORY_T                   K2Node_MakeStruct_BTL_CURSOR_MEMORY_T;             // 0x0008(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBTL_CURSOR_MEMORY_T                   CallFunc_Map_Find_Value;                           // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_BI_ResetCursorMemory) == 0x000004, "Wrong alignment on BattleCommand_C_BI_ResetCursorMemory");
static_assert(sizeof(BattleCommand_C_BI_ResetCursorMemory) == 0x000024, "Wrong size on BattleCommand_C_BI_ResetCursorMemory");
static_assert(offsetof(BattleCommand_C_BI_ResetCursorMemory, PartyIndex) == 0x000000, "Member 'BattleCommand_C_BI_ResetCursorMemory::PartyIndex' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_BI_ResetCursorMemory, NoUse) == 0x000004, "Member 'BattleCommand_C_BI_ResetCursorMemory::NoUse' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_BI_ResetCursorMemory, K2Node_MakeStruct_BTL_CURSOR_MEMORY_T) == 0x000008, "Member 'BattleCommand_C_BI_ResetCursorMemory::K2Node_MakeStruct_BTL_CURSOR_MEMORY_T' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_BI_ResetCursorMemory, CallFunc_Map_Find_Value) == 0x000014, "Member 'BattleCommand_C_BI_ResetCursorMemory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_BI_ResetCursorMemory, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'BattleCommand_C_BI_ResetCursorMemory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.BI_HidePlayerParty
// 0x0001 (0x0001 - 0x0000)
struct BattleCommand_C_BI_HidePlayerParty final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_BI_HidePlayerParty) == 0x000001, "Wrong alignment on BattleCommand_C_BI_HidePlayerParty");
static_assert(sizeof(BattleCommand_C_BI_HidePlayerParty) == 0x000001, "Wrong size on BattleCommand_C_BI_HidePlayerParty");
static_assert(offsetof(BattleCommand_C_BI_HidePlayerParty, NoUse) == 0x000000, "Member 'BattleCommand_C_BI_HidePlayerParty::NoUse' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.BI_SetShowPlayerPartyFlag
// 0x0002 (0x0002 - 0x0000)
struct BattleCommand_C_BI_SetShowPlayerPartyFlag final
{
public:
	bool                                          IsShow;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoUse;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_BI_SetShowPlayerPartyFlag) == 0x000001, "Wrong alignment on BattleCommand_C_BI_SetShowPlayerPartyFlag");
static_assert(sizeof(BattleCommand_C_BI_SetShowPlayerPartyFlag) == 0x000002, "Wrong size on BattleCommand_C_BI_SetShowPlayerPartyFlag");
static_assert(offsetof(BattleCommand_C_BI_SetShowPlayerPartyFlag, IsShow) == 0x000000, "Member 'BattleCommand_C_BI_SetShowPlayerPartyFlag::IsShow' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_BI_SetShowPlayerPartyFlag, NoUse) == 0x000001, "Member 'BattleCommand_C_BI_SetShowPlayerPartyFlag::NoUse' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.BI_GetResult
// 0x0020 (0x0020 - 0x0000)
struct BattleCommand_C_BI_GetResult final
{
public:
	struct FBtlCommand                            Result;                                            // 0x0000(0x0010)(Parm, OutParm)
	struct FBtlCommand                            CallFunc_GetResult_retValue;                       // 0x0010(0x0010)()
};
static_assert(alignof(BattleCommand_C_BI_GetResult) == 0x000004, "Wrong alignment on BattleCommand_C_BI_GetResult");
static_assert(sizeof(BattleCommand_C_BI_GetResult) == 0x000020, "Wrong size on BattleCommand_C_BI_GetResult");
static_assert(offsetof(BattleCommand_C_BI_GetResult, Result) == 0x000000, "Member 'BattleCommand_C_BI_GetResult::Result' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_BI_GetResult, CallFunc_GetResult_retValue) == 0x000010, "Member 'BattleCommand_C_BI_GetResult::CallFunc_GetResult_retValue' has a wrong offset!");

// Function BattleCommand.BattleCommand_C.UpdateComponent
// 0x0008 (0x0008 - 0x0000)
struct BattleCommand_C_UpdateComponent final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ContinueUpdate;                                    // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleCommand_C_UpdateComponent) == 0x000004, "Wrong alignment on BattleCommand_C_UpdateComponent");
static_assert(sizeof(BattleCommand_C_UpdateComponent) == 0x000008, "Wrong size on BattleCommand_C_UpdateComponent");
static_assert(offsetof(BattleCommand_C_UpdateComponent, Delta) == 0x000000, "Member 'BattleCommand_C_UpdateComponent::Delta' has a wrong offset!");
static_assert(offsetof(BattleCommand_C_UpdateComponent, ContinueUpdate) == 0x000004, "Member 'BattleCommand_C_UpdateComponent::ContinueUpdate' has a wrong offset!");

}

