#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Gimic_Chest_Piece

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PieceColor_st_structs.hpp"
#include "Engine_structs.hpp"
#include "E_MapGimmickHideReason_structs.hpp"
#include "Project_structs.hpp"


namespace SDK::Params
{

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.ExecuteUbergraph_BP_Gimic_Chest_Piece
// 0x0AD0 (0x0AD0 - 0x0000)
struct BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	E_PIECE_TYPE                                  Temp_byte_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A397[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_2;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_3;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_4;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A398[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          Temp_object_Variable_5;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_6;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A399[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPartyMakka_ReturnValue;                // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Get_2;                          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Info_2;                         // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ItemIsGotten_ReturnValue;                 // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Get_1;                          // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Info_1;                         // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A39A[0x1];                                     // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_7;                            // 0x0090(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause;                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A39B[0x1];                                     // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A39C[0x1];                                     // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPieceData                             CallFunc_GetPieceData_ReturnValue;                 // 0x00CC(0x000C)(ConstParm, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A39D[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x00F0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A39E[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTargetLocation_Location;               // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x019C(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn_1;                    // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn_2;                    // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_1;             // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A39F[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_2;             // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3A0[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapUICtrl_MapUICtrl;                   // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause_1;              // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3A1[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapUICtrl_C>      K2Node_DynamicCast_AsBPI_Map_UICtrl;               // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_AutoCheckShowMapMagatsuhiGauge_Dummy; // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3A2[0x5];                                     // 0x021B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_3;                    // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_3;             // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMapEventActivateFlags_ReturnValue;      // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3A3[0x5];                                     // 0x023B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3A4[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3A5[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMagatsuhiGaugeCtrl_outActor;       // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MagatsuhiGaugeCtrl_C> K2Node_DynamicCast_AsBPI_Magatsuhi_Gauge_Ctrl;     // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3A6[0x5];                                     // 0x029B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue; // 0x02A0(0x00D0)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3A7[0x5];                                     // 0x0373(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_4;                    // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_4;             // 0x0380(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause_2;              // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0392(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckHaveLimitOver_LimitOver;             // 0x0393(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_CheckHaveLimitOver_GetNum;                // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUpliftingGauge_ReturnValue;            // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x03D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x03EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x03F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0404(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0410(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetTargetLocation_Location_1;             // 0x0498(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3A8[0xC];                                     // 0x04A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x04B0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetParentActor_ReturnValue;               // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetParentActor_ReturnValue_1;             // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3A9[0x7];                                     // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MovePiece_C>      K2Node_DynamicCast_AsBPI_Move_Piece;               // 0x04F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3AA[0x3];                                     // 0x0509(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x050C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0594(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0595(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3AB[0x2];                                     // 0x0596(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3AC[0x7];                                     // 0x05A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_5;                    // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded;                         // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_5;             // 0x05C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause_3;              // 0x05D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x05D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3AD[0x1];                                     // 0x05D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x05D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x05E0(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x05F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3AE[0x4];                                     // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x0608(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0614(0x0010)(ZeroConstructor, NoDestructor)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0624(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x06AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x06AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3AF[0x2];                                     // 0x06AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_6;                    // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_6;             // 0x06B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause_4;              // 0x06C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3B0[0x6];                                     // 0x06CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapUICtrl_MapUICtrl_1;                 // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapUICtrl_C>      K2Node_DynamicCast_AsBPI_Map_UICtrl_1;             // 0x06D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x06E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_AutoCheckShowMapCharaPanel_dummy;     // 0x06EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3B1[0x5];                                     // 0x06EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x06F0(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors_1; // 0x0700(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0719(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3B2[0x2];                                     // 0x071A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x071C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_A3B3[0x4];                                     // 0x072C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_7;                    // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_7;             // 0x0738(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3B4[0x7];                                     // 0x0749(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_8;                    // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BPI_GetMapGimmickTrigger_Actor;           // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_8;             // 0x0760(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3B5[0x7];                                     // 0x0771(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMapGimmickTrigger_Actor_1;         // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapGimmickTrigger_C*                K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger;       // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3B6[0x7];                                     // 0x0789(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapGimmickTrigger_C*                K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger_1;     // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3B7[0x7];                                     // 0x0799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_2;              // 0x07A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3B8[0x7];                                     // 0x07B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCharaPanelCtrl_C> CallFunc_BPI_GetMapCharaPanelCtrlUI_OutActor;      // 0x07C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetMapCharaPanelCtrlUI_IsValid;       // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3B9[0x3];                                     // 0x07D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x07D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x07D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_Select_Default;                             // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_Select_Default_1;                           // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GimicChestTakara_C> K2Node_DynamicCast_AsBPI_Gimic_Chest_Takara;       // 0x07F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0809(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x080A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3BA[0x5];                                     // 0x080B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GimicChestTakara_C> K2Node_DynamicCast_AsBPI_Gimic_Chest_Takara_1;     // 0x0810(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3BB[0x7];                                     // 0x0821(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GimicChestTakara_C> K2Node_DynamicCast_AsBPI_Gimic_Chest_Takara_2;     // 0x0828(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0839(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_MapGimmickHideReason                        K2Node_Event_HideReason_1;                         // 0x083A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3BC[0x1];                                     // 0x083B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x083C(0x0010)(ZeroConstructor, NoDestructor)
	E_MapGimmickHideReason                        K2Node_Event_HideReason;                           // 0x084C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x084D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3BD[0x2];                                     // 0x084E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BIT_DEL_ReturnValue;                      // 0x0850(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BIT_ADD_ReturnValue;                      // 0x0854(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3BE[0x3];                                     // 0x0859(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x085C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_A3BF[0x4];                                     // 0x086C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapUICtrl_MapUICtrl_2;                 // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapUICtrl_C>      K2Node_DynamicCast_AsBPI_Map_UICtrl_2;             // 0x0878(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x0888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3C0[0x7];                                     // 0x0889(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMapMakkaWinCtrl_Ctrl;              // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapMakkaWinCtrl_C> K2Node_DynamicCast_AsBPI_Map_Makka_Win_Ctrl;       // 0x0898(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3C1[0x3];                                     // 0x08A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGodParameterPoint_ReturnValue;         // 0x08AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x08B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x08B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlag_ReturnValue;               // 0x08B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Get;                            // 0x08B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Info;                           // 0x08B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_isSkipped;                            // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x08B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x08BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x08BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x08BC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsMyArea_IsMyArea;                        // 0x0944(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3C2[0x3];                                     // 0x0945(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_9;                    // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_9;             // 0x0950(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause_5;              // 0x0961(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x0962(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0963(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_StopTime;                             // 0x0964(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x0965(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0966(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3C3[0x1];                                     // 0x0967(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEventFlag_ReturnValue_1;             // 0x096C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x096D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3C4[0x2];                                     // 0x096E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FlagCh_OK;                                // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3C5[0x7];                                     // 0x0981(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MovePiece_C>      K2Node_DynamicCast_AsBPI_Move_Piece_1;             // 0x0988(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x0998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3C6[0x7];                                     // 0x0999(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MovePiece_C>      K2Node_DynamicCast_AsBPI_Move_Piece_2;             // 0x09A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3C7[0x7];                                     // 0x09B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          CallFunc_BPI_GetMovePieceCollision_Collision;      // 0x09B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MovePiece_C>      K2Node_DynamicCast_AsBPI_Move_Piece_3;             // 0x09C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMyArea_IsMyArea_1;                      // 0x09D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3C8[0x6];                                     // 0x09D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x09D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x09E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x09F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x09F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3C9[0x3];                                     // 0x09F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x09F8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0A80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEventHitPaused_Paused;                  // 0x0A81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3CA[0x6];                                     // 0x0A82(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn_10;                   // 0x0A90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ProjectGameInstance_C> K2Node_DynamicCast_AsBPI_Project_Game_Instance;    // 0x0A98(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x0AA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3CB[0x7];                                     // 0x0AA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_10;            // 0x0AB0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x0AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckLoadMap_LoadMap;                 // 0x0AC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause_6;              // 0x0AC2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x0AC3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_16;               // 0x0AC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece) == 0x000010, "Wrong alignment on BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece) == 0x000AD0, "Wrong size on BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, EntryPoint) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, Temp_byte_Variable) == 0x000024, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, Temp_object_Variable) == 0x000028, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, Temp_object_Variable_1) == 0x000030, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, Temp_object_Variable_2) == 0x000038, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, Temp_object_Variable_3) == 0x000040, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, Temp_object_Variable_4) == 0x000048, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, Temp_bool_Variable) == 0x000050, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, Temp_object_Variable_5) == 0x000058, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, Temp_object_Variable_6) == 0x000060, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_MakeLiteralInt_ReturnValue) == 0x000074, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, Temp_bool_Variable_1) == 0x000078, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, Temp_float_Variable) == 0x00007C, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, Temp_float_Variable_1) == 0x000080, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetPartyMakka_ReturnValue) == 0x000084, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetPartyMakka_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_CustomEvent_Get_2) == 0x000089, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_CustomEvent_Get_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_CustomEvent_Info_2) == 0x00008A, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_CustomEvent_Info_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_ItemIsGotten_ReturnValue) == 0x00008B, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_ItemIsGotten_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Not_PreBool_ReturnValue) == 0x00008C, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_CustomEvent_Get_1) == 0x00008D, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_CustomEvent_Get_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_CustomEvent_Info_1) == 0x00008E, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_CustomEvent_Info_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, Temp_object_Variable_7) == 0x000090, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetMapCommon_rerutn) == 0x0000A0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Map_Common) == 0x0000A8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_CheckMapPause_IsPause) == 0x0000B9, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_CheckMapPause_IsPause' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000BA, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000BC, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000C8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_SwitchEnum_CmpSuccess) == 0x0000C9, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Greater_IntInt_ReturnValue) == 0x0000CA, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetPieceData_ReturnValue) == 0x0000CC, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetPieceData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000D8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000DC, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_MakeRotator_ReturnValue) == 0x0000E0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000EC, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0000F0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BooleanAND_ReturnValue) == 0x000178, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetTargetLocation_Location) == 0x00017C, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetTargetLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetPlayerPawn_ReturnValue) == 0x000188, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000190, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_CreateDelegate_OutputDelegate_2) == 0x00019C, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001AC, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetMapCommon_rerutn_1) == 0x0001B8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetMapCommon_rerutn_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetMapCommon_rerutn_2) == 0x0001C0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetMapCommon_rerutn_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Map_Common_1) == 0x0001C8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Map_Common_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_1) == 0x0001D8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Map_Common_2) == 0x0001E0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Map_Common_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_2) == 0x0001F0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetMapUICtrl_MapUICtrl) == 0x0001F8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetMapUICtrl_MapUICtrl' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_CheckMapPause_IsPause_1) == 0x000200, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_CheckMapPause_IsPause_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Map_UICtrl) == 0x000208, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Map_UICtrl' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_3) == 0x000218, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_AutoCheckShowMapMagatsuhiGauge_Dummy) == 0x000219, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_AutoCheckShowMapMagatsuhiGauge_Dummy' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Not_PreBool_ReturnValue_4) == 0x00021A, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetMapCommon_rerutn_3) == 0x000220, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetMapCommon_rerutn_3' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Map_Common_3) == 0x000228, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Map_Common_3' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_4) == 0x000238, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_IsMapEventActivateFlags_ReturnValue) == 0x000239, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_IsMapEventActivateFlags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00023A, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetGameInstance_ReturnValue) == 0x000240, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_UIManager) == 0x000248, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_5) == 0x000258, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_GetUIManager_UIManager) == 0x000260, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000268, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_6) == 0x000278, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_GetMagatsuhiGaugeCtrl_outActor) == 0x000280, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_GetMagatsuhiGaugeCtrl_outActor' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Magatsuhi_Gauge_Ctrl) == 0x000288, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Magatsuhi_Gauge_Ctrl' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_7) == 0x000298, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_SwitchEnum_CmpSuccess_1) == 0x000299, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_IsValid_ReturnValue_1) == 0x00029A, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue) == 0x0002A0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Not_PreBool_ReturnValue_5) == 0x000370, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000371, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BooleanAND_ReturnValue_1) == 0x000372, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetMapCommon_rerutn_4) == 0x000378, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetMapCommon_rerutn_4' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Map_Common_4) == 0x000380, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Map_Common_4' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_8) == 0x000390, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_CheckMapPause_IsPause_2) == 0x000391, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_CheckMapPause_IsPause_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Not_PreBool_ReturnValue_6) == 0x000392, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_CheckHaveLimitOver_LimitOver) == 0x000393, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_CheckHaveLimitOver_LimitOver' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_CheckHaveLimitOver_GetNum) == 0x000394, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_CheckHaveLimitOver_GetNum' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000398, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0003A0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0003AC, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0003B8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetUpliftingGauge_ReturnValue) == 0x0003C4, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetUpliftingGauge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BreakVector_X) == 0x0003C8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BreakVector_Y) == 0x0003CC, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BreakVector_Z) == 0x0003D0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_MakeVector_ReturnValue_1) == 0x0003D4, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Normal_ReturnValue) == 0x0003E0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0003EC, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_VLerp_ReturnValue) == 0x0003F8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Add_VectorVector_ReturnValue) == 0x000404, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000410, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetTargetLocation_Location_1) == 0x000498, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetTargetLocation_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_MakeTransform_ReturnValue) == 0x0004B0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetParentActor_ReturnValue) == 0x0004E0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetParentActor_ReturnValue_1) == 0x0004E8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetParentActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_IsValid_ReturnValue_2) == 0x0004F0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Move_Piece) == 0x0004F8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Move_Piece' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_9) == 0x000508, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x00050C, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000594, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000595, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, Temp_class_Variable) == 0x000598, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_ClassDynamicCast_AsActor) == 0x0005A0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_ClassDynamicCast_bSuccess) == 0x0005A8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetMapCommon_rerutn_5) == 0x0005B0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetMapCommon_rerutn_5' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_CustomEvent_Loaded) == 0x0005B8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Map_Common_5) == 0x0005C0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Map_Common_5' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_10) == 0x0005D0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_CheckMapPause_IsPause_3) == 0x0005D1, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_CheckMapPause_IsPause_3' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Not_PreBool_ReturnValue_7) == 0x0005D2, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0005D4, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_CreateDelegate_OutputDelegate_3) == 0x0005E0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0005F0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x000600, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x000608, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_CreateDelegate_OutputDelegate_4) == 0x000614, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_LineTraceSingle_OutHit) == 0x000624, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_LineTraceSingle_ReturnValue) == 0x0006AC, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Not_PreBool_ReturnValue_8) == 0x0006AD, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetMapCommon_rerutn_6) == 0x0006B0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetMapCommon_rerutn_6' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Map_Common_6) == 0x0006B8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Map_Common_6' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_11) == 0x0006C8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_CheckMapPause_IsPause_4) == 0x0006C9, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_CheckMapPause_IsPause_4' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetMapUICtrl_MapUICtrl_1) == 0x0006D0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetMapUICtrl_MapUICtrl_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Map_UICtrl_1) == 0x0006D8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Map_UICtrl_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_12) == 0x0006E8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Not_PreBool_ReturnValue_9) == 0x0006E9, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_AutoCheckShowMapCharaPanel_dummy) == 0x0006EA, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_AutoCheckShowMapCharaPanel_dummy' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetOverlappingActors_OverlappingActors) == 0x0006F0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetOverlappingActors_OverlappingActors_1) == 0x000700, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetOverlappingActors_OverlappingActors_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Array_Length_ReturnValue) == 0x000710, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Array_Length_ReturnValue_1) == 0x000714, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000718, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000719, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_CreateDelegate_OutputDelegate_5) == 0x00071C, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetMapCommon_rerutn_7) == 0x000730, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetMapCommon_rerutn_7' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Map_Common_7) == 0x000738, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Map_Common_7' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_13) == 0x000748, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetMapCommon_rerutn_8) == 0x000750, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetMapCommon_rerutn_8' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_GetMapGimmickTrigger_Actor) == 0x000758, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_GetMapGimmickTrigger_Actor' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Map_Common_8) == 0x000760, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Map_Common_8' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_14) == 0x000770, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_GetMapGimmickTrigger_Actor_1) == 0x000778, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_GetMapGimmickTrigger_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger) == 0x000780, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_15) == 0x000788, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger_1) == 0x000790, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_16) == 0x000798, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Get_ReturnValue) == 0x0007A0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_UIManager_2) == 0x0007A8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_UIManager_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_17) == 0x0007B8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_GetMapCharaPanelCtrlUI_OutActor) == 0x0007C0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_GetMapCharaPanelCtrlUI_OutActor' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_GetMapCharaPanelCtrlUI_IsValid) == 0x0007D0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_GetMapCharaPanelCtrlUI_IsValid' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0007D4, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_MakeStruct_LinearColor) == 0x0007D8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_Select_Default) == 0x0007E8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_Select_Default_1) == 0x0007F0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Gimic_Chest_Takara) == 0x0007F8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Gimic_Chest_Takara' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_18) == 0x000808, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_IsValid_ReturnValue_3) == 0x000809, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Not_PreBool_ReturnValue_10) == 0x00080A, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Gimic_Chest_Takara_1) == 0x000810, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Gimic_Chest_Takara_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_19) == 0x000820, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Gimic_Chest_Takara_2) == 0x000828, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Gimic_Chest_Takara_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_20) == 0x000838, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_IsValid_ReturnValue_4) == 0x000839, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_Event_HideReason_1) == 0x00083A, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_Event_HideReason_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_CreateDelegate_OutputDelegate_6) == 0x00083C, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_Event_HideReason) == 0x00084C, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_Event_HideReason' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00084D, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BIT_DEL_ReturnValue) == 0x000850, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BIT_DEL_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BIT_ADD_ReturnValue) == 0x000854, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BIT_ADD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000858, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_CreateDelegate_OutputDelegate_7) == 0x00085C, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetMapUICtrl_MapUICtrl_2) == 0x000870, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetMapUICtrl_MapUICtrl_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Map_UICtrl_2) == 0x000878, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Map_UICtrl_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_21) == 0x000888, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_GetMapMakkaWinCtrl_Ctrl) == 0x000890, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_GetMapMakkaWinCtrl_Ctrl' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Map_Makka_Win_Ctrl) == 0x000898, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Map_Makka_Win_Ctrl' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_22) == 0x0008A8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetGodParameterPoint_ReturnValue) == 0x0008AC, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetGodParameterPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_And_IntInt_ReturnValue) == 0x0008B0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0008B4, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_CheckEventFlag_ReturnValue) == 0x0008B5, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_CheckEventFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_CustomEvent_Get) == 0x0008B6, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_CustomEvent_Get' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_CustomEvent_Info) == 0x0008B7, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_CustomEvent_Info' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_Event_isSkipped) == 0x0008B8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_Event_isSkipped' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Not_PreBool_ReturnValue_11) == 0x0008B9, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Not_PreBool_ReturnValue_12) == 0x0008BA, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BooleanOR_ReturnValue) == 0x0008BB, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0008BC, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_IsMyArea_IsMyArea) == 0x000944, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_IsMyArea_IsMyArea' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetMapCommon_rerutn_9) == 0x000948, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetMapCommon_rerutn_9' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Map_Common_9) == 0x000950, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Map_Common_9' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_23) == 0x000960, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_CheckMapPause_IsPause_5) == 0x000961, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_CheckMapPause_IsPause_5' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Not_PreBool_ReturnValue_13) == 0x000962, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000963, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_Event_StopTime) == 0x000964, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_Event_StopTime' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Not_PreBool_ReturnValue_14) == 0x000965, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_IsValid_ReturnValue_5) == 0x000966, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_Select_Default_2) == 0x000968, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_CheckEventFlag_ReturnValue_1) == 0x00096C, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_CheckEventFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_IsValid_ReturnValue_6) == 0x00096D, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000970, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_FinishSpawningActor_ReturnValue) == 0x000978, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_FlagCh_OK) == 0x000980, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_FlagCh_OK' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Move_Piece_1) == 0x000988, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Move_Piece_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_24) == 0x000998, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Move_Piece_2) == 0x0009A0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Move_Piece_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_25) == 0x0009B0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_GetMovePieceCollision_Collision) == 0x0009B8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_GetMovePieceCollision_Collision' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Move_Piece_3) == 0x0009C0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Move_Piece_3' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_26) == 0x0009D0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_IsMyArea_IsMyArea_1) == 0x0009D1, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_IsMyArea_IsMyArea_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0009D8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_ComponentBoundEvent_OtherActor) == 0x0009E0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_ComponentBoundEvent_OtherComp) == 0x0009E8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0009F0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_ComponentBoundEvent_bFromSweep) == 0x0009F4, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_ComponentBoundEvent_SweepResult) == 0x0009F8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BooleanAND_ReturnValue_2) == 0x000A80, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_IsEventHitPaused_Paused) == 0x000A81, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_IsEventHitPaused_Paused' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetGameInstance_ReturnValue_1) == 0x000A88, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_GetMapCommon_rerutn_10) == 0x000A90, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_GetMapCommon_rerutn_10' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Project_Game_Instance) == 0x000A98, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Project_Game_Instance' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_27) == 0x000AA8, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_AsBPI_Map_Common_10) == 0x000AB0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_AsBPI_Map_Common_10' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, K2Node_DynamicCast_bSuccess_28) == 0x000AC0, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_CheckLoadMap_LoadMap) == 0x000AC1, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_CheckLoadMap_LoadMap' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_BPI_CheckMapPause_IsPause_6) == 0x000AC2, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_BPI_CheckMapPause_IsPause_6' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Not_PreBool_ReturnValue_15) == 0x000AC3, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece, CallFunc_Not_PreBool_ReturnValue_16) == 0x000AC4, "Member 'BP_Gimic_Chest_Piece_C_ExecuteUbergraph_BP_Gimic_Chest_Piece::CallFunc_Not_PreBool_ReturnValue_16' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Gimic_Chest_Piece_C_BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3CC[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Gimic_Chest_Piece_C_BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_Gimic_Chest_Piece_C_BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Gimic_Chest_Piece_C_BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Gimic_Chest_Piece_C_BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Gimic_Chest_Piece_C_BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Gimic_Chest_Piece_C_BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Gimic_Chest_Piece_C_BndEvt__BP_Gimic_Chest_Piece_SphereHit_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.BPI_SetStopTime
// 0x0001 (0x0001 - 0x0000)
struct BP_Gimic_Chest_Piece_C_BPI_SetStopTime final
{
public:
	bool                                          Param_StopTime;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_BPI_SetStopTime) == 0x000001, "Wrong alignment on BP_Gimic_Chest_Piece_C_BPI_SetStopTime");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_BPI_SetStopTime) == 0x000001, "Wrong size on BP_Gimic_Chest_Piece_C_BPI_SetStopTime");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_BPI_SetStopTime, Param_StopTime) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_BPI_SetStopTime::Param_StopTime' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.OnRotateFinished
// 0x0001 (0x0001 - 0x0000)
struct BP_Gimic_Chest_Piece_C_OnRotateFinished final
{
public:
	bool                                          IsSkipped;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_OnRotateFinished) == 0x000001, "Wrong alignment on BP_Gimic_Chest_Piece_C_OnRotateFinished");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_OnRotateFinished) == 0x000001, "Wrong size on BP_Gimic_Chest_Piece_C_OnRotateFinished");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_OnRotateFinished, IsSkipped) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_OnRotateFinished::IsSkipped' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.GetGodPointPiece
// 0x0002 (0x0002 - 0x0000)
struct BP_Gimic_Chest_Piece_C_GetGodPointPiece final
{
public:
	bool                                          Get;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Info;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_GetGodPointPiece) == 0x000001, "Wrong alignment on BP_Gimic_Chest_Piece_C_GetGodPointPiece");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_GetGodPointPiece) == 0x000002, "Wrong size on BP_Gimic_Chest_Piece_C_GetGodPointPiece");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetGodPointPiece, Get) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_GetGodPointPiece::Get' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetGodPointPiece, Info) == 0x000001, "Member 'BP_Gimic_Chest_Piece_C_GetGodPointPiece::Info' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.BPI_HideGimmick
// 0x0001 (0x0001 - 0x0000)
struct BP_Gimic_Chest_Piece_C_BPI_HideGimmick final
{
public:
	E_MapGimmickHideReason                        Param_HideReason;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_BPI_HideGimmick) == 0x000001, "Wrong alignment on BP_Gimic_Chest_Piece_C_BPI_HideGimmick");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_BPI_HideGimmick) == 0x000001, "Wrong size on BP_Gimic_Chest_Piece_C_BPI_HideGimmick");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_BPI_HideGimmick, Param_HideReason) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_BPI_HideGimmick::Param_HideReason' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.BPI_ShowGimmick
// 0x0001 (0x0001 - 0x0000)
struct BP_Gimic_Chest_Piece_C_BPI_ShowGimmick final
{
public:
	E_MapGimmickHideReason                        Param_HideReason;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_BPI_ShowGimmick) == 0x000001, "Wrong alignment on BP_Gimic_Chest_Piece_C_BPI_ShowGimmick");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_BPI_ShowGimmick) == 0x000001, "Wrong size on BP_Gimic_Chest_Piece_C_BPI_ShowGimmick");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_BPI_ShowGimmick, Param_HideReason) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_BPI_ShowGimmick::Param_HideReason' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.GetMakkaPiece
// 0x0002 (0x0002 - 0x0000)
struct BP_Gimic_Chest_Piece_C_GetMakkaPiece final
{
public:
	bool                                          Get;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Info;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_GetMakkaPiece) == 0x000001, "Wrong alignment on BP_Gimic_Chest_Piece_C_GetMakkaPiece");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_GetMakkaPiece) == 0x000002, "Wrong size on BP_Gimic_Chest_Piece_C_GetMakkaPiece");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetMakkaPiece, Get) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_GetMakkaPiece::Get' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetMakkaPiece, Info) == 0x000001, "Member 'BP_Gimic_Chest_Piece_C_GetMakkaPiece::Info' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.GetItemPiece
// 0x0002 (0x0002 - 0x0000)
struct BP_Gimic_Chest_Piece_C_GetItemPiece final
{
public:
	bool                                          Get;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Info;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_GetItemPiece) == 0x000001, "Wrong alignment on BP_Gimic_Chest_Piece_C_GetItemPiece");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_GetItemPiece) == 0x000002, "Wrong size on BP_Gimic_Chest_Piece_C_GetItemPiece");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetItemPiece, Get) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_GetItemPiece::Get' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetItemPiece, Info) == 0x000001, "Member 'BP_Gimic_Chest_Piece_C_GetItemPiece::Info' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.OnLoaded_000CEC1647E4F09283905AA617AF2AAC
// 0x0008 (0x0008 - 0x0000)
struct BP_Gimic_Chest_Piece_C_OnLoaded_000CEC1647E4F09283905AA617AF2AAC final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_OnLoaded_000CEC1647E4F09283905AA617AF2AAC) == 0x000008, "Wrong alignment on BP_Gimic_Chest_Piece_C_OnLoaded_000CEC1647E4F09283905AA617AF2AAC");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_OnLoaded_000CEC1647E4F09283905AA617AF2AAC) == 0x000008, "Wrong size on BP_Gimic_Chest_Piece_C_OnLoaded_000CEC1647E4F09283905AA617AF2AAC");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_OnLoaded_000CEC1647E4F09283905AA617AF2AAC, Loaded) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_OnLoaded_000CEC1647E4F09283905AA617AF2AAC::Loaded' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.InitEffect
// 0x0080 (0x0080 - 0x0000)
struct BP_Gimic_Chest_Piece_C_InitEffect final
{
public:
	struct FColor                                 L_DecalColor;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PIECE_TYPE                                  Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3CD[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PIECE_TYPE                                  Temp_byte_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3CE[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_6;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_7;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_8;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_9;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_10;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_11;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select_Default_1;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_InitEffect) == 0x000008, "Wrong alignment on BP_Gimic_Chest_Piece_C_InitEffect");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_InitEffect) == 0x000080, "Wrong size on BP_Gimic_Chest_Piece_C_InitEffect");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitEffect, L_DecalColor) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_InitEffect::L_DecalColor' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitEffect, Temp_byte_Variable) == 0x000004, "Member 'BP_Gimic_Chest_Piece_C_InitEffect::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitEffect, Temp_object_Variable) == 0x000008, "Member 'BP_Gimic_Chest_Piece_C_InitEffect::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitEffect, Temp_object_Variable_1) == 0x000010, "Member 'BP_Gimic_Chest_Piece_C_InitEffect::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitEffect, Temp_object_Variable_2) == 0x000018, "Member 'BP_Gimic_Chest_Piece_C_InitEffect::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitEffect, Temp_object_Variable_3) == 0x000020, "Member 'BP_Gimic_Chest_Piece_C_InitEffect::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitEffect, Temp_object_Variable_4) == 0x000028, "Member 'BP_Gimic_Chest_Piece_C_InitEffect::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitEffect, Temp_object_Variable_5) == 0x000030, "Member 'BP_Gimic_Chest_Piece_C_InitEffect::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitEffect, Temp_byte_Variable_1) == 0x000038, "Member 'BP_Gimic_Chest_Piece_C_InitEffect::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitEffect, Temp_object_Variable_6) == 0x000040, "Member 'BP_Gimic_Chest_Piece_C_InitEffect::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitEffect, Temp_object_Variable_7) == 0x000048, "Member 'BP_Gimic_Chest_Piece_C_InitEffect::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitEffect, Temp_object_Variable_8) == 0x000050, "Member 'BP_Gimic_Chest_Piece_C_InitEffect::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitEffect, Temp_object_Variable_9) == 0x000058, "Member 'BP_Gimic_Chest_Piece_C_InitEffect::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitEffect, Temp_object_Variable_10) == 0x000060, "Member 'BP_Gimic_Chest_Piece_C_InitEffect::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitEffect, Temp_object_Variable_11) == 0x000068, "Member 'BP_Gimic_Chest_Piece_C_InitEffect::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitEffect, K2Node_Select_Default) == 0x000070, "Member 'BP_Gimic_Chest_Piece_C_InitEffect::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitEffect, K2Node_Select_Default_1) == 0x000078, "Member 'BP_Gimic_Chest_Piece_C_InitEffect::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.EndPiece
// 0x0020 (0x0020 - 0x0000)
struct BP_Gimic_Chest_Piece_C_EndPiece final
{
public:
	class AActor*                                 CallFunc_GetParentActor_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MovePiece_C>      K2Node_DynamicCast_AsBPI_Move_Piece;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_EndPiece) == 0x000008, "Wrong alignment on BP_Gimic_Chest_Piece_C_EndPiece");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_EndPiece) == 0x000020, "Wrong size on BP_Gimic_Chest_Piece_C_EndPiece");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_EndPiece, CallFunc_GetParentActor_ReturnValue) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_EndPiece::CallFunc_GetParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_EndPiece, K2Node_DynamicCast_AsBPI_Move_Piece) == 0x000008, "Member 'BP_Gimic_Chest_Piece_C_EndPiece::K2Node_DynamicCast_AsBPI_Move_Piece' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_EndPiece, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Gimic_Chest_Piece_C_EndPiece::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.CureHp
// 0x0118 (0x0118 - 0x0000)
struct BP_Gimic_Chest_Piece_C_CureHp final
{
public:
	bool                                          L_CharaPanelView;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_KeyFree;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3CF[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_Heal;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_NkmIndex;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3D0[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 L_EntryList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3D1[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_SpawnSound2D_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetMoveDisplayPanel_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3D2[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmIndexByEntryList_ReturnValue;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3D3[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidNkmEntryList_ReturnValue;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3D4[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3D5[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCharaPanelCtrl_C> CallFunc_BPI_GetMapCharaPanelCtrlUI_OutActor;      // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetMapCharaPanelCtrlUI_IsValid;       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3D6[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_1;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3D7[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCharaPanelCtrl_C> CallFunc_BPI_GetMapCharaPanelCtrlUI_OutActor_1;    // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetMapCharaPanelCtrlUI_IsValid_1;     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3D8[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerHPMPMax_HPMax;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerHPMPMax_MPMax;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckNkmBstOne_ReturnValue;               // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3D9[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNkmHPMPMax_HPMax;                      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmHPMPMax_MPMax;                      // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NkmIndexIsValid_ReturnValue;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3DA[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<uint8>                                 CallFunc_GetNkmEntryListArray_ReturnValue;         // 0x00F0(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3DB[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_CureHp) == 0x000008, "Wrong alignment on BP_Gimic_Chest_Piece_C_CureHp");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_CureHp) == 0x000118, "Wrong size on BP_Gimic_Chest_Piece_C_CureHp");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, L_CharaPanelView) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_CureHp::L_CharaPanelView' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, L_KeyFree) == 0x000001, "Member 'BP_Gimic_Chest_Piece_C_CureHp::L_KeyFree' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, L_Heal) == 0x000004, "Member 'BP_Gimic_Chest_Piece_C_CureHp::L_Heal' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, L_NkmIndex) == 0x000008, "Member 'BP_Gimic_Chest_Piece_C_CureHp::L_NkmIndex' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, L_EntryList) == 0x000010, "Member 'BP_Gimic_Chest_Piece_C_CureHp::L_EntryList' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_SpawnSound2D_ReturnValue) == 0x000028, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_GetMoveDisplayPanel_ReturnValue) == 0x000030, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_GetMoveDisplayPanel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000031, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_Gimic_Chest_Piece_C_CureHp::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_GetMapCommon_rerutn) == 0x000038, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_GetNkmIndexByEntryList_ReturnValue) == 0x000040, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_GetNkmIndexByEntryList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000048, "Member 'BP_Gimic_Chest_Piece_C_CureHp::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_Gimic_Chest_Piece_C_CureHp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_BPI_CheckMapPause_IsPause) == 0x000059, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_BPI_CheckMapPause_IsPause' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_IsValidNkmEntryList_ReturnValue) == 0x00005A, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_IsValidNkmEntryList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_Not_PreBool_ReturnValue_1) == 0x00005B, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_Get_ReturnValue) == 0x000060, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, K2Node_DynamicCast_AsBPI_UIManager) == 0x000068, "Member 'BP_Gimic_Chest_Piece_C_CureHp::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BP_Gimic_Chest_Piece_C_CureHp::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_BPI_GetMapCharaPanelCtrlUI_OutActor) == 0x000080, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_BPI_GetMapCharaPanelCtrlUI_OutActor' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_BPI_GetMapCharaPanelCtrlUI_IsValid) == 0x000090, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_BPI_GetMapCharaPanelCtrlUI_IsValid' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_Get_ReturnValue_1) == 0x000098, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x0000A0, "Member 'BP_Gimic_Chest_Piece_C_CureHp::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'BP_Gimic_Chest_Piece_C_CureHp::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_BPI_GetMapCharaPanelCtrlUI_OutActor_1) == 0x0000B8, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_BPI_GetMapCharaPanelCtrlUI_OutActor_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_BPI_GetMapCharaPanelCtrlUI_IsValid_1) == 0x0000C8, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_BPI_GetMapCharaPanelCtrlUI_IsValid_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_GetPlayerHPMPMax_HPMax) == 0x0000CC, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_GetPlayerHPMPMax_HPMax' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_GetPlayerHPMPMax_MPMax) == 0x0000D0, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_GetPlayerHPMPMax_MPMax' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_CheckNkmBstOne_ReturnValue) == 0x0000D4, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_CheckNkmBstOne_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000D5, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_GetNkmHPMPMax_HPMax) == 0x0000D8, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_GetNkmHPMPMax_HPMax' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_GetNkmHPMPMax_MPMax) == 0x0000DC, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_GetNkmHPMPMax_MPMax' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_NkmIndexIsValid_ReturnValue) == 0x0000E0, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_NkmIndexIsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_Divide_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_Array_Length_ReturnValue) == 0x0000EC, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_GetNkmEntryListArray_ReturnValue) == 0x0000F0, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_GetNkmEntryListArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, Temp_int_Loop_Counter_Variable) == 0x000100, "Member 'BP_Gimic_Chest_Piece_C_CureHp::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000104, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000108, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureHp, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'BP_Gimic_Chest_Piece_C_CureHp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.CureMp
// 0x0110 (0x0110 - 0x0000)
struct BP_Gimic_Chest_Piece_C_CureMp final
{
public:
	bool                                          L_CharaPanelView;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_KeyFree;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3DC[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_Heal;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_NkmIndex;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3DD[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 L_EntryList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	class UAtomComponent*                         CallFunc_SpawnSound2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_OPTION_COMMON_SELECT_TYPE                   CallFunc_GetMoveDisplayPanel_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3DE[0x1];                                     // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmIndexByEntryList_ReturnValue;       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3DF[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckMapPause_IsPause;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidNkmEntryList_ReturnValue;          // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3E0[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3E1[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCharaPanelCtrl_C> CallFunc_BPI_GetMapCharaPanelCtrlUI_OutActor;      // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetMapCharaPanelCtrlUI_IsValid;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3E2[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_1;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3E3[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCharaPanelCtrl_C> CallFunc_BPI_GetMapCharaPanelCtrlUI_OutActor_1;    // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_GetMapCharaPanelCtrlUI_IsValid_1;     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3E4[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerHPMPMax_HPMax;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerHPMPMax_MPMax;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckNkmBstOne_ReturnValue;               // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3E5[0x2];                                     // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmHPMPMax_HPMax;                      // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNkmHPMPMax_MPMax;                      // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NkmIndexIsValid_ReturnValue;              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3E6[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3E7[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 CallFunc_GetNkmEntryListArray_ReturnValue;         // 0x00F8(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_CureMp) == 0x000008, "Wrong alignment on BP_Gimic_Chest_Piece_C_CureMp");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_CureMp) == 0x000110, "Wrong size on BP_Gimic_Chest_Piece_C_CureMp");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, L_CharaPanelView) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_CureMp::L_CharaPanelView' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, L_KeyFree) == 0x000001, "Member 'BP_Gimic_Chest_Piece_C_CureMp::L_KeyFree' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, L_Heal) == 0x000004, "Member 'BP_Gimic_Chest_Piece_C_CureMp::L_Heal' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, L_NkmIndex) == 0x000008, "Member 'BP_Gimic_Chest_Piece_C_CureMp::L_NkmIndex' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, L_EntryList) == 0x000010, "Member 'BP_Gimic_Chest_Piece_C_CureMp::L_EntryList' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_SpawnSound2D_ReturnValue) == 0x000020, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_GetMoveDisplayPanel_ReturnValue) == 0x000028, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_GetMoveDisplayPanel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000029, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_Gimic_Chest_Piece_C_CureMp::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_GetMapCommon_rerutn) == 0x000030, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_GetNkmIndexByEntryList_ReturnValue) == 0x000038, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_GetNkmIndexByEntryList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000040, "Member 'BP_Gimic_Chest_Piece_C_CureMp::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Gimic_Chest_Piece_C_CureMp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_BPI_CheckMapPause_IsPause) == 0x000051, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_BPI_CheckMapPause_IsPause' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_IsValidNkmEntryList_ReturnValue) == 0x000052, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_IsValidNkmEntryList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_Not_PreBool_ReturnValue) == 0x000053, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_Get_ReturnValue) == 0x000058, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, K2Node_DynamicCast_AsBPI_UIManager) == 0x000060, "Member 'BP_Gimic_Chest_Piece_C_CureMp::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_Gimic_Chest_Piece_C_CureMp::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_BPI_GetMapCharaPanelCtrlUI_OutActor) == 0x000078, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_BPI_GetMapCharaPanelCtrlUI_OutActor' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_BPI_GetMapCharaPanelCtrlUI_IsValid) == 0x000088, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_BPI_GetMapCharaPanelCtrlUI_IsValid' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_Get_ReturnValue_1) == 0x000090, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000098, "Member 'BP_Gimic_Chest_Piece_C_CureMp::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'BP_Gimic_Chest_Piece_C_CureMp::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_BPI_GetMapCharaPanelCtrlUI_OutActor_1) == 0x0000B0, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_BPI_GetMapCharaPanelCtrlUI_OutActor_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_BPI_GetMapCharaPanelCtrlUI_IsValid_1) == 0x0000C0, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_BPI_GetMapCharaPanelCtrlUI_IsValid_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_GetPlayerHPMPMax_HPMax) == 0x0000C4, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_GetPlayerHPMPMax_HPMax' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_GetPlayerHPMPMax_MPMax) == 0x0000C8, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_GetPlayerHPMPMax_MPMax' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_CheckNkmBstOne_ReturnValue) == 0x0000CC, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_CheckNkmBstOne_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000CD, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, Temp_int_Loop_Counter_Variable) == 0x0000D4, "Member 'BP_Gimic_Chest_Piece_C_CureMp::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_Divide_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_Add_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_GetNkmHPMPMax_HPMax) == 0x0000E0, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_GetNkmHPMPMax_HPMax' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_GetNkmHPMPMax_MPMax) == 0x0000E4, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_GetNkmHPMPMax_MPMax' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x0000E8, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_NkmIndexIsValid_ReturnValue) == 0x0000EC, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_NkmIndexIsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_Divide_IntInt_ReturnValue_1) == 0x0000F0, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_GetNkmEntryListArray_ReturnValue) == 0x0000F8, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_GetNkmEntryListArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CureMp, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'BP_Gimic_Chest_Piece_C_CureMp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.SpawnCureEffect
// 0x0078 (0x0078 - 0x0000)
struct BP_Gimic_Chest_Piece_C_SpawnCureEffect final
{
public:
	E_PIECE_TYPE                                  PieceType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3E8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        L_Effect;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PIECE_TYPE                                  Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3E9[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_4;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_5;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3EA[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3EB[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_SpawnCureEffect) == 0x000008, "Wrong alignment on BP_Gimic_Chest_Piece_C_SpawnCureEffect");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_SpawnCureEffect) == 0x000078, "Wrong size on BP_Gimic_Chest_Piece_C_SpawnCureEffect");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SpawnCureEffect, PieceType) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_SpawnCureEffect::PieceType' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SpawnCureEffect, L_Effect) == 0x000008, "Member 'BP_Gimic_Chest_Piece_C_SpawnCureEffect::L_Effect' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SpawnCureEffect, Temp_byte_Variable) == 0x000010, "Member 'BP_Gimic_Chest_Piece_C_SpawnCureEffect::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SpawnCureEffect, Temp_object_Variable) == 0x000018, "Member 'BP_Gimic_Chest_Piece_C_SpawnCureEffect::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SpawnCureEffect, Temp_object_Variable_1) == 0x000020, "Member 'BP_Gimic_Chest_Piece_C_SpawnCureEffect::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SpawnCureEffect, Temp_object_Variable_2) == 0x000028, "Member 'BP_Gimic_Chest_Piece_C_SpawnCureEffect::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SpawnCureEffect, Temp_object_Variable_3) == 0x000030, "Member 'BP_Gimic_Chest_Piece_C_SpawnCureEffect::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SpawnCureEffect, Temp_object_Variable_4) == 0x000038, "Member 'BP_Gimic_Chest_Piece_C_SpawnCureEffect::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SpawnCureEffect, Temp_object_Variable_5) == 0x000040, "Member 'BP_Gimic_Chest_Piece_C_SpawnCureEffect::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SpawnCureEffect, K2Node_Select_Default) == 0x000048, "Member 'BP_Gimic_Chest_Piece_C_SpawnCureEffect::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SpawnCureEffect, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_Gimic_Chest_Piece_C_SpawnCureEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SpawnCureEffect, CallFunc_GetPlayerPawn_ReturnValue) == 0x000058, "Member 'BP_Gimic_Chest_Piece_C_SpawnCureEffect::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SpawnCureEffect, K2Node_DynamicCast_AsCustom_Pawn) == 0x000060, "Member 'BP_Gimic_Chest_Piece_C_SpawnCureEffect::K2Node_DynamicCast_AsCustom_Pawn' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SpawnCureEffect, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_Gimic_Chest_Piece_C_SpawnCureEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SpawnCureEffect, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000070, "Member 'BP_Gimic_Chest_Piece_C_SpawnCureEffect::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.GetTargetLocation
// 0x0040 (0x0040 - 0x0000)
struct BP_Gimic_Chest_Piece_C_GetTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3EC[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  L_TargetPawn;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  L_BuddyPawn;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3ED[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_GetTargetLocation) == 0x000008, "Wrong alignment on BP_Gimic_Chest_Piece_C_GetTargetLocation");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_GetTargetLocation) == 0x000040, "Wrong size on BP_Gimic_Chest_Piece_C_GetTargetLocation");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetTargetLocation, Location) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_GetTargetLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetTargetLocation, L_TargetPawn) == 0x000010, "Member 'BP_Gimic_Chest_Piece_C_GetTargetLocation::L_TargetPawn' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetTargetLocation, L_BuddyPawn) == 0x000018, "Member 'BP_Gimic_Chest_Piece_C_GetTargetLocation::L_BuddyPawn' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetTargetLocation, CallFunc_GetPlayerPawn_ReturnValue) == 0x000020, "Member 'BP_Gimic_Chest_Piece_C_GetTargetLocation::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetTargetLocation, K2Node_DynamicCast_AsCustom_Pawn) == 0x000028, "Member 'BP_Gimic_Chest_Piece_C_GetTargetLocation::K2Node_DynamicCast_AsCustom_Pawn' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetTargetLocation, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Gimic_Chest_Piece_C_GetTargetLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetTargetLocation, CallFunc_GetSocketLocation_ReturnValue) == 0x000034, "Member 'BP_Gimic_Chest_Piece_C_GetTargetLocation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.GetPlayerHPMPMax
// 0x0140 (0x0140 - 0x0000)
struct BP_Gimic_Chest_Piece_C_GetPlayerHPMPMax final
{
public:
	E_PLAYER_TYPE                                 PlayerType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3EE[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HpMax;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MpMax;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3EF[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharData                              CallFunc_GetPlayerData_ReturnValue;                // 0x0010(0x0130)(ConstParm)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_GetPlayerHPMPMax) == 0x000008, "Wrong alignment on BP_Gimic_Chest_Piece_C_GetPlayerHPMPMax");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_GetPlayerHPMPMax) == 0x000140, "Wrong size on BP_Gimic_Chest_Piece_C_GetPlayerHPMPMax");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetPlayerHPMPMax, PlayerType) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_GetPlayerHPMPMax::PlayerType' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetPlayerHPMPMax, HpMax) == 0x000004, "Member 'BP_Gimic_Chest_Piece_C_GetPlayerHPMPMax::HpMax' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetPlayerHPMPMax, MpMax) == 0x000008, "Member 'BP_Gimic_Chest_Piece_C_GetPlayerHPMPMax::MpMax' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetPlayerHPMPMax, CallFunc_GetPlayerData_ReturnValue) == 0x000010, "Member 'BP_Gimic_Chest_Piece_C_GetPlayerHPMPMax::CallFunc_GetPlayerData_ReturnValue' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.GetNkmHPMPMax
// 0x0138 (0x0138 - 0x0000)
struct BP_Gimic_Chest_Piece_C_GetNkmHPMPMax final
{
public:
	int32                                         NkmIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HpMax;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MpMax;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_NkmIndex;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNkmData                               CallFunc_GetNkmData_ReturnValue;                   // 0x0010(0x0120)(ConstParm)
	bool                                          CallFunc_NkmIndexIsValid_ReturnValue;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_GetNkmHPMPMax) == 0x000008, "Wrong alignment on BP_Gimic_Chest_Piece_C_GetNkmHPMPMax");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_GetNkmHPMPMax) == 0x000138, "Wrong size on BP_Gimic_Chest_Piece_C_GetNkmHPMPMax");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetNkmHPMPMax, NkmIndex) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_GetNkmHPMPMax::NkmIndex' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetNkmHPMPMax, HpMax) == 0x000004, "Member 'BP_Gimic_Chest_Piece_C_GetNkmHPMPMax::HpMax' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetNkmHPMPMax, MpMax) == 0x000008, "Member 'BP_Gimic_Chest_Piece_C_GetNkmHPMPMax::MpMax' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetNkmHPMPMax, L_NkmIndex) == 0x00000C, "Member 'BP_Gimic_Chest_Piece_C_GetNkmHPMPMax::L_NkmIndex' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetNkmHPMPMax, CallFunc_GetNkmData_ReturnValue) == 0x000010, "Member 'BP_Gimic_Chest_Piece_C_GetNkmHPMPMax::CallFunc_GetNkmData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetNkmHPMPMax, CallFunc_NkmIndexIsValid_ReturnValue) == 0x000130, "Member 'BP_Gimic_Chest_Piece_C_GetNkmHPMPMax::CallFunc_NkmIndexIsValid_ReturnValue' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.SetPieceData
// 0x000C (0x000C - 0x0000)
struct BP_Gimic_Chest_Piece_C_SetPieceData final
{
public:
	struct FPieceData                             Param_PieceData;                                   // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_SetPieceData) == 0x000004, "Wrong alignment on BP_Gimic_Chest_Piece_C_SetPieceData");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_SetPieceData) == 0x00000C, "Wrong size on BP_Gimic_Chest_Piece_C_SetPieceData");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SetPieceData, Param_PieceData) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_SetPieceData::Param_PieceData' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.TriggerSilentMoon
// 0x0048 (0x0048 - 0x0000)
struct BP_Gimic_Chest_Piece_C_TriggerSilentMoon final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3F0[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMapGimmickTrigger_Actor;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapGimmickTrigger_C*                K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_TriggerSilentMoon) == 0x000008, "Wrong alignment on BP_Gimic_Chest_Piece_C_TriggerSilentMoon");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_TriggerSilentMoon) == 0x000048, "Wrong size on BP_Gimic_Chest_Piece_C_TriggerSilentMoon");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_TriggerSilentMoon, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_TriggerSilentMoon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_TriggerSilentMoon, CallFunc_GetMapCommon_rerutn) == 0x000010, "Member 'BP_Gimic_Chest_Piece_C_TriggerSilentMoon::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_TriggerSilentMoon, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000018, "Member 'BP_Gimic_Chest_Piece_C_TriggerSilentMoon::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_TriggerSilentMoon, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_Gimic_Chest_Piece_C_TriggerSilentMoon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_TriggerSilentMoon, CallFunc_BPI_GetMapGimmickTrigger_Actor) == 0x000030, "Member 'BP_Gimic_Chest_Piece_C_TriggerSilentMoon::CallFunc_BPI_GetMapGimmickTrigger_Actor' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_TriggerSilentMoon, K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger) == 0x000038, "Member 'BP_Gimic_Chest_Piece_C_TriggerSilentMoon::K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_TriggerSilentMoon, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_Gimic_Chest_Piece_C_TriggerSilentMoon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.CheckHaveLimitOver
// 0x0030 (0x0030 - 0x0000)
struct BP_Gimic_Chest_Piece_C_CheckHaveLimitOver final
{
public:
	struct FPieceData                             Param_PieceData;                                   // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          LimitOver;                                         // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3F1[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GetNum;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ItemGetNum_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ItemGetMaxNum_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ItemGetMaxNum_ReturnValue_1;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ItemGetNum_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_CheckHaveLimitOver) == 0x000004, "Wrong alignment on BP_Gimic_Chest_Piece_C_CheckHaveLimitOver");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_CheckHaveLimitOver) == 0x000030, "Wrong size on BP_Gimic_Chest_Piece_C_CheckHaveLimitOver");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CheckHaveLimitOver, Param_PieceData) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_CheckHaveLimitOver::Param_PieceData' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CheckHaveLimitOver, LimitOver) == 0x00000C, "Member 'BP_Gimic_Chest_Piece_C_CheckHaveLimitOver::LimitOver' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CheckHaveLimitOver, GetNum) == 0x000010, "Member 'BP_Gimic_Chest_Piece_C_CheckHaveLimitOver::GetNum' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CheckHaveLimitOver, CallFunc_ItemGetNum_ReturnValue) == 0x000014, "Member 'BP_Gimic_Chest_Piece_C_CheckHaveLimitOver::CallFunc_ItemGetNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CheckHaveLimitOver, CallFunc_ItemGetMaxNum_ReturnValue) == 0x000018, "Member 'BP_Gimic_Chest_Piece_C_CheckHaveLimitOver::CallFunc_ItemGetMaxNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CheckHaveLimitOver, CallFunc_ItemGetMaxNum_ReturnValue_1) == 0x00001C, "Member 'BP_Gimic_Chest_Piece_C_CheckHaveLimitOver::CallFunc_ItemGetMaxNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CheckHaveLimitOver, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_Gimic_Chest_Piece_C_CheckHaveLimitOver::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CheckHaveLimitOver, CallFunc_ItemGetNum_ReturnValue_1) == 0x000024, "Member 'BP_Gimic_Chest_Piece_C_CheckHaveLimitOver::CallFunc_ItemGetNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CheckHaveLimitOver, CallFunc_Min_ReturnValue) == 0x000028, "Member 'BP_Gimic_Chest_Piece_C_CheckHaveLimitOver::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CheckHaveLimitOver, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_Gimic_Chest_Piece_C_CheckHaveLimitOver::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CheckHaveLimitOver, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002D, "Member 'BP_Gimic_Chest_Piece_C_CheckHaveLimitOver::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_CheckHaveLimitOver, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'BP_Gimic_Chest_Piece_C_CheckHaveLimitOver::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.ShowDecal
// 0x00B4 (0x00B4 - 0x0000)
struct BP_Gimic_Chest_Piece_C_ShowDecal final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Execution;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_execution;                                       // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3F2[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x002C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_ShowDecal) == 0x000004, "Wrong alignment on BP_Gimic_Chest_Piece_C_ShowDecal");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_ShowDecal) == 0x0000B4, "Wrong size on BP_Gimic_Chest_Piece_C_ShowDecal");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowDecal, Show) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_ShowDecal::Show' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowDecal, Execution) == 0x000001, "Member 'BP_Gimic_Chest_Piece_C_ShowDecal::Execution' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowDecal, L_execution) == 0x000002, "Member 'BP_Gimic_Chest_Piece_C_ShowDecal::L_execution' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowDecal, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_Gimic_Chest_Piece_C_ShowDecal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowDecal, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_Gimic_Chest_Piece_C_ShowDecal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowDecal, CallFunc_GetForwardVector_ReturnValue) == 0x000008, "Member 'BP_Gimic_Chest_Piece_C_ShowDecal::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowDecal, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'BP_Gimic_Chest_Piece_C_ShowDecal::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowDecal, CallFunc_MakeRotFromZX_ReturnValue) == 0x000020, "Member 'BP_Gimic_Chest_Piece_C_ShowDecal::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowDecal, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x00002C, "Member 'BP_Gimic_Chest_Piece_C_ShowDecal::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.Stop_MovePiece
// 0x0010 (0x0010 - 0x0000)
struct BP_Gimic_Chest_Piece_C_Stop_MovePiece final
{
public:
	class UParticleSystem*                        L_Temp;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_Stop_MovePiece) == 0x000008, "Wrong alignment on BP_Gimic_Chest_Piece_C_Stop_MovePiece");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_Stop_MovePiece) == 0x000010, "Wrong size on BP_Gimic_Chest_Piece_C_Stop_MovePiece");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_Stop_MovePiece, L_Temp) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_Stop_MovePiece::L_Temp' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_Stop_MovePiece, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_Gimic_Chest_Piece_C_Stop_MovePiece::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.InitDecal
// 0x0068 (0x0068 - 0x0000)
struct BP_Gimic_Chest_Piece_C_InitDecal final
{
public:
	struct FColor                                 L_DecalColor;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPieceColor_st                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0004(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3F3[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPieceColor_st                         CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x000C(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3F4[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPieceColor_st                         CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0014(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3F5[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPieceColor_st                         CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x001C(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3F6[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPieceColor_st                         CallFunc_GetDataTableRowFromName_OutRow_4;         // 0x0050(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_4;    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3F7[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_InitDecal) == 0x000008, "Wrong alignment on BP_Gimic_Chest_Piece_C_InitDecal");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_InitDecal) == 0x000068, "Wrong size on BP_Gimic_Chest_Piece_C_InitDecal");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitDecal, L_DecalColor) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_InitDecal::L_DecalColor' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitDecal, CallFunc_GetDataTableRowFromName_OutRow) == 0x000004, "Member 'BP_Gimic_Chest_Piece_C_InitDecal::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitDecal, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000008, "Member 'BP_Gimic_Chest_Piece_C_InitDecal::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitDecal, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x00000C, "Member 'BP_Gimic_Chest_Piece_C_InitDecal::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitDecal, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000010, "Member 'BP_Gimic_Chest_Piece_C_InitDecal::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitDecal, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000014, "Member 'BP_Gimic_Chest_Piece_C_InitDecal::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitDecal, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000018, "Member 'BP_Gimic_Chest_Piece_C_InitDecal::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitDecal, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x00001C, "Member 'BP_Gimic_Chest_Piece_C_InitDecal::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitDecal, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x000020, "Member 'BP_Gimic_Chest_Piece_C_InitDecal::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitDecal, CallFunc_GetActorUpVector_ReturnValue) == 0x000024, "Member 'BP_Gimic_Chest_Piece_C_InitDecal::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitDecal, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000030, "Member 'BP_Gimic_Chest_Piece_C_InitDecal::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitDecal, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000040, "Member 'BP_Gimic_Chest_Piece_C_InitDecal::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitDecal, CallFunc_GetDataTableRowFromName_OutRow_4) == 0x000050, "Member 'BP_Gimic_Chest_Piece_C_InitDecal::CallFunc_GetDataTableRowFromName_OutRow_4' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitDecal, CallFunc_GetDataTableRowFromName_ReturnValue_4) == 0x000054, "Member 'BP_Gimic_Chest_Piece_C_InitDecal::CallFunc_GetDataTableRowFromName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitDecal, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000058, "Member 'BP_Gimic_Chest_Piece_C_InitDecal::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_InitDecal, K2Node_SwitchEnum_CmpSuccess) == 0x000060, "Member 'BP_Gimic_Chest_Piece_C_InitDecal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.ShowMainParticle
// 0x0080 (0x0080 - 0x0000)
struct BP_Gimic_Chest_Piece_C_ShowMainParticle final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3F8[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3F9[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3FA[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3FB[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_AddComponent_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_ShowMainParticle) == 0x000010, "Wrong alignment on BP_Gimic_Chest_Piece_C_ShowMainParticle");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_ShowMainParticle) == 0x000080, "Wrong size on BP_Gimic_Chest_Piece_C_ShowMainParticle");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowMainParticle, Show) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_ShowMainParticle::Show' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowMainParticle, Temp_struct_Variable) == 0x000004, "Member 'BP_Gimic_Chest_Piece_C_ShowMainParticle::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowMainParticle, Temp_struct_Variable_1) == 0x000010, "Member 'BP_Gimic_Chest_Piece_C_ShowMainParticle::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowMainParticle, Temp_bool_Variable) == 0x00001C, "Member 'BP_Gimic_Chest_Piece_C_ShowMainParticle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowMainParticle, K2Node_Select_Default) == 0x000020, "Member 'BP_Gimic_Chest_Piece_C_ShowMainParticle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowMainParticle, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_Gimic_Chest_Piece_C_ShowMainParticle::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowMainParticle, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_Gimic_Chest_Piece_C_ShowMainParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowMainParticle, CallFunc_AddComponent_ReturnValue) == 0x000068, "Member 'BP_Gimic_Chest_Piece_C_ShowMainParticle::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowMainParticle, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'BP_Gimic_Chest_Piece_C_ShowMainParticle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.ShowLineParticle
// 0x0050 (0x0050 - 0x0000)
struct BP_Gimic_Chest_Piece_C_ShowLineParticle final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3FC[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_AddComponent_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_ShowLineParticle) == 0x000010, "Wrong alignment on BP_Gimic_Chest_Piece_C_ShowLineParticle");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_ShowLineParticle) == 0x000050, "Wrong size on BP_Gimic_Chest_Piece_C_ShowLineParticle");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowLineParticle, Show) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_ShowLineParticle::Show' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowLineParticle, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_Gimic_Chest_Piece_C_ShowLineParticle::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowLineParticle, CallFunc_AddComponent_ReturnValue) == 0x000040, "Member 'BP_Gimic_Chest_Piece_C_ShowLineParticle::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowLineParticle, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_Gimic_Chest_Piece_C_ShowLineParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowLineParticle, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'BP_Gimic_Chest_Piece_C_ShowLineParticle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_ShowLineParticle, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00004A, "Member 'BP_Gimic_Chest_Piece_C_ShowLineParticle::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.SetRoomRotator
// 0x0020 (0x0020 - 0x0000)
struct BP_Gimic_Chest_Piece_C_SetRoomRotator final
{
public:
	class ADG_RoomRotator*                        Param_RoomRotator;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A3FD[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DG_RoomRotator_C*                   K2Node_DynamicCast_AsBP_DG_Room_Rotator;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_SetRoomRotator) == 0x000008, "Wrong alignment on BP_Gimic_Chest_Piece_C_SetRoomRotator");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_SetRoomRotator) == 0x000020, "Wrong size on BP_Gimic_Chest_Piece_C_SetRoomRotator");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SetRoomRotator, Param_RoomRotator) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_SetRoomRotator::Param_RoomRotator' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SetRoomRotator, ReturnValue) == 0x000008, "Member 'BP_Gimic_Chest_Piece_C_SetRoomRotator::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SetRoomRotator, K2Node_DynamicCast_AsBP_DG_Room_Rotator) == 0x000010, "Member 'BP_Gimic_Chest_Piece_C_SetRoomRotator::K2Node_DynamicCast_AsBP_DG_Room_Rotator' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_SetRoomRotator, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Gimic_Chest_Piece_C_SetRoomRotator::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.GetRoomRotator
// 0x0008 (0x0008 - 0x0000)
struct BP_Gimic_Chest_Piece_C_GetRoomRotator final
{
public:
	class ADG_RoomRotator*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_GetRoomRotator) == 0x000008, "Wrong alignment on BP_Gimic_Chest_Piece_C_GetRoomRotator");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_GetRoomRotator) == 0x000008, "Wrong size on BP_Gimic_Chest_Piece_C_GetRoomRotator");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_GetRoomRotator, ReturnValue) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_GetRoomRotator::ReturnValue' has a wrong offset!");

// Function BP_Gimic_Chest_Piece.BP_Gimic_Chest_Piece_C.UserConstructionScript
// 0x0058 (0x0058 - 0x0000)
struct BP_Gimic_Chest_Piece_C_UserConstructionScript final
{
public:
	class UObject*                                DataTable;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 L_IndexList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         L_Y;                                               // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_X;                                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_C;                                               // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_D;                                               // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 L_Actor;                                           // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_KukakuIndex;                                     // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3FE[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  L_UsedIndexList;                                   // 0x0038(0x0010)(Edit, BlueprintVisible)
	struct FVector                                L_UpVec;                                           // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Gimic_Chest_Piece_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Gimic_Chest_Piece_C_UserConstructionScript");
static_assert(sizeof(BP_Gimic_Chest_Piece_C_UserConstructionScript) == 0x000058, "Wrong size on BP_Gimic_Chest_Piece_C_UserConstructionScript");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_UserConstructionScript, DataTable) == 0x000000, "Member 'BP_Gimic_Chest_Piece_C_UserConstructionScript::DataTable' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_UserConstructionScript, L_IndexList) == 0x000008, "Member 'BP_Gimic_Chest_Piece_C_UserConstructionScript::L_IndexList' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_UserConstructionScript, L_Y) == 0x000018, "Member 'BP_Gimic_Chest_Piece_C_UserConstructionScript::L_Y' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_UserConstructionScript, L_X) == 0x00001C, "Member 'BP_Gimic_Chest_Piece_C_UserConstructionScript::L_X' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_UserConstructionScript, L_C) == 0x000020, "Member 'BP_Gimic_Chest_Piece_C_UserConstructionScript::L_C' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_UserConstructionScript, L_D) == 0x000024, "Member 'BP_Gimic_Chest_Piece_C_UserConstructionScript::L_D' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_UserConstructionScript, L_Actor) == 0x000028, "Member 'BP_Gimic_Chest_Piece_C_UserConstructionScript::L_Actor' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_UserConstructionScript, L_KukakuIndex) == 0x000030, "Member 'BP_Gimic_Chest_Piece_C_UserConstructionScript::L_KukakuIndex' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_UserConstructionScript, L_UsedIndexList) == 0x000038, "Member 'BP_Gimic_Chest_Piece_C_UserConstructionScript::L_UsedIndexList' has a wrong offset!");
static_assert(offsetof(BP_Gimic_Chest_Piece_C_UserConstructionScript, L_UpVec) == 0x000048, "Member 'BP_Gimic_Chest_Piece_C_UserConstructionScript::L_UpVec' has a wrong offset!");

}

