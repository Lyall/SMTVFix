#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BtnHelpCtrl2

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "ST_BtnHelp_ChangeInfo2_structs.hpp"
#include "Slate_structs.hpp"
#include "ST_BtnHelp_ColorInfo_byIdx_structs.hpp"
#include "ST_BtnHelp_ColorInfo_byEnum_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.ExecuteUbergraph_BP_BtnHelpCtrl2
// 0x001C (0x001C - 0x0000)
struct BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E5B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckGamePadUI_Gamepad;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckGamePadUI_Gamepad_1;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetIconMode_NotUse;                       // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetIconMode_NotUse_1;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_KeyboardLanguage                            CallFunc_GetKeyboardLanguage_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_KeyboardLanguage                            CallFunc_GetKeyboardLanguage_ReturnValue_1;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_KeyboardLanguage                            CallFunc_GetKeyboardLanguage_ReturnValue_2;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckGamePadUI_Gamepad_2;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInViewport_ReturnValue_1;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInfo_PresetPattern_NotUse;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInfo_PresetPattern_NotUse_1;           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue_1;            // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2) == 0x000004, "Wrong alignment on BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2");
static_assert(sizeof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2) == 0x00001C, "Wrong size on BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, EntryPoint) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, CallFunc_AddToWidgetPrio_ReturnValue) == 0x000004, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, K2Node_Event_EndPlayReason) == 0x00000C, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, CallFunc_CheckGamePadUI_Gamepad) == 0x00000D, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::CallFunc_CheckGamePadUI_Gamepad' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, CallFunc_CheckGamePadUI_Gamepad_1) == 0x00000E, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::CallFunc_CheckGamePadUI_Gamepad_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, CallFunc_SetIconMode_NotUse) == 0x00000F, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::CallFunc_SetIconMode_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, CallFunc_SetIconMode_NotUse_1) == 0x000010, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::CallFunc_SetIconMode_NotUse_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, CallFunc_GetKeyboardLanguage_ReturnValue) == 0x000011, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::CallFunc_GetKeyboardLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, CallFunc_GetKeyboardLanguage_ReturnValue_1) == 0x000012, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::CallFunc_GetKeyboardLanguage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000013, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, CallFunc_GetKeyboardLanguage_ReturnValue_2) == 0x000014, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::CallFunc_GetKeyboardLanguage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, CallFunc_CheckGamePadUI_Gamepad_2) == 0x000015, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::CallFunc_CheckGamePadUI_Gamepad_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, CallFunc_IsInViewport_ReturnValue) == 0x000016, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000017, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, CallFunc_IsInViewport_ReturnValue_1) == 0x000018, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::CallFunc_IsInViewport_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, CallFunc_SetInfo_PresetPattern_NotUse) == 0x000019, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::CallFunc_SetInfo_PresetPattern_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, CallFunc_SetInfo_PresetPattern_NotUse_1) == 0x00001A, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::CallFunc_SetInfo_PresetPattern_NotUse_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2, CallFunc_AddToWidgetPrio_ReturnValue_1) == 0x00001B, "Member 'BP_BtnHelpCtrl2_C_ExecuteUbergraph_BP_BtnHelpCtrl2::CallFunc_AddToWidgetPrio_ReturnValue_1' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_BtnHelpCtrl2_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_BtnHelpCtrl2_C_ReceiveEndPlay");
static_assert(sizeof(BP_BtnHelpCtrl2_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_BtnHelpCtrl2_C_ReceiveEndPlay");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BtnHelpCtrl2_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BtnHelpCtrl2_C_ReceiveTick");
static_assert(sizeof(BP_BtnHelpCtrl2_C_ReceiveTick) == 0x000004, "Wrong size on BP_BtnHelpCtrl2_C_ReceiveTick");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.Init
// 0x0010 (0x0010 - 0x0000)
struct BP_BtnHelpCtrl2_C_Init final
{
public:
	class UWB_BtnHelp2_C*                         CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtnHelp2_C*                         CallFunc_Create_ReturnValue_1;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_Init) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_Init");
static_assert(sizeof(BP_BtnHelpCtrl2_C_Init) == 0x000010, "Wrong size on BP_BtnHelpCtrl2_C_Init");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Init, CallFunc_Create_ReturnValue) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_Init::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Init, CallFunc_Create_ReturnValue_1) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_Init::CallFunc_Create_ReturnValue_1' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.End
// 0x0038 (0x0038 - 0x0000)
struct BP_BtnHelpCtrl2_C_End final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E5C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWB_BtnHelp2_C*>                 K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWB_BtnHelp2_C*                         CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E5D[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E5E[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_End) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_End");
static_assert(sizeof(BP_BtnHelpCtrl2_C_End) == 0x000038, "Wrong size on BP_BtnHelpCtrl2_C_End");
static_assert(offsetof(BP_BtnHelpCtrl2_C_End, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_End::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_End, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_End::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_End, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BtnHelpCtrl2_C_End::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_End, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BtnHelpCtrl2_C_End::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_End, CallFunc_IsInViewport_ReturnValue) == 0x000024, "Member 'BP_BtnHelpCtrl2_C_End::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_End, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'BP_BtnHelpCtrl2_C_End::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_End, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_BtnHelpCtrl2_C_End::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_End, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BtnHelpCtrl2_C_End::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_End, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_BtnHelpCtrl2_C_End::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.SetMainAnimState
// 0x0028 (0x0028 - 0x0000)
struct BP_BtnHelpCtrl2_C_SetMainAnimState final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_UI_STATE                           InState;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_UI_STATE                           L_OldState;                                        // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E5F[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtnHelp2_C*                         L_TargetWidget;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                Temp_byte_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_UI_STATE                           K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E60[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtnHelp2_C*                         K2Node_Select_Default_1;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_UI_STATE                           K2Node_Select_Default_2;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_SetMainAnimState) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_SetMainAnimState");
static_assert(sizeof(BP_BtnHelpCtrl2_C_SetMainAnimState) == 0x000028, "Wrong size on BP_BtnHelpCtrl2_C_SetMainAnimState");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetMainAnimState, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_SetMainAnimState::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetMainAnimState, InState) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_SetMainAnimState::InState' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetMainAnimState, L_OldState) == 0x000002, "Member 'BP_BtnHelpCtrl2_C_SetMainAnimState::L_OldState' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetMainAnimState, L_TargetWidget) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_SetMainAnimState::L_TargetWidget' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetMainAnimState, Temp_byte_Variable) == 0x000010, "Member 'BP_BtnHelpCtrl2_C_SetMainAnimState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetMainAnimState, Temp_byte_Variable_1) == 0x000011, "Member 'BP_BtnHelpCtrl2_C_SetMainAnimState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetMainAnimState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000012, "Member 'BP_BtnHelpCtrl2_C_SetMainAnimState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetMainAnimState, Temp_byte_Variable_2) == 0x000013, "Member 'BP_BtnHelpCtrl2_C_SetMainAnimState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetMainAnimState, K2Node_Select_Default) == 0x000014, "Member 'BP_BtnHelpCtrl2_C_SetMainAnimState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetMainAnimState, K2Node_Select_Default_1) == 0x000018, "Member 'BP_BtnHelpCtrl2_C_SetMainAnimState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetMainAnimState, K2Node_Select_Default_2) == 0x000020, "Member 'BP_BtnHelpCtrl2_C_SetMainAnimState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetMainAnimState, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'BP_BtnHelpCtrl2_C_SetMainAnimState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetMainAnimState, K2Node_SwitchEnum_CmpSuccess_1) == 0x000022, "Member 'BP_BtnHelpCtrl2_C_SetMainAnimState::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.Tick_Base
// 0x0002 (0x0002 - 0x0000)
struct BP_BtnHelpCtrl2_C_Tick_Base final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_Tick_Base) == 0x000001, "Wrong alignment on BP_BtnHelpCtrl2_C_Tick_Base");
static_assert(sizeof(BP_BtnHelpCtrl2_C_Tick_Base) == 0x000002, "Wrong size on BP_BtnHelpCtrl2_C_Tick_Base");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_Base, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_Tick_Base::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_Base, K2Node_SwitchEnum_CmpSuccess_1) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_Tick_Base::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.Tick_FrameIn
// 0x0020 (0x0020 - 0x0000)
struct BP_BtnHelpCtrl2_C_Tick_FrameIn final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E61[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtnHelp2_C*                         K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetNowAssignAnim_AnimationName;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNowAssignAnim_IsPlaying;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_Tick_FrameIn) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_Tick_FrameIn");
static_assert(sizeof(BP_BtnHelpCtrl2_C_Tick_FrameIn) == 0x000020, "Wrong size on BP_BtnHelpCtrl2_C_Tick_FrameIn");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_FrameIn, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_Tick_FrameIn::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_FrameIn, Temp_byte_Variable) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_Tick_FrameIn::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_FrameIn, K2Node_Select_Default) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_Tick_FrameIn::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_FrameIn, CallFunc_GetNowAssignAnim_AnimationName) == 0x000010, "Member 'BP_BtnHelpCtrl2_C_Tick_FrameIn::CallFunc_GetNowAssignAnim_AnimationName' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_FrameIn, CallFunc_GetNowAssignAnim_IsPlaying) == 0x000018, "Member 'BP_BtnHelpCtrl2_C_Tick_FrameIn::CallFunc_GetNowAssignAnim_IsPlaying' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.Tick_FrameOut
// 0x0020 (0x0020 - 0x0000)
struct BP_BtnHelpCtrl2_C_Tick_FrameOut final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E62[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtnHelp2_C*                         K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetNowAssignAnim_AnimationName;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNowAssignAnim_IsPlaying;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_Tick_FrameOut) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_Tick_FrameOut");
static_assert(sizeof(BP_BtnHelpCtrl2_C_Tick_FrameOut) == 0x000020, "Wrong size on BP_BtnHelpCtrl2_C_Tick_FrameOut");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_FrameOut, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_Tick_FrameOut::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_FrameOut, Temp_byte_Variable) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_Tick_FrameOut::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_FrameOut, K2Node_Select_Default) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_Tick_FrameOut::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_FrameOut, CallFunc_GetNowAssignAnim_AnimationName) == 0x000010, "Member 'BP_BtnHelpCtrl2_C_Tick_FrameOut::CallFunc_GetNowAssignAnim_AnimationName' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_FrameOut, CallFunc_GetNowAssignAnim_IsPlaying) == 0x000018, "Member 'BP_BtnHelpCtrl2_C_Tick_FrameOut::CallFunc_GetNowAssignAnim_IsPlaying' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.ReflectReserveColorInfo
// 0x0004 (0x0004 - 0x0000)
struct BP_BtnHelpCtrl2_C_ReflectReserveColorInfo final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetActiveColors_byIdx_NotUse;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetActiveColors_byIdx_NotUse_1;           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_ReflectReserveColorInfo) == 0x000001, "Wrong alignment on BP_BtnHelpCtrl2_C_ReflectReserveColorInfo");
static_assert(sizeof(BP_BtnHelpCtrl2_C_ReflectReserveColorInfo) == 0x000004, "Wrong size on BP_BtnHelpCtrl2_C_ReflectReserveColorInfo");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ReflectReserveColorInfo, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_ReflectReserveColorInfo::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ReflectReserveColorInfo, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_ReflectReserveColorInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ReflectReserveColorInfo, CallFunc_SetActiveColors_byIdx_NotUse) == 0x000002, "Member 'BP_BtnHelpCtrl2_C_ReflectReserveColorInfo::CallFunc_SetActiveColors_byIdx_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ReflectReserveColorInfo, CallFunc_SetActiveColors_byIdx_NotUse_1) == 0x000003, "Member 'BP_BtnHelpCtrl2_C_ReflectReserveColorInfo::CallFunc_SetActiveColors_byIdx_NotUse_1' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.Tick_ChangeFrameOut
// 0x0088 (0x0088 - 0x0000)
struct BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E63[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_BtnHelp_ChangeInfo2                L_ChangeInfo;                                      // 0x0008(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetHoldEffect_All2_NotUse;                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                Temp_byte_Variable_1;                              // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetActiveColors_All_NotUse;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                Temp_byte_Variable_2;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FrameIn_NotUse;                           // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E64[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtnHelp2_C*                         K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetNowAssignAnim_AnimationName;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNowAssignAnim_IsPlaying;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInfo_PresetPattern_NotUse;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInfo_ManualPattern_NotUse;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                Temp_byte_Variable_3;                              // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E65[0x1];                                     // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_BtnHelp_ChangeInfo2                K2Node_Select_Default_2;                           // 0x0050(0x0020)(HasGetValueTypeHash)
	class UWB_BtnHelp2_C*                         K2Node_Select_Default_3;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetNowAssignAnim_AnimationName_1;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNowAssignAnim_IsPlaying_1;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut");
static_assert(sizeof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut) == 0x000088, "Wrong size on BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, L_ChangeInfo) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::L_ChangeInfo' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, CallFunc_SetHoldEffect_All2_NotUse) == 0x00002D, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::CallFunc_SetHoldEffect_All2_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, Temp_byte_Variable) == 0x00002E, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, Temp_byte_Variable_1) == 0x00002F, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, CallFunc_SetActiveColors_All_NotUse) == 0x000030, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::CallFunc_SetActiveColors_All_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, Temp_byte_Variable_2) == 0x000032, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, CallFunc_FrameIn_NotUse) == 0x000033, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::CallFunc_FrameIn_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, K2Node_Select_Default) == 0x000038, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, CallFunc_GetNowAssignAnim_AnimationName) == 0x000040, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::CallFunc_GetNowAssignAnim_AnimationName' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, CallFunc_GetNowAssignAnim_IsPlaying) == 0x000048, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::CallFunc_GetNowAssignAnim_IsPlaying' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, CallFunc_SetInfo_PresetPattern_NotUse) == 0x000049, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::CallFunc_SetInfo_PresetPattern_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00004A, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, CallFunc_BooleanAND_ReturnValue) == 0x00004B, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, CallFunc_SetInfo_ManualPattern_NotUse) == 0x00004C, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::CallFunc_SetInfo_ManualPattern_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, Temp_byte_Variable_3) == 0x00004D, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, K2Node_Select_Default_1) == 0x00004E, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, K2Node_Select_Default_2) == 0x000050, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, K2Node_Select_Default_3) == 0x000070, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, CallFunc_GetNowAssignAnim_AnimationName_1) == 0x000078, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::CallFunc_GetNowAssignAnim_AnimationName_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut, CallFunc_GetNowAssignAnim_IsPlaying_1) == 0x000080, "Member 'BP_BtnHelpCtrl2_C_Tick_ChangeFrameOut::CallFunc_GetNowAssignAnim_IsPlaying_1' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.GetKeyboardBG
// 0x0008 (0x0008 - 0x0000)
struct BP_BtnHelpCtrl2_C_GetKeyboardBG final
{
public:
	class UMaterialInstance*                      Resource;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_GetKeyboardBG) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_GetKeyboardBG");
static_assert(sizeof(BP_BtnHelpCtrl2_C_GetKeyboardBG) == 0x000008, "Wrong size on BP_BtnHelpCtrl2_C_GetKeyboardBG");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetKeyboardBG, Resource) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_GetKeyboardBG::Resource' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.SetActiveColors_All
// 0x0010 (0x0010 - 0x0000)
struct BP_BtnHelpCtrl2_C_SetActiveColors_All final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NotUse;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                InDIr;                                             // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtnHelp2_C*                         K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_SetActiveColors_All) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_SetActiveColors_All");
static_assert(sizeof(BP_BtnHelpCtrl2_C_SetActiveColors_All) == 0x000010, "Wrong size on BP_BtnHelpCtrl2_C_SetActiveColors_All");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_All, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_All::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_All, IsActive) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_All::IsActive' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_All, NotUse) == 0x000002, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_All::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_All, InDIr) == 0x000003, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_All::InDIr' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_All, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_All::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_All, K2Node_SwitchEnum_CmpSuccess_1) == 0x000005, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_All::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_All, K2Node_SwitchEnum_CmpSuccess_2) == 0x000006, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_All::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_All, Temp_byte_Variable) == 0x000007, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_All::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_All, K2Node_Select_Default) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_All::K2Node_Select_Default' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.SetActiveColors_byIdx
// 0x0088 (0x0088 - 0x0000)
struct BP_BtnHelpCtrl2_C_SetActiveColors_byIdx final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E66[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_BtnHelp_ColorInfo_byIdx>    InActiveColorInfo;                                 // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          NotUse;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                L_InDirection;                                     // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E67[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_BtnHelp_ColorInfo_byIdx>    L_InColorInfo;                                     // 0x0020(0x0010)(Edit, BlueprintVisible)
	class UWB_BtnHelp2_C*                         L_TmpWidget;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E68[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBtnHelpInfo>                   CallFunc_GetHelpInfo_ReturnValue;                  // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E69[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E6A[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E6B[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtnHelpInfo>                   CallFunc_GetHelpInfo_ReturnValue_1;                // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E6C[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtnHelp2_C*                         K2Node_Select_Default;                             // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_SetActiveColors_byIdx");
static_assert(sizeof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx) == 0x000088, "Wrong size on BP_BtnHelpCtrl2_C_SetActiveColors_byIdx");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, InActiveColorInfo) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::InActiveColorInfo' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, NotUse) == 0x000018, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, L_InDirection) == 0x000019, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::L_InDirection' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, L_InColorInfo) == 0x000020, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::L_InColorInfo' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, L_TmpWidget) == 0x000030, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::L_TmpWidget' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, K2Node_SwitchEnum_CmpSuccess_1) == 0x000039, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, K2Node_SwitchEnum_CmpSuccess_2) == 0x00003A, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, CallFunc_GetHelpInfo_ReturnValue) == 0x000040, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::CallFunc_GetHelpInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, Temp_int_Variable) == 0x00005C, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, Temp_byte_Variable) == 0x000064, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, CallFunc_GetHelpInfo_ReturnValue_1) == 0x000068, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::CallFunc_GetHelpInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, CallFunc_Array_LastIndex_ReturnValue) == 0x000078, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00007C, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00007D, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byIdx, K2Node_Select_Default) == 0x000080, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byIdx::K2Node_Select_Default' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.SetInfo_ManualPattern
// 0x0028 (0x0028 - 0x0000)
struct BP_BtnHelpCtrl2_C_SetInfo_ManualPattern final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E6D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtnHelpInfo>                   InHelpPattern;                                     // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          NotUse;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E6E[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtnHelp2_C*                         K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_SetInfo_ManualPattern) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_SetInfo_ManualPattern");
static_assert(sizeof(BP_BtnHelpCtrl2_C_SetInfo_ManualPattern) == 0x000028, "Wrong size on BP_BtnHelpCtrl2_C_SetInfo_ManualPattern");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetInfo_ManualPattern, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_SetInfo_ManualPattern::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetInfo_ManualPattern, InHelpPattern) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_SetInfo_ManualPattern::InHelpPattern' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetInfo_ManualPattern, NotUse) == 0x000018, "Member 'BP_BtnHelpCtrl2_C_SetInfo_ManualPattern::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetInfo_ManualPattern, Temp_byte_Variable) == 0x000019, "Member 'BP_BtnHelpCtrl2_C_SetInfo_ManualPattern::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetInfo_ManualPattern, K2Node_Select_Default) == 0x000020, "Member 'BP_BtnHelpCtrl2_C_SetInfo_ManualPattern::K2Node_Select_Default' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.SetInfo_PresetPattern
// 0x0028 (0x0028 - 0x0000)
struct BP_BtnHelpCtrl2_C_SetInfo_PresetPattern final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_SET                                InHelpPattern;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotUse;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                L_HelpDir;                                         // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E6F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtnHelpInfo>                   CallFunc_GetHelpInfo_ReturnValue;                  // 0x0008(0x0010)(ReferenceParm)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E70[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtnHelp2_C*                         K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_SetInfo_PresetPattern) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_SetInfo_PresetPattern");
static_assert(sizeof(BP_BtnHelpCtrl2_C_SetInfo_PresetPattern) == 0x000028, "Wrong size on BP_BtnHelpCtrl2_C_SetInfo_PresetPattern");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetInfo_PresetPattern, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_SetInfo_PresetPattern::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetInfo_PresetPattern, InHelpPattern) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_SetInfo_PresetPattern::InHelpPattern' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetInfo_PresetPattern, NotUse) == 0x000002, "Member 'BP_BtnHelpCtrl2_C_SetInfo_PresetPattern::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetInfo_PresetPattern, L_HelpDir) == 0x000003, "Member 'BP_BtnHelpCtrl2_C_SetInfo_PresetPattern::L_HelpDir' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetInfo_PresetPattern, CallFunc_GetHelpInfo_ReturnValue) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_SetInfo_PresetPattern::CallFunc_GetHelpInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetInfo_PresetPattern, Temp_byte_Variable) == 0x000018, "Member 'BP_BtnHelpCtrl2_C_SetInfo_PresetPattern::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetInfo_PresetPattern, K2Node_Select_Default) == 0x000020, "Member 'BP_BtnHelpCtrl2_C_SetInfo_PresetPattern::K2Node_Select_Default' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.SetPositionType
// 0x0010 (0x0010 - 0x0000)
struct BP_BtnHelpCtrl2_C_SetPositionType final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_POS_TYPE                           InPositionType;                                    // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotUse;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E71[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtnHelp2_C*                         K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_SetPositionType) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_SetPositionType");
static_assert(sizeof(BP_BtnHelpCtrl2_C_SetPositionType) == 0x000010, "Wrong size on BP_BtnHelpCtrl2_C_SetPositionType");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetPositionType, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_SetPositionType::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetPositionType, InPositionType) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_SetPositionType::InPositionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetPositionType, NotUse) == 0x000002, "Member 'BP_BtnHelpCtrl2_C_SetPositionType::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetPositionType, Temp_byte_Variable) == 0x000003, "Member 'BP_BtnHelpCtrl2_C_SetPositionType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetPositionType, K2Node_Select_Default) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_SetPositionType::K2Node_Select_Default' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.SkipAnim
// 0x0060 (0x0060 - 0x0000)
struct BP_BtnHelpCtrl2_C_SkipAnim final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotUse;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E72[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_BtnHelp_ChangeInfo2                L_ChangeInfo;                                      // 0x0008(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                L_HelpDir;                                         // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHoldEffect_All2_NotUse;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                Temp_byte_Variable_1;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetActiveColors_All_NotUse;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                Temp_byte_Variable_2;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInfo_PresetPattern_NotUse;             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E73[0x1];                                     // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_BtnHelp_ChangeInfo2                K2Node_Select_Default;                             // 0x0030(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_SetInfo_ManualPattern_NotUse;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FrameIn_NotUse;                           // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E74[0x1];                                     // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_UI_STATE                           K2Node_Select_Default_2;                           // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_SkipAnim) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_SkipAnim");
static_assert(sizeof(BP_BtnHelpCtrl2_C_SkipAnim) == 0x000060, "Wrong size on BP_BtnHelpCtrl2_C_SkipAnim");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, NotUse) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, L_ChangeInfo) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::L_ChangeInfo' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, L_HelpDir) == 0x000028, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::L_HelpDir' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, CallFunc_SetHoldEffect_All2_NotUse) == 0x000029, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::CallFunc_SetHoldEffect_All2_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, Temp_byte_Variable) == 0x00002A, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, Temp_byte_Variable_1) == 0x00002B, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, CallFunc_SetActiveColors_All_NotUse) == 0x00002C, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::CallFunc_SetActiveColors_All_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, Temp_byte_Variable_2) == 0x00002D, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, CallFunc_SetInfo_PresetPattern_NotUse) == 0x00002E, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::CallFunc_SetInfo_PresetPattern_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, K2Node_Select_Default) == 0x000030, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, CallFunc_SetInfo_ManualPattern_NotUse) == 0x000050, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::CallFunc_SetInfo_ManualPattern_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, K2Node_SwitchEnum_CmpSuccess) == 0x000051, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, CallFunc_FrameIn_NotUse) == 0x000052, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::CallFunc_FrameIn_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, K2Node_Select_Default_1) == 0x000059, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, K2Node_Select_Default_2) == 0x00005A, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SkipAnim, K2Node_SwitchEnum_CmpSuccess_1) == 0x00005B, "Member 'BP_BtnHelpCtrl2_C_SkipAnim::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.FrameOut
// 0x0008 (0x0008 - 0x0000)
struct BP_BtnHelpCtrl2_C_FrameOut final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NotUse;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                L_HelpDir;                                         // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_UI_STATE                           K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_FrameOut) == 0x000001, "Wrong alignment on BP_BtnHelpCtrl2_C_FrameOut");
static_assert(sizeof(BP_BtnHelpCtrl2_C_FrameOut) == 0x000008, "Wrong size on BP_BtnHelpCtrl2_C_FrameOut");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameOut, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_FrameOut::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameOut, SkipAnimation) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_FrameOut::SkipAnimation' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameOut, NotUse) == 0x000002, "Member 'BP_BtnHelpCtrl2_C_FrameOut::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameOut, L_HelpDir) == 0x000003, "Member 'BP_BtnHelpCtrl2_C_FrameOut::L_HelpDir' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameOut, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'BP_BtnHelpCtrl2_C_FrameOut::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameOut, Temp_byte_Variable) == 0x000005, "Member 'BP_BtnHelpCtrl2_C_FrameOut::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameOut, K2Node_Select_Default) == 0x000006, "Member 'BP_BtnHelpCtrl2_C_FrameOut::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameOut, K2Node_SwitchEnum_CmpSuccess_1) == 0x000007, "Member 'BP_BtnHelpCtrl2_C_FrameOut::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.FrameIn
// 0x0009 (0x0009 - 0x0000)
struct BP_BtnHelpCtrl2_C_FrameIn final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_POS_TYPE                           InPositionType;                                    // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x0002(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NotUse;                                            // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                L_HelpDir;                                         // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddWidgetToNormalViewport_NotUse;         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddWidgetToNormalViewport_NotUse_1;       // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPositionType_NotUse;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_FrameIn) == 0x000001, "Wrong alignment on BP_BtnHelpCtrl2_C_FrameIn");
static_assert(sizeof(BP_BtnHelpCtrl2_C_FrameIn) == 0x000009, "Wrong size on BP_BtnHelpCtrl2_C_FrameIn");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_FrameIn::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn, InPositionType) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_FrameIn::InPositionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn, SkipAnimation) == 0x000002, "Member 'BP_BtnHelpCtrl2_C_FrameIn::SkipAnimation' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn, NotUse) == 0x000003, "Member 'BP_BtnHelpCtrl2_C_FrameIn::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn, L_HelpDir) == 0x000004, "Member 'BP_BtnHelpCtrl2_C_FrameIn::L_HelpDir' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'BP_BtnHelpCtrl2_C_FrameIn::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn, CallFunc_AddWidgetToNormalViewport_NotUse) == 0x000006, "Member 'BP_BtnHelpCtrl2_C_FrameIn::CallFunc_AddWidgetToNormalViewport_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn, CallFunc_AddWidgetToNormalViewport_NotUse_1) == 0x000007, "Member 'BP_BtnHelpCtrl2_C_FrameIn::CallFunc_AddWidgetToNormalViewport_NotUse_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn, CallFunc_SetPositionType_NotUse) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_FrameIn::CallFunc_SetPositionType_NotUse' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.SetHoldEffect_byIdx
// 0x0040 (0x0040 - 0x0000)
struct BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E75[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHold;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NotUse;                                            // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                L_InDirection;                                     // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E76[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtnHelpInfo>                   CallFunc_GetHelpInfo_ReturnValue;                  // 0x0010(0x0010)(ReferenceParm)
	TArray<struct FBtnHelpInfo>                   CallFunc_GetHelpInfo_ReturnValue_1;                // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E77[0x1];                                     // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtnHelp2_C*                         K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx");
static_assert(sizeof(BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx) == 0x000040, "Wrong size on BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx, Param_Index) == 0x000004, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx, IsHold) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx::IsHold' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx, NotUse) == 0x000009, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx, L_InDirection) == 0x00000A, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx::L_InDirection' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx, CallFunc_GetHelpInfo_ReturnValue) == 0x000010, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx::CallFunc_GetHelpInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx, CallFunc_GetHelpInfo_ReturnValue_1) == 0x000020, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx::CallFunc_GetHelpInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000034, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000035, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx, Temp_byte_Variable) == 0x000036, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx, K2Node_Select_Default) == 0x000038, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byIdx::K2Node_Select_Default' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.GetBtnHelpAnimState
// 0x0004 (0x0004 - 0x0000)
struct BP_BtnHelpCtrl2_C_GetBtnHelpAnimState final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_UI_STATE                           State;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_UI_STATE                           K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_GetBtnHelpAnimState) == 0x000001, "Wrong alignment on BP_BtnHelpCtrl2_C_GetBtnHelpAnimState");
static_assert(sizeof(BP_BtnHelpCtrl2_C_GetBtnHelpAnimState) == 0x000004, "Wrong size on BP_BtnHelpCtrl2_C_GetBtnHelpAnimState");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetBtnHelpAnimState, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_GetBtnHelpAnimState::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetBtnHelpAnimState, State) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_GetBtnHelpAnimState::State' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetBtnHelpAnimState, Temp_byte_Variable) == 0x000002, "Member 'BP_BtnHelpCtrl2_C_GetBtnHelpAnimState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetBtnHelpAnimState, K2Node_Select_Default) == 0x000003, "Member 'BP_BtnHelpCtrl2_C_GetBtnHelpAnimState::K2Node_Select_Default' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.SetVisibility
// 0x0020 (0x0020 - 0x0000)
struct BP_BtnHelpCtrl2_C_SetVisibility final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVisible;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NotUse;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E78[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E79[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E7A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtnHelp2_C*                         K2Node_Select_Default_1;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_SetVisibility) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_SetVisibility");
static_assert(sizeof(BP_BtnHelpCtrl2_C_SetVisibility) == 0x000020, "Wrong size on BP_BtnHelpCtrl2_C_SetVisibility");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetVisibility, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_SetVisibility::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetVisibility, IsVisible) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_SetVisibility::IsVisible' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetVisibility, NotUse) == 0x000002, "Member 'BP_BtnHelpCtrl2_C_SetVisibility::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetVisibility, Temp_float_Variable) == 0x000004, "Member 'BP_BtnHelpCtrl2_C_SetVisibility::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetVisibility, Temp_byte_Variable) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_SetVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetVisibility, Temp_float_Variable_1) == 0x00000C, "Member 'BP_BtnHelpCtrl2_C_SetVisibility::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetVisibility, Temp_bool_Variable) == 0x000010, "Member 'BP_BtnHelpCtrl2_C_SetVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetVisibility, K2Node_Select_Default) == 0x000014, "Member 'BP_BtnHelpCtrl2_C_SetVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetVisibility, K2Node_Select_Default_1) == 0x000018, "Member 'BP_BtnHelpCtrl2_C_SetVisibility::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.GetVisibility
// 0x0020 (0x0020 - 0x0000)
struct BP_BtnHelpCtrl2_C_GetVisibility final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVisible;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_UI_STATE                           K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E7B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtnHelp2_C*                         K2Node_Select_Default_1;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E7C[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_GetVisibility) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_GetVisibility");
static_assert(sizeof(BP_BtnHelpCtrl2_C_GetVisibility) == 0x000020, "Wrong size on BP_BtnHelpCtrl2_C_GetVisibility");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetVisibility, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_GetVisibility::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetVisibility, IsVisible) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_GetVisibility::IsVisible' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetVisibility, Temp_byte_Variable) == 0x000002, "Member 'BP_BtnHelpCtrl2_C_GetVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'BP_BtnHelpCtrl2_C_GetVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetVisibility, K2Node_Select_Default) == 0x000004, "Member 'BP_BtnHelpCtrl2_C_GetVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetVisibility, K2Node_Select_Default_1) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_GetVisibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetVisibility, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_BtnHelpCtrl2_C_GetVisibility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetVisibility, CallFunc_GetRenderOpacity_ReturnValue) == 0x000014, "Member 'BP_BtnHelpCtrl2_C_GetVisibility::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetVisibility, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_BtnHelpCtrl2_C_GetVisibility::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.SetActiveColors_Reserve
// 0x0020 (0x0020 - 0x0000)
struct BP_BtnHelpCtrl2_C_SetActiveColors_Reserve final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E7D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_BtnHelp_ColorInfo_byIdx>    InActiveColorInfo;                                 // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          NotUse;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_SetActiveColors_Reserve) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_SetActiveColors_Reserve");
static_assert(sizeof(BP_BtnHelpCtrl2_C_SetActiveColors_Reserve) == 0x000020, "Wrong size on BP_BtnHelpCtrl2_C_SetActiveColors_Reserve");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_Reserve, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_Reserve::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_Reserve, InActiveColorInfo) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_Reserve::InActiveColorInfo' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_Reserve, NotUse) == 0x000018, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_Reserve::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_Reserve, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_Reserve::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.CancelReserveColors
// 0x0003 (0x0003 - 0x0000)
struct BP_BtnHelpCtrl2_C_CancelReserveColors final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotUse;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_CancelReserveColors) == 0x000001, "Wrong alignment on BP_BtnHelpCtrl2_C_CancelReserveColors");
static_assert(sizeof(BP_BtnHelpCtrl2_C_CancelReserveColors) == 0x000003, "Wrong size on BP_BtnHelpCtrl2_C_CancelReserveColors");
static_assert(offsetof(BP_BtnHelpCtrl2_C_CancelReserveColors, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_CancelReserveColors::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_CancelReserveColors, NotUse) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_CancelReserveColors::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_CancelReserveColors, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'BP_BtnHelpCtrl2_C_CancelReserveColors::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.ChangeBtnHelp
// 0x0068 (0x0068 - 0x0000)
struct BP_BtnHelpCtrl2_C_ChangeBtnHelp final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E7E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_BtnHelp_ChangeInfo2                ChangeInfo;                                        // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          NotUse;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E7F[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_BtnHelp_ChangeInfo2                L_InChangeInfo;                                    // 0x0030(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                L_InHelpDir;                                       // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHoldEffect_All2_NotUse;                // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CancelReserveColors_NotUse;               // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetActiveColors_All_NotUse;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                Temp_byte_Variable_1;                              // 0x0055(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                Temp_byte_Variable_2;                              // 0x0056(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                Temp_byte_Variable_3;                              // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                K2Node_Select_Default;                             // 0x0058(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FrameOut_NotUse;                          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E80[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FrameIn_NotUse;                           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_UI_STATE                           K2Node_Select_Default_1;                           // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInfo_ManualPattern_NotUse;             // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInfo_PresetPattern_NotUse;             // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_ChangeBtnHelp) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_ChangeBtnHelp");
static_assert(sizeof(BP_BtnHelpCtrl2_C_ChangeBtnHelp) == 0x000068, "Wrong size on BP_BtnHelpCtrl2_C_ChangeBtnHelp");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, ChangeInfo) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::ChangeInfo' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, NotUse) == 0x000028, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, L_InChangeInfo) == 0x000030, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::L_InChangeInfo' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, L_InHelpDir) == 0x000050, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::L_InHelpDir' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, Temp_byte_Variable) == 0x000051, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, CallFunc_SetHoldEffect_All2_NotUse) == 0x000052, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::CallFunc_SetHoldEffect_All2_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, CallFunc_CancelReserveColors_NotUse) == 0x000053, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::CallFunc_CancelReserveColors_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, CallFunc_SetActiveColors_All_NotUse) == 0x000054, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::CallFunc_SetActiveColors_All_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, Temp_byte_Variable_1) == 0x000055, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, Temp_byte_Variable_2) == 0x000056, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, Temp_byte_Variable_3) == 0x000057, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, K2Node_Select_Default) == 0x000058, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, CallFunc_FrameOut_NotUse) == 0x000059, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::CallFunc_FrameOut_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, K2Node_SwitchEnum_CmpSuccess) == 0x000061, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, CallFunc_FrameIn_NotUse) == 0x000062, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::CallFunc_FrameIn_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, K2Node_Select_Default_1) == 0x000063, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, K2Node_SwitchEnum_CmpSuccess_1) == 0x000064, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, CallFunc_SetInfo_ManualPattern_NotUse) == 0x000065, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::CallFunc_SetInfo_ManualPattern_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_ChangeBtnHelp, CallFunc_SetInfo_PresetPattern_NotUse) == 0x000066, "Member 'BP_BtnHelpCtrl2_C_ChangeBtnHelp::CallFunc_SetInfo_PresetPattern_NotUse' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.SetHoldEffect_byMapping
// 0x0068 (0x0068 - 0x0000)
struct BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_MAPPING_KEY_TYPE                   TargetMapping;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHold;                                            // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NotUse;                                            // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                L_TargetDir;                                       // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E81[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_NowIdx;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_IsHold;                                          // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_MAPPING_KEY_TYPE                   L_TargetMapping;                                   // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E82[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtnHelpInfo>                   CallFunc_GetHelpInfo_ReturnValue;                  // 0x0010(0x0010)(ReferenceParm)
	TArray<struct FBtnHelpInfo>                   CallFunc_GetHelpInfo_ReturnValue_1;                // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E83[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtnHelpInfo>                   CallFunc_GetHelpInfo_ReturnValue_2;                // 0x0038(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E84[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E85[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtnHelp2_C*                         K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping");
static_assert(sizeof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping) == 0x000068, "Wrong size on BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, TargetMapping) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::TargetMapping' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, IsHold) == 0x000002, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::IsHold' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, NotUse) == 0x000003, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, L_TargetDir) == 0x000004, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::L_TargetDir' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, L_NowIdx) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::L_NowIdx' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, L_IsHold) == 0x00000C, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::L_IsHold' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, L_TargetMapping) == 0x00000D, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::L_TargetMapping' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, CallFunc_GetHelpInfo_ReturnValue) == 0x000010, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::CallFunc_GetHelpInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, CallFunc_GetHelpInfo_ReturnValue_1) == 0x000020, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::CallFunc_GetHelpInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, CallFunc_Array_LastIndex_ReturnValue) == 0x000030, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000034, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, CallFunc_GetHelpInfo_ReturnValue_2) == 0x000038, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::CallFunc_GetHelpInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, Temp_int_Variable) == 0x000048, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000051, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, Temp_byte_Variable) == 0x000058, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping, K2Node_Select_Default) == 0x000060, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_byMapping::K2Node_Select_Default' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.SetHoldEffect_All2
// 0x0010 (0x0010 - 0x0000)
struct BP_BtnHelpCtrl2_C_SetHoldEffect_All2 final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHold;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NotUse;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E86[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtnHelp2_C*                         K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_SetHoldEffect_All2) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_SetHoldEffect_All2");
static_assert(sizeof(BP_BtnHelpCtrl2_C_SetHoldEffect_All2) == 0x000010, "Wrong size on BP_BtnHelpCtrl2_C_SetHoldEffect_All2");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_All2, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_All2::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_All2, IsHold) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_All2::IsHold' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_All2, NotUse) == 0x000002, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_All2::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_All2, Temp_byte_Variable) == 0x000003, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_All2::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetHoldEffect_All2, K2Node_Select_Default) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_SetHoldEffect_All2::K2Node_Select_Default' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.FrameOut_All
// 0x0004 (0x0004 - 0x0000)
struct BP_BtnHelpCtrl2_C_FrameOut_All final
{
public:
	bool                                          SkipAnimation;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NotUse;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FrameOut_NotUse;                          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FrameOut_NotUse_1;                        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_FrameOut_All) == 0x000001, "Wrong alignment on BP_BtnHelpCtrl2_C_FrameOut_All");
static_assert(sizeof(BP_BtnHelpCtrl2_C_FrameOut_All) == 0x000004, "Wrong size on BP_BtnHelpCtrl2_C_FrameOut_All");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameOut_All, SkipAnimation) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_FrameOut_All::SkipAnimation' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameOut_All, NotUse) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_FrameOut_All::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameOut_All, CallFunc_FrameOut_NotUse) == 0x000002, "Member 'BP_BtnHelpCtrl2_C_FrameOut_All::CallFunc_FrameOut_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameOut_All, CallFunc_FrameOut_NotUse_1) == 0x000003, "Member 'BP_BtnHelpCtrl2_C_FrameOut_All::CallFunc_FrameOut_NotUse_1' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.SetActiveColors_byMapping
// 0x00B8 (0x00B8 - 0x0000)
struct BP_BtnHelpCtrl2_C_SetActiveColors_byMapping final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E87[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_BtnHelp_ColorInfo_byEnum>   InActiveColorInfo;                                 // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          NotUse;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FST_BtnHelp_ColorInfo_byEnum           L_NowInfo;                                         // 0x0019(0x0002)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E88[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_BtnHelp_ColorInfo_byEnum>   L_ColorInfo;                                       // 0x0020(0x0010)(Edit, BlueprintVisible)
	class UWB_BtnHelp2_C*                         L_TmpWidget;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                L_InDirection;                                     // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E89[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E8A[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtnHelpInfo>                   CallFunc_GetHelpInfo_ReturnValue;                  // 0x0048(0x0010)(ReferenceParm)
	TArray<struct FBtnHelpInfo>                   CallFunc_GetHelpInfo_ReturnValue_1;                // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E8B[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E8C[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FST_BtnHelp_ColorInfo_byEnum           CallFunc_Array_Get_Item;                           // 0x0079(0x0002)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E8D[0x1];                                     // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E8E[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E8F[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtnHelpInfo>                   CallFunc_GetHelpInfo_ReturnValue_2;                // 0x0090(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E90[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtnHelp2_C*                         K2Node_Select_Default;                             // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_SetActiveColors_byMapping");
static_assert(sizeof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping) == 0x0000B8, "Wrong size on BP_BtnHelpCtrl2_C_SetActiveColors_byMapping");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, InActiveColorInfo) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::InActiveColorInfo' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, NotUse) == 0x000018, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, L_NowInfo) == 0x000019, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::L_NowInfo' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, L_ColorInfo) == 0x000020, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::L_ColorInfo' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, L_TmpWidget) == 0x000030, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::L_TmpWidget' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, L_InDirection) == 0x000038, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::L_InDirection' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, Temp_int_Variable) == 0x00003C, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, Temp_bool_Variable) == 0x000044, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, CallFunc_Not_PreBool_ReturnValue) == 0x000045, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, CallFunc_GetHelpInfo_ReturnValue) == 0x000048, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::CallFunc_GetHelpInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, CallFunc_GetHelpInfo_ReturnValue_1) == 0x000058, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::CallFunc_GetHelpInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000068, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, CallFunc_Array_LastIndex_ReturnValue) == 0x00006C, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, Temp_int_Array_Index_Variable) == 0x000074, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, CallFunc_Array_Get_Item) == 0x000079, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, Temp_byte_Variable) == 0x000088, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, K2Node_SwitchEnum_CmpSuccess) == 0x000089, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, K2Node_SwitchEnum_CmpSuccess_1) == 0x00008A, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, K2Node_SwitchEnum_CmpSuccess_2) == 0x00008B, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, CallFunc_GetHelpInfo_ReturnValue_2) == 0x000090, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::CallFunc_GetHelpInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, CallFunc_Array_Length_ReturnValue_2) == 0x0000A0, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000A8, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, CallFunc_Less_IntInt_ReturnValue) == 0x0000A9, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000AC, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColors_byMapping, K2Node_Select_Default) == 0x0000B0, "Member 'BP_BtnHelpCtrl2_C_SetActiveColors_byMapping::K2Node_Select_Default' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.SetActiveColor_byIdx
// 0x0060 (0x0060 - 0x0000)
struct BP_BtnHelpCtrl2_C_SetActiveColor_byIdx final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E91[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_BtnHelp_ColorInfo_byIdx            InActiveColorInfo;                                 // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotUse;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                L_InDirection;                                     // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E92[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_BtnHelp_ColorInfo_byIdx            L_ColorInfo;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtnHelp2_C*                         L_TmpWidget;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E93[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtnHelpInfo>                   CallFunc_GetHelpInfo_ReturnValue;                  // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E94[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtnHelpInfo>                   CallFunc_GetHelpInfo_ReturnValue_1;                // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E95[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtnHelp2_C*                         K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_SetActiveColor_byIdx");
static_assert(sizeof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx) == 0x000060, "Wrong size on BP_BtnHelpCtrl2_C_SetActiveColor_byIdx");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byIdx::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx, InActiveColorInfo) == 0x000004, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byIdx::InActiveColorInfo' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx, NotUse) == 0x00000C, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byIdx::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx, L_InDirection) == 0x00000D, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byIdx::L_InDirection' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx, L_ColorInfo) == 0x000010, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byIdx::L_ColorInfo' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx, L_TmpWidget) == 0x000018, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byIdx::L_TmpWidget' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byIdx::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx, K2Node_SwitchEnum_CmpSuccess_1) == 0x000021, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byIdx::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx, K2Node_SwitchEnum_CmpSuccess_2) == 0x000022, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byIdx::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx, CallFunc_GetHelpInfo_ReturnValue) == 0x000028, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byIdx::CallFunc_GetHelpInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byIdx::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byIdx::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx, Temp_byte_Variable) == 0x00003D, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byIdx::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx, CallFunc_GetHelpInfo_ReturnValue_1) == 0x000040, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byIdx::CallFunc_GetHelpInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000050, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byIdx::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byIdx, K2Node_Select_Default) == 0x000058, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byIdx::K2Node_Select_Default' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.SetActiveColor_byMapping
// 0x0070 (0x0070 - 0x0000)
struct BP_BtnHelpCtrl2_C_SetActiveColor_byMapping final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_BtnHelp_ColorInfo_byEnum           InActiveColorInfo;                                 // 0x0001(0x0002)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotUse;                                            // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FST_BtnHelp_ColorInfo_byEnum           L_InColorInfo;                                     // 0x0004(0x0002)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E96[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtnHelp2_C*                         L_TmpWidget;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                L_InDirection;                                     // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E97[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtnHelpInfo>                   CallFunc_GetHelpInfo_ReturnValue;                  // 0x0018(0x0010)(ReferenceParm)
	TArray<struct FBtnHelpInfo>                   CallFunc_GetHelpInfo_ReturnValue_1;                // 0x0028(0x0010)(ReferenceParm)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E98[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E99[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtnHelpInfo>                   CallFunc_GetHelpInfo_ReturnValue_2;                // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E9A[0x1];                                     // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_BtnHelp2_C*                         K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_SetActiveColor_byMapping");
static_assert(sizeof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping) == 0x000070, "Wrong size on BP_BtnHelpCtrl2_C_SetActiveColor_byMapping");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, InActiveColorInfo) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::InActiveColorInfo' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, NotUse) == 0x000003, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, L_InColorInfo) == 0x000004, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::L_InColorInfo' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, L_TmpWidget) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::L_TmpWidget' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, L_InDirection) == 0x000010, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::L_InDirection' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, CallFunc_GetHelpInfo_ReturnValue) == 0x000018, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::CallFunc_GetHelpInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, CallFunc_GetHelpInfo_ReturnValue_1) == 0x000028, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::CallFunc_GetHelpInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, Temp_byte_Variable) == 0x000038, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, CallFunc_Array_LastIndex_ReturnValue) == 0x00003C, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, K2Node_SwitchEnum_CmpSuccess_1) == 0x000041, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, K2Node_SwitchEnum_CmpSuccess_2) == 0x000042, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, CallFunc_GetHelpInfo_ReturnValue_2) == 0x000048, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::CallFunc_GetHelpInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, Temp_int_Variable) == 0x00005C, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000061, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000062, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_byMapping, K2Node_Select_Default) == 0x000068, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_byMapping::K2Node_Select_Default' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.SetActiveColor_Reserve
// 0x0028 (0x0028 - 0x0000)
struct BP_BtnHelpCtrl2_C_SetActiveColor_Reserve final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E9B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_BtnHelp_ColorInfo_byIdx            InActiveColorInfo;                                 // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotUse;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E9C[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_BtnHelp_ColorInfo_byIdx>    K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_SetActiveColor_Reserve) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_SetActiveColor_Reserve");
static_assert(sizeof(BP_BtnHelpCtrl2_C_SetActiveColor_Reserve) == 0x000028, "Wrong size on BP_BtnHelpCtrl2_C_SetActiveColor_Reserve");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_Reserve, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_Reserve::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_Reserve, InActiveColorInfo) == 0x000004, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_Reserve::InActiveColorInfo' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_Reserve, NotUse) == 0x00000C, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_Reserve::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_Reserve, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_Reserve::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetActiveColor_Reserve, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BP_BtnHelpCtrl2_C_SetActiveColor_Reserve::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.GetActiveColor_ByMapping
// 0x0060 (0x0060 - 0x0000)
struct BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_MAPPING_KEY_TYPE                   InTargetMapping;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E9D[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E9E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBtnHelpInfo>                   CallFunc_GetHelpInfo_ReturnValue;                  // 0x0018(0x0010)(ReferenceParm)
	struct FBtnHelpInfo                           CallFunc_Array_Get_Item;                           // 0x0028(0x0020)()
	class UWB_BtnHelp2_C*                         K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActiveColor_IsActive;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E9F[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping");
static_assert(sizeof(BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping) == 0x000060, "Wrong size on BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping, InTargetMapping) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping::InTargetMapping' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping, IsActive) == 0x000002, "Member 'BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping::IsActive' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping, Temp_byte_Variable) == 0x000010, "Member 'BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping, CallFunc_GetHelpInfo_ReturnValue) == 0x000018, "Member 'BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping::CallFunc_GetHelpInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping, K2Node_Select_Default) == 0x000048, "Member 'BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping, CallFunc_GetActiveColor_IsActive) == 0x000050, "Member 'BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping::CallFunc_GetActiveColor_IsActive' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_BtnHelpCtrl2_C_GetActiveColor_ByMapping::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.SetIconMode
// 0x0002 (0x0002 - 0x0000)
struct BP_BtnHelpCtrl2_C_SetIconMode final
{
public:
	bool                                          IsGamePad;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NotUse;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_SetIconMode) == 0x000001, "Wrong alignment on BP_BtnHelpCtrl2_C_SetIconMode");
static_assert(sizeof(BP_BtnHelpCtrl2_C_SetIconMode) == 0x000002, "Wrong size on BP_BtnHelpCtrl2_C_SetIconMode");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetIconMode, IsGamePad) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_SetIconMode::IsGamePad' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_SetIconMode, NotUse) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_SetIconMode::NotUse' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.FrameIn_AsChildOfCanvas
// 0x0040 (0x0040 - 0x0000)
struct BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTN_HELP_POS_TYPE                           InPositionType;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7EA0[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanel*                           InCanvasPanel;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotUse;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7EA1[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0014(0x0010)(NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_BTN_HELP_DIR                                Temp_byte_Variable;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7EA2[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BtnHelp2_C*                         K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPositionType_NotUse;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInViewport_ReturnValue_1;               // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas) == 0x000008, "Wrong alignment on BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas");
static_assert(sizeof(BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas) == 0x000040, "Wrong size on BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas, InPositionType) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas::InPositionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas, SkipAnimation) == 0x000002, "Member 'BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas::SkipAnimation' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas, InCanvasPanel) == 0x000008, "Member 'BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas::InCanvasPanel' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas, NotUse) == 0x000010, "Member 'BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas, K2Node_MakeStruct_Anchors) == 0x000014, "Member 'BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas, K2Node_SwitchEnum_CmpSuccess) == 0x000024, "Member 'BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas, Temp_byte_Variable) == 0x000025, "Member 'BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas, K2Node_Select_Default) == 0x000028, "Member 'BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas, CallFunc_AddChildToCanvas_ReturnValue) == 0x000030, "Member 'BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas, CallFunc_SetPositionType_NotUse) == 0x000038, "Member 'BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas::CallFunc_SetPositionType_NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas, CallFunc_IsInViewport_ReturnValue) == 0x000039, "Member 'BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas, CallFunc_IsInViewport_ReturnValue_1) == 0x00003A, "Member 'BP_BtnHelpCtrl2_C_FrameIn_AsChildOfCanvas::CallFunc_IsInViewport_ReturnValue_1' has a wrong offset!");

// Function BP_BtnHelpCtrl2.BP_BtnHelpCtrl2_C.AddWidgetToNormalViewport
// 0x0007 (0x0007 - 0x0000)
struct BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport final
{
public:
	E_BTN_HELP_DIR                                InDirectionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotUse;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInViewport_ReturnValue_1;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue_1;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport) == 0x000001, "Wrong alignment on BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport");
static_assert(sizeof(BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport) == 0x000007, "Wrong size on BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport");
static_assert(offsetof(BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport, InDirectionType) == 0x000000, "Member 'BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport::InDirectionType' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport, NotUse) == 0x000001, "Member 'BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport::NotUse' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport, CallFunc_IsInViewport_ReturnValue) == 0x000003, "Member 'BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport, CallFunc_IsInViewport_ReturnValue_1) == 0x000004, "Member 'BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport::CallFunc_IsInViewport_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport, CallFunc_AddToWidgetPrio_ReturnValue) == 0x000005, "Member 'BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport, CallFunc_AddToWidgetPrio_ReturnValue_1) == 0x000006, "Member 'BP_BtnHelpCtrl2_C_AddWidgetToNormalViewport::CallFunc_AddToWidgetPrio_ReturnValue_1' has a wrong offset!");

}

