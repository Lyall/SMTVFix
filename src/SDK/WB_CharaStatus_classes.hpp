#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CharaStatus

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_CharaStatus.WB_CharaStatus_C
// 0x12C0 (0x1520 - 0x0260)
class UWB_CharaStatus_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 AffinitiesFlag_0;                                  // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesFlag_1;                                  // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesFlag_2;                                  // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesFlag_3;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesFlag_4;                                  // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesFlag_5;                                  // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesFlag_6;                                  // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesFlag_7;                                  // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesFlag_8;                                  // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesFlag_9;                                  // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesFlag_10;                                 // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesNum_0;                                   // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesNum_1;                                   // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesNum_2;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesNum_3;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesNum_4;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesNum_5;                                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesNum_6;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesNum_7;                                   // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesNum_8;                                   // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesNum_9;                                   // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AffinitiesNum_10;                                  // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_FaceBtnL;                                 // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_FaceBtnM1;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_FaceBtnM2;                                // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_FaceBtnP1;                                // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_FaceBtnP2;                                // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_FaceBtnR;                                 // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_FluctionDown;                             // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_FluctionUp;                               // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Lck;                                      // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Mag;                                      // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Parent_0;                                 // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Parent_1;                                 // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Parent_2;                                 // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Parent_3;                                 // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Parent_4;                                 // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Parent_5;                                 // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Parent_6;                                 // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Parent_7;                                 // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Parent_8;                                 // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Parent_9;                                 // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Parent_10;                                // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Parent_11;                                // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Right_0;                                  // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Right_1;                                  // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Right_2;                                  // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Right_3;                                  // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Right_4;                                  // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Right_5;                                  // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Right_6;                                  // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Right_7;                                  // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Right_8;                                  // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Right_9;                                  // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Right_10;                                 // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Right_11;                                 // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Right_12;                                 // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Spd;                                      // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Str;                                      // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButtonS5*                              ButtonS5_Vit;                                      // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasBarLengthLck;                                // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasBarLengthMag;                                // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasBarLengthSpd;                                // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasBarLengthStr;                                // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasBarLengthVit;                                // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExpNum_0;                                          // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExpNum_1;                                          // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExpNum_2;                                          // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExpNum_3;                                          // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExpNum_4;                                          // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExpNum_5;                                          // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExpNum_6;                                          // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExpNum_7;                                          // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExpNum_8;                                          // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FaceIcon_Center;                                   // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FaceIcon_L1;                                       // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FaceIcon_L2;                                       // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FaceIcon_Margin;                                   // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FaceIcon_R1;                                       // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FaceIcon_R2;                                       // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationExpFlag;                                // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationExpNum_0;                               // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationExpNum_1;                               // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationExpNum_2;                               // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationExpNum_3;                               // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationExpNum_4;                               // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationExpNum_5;                               // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationExpNum_6;                               // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationExpNum_7;                               // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationExpNum_8;                               // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationHpFlag;                                 // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationHpNum_0;                                // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationHpNum_1;                                // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationHpNum_2;                                // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationHpNum_3;                                // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationLckFlag;                                // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationLckNum_0;                               // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationLckNum_1;                               // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationLckNum_2;                               // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationLckNum_3;                               // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationMagFlag;                                // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationMagNum_0;                               // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationMagNum_1;                               // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationMagNum_2;                               // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationMagNum_3;                               // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationMpFlag;                                 // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationMpNum_0;                                // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationMpNum_1;                                // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationMpNum_2;                                // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationMpNum_3;                                // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationSpdFlag;                                // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationSpdNum_0;                               // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationSpdNum_1;                               // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationSpdNum_2;                               // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationSpdNum_3;                               // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationStrFlag;                                // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationStrNum_0;                               // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationStrNum_1;                               // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationStrNum_2;                               // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationStrNum_3;                               // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationVitFlag;                                // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationVitNum_0;                               // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationVitNum_1;                               // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationVitNum_2;                               // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FluctuationVitNum_3;                               // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HPNum_0;                                           // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HPNum_1;                                           // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HPNum_2;                                           // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HPNum_3;                                           // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HPSlash;                                           // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_50;                                          // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_BtnHelp_ActionMappingIcon_C*        InheritEndBtnIcon;                                 // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LckNum_0;                                          // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LckNum_1;                                          // 0x0690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LckNum_2;                                          // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MagNum_0;                                          // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MagNum_1;                                          // 0x06A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MagNum_2;                                          // 0x06B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MaxHPNum_0;                                        // 0x06B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MaxHPNum_1;                                        // 0x06C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MaxHPNum_2;                                        // 0x06C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MaxHPNum_3;                                        // 0x06D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MaxMPNum_0;                                        // 0x06D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MaxMPNum_1;                                        // 0x06E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MaxMPNum_2;                                        // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MaxMPNum_3;                                        // 0x06F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum0_0;                                      // 0x06F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum0_1;                                      // 0x0700(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum0_2;                                      // 0x0708(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum1_0;                                      // 0x0710(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum1_1;                                      // 0x0718(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum1_2;                                      // 0x0720(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum10_0;                                     // 0x0728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum10_1;                                     // 0x0730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum10_2;                                     // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum11_0;                                     // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum11_1;                                     // 0x0748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum11_2;                                     // 0x0750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum12_0;                                     // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum12_1;                                     // 0x0760(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum12_2;                                     // 0x0768(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum2_0;                                      // 0x0770(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum2_1;                                      // 0x0778(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum2_2;                                      // 0x0780(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum3_0;                                      // 0x0788(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum3_1;                                      // 0x0790(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum3_2;                                      // 0x0798(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum4_0;                                      // 0x07A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum4_1;                                      // 0x07A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum4_2;                                      // 0x07B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum5_0;                                      // 0x07B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum5_1;                                      // 0x07C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum5_2;                                      // 0x07C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum6_0;                                      // 0x07D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum6_1;                                      // 0x07D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum6_2;                                      // 0x07E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum7_0;                                      // 0x07E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum7_1;                                      // 0x07F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum7_2;                                      // 0x07F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum8_0;                                      // 0x0800(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum8_1;                                      // 0x0808(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum8_2;                                      // 0x0810(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum9_0;                                      // 0x0818(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum9_1;                                      // 0x0820(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MpCostNum9_2;                                      // 0x0828(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MPNum_0;                                           // 0x0830(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MPNum_1;                                           // 0x0838(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MPNum_2;                                           // 0x0840(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MPNum_3;                                           // 0x0848(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MPSlash;                                           // 0x0850(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NextSkillLvNum_0;                                  // 0x0858(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NextSkillLvNum_1;                                  // 0x0860(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NextSkillLvNum_2;                                  // 0x0868(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           ParentHoverCanvas;                                 // 0x0870(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum1_0;                                // 0x0878(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum1_1;                                // 0x0880(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum1_2;                                // 0x0888(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum10_0;                               // 0x0890(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum10_1;                               // 0x0898(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum10_2;                               // 0x08A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum11_0;                               // 0x08A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum11_1;                               // 0x08B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum11_2;                               // 0x08B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum2_0;                                // 0x08C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum2_1;                                // 0x08C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum2_2;                                // 0x08D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum3_0;                                // 0x08D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum3_1;                                // 0x08E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum3_2;                                // 0x08E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum4_0;                                // 0x08F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum4_1;                                // 0x08F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum4_2;                                // 0x0900(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum5_0;                                // 0x0908(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum5_1;                                // 0x0910(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum5_2;                                // 0x0918(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum6_0;                                // 0x0920(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum6_1;                                // 0x0928(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum6_2;                                // 0x0930(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum7_0;                                // 0x0938(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum7_1;                                // 0x0940(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum7_2;                                // 0x0948(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum8_0;                                // 0x0950(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum8_1;                                // 0x0958(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum8_2;                                // 0x0960(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum9_0;                                // 0x0968(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum9_1;                                // 0x0970(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentMpCostNum9_2;                                // 0x0978(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentSlotIcon_1;                                  // 0x0980(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentSlotIcon_2;                                  // 0x0988(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentSlotIcon_3;                                  // 0x0990(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentSlotIcon_4;                                  // 0x0998(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentSlotIcon_5;                                  // 0x09A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentSlotIcon_6;                                  // 0x09A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentSlotIcon_7;                                  // 0x09B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentSlotIcon_8;                                  // 0x09B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentSlotIcon_9;                                  // 0x09C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentSlotIcon_10;                                 // 0x09C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ParentSlotIcon_11;                                 // 0x09D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlayerLvNum_0;                                     // 0x09D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlayerLvNum_1;                                     // 0x09E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlayerLvNum_2;                                     // 0x09E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RemainingDenominatorNum_0;                         // 0x09F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RemainingDenominatorNum_1;                         // 0x09F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RemainingDenominatorNum_2;                         // 0x0A00(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RemainingDenominatorNum_3;                         // 0x0A08(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RemainingNumeratorNum_0;                           // 0x0A10(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RemainingNumeratorNum_1;                           // 0x0A18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RemainingNumeratorNum_2;                           // 0x0A20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RemainingNumeratorNum_3;                           // 0x0A28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RemainingSlash;                                    // 0x0A30(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           ResistancesBadCanvas;                              // 0x0A38(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           ResistancesBadTextCanvas;                          // 0x0A40(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RightHoverCanvas;                                  // 0x0A48(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightSlotIcon_0;                                   // 0x0A50(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightSlotIcon_1;                                   // 0x0A58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightSlotIcon_2;                                   // 0x0A60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightSlotIcon_3;                                   // 0x0A68(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightSlotIcon_4;                                   // 0x0A70(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightSlotIcon_5;                                   // 0x0A78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightSlotIcon_6;                                   // 0x0A80(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightSlotIcon_7;                                   // 0x0A88(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightSlotIcon_8;                                   // 0x0A90(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightSlotIcon_9;                                   // 0x0A98(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightSlotIcon_10;                                  // 0x0AA0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightSlotIcon_11;                                  // 0x0AA8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightSlotIcon_12;                                  // 0x0AB0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpdNum_0;                                          // 0x0AB8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpdNum_1;                                          // 0x0AC0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpdNum_2;                                          // 0x0AC8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerAptitudePanel;                             // 0x0AD0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerBiography;                                 // 0x0AD8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerBiographyQuestion;                         // 0x0AE0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerCharaSelectCursor;                         // 0x0AE8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerConditionHpMp;                             // 0x0AF0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerDevilIcon;                                 // 0x0AF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerEncountArea;                               // 0x0B00(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerEssenceIcon;                               // 0x0B08(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerExpBar;                                    // 0x0B10(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerFluctuationCursor;                         // 0x0B18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerFluctuationExp;                            // 0x0B20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerFluctuationHp;                             // 0x0B28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerFluctuationLck;                            // 0x0B30(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerFluctuationMag;                            // 0x0B38(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerFluctuationMp;                             // 0x0B40(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerFluctuationSpd;                            // 0x0B48(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerFluctuationStr;                            // 0x0B50(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerFluctuationVit;                            // 0x0B58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerHpBar;                                     // 0x0B60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerLevelUp;                                   // 0x0B68(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerLv;                                        // 0x0B70(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerLvGlimmer;                                 // 0x0B78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerMpBar;                                     // 0x0B80(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerNameplate;                                 // 0x0B88(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerNextLv;                                    // 0x0B90(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerNextSkillsLv;                              // 0x0B98(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParamBarLck;                               // 0x0BA0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParamBarLckB;                              // 0x0BA8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParamBarMag;                               // 0x0BB0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParamBarMagB;                              // 0x0BB8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParamBarSpd;                               // 0x0BC0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParamBarSpdB;                              // 0x0BC8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParamBarStr;                               // 0x0BD0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParamBarStrB;                              // 0x0BD8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParamBarVit;                               // 0x0BE0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParamBarVitB;                              // 0x0BE8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentScrollBar;                           // 0x0BF0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlot_0;                              // 0x0BF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlot_1;                              // 0x0C00(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlot_2;                              // 0x0C08(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlot_3;                              // 0x0C10(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlot_4;                              // 0x0C18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlot_5;                              // 0x0C20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlot_6;                              // 0x0C28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlot_7;                              // 0x0C30(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlot_8;                              // 0x0C38(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlot_9;                              // 0x0C40(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlot_10;                             // 0x0C48(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlot_11;                             // 0x0C50(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlot_12;                             // 0x0C58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlotCost_1;                          // 0x0C60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlotCost_2;                          // 0x0C68(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlotCost_3;                          // 0x0C70(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlotCost_4;                          // 0x0C78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlotCost_5;                          // 0x0C80(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlotCost_6;                          // 0x0C88(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlotCost_7;                          // 0x0C90(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlotCost_8;                          // 0x0C98(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlotCost_9;                          // 0x0CA0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlotCost_10;                         // 0x0CA8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerParentSlotCost_11;                         // 0x0CB0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerPosBG;                                     // 0x0CB8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerProductIcon;                               // 0x0CC0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRemainingPanel;                            // 0x0CC8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerResistanceElectric;                        // 0x0CD0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerResistanceFlame;                           // 0x0CD8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerResistanceHama;                            // 0x0CE0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerResistanceIce;                             // 0x0CE8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerResistanceImpact;                          // 0x0CF0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerResistanceJyusatu;                         // 0x0CF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerResistancePhysics;                         // 0x0D00(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerResistances;                               // 0x0D08(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerResistancesBad;                            // 0x0D10(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlot_0;                               // 0x0D18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlot_1;                               // 0x0D20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlot_2;                               // 0x0D28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlot_3;                               // 0x0D30(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlot_4;                               // 0x0D38(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlot_5;                               // 0x0D40(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlot_6;                               // 0x0D48(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlot_7;                               // 0x0D50(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlot_8;                               // 0x0D58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlot_9;                               // 0x0D60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlot_10;                              // 0x0D68(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlot_11;                              // 0x0D70(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlot_12;                              // 0x0D78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlotCost_0;                           // 0x0D80(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlotCost_1;                           // 0x0D88(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlotCost_2;                           // 0x0D90(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlotCost_3;                           // 0x0D98(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlotCost_4;                           // 0x0DA0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlotCost_5;                           // 0x0DA8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlotCost_6;                           // 0x0DB0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlotCost_7;                           // 0x0DB8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlotCost_8;                           // 0x0DC0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlotCost_9;                           // 0x0DC8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlotCost_10;                          // 0x0DD0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlotCost_11;                          // 0x0DD8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlotCost_12;                          // 0x0DE0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlotFlash_0;                          // 0x0DE8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlotFlash_1;                          // 0x0DF0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerRightSlotFlash_2;                          // 0x0DF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerScrollBar;                                 // 0x0E00(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerSelect;                                    // 0x0E08(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerSelect_L;                                  // 0x0E10(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerSelect_R;                                  // 0x0E18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerSelectOrder;                               // 0x0E20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerSelectSkill;                               // 0x0E28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerSlotCursor;                                // 0x0E30(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerStatusCursor;                              // 0x0E38(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerStatusParameter;                           // 0x0E40(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerSwapCursor;                                // 0x0E48(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerSwapHold;                                  // 0x0E50(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayerTytle;                                     // 0x0E58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StrNum_0;                                          // 0x0E60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StrNum_1;                                          // 0x0E68(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StrNum_2;                                          // 0x0E70(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_0;                                   // 0x0E78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_1;                                   // 0x0E80(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_2;                                   // 0x0E88(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_3;                                   // 0x0E90(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_4;                                   // 0x0E98(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_5;                                   // 0x0EA0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_6;                                   // 0x0EA8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_7;                                   // 0x0EB0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_8;                                   // 0x0EB8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_9;                                   // 0x0EC0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_10;                                  // 0x0EC8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_11;                                  // 0x0ED0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_12;                                  // 0x0ED8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_13;                                  // 0x0EE0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_14;                                  // 0x0EE8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_15;                                  // 0x0EF0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_16;                                  // 0x0EF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBiography_17;                                  // 0x0F00(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_CharaSelect;                             // 0x0F08(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Name;                                    // 0x0F10(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Race;                                    // 0x0F18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextEncountArea_0;                                 // 0x0F20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextEncountArea_1;                                 // 0x0F28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextParentSlot_1;                                  // 0x0F30(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextParentSlot_2;                                  // 0x0F38(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextParentSlot_3;                                  // 0x0F40(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextParentSlot_4;                                  // 0x0F48(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextParentSlot_5;                                  // 0x0F50(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextParentSlot_6;                                  // 0x0F58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextParentSlot_7;                                  // 0x0F60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextParentSlot_8;                                  // 0x0F68(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextParentSlot_9;                                  // 0x0F70(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextParentSlot_10;                                 // 0x0F78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextParentSlot_11;                                 // 0x0F80(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextParentSlot_12;                                 // 0x0F88(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextRightSlot_0;                                   // 0x0F90(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextRightSlot_1;                                   // 0x0F98(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextRightSlot_2;                                   // 0x0FA0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextRightSlot_3;                                   // 0x0FA8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextRightSlot_4;                                   // 0x0FB0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextRightSlot_5;                                   // 0x0FB8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextRightSlot_6;                                   // 0x0FC0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextRightSlot_7;                                   // 0x0FC8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextRightSlot_8;                                   // 0x0FD0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextRightSlot_9;                                   // 0x0FD8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextRightSlot_10;                                  // 0x0FE0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextRightSlot_11;                                  // 0x0FE8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextRightSlot_12;                                  // 0x0FF0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 VitNum_0;                                          // 0x0FF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 VitNum_1;                                          // 0x1000(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 VitNum_2;                                          // 0x1008(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_BtnHelp_ActionMappingIcon_C*        WB_BtnIcon_L;                                      // 0x1010(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_BtnHelp_ActionMappingIcon_C*        WB_BtnIcon_R;                                      // 0x1018(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ScrollBar_C*                        WB_ParentScrollBar;                                // 0x1020(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ScrollBar_C*                        WB_ScrollBar;                                      // 0x1028(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class USsPlayerWidget*>                ResistanceStates;                                  // 0x1030(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         ExpNums;                                           // 0x1040(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         HPNums;                                            // 0x1050(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         MaxHPNums;                                         // 0x1060(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         MPNums;                                            // 0x1070(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         MaxMPNums;                                         // 0x1080(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         StrNums;                                           // 0x1090(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         VitNums;                                           // 0x10A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         MagNums;                                           // 0x10B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         SpdNums;                                           // 0x10C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         LckNums;                                           // 0x10D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         RemainingDenomNums;                                // 0x10E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         RemainingNumerNums;                                // 0x10F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         FluctuationExpNums;                                // 0x1100(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         FluctuationHpNums;                                 // 0x1110(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         FluctuationMpNums;                                 // 0x1120(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         FluctuationStrNums;                                // 0x1130(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         FluctuationVitNums;                                // 0x1140(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         FluctuationMagNums;                                // 0x1150(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         FluctuationSpdNums;                                // 0x1160(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         FluctuationLckNums;                                // 0x1170(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         ConstRightItemDistance;                            // 0x1180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ConstSkillSlot;                                    // 0x1184(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9123[0x4];                                     // 0x118C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         RightSlotSkillCostNums;                            // 0x1190(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         AnimCurrent_RightSkillSlot;                        // 0x11A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9124[0x4];                                     // 0x11A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         RightMpCostNums_0;                                 // 0x11A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         RightMpCostNums_1;                                 // 0x11B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         RightMpCostNums_2;                                 // 0x11C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         RightMpCostNums_3;                                 // 0x11D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         RightMpCostNums_4;                                 // 0x11E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         RightMpCostNums_5;                                 // 0x11F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         RightMpCostNums_6;                                 // 0x1208(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         RightMpCostNums_7;                                 // 0x1218(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         RightMpCostNums_8;                                 // 0x1228(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         RightMpCostNums_9;                                 // 0x1238(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         RightMpCostNums_10;                                // 0x1248(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         RightMpCostNums_11;                                // 0x1258(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         RightMpCostNums_12;                                // 0x1268(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         PlayerLvNums;                                      // 0x1278(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         NextSkillLvNums;                                   // 0x1288(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         M_RightSlotDeltaSeconds;                           // 0x1298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkillSlotCurrent;                                  // 0x129C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ConstStatusFullOpenFlag;                           // 0x12A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9125[0x4];                                     // 0x12A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptMessageAsset*                    M_ConditionNameAsset;                              // 0x12A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_STATUS_PAGE_TYPE                         M_UIType;                                          // 0x12B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9126[0x7];                                     // 0x12B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> M_HelpWindow;                                      // 0x12B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UUIStatusCtrlDataObjBase*               M_UIStatusCtrlObj;                                 // 0x12C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UImage*>                         ParentMpCostNums_1;                                // 0x12D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         ParentMpCostNums_2;                                // 0x12E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         ParentMpCostNums_3;                                // 0x12F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         ParentMpCostNums_4;                                // 0x1300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         ParentMpCostNums_5;                                // 0x1310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         ParentMpCostNums_6;                                // 0x1320(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         ParentMpCostNums_7;                                // 0x1330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         ParentMpCostNums_8;                                // 0x1340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         ParentMpCostNums_9;                                // 0x1350(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         ParentMpCostNums_10;                               // 0x1360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UImage*>                         ParentMpCostNums_11;                               // 0x1370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         AnimCurrent_ParentSkillSlot;                       // 0x1380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_ParentSlotDeltaSeconds;                          // 0x1384(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Test_SkillSwapAnimEnd;                             // 0x1388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9127[0x3];                                     // 0x1389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Const_SlotMax;                                     // 0x138C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_FaceIconSlideTime;                               // 0x1390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         M_NextSkillFlashNum;                               // 0x1394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_SlotFlashSlideTime;                              // 0x1398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         M_InsertIndex;                                     // 0x139C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_InsertDeltaSeconds;                              // 0x13A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_RightSlotLearnSlideTime;                         // 0x13A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_PosSkillSlot0_X;                                 // 0x13A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_PosSkillSlot0_Y;                                 // 0x13AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Const_LearnSlideDeltaTime;                         // 0x13B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Const_ColorWhite;                                  // 0x13B4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Const_ColorBEFF4C;                                 // 0x13C4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         M_SkillSwapPtn;                                    // 0x13D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UI_STATUS_PAGE_TYPE                         M_ChangeAnimReq;                                   // 0x13D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9128[0x3];                                     // 0x13D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         M_ChangePageRequest;                               // 0x13DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_UseCursor;                                       // 0x13E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          M_IsUsedSlotCursor;                                // 0x13E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9129[0x6];                                     // 0x13E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptMessageAsset*                    M_StatusMessageAsset;                              // 0x13E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_EnableHelpWindow;                                // 0x13F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_912A[0x7];                                     // 0x13F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptMessageAsset*                    M_DevilProfile;                                    // 0x13F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    M_MapAreaName;                                     // 0x1400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_IsEndNextSkillFlash;                             // 0x1408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_912B[0x3];                                     // 0x1409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         M_LvAnimType;                                      // 0x140C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UImage*>                         M_BadIcons;                                        // 0x1410(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UTextBlock*>                     M_ResistancesBadText;                              // 0x1420(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         M_ResistancesBadPanelIn;                           // 0x1430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         M_ResultAnimStep;                                  // 0x1434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_SwapTime;                                        // 0x1438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SwapCursorSrc;                                     // 0x143C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SwapCursorDst;                                     // 0x1440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Const_SwapTime;                                    // 0x1444(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Const_SwapWaitTime;                                // 0x1448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_WithTitle;                                       // 0x144C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          M_UseLvUpGimmerParts;                              // 0x144D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_912C[0x2];                                     // 0x144E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         M_5ParaMaxGaugeFrame;                              // 0x1450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         M_InIndex;                                         // 0x1454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             Disp_OnMovedRightScrollBarByMouse;                 // 0x1458(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Disp_OnClickedRightSlot;                           // 0x1468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         M_BiographyRowMax;                                 // 0x1478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_912D[0x4];                                     // 0x147C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             Disp_OnHoveredRightSlot;                           // 0x1480(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Disp_OnMovedParentScrollBarByMouse;                // 0x1490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Disp_OnClickedParentSlot;                          // 0x14A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Disp_OnHoveredParentSlot;                          // 0x14B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Disp_OnClickedFluctuationCursor;                   // 0x14C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Disp_OnHoveredFluctuationPanel;                    // 0x14D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Disp_OnClickedFaceBtnLR;                           // 0x14E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Disp_OnClickedFacePanel;                           // 0x14F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         M_FaceIconMove;                                    // 0x1500(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_EnableMouseHover;                                // 0x1504(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_912E[0x3];                                     // 0x1505(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         M_ResultHelpClosePastTime;                         // 0x1508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         M_InheritIconType;                                 // 0x150C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_GamePadIconMode;                                 // 0x150D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	E_KeyboardLanguage                            M_KyeboardLanguage;                                // 0x150E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_912F[0x1];                                     // 0x150F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             Disp_GardenResultFlashStart;                       // 0x1510(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void UpdateConditionCursor(int32 TopIndex, bool* Dummy);
	void ChangePage(bool* Dummy);
	void CloseStatus_Common(bool* Dummy);
	void HideUI_Common(bool* Dummy);
	void ChangeChara_Common(int32 MoveLR, bool UseLRAnim, bool* Dummy);
	void OpenStatus_Common(const class UUIStatusCtrlDataObjBase*& StatusCtrlObj, bool WithTitle, bool* Dummy);
	void UpdateSkillSwap(int32 TopIndex, bool IsHolding, bool* Dummy);
	void EndSwap(int32 TopIndex, bool* Dummy);
	void IsEndSwapSlide(bool* End);
	void SwapRightSlot(int32 HoldSlot, int32 CursorSlot, bool* Dummy);
	void UpdateBiography(int32 Offset, int32* NewOffset);
	void BindFuncGardenResultFeedInUI(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void GetStatsListHover(int32* Param_Index);
	void SetBtnIconType(bool IsGamePad, bool UpdateLR, bool UpdateInheritEnd);
	void GetHoverIndex(int32* Right, int32* Parent);
	void GetWheelListHover(bool* Parent, bool* Right);
	void UpdateFaceIcon(int32 Move, class UUIStatusCtrlDataObjBase*& InputPin);
	void GardenResult_SkipInAnim(bool UseFluctuation, bool* Complete);
	void GardenResult_ShowUpParam(class UUIStatusCtrlDataObjBase* StatusCtrlObj, bool UseFluctuation);
	void UpdateSkillSlot_ExSkillStart(class UUIStatusCtrlDataObjBase* DataObj, int32 TopIndex, E_UI_STATUS_PAGE_TYPE PageType);
	void GetPartsParentSlotButton(int32 Param_Index, class UButtonS5** ButtonS5_Right);
	void GetPartsRightSlotButton(int32 Param_Index, class UButtonS5** ButtonS5_Right);
	void BindFunc_OnMovedParentScrollBarByMouse(float InScrollRate);
	void UpdateRightSlotOffsetByMouse(int32 Offset);
	void BindFunc_OnMovedRightScrollBarByMouse(float InScrollRate);
	void SetSlotKamuiSwitch(TArray<class UImage*>& CostImageList, class USsPlayerWidget*& CostSSP, int32 IsOn);
	void PartsAnimSlotItem_Variable(class USsPlayerWidget* SlotSSPlayer, E_UI_STATUS_SLOT SlotType, int32 AnimNum, int32 StartFrame);
	void PlayCommonPartsAnimation_VariableStartFrame(class USsPlayerWidget*& TargetSSPlayer, int32 AnimNum, int32 StartFrame);
	void Update5ParaMaxFrame(bool Reset);
	void CloseAllAnimPartsImmediate();
	void CancelPageChangeAnim();
	void BindFuncFluctiuationOpen(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void ReturnInheritUI(class UUIStatusCtrlDataObjBase*& StatusDataObj, int32 ParentTopIndex, int32 ChildTopIndex);
	void ResetSlotColor(int32 Param_Index);
	void VisualizationUI(int32 TopIndex, bool IsHolding);
	void SetFaceIconData(class UUIStatusCtrlDataObjBase*& UIStatusCtrlObj, int32 Move, bool UseLRAnim);
	void UpdateSwapIcon(class UUIStatusCtrlDataObjBase*& Obj, int32 TopIndex, bool IsHolding);
	float SwapRateConverter(float Time, int32 Distance);
	void SwapPartsRightSlot(int32 Src, int32 Dst);
	void ResultFunc_UpdateParamForGetSkill(class UUIStatusCtrlDataObjBase*& StatusDataObj);
	void CloseCursor(class UUIStatusCtrlDataObjBase* DataObj, int32 TopIndex);
	void ShowStatus_ResistancesInherit(class UUIStatusCtrlDataObjBase*& StatusDataObj);
	void ResultFunc_RotationNextSkillSlot(bool UseSlot4);
	void ResultFunc_StartNextSkillFlashAnim(int32 Max);
	void ResultFunc_UpdateNextSkillSlotPos(class UWidget* Widget, int32 Param_Index, float AddPosRate);
	void ResultFunc_UpdateNewSkillText();
	void GetPartsResistancesBadText(int32 Param_Index, class UTextBlock** Text);
	void GetPartsBadIconImage(int32 Param_Index, class UImage** Image);
	void SetUtsusemiData_SimpleStatus(int32 AnimNum, class UUIStatusCtrlDataObjBase* Param_M_UIStatusCtrlObj);
	void ResultFunc_UpdateNextSkillFlash();
	void PartsAnimNextSlotFlash(int32 Param_Index);
	void TestUIOpen(class UUIStatusCtrlDataObjBase* Param_M_UIStatusCtrlObj);
	void Close_Inherit(bool Immediate);
	void ShowParentSkillSlotOnly_Inherit(class UUIStatusCtrlDataObjBase* In_CtrlDataObj);
	void ShowFusionResult_Inherit(class UUIStatusCtrlDataObjBase* DataObj);
	void SetEmptyNum3_SimpleStatus(TArray<class UImage*>& ImageList);
	void SetEmptyData_SimpleStatus(int32 AnimNum);
	float AffinitiesPos(int32 Param_Index);
	void PartsAnimPlayerSelectOptionParts(int32 AnimNum, class UUIStatusCtrlDataObjBase* UIStatusCtrlObj);
	float GetRightScrollBarRate(E_UI_STATUS_PAGE_TYPE PageType, class UUIStatusCtrlDataObjBase* StatusCtrlDataObj, int32 Offset);
	void Close_SimpleStatus(int32 AnimNum);
	void ChangeStatus_SimpleStatus(class UUIStatusCtrlDataObjBase* Data);
	void Open_SimpleStatus(class UUIStatusCtrlDataObjBase* Data, int32 AnimNum);
	void Text____Race(class FText* NewParam);
	void Text____Name(class FText* NewParam);
	void SetSlotCursorExitButton(bool IsUsedSlotCursor, int32 AnimNum);
	void SetFaceIconPos(float ShiftRate);
	void SetSlotCursorPos(bool IsParent, int32 SlotNum);
	void PartsAnimSlotCursor(bool IsParent, int32 SlotNum, int32 AnimNum, int32 StartFrame);
	void PartsAnimBar(class USsPlayerWidget*& TargetSSP, class UWB_ScrollBar_C* TargetBar, float BarPosition, int32 AnimNum);
	void UpdateStatus_Inherit(class UUIStatusCtrlDataObjBase*& StatusDataObj, int32 ParentTopIndex, int32 ChildTopIndex);
	void ShowStatus_Inherit(class UUIStatusCtrlDataObjBase*& StatusDataObj, E_UI_STATUS_PAGE_TYPE In_UIType);
	void TextOrder(E_UI_STATUS_FUSION_ORDER Order, class FText* OrderText);
	void IsEnableCharaChange(class UUIStatusCtrlDataObjBase*& CtrlData, bool* IsEnable);
	void UpdateSkillSlot_Battle(class UUIStatusCtrlDataObjBase* DataObj, int32 TopIndex, E_UI_STATUS_PAGE_TYPE PageType);
	void ChangePage_Battle(class UUIStatusCtrlDataObjBase*& StatusDataObj, E_UI_STATUS_PAGE_TYPE NextPageType, bool WithTitle);
	void ChangeStatus_Battle(class UUIStatusCtrlDataObjBase*& StatusDataObj, int32 TopIndex, int32 MoveLR, E_UI_STATUS_PAGE_TYPE PageType, bool WithTitle, bool UseLRAnim);
	void ShowStatus_Battle(class UUIStatusCtrlDataObjBase*& StatusDataObj, E_UI_STATUS_PAGE_TYPE In_UIType, bool WithTitle, int32 InOffset);
	void ResultFunc_UpdateSkillSlot(int32 CursorIndex, int32 Offset, class UUIStatusCtrlDataObjBase* In_CtrlDataObj);
	void BindFuncNewSkillInEnd(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BindFuncNewSkillInStart(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BindFuncEndFlashAnim(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void CloseAllAnimParts();
	void SetFluctuation5ParaSingle(int32 AddParam, int32 Type);
	void SetSSPColor(class USsPlayerWidget*& In_SsPlayer, struct FLinearColor& In_Color);
	void SetInheritEndIconAndText(bool IsGamePad);
	void PartsAnimLvUpText(int32 AnimNum);
	class UImage* GetPartsAffinitiesNumImage(int32 Param_Index);
	class UImage* GetPartsAffinitiesFlag(int32 Param_Index);
	class USsPlayerWidget* GetPartsParentSlotCostSSP(int32 Param_Index);
	class UImage* GetPartsParentSlotIcon(int32 Param_Index);
	void TextExitButton(class FText* NewParam);
	void SetSlotMpCost(TArray<class UImage*>& CostImageList, class USsPlayerWidget*& CostSSP, int32 Cost, bool IsMagatsuhi);
	void ConvertResistanceNum2AnimationName(int32 ResistParam, bool IsOpen, class FName* NewParam);
	void BindFuncAkirameSkill(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void Text___(class FText* NewParam);
	void TextMinusMinusMinus(class FText* NewParam);
	void BindFuncLearnNewSkill(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BindFuncLearnOldSkillOut(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void PlayCommonPartsAnimation(class USsPlayerWidget*& TargetSSPlayer, int32 AnimNum);
	void SetNextSkillLv(int32 NextExpLv, int32 AnimNum, int32 HeightIndex, int32 StartFrame);
	void PartsAnimSlotItem(class USsPlayerWidget* SlotSSPlayer, E_UI_STATUS_SLOT SlotType, int32 AnimNum);
	class UTextBlock* GetPartsTextObjectParentItem(int32 Param_Index);
	class UImage* GetPartsRightSlotIcon(int32 Param_Index);
	void GetPartsSlotFlash(int32 Param_Index, class USsPlayerWidget** SsPlayerRightSlot);
	void InitFlashPos();
	void BindFuncResultFeedInUI(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void Result_StartNewSkillFlash(class UUIStatusCtrlDataObjBase* In_CtrlDataObj);
	void Result_SkipSkillLearnAnim();
	void Result_SkillEventInsertNewSkill(int32 SkillIndex);
	void Result_CtrlSelectDiscardSkill(int32 In_CursorIndex, int32 In_Offset, bool In_UseHPMPFluctuation, bool In_Use5ParaFluctuation);
	void Result_SkipNextFlashAnim();
	void Result_StartNextSkillFlash(int32 FlashCnt);
	void Result_SetParamAddNum(int32 ParamIndex, int32 Param, int32 FlucParam, int32 Remaining, int32 AddNum);
	void Result_SetParamCursor(int32 ParamIndex);
	void Result_StartHeroParamCtrl(int32 Remaining);
	void Result_SkipLvUpAnimation();
	void Result_StartLvUpAnimation();
	class UWidget* GetParts5ParaBarCanvas(int32 Param_Index);
	class USsPlayerWidget* GetParts5ParaColorBar(int32 Param_Index);
	class USsPlayerWidget* GetParts5ParaWhiteBar(int32 Param_Index);
	void PartsAnimParentSlot(int32 AnimNum, int32 TopIndex, class UUIStatusCtrlDataObjBase* In_CtrlDataObj);
	class UImage* GetPartsFaceIcon(int32 Param_Index);
	void PartsAnimRightSlot(int32 AnimNum, class UUIStatusCtrlDataObjBase* In_CtrlDataObj, bool Param_M_UseCursor, int32 InOffset);
	void PartsAnimBiography(int32 AnimNum, bool ForceOut);
	void PartsAnimEncountArea(int32 AnimNum, bool ForceOut);
	void PartsAnimAffinities(int32 AnimNum, bool ForceOut);
	void PartsAnimRemaining(bool Remaining, bool FiveParaCursor, int32 CursorIndex, int32 AnimNum, int32 AddNum);
	void PartsAnimFluctuation(bool Exp, bool HpMp, bool FivePara, int32 AnimNum);
	void PartsAnimStats(int32 AnimNum);
	void PartsAnimResistancesBad(int32 AnimNum);
	void PartsAnimResistances(int32 AnimNum);
	void PartsAnimExpHpMp(int32 AnimNum);
	void MyTickFunc(float DeltaSeconds);
	void PartsAnimNameLv(int32 In_AddLv, int32 AnimNum, bool UseLvUpGimmer);
	void PartsAnimBookIcon(E_UI_STATUS_BOOK InBookIconType, int32 AnimNum);
	void PartsAnimFaceIcons(int32 AnimNum, class UUIStatusCtrlDataObjBase* CtrlData);
	void PartsAnimTitle(E_UI_STATUS_TITLE InTitleType, int32 AnimNum);
	void SetSwapCursor(bool IsParent, int32 SlotIndex, bool WithInAnim);
	void InitSwapCursorPos(int32 CursorSlotIndex, int32 HoldSlotIndex);
	void GetPartsParentSlot(int32 Param_Index, class USsPlayerWidget** SsPlayerRightSlot);
	void GetPartsRightSlot(int32 Param_Index, class USsPlayerWidget** SsPlayerRightSlot);
	void InitSkillPos();
	void InitSlotPartPos(class FName InPartsName, class UWidget* Widget, int32 Offset);
	void InitPartPos(class FName InPartsName, class UWidget* Widget);
	void PlayCommonInOutAnimation_2(class USsPlayerWidget*& TargetSSPlayer, bool IsOut);
	void Result_ShowUpParam(class UUIStatusCtrlDataObjBase*& StatusDataObj);
	void Result_CloseStatusUI();
	void Result_IsFinishedNextSkillFlashAnimation(bool* IsFinished);
	void Result_IsFinishedResultUIClose(bool* IsFinished);
	void Result_IsFinishedAnim(bool* IsEnd);
	void Result_GetStepNewSkillTitleIn(int32* Step);
	void Result_GetStepLvUpAnimation(int32* Step);
	void SetFaceIcon(const int32 IconNum, class UImage*& TargetImage);
	void SetEncounterArea(int32 DevilID, int32 OpenFlag);
	void SetBiographyText(int32 DevilID, int32 OpenFlag, int32 Offset, int32* NewOffset, float* BarPosition);
	void SetHyphen(class UImage* Image);
	void SetQuestion(class UImage* Image);
	void SetNumHyphen(TArray<class UImage*>& ImageList, int32 HyphenNum);
	void SetNumUnknown(TArray<class UImage*>& ImageList);
	void CheckOpenFlag(int32 OpenFlag, E_UI_STATUS_OPEN Status, bool* Open);
	void GetPartsRightSlotCostSSP(int32 Param_Index, class USsPlayerWidget** SsPlayerRightSlotCost);
	void SetSlotIcon(class UImage*& TargetImage, int32 IconID);
	void SetSlotTextColor(class UTextBlock* Target, E_UI_STATUS_SLOT ColorType);
	void ResetAffinitiesColor();
	void ResetFluctuationColor();
	void ResetExpHpMpColor();
	void ResetColorStats();
	void PlayLevelUpLoopAnimation(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void PlayLevelUpInAnimation();
	void SetNumColor(TArray<class UImage*>& NumImages, struct FLinearColor& InColorAndOpacity);
	void Set5ParaColor(int32 NowParam, int32 FluctuationParam, TArray<class UImage*>& ParamNumImages, class USsPlayerWidget*& BarLeft, class USsPlayerWidget*& BarRight);
	class USsPlayerWidget* GetPartsResistanceSSPlayerItem(int32 InputPin);
	class UTextBlock* GetPartsTextObjectRightItem(int32 Param_Index);
	void SetFluctuationColor(TArray<class UImage*>& NumImages, class UImage*& FlagImage, class USsPlayerWidget*& SSPlayerPanel, int32 Num);
	void SetSlotData(class UImage*& In_IconImage, class UTextBlock*& In_Text, class USsPlayerWidget*& In_CostSSP, TArray<class UImage*>& In_CostNumImage, struct FUIStatusSlotItemData& In_SlotData);
	void SetAffinities(TArray<int32>& AfterAffinities, TArray<int32>& AffinitiesColor, int32 OpenFlag, int32 AffinitiesOpenFlag);
	void SetRemaining(int32 NumeraNum, int32 DenomNum);
	void SetFluctuation5Para(int32 AddStr, int32 AddVit, int32 AddMgi, int32 AddAgi, int32 AddLck, int32 OpenFlag);
	void SetFluctuationHpMp(int32 AddHp, int32 AddMp, int32 OpenFlag);
	void SetFluctuationExp(int32 AddExp, int32 OpenFlag);
	void Set5Para(int32 NowParam, int32 AddedParam, int32 Type, int32 ShowFlag);
	void SetResistancesBad(TArray<int32>& AfterResistances, int32 OpenFlag);
	void SetResistances(TArray<int32>& Resistances, TArray<int32>& UpResistances, int32 OpenFlag, int32 ResistancesOpeenFlag);
	void SetMp(int32 NowParam, int32 MaxParam, int32 AddedMp, int32 OpenFlag);
	void SetHp(int32 NowParam, int32 MaxParam, int32 AddedHp, int32 OpenFlag);
	void SetExp(int32 NowExp, int32 MaxExp, int32 AddedExp, int32 OpenFlag);
	void SetEssenceIcon(E_UI_STATUS_ESSENCE_ICON Essence, int32 OpenFlag);
	void SetName_Simple(int32 DevilID, int32 OpenFlag, bool IsDead);
	void SetName(int32 DevilID, int32 OpenFlag, bool IsDead);
	void SetExpHpMpBarLength(class USsPlayerWidget*& Param_SsPlayerMpBar, float Rate);
	void Test_SetRightSlotVisible();
	void SetStatusBar(TArray<int32>& Params_0, TArray<int32>& AddParams);
	void SetFlagPlusMinus(class UImage* Image, int32 Num);
	void SetSlash(class UImage* Image);
	void SetNum(int32 Number, TArray<class UImage*>& ImageList, bool ZeroVisible, int32* VisibleCnt);
	void SetLv(int32 Level, int32 In_UpLv, int32 OpenFlag);
	void BndEvt__SsPlayerSlotCursor_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayerSelect_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayerLv_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayerResistances_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayerFluctuationCursor_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayerBiography_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayerEncountArea_K2Node_ComponentBoundEvent_9_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayerAptitudePanel_K2Node_ComponentBoundEvent_11_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayerSelectSkill_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayerLevelUp_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayerNameplate_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void Private_UpdateRightSlotLast(E_UI_STATUS_SLOT SlotType);
	void BndEvt__SsPlayerParentSlot_0_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__WB_CharaStatus_ButtonS5_Right_0_K2Node_ComponentBoundEvent_5_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Right_0_K2Node_ComponentBoundEvent_13_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Right_1_K2Node_ComponentBoundEvent_14_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Right_1_K2Node_ComponentBoundEvent_15_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Right_2_K2Node_ComponentBoundEvent_16_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Right_2_K2Node_ComponentBoundEvent_17_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Right_3_K2Node_ComponentBoundEvent_18_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Right_3_K2Node_ComponentBoundEvent_19_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Right_4_K2Node_ComponentBoundEvent_20_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Right_4_K2Node_ComponentBoundEvent_21_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Right_5_K2Node_ComponentBoundEvent_22_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Right_5_K2Node_ComponentBoundEvent_23_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Right_6_K2Node_ComponentBoundEvent_24_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Right_6_K2Node_ComponentBoundEvent_25_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Right_7_K2Node_ComponentBoundEvent_26_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Right_7_K2Node_ComponentBoundEvent_27_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Right_8_K2Node_ComponentBoundEvent_28_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Right_8_K2Node_ComponentBoundEvent_29_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Right_9_K2Node_ComponentBoundEvent_30_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Right_9_K2Node_ComponentBoundEvent_31_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Right_10_K2Node_ComponentBoundEvent_32_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Right_10_K2Node_ComponentBoundEvent_33_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Right_11_K2Node_ComponentBoundEvent_34_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Right_11_K2Node_ComponentBoundEvent_35_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Right_12_K2Node_ComponentBoundEvent_36_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Right_12_K2Node_ComponentBoundEvent_37_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_0_K2Node_ComponentBoundEvent_38_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_1_K2Node_ComponentBoundEvent_39_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_2_K2Node_ComponentBoundEvent_40_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_3_K2Node_ComponentBoundEvent_41_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_4_K2Node_ComponentBoundEvent_42_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_5_K2Node_ComponentBoundEvent_43_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_6_K2Node_ComponentBoundEvent_44_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_7_K2Node_ComponentBoundEvent_45_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_8_K2Node_ComponentBoundEvent_46_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_9_K2Node_ComponentBoundEvent_47_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_10_K2Node_ComponentBoundEvent_48_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_11_K2Node_ComponentBoundEvent_49_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_0_K2Node_ComponentBoundEvent_50_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_1_K2Node_ComponentBoundEvent_51_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_2_K2Node_ComponentBoundEvent_52_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_3_K2Node_ComponentBoundEvent_53_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_4_K2Node_ComponentBoundEvent_54_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_5_K2Node_ComponentBoundEvent_55_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_6_K2Node_ComponentBoundEvent_56_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_7_K2Node_ComponentBoundEvent_57_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_8_K2Node_ComponentBoundEvent_58_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_9_K2Node_ComponentBoundEvent_59_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_10_K2Node_ComponentBoundEvent_60_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Parent_11_K2Node_ComponentBoundEvent_61_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Str_K2Node_ComponentBoundEvent_62_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Vit_K2Node_ComponentBoundEvent_63_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Mag_K2Node_ComponentBoundEvent_64_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Spd_K2Node_ComponentBoundEvent_65_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_Lck_K2Node_ComponentBoundEvent_66_ButtonSimpleEventS5__DelegateSignature();
	void BndEvt__WB_CharaStatus_ButtonS5_FluctionDown_K2Node_ComponentBoundEvent_67_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_FluctionUp_K2Node_ComponentBoundEvent_68_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_FaceBtnL_K2Node_ComponentBoundEvent_0_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_FaceBtnR_K2Node_ComponentBoundEvent_1_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_FaceBtnM2_K2Node_ComponentBoundEvent_71_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_FaceBtnM1_K2Node_ComponentBoundEvent_72_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_FaceBtnP1_K2Node_ComponentBoundEvent_73_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_FaceBtnP2_K2Node_ComponentBoundEvent_74_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Str_K2Node_ComponentBoundEvent_75_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Vit_K2Node_ComponentBoundEvent_76_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Mag_K2Node_ComponentBoundEvent_77_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Spd_K2Node_ComponentBoundEvent_78_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void BndEvt__WB_CharaStatus_ButtonS5_Lck_K2Node_ComponentBoundEvent_79_ButtonClickEventS5__DelegateSignature(const struct FVector2D& Pos, const struct FVector2D& UV);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void Private_MouseHoverGuard();
	void ExecuteUbergraph_WB_CharaStatus(int32 EntryPoint);
	void Disp_GardenResultFlashStart__DelegateSignature();
	void Disp_OnClickedFacePanel__DelegateSignature(int32 Move);
	void Disp_OnClickedFaceBtnLR__DelegateSignature(int32 Move);
	void Disp_OnHoveredFluctuationPanel__DelegateSignature(int32 Param_Index);
	void Disp_OnClickedFluctuationCursor__DelegateSignature(int32 Add);
	void Disp_OnHoveredParentSlot__DelegateSignature(int32 Param_Index);
	void Disp_OnClickedParentSlot__DelegateSignature(int32 Param_Index);
	void Disp_OnHoveredRightSlot__DelegateSignature(int32 Param_Index);
	void Disp_OnMovedParentScrollBarByMouse__DelegateSignature(int32 NewParam);
	void Disp_OnClickedRightSlot__DelegateSignature(int32 Param_Index);
	void Disp_OnMovedRightScrollBarByMouse__DelegateSignature(int32 NewOffset);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_CharaStatus_C">();
	}
	static class UWB_CharaStatus_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_CharaStatus_C>();
	}
};
static_assert(alignof(UWB_CharaStatus_C) == 0x000008, "Wrong alignment on UWB_CharaStatus_C");
static_assert(sizeof(UWB_CharaStatus_C) == 0x001520, "Wrong size on UWB_CharaStatus_C");
static_assert(offsetof(UWB_CharaStatus_C, UberGraphFrame) == 0x000260, "Member 'UWB_CharaStatus_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesFlag_0) == 0x000268, "Member 'UWB_CharaStatus_C::AffinitiesFlag_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesFlag_1) == 0x000270, "Member 'UWB_CharaStatus_C::AffinitiesFlag_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesFlag_2) == 0x000278, "Member 'UWB_CharaStatus_C::AffinitiesFlag_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesFlag_3) == 0x000280, "Member 'UWB_CharaStatus_C::AffinitiesFlag_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesFlag_4) == 0x000288, "Member 'UWB_CharaStatus_C::AffinitiesFlag_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesFlag_5) == 0x000290, "Member 'UWB_CharaStatus_C::AffinitiesFlag_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesFlag_6) == 0x000298, "Member 'UWB_CharaStatus_C::AffinitiesFlag_6' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesFlag_7) == 0x0002A0, "Member 'UWB_CharaStatus_C::AffinitiesFlag_7' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesFlag_8) == 0x0002A8, "Member 'UWB_CharaStatus_C::AffinitiesFlag_8' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesFlag_9) == 0x0002B0, "Member 'UWB_CharaStatus_C::AffinitiesFlag_9' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesFlag_10) == 0x0002B8, "Member 'UWB_CharaStatus_C::AffinitiesFlag_10' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesNum_0) == 0x0002C0, "Member 'UWB_CharaStatus_C::AffinitiesNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesNum_1) == 0x0002C8, "Member 'UWB_CharaStatus_C::AffinitiesNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesNum_2) == 0x0002D0, "Member 'UWB_CharaStatus_C::AffinitiesNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesNum_3) == 0x0002D8, "Member 'UWB_CharaStatus_C::AffinitiesNum_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesNum_4) == 0x0002E0, "Member 'UWB_CharaStatus_C::AffinitiesNum_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesNum_5) == 0x0002E8, "Member 'UWB_CharaStatus_C::AffinitiesNum_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesNum_6) == 0x0002F0, "Member 'UWB_CharaStatus_C::AffinitiesNum_6' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesNum_7) == 0x0002F8, "Member 'UWB_CharaStatus_C::AffinitiesNum_7' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesNum_8) == 0x000300, "Member 'UWB_CharaStatus_C::AffinitiesNum_8' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesNum_9) == 0x000308, "Member 'UWB_CharaStatus_C::AffinitiesNum_9' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AffinitiesNum_10) == 0x000310, "Member 'UWB_CharaStatus_C::AffinitiesNum_10' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_FaceBtnL) == 0x000318, "Member 'UWB_CharaStatus_C::ButtonS5_FaceBtnL' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_FaceBtnM1) == 0x000320, "Member 'UWB_CharaStatus_C::ButtonS5_FaceBtnM1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_FaceBtnM2) == 0x000328, "Member 'UWB_CharaStatus_C::ButtonS5_FaceBtnM2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_FaceBtnP1) == 0x000330, "Member 'UWB_CharaStatus_C::ButtonS5_FaceBtnP1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_FaceBtnP2) == 0x000338, "Member 'UWB_CharaStatus_C::ButtonS5_FaceBtnP2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_FaceBtnR) == 0x000340, "Member 'UWB_CharaStatus_C::ButtonS5_FaceBtnR' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_FluctionDown) == 0x000348, "Member 'UWB_CharaStatus_C::ButtonS5_FluctionDown' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_FluctionUp) == 0x000350, "Member 'UWB_CharaStatus_C::ButtonS5_FluctionUp' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Lck) == 0x000358, "Member 'UWB_CharaStatus_C::ButtonS5_Lck' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Mag) == 0x000360, "Member 'UWB_CharaStatus_C::ButtonS5_Mag' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Parent_0) == 0x000368, "Member 'UWB_CharaStatus_C::ButtonS5_Parent_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Parent_1) == 0x000370, "Member 'UWB_CharaStatus_C::ButtonS5_Parent_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Parent_2) == 0x000378, "Member 'UWB_CharaStatus_C::ButtonS5_Parent_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Parent_3) == 0x000380, "Member 'UWB_CharaStatus_C::ButtonS5_Parent_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Parent_4) == 0x000388, "Member 'UWB_CharaStatus_C::ButtonS5_Parent_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Parent_5) == 0x000390, "Member 'UWB_CharaStatus_C::ButtonS5_Parent_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Parent_6) == 0x000398, "Member 'UWB_CharaStatus_C::ButtonS5_Parent_6' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Parent_7) == 0x0003A0, "Member 'UWB_CharaStatus_C::ButtonS5_Parent_7' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Parent_8) == 0x0003A8, "Member 'UWB_CharaStatus_C::ButtonS5_Parent_8' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Parent_9) == 0x0003B0, "Member 'UWB_CharaStatus_C::ButtonS5_Parent_9' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Parent_10) == 0x0003B8, "Member 'UWB_CharaStatus_C::ButtonS5_Parent_10' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Parent_11) == 0x0003C0, "Member 'UWB_CharaStatus_C::ButtonS5_Parent_11' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Right_0) == 0x0003C8, "Member 'UWB_CharaStatus_C::ButtonS5_Right_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Right_1) == 0x0003D0, "Member 'UWB_CharaStatus_C::ButtonS5_Right_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Right_2) == 0x0003D8, "Member 'UWB_CharaStatus_C::ButtonS5_Right_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Right_3) == 0x0003E0, "Member 'UWB_CharaStatus_C::ButtonS5_Right_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Right_4) == 0x0003E8, "Member 'UWB_CharaStatus_C::ButtonS5_Right_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Right_5) == 0x0003F0, "Member 'UWB_CharaStatus_C::ButtonS5_Right_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Right_6) == 0x0003F8, "Member 'UWB_CharaStatus_C::ButtonS5_Right_6' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Right_7) == 0x000400, "Member 'UWB_CharaStatus_C::ButtonS5_Right_7' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Right_8) == 0x000408, "Member 'UWB_CharaStatus_C::ButtonS5_Right_8' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Right_9) == 0x000410, "Member 'UWB_CharaStatus_C::ButtonS5_Right_9' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Right_10) == 0x000418, "Member 'UWB_CharaStatus_C::ButtonS5_Right_10' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Right_11) == 0x000420, "Member 'UWB_CharaStatus_C::ButtonS5_Right_11' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Right_12) == 0x000428, "Member 'UWB_CharaStatus_C::ButtonS5_Right_12' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Spd) == 0x000430, "Member 'UWB_CharaStatus_C::ButtonS5_Spd' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Str) == 0x000438, "Member 'UWB_CharaStatus_C::ButtonS5_Str' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ButtonS5_Vit) == 0x000440, "Member 'UWB_CharaStatus_C::ButtonS5_Vit' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, CanvasBarLengthLck) == 0x000448, "Member 'UWB_CharaStatus_C::CanvasBarLengthLck' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, CanvasBarLengthMag) == 0x000450, "Member 'UWB_CharaStatus_C::CanvasBarLengthMag' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, CanvasBarLengthSpd) == 0x000458, "Member 'UWB_CharaStatus_C::CanvasBarLengthSpd' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, CanvasBarLengthStr) == 0x000460, "Member 'UWB_CharaStatus_C::CanvasBarLengthStr' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, CanvasBarLengthVit) == 0x000468, "Member 'UWB_CharaStatus_C::CanvasBarLengthVit' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ExpNum_0) == 0x000470, "Member 'UWB_CharaStatus_C::ExpNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ExpNum_1) == 0x000478, "Member 'UWB_CharaStatus_C::ExpNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ExpNum_2) == 0x000480, "Member 'UWB_CharaStatus_C::ExpNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ExpNum_3) == 0x000488, "Member 'UWB_CharaStatus_C::ExpNum_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ExpNum_4) == 0x000490, "Member 'UWB_CharaStatus_C::ExpNum_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ExpNum_5) == 0x000498, "Member 'UWB_CharaStatus_C::ExpNum_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ExpNum_6) == 0x0004A0, "Member 'UWB_CharaStatus_C::ExpNum_6' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ExpNum_7) == 0x0004A8, "Member 'UWB_CharaStatus_C::ExpNum_7' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ExpNum_8) == 0x0004B0, "Member 'UWB_CharaStatus_C::ExpNum_8' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FaceIcon_Center) == 0x0004B8, "Member 'UWB_CharaStatus_C::FaceIcon_Center' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FaceIcon_L1) == 0x0004C0, "Member 'UWB_CharaStatus_C::FaceIcon_L1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FaceIcon_L2) == 0x0004C8, "Member 'UWB_CharaStatus_C::FaceIcon_L2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FaceIcon_Margin) == 0x0004D0, "Member 'UWB_CharaStatus_C::FaceIcon_Margin' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FaceIcon_R1) == 0x0004D8, "Member 'UWB_CharaStatus_C::FaceIcon_R1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FaceIcon_R2) == 0x0004E0, "Member 'UWB_CharaStatus_C::FaceIcon_R2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationExpFlag) == 0x0004E8, "Member 'UWB_CharaStatus_C::FluctuationExpFlag' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationExpNum_0) == 0x0004F0, "Member 'UWB_CharaStatus_C::FluctuationExpNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationExpNum_1) == 0x0004F8, "Member 'UWB_CharaStatus_C::FluctuationExpNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationExpNum_2) == 0x000500, "Member 'UWB_CharaStatus_C::FluctuationExpNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationExpNum_3) == 0x000508, "Member 'UWB_CharaStatus_C::FluctuationExpNum_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationExpNum_4) == 0x000510, "Member 'UWB_CharaStatus_C::FluctuationExpNum_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationExpNum_5) == 0x000518, "Member 'UWB_CharaStatus_C::FluctuationExpNum_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationExpNum_6) == 0x000520, "Member 'UWB_CharaStatus_C::FluctuationExpNum_6' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationExpNum_7) == 0x000528, "Member 'UWB_CharaStatus_C::FluctuationExpNum_7' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationExpNum_8) == 0x000530, "Member 'UWB_CharaStatus_C::FluctuationExpNum_8' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationHpFlag) == 0x000538, "Member 'UWB_CharaStatus_C::FluctuationHpFlag' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationHpNum_0) == 0x000540, "Member 'UWB_CharaStatus_C::FluctuationHpNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationHpNum_1) == 0x000548, "Member 'UWB_CharaStatus_C::FluctuationHpNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationHpNum_2) == 0x000550, "Member 'UWB_CharaStatus_C::FluctuationHpNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationHpNum_3) == 0x000558, "Member 'UWB_CharaStatus_C::FluctuationHpNum_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationLckFlag) == 0x000560, "Member 'UWB_CharaStatus_C::FluctuationLckFlag' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationLckNum_0) == 0x000568, "Member 'UWB_CharaStatus_C::FluctuationLckNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationLckNum_1) == 0x000570, "Member 'UWB_CharaStatus_C::FluctuationLckNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationLckNum_2) == 0x000578, "Member 'UWB_CharaStatus_C::FluctuationLckNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationLckNum_3) == 0x000580, "Member 'UWB_CharaStatus_C::FluctuationLckNum_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationMagFlag) == 0x000588, "Member 'UWB_CharaStatus_C::FluctuationMagFlag' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationMagNum_0) == 0x000590, "Member 'UWB_CharaStatus_C::FluctuationMagNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationMagNum_1) == 0x000598, "Member 'UWB_CharaStatus_C::FluctuationMagNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationMagNum_2) == 0x0005A0, "Member 'UWB_CharaStatus_C::FluctuationMagNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationMagNum_3) == 0x0005A8, "Member 'UWB_CharaStatus_C::FluctuationMagNum_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationMpFlag) == 0x0005B0, "Member 'UWB_CharaStatus_C::FluctuationMpFlag' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationMpNum_0) == 0x0005B8, "Member 'UWB_CharaStatus_C::FluctuationMpNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationMpNum_1) == 0x0005C0, "Member 'UWB_CharaStatus_C::FluctuationMpNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationMpNum_2) == 0x0005C8, "Member 'UWB_CharaStatus_C::FluctuationMpNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationMpNum_3) == 0x0005D0, "Member 'UWB_CharaStatus_C::FluctuationMpNum_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationSpdFlag) == 0x0005D8, "Member 'UWB_CharaStatus_C::FluctuationSpdFlag' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationSpdNum_0) == 0x0005E0, "Member 'UWB_CharaStatus_C::FluctuationSpdNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationSpdNum_1) == 0x0005E8, "Member 'UWB_CharaStatus_C::FluctuationSpdNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationSpdNum_2) == 0x0005F0, "Member 'UWB_CharaStatus_C::FluctuationSpdNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationSpdNum_3) == 0x0005F8, "Member 'UWB_CharaStatus_C::FluctuationSpdNum_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationStrFlag) == 0x000600, "Member 'UWB_CharaStatus_C::FluctuationStrFlag' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationStrNum_0) == 0x000608, "Member 'UWB_CharaStatus_C::FluctuationStrNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationStrNum_1) == 0x000610, "Member 'UWB_CharaStatus_C::FluctuationStrNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationStrNum_2) == 0x000618, "Member 'UWB_CharaStatus_C::FluctuationStrNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationStrNum_3) == 0x000620, "Member 'UWB_CharaStatus_C::FluctuationStrNum_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationVitFlag) == 0x000628, "Member 'UWB_CharaStatus_C::FluctuationVitFlag' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationVitNum_0) == 0x000630, "Member 'UWB_CharaStatus_C::FluctuationVitNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationVitNum_1) == 0x000638, "Member 'UWB_CharaStatus_C::FluctuationVitNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationVitNum_2) == 0x000640, "Member 'UWB_CharaStatus_C::FluctuationVitNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationVitNum_3) == 0x000648, "Member 'UWB_CharaStatus_C::FluctuationVitNum_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, HPNum_0) == 0x000650, "Member 'UWB_CharaStatus_C::HPNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, HPNum_1) == 0x000658, "Member 'UWB_CharaStatus_C::HPNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, HPNum_2) == 0x000660, "Member 'UWB_CharaStatus_C::HPNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, HPNum_3) == 0x000668, "Member 'UWB_CharaStatus_C::HPNum_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, HPSlash) == 0x000670, "Member 'UWB_CharaStatus_C::HPSlash' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Image_50) == 0x000678, "Member 'UWB_CharaStatus_C::Image_50' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, InheritEndBtnIcon) == 0x000680, "Member 'UWB_CharaStatus_C::InheritEndBtnIcon' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, LckNum_0) == 0x000688, "Member 'UWB_CharaStatus_C::LckNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, LckNum_1) == 0x000690, "Member 'UWB_CharaStatus_C::LckNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, LckNum_2) == 0x000698, "Member 'UWB_CharaStatus_C::LckNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MagNum_0) == 0x0006A0, "Member 'UWB_CharaStatus_C::MagNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MagNum_1) == 0x0006A8, "Member 'UWB_CharaStatus_C::MagNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MagNum_2) == 0x0006B0, "Member 'UWB_CharaStatus_C::MagNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MaxHPNum_0) == 0x0006B8, "Member 'UWB_CharaStatus_C::MaxHPNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MaxHPNum_1) == 0x0006C0, "Member 'UWB_CharaStatus_C::MaxHPNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MaxHPNum_2) == 0x0006C8, "Member 'UWB_CharaStatus_C::MaxHPNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MaxHPNum_3) == 0x0006D0, "Member 'UWB_CharaStatus_C::MaxHPNum_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MaxMPNum_0) == 0x0006D8, "Member 'UWB_CharaStatus_C::MaxMPNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MaxMPNum_1) == 0x0006E0, "Member 'UWB_CharaStatus_C::MaxMPNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MaxMPNum_2) == 0x0006E8, "Member 'UWB_CharaStatus_C::MaxMPNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MaxMPNum_3) == 0x0006F0, "Member 'UWB_CharaStatus_C::MaxMPNum_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum0_0) == 0x0006F8, "Member 'UWB_CharaStatus_C::MpCostNum0_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum0_1) == 0x000700, "Member 'UWB_CharaStatus_C::MpCostNum0_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum0_2) == 0x000708, "Member 'UWB_CharaStatus_C::MpCostNum0_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum1_0) == 0x000710, "Member 'UWB_CharaStatus_C::MpCostNum1_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum1_1) == 0x000718, "Member 'UWB_CharaStatus_C::MpCostNum1_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum1_2) == 0x000720, "Member 'UWB_CharaStatus_C::MpCostNum1_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum10_0) == 0x000728, "Member 'UWB_CharaStatus_C::MpCostNum10_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum10_1) == 0x000730, "Member 'UWB_CharaStatus_C::MpCostNum10_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum10_2) == 0x000738, "Member 'UWB_CharaStatus_C::MpCostNum10_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum11_0) == 0x000740, "Member 'UWB_CharaStatus_C::MpCostNum11_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum11_1) == 0x000748, "Member 'UWB_CharaStatus_C::MpCostNum11_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum11_2) == 0x000750, "Member 'UWB_CharaStatus_C::MpCostNum11_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum12_0) == 0x000758, "Member 'UWB_CharaStatus_C::MpCostNum12_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum12_1) == 0x000760, "Member 'UWB_CharaStatus_C::MpCostNum12_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum12_2) == 0x000768, "Member 'UWB_CharaStatus_C::MpCostNum12_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum2_0) == 0x000770, "Member 'UWB_CharaStatus_C::MpCostNum2_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum2_1) == 0x000778, "Member 'UWB_CharaStatus_C::MpCostNum2_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum2_2) == 0x000780, "Member 'UWB_CharaStatus_C::MpCostNum2_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum3_0) == 0x000788, "Member 'UWB_CharaStatus_C::MpCostNum3_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum3_1) == 0x000790, "Member 'UWB_CharaStatus_C::MpCostNum3_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum3_2) == 0x000798, "Member 'UWB_CharaStatus_C::MpCostNum3_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum4_0) == 0x0007A0, "Member 'UWB_CharaStatus_C::MpCostNum4_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum4_1) == 0x0007A8, "Member 'UWB_CharaStatus_C::MpCostNum4_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum4_2) == 0x0007B0, "Member 'UWB_CharaStatus_C::MpCostNum4_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum5_0) == 0x0007B8, "Member 'UWB_CharaStatus_C::MpCostNum5_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum5_1) == 0x0007C0, "Member 'UWB_CharaStatus_C::MpCostNum5_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum5_2) == 0x0007C8, "Member 'UWB_CharaStatus_C::MpCostNum5_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum6_0) == 0x0007D0, "Member 'UWB_CharaStatus_C::MpCostNum6_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum6_1) == 0x0007D8, "Member 'UWB_CharaStatus_C::MpCostNum6_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum6_2) == 0x0007E0, "Member 'UWB_CharaStatus_C::MpCostNum6_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum7_0) == 0x0007E8, "Member 'UWB_CharaStatus_C::MpCostNum7_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum7_1) == 0x0007F0, "Member 'UWB_CharaStatus_C::MpCostNum7_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum7_2) == 0x0007F8, "Member 'UWB_CharaStatus_C::MpCostNum7_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum8_0) == 0x000800, "Member 'UWB_CharaStatus_C::MpCostNum8_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum8_1) == 0x000808, "Member 'UWB_CharaStatus_C::MpCostNum8_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum8_2) == 0x000810, "Member 'UWB_CharaStatus_C::MpCostNum8_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum9_0) == 0x000818, "Member 'UWB_CharaStatus_C::MpCostNum9_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum9_1) == 0x000820, "Member 'UWB_CharaStatus_C::MpCostNum9_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MpCostNum9_2) == 0x000828, "Member 'UWB_CharaStatus_C::MpCostNum9_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MPNum_0) == 0x000830, "Member 'UWB_CharaStatus_C::MPNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MPNum_1) == 0x000838, "Member 'UWB_CharaStatus_C::MPNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MPNum_2) == 0x000840, "Member 'UWB_CharaStatus_C::MPNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MPNum_3) == 0x000848, "Member 'UWB_CharaStatus_C::MPNum_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MPSlash) == 0x000850, "Member 'UWB_CharaStatus_C::MPSlash' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, NextSkillLvNum_0) == 0x000858, "Member 'UWB_CharaStatus_C::NextSkillLvNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, NextSkillLvNum_1) == 0x000860, "Member 'UWB_CharaStatus_C::NextSkillLvNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, NextSkillLvNum_2) == 0x000868, "Member 'UWB_CharaStatus_C::NextSkillLvNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentHoverCanvas) == 0x000870, "Member 'UWB_CharaStatus_C::ParentHoverCanvas' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum1_0) == 0x000878, "Member 'UWB_CharaStatus_C::ParentMpCostNum1_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum1_1) == 0x000880, "Member 'UWB_CharaStatus_C::ParentMpCostNum1_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum1_2) == 0x000888, "Member 'UWB_CharaStatus_C::ParentMpCostNum1_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum10_0) == 0x000890, "Member 'UWB_CharaStatus_C::ParentMpCostNum10_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum10_1) == 0x000898, "Member 'UWB_CharaStatus_C::ParentMpCostNum10_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum10_2) == 0x0008A0, "Member 'UWB_CharaStatus_C::ParentMpCostNum10_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum11_0) == 0x0008A8, "Member 'UWB_CharaStatus_C::ParentMpCostNum11_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum11_1) == 0x0008B0, "Member 'UWB_CharaStatus_C::ParentMpCostNum11_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum11_2) == 0x0008B8, "Member 'UWB_CharaStatus_C::ParentMpCostNum11_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum2_0) == 0x0008C0, "Member 'UWB_CharaStatus_C::ParentMpCostNum2_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum2_1) == 0x0008C8, "Member 'UWB_CharaStatus_C::ParentMpCostNum2_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum2_2) == 0x0008D0, "Member 'UWB_CharaStatus_C::ParentMpCostNum2_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum3_0) == 0x0008D8, "Member 'UWB_CharaStatus_C::ParentMpCostNum3_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum3_1) == 0x0008E0, "Member 'UWB_CharaStatus_C::ParentMpCostNum3_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum3_2) == 0x0008E8, "Member 'UWB_CharaStatus_C::ParentMpCostNum3_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum4_0) == 0x0008F0, "Member 'UWB_CharaStatus_C::ParentMpCostNum4_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum4_1) == 0x0008F8, "Member 'UWB_CharaStatus_C::ParentMpCostNum4_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum4_2) == 0x000900, "Member 'UWB_CharaStatus_C::ParentMpCostNum4_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum5_0) == 0x000908, "Member 'UWB_CharaStatus_C::ParentMpCostNum5_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum5_1) == 0x000910, "Member 'UWB_CharaStatus_C::ParentMpCostNum5_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum5_2) == 0x000918, "Member 'UWB_CharaStatus_C::ParentMpCostNum5_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum6_0) == 0x000920, "Member 'UWB_CharaStatus_C::ParentMpCostNum6_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum6_1) == 0x000928, "Member 'UWB_CharaStatus_C::ParentMpCostNum6_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum6_2) == 0x000930, "Member 'UWB_CharaStatus_C::ParentMpCostNum6_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum7_0) == 0x000938, "Member 'UWB_CharaStatus_C::ParentMpCostNum7_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum7_1) == 0x000940, "Member 'UWB_CharaStatus_C::ParentMpCostNum7_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum7_2) == 0x000948, "Member 'UWB_CharaStatus_C::ParentMpCostNum7_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum8_0) == 0x000950, "Member 'UWB_CharaStatus_C::ParentMpCostNum8_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum8_1) == 0x000958, "Member 'UWB_CharaStatus_C::ParentMpCostNum8_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum8_2) == 0x000960, "Member 'UWB_CharaStatus_C::ParentMpCostNum8_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum9_0) == 0x000968, "Member 'UWB_CharaStatus_C::ParentMpCostNum9_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum9_1) == 0x000970, "Member 'UWB_CharaStatus_C::ParentMpCostNum9_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNum9_2) == 0x000978, "Member 'UWB_CharaStatus_C::ParentMpCostNum9_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentSlotIcon_1) == 0x000980, "Member 'UWB_CharaStatus_C::ParentSlotIcon_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentSlotIcon_2) == 0x000988, "Member 'UWB_CharaStatus_C::ParentSlotIcon_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentSlotIcon_3) == 0x000990, "Member 'UWB_CharaStatus_C::ParentSlotIcon_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentSlotIcon_4) == 0x000998, "Member 'UWB_CharaStatus_C::ParentSlotIcon_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentSlotIcon_5) == 0x0009A0, "Member 'UWB_CharaStatus_C::ParentSlotIcon_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentSlotIcon_6) == 0x0009A8, "Member 'UWB_CharaStatus_C::ParentSlotIcon_6' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentSlotIcon_7) == 0x0009B0, "Member 'UWB_CharaStatus_C::ParentSlotIcon_7' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentSlotIcon_8) == 0x0009B8, "Member 'UWB_CharaStatus_C::ParentSlotIcon_8' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentSlotIcon_9) == 0x0009C0, "Member 'UWB_CharaStatus_C::ParentSlotIcon_9' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentSlotIcon_10) == 0x0009C8, "Member 'UWB_CharaStatus_C::ParentSlotIcon_10' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentSlotIcon_11) == 0x0009D0, "Member 'UWB_CharaStatus_C::ParentSlotIcon_11' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, PlayerLvNum_0) == 0x0009D8, "Member 'UWB_CharaStatus_C::PlayerLvNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, PlayerLvNum_1) == 0x0009E0, "Member 'UWB_CharaStatus_C::PlayerLvNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, PlayerLvNum_2) == 0x0009E8, "Member 'UWB_CharaStatus_C::PlayerLvNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RemainingDenominatorNum_0) == 0x0009F0, "Member 'UWB_CharaStatus_C::RemainingDenominatorNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RemainingDenominatorNum_1) == 0x0009F8, "Member 'UWB_CharaStatus_C::RemainingDenominatorNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RemainingDenominatorNum_2) == 0x000A00, "Member 'UWB_CharaStatus_C::RemainingDenominatorNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RemainingDenominatorNum_3) == 0x000A08, "Member 'UWB_CharaStatus_C::RemainingDenominatorNum_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RemainingNumeratorNum_0) == 0x000A10, "Member 'UWB_CharaStatus_C::RemainingNumeratorNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RemainingNumeratorNum_1) == 0x000A18, "Member 'UWB_CharaStatus_C::RemainingNumeratorNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RemainingNumeratorNum_2) == 0x000A20, "Member 'UWB_CharaStatus_C::RemainingNumeratorNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RemainingNumeratorNum_3) == 0x000A28, "Member 'UWB_CharaStatus_C::RemainingNumeratorNum_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RemainingSlash) == 0x000A30, "Member 'UWB_CharaStatus_C::RemainingSlash' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ResistancesBadCanvas) == 0x000A38, "Member 'UWB_CharaStatus_C::ResistancesBadCanvas' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ResistancesBadTextCanvas) == 0x000A40, "Member 'UWB_CharaStatus_C::ResistancesBadTextCanvas' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightHoverCanvas) == 0x000A48, "Member 'UWB_CharaStatus_C::RightHoverCanvas' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightSlotIcon_0) == 0x000A50, "Member 'UWB_CharaStatus_C::RightSlotIcon_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightSlotIcon_1) == 0x000A58, "Member 'UWB_CharaStatus_C::RightSlotIcon_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightSlotIcon_2) == 0x000A60, "Member 'UWB_CharaStatus_C::RightSlotIcon_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightSlotIcon_3) == 0x000A68, "Member 'UWB_CharaStatus_C::RightSlotIcon_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightSlotIcon_4) == 0x000A70, "Member 'UWB_CharaStatus_C::RightSlotIcon_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightSlotIcon_5) == 0x000A78, "Member 'UWB_CharaStatus_C::RightSlotIcon_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightSlotIcon_6) == 0x000A80, "Member 'UWB_CharaStatus_C::RightSlotIcon_6' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightSlotIcon_7) == 0x000A88, "Member 'UWB_CharaStatus_C::RightSlotIcon_7' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightSlotIcon_8) == 0x000A90, "Member 'UWB_CharaStatus_C::RightSlotIcon_8' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightSlotIcon_9) == 0x000A98, "Member 'UWB_CharaStatus_C::RightSlotIcon_9' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightSlotIcon_10) == 0x000AA0, "Member 'UWB_CharaStatus_C::RightSlotIcon_10' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightSlotIcon_11) == 0x000AA8, "Member 'UWB_CharaStatus_C::RightSlotIcon_11' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightSlotIcon_12) == 0x000AB0, "Member 'UWB_CharaStatus_C::RightSlotIcon_12' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SpdNum_0) == 0x000AB8, "Member 'UWB_CharaStatus_C::SpdNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SpdNum_1) == 0x000AC0, "Member 'UWB_CharaStatus_C::SpdNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SpdNum_2) == 0x000AC8, "Member 'UWB_CharaStatus_C::SpdNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerAptitudePanel) == 0x000AD0, "Member 'UWB_CharaStatus_C::SsPlayerAptitudePanel' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerBiography) == 0x000AD8, "Member 'UWB_CharaStatus_C::SsPlayerBiography' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerBiographyQuestion) == 0x000AE0, "Member 'UWB_CharaStatus_C::SsPlayerBiographyQuestion' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerCharaSelectCursor) == 0x000AE8, "Member 'UWB_CharaStatus_C::SsPlayerCharaSelectCursor' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerConditionHpMp) == 0x000AF0, "Member 'UWB_CharaStatus_C::SsPlayerConditionHpMp' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerDevilIcon) == 0x000AF8, "Member 'UWB_CharaStatus_C::SsPlayerDevilIcon' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerEncountArea) == 0x000B00, "Member 'UWB_CharaStatus_C::SsPlayerEncountArea' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerEssenceIcon) == 0x000B08, "Member 'UWB_CharaStatus_C::SsPlayerEssenceIcon' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerExpBar) == 0x000B10, "Member 'UWB_CharaStatus_C::SsPlayerExpBar' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerFluctuationCursor) == 0x000B18, "Member 'UWB_CharaStatus_C::SsPlayerFluctuationCursor' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerFluctuationExp) == 0x000B20, "Member 'UWB_CharaStatus_C::SsPlayerFluctuationExp' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerFluctuationHp) == 0x000B28, "Member 'UWB_CharaStatus_C::SsPlayerFluctuationHp' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerFluctuationLck) == 0x000B30, "Member 'UWB_CharaStatus_C::SsPlayerFluctuationLck' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerFluctuationMag) == 0x000B38, "Member 'UWB_CharaStatus_C::SsPlayerFluctuationMag' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerFluctuationMp) == 0x000B40, "Member 'UWB_CharaStatus_C::SsPlayerFluctuationMp' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerFluctuationSpd) == 0x000B48, "Member 'UWB_CharaStatus_C::SsPlayerFluctuationSpd' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerFluctuationStr) == 0x000B50, "Member 'UWB_CharaStatus_C::SsPlayerFluctuationStr' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerFluctuationVit) == 0x000B58, "Member 'UWB_CharaStatus_C::SsPlayerFluctuationVit' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerHpBar) == 0x000B60, "Member 'UWB_CharaStatus_C::SsPlayerHpBar' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerLevelUp) == 0x000B68, "Member 'UWB_CharaStatus_C::SsPlayerLevelUp' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerLv) == 0x000B70, "Member 'UWB_CharaStatus_C::SsPlayerLv' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerLvGlimmer) == 0x000B78, "Member 'UWB_CharaStatus_C::SsPlayerLvGlimmer' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerMpBar) == 0x000B80, "Member 'UWB_CharaStatus_C::SsPlayerMpBar' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerNameplate) == 0x000B88, "Member 'UWB_CharaStatus_C::SsPlayerNameplate' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerNextLv) == 0x000B90, "Member 'UWB_CharaStatus_C::SsPlayerNextLv' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerNextSkillsLv) == 0x000B98, "Member 'UWB_CharaStatus_C::SsPlayerNextSkillsLv' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParamBarLck) == 0x000BA0, "Member 'UWB_CharaStatus_C::SsPlayerParamBarLck' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParamBarLckB) == 0x000BA8, "Member 'UWB_CharaStatus_C::SsPlayerParamBarLckB' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParamBarMag) == 0x000BB0, "Member 'UWB_CharaStatus_C::SsPlayerParamBarMag' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParamBarMagB) == 0x000BB8, "Member 'UWB_CharaStatus_C::SsPlayerParamBarMagB' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParamBarSpd) == 0x000BC0, "Member 'UWB_CharaStatus_C::SsPlayerParamBarSpd' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParamBarSpdB) == 0x000BC8, "Member 'UWB_CharaStatus_C::SsPlayerParamBarSpdB' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParamBarStr) == 0x000BD0, "Member 'UWB_CharaStatus_C::SsPlayerParamBarStr' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParamBarStrB) == 0x000BD8, "Member 'UWB_CharaStatus_C::SsPlayerParamBarStrB' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParamBarVit) == 0x000BE0, "Member 'UWB_CharaStatus_C::SsPlayerParamBarVit' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParamBarVitB) == 0x000BE8, "Member 'UWB_CharaStatus_C::SsPlayerParamBarVitB' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentScrollBar) == 0x000BF0, "Member 'UWB_CharaStatus_C::SsPlayerParentScrollBar' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlot_0) == 0x000BF8, "Member 'UWB_CharaStatus_C::SsPlayerParentSlot_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlot_1) == 0x000C00, "Member 'UWB_CharaStatus_C::SsPlayerParentSlot_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlot_2) == 0x000C08, "Member 'UWB_CharaStatus_C::SsPlayerParentSlot_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlot_3) == 0x000C10, "Member 'UWB_CharaStatus_C::SsPlayerParentSlot_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlot_4) == 0x000C18, "Member 'UWB_CharaStatus_C::SsPlayerParentSlot_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlot_5) == 0x000C20, "Member 'UWB_CharaStatus_C::SsPlayerParentSlot_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlot_6) == 0x000C28, "Member 'UWB_CharaStatus_C::SsPlayerParentSlot_6' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlot_7) == 0x000C30, "Member 'UWB_CharaStatus_C::SsPlayerParentSlot_7' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlot_8) == 0x000C38, "Member 'UWB_CharaStatus_C::SsPlayerParentSlot_8' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlot_9) == 0x000C40, "Member 'UWB_CharaStatus_C::SsPlayerParentSlot_9' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlot_10) == 0x000C48, "Member 'UWB_CharaStatus_C::SsPlayerParentSlot_10' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlot_11) == 0x000C50, "Member 'UWB_CharaStatus_C::SsPlayerParentSlot_11' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlot_12) == 0x000C58, "Member 'UWB_CharaStatus_C::SsPlayerParentSlot_12' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlotCost_1) == 0x000C60, "Member 'UWB_CharaStatus_C::SsPlayerParentSlotCost_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlotCost_2) == 0x000C68, "Member 'UWB_CharaStatus_C::SsPlayerParentSlotCost_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlotCost_3) == 0x000C70, "Member 'UWB_CharaStatus_C::SsPlayerParentSlotCost_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlotCost_4) == 0x000C78, "Member 'UWB_CharaStatus_C::SsPlayerParentSlotCost_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlotCost_5) == 0x000C80, "Member 'UWB_CharaStatus_C::SsPlayerParentSlotCost_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlotCost_6) == 0x000C88, "Member 'UWB_CharaStatus_C::SsPlayerParentSlotCost_6' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlotCost_7) == 0x000C90, "Member 'UWB_CharaStatus_C::SsPlayerParentSlotCost_7' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlotCost_8) == 0x000C98, "Member 'UWB_CharaStatus_C::SsPlayerParentSlotCost_8' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlotCost_9) == 0x000CA0, "Member 'UWB_CharaStatus_C::SsPlayerParentSlotCost_9' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlotCost_10) == 0x000CA8, "Member 'UWB_CharaStatus_C::SsPlayerParentSlotCost_10' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerParentSlotCost_11) == 0x000CB0, "Member 'UWB_CharaStatus_C::SsPlayerParentSlotCost_11' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerPosBG) == 0x000CB8, "Member 'UWB_CharaStatus_C::SsPlayerPosBG' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerProductIcon) == 0x000CC0, "Member 'UWB_CharaStatus_C::SsPlayerProductIcon' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRemainingPanel) == 0x000CC8, "Member 'UWB_CharaStatus_C::SsPlayerRemainingPanel' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerResistanceElectric) == 0x000CD0, "Member 'UWB_CharaStatus_C::SsPlayerResistanceElectric' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerResistanceFlame) == 0x000CD8, "Member 'UWB_CharaStatus_C::SsPlayerResistanceFlame' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerResistanceHama) == 0x000CE0, "Member 'UWB_CharaStatus_C::SsPlayerResistanceHama' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerResistanceIce) == 0x000CE8, "Member 'UWB_CharaStatus_C::SsPlayerResistanceIce' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerResistanceImpact) == 0x000CF0, "Member 'UWB_CharaStatus_C::SsPlayerResistanceImpact' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerResistanceJyusatu) == 0x000CF8, "Member 'UWB_CharaStatus_C::SsPlayerResistanceJyusatu' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerResistancePhysics) == 0x000D00, "Member 'UWB_CharaStatus_C::SsPlayerResistancePhysics' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerResistances) == 0x000D08, "Member 'UWB_CharaStatus_C::SsPlayerResistances' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerResistancesBad) == 0x000D10, "Member 'UWB_CharaStatus_C::SsPlayerResistancesBad' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlot_0) == 0x000D18, "Member 'UWB_CharaStatus_C::SsPlayerRightSlot_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlot_1) == 0x000D20, "Member 'UWB_CharaStatus_C::SsPlayerRightSlot_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlot_2) == 0x000D28, "Member 'UWB_CharaStatus_C::SsPlayerRightSlot_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlot_3) == 0x000D30, "Member 'UWB_CharaStatus_C::SsPlayerRightSlot_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlot_4) == 0x000D38, "Member 'UWB_CharaStatus_C::SsPlayerRightSlot_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlot_5) == 0x000D40, "Member 'UWB_CharaStatus_C::SsPlayerRightSlot_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlot_6) == 0x000D48, "Member 'UWB_CharaStatus_C::SsPlayerRightSlot_6' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlot_7) == 0x000D50, "Member 'UWB_CharaStatus_C::SsPlayerRightSlot_7' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlot_8) == 0x000D58, "Member 'UWB_CharaStatus_C::SsPlayerRightSlot_8' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlot_9) == 0x000D60, "Member 'UWB_CharaStatus_C::SsPlayerRightSlot_9' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlot_10) == 0x000D68, "Member 'UWB_CharaStatus_C::SsPlayerRightSlot_10' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlot_11) == 0x000D70, "Member 'UWB_CharaStatus_C::SsPlayerRightSlot_11' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlot_12) == 0x000D78, "Member 'UWB_CharaStatus_C::SsPlayerRightSlot_12' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlotCost_0) == 0x000D80, "Member 'UWB_CharaStatus_C::SsPlayerRightSlotCost_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlotCost_1) == 0x000D88, "Member 'UWB_CharaStatus_C::SsPlayerRightSlotCost_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlotCost_2) == 0x000D90, "Member 'UWB_CharaStatus_C::SsPlayerRightSlotCost_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlotCost_3) == 0x000D98, "Member 'UWB_CharaStatus_C::SsPlayerRightSlotCost_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlotCost_4) == 0x000DA0, "Member 'UWB_CharaStatus_C::SsPlayerRightSlotCost_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlotCost_5) == 0x000DA8, "Member 'UWB_CharaStatus_C::SsPlayerRightSlotCost_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlotCost_6) == 0x000DB0, "Member 'UWB_CharaStatus_C::SsPlayerRightSlotCost_6' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlotCost_7) == 0x000DB8, "Member 'UWB_CharaStatus_C::SsPlayerRightSlotCost_7' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlotCost_8) == 0x000DC0, "Member 'UWB_CharaStatus_C::SsPlayerRightSlotCost_8' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlotCost_9) == 0x000DC8, "Member 'UWB_CharaStatus_C::SsPlayerRightSlotCost_9' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlotCost_10) == 0x000DD0, "Member 'UWB_CharaStatus_C::SsPlayerRightSlotCost_10' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlotCost_11) == 0x000DD8, "Member 'UWB_CharaStatus_C::SsPlayerRightSlotCost_11' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlotCost_12) == 0x000DE0, "Member 'UWB_CharaStatus_C::SsPlayerRightSlotCost_12' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlotFlash_0) == 0x000DE8, "Member 'UWB_CharaStatus_C::SsPlayerRightSlotFlash_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlotFlash_1) == 0x000DF0, "Member 'UWB_CharaStatus_C::SsPlayerRightSlotFlash_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerRightSlotFlash_2) == 0x000DF8, "Member 'UWB_CharaStatus_C::SsPlayerRightSlotFlash_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerScrollBar) == 0x000E00, "Member 'UWB_CharaStatus_C::SsPlayerScrollBar' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerSelect) == 0x000E08, "Member 'UWB_CharaStatus_C::SsPlayerSelect' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerSelect_L) == 0x000E10, "Member 'UWB_CharaStatus_C::SsPlayerSelect_L' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerSelect_R) == 0x000E18, "Member 'UWB_CharaStatus_C::SsPlayerSelect_R' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerSelectOrder) == 0x000E20, "Member 'UWB_CharaStatus_C::SsPlayerSelectOrder' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerSelectSkill) == 0x000E28, "Member 'UWB_CharaStatus_C::SsPlayerSelectSkill' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerSlotCursor) == 0x000E30, "Member 'UWB_CharaStatus_C::SsPlayerSlotCursor' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerStatusCursor) == 0x000E38, "Member 'UWB_CharaStatus_C::SsPlayerStatusCursor' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerStatusParameter) == 0x000E40, "Member 'UWB_CharaStatus_C::SsPlayerStatusParameter' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerSwapCursor) == 0x000E48, "Member 'UWB_CharaStatus_C::SsPlayerSwapCursor' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerSwapHold) == 0x000E50, "Member 'UWB_CharaStatus_C::SsPlayerSwapHold' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SsPlayerTytle) == 0x000E58, "Member 'UWB_CharaStatus_C::SsPlayerTytle' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, StrNum_0) == 0x000E60, "Member 'UWB_CharaStatus_C::StrNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, StrNum_1) == 0x000E68, "Member 'UWB_CharaStatus_C::StrNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, StrNum_2) == 0x000E70, "Member 'UWB_CharaStatus_C::StrNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_0) == 0x000E78, "Member 'UWB_CharaStatus_C::TextBiography_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_1) == 0x000E80, "Member 'UWB_CharaStatus_C::TextBiography_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_2) == 0x000E88, "Member 'UWB_CharaStatus_C::TextBiography_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_3) == 0x000E90, "Member 'UWB_CharaStatus_C::TextBiography_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_4) == 0x000E98, "Member 'UWB_CharaStatus_C::TextBiography_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_5) == 0x000EA0, "Member 'UWB_CharaStatus_C::TextBiography_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_6) == 0x000EA8, "Member 'UWB_CharaStatus_C::TextBiography_6' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_7) == 0x000EB0, "Member 'UWB_CharaStatus_C::TextBiography_7' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_8) == 0x000EB8, "Member 'UWB_CharaStatus_C::TextBiography_8' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_9) == 0x000EC0, "Member 'UWB_CharaStatus_C::TextBiography_9' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_10) == 0x000EC8, "Member 'UWB_CharaStatus_C::TextBiography_10' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_11) == 0x000ED0, "Member 'UWB_CharaStatus_C::TextBiography_11' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_12) == 0x000ED8, "Member 'UWB_CharaStatus_C::TextBiography_12' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_13) == 0x000EE0, "Member 'UWB_CharaStatus_C::TextBiography_13' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_14) == 0x000EE8, "Member 'UWB_CharaStatus_C::TextBiography_14' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_15) == 0x000EF0, "Member 'UWB_CharaStatus_C::TextBiography_15' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_16) == 0x000EF8, "Member 'UWB_CharaStatus_C::TextBiography_16' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBiography_17) == 0x000F00, "Member 'UWB_CharaStatus_C::TextBiography_17' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBlock_CharaSelect) == 0x000F08, "Member 'UWB_CharaStatus_C::TextBlock_CharaSelect' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBlock_Name) == 0x000F10, "Member 'UWB_CharaStatus_C::TextBlock_Name' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextBlock_Race) == 0x000F18, "Member 'UWB_CharaStatus_C::TextBlock_Race' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextEncountArea_0) == 0x000F20, "Member 'UWB_CharaStatus_C::TextEncountArea_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextEncountArea_1) == 0x000F28, "Member 'UWB_CharaStatus_C::TextEncountArea_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextParentSlot_1) == 0x000F30, "Member 'UWB_CharaStatus_C::TextParentSlot_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextParentSlot_2) == 0x000F38, "Member 'UWB_CharaStatus_C::TextParentSlot_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextParentSlot_3) == 0x000F40, "Member 'UWB_CharaStatus_C::TextParentSlot_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextParentSlot_4) == 0x000F48, "Member 'UWB_CharaStatus_C::TextParentSlot_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextParentSlot_5) == 0x000F50, "Member 'UWB_CharaStatus_C::TextParentSlot_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextParentSlot_6) == 0x000F58, "Member 'UWB_CharaStatus_C::TextParentSlot_6' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextParentSlot_7) == 0x000F60, "Member 'UWB_CharaStatus_C::TextParentSlot_7' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextParentSlot_8) == 0x000F68, "Member 'UWB_CharaStatus_C::TextParentSlot_8' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextParentSlot_9) == 0x000F70, "Member 'UWB_CharaStatus_C::TextParentSlot_9' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextParentSlot_10) == 0x000F78, "Member 'UWB_CharaStatus_C::TextParentSlot_10' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextParentSlot_11) == 0x000F80, "Member 'UWB_CharaStatus_C::TextParentSlot_11' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextParentSlot_12) == 0x000F88, "Member 'UWB_CharaStatus_C::TextParentSlot_12' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextRightSlot_0) == 0x000F90, "Member 'UWB_CharaStatus_C::TextRightSlot_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextRightSlot_1) == 0x000F98, "Member 'UWB_CharaStatus_C::TextRightSlot_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextRightSlot_2) == 0x000FA0, "Member 'UWB_CharaStatus_C::TextRightSlot_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextRightSlot_3) == 0x000FA8, "Member 'UWB_CharaStatus_C::TextRightSlot_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextRightSlot_4) == 0x000FB0, "Member 'UWB_CharaStatus_C::TextRightSlot_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextRightSlot_5) == 0x000FB8, "Member 'UWB_CharaStatus_C::TextRightSlot_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextRightSlot_6) == 0x000FC0, "Member 'UWB_CharaStatus_C::TextRightSlot_6' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextRightSlot_7) == 0x000FC8, "Member 'UWB_CharaStatus_C::TextRightSlot_7' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextRightSlot_8) == 0x000FD0, "Member 'UWB_CharaStatus_C::TextRightSlot_8' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextRightSlot_9) == 0x000FD8, "Member 'UWB_CharaStatus_C::TextRightSlot_9' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextRightSlot_10) == 0x000FE0, "Member 'UWB_CharaStatus_C::TextRightSlot_10' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextRightSlot_11) == 0x000FE8, "Member 'UWB_CharaStatus_C::TextRightSlot_11' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, TextRightSlot_12) == 0x000FF0, "Member 'UWB_CharaStatus_C::TextRightSlot_12' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, VitNum_0) == 0x000FF8, "Member 'UWB_CharaStatus_C::VitNum_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, VitNum_1) == 0x001000, "Member 'UWB_CharaStatus_C::VitNum_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, VitNum_2) == 0x001008, "Member 'UWB_CharaStatus_C::VitNum_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, WB_BtnIcon_L) == 0x001010, "Member 'UWB_CharaStatus_C::WB_BtnIcon_L' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, WB_BtnIcon_R) == 0x001018, "Member 'UWB_CharaStatus_C::WB_BtnIcon_R' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, WB_ParentScrollBar) == 0x001020, "Member 'UWB_CharaStatus_C::WB_ParentScrollBar' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, WB_ScrollBar) == 0x001028, "Member 'UWB_CharaStatus_C::WB_ScrollBar' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ResistanceStates) == 0x001030, "Member 'UWB_CharaStatus_C::ResistanceStates' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ExpNums) == 0x001040, "Member 'UWB_CharaStatus_C::ExpNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, HPNums) == 0x001050, "Member 'UWB_CharaStatus_C::HPNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MaxHPNums) == 0x001060, "Member 'UWB_CharaStatus_C::MaxHPNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MPNums) == 0x001070, "Member 'UWB_CharaStatus_C::MPNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MaxMPNums) == 0x001080, "Member 'UWB_CharaStatus_C::MaxMPNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, StrNums) == 0x001090, "Member 'UWB_CharaStatus_C::StrNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, VitNums) == 0x0010A0, "Member 'UWB_CharaStatus_C::VitNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, MagNums) == 0x0010B0, "Member 'UWB_CharaStatus_C::MagNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SpdNums) == 0x0010C0, "Member 'UWB_CharaStatus_C::SpdNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, LckNums) == 0x0010D0, "Member 'UWB_CharaStatus_C::LckNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RemainingDenomNums) == 0x0010E0, "Member 'UWB_CharaStatus_C::RemainingDenomNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RemainingNumerNums) == 0x0010F0, "Member 'UWB_CharaStatus_C::RemainingNumerNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationExpNums) == 0x001100, "Member 'UWB_CharaStatus_C::FluctuationExpNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationHpNums) == 0x001110, "Member 'UWB_CharaStatus_C::FluctuationHpNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationMpNums) == 0x001120, "Member 'UWB_CharaStatus_C::FluctuationMpNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationStrNums) == 0x001130, "Member 'UWB_CharaStatus_C::FluctuationStrNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationVitNums) == 0x001140, "Member 'UWB_CharaStatus_C::FluctuationVitNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationMagNums) == 0x001150, "Member 'UWB_CharaStatus_C::FluctuationMagNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationSpdNums) == 0x001160, "Member 'UWB_CharaStatus_C::FluctuationSpdNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, FluctuationLckNums) == 0x001170, "Member 'UWB_CharaStatus_C::FluctuationLckNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ConstRightItemDistance) == 0x001180, "Member 'UWB_CharaStatus_C::ConstRightItemDistance' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ConstSkillSlot) == 0x001184, "Member 'UWB_CharaStatus_C::ConstSkillSlot' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightSlotSkillCostNums) == 0x001190, "Member 'UWB_CharaStatus_C::RightSlotSkillCostNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AnimCurrent_RightSkillSlot) == 0x0011A0, "Member 'UWB_CharaStatus_C::AnimCurrent_RightSkillSlot' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightMpCostNums_0) == 0x0011A8, "Member 'UWB_CharaStatus_C::RightMpCostNums_0' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightMpCostNums_1) == 0x0011B8, "Member 'UWB_CharaStatus_C::RightMpCostNums_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightMpCostNums_2) == 0x0011C8, "Member 'UWB_CharaStatus_C::RightMpCostNums_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightMpCostNums_3) == 0x0011D8, "Member 'UWB_CharaStatus_C::RightMpCostNums_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightMpCostNums_4) == 0x0011E8, "Member 'UWB_CharaStatus_C::RightMpCostNums_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightMpCostNums_5) == 0x0011F8, "Member 'UWB_CharaStatus_C::RightMpCostNums_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightMpCostNums_6) == 0x001208, "Member 'UWB_CharaStatus_C::RightMpCostNums_6' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightMpCostNums_7) == 0x001218, "Member 'UWB_CharaStatus_C::RightMpCostNums_7' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightMpCostNums_8) == 0x001228, "Member 'UWB_CharaStatus_C::RightMpCostNums_8' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightMpCostNums_9) == 0x001238, "Member 'UWB_CharaStatus_C::RightMpCostNums_9' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightMpCostNums_10) == 0x001248, "Member 'UWB_CharaStatus_C::RightMpCostNums_10' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightMpCostNums_11) == 0x001258, "Member 'UWB_CharaStatus_C::RightMpCostNums_11' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, RightMpCostNums_12) == 0x001268, "Member 'UWB_CharaStatus_C::RightMpCostNums_12' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, PlayerLvNums) == 0x001278, "Member 'UWB_CharaStatus_C::PlayerLvNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, NextSkillLvNums) == 0x001288, "Member 'UWB_CharaStatus_C::NextSkillLvNums' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_RightSlotDeltaSeconds) == 0x001298, "Member 'UWB_CharaStatus_C::M_RightSlotDeltaSeconds' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SkillSlotCurrent) == 0x00129C, "Member 'UWB_CharaStatus_C::SkillSlotCurrent' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ConstStatusFullOpenFlag) == 0x0012A0, "Member 'UWB_CharaStatus_C::ConstStatusFullOpenFlag' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_ConditionNameAsset) == 0x0012A8, "Member 'UWB_CharaStatus_C::M_ConditionNameAsset' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_UIType) == 0x0012B0, "Member 'UWB_CharaStatus_C::M_UIType' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_HelpWindow) == 0x0012B8, "Member 'UWB_CharaStatus_C::M_HelpWindow' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_UIStatusCtrlObj) == 0x0012C8, "Member 'UWB_CharaStatus_C::M_UIStatusCtrlObj' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNums_1) == 0x0012D0, "Member 'UWB_CharaStatus_C::ParentMpCostNums_1' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNums_2) == 0x0012E0, "Member 'UWB_CharaStatus_C::ParentMpCostNums_2' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNums_3) == 0x0012F0, "Member 'UWB_CharaStatus_C::ParentMpCostNums_3' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNums_4) == 0x001300, "Member 'UWB_CharaStatus_C::ParentMpCostNums_4' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNums_5) == 0x001310, "Member 'UWB_CharaStatus_C::ParentMpCostNums_5' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNums_6) == 0x001320, "Member 'UWB_CharaStatus_C::ParentMpCostNums_6' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNums_7) == 0x001330, "Member 'UWB_CharaStatus_C::ParentMpCostNums_7' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNums_8) == 0x001340, "Member 'UWB_CharaStatus_C::ParentMpCostNums_8' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNums_9) == 0x001350, "Member 'UWB_CharaStatus_C::ParentMpCostNums_9' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNums_10) == 0x001360, "Member 'UWB_CharaStatus_C::ParentMpCostNums_10' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, ParentMpCostNums_11) == 0x001370, "Member 'UWB_CharaStatus_C::ParentMpCostNums_11' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, AnimCurrent_ParentSkillSlot) == 0x001380, "Member 'UWB_CharaStatus_C::AnimCurrent_ParentSkillSlot' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_ParentSlotDeltaSeconds) == 0x001384, "Member 'UWB_CharaStatus_C::M_ParentSlotDeltaSeconds' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Test_SkillSwapAnimEnd) == 0x001388, "Member 'UWB_CharaStatus_C::Test_SkillSwapAnimEnd' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Const_SlotMax) == 0x00138C, "Member 'UWB_CharaStatus_C::Const_SlotMax' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_FaceIconSlideTime) == 0x001390, "Member 'UWB_CharaStatus_C::M_FaceIconSlideTime' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_NextSkillFlashNum) == 0x001394, "Member 'UWB_CharaStatus_C::M_NextSkillFlashNum' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_SlotFlashSlideTime) == 0x001398, "Member 'UWB_CharaStatus_C::M_SlotFlashSlideTime' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_InsertIndex) == 0x00139C, "Member 'UWB_CharaStatus_C::M_InsertIndex' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_InsertDeltaSeconds) == 0x0013A0, "Member 'UWB_CharaStatus_C::M_InsertDeltaSeconds' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_RightSlotLearnSlideTime) == 0x0013A4, "Member 'UWB_CharaStatus_C::M_RightSlotLearnSlideTime' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_PosSkillSlot0_X) == 0x0013A8, "Member 'UWB_CharaStatus_C::M_PosSkillSlot0_X' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_PosSkillSlot0_Y) == 0x0013AC, "Member 'UWB_CharaStatus_C::M_PosSkillSlot0_Y' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Const_LearnSlideDeltaTime) == 0x0013B0, "Member 'UWB_CharaStatus_C::Const_LearnSlideDeltaTime' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Const_ColorWhite) == 0x0013B4, "Member 'UWB_CharaStatus_C::Const_ColorWhite' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Const_ColorBEFF4C) == 0x0013C4, "Member 'UWB_CharaStatus_C::Const_ColorBEFF4C' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_SkillSwapPtn) == 0x0013D4, "Member 'UWB_CharaStatus_C::M_SkillSwapPtn' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_ChangeAnimReq) == 0x0013D8, "Member 'UWB_CharaStatus_C::M_ChangeAnimReq' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_ChangePageRequest) == 0x0013DC, "Member 'UWB_CharaStatus_C::M_ChangePageRequest' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_UseCursor) == 0x0013E0, "Member 'UWB_CharaStatus_C::M_UseCursor' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_IsUsedSlotCursor) == 0x0013E1, "Member 'UWB_CharaStatus_C::M_IsUsedSlotCursor' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_StatusMessageAsset) == 0x0013E8, "Member 'UWB_CharaStatus_C::M_StatusMessageAsset' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_EnableHelpWindow) == 0x0013F0, "Member 'UWB_CharaStatus_C::M_EnableHelpWindow' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_DevilProfile) == 0x0013F8, "Member 'UWB_CharaStatus_C::M_DevilProfile' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_MapAreaName) == 0x001400, "Member 'UWB_CharaStatus_C::M_MapAreaName' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_IsEndNextSkillFlash) == 0x001408, "Member 'UWB_CharaStatus_C::M_IsEndNextSkillFlash' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_LvAnimType) == 0x00140C, "Member 'UWB_CharaStatus_C::M_LvAnimType' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_BadIcons) == 0x001410, "Member 'UWB_CharaStatus_C::M_BadIcons' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_ResistancesBadText) == 0x001420, "Member 'UWB_CharaStatus_C::M_ResistancesBadText' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_ResistancesBadPanelIn) == 0x001430, "Member 'UWB_CharaStatus_C::M_ResistancesBadPanelIn' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_ResultAnimStep) == 0x001434, "Member 'UWB_CharaStatus_C::M_ResultAnimStep' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_SwapTime) == 0x001438, "Member 'UWB_CharaStatus_C::M_SwapTime' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SwapCursorSrc) == 0x00143C, "Member 'UWB_CharaStatus_C::SwapCursorSrc' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, SwapCursorDst) == 0x001440, "Member 'UWB_CharaStatus_C::SwapCursorDst' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Const_SwapTime) == 0x001444, "Member 'UWB_CharaStatus_C::Const_SwapTime' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Const_SwapWaitTime) == 0x001448, "Member 'UWB_CharaStatus_C::Const_SwapWaitTime' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_WithTitle) == 0x00144C, "Member 'UWB_CharaStatus_C::M_WithTitle' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_UseLvUpGimmerParts) == 0x00144D, "Member 'UWB_CharaStatus_C::M_UseLvUpGimmerParts' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_5ParaMaxGaugeFrame) == 0x001450, "Member 'UWB_CharaStatus_C::M_5ParaMaxGaugeFrame' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_InIndex) == 0x001454, "Member 'UWB_CharaStatus_C::M_InIndex' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Disp_OnMovedRightScrollBarByMouse) == 0x001458, "Member 'UWB_CharaStatus_C::Disp_OnMovedRightScrollBarByMouse' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Disp_OnClickedRightSlot) == 0x001468, "Member 'UWB_CharaStatus_C::Disp_OnClickedRightSlot' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_BiographyRowMax) == 0x001478, "Member 'UWB_CharaStatus_C::M_BiographyRowMax' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Disp_OnHoveredRightSlot) == 0x001480, "Member 'UWB_CharaStatus_C::Disp_OnHoveredRightSlot' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Disp_OnMovedParentScrollBarByMouse) == 0x001490, "Member 'UWB_CharaStatus_C::Disp_OnMovedParentScrollBarByMouse' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Disp_OnClickedParentSlot) == 0x0014A0, "Member 'UWB_CharaStatus_C::Disp_OnClickedParentSlot' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Disp_OnHoveredParentSlot) == 0x0014B0, "Member 'UWB_CharaStatus_C::Disp_OnHoveredParentSlot' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Disp_OnClickedFluctuationCursor) == 0x0014C0, "Member 'UWB_CharaStatus_C::Disp_OnClickedFluctuationCursor' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Disp_OnHoveredFluctuationPanel) == 0x0014D0, "Member 'UWB_CharaStatus_C::Disp_OnHoveredFluctuationPanel' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Disp_OnClickedFaceBtnLR) == 0x0014E0, "Member 'UWB_CharaStatus_C::Disp_OnClickedFaceBtnLR' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Disp_OnClickedFacePanel) == 0x0014F0, "Member 'UWB_CharaStatus_C::Disp_OnClickedFacePanel' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_FaceIconMove) == 0x001500, "Member 'UWB_CharaStatus_C::M_FaceIconMove' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_EnableMouseHover) == 0x001504, "Member 'UWB_CharaStatus_C::M_EnableMouseHover' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_ResultHelpClosePastTime) == 0x001508, "Member 'UWB_CharaStatus_C::M_ResultHelpClosePastTime' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_InheritIconType) == 0x00150C, "Member 'UWB_CharaStatus_C::M_InheritIconType' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_GamePadIconMode) == 0x00150D, "Member 'UWB_CharaStatus_C::M_GamePadIconMode' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, M_KyeboardLanguage) == 0x00150E, "Member 'UWB_CharaStatus_C::M_KyeboardLanguage' has a wrong offset!");
static_assert(offsetof(UWB_CharaStatus_C, Disp_GardenResultFlashStart) == 0x001510, "Member 'UWB_CharaStatus_C::Disp_GardenResultFlashStart' has a wrong offset!");

}

