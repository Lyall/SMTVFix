#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_BattleRotationUtilities

#include "Basic.hpp"

#include "BPL_BattleRotationUtilities_classes.hpp"
#include "BPL_BattleRotationUtilities_parameters.hpp"


namespace SDK
{

// Function BPL_BattleRotationUtilities.BPL_BattleRotationUtilities_C.Find Look at Rotation with UpVec
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          UpVec                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator UBPL_BattleRotationUtilities_C::Find_Look_at_Rotation_with_UpVec(const struct FVector& Start, const struct FVector& Target, const struct FVector& UpVec, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_BattleRotationUtilities_C", "Find Look at Rotation with UpVec");

	Params::BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec Parms{};

	Parms.Start = std::move(Start);
	Parms.Target = std::move(Target);
	Parms.UpVec = std::move(UpVec);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPL_BattleRotationUtilities.BPL_BattleRotationUtilities_C.RInterp To with UpVec
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         Current                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Delta_time                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Interp_Speed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Up_Vec                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPL_BattleRotationUtilities_C::RInterp_To_with_UpVec(const struct FRotator& Current, const struct FRotator& Target, float Delta_time, float Interp_Speed, const struct FVector& Up_Vec, class UObject* __WorldContext, struct FRotator* Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_BattleRotationUtilities_C", "RInterp To with UpVec");

	Params::BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec Parms{};

	Parms.Current = std::move(Current);
	Parms.Target = std::move(Target);
	Parms.Delta_time = Delta_time;
	Parms.Interp_Speed = Interp_Speed;
	Parms.Up_Vec = std::move(Up_Vec);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = std::move(Parms.Return_Value);
}


// Function BPL_BattleRotationUtilities.BPL_BattleRotationUtilities_C.RInterp To with UpVec Fix
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         Current                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Delta_time                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Interp_Speed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Up_Vec                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPL_BattleRotationUtilities_C::RInterp_To_with_UpVec_Fix(const struct FRotator& Current, const struct FRotator& Target, float Delta_time, float Interp_Speed, const struct FVector& Up_Vec, class UObject* __WorldContext, struct FRotator* Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_BattleRotationUtilities_C", "RInterp To with UpVec Fix");

	Params::BPL_BattleRotationUtilities_C_RInterp_To_with_UpVec_Fix Parms{};

	Parms.Current = std::move(Current);
	Parms.Target = std::move(Target);
	Parms.Delta_time = Delta_time;
	Parms.Interp_Speed = Interp_Speed;
	Parms.Up_Vec = std::move(Up_Vec);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = std::move(Parms.Return_Value);
}


// Function BPL_BattleRotationUtilities.BPL_BattleRotationUtilities_C.Find Look at Rotation with UpVec Fix
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          UpVec                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator UBPL_BattleRotationUtilities_C::Find_Look_at_Rotation_with_UpVec_Fix(const struct FVector& Start, const struct FVector& Target, const struct FVector& UpVec, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_BattleRotationUtilities_C", "Find Look at Rotation with UpVec Fix");

	Params::BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_with_UpVec_Fix Parms{};

	Parms.Start = std::move(Start);
	Parms.Target = std::move(Target);
	Parms.UpVec = std::move(UpVec);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPL_BattleRotationUtilities.BPL_BattleRotationUtilities_C.RotateTransformByAxisAndDeg
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       InTrans                                                (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FVector                          Axis                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Deg                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       RotatedTrans                                           (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBPL_BattleRotationUtilities_C::RotateTransformByAxisAndDeg(const struct FTransform& InTrans, const struct FVector& Axis, float Deg, class UObject* __WorldContext, struct FTransform* RotatedTrans)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_BattleRotationUtilities_C", "RotateTransformByAxisAndDeg");

	Params::BPL_BattleRotationUtilities_C_RotateTransformByAxisAndDeg Parms{};

	Parms.InTrans = std::move(InTrans);
	Parms.Axis = std::move(Axis);
	Parms.Deg = Deg;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (RotatedTrans != nullptr)
		*RotatedTrans = std::move(Parms.RotatedTrans);
}


// Function BPL_BattleRotationUtilities.BPL_BattleRotationUtilities_C.RInterp To UpVec Considered
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         Current                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Delta_time                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Interp_Speed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPL_BattleRotationUtilities_C::RInterp_To_UpVec_Considered(const struct FRotator& Current, const struct FRotator& Target, float Delta_time, float Interp_Speed, class UObject* __WorldContext, struct FRotator* Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_BattleRotationUtilities_C", "RInterp To UpVec Considered");

	Params::BPL_BattleRotationUtilities_C_RInterp_To_UpVec_Considered Parms{};

	Parms.Current = std::move(Current);
	Parms.Target = std::move(Target);
	Parms.Delta_time = Delta_time;
	Parms.Interp_Speed = Interp_Speed;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = std::move(Parms.Return_Value);
}


// Function BPL_BattleRotationUtilities.BPL_BattleRotationUtilities_C.Find Look at Rotation ZOnly
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          UpVec                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ZOnly                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator UBPL_BattleRotationUtilities_C::Find_Look_at_Rotation_ZOnly(const struct FVector& Start, const struct FVector& Target, const struct FVector& UpVec, bool ZOnly, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_BattleRotationUtilities_C", "Find Look at Rotation ZOnly");

	Params::BPL_BattleRotationUtilities_C_Find_Look_at_Rotation_ZOnly Parms{};

	Parms.Start = std::move(Start);
	Parms.Target = std::move(Target);
	Parms.UpVec = std::move(UpVec);
	Parms.ZOnly = ZOnly;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

