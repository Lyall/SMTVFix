#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MapEventHit_CoreSphere

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function MapEventHit_CoreSphere.MapEventHit_CoreSphere_C.ExecuteUbergraph_MapEventHit_CoreSphere
// 0x001C (0x001C - 0x0000)
struct MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IS_EDITOR_BUILD_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_NewHidden;                            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bool;                                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A383[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_Value;                                // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere) == 0x000004, "Wrong alignment on MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere");
static_assert(sizeof(MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere) == 0x00001C, "Wrong size on MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere");
static_assert(offsetof(MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere, EntryPoint) == 0x000000, "Member 'MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere::EntryPoint' has a wrong offset!");
static_assert(offsetof(MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere, CallFunc_IS_EDITOR_BUILD_ReturnValue) == 0x000004, "Member 'MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere::CallFunc_IS_EDITOR_BUILD_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere, K2Node_Event_NewHidden) == 0x000005, "Member 'MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere::K2Node_Event_NewHidden' has a wrong offset!");
static_assert(offsetof(MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere, CallFunc_IsValid_ReturnValue) == 0x000006, "Member 'MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere, CallFunc_IsValid_ReturnValue_1) == 0x000008, "Member 'MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere, K2Node_Event_bool) == 0x000009, "Member 'MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere::K2Node_Event_bool' has a wrong offset!");
static_assert(offsetof(MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere, K2Node_Event_Value) == 0x00000C, "Member 'MapEventHit_CoreSphere_C_ExecuteUbergraph_MapEventHit_CoreSphere::K2Node_Event_Value' has a wrong offset!");

// Function MapEventHit_CoreSphere.MapEventHit_CoreSphere_C.ReShapeColor
// 0x0010 (0x0010 - 0x0000)
struct MapEventHit_CoreSphere_C_ReShapeColor final
{
public:
	struct FLinearColor                           Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapEventHit_CoreSphere_C_ReShapeColor) == 0x000004, "Wrong alignment on MapEventHit_CoreSphere_C_ReShapeColor");
static_assert(sizeof(MapEventHit_CoreSphere_C_ReShapeColor) == 0x000010, "Wrong size on MapEventHit_CoreSphere_C_ReShapeColor");
static_assert(offsetof(MapEventHit_CoreSphere_C_ReShapeColor, Value) == 0x000000, "Member 'MapEventHit_CoreSphere_C_ReShapeColor::Value' has a wrong offset!");

// Function MapEventHit_CoreSphere.MapEventHit_CoreSphere_C.DebugView
// 0x0001 (0x0001 - 0x0000)
struct MapEventHit_CoreSphere_C_DebugView final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MapEventHit_CoreSphere_C_DebugView) == 0x000001, "Wrong alignment on MapEventHit_CoreSphere_C_DebugView");
static_assert(sizeof(MapEventHit_CoreSphere_C_DebugView) == 0x000001, "Wrong size on MapEventHit_CoreSphere_C_DebugView");
static_assert(offsetof(MapEventHit_CoreSphere_C_DebugView, Bool) == 0x000000, "Member 'MapEventHit_CoreSphere_C_DebugView::Bool' has a wrong offset!");

// Function MapEventHit_CoreSphere.MapEventHit_CoreSphere_C.hidden
// 0x0001 (0x0001 - 0x0000)
struct MapEventHit_CoreSphere_C_Hidden final
{
public:
	bool                                          NewHidden;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MapEventHit_CoreSphere_C_Hidden) == 0x000001, "Wrong alignment on MapEventHit_CoreSphere_C_Hidden");
static_assert(sizeof(MapEventHit_CoreSphere_C_Hidden) == 0x000001, "Wrong size on MapEventHit_CoreSphere_C_Hidden");
static_assert(offsetof(MapEventHit_CoreSphere_C_Hidden, NewHidden) == 0x000000, "Member 'MapEventHit_CoreSphere_C_Hidden::NewHidden' has a wrong offset!");

// Function MapEventHit_CoreSphere.MapEventHit_CoreSphere_C.Init
// 0x0040 (0x0040 - 0x0000)
struct MapEventHit_CoreSphere_C_Init final
{
public:
	class FString                                 CallFunc_GetMapEventHitTableData_Name1;            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A384[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
	float                                         CallFunc_BreakVector_X;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MapEventHit_CoreSphere_C_Init) == 0x000008, "Wrong alignment on MapEventHit_CoreSphere_C_Init");
static_assert(sizeof(MapEventHit_CoreSphere_C_Init) == 0x000040, "Wrong size on MapEventHit_CoreSphere_C_Init");
static_assert(offsetof(MapEventHit_CoreSphere_C_Init, CallFunc_GetMapEventHitTableData_Name1) == 0x000000, "Member 'MapEventHit_CoreSphere_C_Init::CallFunc_GetMapEventHitTableData_Name1' has a wrong offset!");
static_assert(offsetof(MapEventHit_CoreSphere_C_Init, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'MapEventHit_CoreSphere_C_Init::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapEventHit_CoreSphere_C_Init, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'MapEventHit_CoreSphere_C_Init::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapEventHit_CoreSphere_C_Init, CallFunc_BreakVector_X) == 0x000030, "Member 'MapEventHit_CoreSphere_C_Init::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MapEventHit_CoreSphere_C_Init, CallFunc_BreakVector_Y) == 0x000034, "Member 'MapEventHit_CoreSphere_C_Init::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MapEventHit_CoreSphere_C_Init, CallFunc_BreakVector_Z) == 0x000038, "Member 'MapEventHit_CoreSphere_C_Init::CallFunc_BreakVector_Z' has a wrong offset!");

}

