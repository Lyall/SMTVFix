#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DevilBaseLight

#include "Basic.hpp"

#include "E_DEVIL_PERFORMANCE_TYPE_structs.hpp"
#include "Engine_structs.hpp"
#include "EncountData_st_structs.hpp"
#include "CharaBase_classes.hpp"
#include "Project_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass DevilBaseLight.DevilBaseLight_C
// 0x01B8 (0x0A80 - 0x08C8)
class ADevilBaseLight_C : public ACharaBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_DevilBaseLight_C;                   // 0x08C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDestructibleComponent*                 Destructible;                                      // 0x08D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDevilMovementComponent*                DevilMovement;                                     // 0x08D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MagatsuhiDevilSEVolumeCtrl_Volume_19BDA4764BF007A3BE568583E26E1CDB; // 0x08E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            MagatsuhiDevilSEVolumeCtrl__Direction_19BDA4764BF007A3BE568583E26E1CDB; // 0x08E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54FF[0x3];                                     // 0x08E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     MagatsuhiDevilSEVolumeCtrl;                        // 0x08E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _____value_231A044E42D2CAF94383E1A119FA641A;       // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ______Direction_231A044E42D2CAF94383E1A119FA641A;  // 0x08F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5500[0x3];                                     // 0x08F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     U___;                                              // 0x08F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ______value_012365CA4D23D56F20D360954ED23E3A;      // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            _______Direction_012365CA4D23D56F20D360954ED23E3A; // 0x0904(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5501[0x3];                                     // 0x0905(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     _T___;                                             // 0x0908(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ____________WeightValue_D355527B4A2FF31DF016F3B6291FBC20; // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            _____________Direction_D355527B4A2FF31DF016F3B6291FBC20; // 0x0914(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5502[0x3];                                     // 0x0915(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ____________DevilBaseLight_C_0;                    // 0x0918(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __________________Weight_Value_C5F43CB444552052AFF0D6A14D12F6C1; // 0x0920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ___________________Direction_C5F43CB444552052AFF0D6A14D12F6C1; // 0x0924(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5503[0x3];                                     // 0x0925(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Zero________________;                              // 0x0928(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ________________WeightValue_5D65FB7746A6F30EDAF7A68A5093FDAF; // 0x0930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            _________________Direction_5D65FB7746A6F30EDAF7A68A5093FDAF; // 0x0934(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5504[0x3];                                     // 0x0935(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     _______________;                                   // 0x0938(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _____________DM_DitherRate_6E9DED734018A46959D0DCA022A65429; // 0x0940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _____________StateMaterialValue_6E9DED734018A46959D0DCA022A65429; // 0x0944(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _____________DeadMaterialValue_6E9DED734018A46959D0DCA022A65429; // 0x0948(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ______________Direction_6E9DED734018A46959D0DCA022A65429; // 0x094C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5505[0x3];                                     // 0x094D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     __cf________;                                      // 0x0950(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___________StateMaterialValue_6080DCC6442515AD19F3B3B7B3DC7E41; // 0x0958(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___________DeadMaterialValue_6080DCC6442515AD19F3B3B7B3DC7E41; // 0x095C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ____________Direction_6080DCC6442515AD19F3B3B7B3DC7E41; // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5506[0x7];                                     // 0x0961(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     I_________;                                        // 0x0968(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___________StateMaterialValue_CF4B8A4D4AFFE215587DF792E18077C1; // 0x0970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___________DeadMaterialValue_CF4B8A4D4AFFE215587DF792E18077C1; // 0x0974(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ____________Direction_CF4B8A4D4AFFE215587DF792E18077C1; // 0x0978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5507[0x7];                                     // 0x0979(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     N_________;                                        // 0x0980(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEncountData_st                        EncountData;                                       // 0x0988(0x0028)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsSymbol;                                          // 0x09B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsBattle;                                          // 0x09B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5508[0x6];                                     // 0x09B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             CallBattle;                                        // 0x09B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         NkmSize;                                           // 0x09C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         M_DeadOption;                                      // 0x09CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEBase;                                           // 0x09CD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5509[0x2];                                     // 0x09CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimSequence>           M_SpawnMotion;                                     // 0x09D0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsForce;                                           // 0x09F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          IsMapAttackEncount;                                // 0x09F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	E_DEVIL_PERFORMANCE_TYPE                      M_ReturnPerformance;                               // 0x09FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DEVIL_PERFORMANCE_TYPE                      M_SummonPerformance;                               // 0x09FB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DEVIL_PERFORMANCE_TYPE                      M_SpawnPerformance;                                // 0x09FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_Spawn1xEffectScale;                              // 0x09FD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_550A[0x2];                                     // 0x09FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         M_WaitDeadSec;                                     // 0x0A00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_550B[0x4];                                     // 0x0A04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimComposite>          M_SpawnCompositeMotion;                            // 0x0A08(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UDevilPerformanceComponent_C*           DevilPerormance;                                   // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPaused;                                           // 0x0A38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bExcludeFromGazeTarget;                            // 0x0A39(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NPC_Collision;                                     // 0x0A3A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          NaviDevil;                                         // 0x0A3B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         NPCCollisionOffset;                                // 0x0A3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class ANPCOnlyCollision_C*                    NpcCollisionActor;                                 // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          M_SummonIsInBattle;                                // 0x0A48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_550C[0x7];                                     // 0x0A49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UCharaMotionTable>       MotionTableRef;                                    // 0x0A50(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsMotionTableLoaded;                               // 0x0A78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bNoDistCheck_CamCollision;                         // 0x0A79(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void CallBattle__DelegateSignature();
	void ExecuteUbergraph_DevilBaseLight(int32 EntryPoint);
	void DeleteMotionTable();
	void LoadMotionTable();
	void Evt_IncreaseMagatsuhiDevilSE();
	void Evt_ReduceMagatsuhiDevilSE();
	void BI_AdjustMeshScale(bool IsReset);
	void BI_SetDevilRootMotion(bool Enable);
	void SetMeshRelativeScale(float NewScale, float NewBoundScale);
	void BPI_DestroyComponents_ForMapSymbol();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void StopSpeakingMotion();
	void PlaySpeakingMotion();
	void SetCharaPlayRate(float CharaPlayRate);
	void ResetAllMaterialParam();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void Dead_Physics_TL_PlayStart();
	void Dead_Freeze_TL_SetTime(float Sec);
	void Dead_Freeze_TL_PlayStart();
	void Dead_Freeze_TL_Play();
	void Dead_General_TL_PlayStart();
	void BPI_CallEncount_ForAttack();
	void DeathAction(uint8 InOption, bool DeadTimingOverride, float DeadTiming);
	void Revive_Nakama_TL_PlayStart();
	void Revive_Enemy_TL_PlayStart();
	void ReviveAction();
	void PlayStartEffect();
	void Spawn_TL_PlayStart();
	void RapidReturnAction();
	void RapidSummonAction(int32 CurrentStatus, bool Immediately);
	void Return_TL_PlayStart();
	void Summon_TL_PlayStart();
	void SpawnAction(bool Param_PlayMotion, bool IsInstantEvent);
	void ReturnAction(float PlayRate, bool IsInstantEvent);
	void SummonAction(int32 CurrentStatus, bool Immediately, bool IsInstantEvent, bool IsInBattle);
	void BI_PlayStartEffect();
	void OnLoaded_D18D940342211020A8B0DE9AB358AB88(class UObject* Loaded);
	void MagatsuhiDevilSEVolumeCtrl__UpdateFunc();
	void MagatsuhiDevilSEVolumeCtrl__FinishedFunc();
	void __cf__________StopMotion__EventFunc();
	void __cf__________BreakDown__EventFunc();
	void __cf__________Dead__EventFunc();
	void __cf__________CharaEffectDeactivate__EventFunc();
	void __cf__________UpdateFunc();
	void __cf__________FinishedFunc();
	void I___________SpawnParticle__EventFunc();
	void I___________StopMotion__EventFunc();
	void I___________Dead__EventFunc();
	void I___________CharaEffectDeactivate__EventFunc();
	void I___________UpdateFunc();
	void I___________FinishedFunc();
	void N___________Spawn_Particle__EventFunc();
	void N___________StopMotion__EventFunc();
	void N___________Dead__EventFunc();
	void N___________CharaEffectDeactivate__EventFunc();
	void N___________UpdateFunc();
	void N___________FinishedFunc();
	void _____________SpawnDecal__EventFunc();
	void _____________SpawnEffect__EventFunc();
	void _____________SpawnMotion__EventFunc();
	void _____________SpawnParticleVisibleOn__EventFunc();
	void _____________UpdateFunc_0();
	void _____________FinishedFunc_0();
	void _T_____ParticleOn__EventFunc();
	void _T_____UpdateFunc();
	void _T_____FinishedFunc();
	void U_____ParticleOn__EventFunc();
	void U_____UpdateFunc();
	void U_____FinishedFunc();
	void Zero__________________ParticleOff__EventFunc();
	void Zero__________________UpdateFunc();
	void Zero__________________FinishedFunc();
	void _________________ApplyBadStatus__EventFunc();
	void _________________EndOfSummon__EventFunc();
	void _________________UpdateFunc();
	void _________________FinishedFunc();
	void GetFloor(struct FVector* Location);
	void AdjustMeshScale(bool IsReset);
	void ResetDeadMaterial();
	void InitializeDevilPerformanceComp();
	class UDevilPerformanceComponent_C* CreateDevilPerformanceComp();
	void GetDevilPerformanceComp(class UDevilPerformanceComponent_C** Comp);
	void SetPauseDevil(bool Pause);
	void BI_GetTimeLineComponent(E_BTL_DEAD_EFFECT DeadEffect, class UTimelineComponent** Comp);
	void SetNpcCollision();
	void BI_SetNPCCollision(bool* Ret);
	void IsOnWaterSurface(bool* Result);
	void SetSpawnPerformance(E_DEVIL_PERFORMANCE_TYPE Performance);
	void BI_FloatNoRotation(bool NoRotation, bool* NoUse);
	void BI_PlayMotion(E_CHARA_MOTION_ID Param_MotionID, bool Param_IsUseDuration, float Duration, bool IsUseBlendTimeOverride, float BlendTimeOverride, float StartOffsetTime, bool* NoUse);
	void PhysicsDeadPlayStart(bool* NoUse);
	void FreezeDeadSetTime(float Sec, bool* NoUse);
	void FreezeDeadPlayStart(bool* NoUse);
	void FreezeDeadPlay(bool* NoUse);
	void GeneralDeadPlayStart(bool* NoUse);
	void SummonPlayStart(bool* NoUse);
	void ReturnPlayStart(bool* NoUse);
	void ReviveEnemyPlayStart(bool* NoUse);
	void ReviveNakamaPlayStart(bool* NoUse);
	void SpawnPlayStart(bool* NoUse);
	void BI_GetNpcCollisionActor(class AActor** Param_NpcCollisionActor);
	void BPI_GetSymbolComponent(class UActorComponent** Component);
	void BPI_SymbolOnWater(bool* OnWater);

	bool CheckPlayAnimNotifyDevilVoice(EDevilVoiceType DevilVoiceType) const;
	EGazeTargetType GetGazeTargetType() const;
	struct FVector GetGazeTargetLocation() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DevilBaseLight_C">();
	}
	static class ADevilBaseLight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADevilBaseLight_C>();
	}
};
static_assert(alignof(ADevilBaseLight_C) == 0x000008, "Wrong alignment on ADevilBaseLight_C");
static_assert(sizeof(ADevilBaseLight_C) == 0x000A80, "Wrong size on ADevilBaseLight_C");
static_assert(offsetof(ADevilBaseLight_C, UberGraphFrame_DevilBaseLight_C) == 0x0008C8, "Member 'ADevilBaseLight_C::UberGraphFrame_DevilBaseLight_C' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, Destructible) == 0x0008D0, "Member 'ADevilBaseLight_C::Destructible' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, DevilMovement) == 0x0008D8, "Member 'ADevilBaseLight_C::DevilMovement' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, MagatsuhiDevilSEVolumeCtrl_Volume_19BDA4764BF007A3BE568583E26E1CDB) == 0x0008E0, "Member 'ADevilBaseLight_C::MagatsuhiDevilSEVolumeCtrl_Volume_19BDA4764BF007A3BE568583E26E1CDB' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, MagatsuhiDevilSEVolumeCtrl__Direction_19BDA4764BF007A3BE568583E26E1CDB) == 0x0008E4, "Member 'ADevilBaseLight_C::MagatsuhiDevilSEVolumeCtrl__Direction_19BDA4764BF007A3BE568583E26E1CDB' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, MagatsuhiDevilSEVolumeCtrl) == 0x0008E8, "Member 'ADevilBaseLight_C::MagatsuhiDevilSEVolumeCtrl' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, _____value_231A044E42D2CAF94383E1A119FA641A) == 0x0008F0, "Member 'ADevilBaseLight_C::_____value_231A044E42D2CAF94383E1A119FA641A' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, ______Direction_231A044E42D2CAF94383E1A119FA641A) == 0x0008F4, "Member 'ADevilBaseLight_C::______Direction_231A044E42D2CAF94383E1A119FA641A' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, U___) == 0x0008F8, "Member 'ADevilBaseLight_C::U___' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, ______value_012365CA4D23D56F20D360954ED23E3A) == 0x000900, "Member 'ADevilBaseLight_C::______value_012365CA4D23D56F20D360954ED23E3A' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, _______Direction_012365CA4D23D56F20D360954ED23E3A) == 0x000904, "Member 'ADevilBaseLight_C::_______Direction_012365CA4D23D56F20D360954ED23E3A' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, _T___) == 0x000908, "Member 'ADevilBaseLight_C::_T___' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, ____________WeightValue_D355527B4A2FF31DF016F3B6291FBC20) == 0x000910, "Member 'ADevilBaseLight_C::____________WeightValue_D355527B4A2FF31DF016F3B6291FBC20' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, _____________Direction_D355527B4A2FF31DF016F3B6291FBC20) == 0x000914, "Member 'ADevilBaseLight_C::_____________Direction_D355527B4A2FF31DF016F3B6291FBC20' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, ____________DevilBaseLight_C_0) == 0x000918, "Member 'ADevilBaseLight_C::____________DevilBaseLight_C_0' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, __________________Weight_Value_C5F43CB444552052AFF0D6A14D12F6C1) == 0x000920, "Member 'ADevilBaseLight_C::__________________Weight_Value_C5F43CB444552052AFF0D6A14D12F6C1' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, ___________________Direction_C5F43CB444552052AFF0D6A14D12F6C1) == 0x000924, "Member 'ADevilBaseLight_C::___________________Direction_C5F43CB444552052AFF0D6A14D12F6C1' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, Zero________________) == 0x000928, "Member 'ADevilBaseLight_C::Zero________________' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, ________________WeightValue_5D65FB7746A6F30EDAF7A68A5093FDAF) == 0x000930, "Member 'ADevilBaseLight_C::________________WeightValue_5D65FB7746A6F30EDAF7A68A5093FDAF' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, _________________Direction_5D65FB7746A6F30EDAF7A68A5093FDAF) == 0x000934, "Member 'ADevilBaseLight_C::_________________Direction_5D65FB7746A6F30EDAF7A68A5093FDAF' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, _______________) == 0x000938, "Member 'ADevilBaseLight_C::_______________' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, _____________DM_DitherRate_6E9DED734018A46959D0DCA022A65429) == 0x000940, "Member 'ADevilBaseLight_C::_____________DM_DitherRate_6E9DED734018A46959D0DCA022A65429' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, _____________StateMaterialValue_6E9DED734018A46959D0DCA022A65429) == 0x000944, "Member 'ADevilBaseLight_C::_____________StateMaterialValue_6E9DED734018A46959D0DCA022A65429' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, _____________DeadMaterialValue_6E9DED734018A46959D0DCA022A65429) == 0x000948, "Member 'ADevilBaseLight_C::_____________DeadMaterialValue_6E9DED734018A46959D0DCA022A65429' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, ______________Direction_6E9DED734018A46959D0DCA022A65429) == 0x00094C, "Member 'ADevilBaseLight_C::______________Direction_6E9DED734018A46959D0DCA022A65429' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, __cf________) == 0x000950, "Member 'ADevilBaseLight_C::__cf________' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, ___________StateMaterialValue_6080DCC6442515AD19F3B3B7B3DC7E41) == 0x000958, "Member 'ADevilBaseLight_C::___________StateMaterialValue_6080DCC6442515AD19F3B3B7B3DC7E41' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, ___________DeadMaterialValue_6080DCC6442515AD19F3B3B7B3DC7E41) == 0x00095C, "Member 'ADevilBaseLight_C::___________DeadMaterialValue_6080DCC6442515AD19F3B3B7B3DC7E41' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, ____________Direction_6080DCC6442515AD19F3B3B7B3DC7E41) == 0x000960, "Member 'ADevilBaseLight_C::____________Direction_6080DCC6442515AD19F3B3B7B3DC7E41' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, I_________) == 0x000968, "Member 'ADevilBaseLight_C::I_________' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, ___________StateMaterialValue_CF4B8A4D4AFFE215587DF792E18077C1) == 0x000970, "Member 'ADevilBaseLight_C::___________StateMaterialValue_CF4B8A4D4AFFE215587DF792E18077C1' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, ___________DeadMaterialValue_CF4B8A4D4AFFE215587DF792E18077C1) == 0x000974, "Member 'ADevilBaseLight_C::___________DeadMaterialValue_CF4B8A4D4AFFE215587DF792E18077C1' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, ____________Direction_CF4B8A4D4AFFE215587DF792E18077C1) == 0x000978, "Member 'ADevilBaseLight_C::____________Direction_CF4B8A4D4AFFE215587DF792E18077C1' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, N_________) == 0x000980, "Member 'ADevilBaseLight_C::N_________' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, EncountData) == 0x000988, "Member 'ADevilBaseLight_C::EncountData' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, IsSymbol) == 0x0009B0, "Member 'ADevilBaseLight_C::IsSymbol' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, IsBattle) == 0x0009B1, "Member 'ADevilBaseLight_C::IsBattle' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, CallBattle) == 0x0009B8, "Member 'ADevilBaseLight_C::CallBattle' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, NkmSize) == 0x0009C8, "Member 'ADevilBaseLight_C::NkmSize' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, M_DeadOption) == 0x0009CC, "Member 'ADevilBaseLight_C::M_DeadOption' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, IsEBase) == 0x0009CD, "Member 'ADevilBaseLight_C::IsEBase' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, M_SpawnMotion) == 0x0009D0, "Member 'ADevilBaseLight_C::M_SpawnMotion' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, IsForce) == 0x0009F8, "Member 'ADevilBaseLight_C::IsForce' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, IsMapAttackEncount) == 0x0009F9, "Member 'ADevilBaseLight_C::IsMapAttackEncount' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, M_ReturnPerformance) == 0x0009FA, "Member 'ADevilBaseLight_C::M_ReturnPerformance' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, M_SummonPerformance) == 0x0009FB, "Member 'ADevilBaseLight_C::M_SummonPerformance' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, M_SpawnPerformance) == 0x0009FC, "Member 'ADevilBaseLight_C::M_SpawnPerformance' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, M_Spawn1xEffectScale) == 0x0009FD, "Member 'ADevilBaseLight_C::M_Spawn1xEffectScale' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, M_WaitDeadSec) == 0x000A00, "Member 'ADevilBaseLight_C::M_WaitDeadSec' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, M_SpawnCompositeMotion) == 0x000A08, "Member 'ADevilBaseLight_C::M_SpawnCompositeMotion' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, DevilPerormance) == 0x000A30, "Member 'ADevilBaseLight_C::DevilPerormance' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, bPaused) == 0x000A38, "Member 'ADevilBaseLight_C::bPaused' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, bExcludeFromGazeTarget) == 0x000A39, "Member 'ADevilBaseLight_C::bExcludeFromGazeTarget' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, NPC_Collision) == 0x000A3A, "Member 'ADevilBaseLight_C::NPC_Collision' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, NaviDevil) == 0x000A3B, "Member 'ADevilBaseLight_C::NaviDevil' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, NPCCollisionOffset) == 0x000A3C, "Member 'ADevilBaseLight_C::NPCCollisionOffset' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, NpcCollisionActor) == 0x000A40, "Member 'ADevilBaseLight_C::NpcCollisionActor' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, M_SummonIsInBattle) == 0x000A48, "Member 'ADevilBaseLight_C::M_SummonIsInBattle' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, MotionTableRef) == 0x000A50, "Member 'ADevilBaseLight_C::MotionTableRef' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, IsMotionTableLoaded) == 0x000A78, "Member 'ADevilBaseLight_C::IsMotionTableLoaded' has a wrong offset!");
static_assert(offsetof(ADevilBaseLight_C, bNoDistCheck_CamCollision) == 0x000A79, "Member 'ADevilBaseLight_C::bNoDistCheck_CamCollision' has a wrong offset!");

}

