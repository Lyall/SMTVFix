#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ReverbArea

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "Project_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ReverbArea.BP_ReverbArea_C
// 0x0020 (0x0240 - 0x0220)
class ABP_ReverbArea_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EReverbType                                   ReverbType;                                        // 0x0238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94C2[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Priority;                                          // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ReverbArea(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ReverbArea_C">();
	}
	static class ABP_ReverbArea_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ReverbArea_C>();
	}
};
static_assert(alignof(ABP_ReverbArea_C) == 0x000008, "Wrong alignment on ABP_ReverbArea_C");
static_assert(sizeof(ABP_ReverbArea_C) == 0x000240, "Wrong size on ABP_ReverbArea_C");
static_assert(offsetof(ABP_ReverbArea_C, UberGraphFrame) == 0x000220, "Member 'ABP_ReverbArea_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ReverbArea_C, Box) == 0x000228, "Member 'ABP_ReverbArea_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_ReverbArea_C, Scene) == 0x000230, "Member 'ABP_ReverbArea_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_ReverbArea_C, ReverbType) == 0x000238, "Member 'ABP_ReverbArea_C::ReverbType' has a wrong offset!");
static_assert(offsetof(ABP_ReverbArea_C, Priority) == 0x00023C, "Member 'ABP_ReverbArea_C::Priority' has a wrong offset!");

}

