#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MultiLineRichText

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Slate_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_MultiLineRichText.WB_MultiLineRichText_C
// 0x0198 (0x03F8 - 0x0260)
class UWB_MultiLineRichText_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMessageRichTextWidget*                 MessageRichText;                                   // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 MessageRichText_1;                                 // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 MessageRichText_2;                                 // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 MessageRichText_3;                                 // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 MessageRichText_4;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 MessageRichText_5;                                 // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 MessageRichText_6;                                 // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 MessageRichText_7;                                 // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 MessageRichText_8;                                 // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 MessageRichText_9;                                 // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 MessageRichText_10;                                // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 MessageRichText_11;                                // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 MessageRichText_12;                                // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 MessageRichText_13;                                // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 MessageRichText_14;                                // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMessageRichTextWidget*                 MessageRichText_15;                                // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           TextCanvas;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UMessageRichTextWidget*>         M_AllRichTextArray;                                // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class FString>                         M_AllMsgArray;                                     // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 M_GrayOutLine;                                     // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         M_NowMsgTopLine;                                   // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         M_TextLineNum;                                     // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         M_TextLineHeight;                                  // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              M_CanvasSize;                                      // 0x032C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              M_CanvasOffset;                                    // 0x0334(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5104[0x4];                                     // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptMessageAsset*                    M_DefaultMsgAsset;                                 // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         M_DefaultMsgID;                                    // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5105[0x4];                                     // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         M_TextFont;                                        // 0x0350(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FLinearColor                           M_TextColor;                                       // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              M_ShadowOffset;                                    // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           M_ShadowColor;                                     // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  M_TextJustification;                               // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5106[0x3];                                     // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              M_ImageOffset;                                     // 0x03D4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           M_ImageColor;                                      // 0x03DC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5107[0x4];                                     // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMessageRichTextWidget*                 M_OriginalRichText;                                // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_MultiLineRichText(int32 EntryPoint);
	void Destruct();
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Init();
	void PrintDebugText();
	void SetNewMsg_byID(const class UScriptMessageAsset* MsgAsset, int32 MsgID);
	void SetNewMsg_byLabel(const class UScriptMessageAsset* MsgAsset, class FName MsgLabel);
	void SetQuestSummaryMsg_byID(const class UScriptMessageAsset* MsgAsset, int32 MsgID);
	void SetQuestSummaryMsg_byLabel(const class UScriptMessageAsset* MsgAsset, class FName MsgLabel);
	void SetDispMsgPos(int32 MsgTopLine);
	void AddMsgLine(const class FString& NewLineMsg);
	void ClearMsg();
	void CreateLineString(const class FString& InString, TArray<class FString>* ReturnString);
	void ScrollUp();
	void ScrollDown();
	void PageUp();
	void PageDown();
	void MoveTop();
	void MoveBottom();
	void ReloadText();
	void IsRequiredScroll(bool* RequiredScroll);
	float GetScrollPosRate();
	void ApplyGrayOutLine(int32 LineIdx, bool IsGrayOut);
	void SetGrayOutLine(TArray<int32>& GrayOutLine);
	void SetTextJustification(ETextJustify InputPin);
	void GetMaxScrollOffset(int32* MaxOffset);
	void GetScrollOffset(int32* ScrollOffset);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_MultiLineRichText_C">();
	}
	static class UWB_MultiLineRichText_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_MultiLineRichText_C>();
	}
};
static_assert(alignof(UWB_MultiLineRichText_C) == 0x000008, "Wrong alignment on UWB_MultiLineRichText_C");
static_assert(sizeof(UWB_MultiLineRichText_C) == 0x0003F8, "Wrong size on UWB_MultiLineRichText_C");
static_assert(offsetof(UWB_MultiLineRichText_C, UberGraphFrame) == 0x000260, "Member 'UWB_MultiLineRichText_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, MessageRichText) == 0x000268, "Member 'UWB_MultiLineRichText_C::MessageRichText' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, MessageRichText_1) == 0x000270, "Member 'UWB_MultiLineRichText_C::MessageRichText_1' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, MessageRichText_2) == 0x000278, "Member 'UWB_MultiLineRichText_C::MessageRichText_2' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, MessageRichText_3) == 0x000280, "Member 'UWB_MultiLineRichText_C::MessageRichText_3' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, MessageRichText_4) == 0x000288, "Member 'UWB_MultiLineRichText_C::MessageRichText_4' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, MessageRichText_5) == 0x000290, "Member 'UWB_MultiLineRichText_C::MessageRichText_5' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, MessageRichText_6) == 0x000298, "Member 'UWB_MultiLineRichText_C::MessageRichText_6' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, MessageRichText_7) == 0x0002A0, "Member 'UWB_MultiLineRichText_C::MessageRichText_7' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, MessageRichText_8) == 0x0002A8, "Member 'UWB_MultiLineRichText_C::MessageRichText_8' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, MessageRichText_9) == 0x0002B0, "Member 'UWB_MultiLineRichText_C::MessageRichText_9' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, MessageRichText_10) == 0x0002B8, "Member 'UWB_MultiLineRichText_C::MessageRichText_10' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, MessageRichText_11) == 0x0002C0, "Member 'UWB_MultiLineRichText_C::MessageRichText_11' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, MessageRichText_12) == 0x0002C8, "Member 'UWB_MultiLineRichText_C::MessageRichText_12' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, MessageRichText_13) == 0x0002D0, "Member 'UWB_MultiLineRichText_C::MessageRichText_13' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, MessageRichText_14) == 0x0002D8, "Member 'UWB_MultiLineRichText_C::MessageRichText_14' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, MessageRichText_15) == 0x0002E0, "Member 'UWB_MultiLineRichText_C::MessageRichText_15' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, TextCanvas) == 0x0002E8, "Member 'UWB_MultiLineRichText_C::TextCanvas' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_AllRichTextArray) == 0x0002F0, "Member 'UWB_MultiLineRichText_C::M_AllRichTextArray' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_AllMsgArray) == 0x000300, "Member 'UWB_MultiLineRichText_C::M_AllMsgArray' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_GrayOutLine) == 0x000310, "Member 'UWB_MultiLineRichText_C::M_GrayOutLine' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_NowMsgTopLine) == 0x000320, "Member 'UWB_MultiLineRichText_C::M_NowMsgTopLine' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_TextLineNum) == 0x000324, "Member 'UWB_MultiLineRichText_C::M_TextLineNum' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_TextLineHeight) == 0x000328, "Member 'UWB_MultiLineRichText_C::M_TextLineHeight' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_CanvasSize) == 0x00032C, "Member 'UWB_MultiLineRichText_C::M_CanvasSize' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_CanvasOffset) == 0x000334, "Member 'UWB_MultiLineRichText_C::M_CanvasOffset' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_DefaultMsgAsset) == 0x000340, "Member 'UWB_MultiLineRichText_C::M_DefaultMsgAsset' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_DefaultMsgID) == 0x000348, "Member 'UWB_MultiLineRichText_C::M_DefaultMsgID' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_TextFont) == 0x000350, "Member 'UWB_MultiLineRichText_C::M_TextFont' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_TextColor) == 0x0003A8, "Member 'UWB_MultiLineRichText_C::M_TextColor' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_ShadowOffset) == 0x0003B8, "Member 'UWB_MultiLineRichText_C::M_ShadowOffset' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_ShadowColor) == 0x0003C0, "Member 'UWB_MultiLineRichText_C::M_ShadowColor' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_TextJustification) == 0x0003D0, "Member 'UWB_MultiLineRichText_C::M_TextJustification' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_ImageOffset) == 0x0003D4, "Member 'UWB_MultiLineRichText_C::M_ImageOffset' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_ImageColor) == 0x0003DC, "Member 'UWB_MultiLineRichText_C::M_ImageColor' has a wrong offset!");
static_assert(offsetof(UWB_MultiLineRichText_C, M_OriginalRichText) == 0x0003F0, "Member 'UWB_MultiLineRichText_C::M_OriginalRichText' has a wrong offset!");

}

