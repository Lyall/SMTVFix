#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TitleCtrl

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "E_TitleEndType_structs.hpp"
#include "E_NewGameType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "E_DifficulitySelectEndType_structs.hpp"
#include "E_SaveLoadEndType_structs.hpp"


namespace SDK::Params
{

// Function BP_TitleCtrl.BP_TitleCtrl_C.ExecuteUbergraph_BP_TitleCtrl
// 0x0158 (0x0158 - 0x0000)
struct BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_TITLE_TOP_SELECTION>                 CallFunc_GetTitleTopSelection_retSelection;        // 0x0008(0x0010)(ReferenceParm)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_2;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_1;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_3;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_4;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_4;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate;              // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isAnySlotSaveData_ReturnValue;            // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FadeOut_Black_ReturnValue;                // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_MultiGate_FirstRun;                         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_MultiGate_ScratchBool;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_MultiGate_ScratchIndex;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_5;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Index)>                  K2Node_CreateDelegate_OutputDelegate_4;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 Index)>                  K2Node_CreateDelegate_OutputDelegate_5;            // 0x00E8(0x0010)(ZeroConstructor, NoDestructor)
	E_UI_FADE_STATE                               CallFunc_GetFadeState_ReturnValue;                 // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_5;                       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetLoadAllSaveDataHeaderResult_ReturnValue; // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WaitLoadAllSaveDataHeaderAsync_ReturnValue; // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10B[0x5];                                      // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_TitleBack_C*                        CallFunc_Create_ReturnValue;                       // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue;              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToWidgetPrio_ReturnValue_1;            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_TitleMainMenu_2_C*                  CallFunc_Create_ReturnValue_1;                     // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0130(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0140(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CheckEnableConvertSaveData_ReturnValue;   // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl");
static_assert(sizeof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl) == 0x000158, "Wrong size on BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, EntryPoint) == 0x000000, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, CallFunc_GetTitleTopSelection_retSelection) == 0x000008, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::CallFunc_GetTitleTopSelection_retSelection' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_CustomEvent_Loaded_2) == 0x000018, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, Temp_class_Variable) == 0x000020, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_CustomEvent_Loaded_1) == 0x000028, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, Temp_class_Variable_1) == 0x000030, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_CustomEvent_Loaded) == 0x000038, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, Temp_class_Variable_2) == 0x000040, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_Event_DeltaSeconds) == 0x00004C, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, Temp_class_Variable_3) == 0x000050, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_CustomEvent_Loaded_3) == 0x000058, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, Temp_class_Variable_4) == 0x000060, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_CustomEvent_Loaded_4) == 0x000068, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_CustomEvent_Loaded_4' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_CreateDelegate_OutputDelegate) == 0x000070, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_CreateDelegate_OutputDelegate_1) == 0x000084, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, CallFunc_IsValid_ReturnValue_1) == 0x000094, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, CallFunc_isAnySlotSaveData_ReturnValue) == 0x000095, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::CallFunc_isAnySlotSaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, Temp_int_Variable) == 0x000098, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00009C, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_SwitchEnum_CmpSuccess) == 0x00009D, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, CallFunc_FadeOut_Black_ReturnValue) == 0x00009E, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::CallFunc_FadeOut_Black_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_SwitchEnum_CmpSuccess_1) == 0x00009F, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_MultiGate_FirstRun) == 0x0000A0, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_MultiGate_FirstRun' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_MultiGate_ScratchBool) == 0x0000A1, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_MultiGate_ScratchBool' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_MultiGate_ScratchIndex) == 0x0000A4, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_MultiGate_ScratchIndex' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000A8, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000B8, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_Event_EndPlayReason) == 0x0000C8, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, Temp_class_Variable_5) == 0x0000D0, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::Temp_class_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000D8, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000E8, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, CallFunc_GetFadeState_ReturnValue) == 0x0000F8, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::CallFunc_GetFadeState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_CustomEvent_Loaded_5) == 0x000100, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_CustomEvent_Loaded_5' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000108, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, CallFunc_GetLoadAllSaveDataHeaderResult_ReturnValue) == 0x000109, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::CallFunc_GetLoadAllSaveDataHeaderResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, CallFunc_WaitLoadAllSaveDataHeaderAsync_ReturnValue) == 0x00010A, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::CallFunc_WaitLoadAllSaveDataHeaderAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, CallFunc_Create_ReturnValue) == 0x000110, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, CallFunc_AddToWidgetPrio_ReturnValue) == 0x000118, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::CallFunc_AddToWidgetPrio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, CallFunc_SelectInt_ReturnValue) == 0x00011C, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, CallFunc_AddToWidgetPrio_ReturnValue_1) == 0x000120, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::CallFunc_AddToWidgetPrio_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, CallFunc_Create_ReturnValue_1) == 0x000128, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_CreateDelegate_OutputDelegate_6) == 0x000130, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, K2Node_CreateDelegate_OutputDelegate_7) == 0x000140, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl, CallFunc_CheckEnableConvertSaveData_ReturnValue) == 0x000150, "Member 'BP_TitleCtrl_C_ExecuteUbergraph_BP_TitleCtrl::CallFunc_CheckEnableConvertSaveData_ReturnValue' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_TitleCtrl_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_TitleCtrl_C_ReceiveEndPlay");
static_assert(sizeof(BP_TitleCtrl_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_TitleCtrl_C_ReceiveEndPlay");
static_assert(offsetof(BP_TitleCtrl_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_TitleCtrl_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_TitleCtrl_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_TitleCtrl_C_ReceiveTick");
static_assert(sizeof(BP_TitleCtrl_C_ReceiveTick) == 0x000004, "Wrong size on BP_TitleCtrl_C_ReceiveTick");
static_assert(offsetof(BP_TitleCtrl_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_TitleCtrl_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.OnLoaded_73E854CA4A4A00CCF0276EAD888280E9
// 0x0008 (0x0008 - 0x0000)
struct BP_TitleCtrl_C_OnLoaded_73E854CA4A4A00CCF0276EAD888280E9 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_OnLoaded_73E854CA4A4A00CCF0276EAD888280E9) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_OnLoaded_73E854CA4A4A00CCF0276EAD888280E9");
static_assert(sizeof(BP_TitleCtrl_C_OnLoaded_73E854CA4A4A00CCF0276EAD888280E9) == 0x000008, "Wrong size on BP_TitleCtrl_C_OnLoaded_73E854CA4A4A00CCF0276EAD888280E9");
static_assert(offsetof(BP_TitleCtrl_C_OnLoaded_73E854CA4A4A00CCF0276EAD888280E9, Loaded) == 0x000000, "Member 'BP_TitleCtrl_C_OnLoaded_73E854CA4A4A00CCF0276EAD888280E9::Loaded' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.OnLoaded_F626ACB2404288A4FBFAD08736779276
// 0x0008 (0x0008 - 0x0000)
struct BP_TitleCtrl_C_OnLoaded_F626ACB2404288A4FBFAD08736779276 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_OnLoaded_F626ACB2404288A4FBFAD08736779276) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_OnLoaded_F626ACB2404288A4FBFAD08736779276");
static_assert(sizeof(BP_TitleCtrl_C_OnLoaded_F626ACB2404288A4FBFAD08736779276) == 0x000008, "Wrong size on BP_TitleCtrl_C_OnLoaded_F626ACB2404288A4FBFAD08736779276");
static_assert(offsetof(BP_TitleCtrl_C_OnLoaded_F626ACB2404288A4FBFAD08736779276, Loaded) == 0x000000, "Member 'BP_TitleCtrl_C_OnLoaded_F626ACB2404288A4FBFAD08736779276::Loaded' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.OnLoaded_70DE6DFF41872028BF2E12927655FE49
// 0x0008 (0x0008 - 0x0000)
struct BP_TitleCtrl_C_OnLoaded_70DE6DFF41872028BF2E12927655FE49 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_OnLoaded_70DE6DFF41872028BF2E12927655FE49) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_OnLoaded_70DE6DFF41872028BF2E12927655FE49");
static_assert(sizeof(BP_TitleCtrl_C_OnLoaded_70DE6DFF41872028BF2E12927655FE49) == 0x000008, "Wrong size on BP_TitleCtrl_C_OnLoaded_70DE6DFF41872028BF2E12927655FE49");
static_assert(offsetof(BP_TitleCtrl_C_OnLoaded_70DE6DFF41872028BF2E12927655FE49, Loaded) == 0x000000, "Member 'BP_TitleCtrl_C_OnLoaded_70DE6DFF41872028BF2E12927655FE49::Loaded' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.OnLoaded_2D484EA94E42E2485BA45CAB3377E4D6
// 0x0008 (0x0008 - 0x0000)
struct BP_TitleCtrl_C_OnLoaded_2D484EA94E42E2485BA45CAB3377E4D6 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_OnLoaded_2D484EA94E42E2485BA45CAB3377E4D6) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_OnLoaded_2D484EA94E42E2485BA45CAB3377E4D6");
static_assert(sizeof(BP_TitleCtrl_C_OnLoaded_2D484EA94E42E2485BA45CAB3377E4D6) == 0x000008, "Wrong size on BP_TitleCtrl_C_OnLoaded_2D484EA94E42E2485BA45CAB3377E4D6");
static_assert(offsetof(BP_TitleCtrl_C_OnLoaded_2D484EA94E42E2485BA45CAB3377E4D6, Loaded) == 0x000000, "Member 'BP_TitleCtrl_C_OnLoaded_2D484EA94E42E2485BA45CAB3377E4D6::Loaded' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.OnLoaded_74EC4B344489C4AD2B7E65945E9C49A2
// 0x0008 (0x0008 - 0x0000)
struct BP_TitleCtrl_C_OnLoaded_74EC4B344489C4AD2B7E65945E9C49A2 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_OnLoaded_74EC4B344489C4AD2B7E65945E9C49A2) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_OnLoaded_74EC4B344489C4AD2B7E65945E9C49A2");
static_assert(sizeof(BP_TitleCtrl_C_OnLoaded_74EC4B344489C4AD2B7E65945E9C49A2) == 0x000008, "Wrong size on BP_TitleCtrl_C_OnLoaded_74EC4B344489C4AD2B7E65945E9C49A2");
static_assert(offsetof(BP_TitleCtrl_C_OnLoaded_74EC4B344489C4AD2B7E65945E9C49A2, Loaded) == 0x000000, "Member 'BP_TitleCtrl_C_OnLoaded_74EC4B344489C4AD2B7E65945E9C49A2::Loaded' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.OnLoaded_39B295964692A44CB6EAE6A93C776812
// 0x0008 (0x0008 - 0x0000)
struct BP_TitleCtrl_C_OnLoaded_39B295964692A44CB6EAE6A93C776812 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_OnLoaded_39B295964692A44CB6EAE6A93C776812) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_OnLoaded_39B295964692A44CB6EAE6A93C776812");
static_assert(sizeof(BP_TitleCtrl_C_OnLoaded_39B295964692A44CB6EAE6A93C776812) == 0x000008, "Wrong size on BP_TitleCtrl_C_OnLoaded_39B295964692A44CB6EAE6A93C776812");
static_assert(offsetof(BP_TitleCtrl_C_OnLoaded_39B295964692A44CB6EAE6A93C776812, Loaded) == 0x000000, "Member 'BP_TitleCtrl_C_OnLoaded_39B295964692A44CB6EAE6A93C776812::Loaded' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.TickFunc_TitleTop
// 0x00B0 (0x00B0 - 0x0000)
struct BP_TitleCtrl_C_TickFunc_TitleTop final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EnableCountUpNoInputTime_ReturnValue;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMouseCursorState                      CallFunc_PopShowMouseCursor_ReturnValue;           // 0x0020(0x0018)()
	bool                                          CallFunc_IsMovedMouseCursor_Moved;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIMovieCtrl_C>    CallFunc_Stop_self_CastInput;                      // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_UIMovieCtrl_C>    CallFunc_IsPlaying_self_CastInput;                 // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_isPlaying;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FadeIn_Black_ReturnValue;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFadeAnim_ReturnValue;                   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectGCManager*                      CallFunc_Get_ReturnValue_1;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFadeOut_ReturnValue;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FadeOut_Black_ReturnValue;                // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_UpdateTopInput_ButtonNum;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_UpdateTopInput_CursorNum;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateTopInput_TriggerNum;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_2;                 // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TitleCtrl_C_TickFunc_TitleTop) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_TickFunc_TitleTop");
static_assert(sizeof(BP_TitleCtrl_C_TickFunc_TitleTop) == 0x0000B0, "Wrong size on BP_TitleCtrl_C_TickFunc_TitleTop");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, DeltaSeconds) == 0x000000, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_EnableCountUpNoInputTime_ReturnValue) == 0x000018, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_EnableCountUpNoInputTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, Temp_int_Variable) == 0x00001C, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_PopShowMouseCursor_ReturnValue) == 0x000020, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_PopShowMouseCursor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_IsMovedMouseCursor_Moved) == 0x000038, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_IsMovedMouseCursor_Moved' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_Stop_self_CastInput) == 0x000040, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_Stop_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_IsPlaying_self_CastInput) == 0x000050, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_IsPlaying_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_IsPlaying_isPlaying) == 0x000060, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_IsPlaying_isPlaying' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_FadeIn_Black_ReturnValue) == 0x000061, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_FadeIn_Black_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_IsFadeAnim_ReturnValue) == 0x000062, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_IsFadeAnim_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_Get_ReturnValue_1) == 0x000068, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_Max_ReturnValue) == 0x000070, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_IsFadeOut_ReturnValue) == 0x000074, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_IsFadeOut_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_FadeOut_Black_ReturnValue) == 0x000075, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_FadeOut_Black_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, Temp_int_Variable_1) == 0x000078, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_Add_IntInt_ReturnValue_2) == 0x000084, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_Add_IntInt_ReturnValue_3) == 0x000088, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, K2Node_SwitchInteger_CmpSuccess) == 0x00008C, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, Temp_int_Variable_2) == 0x000090, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_Add_FloatFloat_ReturnValue) == 0x000098, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, Temp_int_Variable_3) == 0x00009C, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_UpdateTopInput_ButtonNum) == 0x0000A0, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_UpdateTopInput_ButtonNum' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_UpdateTopInput_CursorNum) == 0x0000A4, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_UpdateTopInput_CursorNum' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_UpdateTopInput_TriggerNum) == 0x0000A8, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_UpdateTopInput_TriggerNum' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, CallFunc_Not_PreBool_ReturnValue) == 0x0000A9, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, K2Node_SwitchInteger_CmpSuccess_1) == 0x0000AA, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_TitleTop, K2Node_SwitchInteger_CmpSuccess_2) == 0x0000AB, "Member 'BP_TitleCtrl_C_TickFunc_TitleTop::K2Node_SwitchInteger_CmpSuccess_2' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.DestroyCreatedObj
// 0x000A (0x000A - 0x0000)
struct BP_TitleCtrl_C_DestroyCreatedObj final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TitleCtrl_C_DestroyCreatedObj) == 0x000001, "Wrong alignment on BP_TitleCtrl_C_DestroyCreatedObj");
static_assert(sizeof(BP_TitleCtrl_C_DestroyCreatedObj) == 0x00000A, "Wrong size on BP_TitleCtrl_C_DestroyCreatedObj");
static_assert(offsetof(BP_TitleCtrl_C_DestroyCreatedObj, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_TitleCtrl_C_DestroyCreatedObj::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DestroyCreatedObj, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_TitleCtrl_C_DestroyCreatedObj::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DestroyCreatedObj, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'BP_TitleCtrl_C_DestroyCreatedObj::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DestroyCreatedObj, CallFunc_IsValid_ReturnValue_3) == 0x000003, "Member 'BP_TitleCtrl_C_DestroyCreatedObj::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DestroyCreatedObj, CallFunc_IsValid_ReturnValue_4) == 0x000004, "Member 'BP_TitleCtrl_C_DestroyCreatedObj::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DestroyCreatedObj, CallFunc_IsValid_ReturnValue_5) == 0x000005, "Member 'BP_TitleCtrl_C_DestroyCreatedObj::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DestroyCreatedObj, CallFunc_IsValid_ReturnValue_6) == 0x000006, "Member 'BP_TitleCtrl_C_DestroyCreatedObj::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DestroyCreatedObj, CallFunc_IsValid_ReturnValue_7) == 0x000007, "Member 'BP_TitleCtrl_C_DestroyCreatedObj::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DestroyCreatedObj, CallFunc_IsValid_ReturnValue_8) == 0x000008, "Member 'BP_TitleCtrl_C_DestroyCreatedObj::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DestroyCreatedObj, CallFunc_IsValid_ReturnValue_9) == 0x000009, "Member 'BP_TitleCtrl_C_DestroyCreatedObj::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.UpdateTopInput
// 0x0024 (0x0024 - 0x0000)
struct BP_TitleCtrl_C_UpdateTopInput final
{
public:
	int32                                         ButtonNum;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Cursornum;                                         // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TriggerNum;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_2;               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_3;               // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_4;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_5;               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_6;               // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_7;               // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_8;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_9;               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_10;              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_11;              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_12;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TitleCtrl_C_UpdateTopInput) == 0x000004, "Wrong alignment on BP_TitleCtrl_C_UpdateTopInput");
static_assert(sizeof(BP_TitleCtrl_C_UpdateTopInput) == 0x000024, "Wrong size on BP_TitleCtrl_C_UpdateTopInput");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, ButtonNum) == 0x000000, "Member 'BP_TitleCtrl_C_UpdateTopInput::ButtonNum' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, Cursornum) == 0x000004, "Member 'BP_TitleCtrl_C_UpdateTopInput::Cursornum' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, TriggerNum) == 0x000008, "Member 'BP_TitleCtrl_C_UpdateTopInput::TriggerNum' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_IsActionPadCheck_Success) == 0x000009, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_IsActionPadCheck_Success_1) == 0x00000A, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000C, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_IsActionPadCheck_Success_2) == 0x00000D, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_IsActionPadCheck_Success_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_IsActionPadCheck_Success_3) == 0x00000E, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_IsActionPadCheck_Success_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000F, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_Not_PreBool_ReturnValue_3) == 0x000010, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_IsActionPadCheck_Success_4) == 0x000011, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_IsActionPadCheck_Success_4' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_IsActionPadCheck_Success_5) == 0x000012, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_IsActionPadCheck_Success_5' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_BooleanOR_ReturnValue) == 0x000013, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_BooleanOR_ReturnValue_1) == 0x000014, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_IsActionPadCheck_Success_6) == 0x000016, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_IsActionPadCheck_Success_6' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_IsActionPadCheck_Success_7) == 0x000017, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_IsActionPadCheck_Success_7' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_BooleanOR_ReturnValue_2) == 0x000018, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_BooleanOR_ReturnValue_3) == 0x000019, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_BooleanAND_ReturnValue_1) == 0x00001A, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_BooleanAND_ReturnValue_2) == 0x00001B, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_IsActionPadCheck_Success_8) == 0x00001C, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_IsActionPadCheck_Success_8' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_IsActionPadCheck_Success_9) == 0x00001D, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_IsActionPadCheck_Success_9' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_IsActionPadCheck_Success_10) == 0x00001E, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_IsActionPadCheck_Success_10' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_IsActionPadCheck_Success_11) == 0x00001F, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_IsActionPadCheck_Success_11' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_UpdateTopInput, CallFunc_IsActionPadCheck_Success_12) == 0x000020, "Member 'BP_TitleCtrl_C_UpdateTopInput::CallFunc_IsActionPadCheck_Success_12' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.TickFunc_Initializing
// 0x0008 (0x0008 - 0x0000)
struct BP_TitleCtrl_C_TickFunc_Initializing final
{
public:
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_TickFunc_Initializing) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_TickFunc_Initializing");
static_assert(sizeof(BP_TitleCtrl_C_TickFunc_Initializing) == 0x000008, "Wrong size on BP_TitleCtrl_C_TickFunc_Initializing");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Initializing, CallFunc_Get_ReturnValue) == 0x000000, "Member 'BP_TitleCtrl_C_TickFunc_Initializing::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.TickStartTitleTop
// 0x0150 (0x0150 - 0x0000)
struct BP_TitleCtrl_C_TickStartTitleTop final
{
public:
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromName_ReturnValue;     // 0x0000(0x00D0)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IS_EDITOR_BUILD_ReturnValue;              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIMovieCtrl_C>    CallFunc_Play_self_CastInput;                      // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_UIMovieCtrl_C>    CallFunc_IsPlaying_self_CastInput;                 // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_isPlaying;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_bgmv_title_Ctrl_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FadeIn_Black_ReturnValue;                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TitleCtrl_C_TickStartTitleTop) == 0x000010, "Wrong alignment on BP_TitleCtrl_C_TickStartTitleTop");
static_assert(sizeof(BP_TitleCtrl_C_TickStartTitleTop) == 0x000150, "Wrong size on BP_TitleCtrl_C_TickStartTitleTop");
static_assert(offsetof(BP_TitleCtrl_C_TickStartTitleTop, CallFunc_GetDebugMenuItemFromName_ReturnValue) == 0x000000, "Member 'BP_TitleCtrl_C_TickStartTitleTop::CallFunc_GetDebugMenuItemFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickStartTitleTop, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_TitleCtrl_C_TickStartTitleTop::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickStartTitleTop, CallFunc_IS_EDITOR_BUILD_ReturnValue) == 0x0000D1, "Member 'BP_TitleCtrl_C_TickStartTitleTop::CallFunc_IS_EDITOR_BUILD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickStartTitleTop, CallFunc_Play_self_CastInput) == 0x0000D8, "Member 'BP_TitleCtrl_C_TickStartTitleTop::CallFunc_Play_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickStartTitleTop, CallFunc_IsPlaying_self_CastInput) == 0x0000E8, "Member 'BP_TitleCtrl_C_TickStartTitleTop::CallFunc_IsPlaying_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickStartTitleTop, CallFunc_IsPlaying_isPlaying) == 0x0000F8, "Member 'BP_TitleCtrl_C_TickStartTitleTop::CallFunc_IsPlaying_isPlaying' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickStartTitleTop, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'BP_TitleCtrl_C_TickStartTitleTop::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickStartTitleTop, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000130, "Member 'BP_TitleCtrl_C_TickStartTitleTop::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickStartTitleTop, CallFunc_IsValid_ReturnValue) == 0x000138, "Member 'BP_TitleCtrl_C_TickStartTitleTop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickStartTitleTop, CallFunc_FinishSpawningActor_ReturnValue) == 0x000140, "Member 'BP_TitleCtrl_C_TickStartTitleTop::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickStartTitleTop, CallFunc_FadeIn_Black_ReturnValue) == 0x000148, "Member 'BP_TitleCtrl_C_TickStartTitleTop::CallFunc_FadeIn_Black_ReturnValue' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.TickStartContinue
// 0x0050 (0x0050 - 0x0000)
struct BP_TitleCtrl_C_TickStartContinue final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_TickStartContinue) == 0x000010, "Wrong alignment on BP_TitleCtrl_C_TickStartContinue");
static_assert(sizeof(BP_TitleCtrl_C_TickStartContinue) == 0x000050, "Wrong size on BP_TitleCtrl_C_TickStartContinue");
static_assert(offsetof(BP_TitleCtrl_C_TickStartContinue, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_TitleCtrl_C_TickStartContinue::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickStartContinue, K2Node_ClassDynamicCast_AsActor) == 0x000030, "Member 'BP_TitleCtrl_C_TickStartContinue::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickStartContinue, K2Node_ClassDynamicCast_bSuccess) == 0x000038, "Member 'BP_TitleCtrl_C_TickStartContinue::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickStartContinue, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_TitleCtrl_C_TickStartContinue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickStartContinue, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BP_TitleCtrl_C_TickStartContinue::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickStartContinue, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'BP_TitleCtrl_C_TickStartContinue::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.TickFunc_Continue
// 0x00D0 (0x00D0 - 0x0000)
struct BP_TitleCtrl_C_TickFunc_Continue final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIMovieCtrl_C>    CallFunc_Stop_self_CastInput;                      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_2;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIMovieCtrl_C>    CallFunc_IsPlaying_self_CastInput;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_isPlaying;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SaveLoadCtrl_C>   K2Node_DynamicCast_AsBPI_Save_Load_Ctrl;           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SaveLoadCtrl_C>   K2Node_DynamicCast_AsBPI_Save_Load_Ctrl_1;         // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isSetUpComplete_outValue;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectGCManager*                      CallFunc_Get_ReturnValue;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFadeAnim_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SaveLoadCtrl_C>   K2Node_DynamicCast_AsBPI_Save_Load_Ctrl_2;         // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SaveLoadEndType                             CallFunc_isEndSaveLoad_outEndType;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SaveLoadCtrl_C>   K2Node_DynamicCast_AsBPI_Save_Load_Ctrl_3;         // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SaveLoadCtrl_C>   K2Node_DynamicCast_AsBPI_Save_Load_Ctrl_4;         // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TitleCtrl_C_TickFunc_Continue) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_TickFunc_Continue");
static_assert(sizeof(BP_TitleCtrl_C_TickFunc_Continue) == 0x0000D0, "Wrong size on BP_TitleCtrl_C_TickFunc_Continue");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, Temp_int_Variable) == 0x000000, "Member 'BP_TitleCtrl_C_TickFunc_Continue::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, Temp_int_Variable_1) == 0x000004, "Member 'BP_TitleCtrl_C_TickFunc_Continue::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_TitleCtrl_C_TickFunc_Continue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, CallFunc_Stop_self_CastInput) == 0x000010, "Member 'BP_TitleCtrl_C_TickFunc_Continue::CallFunc_Stop_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, Temp_int_Variable_2) == 0x000020, "Member 'BP_TitleCtrl_C_TickFunc_Continue::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, CallFunc_IsPlaying_self_CastInput) == 0x000028, "Member 'BP_TitleCtrl_C_TickFunc_Continue::CallFunc_IsPlaying_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, CallFunc_IsPlaying_isPlaying) == 0x000038, "Member 'BP_TitleCtrl_C_TickFunc_Continue::CallFunc_IsPlaying_isPlaying' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, K2Node_DynamicCast_AsBPI_Save_Load_Ctrl) == 0x000040, "Member 'BP_TitleCtrl_C_TickFunc_Continue::K2Node_DynamicCast_AsBPI_Save_Load_Ctrl' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_TitleCtrl_C_TickFunc_Continue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_TitleCtrl_C_TickFunc_Continue::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, K2Node_DynamicCast_AsBPI_Save_Load_Ctrl_1) == 0x000058, "Member 'BP_TitleCtrl_C_TickFunc_Continue::K2Node_DynamicCast_AsBPI_Save_Load_Ctrl_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_TitleCtrl_C_TickFunc_Continue::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, CallFunc_Add_IntInt_ReturnValue_2) == 0x00006C, "Member 'BP_TitleCtrl_C_TickFunc_Continue::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, CallFunc_isSetUpComplete_outValue) == 0x000070, "Member 'BP_TitleCtrl_C_TickFunc_Continue::CallFunc_isSetUpComplete_outValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, CallFunc_Add_IntInt_ReturnValue_3) == 0x000074, "Member 'BP_TitleCtrl_C_TickFunc_Continue::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, CallFunc_Get_ReturnValue) == 0x000078, "Member 'BP_TitleCtrl_C_TickFunc_Continue::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, CallFunc_IsFadeAnim_ReturnValue) == 0x000080, "Member 'BP_TitleCtrl_C_TickFunc_Continue::CallFunc_IsFadeAnim_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, Temp_int_Variable_3) == 0x000084, "Member 'BP_TitleCtrl_C_TickFunc_Continue::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, K2Node_DynamicCast_AsBPI_Save_Load_Ctrl_2) == 0x000088, "Member 'BP_TitleCtrl_C_TickFunc_Continue::K2Node_DynamicCast_AsBPI_Save_Load_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'BP_TitleCtrl_C_TickFunc_Continue::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, CallFunc_isEndSaveLoad_outEndType) == 0x000099, "Member 'BP_TitleCtrl_C_TickFunc_Continue::CallFunc_isEndSaveLoad_outEndType' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, K2Node_SwitchEnum_CmpSuccess) == 0x00009A, "Member 'BP_TitleCtrl_C_TickFunc_Continue::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, K2Node_DynamicCast_AsBPI_Save_Load_Ctrl_3) == 0x0000A0, "Member 'BP_TitleCtrl_C_TickFunc_Continue::K2Node_DynamicCast_AsBPI_Save_Load_Ctrl_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, K2Node_DynamicCast_bSuccess_3) == 0x0000B0, "Member 'BP_TitleCtrl_C_TickFunc_Continue::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, K2Node_DynamicCast_AsBPI_Save_Load_Ctrl_4) == 0x0000B8, "Member 'BP_TitleCtrl_C_TickFunc_Continue::K2Node_DynamicCast_AsBPI_Save_Load_Ctrl_4' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, K2Node_DynamicCast_bSuccess_4) == 0x0000C8, "Member 'BP_TitleCtrl_C_TickFunc_Continue::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Continue, K2Node_SwitchInteger_CmpSuccess) == 0x0000C9, "Member 'BP_TitleCtrl_C_TickFunc_Continue::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.TickFunc_Option
// 0x0098 (0x0098 - 0x0000)
struct BP_TitleCtrl_C_TickFunc_Option final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIMovieCtrl_C>    CallFunc_Stop_self_CastInput;                      // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIMovieCtrl_C>    CallFunc_IsPlaying_self_CastInput;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_isPlaying;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_OptionCtrl_C>     K2Node_DynamicCast_AsBPI_Option_Ctrl;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_OptionCtrl_C>     K2Node_DynamicCast_AsBPI_Option_Ctrl_1;            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_OptionCtrl_C>     K2Node_DynamicCast_AsBPI_Option_Ctrl_2;            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCompleteInitialize_IsComplete;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_OptionCtrl_C>     K2Node_DynamicCast_AsBPI_Option_Ctrl_3;            // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEndOptionCtrl_IsEnd;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TitleCtrl_C_TickFunc_Option) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_TickFunc_Option");
static_assert(sizeof(BP_TitleCtrl_C_TickFunc_Option) == 0x000098, "Wrong size on BP_TitleCtrl_C_TickFunc_Option");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, Temp_int_Variable) == 0x000000, "Member 'BP_TitleCtrl_C_TickFunc_Option::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, Temp_int_Variable_1) == 0x000004, "Member 'BP_TitleCtrl_C_TickFunc_Option::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, CallFunc_Stop_self_CastInput) == 0x000008, "Member 'BP_TitleCtrl_C_TickFunc_Option::CallFunc_Stop_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_TitleCtrl_C_TickFunc_Option::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_TitleCtrl_C_TickFunc_Option::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, CallFunc_IsPlaying_self_CastInput) == 0x000020, "Member 'BP_TitleCtrl_C_TickFunc_Option::CallFunc_IsPlaying_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, CallFunc_IsPlaying_isPlaying) == 0x000030, "Member 'BP_TitleCtrl_C_TickFunc_Option::CallFunc_IsPlaying_isPlaying' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, Temp_int_Variable_2) == 0x000034, "Member 'BP_TitleCtrl_C_TickFunc_Option::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, K2Node_DynamicCast_AsBPI_Option_Ctrl) == 0x000038, "Member 'BP_TitleCtrl_C_TickFunc_Option::K2Node_DynamicCast_AsBPI_Option_Ctrl' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_TitleCtrl_C_TickFunc_Option::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, CallFunc_Add_IntInt_ReturnValue_2) == 0x00004C, "Member 'BP_TitleCtrl_C_TickFunc_Option::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, K2Node_DynamicCast_AsBPI_Option_Ctrl_1) == 0x000050, "Member 'BP_TitleCtrl_C_TickFunc_Option::K2Node_DynamicCast_AsBPI_Option_Ctrl_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_TitleCtrl_C_TickFunc_Option::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, K2Node_DynamicCast_AsBPI_Option_Ctrl_2) == 0x000068, "Member 'BP_TitleCtrl_C_TickFunc_Option::K2Node_DynamicCast_AsBPI_Option_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_TitleCtrl_C_TickFunc_Option::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, CallFunc_IsCompleteInitialize_IsComplete) == 0x000079, "Member 'BP_TitleCtrl_C_TickFunc_Option::CallFunc_IsCompleteInitialize_IsComplete' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, K2Node_SwitchInteger_CmpSuccess) == 0x00007A, "Member 'BP_TitleCtrl_C_TickFunc_Option::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, K2Node_DynamicCast_AsBPI_Option_Ctrl_3) == 0x000080, "Member 'BP_TitleCtrl_C_TickFunc_Option::K2Node_DynamicCast_AsBPI_Option_Ctrl_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, K2Node_DynamicCast_bSuccess_3) == 0x000090, "Member 'BP_TitleCtrl_C_TickFunc_Option::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Option, CallFunc_IsEndOptionCtrl_IsEnd) == 0x000091, "Member 'BP_TitleCtrl_C_TickFunc_Option::CallFunc_IsEndOptionCtrl_IsEnd' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.EndCtrl
// 0x0008 (0x0008 - 0x0000)
struct BP_TitleCtrl_C_EndCtrl final
{
public:
	E_TitleEndType                                In_EndType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NewGameType                                 In_NewGameType;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         In_SaveDataID;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_EndCtrl) == 0x000004, "Wrong alignment on BP_TitleCtrl_C_EndCtrl");
static_assert(sizeof(BP_TitleCtrl_C_EndCtrl) == 0x000008, "Wrong size on BP_TitleCtrl_C_EndCtrl");
static_assert(offsetof(BP_TitleCtrl_C_EndCtrl, In_EndType) == 0x000000, "Member 'BP_TitleCtrl_C_EndCtrl::In_EndType' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_EndCtrl, In_NewGameType) == 0x000001, "Member 'BP_TitleCtrl_C_EndCtrl::In_NewGameType' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_EndCtrl, In_SaveDataID) == 0x000004, "Member 'BP_TitleCtrl_C_EndCtrl::In_SaveDataID' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.SpawnOptionCtrl
// 0x0050 (0x0050 - 0x0000)
struct BP_TitleCtrl_C_SpawnOptionCtrl final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_SpawnOptionCtrl) == 0x000010, "Wrong alignment on BP_TitleCtrl_C_SpawnOptionCtrl");
static_assert(sizeof(BP_TitleCtrl_C_SpawnOptionCtrl) == 0x000050, "Wrong size on BP_TitleCtrl_C_SpawnOptionCtrl");
static_assert(offsetof(BP_TitleCtrl_C_SpawnOptionCtrl, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_TitleCtrl_C_SpawnOptionCtrl::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnOptionCtrl, K2Node_ClassDynamicCast_AsActor) == 0x000030, "Member 'BP_TitleCtrl_C_SpawnOptionCtrl::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnOptionCtrl, K2Node_ClassDynamicCast_bSuccess) == 0x000038, "Member 'BP_TitleCtrl_C_SpawnOptionCtrl::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnOptionCtrl, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_TitleCtrl_C_SpawnOptionCtrl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnOptionCtrl, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BP_TitleCtrl_C_SpawnOptionCtrl::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnOptionCtrl, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'BP_TitleCtrl_C_SpawnOptionCtrl::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.SpawnDifficultySelectCtrl
// 0x0050 (0x0050 - 0x0000)
struct BP_TitleCtrl_C_SpawnDifficultySelectCtrl final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_SpawnDifficultySelectCtrl) == 0x000010, "Wrong alignment on BP_TitleCtrl_C_SpawnDifficultySelectCtrl");
static_assert(sizeof(BP_TitleCtrl_C_SpawnDifficultySelectCtrl) == 0x000050, "Wrong size on BP_TitleCtrl_C_SpawnDifficultySelectCtrl");
static_assert(offsetof(BP_TitleCtrl_C_SpawnDifficultySelectCtrl, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_TitleCtrl_C_SpawnDifficultySelectCtrl::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnDifficultySelectCtrl, K2Node_ClassDynamicCast_AsActor) == 0x000030, "Member 'BP_TitleCtrl_C_SpawnDifficultySelectCtrl::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnDifficultySelectCtrl, K2Node_ClassDynamicCast_bSuccess) == 0x000038, "Member 'BP_TitleCtrl_C_SpawnDifficultySelectCtrl::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnDifficultySelectCtrl, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_TitleCtrl_C_SpawnDifficultySelectCtrl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnDifficultySelectCtrl, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BP_TitleCtrl_C_SpawnDifficultySelectCtrl::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnDifficultySelectCtrl, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'BP_TitleCtrl_C_SpawnDifficultySelectCtrl::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.TickFunc_DifficultySelect
// 0x0290 (0x0290 - 0x0000)
struct BP_TitleCtrl_C_TickFunc_DifficultySelect final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIMovieCtrl_C>    CallFunc_Stop_self_CastInput;                      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_UIMovieCtrl_C>    CallFunc_IsPlaying_self_CastInput;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_isPlaying;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromName_ReturnValue;     // 0x0038(0x00D0)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DifficulitySelectCtrl_C> K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl;  // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DifficulitySelectEndType                    CallFunc_getDifficulitySelectEndType_outType;      // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BenefitSelectCtrl_C> K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl;      // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BenefitSelectCtrl_C> K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl_1;    // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BenefitSelectCtrl_C> K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl_2;    // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExistBenefitData_IsExist;               // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBenefitData                           CallFunc_GetBenefitData_Data;                      // 0x0170(0x0038)()
	TScriptInterface<class IBPI_BenefitSelectCtrl_C> K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl_3;    // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEndBenefitSelectCtrl_IsEnd;             // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BenefitSelectCtrl_C> K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl_4;    // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BenefitSelectCtrl_C> K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl_5;    // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEndBenefitDataLoad_IsEnd;               // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F2[0x2];                                      // 0x01F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DifficulitySelectCtrl_C> K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl_1; // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DifficulitySelectCtrl_C> K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl_2; // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_DifficulitySelectEndType                    CallFunc_getDifficulitySelectEndType_outType_1;    // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DifficulitySelectEndType                    CallFunc_getDifficulitySelectEndType_outType_2;    // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DifficulitySelectCtrl_C> K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl_3; // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_GAME_DIFFICULTY                             CallFunc_getSelectDifficulity_outType;             // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DifficulitySelectCtrl_C> K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl_4; // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DifficulitySelectEndType                    CallFunc_getDifficulitySelectEndType_outType_3;    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_263[0x5];                                      // 0x0263(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DifficulitySelectCtrl_C> K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl_5; // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FadeIn_Black_ReturnValue;                 // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFadeAnim_ReturnValue;                   // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FadeOut_Black_ReturnValue;                // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x028E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TitleCtrl_C_TickFunc_DifficultySelect) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_TickFunc_DifficultySelect");
static_assert(sizeof(BP_TitleCtrl_C_TickFunc_DifficultySelect) == 0x000290, "Wrong size on BP_TitleCtrl_C_TickFunc_DifficultySelect");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, Temp_int_Variable) == 0x000000, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, Temp_int_Variable_1) == 0x000004, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, Temp_int_Variable_2) == 0x000008, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, Temp_int_Variable_3) == 0x00000C, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_Stop_self_CastInput) == 0x000010, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_Stop_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_IsPlaying_self_CastInput) == 0x000020, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_IsPlaying_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_IsPlaying_isPlaying) == 0x000030, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_IsPlaying_isPlaying' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_GetDebugMenuItemFromName_ReturnValue) == 0x000038, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_GetDebugMenuItemFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000108, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl) == 0x000110, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_getDifficulitySelectEndType_outType) == 0x000121, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_getDifficulitySelectEndType_outType' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl) == 0x000128, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_bSuccess_1) == 0x000138, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000139, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl_1) == 0x000140, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_bSuccess_2) == 0x000150, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl_2) == 0x000158, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_bSuccess_3) == 0x000168, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_IsExistBenefitData_IsExist) == 0x000169, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_IsExistBenefitData_IsExist' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_GetBenefitData_Data) == 0x000170, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_GetBenefitData_Data' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl_3) == 0x0001A8, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_bSuccess_4) == 0x0001B8, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_Add_IntInt_ReturnValue) == 0x0001BC, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_IsEndBenefitSelectCtrl_IsEnd) == 0x0001C0, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_IsEndBenefitSelectCtrl_IsEnd' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001C4, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl_4) == 0x0001C8, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl_4' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_bSuccess_5) == 0x0001D8, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl_5) == 0x0001E0, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_AsBPI_Benefit_Select_Ctrl_5' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_bSuccess_6) == 0x0001F0, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_IsEndBenefitDataLoad_IsEnd) == 0x0001F1, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_IsEndBenefitDataLoad_IsEnd' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, Temp_int_Variable_4) == 0x0001F4, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001F8, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl_1) == 0x000200, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_bSuccess_7) == 0x000210, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl_2) == 0x000218, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_bSuccess_8) == 0x000228, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_getDifficulitySelectEndType_outType_1) == 0x000229, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_getDifficulitySelectEndType_outType_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_getDifficulitySelectEndType_outType_2) == 0x00022A, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_getDifficulitySelectEndType_outType_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_SwitchEnum_CmpSuccess) == 0x00022B, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_SwitchEnum_CmpSuccess_1) == 0x00022C, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl_3) == 0x000230, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_bSuccess_9) == 0x000240, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_getSelectDifficulity_outType) == 0x000241, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_getSelectDifficulity_outType' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl_4) == 0x000248, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl_4' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_bSuccess_10) == 0x000258, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_Add_IntInt_ReturnValue_3) == 0x00025C, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_getDifficulitySelectEndType_outType_3) == 0x000260, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_getDifficulitySelectEndType_outType_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000261, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000262, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl_5) == 0x000268, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_AsBPI_Difficulity_Select_Ctrl_5' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_DynamicCast_bSuccess_11) == 0x000278, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_Add_IntInt_ReturnValue_4) == 0x00027C, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_Add_IntInt_ReturnValue_5) == 0x000280, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_FadeIn_Black_ReturnValue) == 0x000284, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_FadeIn_Black_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, Temp_int_Variable_5) == 0x000288, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_IsFadeAnim_ReturnValue) == 0x00028C, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_IsFadeAnim_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, CallFunc_FadeOut_Black_ReturnValue) == 0x00028D, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::CallFunc_FadeOut_Black_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_DifficultySelect, K2Node_SwitchInteger_CmpSuccess) == 0x00028E, "Member 'BP_TitleCtrl_C_TickFunc_DifficultySelect::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.SpawnBenefitSelectCtrl
// 0x0050 (0x0050 - 0x0000)
struct BP_TitleCtrl_C_SpawnBenefitSelectCtrl final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_SpawnBenefitSelectCtrl) == 0x000010, "Wrong alignment on BP_TitleCtrl_C_SpawnBenefitSelectCtrl");
static_assert(sizeof(BP_TitleCtrl_C_SpawnBenefitSelectCtrl) == 0x000050, "Wrong size on BP_TitleCtrl_C_SpawnBenefitSelectCtrl");
static_assert(offsetof(BP_TitleCtrl_C_SpawnBenefitSelectCtrl, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_TitleCtrl_C_SpawnBenefitSelectCtrl::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnBenefitSelectCtrl, K2Node_ClassDynamicCast_AsActor) == 0x000030, "Member 'BP_TitleCtrl_C_SpawnBenefitSelectCtrl::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnBenefitSelectCtrl, K2Node_ClassDynamicCast_bSuccess) == 0x000038, "Member 'BP_TitleCtrl_C_SpawnBenefitSelectCtrl::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnBenefitSelectCtrl, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_TitleCtrl_C_SpawnBenefitSelectCtrl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnBenefitSelectCtrl, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BP_TitleCtrl_C_SpawnBenefitSelectCtrl::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnBenefitSelectCtrl, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'BP_TitleCtrl_C_SpawnBenefitSelectCtrl::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.SpawnCopyrightCtrl
// 0x0050 (0x0050 - 0x0000)
struct BP_TitleCtrl_C_SpawnCopyrightCtrl final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_SpawnCopyrightCtrl) == 0x000010, "Wrong alignment on BP_TitleCtrl_C_SpawnCopyrightCtrl");
static_assert(sizeof(BP_TitleCtrl_C_SpawnCopyrightCtrl) == 0x000050, "Wrong size on BP_TitleCtrl_C_SpawnCopyrightCtrl");
static_assert(offsetof(BP_TitleCtrl_C_SpawnCopyrightCtrl, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_TitleCtrl_C_SpawnCopyrightCtrl::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnCopyrightCtrl, K2Node_ClassDynamicCast_AsActor) == 0x000030, "Member 'BP_TitleCtrl_C_SpawnCopyrightCtrl::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnCopyrightCtrl, K2Node_ClassDynamicCast_bSuccess) == 0x000038, "Member 'BP_TitleCtrl_C_SpawnCopyrightCtrl::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnCopyrightCtrl, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_TitleCtrl_C_SpawnCopyrightCtrl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnCopyrightCtrl, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BP_TitleCtrl_C_SpawnCopyrightCtrl::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnCopyrightCtrl, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'BP_TitleCtrl_C_SpawnCopyrightCtrl::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.SpawnConvertCtrl
// 0x0050 (0x0050 - 0x0000)
struct BP_TitleCtrl_C_SpawnConvertCtrl final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_SpawnConvertCtrl) == 0x000010, "Wrong alignment on BP_TitleCtrl_C_SpawnConvertCtrl");
static_assert(sizeof(BP_TitleCtrl_C_SpawnConvertCtrl) == 0x000050, "Wrong size on BP_TitleCtrl_C_SpawnConvertCtrl");
static_assert(offsetof(BP_TitleCtrl_C_SpawnConvertCtrl, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_TitleCtrl_C_SpawnConvertCtrl::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnConvertCtrl, K2Node_ClassDynamicCast_AsActor) == 0x000030, "Member 'BP_TitleCtrl_C_SpawnConvertCtrl::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnConvertCtrl, K2Node_ClassDynamicCast_bSuccess) == 0x000038, "Member 'BP_TitleCtrl_C_SpawnConvertCtrl::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnConvertCtrl, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_TitleCtrl_C_SpawnConvertCtrl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnConvertCtrl, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BP_TitleCtrl_C_SpawnConvertCtrl::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnConvertCtrl, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'BP_TitleCtrl_C_SpawnConvertCtrl::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.HelpWindowExecutionClose
// 0x0050 (0x0050 - 0x0000)
struct BP_TitleCtrl_C_HelpWindowExecutionClose final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_BPI_GetUIManager_UIManager;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CommonHelpWindowCtrl_C> CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor;     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TitleCtrl_C_HelpWindowExecutionClose) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_HelpWindowExecutionClose");
static_assert(sizeof(BP_TitleCtrl_C_HelpWindowExecutionClose) == 0x000050, "Wrong size on BP_TitleCtrl_C_HelpWindowExecutionClose");
static_assert(offsetof(BP_TitleCtrl_C_HelpWindowExecutionClose, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'BP_TitleCtrl_C_HelpWindowExecutionClose::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_HelpWindowExecutionClose, K2Node_DynamicCast_AsBPI_UIManager) == 0x000008, "Member 'BP_TitleCtrl_C_HelpWindowExecutionClose::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_HelpWindowExecutionClose, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_TitleCtrl_C_HelpWindowExecutionClose::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_HelpWindowExecutionClose, CallFunc_BPI_GetUIManager_UIManager) == 0x000020, "Member 'BP_TitleCtrl_C_HelpWindowExecutionClose::CallFunc_BPI_GetUIManager_UIManager' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_HelpWindowExecutionClose, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000028, "Member 'BP_TitleCtrl_C_HelpWindowExecutionClose::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_HelpWindowExecutionClose, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_TitleCtrl_C_HelpWindowExecutionClose::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_HelpWindowExecutionClose, CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor) == 0x000040, "Member 'BP_TitleCtrl_C_HelpWindowExecutionClose::CallFunc_BPI_GetCommonHelpWindowCtrl_OutActor' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.DispFunc_OnHoveredMouse
// 0x0008 (0x0008 - 0x0000)
struct BP_TitleCtrl_C_DispFunc_OnHoveredMouse final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TitleCtrl_C_DispFunc_OnHoveredMouse) == 0x000004, "Wrong alignment on BP_TitleCtrl_C_DispFunc_OnHoveredMouse");
static_assert(sizeof(BP_TitleCtrl_C_DispFunc_OnHoveredMouse) == 0x000008, "Wrong size on BP_TitleCtrl_C_DispFunc_OnHoveredMouse");
static_assert(offsetof(BP_TitleCtrl_C_DispFunc_OnHoveredMouse, Param_Index) == 0x000000, "Member 'BP_TitleCtrl_C_DispFunc_OnHoveredMouse::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DispFunc_OnHoveredMouse, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_TitleCtrl_C_DispFunc_OnHoveredMouse::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.DispFunc_OnClickedMouse
// 0x0004 (0x0004 - 0x0000)
struct BP_TitleCtrl_C_DispFunc_OnClickedMouse final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_DispFunc_OnClickedMouse) == 0x000004, "Wrong alignment on BP_TitleCtrl_C_DispFunc_OnClickedMouse");
static_assert(sizeof(BP_TitleCtrl_C_DispFunc_OnClickedMouse) == 0x000004, "Wrong size on BP_TitleCtrl_C_DispFunc_OnClickedMouse");
static_assert(offsetof(BP_TitleCtrl_C_DispFunc_OnClickedMouse, Param_Index) == 0x000000, "Member 'BP_TitleCtrl_C_DispFunc_OnClickedMouse::Param_Index' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.DecideTopSelection
// 0x0020 (0x0020 - 0x0000)
struct BP_TitleCtrl_C_DecideTopSelection final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TITLE_TOP_SELECTION                         CallFunc_Array_Get_Item;                           // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue_1;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_DecideTopSelection) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_DecideTopSelection");
static_assert(sizeof(BP_TitleCtrl_C_DecideTopSelection) == 0x000020, "Wrong size on BP_TitleCtrl_C_DecideTopSelection");
static_assert(offsetof(BP_TitleCtrl_C_DecideTopSelection, Param_Index) == 0x000000, "Member 'BP_TitleCtrl_C_DecideTopSelection::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DecideTopSelection, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_TitleCtrl_C_DecideTopSelection::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DecideTopSelection, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000005, "Member 'BP_TitleCtrl_C_DecideTopSelection::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DecideTopSelection, CallFunc_Array_Get_Item) == 0x000006, "Member 'BP_TitleCtrl_C_DecideTopSelection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DecideTopSelection, K2Node_SwitchEnum_CmpSuccess) == 0x000007, "Member 'BP_TitleCtrl_C_DecideTopSelection::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DecideTopSelection, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BP_TitleCtrl_C_DecideTopSelection::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DecideTopSelection, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'BP_TitleCtrl_C_DecideTopSelection::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DecideTopSelection, CallFunc_Max_ReturnValue) == 0x000014, "Member 'BP_TitleCtrl_C_DecideTopSelection::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DecideTopSelection, CallFunc_Get_ReturnValue_1) == 0x000018, "Member 'BP_TitleCtrl_C_DecideTopSelection::CallFunc_Get_ReturnValue_1' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.ChangeTopCursor
// 0x0040 (0x0040 - 0x0000)
struct BP_TitleCtrl_C_ChangeTopCursor final
{
public:
	int32                                         Add;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Set;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLimitStop;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_NextCursor;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_ChangeTopCursor) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_ChangeTopCursor");
static_assert(sizeof(BP_TitleCtrl_C_ChangeTopCursor) == 0x000040, "Wrong size on BP_TitleCtrl_C_ChangeTopCursor");
static_assert(offsetof(BP_TitleCtrl_C_ChangeTopCursor, Add) == 0x000000, "Member 'BP_TitleCtrl_C_ChangeTopCursor::Add' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ChangeTopCursor, Set) == 0x000004, "Member 'BP_TitleCtrl_C_ChangeTopCursor::Set' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ChangeTopCursor, IsLimitStop) == 0x000008, "Member 'BP_TitleCtrl_C_ChangeTopCursor::IsLimitStop' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ChangeTopCursor, Lo_NextCursor) == 0x00000C, "Member 'BP_TitleCtrl_C_ChangeTopCursor::Lo_NextCursor' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ChangeTopCursor, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BP_TitleCtrl_C_ChangeTopCursor::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ChangeTopCursor, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_TitleCtrl_C_ChangeTopCursor::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ChangeTopCursor, CallFunc_Clamp_ReturnValue) == 0x000018, "Member 'BP_TitleCtrl_C_ChangeTopCursor::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ChangeTopCursor, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_TitleCtrl_C_ChangeTopCursor::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ChangeTopCursor, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_TitleCtrl_C_ChangeTopCursor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ChangeTopCursor, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_TitleCtrl_C_ChangeTopCursor::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ChangeTopCursor, CallFunc_Percent_IntInt_ReturnValue) == 0x000028, "Member 'BP_TitleCtrl_C_ChangeTopCursor::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ChangeTopCursor, CallFunc_Add_IntInt_ReturnValue_2) == 0x00002C, "Member 'BP_TitleCtrl_C_ChangeTopCursor::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ChangeTopCursor, CallFunc_Clamp_ReturnValue_1) == 0x000030, "Member 'BP_TitleCtrl_C_ChangeTopCursor::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_ChangeTopCursor, CallFunc_Get_ReturnValue) == 0x000038, "Member 'BP_TitleCtrl_C_ChangeTopCursor::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.TickFunc_Copyright
// 0x00A0 (0x00A0 - 0x0000)
struct BP_TitleCtrl_C_TickFunc_Copyright final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIMovieCtrl_C>    CallFunc_Stop_self_CastInput;                      // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_UIMovieCtrl_C>    CallFunc_IsPlaying_self_CastInput;                 // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_isPlaying;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CopyrightCtrl_C>  K2Node_DynamicCast_AsBPI_Copyright_Ctrl;           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CopyrightCtrl_C>  K2Node_DynamicCast_AsBPI_Copyright_Ctrl_1;         // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnd_IsEnd;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CopyrightCtrl_C>  K2Node_DynamicCast_AsBPI_Copyright_Ctrl_2;         // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CopyrightCtrl_C>  K2Node_DynamicCast_AsBPI_Copyright_Ctrl_3;         // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TitleCtrl_C_TickFunc_Copyright) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_TickFunc_Copyright");
static_assert(sizeof(BP_TitleCtrl_C_TickFunc_Copyright) == 0x0000A0, "Wrong size on BP_TitleCtrl_C_TickFunc_Copyright");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, Temp_int_Variable) == 0x000000, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, Temp_int_Variable_1) == 0x000004, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, CallFunc_Stop_self_CastInput) == 0x000008, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::CallFunc_Stop_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, CallFunc_IsPlaying_self_CastInput) == 0x000018, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::CallFunc_IsPlaying_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, CallFunc_IsPlaying_isPlaying) == 0x000028, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::CallFunc_IsPlaying_isPlaying' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, Temp_int_Variable_2) == 0x00002C, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, K2Node_DynamicCast_AsBPI_Copyright_Ctrl) == 0x000030, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::K2Node_DynamicCast_AsBPI_Copyright_Ctrl' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, K2Node_DynamicCast_AsBPI_Copyright_Ctrl_1) == 0x000048, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::K2Node_DynamicCast_AsBPI_Copyright_Ctrl_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, CallFunc_IsEnd_IsEnd) == 0x000059, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::CallFunc_IsEnd_IsEnd' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, K2Node_DynamicCast_AsBPI_Copyright_Ctrl_2) == 0x000060, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::K2Node_DynamicCast_AsBPI_Copyright_Ctrl_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, K2Node_DynamicCast_AsBPI_Copyright_Ctrl_3) == 0x000078, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::K2Node_DynamicCast_AsBPI_Copyright_Ctrl_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, CallFunc_Add_IntInt_ReturnValue_2) == 0x000094, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Copyright, K2Node_SwitchInteger_CmpSuccess) == 0x000098, "Member 'BP_TitleCtrl_C_TickFunc_Copyright::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.TickFunc_SelectEnd
// 0x00D0 (0x00D0 - 0x0000)
struct BP_TitleCtrl_C_TickFunc_SelectEnd final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFadeOut_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FadeOut_Black_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_1;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor;         // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor_1;       // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IIsClosedDialogWindow_OutFinished;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IIsOpenedDialogWindow_OutFinished;        // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_2;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DialogCtrlUpdate_SelectedYes;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DialogCtrlUpdate_SelectedNo;              // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_2;              // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor_2;       // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IIsClosedDialogWindow_OutFinished_1;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TitleCtrl_C_TickFunc_SelectEnd) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_TickFunc_SelectEnd");
static_assert(sizeof(BP_TitleCtrl_C_TickFunc_SelectEnd) == 0x0000D0, "Wrong size on BP_TitleCtrl_C_TickFunc_SelectEnd");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, Temp_int_Variable) == 0x000000, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, Temp_int_Variable_1) == 0x000004, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, Temp_int_Variable_2) == 0x000008, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, CallFunc_IsFadeOut_ReturnValue) == 0x00000C, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::CallFunc_IsFadeOut_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, CallFunc_FadeOut_Black_ReturnValue) == 0x000018, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::CallFunc_FadeOut_Black_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, Temp_int_Variable_3) == 0x00001C, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, CallFunc_Get_ReturnValue) == 0x000020, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, CallFunc_Get_ReturnValue_1) == 0x000028, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, K2Node_DynamicCast_AsBPI_UIManager) == 0x000030, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000048, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, CallFunc_BPI_GetDialogWindowCtrl_OutActor) == 0x000060, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::CallFunc_BPI_GetDialogWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, CallFunc_BPI_GetDialogWindowCtrl_OutActor_1) == 0x000070, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::CallFunc_BPI_GetDialogWindowCtrl_OutActor_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, CallFunc_IIsClosedDialogWindow_OutFinished) == 0x000080, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::CallFunc_IIsClosedDialogWindow_OutFinished' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, CallFunc_IIsOpenedDialogWindow_OutFinished) == 0x000081, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::CallFunc_IIsOpenedDialogWindow_OutFinished' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, CallFunc_Get_ReturnValue_2) == 0x000088, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::CallFunc_Get_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, CallFunc_DialogCtrlUpdate_SelectedYes) == 0x000090, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::CallFunc_DialogCtrlUpdate_SelectedYes' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, CallFunc_DialogCtrlUpdate_SelectedNo) == 0x000091, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::CallFunc_DialogCtrlUpdate_SelectedNo' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, K2Node_DynamicCast_AsBPI_UIManager_2) == 0x000098, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::K2Node_DynamicCast_AsBPI_UIManager_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, CallFunc_BPI_GetDialogWindowCtrl_OutActor_2) == 0x0000B0, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::CallFunc_BPI_GetDialogWindowCtrl_OutActor_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, CallFunc_IIsClosedDialogWindow_OutFinished_1) == 0x0000C0, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::CallFunc_IIsClosedDialogWindow_OutFinished_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C4, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000C8, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_SelectEnd, K2Node_SwitchInteger_CmpSuccess) == 0x0000CC, "Member 'BP_TitleCtrl_C_TickFunc_SelectEnd::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.TickFunc_Convert
// 0x0068 (0x0068 - 0x0000)
struct BP_TitleCtrl_C_TickFunc_Convert final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ConvertSaveData_C> K2Node_DynamicCast_AsBPI_Convert_Save_Data;        // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ConvertSaveData_C> K2Node_DynamicCast_AsBPI_Convert_Save_Data_1;      // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetResult_Success;                        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnd_IsEnd;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ConvertSaveData_C> K2Node_DynamicCast_AsBPI_Convert_Save_Data_2;      // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TitleCtrl_C_TickFunc_Convert) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_TickFunc_Convert");
static_assert(sizeof(BP_TitleCtrl_C_TickFunc_Convert) == 0x000068, "Wrong size on BP_TitleCtrl_C_TickFunc_Convert");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Convert, Temp_int_Variable) == 0x000000, "Member 'BP_TitleCtrl_C_TickFunc_Convert::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Convert, Temp_int_Variable_1) == 0x000004, "Member 'BP_TitleCtrl_C_TickFunc_Convert::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Convert, Temp_int_Variable_2) == 0x000008, "Member 'BP_TitleCtrl_C_TickFunc_Convert::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Convert, K2Node_DynamicCast_AsBPI_Convert_Save_Data) == 0x000010, "Member 'BP_TitleCtrl_C_TickFunc_Convert::K2Node_DynamicCast_AsBPI_Convert_Save_Data' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Convert, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_TitleCtrl_C_TickFunc_Convert::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Convert, K2Node_DynamicCast_AsBPI_Convert_Save_Data_1) == 0x000028, "Member 'BP_TitleCtrl_C_TickFunc_Convert::K2Node_DynamicCast_AsBPI_Convert_Save_Data_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Convert, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_TitleCtrl_C_TickFunc_Convert::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Convert, CallFunc_GetResult_Success) == 0x000039, "Member 'BP_TitleCtrl_C_TickFunc_Convert::CallFunc_GetResult_Success' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Convert, CallFunc_IsEnd_IsEnd) == 0x00003A, "Member 'BP_TitleCtrl_C_TickFunc_Convert::CallFunc_IsEnd_IsEnd' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Convert, K2Node_DynamicCast_AsBPI_Convert_Save_Data_2) == 0x000040, "Member 'BP_TitleCtrl_C_TickFunc_Convert::K2Node_DynamicCast_AsBPI_Convert_Save_Data_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Convert, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BP_TitleCtrl_C_TickFunc_Convert::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Convert, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_TitleCtrl_C_TickFunc_Convert::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Convert, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_TitleCtrl_C_TickFunc_Convert::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Convert, CallFunc_Add_IntInt_ReturnValue_2) == 0x00005C, "Member 'BP_TitleCtrl_C_TickFunc_Convert::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_TickFunc_Convert, K2Node_SwitchInteger_CmpSuccess) == 0x000060, "Member 'BP_TitleCtrl_C_TickFunc_Convert::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.OpenDialogYesNo
// 0x0060 (0x0060 - 0x0000)
struct BP_TitleCtrl_C_OpenDialogYesNo final
{
public:
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DialogTextLabel;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InitCursorPosition;                                // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor;         // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TitleCtrl_C_OpenDialogYesNo) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_OpenDialogYesNo");
static_assert(sizeof(BP_TitleCtrl_C_OpenDialogYesNo) == 0x000060, "Wrong size on BP_TitleCtrl_C_OpenDialogYesNo");
static_assert(offsetof(BP_TitleCtrl_C_OpenDialogYesNo, InScriptMessageAsset) == 0x000000, "Member 'BP_TitleCtrl_C_OpenDialogYesNo::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_OpenDialogYesNo, DialogTextLabel) == 0x000008, "Member 'BP_TitleCtrl_C_OpenDialogYesNo::DialogTextLabel' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_OpenDialogYesNo, InitCursorPosition) == 0x000010, "Member 'BP_TitleCtrl_C_OpenDialogYesNo::InitCursorPosition' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_OpenDialogYesNo, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_TitleCtrl_C_OpenDialogYesNo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_OpenDialogYesNo, CallFunc_Get_ReturnValue) == 0x000028, "Member 'BP_TitleCtrl_C_OpenDialogYesNo::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_OpenDialogYesNo, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_TitleCtrl_C_OpenDialogYesNo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_OpenDialogYesNo, K2Node_DynamicCast_AsBPI_UIManager) == 0x000038, "Member 'BP_TitleCtrl_C_OpenDialogYesNo::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_OpenDialogYesNo, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_TitleCtrl_C_OpenDialogYesNo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_OpenDialogYesNo, CallFunc_BPI_GetDialogWindowCtrl_OutActor) == 0x000050, "Member 'BP_TitleCtrl_C_OpenDialogYesNo::CallFunc_BPI_GetDialogWindowCtrl_OutActor' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.DialogCtrlInput
// 0x001C (0x001C - 0x0000)
struct BP_TitleCtrl_C_DialogCtrlInput final
{
public:
	int32                                         InputButtonNum;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InputCursorNum;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTriggerInput;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_2;               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_3;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_4;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_5;               // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_6;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_7;               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_8;               // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_9;               // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_10;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TitleCtrl_C_DialogCtrlInput) == 0x000004, "Wrong alignment on BP_TitleCtrl_C_DialogCtrlInput");
static_assert(sizeof(BP_TitleCtrl_C_DialogCtrlInput) == 0x00001C, "Wrong size on BP_TitleCtrl_C_DialogCtrlInput");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, InputButtonNum) == 0x000000, "Member 'BP_TitleCtrl_C_DialogCtrlInput::InputButtonNum' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, InputCursorNum) == 0x000004, "Member 'BP_TitleCtrl_C_DialogCtrlInput::InputCursorNum' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, IsTriggerInput) == 0x000008, "Member 'BP_TitleCtrl_C_DialogCtrlInput::IsTriggerInput' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, CallFunc_IsActionPadCheck_Success) == 0x000009, "Member 'BP_TitleCtrl_C_DialogCtrlInput::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, CallFunc_IsActionPadCheck_Success_1) == 0x00000A, "Member 'BP_TitleCtrl_C_DialogCtrlInput::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, CallFunc_IsActionPadCheck_Success_2) == 0x00000B, "Member 'BP_TitleCtrl_C_DialogCtrlInput::CallFunc_IsActionPadCheck_Success_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, CallFunc_IsActionPadCheck_Success_3) == 0x00000C, "Member 'BP_TitleCtrl_C_DialogCtrlInput::CallFunc_IsActionPadCheck_Success_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'BP_TitleCtrl_C_DialogCtrlInput::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000E, "Member 'BP_TitleCtrl_C_DialogCtrlInput::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, CallFunc_BooleanOR_ReturnValue) == 0x00000F, "Member 'BP_TitleCtrl_C_DialogCtrlInput::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, CallFunc_BooleanOR_ReturnValue_1) == 0x000010, "Member 'BP_TitleCtrl_C_DialogCtrlInput::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, CallFunc_IsActionPadCheck_Success_4) == 0x000011, "Member 'BP_TitleCtrl_C_DialogCtrlInput::CallFunc_IsActionPadCheck_Success_4' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'BP_TitleCtrl_C_DialogCtrlInput::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, CallFunc_IsActionPadCheck_Success_5) == 0x000013, "Member 'BP_TitleCtrl_C_DialogCtrlInput::CallFunc_IsActionPadCheck_Success_5' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, CallFunc_IsActionPadCheck_Success_6) == 0x000014, "Member 'BP_TitleCtrl_C_DialogCtrlInput::CallFunc_IsActionPadCheck_Success_6' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, CallFunc_IsActionPadCheck_Success_7) == 0x000015, "Member 'BP_TitleCtrl_C_DialogCtrlInput::CallFunc_IsActionPadCheck_Success_7' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, CallFunc_IsActionPadCheck_Success_8) == 0x000016, "Member 'BP_TitleCtrl_C_DialogCtrlInput::CallFunc_IsActionPadCheck_Success_8' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, CallFunc_IsActionPadCheck_Success_9) == 0x000017, "Member 'BP_TitleCtrl_C_DialogCtrlInput::CallFunc_IsActionPadCheck_Success_9' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlInput, CallFunc_IsActionPadCheck_Success_10) == 0x000018, "Member 'BP_TitleCtrl_C_DialogCtrlInput::CallFunc_IsActionPadCheck_Success_10' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.DialogCtrlUpdate
// 0x0158 (0x0158 - 0x0000)
struct BP_TitleCtrl_C_DialogCtrlUpdate final
{
public:
	bool                                          SelectedYes;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SelectedNo;                                        // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor;         // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_1;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue_2;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_1;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor_1;       // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_DialogCtrlInput_InputButtonNum;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_DialogCtrlInput_InputCursorNum;           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DialogCtrlInput_IsTriggerInput;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_3;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_2;              // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor_2;       // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IWasConfirmedByMouse_bConfirmed;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IWasConfirmedByMouse_ItemIndex;           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_4;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_2;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_3;              // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor_3;       // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_5;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_4;              // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IGetDialogSelectedCursorPosition_OutIndex; // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor_4;       // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_3;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectUIManager*                      CallFunc_Get_ReturnValue_6;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UIManager_C>      K2Node_DynamicCast_AsBPI_UIManager_5;              // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DialogCtrl_C>     CallFunc_BPI_GetDialogWindowCtrl_OutActor_5;       // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TitleCtrl_C_DialogCtrlUpdate) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_DialogCtrlUpdate");
static_assert(sizeof(BP_TitleCtrl_C_DialogCtrlUpdate) == 0x000158, "Wrong size on BP_TitleCtrl_C_DialogCtrlUpdate");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, SelectedYes) == 0x000000, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::SelectedYes' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, SelectedNo) == 0x000001, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::SelectedNo' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_Get_ReturnValue) == 0x000008, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, K2Node_DynamicCast_AsBPI_UIManager) == 0x000010, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::K2Node_DynamicCast_AsBPI_UIManager' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_BPI_GetDialogWindowCtrl_OutActor) == 0x000028, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_BPI_GetDialogWindowCtrl_OutActor' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_Get_ReturnValue_1) == 0x000038, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_Get_ReturnValue_2) == 0x000040, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_Get_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, K2Node_DynamicCast_AsBPI_UIManager_1) == 0x000048, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::K2Node_DynamicCast_AsBPI_UIManager_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_BPI_GetDialogWindowCtrl_OutActor_1) == 0x000060, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_BPI_GetDialogWindowCtrl_OutActor_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_DialogCtrlInput_InputButtonNum) == 0x000070, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_DialogCtrlInput_InputButtonNum' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_DialogCtrlInput_InputCursorNum) == 0x000074, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_DialogCtrlInput_InputCursorNum' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_DialogCtrlInput_IsTriggerInput) == 0x000078, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_DialogCtrlInput_IsTriggerInput' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_Get_ReturnValue_3) == 0x000080, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_Get_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, K2Node_DynamicCast_AsBPI_UIManager_2) == 0x000088, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::K2Node_DynamicCast_AsBPI_UIManager_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, K2Node_SwitchInteger_CmpSuccess) == 0x000099, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_BPI_GetDialogWindowCtrl_OutActor_2) == 0x0000A0, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_BPI_GetDialogWindowCtrl_OutActor_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, K2Node_SwitchInteger_CmpSuccess_1) == 0x0000B0, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_IWasConfirmedByMouse_bConfirmed) == 0x0000B1, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_IWasConfirmedByMouse_bConfirmed' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_IWasConfirmedByMouse_ItemIndex) == 0x0000B4, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_IWasConfirmedByMouse_ItemIndex' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_Get_ReturnValue_4) == 0x0000B8, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_Get_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, K2Node_SwitchInteger_CmpSuccess_2) == 0x0000C0, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::K2Node_SwitchInteger_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, K2Node_DynamicCast_AsBPI_UIManager_3) == 0x0000C8, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::K2Node_DynamicCast_AsBPI_UIManager_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, K2Node_DynamicCast_bSuccess_3) == 0x0000D8, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_BPI_GetDialogWindowCtrl_OutActor_3) == 0x0000E0, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_BPI_GetDialogWindowCtrl_OutActor_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_Get_ReturnValue_5) == 0x0000F0, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_Get_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, K2Node_DynamicCast_AsBPI_UIManager_4) == 0x0000F8, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::K2Node_DynamicCast_AsBPI_UIManager_4' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, K2Node_DynamicCast_bSuccess_4) == 0x000108, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_IGetDialogSelectedCursorPosition_OutIndex) == 0x00010C, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_IGetDialogSelectedCursorPosition_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_BPI_GetDialogWindowCtrl_OutActor_4) == 0x000110, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_BPI_GetDialogWindowCtrl_OutActor_4' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, K2Node_SwitchInteger_CmpSuccess_3) == 0x000120, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::K2Node_SwitchInteger_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_Get_ReturnValue_6) == 0x000128, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_Get_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, K2Node_DynamicCast_AsBPI_UIManager_5) == 0x000130, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::K2Node_DynamicCast_AsBPI_UIManager_5' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, K2Node_DynamicCast_bSuccess_5) == 0x000140, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_DialogCtrlUpdate, CallFunc_BPI_GetDialogWindowCtrl_OutActor_5) == 0x000148, "Member 'BP_TitleCtrl_C_DialogCtrlUpdate::CallFunc_BPI_GetDialogWindowCtrl_OutActor_5' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.SpawnItemMovieCtrl
// 0x0080 (0x0080 - 0x0000)
struct BP_TitleCtrl_C_SpawnItemMovieCtrl final
{
public:
	TScriptInterface<class IBPI_UIMovieCtrl_C>    CallFunc_IsPlaying_self_CastInput;                 // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_isPlaying;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UIMovieCtrl_C>    CallFunc_Play_self_CastInput;                      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_bgmv_camp_Ctrl_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_SpawnItemMovieCtrl) == 0x000010, "Wrong alignment on BP_TitleCtrl_C_SpawnItemMovieCtrl");
static_assert(sizeof(BP_TitleCtrl_C_SpawnItemMovieCtrl) == 0x000080, "Wrong size on BP_TitleCtrl_C_SpawnItemMovieCtrl");
static_assert(offsetof(BP_TitleCtrl_C_SpawnItemMovieCtrl, CallFunc_IsPlaying_self_CastInput) == 0x000000, "Member 'BP_TitleCtrl_C_SpawnItemMovieCtrl::CallFunc_IsPlaying_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnItemMovieCtrl, CallFunc_IsPlaying_isPlaying) == 0x000010, "Member 'BP_TitleCtrl_C_SpawnItemMovieCtrl::CallFunc_IsPlaying_isPlaying' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnItemMovieCtrl, CallFunc_Play_self_CastInput) == 0x000018, "Member 'BP_TitleCtrl_C_SpawnItemMovieCtrl::CallFunc_Play_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnItemMovieCtrl, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_TitleCtrl_C_SpawnItemMovieCtrl::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnItemMovieCtrl, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_TitleCtrl_C_SpawnItemMovieCtrl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnItemMovieCtrl, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000068, "Member 'BP_TitleCtrl_C_SpawnItemMovieCtrl::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TitleCtrl_C_SpawnItemMovieCtrl, CallFunc_FinishSpawningActor_ReturnValue) == 0x000070, "Member 'BP_TitleCtrl_C_SpawnItemMovieCtrl::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.GetNewgameType
// 0x0001 (0x0001 - 0x0000)
struct BP_TitleCtrl_C_GetNewgameType final
{
public:
	E_NewGameType                                 Type;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_GetNewgameType) == 0x000001, "Wrong alignment on BP_TitleCtrl_C_GetNewgameType");
static_assert(sizeof(BP_TitleCtrl_C_GetNewgameType) == 0x000001, "Wrong size on BP_TitleCtrl_C_GetNewgameType");
static_assert(offsetof(BP_TitleCtrl_C_GetNewgameType, Type) == 0x000000, "Member 'BP_TitleCtrl_C_GetNewgameType::Type' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.GetSaveDataIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_TitleCtrl_C_GetSaveDataIndex final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_GetSaveDataIndex) == 0x000004, "Wrong alignment on BP_TitleCtrl_C_GetSaveDataIndex");
static_assert(sizeof(BP_TitleCtrl_C_GetSaveDataIndex) == 0x000004, "Wrong size on BP_TitleCtrl_C_GetSaveDataIndex");
static_assert(offsetof(BP_TitleCtrl_C_GetSaveDataIndex, ID) == 0x000000, "Member 'BP_TitleCtrl_C_GetSaveDataIndex::ID' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.GetEndType
// 0x0001 (0x0001 - 0x0000)
struct BP_TitleCtrl_C_GetEndType final
{
public:
	E_TitleEndType                                Type;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_GetEndType) == 0x000001, "Wrong alignment on BP_TitleCtrl_C_GetEndType");
static_assert(sizeof(BP_TitleCtrl_C_GetEndType) == 0x000001, "Wrong size on BP_TitleCtrl_C_GetEndType");
static_assert(offsetof(BP_TitleCtrl_C_GetEndType, Type) == 0x000000, "Member 'BP_TitleCtrl_C_GetEndType::Type' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.IsEndTitleCtrl
// 0x0001 (0x0001 - 0x0000)
struct BP_TitleCtrl_C_IsEndTitleCtrl final
{
public:
	bool                                          IsEnd;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TitleCtrl_C_IsEndTitleCtrl) == 0x000001, "Wrong alignment on BP_TitleCtrl_C_IsEndTitleCtrl");
static_assert(sizeof(BP_TitleCtrl_C_IsEndTitleCtrl) == 0x000001, "Wrong size on BP_TitleCtrl_C_IsEndTitleCtrl");
static_assert(offsetof(BP_TitleCtrl_C_IsEndTitleCtrl, IsEnd) == 0x000000, "Member 'BP_TitleCtrl_C_IsEndTitleCtrl::IsEnd' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.GetDifficulty
// 0x0001 (0x0001 - 0x0000)
struct BP_TitleCtrl_C_GetDifficulty final
{
public:
	E_GAME_DIFFICULTY                             Difficulty;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TitleCtrl_C_GetDifficulty) == 0x000001, "Wrong alignment on BP_TitleCtrl_C_GetDifficulty");
static_assert(sizeof(BP_TitleCtrl_C_GetDifficulty) == 0x000001, "Wrong size on BP_TitleCtrl_C_GetDifficulty");
static_assert(offsetof(BP_TitleCtrl_C_GetDifficulty, Difficulty) == 0x000000, "Member 'BP_TitleCtrl_C_GetDifficulty::Difficulty' has a wrong offset!");

// Function BP_TitleCtrl.BP_TitleCtrl_C.GetBenefitData
// 0x0038 (0x0038 - 0x0000)
struct BP_TitleCtrl_C_GetBenefitData final
{
public:
	struct FBenefitData                           Data;                                              // 0x0000(0x0038)(Parm, OutParm)
};
static_assert(alignof(BP_TitleCtrl_C_GetBenefitData) == 0x000008, "Wrong alignment on BP_TitleCtrl_C_GetBenefitData");
static_assert(sizeof(BP_TitleCtrl_C_GetBenefitData) == 0x000038, "Wrong size on BP_TitleCtrl_C_GetBenefitData");
static_assert(offsetof(BP_TitleCtrl_C_GetBenefitData, Data) == 0x000000, "Member 'BP_TitleCtrl_C_GetBenefitData::Data' has a wrong offset!");

}

