#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CommonHelpWindow

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Project_structs.hpp"


namespace SDK::Params
{

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.ExecuteUbergraph_WB_CommonHelpWindow
// 0x0084 (0x0084 - 0x0000)
struct WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_2;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName_1;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName_1;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex_1;       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_3;                       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_4;                       // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_5;                       // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_InChangeAnimation;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Play_ReturnValue_6;                       // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AnimPackName;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_AnimationName;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimPackIndex;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_AnimationIndex;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0044(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue_7;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow) == 0x000004, "Wrong alignment on WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow");
static_assert(sizeof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow) == 0x000084, "Wrong size on WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, EntryPoint) == 0x000000, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, CallFunc_Play_ReturnValue) == 0x000004, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, CallFunc_Play_ReturnValue_1) == 0x000005, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, CallFunc_Play_ReturnValue_2) == 0x000006, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::CallFunc_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, K2Node_ComponentBoundEvent_AnimPackName_1) == 0x000008, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::K2Node_ComponentBoundEvent_AnimPackName_1' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, K2Node_ComponentBoundEvent_AnimationName_1) == 0x000010, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::K2Node_ComponentBoundEvent_AnimationName_1' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, K2Node_ComponentBoundEvent_AnimPackIndex_1) == 0x000018, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::K2Node_ComponentBoundEvent_AnimPackIndex_1' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, K2Node_ComponentBoundEvent_AnimationIndex_1) == 0x00001C, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::K2Node_ComponentBoundEvent_AnimationIndex_1' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, K2Node_SwitchName_CmpSuccess) == 0x000020, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, CallFunc_Play_ReturnValue_3) == 0x000021, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::CallFunc_Play_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, CallFunc_Play_ReturnValue_4) == 0x000022, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::CallFunc_Play_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, CallFunc_Play_ReturnValue_5) == 0x000023, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::CallFunc_Play_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, K2Node_CustomEvent_InChangeAnimation) == 0x000024, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::K2Node_CustomEvent_InChangeAnimation' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, CallFunc_Play_ReturnValue_6) == 0x000025, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::CallFunc_Play_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, K2Node_ComponentBoundEvent_AnimPackName) == 0x000028, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::K2Node_ComponentBoundEvent_AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, K2Node_ComponentBoundEvent_AnimationName) == 0x000030, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::K2Node_ComponentBoundEvent_AnimationName' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, K2Node_ComponentBoundEvent_AnimPackIndex) == 0x000038, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::K2Node_ComponentBoundEvent_AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, K2Node_ComponentBoundEvent_AnimationIndex) == 0x00003C, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::K2Node_ComponentBoundEvent_AnimationIndex' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, K2Node_SwitchName_CmpSuccess_1) == 0x000040, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, K2Node_Event_IsDesignTime) == 0x000041, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, K2Node_Event_MyGeometry) == 0x000044, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, K2Node_Event_InDeltaTime) == 0x00007C, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow, CallFunc_Play_ReturnValue_7) == 0x000080, "Member 'WB_CommonHelpWindow_C_ExecuteUbergraph_WB_CommonHelpWindow::CallFunc_Play_ReturnValue_7' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_CommonHelpWindow_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CommonHelpWindow_C_Tick) == 0x000004, "Wrong alignment on WB_CommonHelpWindow_C_Tick");
static_assert(sizeof(WB_CommonHelpWindow_C_Tick) == 0x00003C, "Wrong size on WB_CommonHelpWindow_C_Tick");
static_assert(offsetof(WB_CommonHelpWindow_C_Tick, MyGeometry) == 0x000000, "Member 'WB_CommonHelpWindow_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_CommonHelpWindow_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonHelpWindow_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonHelpWindow_C_PreConstruct) == 0x000001, "Wrong alignment on WB_CommonHelpWindow_C_PreConstruct");
static_assert(sizeof(WB_CommonHelpWindow_C_PreConstruct) == 0x000001, "Wrong size on WB_CommonHelpWindow_C_PreConstruct");
static_assert(offsetof(WB_CommonHelpWindow_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_CommonHelpWindow_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.BndEvt__SsPlayerHelp_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_CommonHelpWindow_C_BndEvt__SsPlayerHelp_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CommonHelpWindow_C_BndEvt__SsPlayerHelp_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_CommonHelpWindow_C_BndEvt__SsPlayerHelp_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_CommonHelpWindow_C_BndEvt__SsPlayerHelp_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_CommonHelpWindow_C_BndEvt__SsPlayerHelp_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_CommonHelpWindow_C_BndEvt__SsPlayerHelp_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_CommonHelpWindow_C_BndEvt__SsPlayerHelp_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_BndEvt__SsPlayerHelp_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_CommonHelpWindow_C_BndEvt__SsPlayerHelp_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_BndEvt__SsPlayerHelp_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_CommonHelpWindow_C_BndEvt__SsPlayerHelp_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_BndEvt__SsPlayerHelp_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_CommonHelpWindow_C_BndEvt__SsPlayerHelp_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.BndEvt__SsPlayerWidget_550_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_CommonHelpWindow_C_BndEvt__SsPlayerWidget_550_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature final
{
public:
	class FName                                   AnimPackName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimationName;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimPackIndex;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnimationIndex;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CommonHelpWindow_C_BndEvt__SsPlayerWidget_550_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000004, "Wrong alignment on WB_CommonHelpWindow_C_BndEvt__SsPlayerWidget_550_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(sizeof(WB_CommonHelpWindow_C_BndEvt__SsPlayerWidget_550_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature) == 0x000018, "Wrong size on WB_CommonHelpWindow_C_BndEvt__SsPlayerWidget_550_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature");
static_assert(offsetof(WB_CommonHelpWindow_C_BndEvt__SsPlayerWidget_550_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackName) == 0x000000, "Member 'WB_CommonHelpWindow_C_BndEvt__SsPlayerWidget_550_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackName' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_BndEvt__SsPlayerWidget_550_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimationName) == 0x000008, "Member 'WB_CommonHelpWindow_C_BndEvt__SsPlayerWidget_550_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimationName' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_BndEvt__SsPlayerWidget_550_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimPackIndex) == 0x000010, "Member 'WB_CommonHelpWindow_C_BndEvt__SsPlayerWidget_550_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimPackIndex' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_BndEvt__SsPlayerWidget_550_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature, AnimationIndex) == 0x000014, "Member 'WB_CommonHelpWindow_C_BndEvt__SsPlayerWidget_550_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature::AnimationIndex' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.TextChangeAnimetion
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonHelpWindow_C_TextChangeAnimetion final
{
public:
	bool                                          InChangeAnimation;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonHelpWindow_C_TextChangeAnimetion) == 0x000001, "Wrong alignment on WB_CommonHelpWindow_C_TextChangeAnimetion");
static_assert(sizeof(WB_CommonHelpWindow_C_TextChangeAnimetion) == 0x000001, "Wrong size on WB_CommonHelpWindow_C_TextChangeAnimetion");
static_assert(offsetof(WB_CommonHelpWindow_C_TextChangeAnimetion, InChangeAnimation) == 0x000000, "Member 'WB_CommonHelpWindow_C_TextChangeAnimetion::InChangeAnimation' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.IsFinishedOpenWindow
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonHelpWindow_C_IsFinishedOpenWindow final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonHelpWindow_C_IsFinishedOpenWindow) == 0x000001, "Wrong alignment on WB_CommonHelpWindow_C_IsFinishedOpenWindow");
static_assert(sizeof(WB_CommonHelpWindow_C_IsFinishedOpenWindow) == 0x000001, "Wrong size on WB_CommonHelpWindow_C_IsFinishedOpenWindow");
static_assert(offsetof(WB_CommonHelpWindow_C_IsFinishedOpenWindow, OutFinished) == 0x000000, "Member 'WB_CommonHelpWindow_C_IsFinishedOpenWindow::OutFinished' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.IsFinishedCloseWindow
// 0x0001 (0x0001 - 0x0000)
struct WB_CommonHelpWindow_C_IsFinishedCloseWindow final
{
public:
	bool                                          OutFinished;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonHelpWindow_C_IsFinishedCloseWindow) == 0x000001, "Wrong alignment on WB_CommonHelpWindow_C_IsFinishedCloseWindow");
static_assert(sizeof(WB_CommonHelpWindow_C_IsFinishedCloseWindow) == 0x000001, "Wrong size on WB_CommonHelpWindow_C_IsFinishedCloseWindow");
static_assert(offsetof(WB_CommonHelpWindow_C_IsFinishedCloseWindow, OutFinished) == 0x000000, "Member 'WB_CommonHelpWindow_C_IsFinishedCloseWindow::OutFinished' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.SetHelpRichTextByLabel
// 0x0028 (0x0028 - 0x0000)
struct WB_CommonHelpWindow_C_SetHelpRichTextByLabel final
{
public:
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InLabel;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InExecutionText;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InBuildText;                                       // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByLabel_self_CastInput;   // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonHelpWindow_C_SetHelpRichTextByLabel) == 0x000008, "Wrong alignment on WB_CommonHelpWindow_C_SetHelpRichTextByLabel");
static_assert(sizeof(WB_CommonHelpWindow_C_SetHelpRichTextByLabel) == 0x000028, "Wrong size on WB_CommonHelpWindow_C_SetHelpRichTextByLabel");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpRichTextByLabel, InScriptMessageAsset) == 0x000000, "Member 'WB_CommonHelpWindow_C_SetHelpRichTextByLabel::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpRichTextByLabel, InLabel) == 0x000008, "Member 'WB_CommonHelpWindow_C_SetHelpRichTextByLabel::InLabel' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpRichTextByLabel, InExecutionText) == 0x000010, "Member 'WB_CommonHelpWindow_C_SetHelpRichTextByLabel::InExecutionText' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpRichTextByLabel, InBuildText) == 0x000011, "Member 'WB_CommonHelpWindow_C_SetHelpRichTextByLabel::InBuildText' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpRichTextByLabel, CallFunc_SetScriptMessageByLabel_self_CastInput) == 0x000018, "Member 'WB_CommonHelpWindow_C_SetHelpRichTextByLabel::CallFunc_SetScriptMessageByLabel_self_CastInput' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.SetHelpRichTextByIndex
// 0x0020 (0x0020 - 0x0000)
struct WB_CommonHelpWindow_C_SetHelpRichTextByIndex final
{
public:
	class UScriptMessageAsset*                    InScriptMessageAsset;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIndex;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InExecutionText;                                   // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InBuildText;                                       // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByID_self_CastInput;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonHelpWindow_C_SetHelpRichTextByIndex) == 0x000008, "Wrong alignment on WB_CommonHelpWindow_C_SetHelpRichTextByIndex");
static_assert(sizeof(WB_CommonHelpWindow_C_SetHelpRichTextByIndex) == 0x000020, "Wrong size on WB_CommonHelpWindow_C_SetHelpRichTextByIndex");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpRichTextByIndex, InScriptMessageAsset) == 0x000000, "Member 'WB_CommonHelpWindow_C_SetHelpRichTextByIndex::InScriptMessageAsset' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpRichTextByIndex, InIndex) == 0x000008, "Member 'WB_CommonHelpWindow_C_SetHelpRichTextByIndex::InIndex' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpRichTextByIndex, InExecutionText) == 0x00000C, "Member 'WB_CommonHelpWindow_C_SetHelpRichTextByIndex::InExecutionText' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpRichTextByIndex, InBuildText) == 0x00000D, "Member 'WB_CommonHelpWindow_C_SetHelpRichTextByIndex::InBuildText' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpRichTextByIndex, CallFunc_SetScriptMessageByID_self_CastInput) == 0x000010, "Member 'WB_CommonHelpWindow_C_SetHelpRichTextByIndex::CallFunc_SetScriptMessageByID_self_CastInput' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.SetBuildRichText
// 0x0018 (0x0018 - 0x0000)
struct WB_CommonHelpWindow_C_SetBuildRichText final
{
public:
	E_GAMEPAD_TYPE                                CallFunc_GetConnectedGamepadType_ForSteam_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckGamePadUI_Gamepad;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_BuildText_self_CastInput;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonHelpWindow_C_SetBuildRichText) == 0x000008, "Wrong alignment on WB_CommonHelpWindow_C_SetBuildRichText");
static_assert(sizeof(WB_CommonHelpWindow_C_SetBuildRichText) == 0x000018, "Wrong size on WB_CommonHelpWindow_C_SetBuildRichText");
static_assert(offsetof(WB_CommonHelpWindow_C_SetBuildRichText, CallFunc_GetConnectedGamepadType_ForSteam_ReturnValue) == 0x000000, "Member 'WB_CommonHelpWindow_C_SetBuildRichText::CallFunc_GetConnectedGamepadType_ForSteam_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_SetBuildRichText, CallFunc_CheckGamePadUI_Gamepad) == 0x000001, "Member 'WB_CommonHelpWindow_C_SetBuildRichText::CallFunc_CheckGamePadUI_Gamepad' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_SetBuildRichText, CallFunc_BuildText_self_CastInput) == 0x000008, "Member 'WB_CommonHelpWindow_C_SetBuildRichText::CallFunc_BuildText_self_CastInput' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.ClearRichText
// 0x0010 (0x0010 - 0x0000)
struct WB_CommonHelpWindow_C_ClearRichText final
{
public:
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByID_self_CastInput;      // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonHelpWindow_C_ClearRichText) == 0x000008, "Wrong alignment on WB_CommonHelpWindow_C_ClearRichText");
static_assert(sizeof(WB_CommonHelpWindow_C_ClearRichText) == 0x000010, "Wrong size on WB_CommonHelpWindow_C_ClearRichText");
static_assert(offsetof(WB_CommonHelpWindow_C_ClearRichText, CallFunc_SetScriptMessageByID_self_CastInput) == 0x000000, "Member 'WB_CommonHelpWindow_C_ClearRichText::CallFunc_SetScriptMessageByID_self_CastInput' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.SetHelpWindowProgramValue
// 0x0028 (0x0028 - 0x0000)
struct WB_CommonHelpWindow_C_SetHelpWindowProgramValue final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InString;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetProgramValue_self_CastInput;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonHelpWindow_C_SetHelpWindowProgramValue) == 0x000008, "Wrong alignment on WB_CommonHelpWindow_C_SetHelpWindowProgramValue");
static_assert(sizeof(WB_CommonHelpWindow_C_SetHelpWindowProgramValue) == 0x000028, "Wrong size on WB_CommonHelpWindow_C_SetHelpWindowProgramValue");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpWindowProgramValue, InIndex) == 0x000000, "Member 'WB_CommonHelpWindow_C_SetHelpWindowProgramValue::InIndex' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpWindowProgramValue, InString) == 0x000008, "Member 'WB_CommonHelpWindow_C_SetHelpWindowProgramValue::InString' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpWindowProgramValue, CallFunc_SetProgramValue_self_CastInput) == 0x000018, "Member 'WB_CommonHelpWindow_C_SetHelpWindowProgramValue::CallFunc_SetProgramValue_self_CastInput' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.SetHelpWindowSkillId
// 0x0018 (0x0018 - 0x0000)
struct WB_CommonHelpWindow_C_SetHelpWindowSkillId final
{
public:
	int32                                         InSkillId;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetSkillHelpSkillId_self_CastInput;       // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonHelpWindow_C_SetHelpWindowSkillId) == 0x000008, "Wrong alignment on WB_CommonHelpWindow_C_SetHelpWindowSkillId");
static_assert(sizeof(WB_CommonHelpWindow_C_SetHelpWindowSkillId) == 0x000018, "Wrong size on WB_CommonHelpWindow_C_SetHelpWindowSkillId");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpWindowSkillId, InSkillId) == 0x000000, "Member 'WB_CommonHelpWindow_C_SetHelpWindowSkillId::InSkillId' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpWindowSkillId, CallFunc_SetSkillHelpSkillId_self_CastInput) == 0x000008, "Member 'WB_CommonHelpWindow_C_SetHelpWindowSkillId::CallFunc_SetSkillHelpSkillId_self_CastInput' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.SetHelpWindowItemId
// 0x0018 (0x0018 - 0x0000)
struct WB_CommonHelpWindow_C_SetHelpWindowItemId final
{
public:
	int32                                         InItemId;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetItemHelpItemId_self_CastInput;         // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonHelpWindow_C_SetHelpWindowItemId) == 0x000008, "Wrong alignment on WB_CommonHelpWindow_C_SetHelpWindowItemId");
static_assert(sizeof(WB_CommonHelpWindow_C_SetHelpWindowItemId) == 0x000018, "Wrong size on WB_CommonHelpWindow_C_SetHelpWindowItemId");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpWindowItemId, InItemId) == 0x000000, "Member 'WB_CommonHelpWindow_C_SetHelpWindowItemId::InItemId' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpWindowItemId, CallFunc_SetItemHelpItemId_self_CastInput) == 0x000008, "Member 'WB_CommonHelpWindow_C_SetHelpWindowItemId::CallFunc_SetItemHelpItemId_self_CastInput' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.ClearHelpRichText
// 0x0010 (0x0010 - 0x0000)
struct WB_CommonHelpWindow_C_ClearHelpRichText final
{
public:
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetScriptMessageByID_self_CastInput;      // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonHelpWindow_C_ClearHelpRichText) == 0x000008, "Wrong alignment on WB_CommonHelpWindow_C_ClearHelpRichText");
static_assert(sizeof(WB_CommonHelpWindow_C_ClearHelpRichText) == 0x000010, "Wrong size on WB_CommonHelpWindow_C_ClearHelpRichText");
static_assert(offsetof(WB_CommonHelpWindow_C_ClearHelpRichText, CallFunc_SetScriptMessageByID_self_CastInput) == 0x000000, "Member 'WB_CommonHelpWindow_C_ClearHelpRichText::CallFunc_SetScriptMessageByID_self_CastInput' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.SetHelpWindowValueParam
// 0x0018 (0x0018 - 0x0000)
struct WB_CommonHelpWindow_C_SetHelpWindowValueParam final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InParam;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IMessageTagInterface>  CallFunc_SetValueParam_self_CastInput;             // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonHelpWindow_C_SetHelpWindowValueParam) == 0x000008, "Wrong alignment on WB_CommonHelpWindow_C_SetHelpWindowValueParam");
static_assert(sizeof(WB_CommonHelpWindow_C_SetHelpWindowValueParam) == 0x000018, "Wrong size on WB_CommonHelpWindow_C_SetHelpWindowValueParam");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpWindowValueParam, InIndex) == 0x000000, "Member 'WB_CommonHelpWindow_C_SetHelpWindowValueParam::InIndex' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpWindowValueParam, InParam) == 0x000004, "Member 'WB_CommonHelpWindow_C_SetHelpWindowValueParam::InParam' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_SetHelpWindowValueParam, CallFunc_SetValueParam_self_CastInput) == 0x000008, "Member 'WB_CommonHelpWindow_C_SetHelpWindowValueParam::CallFunc_SetValueParam_self_CastInput' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.UpdateMappingIcon
// 0x0009 (0x0009 - 0x0000)
struct WB_CommonHelpWindow_C_UpdateMappingIcon final
{
public:
	bool                                          L_IsBulidText;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_OPTION_CONTENT_BUTTON_ICON_TYPE             CallFunc_GetButtonIconType_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_GAMEPAD_TYPE                                CallFunc_GetConnectedGamepadType_ForSteam_ReturnValue; // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckGamePadUI_Gamepad;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_CommonHelpWindow_C_UpdateMappingIcon) == 0x000001, "Wrong alignment on WB_CommonHelpWindow_C_UpdateMappingIcon");
static_assert(sizeof(WB_CommonHelpWindow_C_UpdateMappingIcon) == 0x000009, "Wrong size on WB_CommonHelpWindow_C_UpdateMappingIcon");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateMappingIcon, L_IsBulidText) == 0x000000, "Member 'WB_CommonHelpWindow_C_UpdateMappingIcon::L_IsBulidText' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateMappingIcon, CallFunc_GetButtonIconType_ReturnValue) == 0x000001, "Member 'WB_CommonHelpWindow_C_UpdateMappingIcon::CallFunc_GetButtonIconType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateMappingIcon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'WB_CommonHelpWindow_C_UpdateMappingIcon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateMappingIcon, CallFunc_GetConnectedGamepadType_ForSteam_ReturnValue) == 0x000003, "Member 'WB_CommonHelpWindow_C_UpdateMappingIcon::CallFunc_GetConnectedGamepadType_ForSteam_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateMappingIcon, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000004, "Member 'WB_CommonHelpWindow_C_UpdateMappingIcon::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateMappingIcon, CallFunc_CheckGamePadUI_Gamepad) == 0x000005, "Member 'WB_CommonHelpWindow_C_UpdateMappingIcon::CallFunc_CheckGamePadUI_Gamepad' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateMappingIcon, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'WB_CommonHelpWindow_C_UpdateMappingIcon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateMappingIcon, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000007, "Member 'WB_CommonHelpWindow_C_UpdateMappingIcon::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateMappingIcon, CallFunc_IsVisible_ReturnValue) == 0x000008, "Member 'WB_CommonHelpWindow_C_UpdateMappingIcon::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function WB_CommonHelpWindow.WB_CommonHelpWindow_C.UpdateLocalizationSetting
// 0x00F0 (0x00F0 - 0x0000)
struct WB_CommonHelpWindow_C_UpdateLocalizationSetting final
{
public:
	int32                                         L_LoopIdx;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         L_CultureStr;                                      // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_X;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLanguage_ReturnValue;           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsJpEdition_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDecorator_ReturnValue;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0098(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(WB_CommonHelpWindow_C_UpdateLocalizationSetting) == 0x000008, "Wrong alignment on WB_CommonHelpWindow_C_UpdateLocalizationSetting");
static_assert(sizeof(WB_CommonHelpWindow_C_UpdateLocalizationSetting) == 0x0000F0, "Wrong size on WB_CommonHelpWindow_C_UpdateLocalizationSetting");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, L_LoopIdx) == 0x000000, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::L_LoopIdx' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, L_CultureStr) == 0x000008, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::L_CultureStr' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, Temp_int_Variable) == 0x000018, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, K2Node_MakeArray_Array) == 0x000020, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, Temp_int_Array_Index_Variable) == 0x000030, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, Temp_int_Variable_1) == 0x000034, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, CallFunc_MakeVector2D_ReturnValue) == 0x000038, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, CallFunc_MakeVector2D_ReturnValue_1) == 0x000040, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, Temp_bool_True_if_break_was_hit_Variable) == 0x000048, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00004A, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, Temp_bool_Variable) == 0x00004B, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, CallFunc_BreakVector2D_X) == 0x00004C, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, CallFunc_BreakVector2D_Y) == 0x000050, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, CallFunc_MakeVector2D_ReturnValue_2) == 0x000054, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, K2Node_SwitchString_CmpSuccess) == 0x00005C, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, CallFunc_GetCurrentLanguage_ReturnValue) == 0x000068, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::CallFunc_GetCurrentLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, CallFunc_FindSubstring_ReturnValue) == 0x000078, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, CallFunc_IsJpEdition_ReturnValue) == 0x00007C, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::CallFunc_IsJpEdition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00007D, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, K2Node_Select_Default) == 0x000080, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, CallFunc_SetDecorator_ReturnValue) == 0x000088, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::CallFunc_SetDecorator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, CallFunc_Less_IntInt_ReturnValue) == 0x000089, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, CallFunc_BooleanAND_ReturnValue) == 0x000090, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CommonHelpWindow_C_UpdateLocalizationSetting, K2Node_MakeStruct_SlateFontInfo) == 0x000098, "Member 'WB_CommonHelpWindow_C_UpdateLocalizationSetting::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

}

