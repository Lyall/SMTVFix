#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleSoundManager

#include "Basic.hpp"

#include "BattleBGMType_structs.hpp"
#include "Project_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BTL_SOUND_PARAM_structs.hpp"
#include "BattleResidentSE_structs.hpp"


namespace SDK::Params
{

// Function BattleSoundManager.BattleSoundManager_C.ExecuteUbergraph_BattleSoundManager
// 0x0030 (0x0030 - 0x0000)
struct BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         K2Node_Event_AtomComp;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SyncPlaybackSpeed;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BDB[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_SOUND_PARAM                       K2Node_MakeStruct_BTL_SOUND_PARAM;                 // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager) == 0x000008, "Wrong alignment on BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager");
static_assert(sizeof(BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager) == 0x000030, "Wrong size on BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager");
static_assert(offsetof(BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager, EntryPoint) == 0x000000, "Member 'BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager, K2Node_Event_AtomComp) == 0x000008, "Member 'BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager::K2Node_Event_AtomComp' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager, K2Node_Event_SyncPlaybackSpeed) == 0x000010, "Member 'BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager::K2Node_Event_SyncPlaybackSpeed' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager, K2Node_MakeStruct_BTL_SOUND_PARAM) == 0x000018, "Member 'BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager::K2Node_MakeStruct_BTL_SOUND_PARAM' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'BattleSoundManager_C_ExecuteUbergraph_BattleSoundManager::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.BI_AddAtomComp
// 0x0010 (0x0010 - 0x0000)
struct BattleSoundManager_C_BI_AddAtomComp final
{
public:
	class UAtomComponent*                         AtomComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SyncPlaybackSpeed;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSoundManager_C_BI_AddAtomComp) == 0x000008, "Wrong alignment on BattleSoundManager_C_BI_AddAtomComp");
static_assert(sizeof(BattleSoundManager_C_BI_AddAtomComp) == 0x000010, "Wrong size on BattleSoundManager_C_BI_AddAtomComp");
static_assert(offsetof(BattleSoundManager_C_BI_AddAtomComp, AtomComp) == 0x000000, "Member 'BattleSoundManager_C_BI_AddAtomComp::AtomComp' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_BI_AddAtomComp, SyncPlaybackSpeed) == 0x000008, "Member 'BattleSoundManager_C_BI_AddAtomComp::SyncPlaybackSpeed' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BattleSoundManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSoundManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BattleSoundManager_C_ReceiveTick");
static_assert(sizeof(BattleSoundManager_C_ReceiveTick) == 0x000004, "Wrong size on BattleSoundManager_C_ReceiveTick");
static_assert(offsetof(BattleSoundManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BattleSoundManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.GetResidentAssetByName
// 0x0050 (0x0050 - 0x0000)
struct BattleSoundManager_C_GetResidentAssetByName final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          RetValue;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattleResidentSE                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BDC[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BDD[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0028(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BDE[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSoundManager_C_GetResidentAssetByName) == 0x000008, "Wrong alignment on BattleSoundManager_C_GetResidentAssetByName");
static_assert(sizeof(BattleSoundManager_C_GetResidentAssetByName) == 0x000050, "Wrong size on BattleSoundManager_C_GetResidentAssetByName");
static_assert(offsetof(BattleSoundManager_C_GetResidentAssetByName, Param_Name) == 0x000000, "Member 'BattleSoundManager_C_GetResidentAssetByName::Param_Name' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetResidentAssetByName, RetValue) == 0x000008, "Member 'BattleSoundManager_C_GetResidentAssetByName::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetResidentAssetByName, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'BattleSoundManager_C_GetResidentAssetByName::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetResidentAssetByName, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000018, "Member 'BattleSoundManager_C_GetResidentAssetByName::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetResidentAssetByName, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BattleSoundManager_C_GetResidentAssetByName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetResidentAssetByName, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BattleSoundManager_C_GetResidentAssetByName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetResidentAssetByName, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000028, "Member 'BattleSoundManager_C_GetResidentAssetByName::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetResidentAssetByName, CallFunc_Array_Get_Item) == 0x000038, "Member 'BattleSoundManager_C_GetResidentAssetByName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetResidentAssetByName, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BattleSoundManager_C_GetResidentAssetByName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetResidentAssetByName, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000044, "Member 'BattleSoundManager_C_GetResidentAssetByName::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetResidentAssetByName, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BattleSoundManager_C_GetResidentAssetByName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetResidentAssetByName, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BattleSoundManager_C_GetResidentAssetByName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.PlayResidentSE
// 0x0028 (0x0028 - 0x0000)
struct BattleSoundManager_C_PlayResidentSE final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESystemSE                                     Lo_SystemSE;                                       // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BDF[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetResidentAssetByName_retValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSoundManager_C_PlayResidentSE) == 0x000008, "Wrong alignment on BattleSoundManager_C_PlayResidentSE");
static_assert(sizeof(BattleSoundManager_C_PlayResidentSE) == 0x000028, "Wrong size on BattleSoundManager_C_PlayResidentSE");
static_assert(offsetof(BattleSoundManager_C_PlayResidentSE, Param_Name) == 0x000000, "Member 'BattleSoundManager_C_PlayResidentSE::Param_Name' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayResidentSE, Location) == 0x000008, "Member 'BattleSoundManager_C_PlayResidentSE::Location' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayResidentSE, Lo_SystemSE) == 0x000014, "Member 'BattleSoundManager_C_PlayResidentSE::Lo_SystemSE' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayResidentSE, K2Node_SwitchName_CmpSuccess) == 0x000015, "Member 'BattleSoundManager_C_PlayResidentSE::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayResidentSE, CallFunc_GetResidentAssetByName_retValue) == 0x000018, "Member 'BattleSoundManager_C_PlayResidentSE::CallFunc_GetResidentAssetByName_retValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayResidentSE, CallFunc_Get_ReturnValue) == 0x000020, "Member 'BattleSoundManager_C_PlayResidentSE::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.PlayAssetSE
// 0x0040 (0x0040 - 0x0000)
struct BattleSoundManager_C_PlayAssetSE final
{
public:
	class USoundAtomCue*                          Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnorePlayRate;                                    // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BE0[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayRate_PlayRate;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBTL_SOUND_PARAM                       K2Node_MakeStruct_BTL_SOUND_PARAM;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSoundManager_C_PlayAssetSE) == 0x000008, "Wrong alignment on BattleSoundManager_C_PlayAssetSE");
static_assert(sizeof(BattleSoundManager_C_PlayAssetSE) == 0x000040, "Wrong size on BattleSoundManager_C_PlayAssetSE");
static_assert(offsetof(BattleSoundManager_C_PlayAssetSE, Sound) == 0x000000, "Member 'BattleSoundManager_C_PlayAssetSE::Sound' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayAssetSE, Location) == 0x000008, "Member 'BattleSoundManager_C_PlayAssetSE::Location' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayAssetSE, IgnorePlayRate) == 0x000014, "Member 'BattleSoundManager_C_PlayAssetSE::IgnorePlayRate' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayAssetSE, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'BattleSoundManager_C_PlayAssetSE::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayAssetSE, CallFunc_GetPlayRate_PlayRate) == 0x000018, "Member 'BattleSoundManager_C_PlayAssetSE::CallFunc_GetPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayAssetSE, CallFunc_SelectFloat_ReturnValue) == 0x00001C, "Member 'BattleSoundManager_C_PlayAssetSE::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayAssetSE, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000020, "Member 'BattleSoundManager_C_PlayAssetSE::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayAssetSE, K2Node_MakeStruct_BTL_SOUND_PARAM) == 0x000028, "Member 'BattleSoundManager_C_PlayAssetSE::K2Node_MakeStruct_BTL_SOUND_PARAM' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayAssetSE, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'BattleSoundManager_C_PlayAssetSE::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.Change BGM
// 0x0058 (0x0058 - 0x0000)
struct BattleSoundManager_C_Change_BGM final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleBGMType                                BGM_Type;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFadeType                                     FadeType;                                          // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsContinuousBGMBattle;                             // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Valid;                                             // 0x0007(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Lo_ValidBGM;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BE1[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Lo_Index;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Lo_BGMCue;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BE2[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_ChoiceBattleBGM_Out;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChoiceBattleBGM_valid;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BE3[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue_1;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBgmScene                                     CallFunc_GetBGMScene_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BE4[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue_2;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSoundManager_C_Change_BGM) == 0x000008, "Wrong alignment on BattleSoundManager_C_Change_BGM");
static_assert(sizeof(BattleSoundManager_C_Change_BGM) == 0x000058, "Wrong size on BattleSoundManager_C_Change_BGM");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, Param_Index) == 0x000000, "Member 'BattleSoundManager_C_Change_BGM::Param_Index' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, BGM_Type) == 0x000004, "Member 'BattleSoundManager_C_Change_BGM::BGM_Type' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, FadeType) == 0x000005, "Member 'BattleSoundManager_C_Change_BGM::FadeType' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, IsContinuousBGMBattle) == 0x000006, "Member 'BattleSoundManager_C_Change_BGM::IsContinuousBGMBattle' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, Valid) == 0x000007, "Member 'BattleSoundManager_C_Change_BGM::Valid' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, Lo_ValidBGM) == 0x000008, "Member 'BattleSoundManager_C_Change_BGM::Lo_ValidBGM' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, Lo_Index) == 0x00000C, "Member 'BattleSoundManager_C_Change_BGM::Lo_Index' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, Lo_BGMCue) == 0x000010, "Member 'BattleSoundManager_C_Change_BGM::Lo_BGMCue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'BattleSoundManager_C_Change_BGM::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BattleSoundManager_C_Change_BGM::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001A, "Member 'BattleSoundManager_C_Change_BGM::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'BattleSoundManager_C_Change_BGM::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, CallFunc_ChoiceBattleBGM_Out) == 0x000020, "Member 'BattleSoundManager_C_Change_BGM::CallFunc_ChoiceBattleBGM_Out' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, CallFunc_ChoiceBattleBGM_valid) == 0x000028, "Member 'BattleSoundManager_C_Change_BGM::CallFunc_ChoiceBattleBGM_valid' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, CallFunc_Get_ReturnValue) == 0x000030, "Member 'BattleSoundManager_C_Change_BGM::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, CallFunc_Get_ReturnValue_1) == 0x000038, "Member 'BattleSoundManager_C_Change_BGM::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, CallFunc_GetBGMScene_ReturnValue) == 0x000040, "Member 'BattleSoundManager_C_Change_BGM::CallFunc_GetBGMScene_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000041, "Member 'BattleSoundManager_C_Change_BGM::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000042, "Member 'BattleSoundManager_C_Change_BGM::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, CallFunc_Not_PreBool_ReturnValue) == 0x000043, "Member 'BattleSoundManager_C_Change_BGM::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, CallFunc_Get_ReturnValue_2) == 0x000048, "Member 'BattleSoundManager_C_Change_BGM::CallFunc_Get_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, CallFunc_BooleanOR_ReturnValue) == 0x000050, "Member 'BattleSoundManager_C_Change_BGM::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Change_BGM, CallFunc_BooleanOR_ReturnValue_1) == 0x000051, "Member 'BattleSoundManager_C_Change_BGM::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.StopAllSE
// 0x0008 (0x0008 - 0x0000)
struct BattleSoundManager_C_StopAllSE final
{
public:
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSoundManager_C_StopAllSE) == 0x000008, "Wrong alignment on BattleSoundManager_C_StopAllSE");
static_assert(sizeof(BattleSoundManager_C_StopAllSE) == 0x000008, "Wrong size on BattleSoundManager_C_StopAllSE");
static_assert(offsetof(BattleSoundManager_C_StopAllSE, CallFunc_Get_ReturnValue) == 0x000000, "Member 'BattleSoundManager_C_StopAllSE::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.PlayAssetSE_2D
// 0x0038 (0x0038 - 0x0000)
struct BattleSoundManager_C_PlayAssetSE_2D final
{
public:
	class USoundAtomCue*                          Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnorePlayRate;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BE5[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayRate_PlayRate;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BE6[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_SpawnSound2D_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBTL_SOUND_PARAM                       K2Node_MakeStruct_BTL_SOUND_PARAM;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSoundManager_C_PlayAssetSE_2D) == 0x000008, "Wrong alignment on BattleSoundManager_C_PlayAssetSE_2D");
static_assert(sizeof(BattleSoundManager_C_PlayAssetSE_2D) == 0x000038, "Wrong size on BattleSoundManager_C_PlayAssetSE_2D");
static_assert(offsetof(BattleSoundManager_C_PlayAssetSE_2D, Sound) == 0x000000, "Member 'BattleSoundManager_C_PlayAssetSE_2D::Sound' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayAssetSE_2D, IgnorePlayRate) == 0x000008, "Member 'BattleSoundManager_C_PlayAssetSE_2D::IgnorePlayRate' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayAssetSE_2D, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BattleSoundManager_C_PlayAssetSE_2D::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayAssetSE_2D, CallFunc_GetPlayRate_PlayRate) == 0x00000C, "Member 'BattleSoundManager_C_PlayAssetSE_2D::CallFunc_GetPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayAssetSE_2D, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BattleSoundManager_C_PlayAssetSE_2D::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayAssetSE_2D, CallFunc_SpawnSound2D_ReturnValue) == 0x000018, "Member 'BattleSoundManager_C_PlayAssetSE_2D::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayAssetSE_2D, K2Node_MakeStruct_BTL_SOUND_PARAM) == 0x000020, "Member 'BattleSoundManager_C_PlayAssetSE_2D::K2Node_MakeStruct_BTL_SOUND_PARAM' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_PlayAssetSE_2D, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'BattleSoundManager_C_PlayAssetSE_2D::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.GetMainWork
// 0x0038 (0x0038 - 0x0000)
struct BattleSoundManager_C_GetMainWork final
{
public:
	TScriptInterface<class IBPI_BattleMain_C>     BattleMain;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Valid;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BE7[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleMain_C>     K2Node_DynamicCast_AsBPI_Battle_Main;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSoundManager_C_GetMainWork) == 0x000008, "Wrong alignment on BattleSoundManager_C_GetMainWork");
static_assert(sizeof(BattleSoundManager_C_GetMainWork) == 0x000038, "Wrong size on BattleSoundManager_C_GetMainWork");
static_assert(offsetof(BattleSoundManager_C_GetMainWork, BattleMain) == 0x000000, "Member 'BattleSoundManager_C_GetMainWork::BattleMain' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetMainWork, Valid) == 0x000010, "Member 'BattleSoundManager_C_GetMainWork::Valid' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetMainWork, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BattleSoundManager_C_GetMainWork::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetMainWork, K2Node_DynamicCast_AsBPI_Battle_Main) == 0x000020, "Member 'BattleSoundManager_C_GetMainWork::K2Node_DynamicCast_AsBPI_Battle_Main' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetMainWork, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BattleSoundManager_C_GetMainWork::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.GetPlayRate
// 0x0020 (0x0020 - 0x0000)
struct BattleSoundManager_C_GetPlayRate final
{
public:
	float                                         PlayRate;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BE8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleMain_C>     CallFunc_GetMainWork_BattleMain;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetMainWork_Valid;                        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BE9[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BI_GetBattlePlayRate_PlayRate;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSoundManager_C_GetPlayRate) == 0x000008, "Wrong alignment on BattleSoundManager_C_GetPlayRate");
static_assert(sizeof(BattleSoundManager_C_GetPlayRate) == 0x000020, "Wrong size on BattleSoundManager_C_GetPlayRate");
static_assert(offsetof(BattleSoundManager_C_GetPlayRate, PlayRate) == 0x000000, "Member 'BattleSoundManager_C_GetPlayRate::PlayRate' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetPlayRate, CallFunc_GetMainWork_BattleMain) == 0x000008, "Member 'BattleSoundManager_C_GetPlayRate::CallFunc_GetMainWork_BattleMain' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetPlayRate, CallFunc_GetMainWork_Valid) == 0x000018, "Member 'BattleSoundManager_C_GetPlayRate::CallFunc_GetMainWork_Valid' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_GetPlayRate, CallFunc_BI_GetBattlePlayRate_PlayRate) == 0x00001C, "Member 'BattleSoundManager_C_GetPlayRate::CallFunc_BI_GetBattlePlayRate_PlayRate' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.SetPlayRate
// 0x0030 (0x0030 - 0x0000)
struct BattleSoundManager_C_SetPlayRate final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayRate_PlayRate;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BEA[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_SOUND_PARAM                       CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSoundManager_C_SetPlayRate) == 0x000008, "Wrong alignment on BattleSoundManager_C_SetPlayRate");
static_assert(sizeof(BattleSoundManager_C_SetPlayRate) == 0x000030, "Wrong size on BattleSoundManager_C_SetPlayRate");
static_assert(offsetof(BattleSoundManager_C_SetPlayRate, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BattleSoundManager_C_SetPlayRate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_SetPlayRate, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BattleSoundManager_C_SetPlayRate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_SetPlayRate, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BattleSoundManager_C_SetPlayRate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_SetPlayRate, CallFunc_GetPlayRate_PlayRate) == 0x00000C, "Member 'BattleSoundManager_C_SetPlayRate::CallFunc_GetPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_SetPlayRate, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BattleSoundManager_C_SetPlayRate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_SetPlayRate, CallFunc_Array_Get_Item) == 0x000018, "Member 'BattleSoundManager_C_SetPlayRate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_SetPlayRate, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BattleSoundManager_C_SetPlayRate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_SetPlayRate, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BattleSoundManager_C_SetPlayRate::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.Refresh
// 0x0060 (0x0060 - 0x0000)
struct BattleSoundManager_C_Refresh final
{
public:
	TArray<struct FBTL_SOUND_PARAM>               Lo_Trash;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBTL_SOUND_PARAM                       CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BEB[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BEC[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBTL_SOUND_PARAM                       CallFunc_Array_Get_Item_1;                         // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BED[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSoundManager_C_Refresh) == 0x000008, "Wrong alignment on BattleSoundManager_C_Refresh");
static_assert(sizeof(BattleSoundManager_C_Refresh) == 0x000060, "Wrong size on BattleSoundManager_C_Refresh");
static_assert(offsetof(BattleSoundManager_C_Refresh, Lo_Trash) == 0x000000, "Member 'BattleSoundManager_C_Refresh::Lo_Trash' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Refresh, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BattleSoundManager_C_Refresh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Refresh, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BattleSoundManager_C_Refresh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Refresh, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BattleSoundManager_C_Refresh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Refresh, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BattleSoundManager_C_Refresh::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Refresh, CallFunc_Array_Get_Item) == 0x000020, "Member 'BattleSoundManager_C_Refresh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Refresh, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BattleSoundManager_C_Refresh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Refresh, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BattleSoundManager_C_Refresh::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Refresh, CallFunc_Array_RemoveItem_ReturnValue) == 0x000038, "Member 'BattleSoundManager_C_Refresh::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Refresh, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BattleSoundManager_C_Refresh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Refresh, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BattleSoundManager_C_Refresh::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Refresh, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BattleSoundManager_C_Refresh::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Refresh, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BattleSoundManager_C_Refresh::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Refresh, CallFunc_Less_IntInt_ReturnValue_1) == 0x000058, "Member 'BattleSoundManager_C_Refresh::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Refresh, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'BattleSoundManager_C_Refresh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_Refresh, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'BattleSoundManager_C_Refresh::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.RememberCurrentBGM
// 0x0020 (0x0020 - 0x0000)
struct BattleSoundManager_C_RememberCurrentBGM final
{
public:
	class USoundAtomCue*                          PrevBattleBGM;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BEE[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetCurrentBGM_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSoundManager_C_RememberCurrentBGM) == 0x000008, "Wrong alignment on BattleSoundManager_C_RememberCurrentBGM");
static_assert(sizeof(BattleSoundManager_C_RememberCurrentBGM) == 0x000020, "Wrong size on BattleSoundManager_C_RememberCurrentBGM");
static_assert(offsetof(BattleSoundManager_C_RememberCurrentBGM, PrevBattleBGM) == 0x000000, "Member 'BattleSoundManager_C_RememberCurrentBGM::PrevBattleBGM' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_RememberCurrentBGM, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BattleSoundManager_C_RememberCurrentBGM::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_RememberCurrentBGM, CallFunc_Get_ReturnValue) == 0x000010, "Member 'BattleSoundManager_C_RememberCurrentBGM::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_RememberCurrentBGM, CallFunc_GetCurrentBGM_ReturnValue) == 0x000018, "Member 'BattleSoundManager_C_RememberCurrentBGM::CallFunc_GetCurrentBGM_ReturnValue' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.ShowBattleStat
// 0x00E8 (0x00E8 - 0x0000)
struct BattleSoundManager_C_ShowBattleStat final
{
public:
	class FString                                 Lo_String;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BEF[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBTL_SOUND_PARAM                       CallFunc_Array_Get_Item;                           // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BF0[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCueName_ReturnValue;                   // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSoundManager_C_ShowBattleStat) == 0x000008, "Wrong alignment on BattleSoundManager_C_ShowBattleStat");
static_assert(sizeof(BattleSoundManager_C_ShowBattleStat) == 0x0000E8, "Wrong size on BattleSoundManager_C_ShowBattleStat");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, Lo_String) == 0x000000, "Member 'BattleSoundManager_C_ShowBattleStat::Lo_String' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BattleSoundManager_C_ShowBattleStat::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BattleSoundManager_C_ShowBattleStat::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'BattleSoundManager_C_ShowBattleStat::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BattleSoundManager_C_ShowBattleStat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BattleSoundManager_C_ShowBattleStat::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'BattleSoundManager_C_ShowBattleStat::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000050, "Member 'BattleSoundManager_C_ShowBattleStat::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000060, "Member 'BattleSoundManager_C_ShowBattleStat::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, CallFunc_Array_Get_Item) == 0x000070, "Member 'BattleSoundManager_C_ShowBattleStat::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BattleSoundManager_C_ShowBattleStat::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, CallFunc_Not_PreBool_ReturnValue) == 0x000084, "Member 'BattleSoundManager_C_ShowBattleStat::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, CallFunc_Less_IntInt_ReturnValue) == 0x000085, "Member 'BattleSoundManager_C_ShowBattleStat::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, CallFunc_Conv_BoolToString_ReturnValue) == 0x000088, "Member 'BattleSoundManager_C_ShowBattleStat::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, CallFunc_GetCueName_ReturnValue) == 0x000098, "Member 'BattleSoundManager_C_ShowBattleStat::CallFunc_GetCueName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000A8, "Member 'BattleSoundManager_C_ShowBattleStat::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000B8, "Member 'BattleSoundManager_C_ShowBattleStat::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000C8, "Member 'BattleSoundManager_C_ShowBattleStat::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_ShowBattleStat, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000D8, "Member 'BattleSoundManager_C_ShowBattleStat::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.GetCurrentBGMType
// 0x0001 (0x0001 - 0x0000)
struct BattleSoundManager_C_GetCurrentBGMType final
{
public:
	EBattleBGMType                                Type;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSoundManager_C_GetCurrentBGMType) == 0x000001, "Wrong alignment on BattleSoundManager_C_GetCurrentBGMType");
static_assert(sizeof(BattleSoundManager_C_GetCurrentBGMType) == 0x000001, "Wrong size on BattleSoundManager_C_GetCurrentBGMType");
static_assert(offsetof(BattleSoundManager_C_GetCurrentBGMType, Type) == 0x000000, "Member 'BattleSoundManager_C_GetCurrentBGMType::Type' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.BI_PlayResidentSE
// 0x0018 (0x0018 - 0x0000)
struct BattleSoundManager_C_BI_PlayResidentSE final
{
public:
	class FName                                   SEName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetValue;                                          // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSoundManager_C_BI_PlayResidentSE) == 0x000004, "Wrong alignment on BattleSoundManager_C_BI_PlayResidentSE");
static_assert(sizeof(BattleSoundManager_C_BI_PlayResidentSE) == 0x000018, "Wrong size on BattleSoundManager_C_BI_PlayResidentSE");
static_assert(offsetof(BattleSoundManager_C_BI_PlayResidentSE, SEName) == 0x000000, "Member 'BattleSoundManager_C_BI_PlayResidentSE::SEName' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_BI_PlayResidentSE, Location) == 0x000008, "Member 'BattleSoundManager_C_BI_PlayResidentSE::Location' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_BI_PlayResidentSE, RetValue) == 0x000014, "Member 'BattleSoundManager_C_BI_PlayResidentSE::RetValue' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.BI_PlayAssetSE
// 0x0018 (0x0018 - 0x0000)
struct BattleSoundManager_C_BI_PlayAssetSE final
{
public:
	class USoundAtomCue*                          Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnorePlayRate;                                    // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0015(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSoundManager_C_BI_PlayAssetSE) == 0x000008, "Wrong alignment on BattleSoundManager_C_BI_PlayAssetSE");
static_assert(sizeof(BattleSoundManager_C_BI_PlayAssetSE) == 0x000018, "Wrong size on BattleSoundManager_C_BI_PlayAssetSE");
static_assert(offsetof(BattleSoundManager_C_BI_PlayAssetSE, Data) == 0x000000, "Member 'BattleSoundManager_C_BI_PlayAssetSE::Data' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_BI_PlayAssetSE, Location) == 0x000008, "Member 'BattleSoundManager_C_BI_PlayAssetSE::Location' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_BI_PlayAssetSE, IgnorePlayRate) == 0x000014, "Member 'BattleSoundManager_C_BI_PlayAssetSE::IgnorePlayRate' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_BI_PlayAssetSE, RetValue) == 0x000015, "Member 'BattleSoundManager_C_BI_PlayAssetSE::RetValue' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.BI_GetResidentSEByName
// 0x0028 (0x0028 - 0x0000)
struct BattleSoundManager_C_BI_GetResidentSEByName final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class USoundAtomCue*                          RetValue;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetResidentAssetByName_retValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BattleSoundManager_C_BI_GetResidentSEByName) == 0x000008, "Wrong alignment on BattleSoundManager_C_BI_GetResidentSEByName");
static_assert(sizeof(BattleSoundManager_C_BI_GetResidentSEByName) == 0x000028, "Wrong size on BattleSoundManager_C_BI_GetResidentSEByName");
static_assert(offsetof(BattleSoundManager_C_BI_GetResidentSEByName, Param_Name) == 0x000000, "Member 'BattleSoundManager_C_BI_GetResidentSEByName::Param_Name' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_BI_GetResidentSEByName, RetValue) == 0x000010, "Member 'BattleSoundManager_C_BI_GetResidentSEByName::RetValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_BI_GetResidentSEByName, CallFunc_Conv_StringToName_ReturnValue) == 0x000018, "Member 'BattleSoundManager_C_BI_GetResidentSEByName::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_BI_GetResidentSEByName, CallFunc_GetResidentAssetByName_retValue) == 0x000020, "Member 'BattleSoundManager_C_BI_GetResidentSEByName::CallFunc_GetResidentAssetByName_retValue' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.BI_ChangeBGM
// 0x000C (0x000C - 0x0000)
struct BattleSoundManager_C_BI_ChangeBGM final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleBGMType                                BGM_Type;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFadeType                                     FadeType;                                          // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsContinuousBGMBattle;                             // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Valid;                                             // 0x0007(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Change_BGM_valid;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSoundManager_C_BI_ChangeBGM) == 0x000004, "Wrong alignment on BattleSoundManager_C_BI_ChangeBGM");
static_assert(sizeof(BattleSoundManager_C_BI_ChangeBGM) == 0x00000C, "Wrong size on BattleSoundManager_C_BI_ChangeBGM");
static_assert(offsetof(BattleSoundManager_C_BI_ChangeBGM, ID) == 0x000000, "Member 'BattleSoundManager_C_BI_ChangeBGM::ID' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_BI_ChangeBGM, BGM_Type) == 0x000004, "Member 'BattleSoundManager_C_BI_ChangeBGM::BGM_Type' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_BI_ChangeBGM, FadeType) == 0x000005, "Member 'BattleSoundManager_C_BI_ChangeBGM::FadeType' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_BI_ChangeBGM, IsContinuousBGMBattle) == 0x000006, "Member 'BattleSoundManager_C_BI_ChangeBGM::IsContinuousBGMBattle' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_BI_ChangeBGM, Valid) == 0x000007, "Member 'BattleSoundManager_C_BI_ChangeBGM::Valid' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_BI_ChangeBGM, CallFunc_Change_BGM_valid) == 0x000008, "Member 'BattleSoundManager_C_BI_ChangeBGM::CallFunc_Change_BGM_valid' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.BI_StopAllSE
// 0x0001 (0x0001 - 0x0000)
struct BattleSoundManager_C_BI_StopAllSE final
{
public:
	bool                                          NoUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSoundManager_C_BI_StopAllSE) == 0x000001, "Wrong alignment on BattleSoundManager_C_BI_StopAllSE");
static_assert(sizeof(BattleSoundManager_C_BI_StopAllSE) == 0x000001, "Wrong size on BattleSoundManager_C_BI_StopAllSE");
static_assert(offsetof(BattleSoundManager_C_BI_StopAllSE, NoUse) == 0x000000, "Member 'BattleSoundManager_C_BI_StopAllSE::NoUse' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.BI_PlayAssetSE_2D
// 0x0010 (0x0010 - 0x0000)
struct BattleSoundManager_C_BI_PlayAssetSE_2D final
{
public:
	class USoundAtomCue*                          Data;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnorePlayRate;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoUse;                                             // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSoundManager_C_BI_PlayAssetSE_2D) == 0x000008, "Wrong alignment on BattleSoundManager_C_BI_PlayAssetSE_2D");
static_assert(sizeof(BattleSoundManager_C_BI_PlayAssetSE_2D) == 0x000010, "Wrong size on BattleSoundManager_C_BI_PlayAssetSE_2D");
static_assert(offsetof(BattleSoundManager_C_BI_PlayAssetSE_2D, Data) == 0x000000, "Member 'BattleSoundManager_C_BI_PlayAssetSE_2D::Data' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_BI_PlayAssetSE_2D, IgnorePlayRate) == 0x000008, "Member 'BattleSoundManager_C_BI_PlayAssetSE_2D::IgnorePlayRate' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_BI_PlayAssetSE_2D, NoUse) == 0x000009, "Member 'BattleSoundManager_C_BI_PlayAssetSE_2D::NoUse' has a wrong offset!");

// Function BattleSoundManager.BattleSoundManager_C.BI_RememberCurrentBGM
// 0x0010 (0x0010 - 0x0000)
struct BattleSoundManager_C_BI_RememberCurrentBGM final
{
public:
	class USoundAtomCue*                          PrevBattleBGM;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoUse;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleSoundManager_C_BI_RememberCurrentBGM) == 0x000008, "Wrong alignment on BattleSoundManager_C_BI_RememberCurrentBGM");
static_assert(sizeof(BattleSoundManager_C_BI_RememberCurrentBGM) == 0x000010, "Wrong size on BattleSoundManager_C_BI_RememberCurrentBGM");
static_assert(offsetof(BattleSoundManager_C_BI_RememberCurrentBGM, PrevBattleBGM) == 0x000000, "Member 'BattleSoundManager_C_BI_RememberCurrentBGM::PrevBattleBGM' has a wrong offset!");
static_assert(offsetof(BattleSoundManager_C_BI_RememberCurrentBGM, NoUse) == 0x000008, "Member 'BattleSoundManager_C_BI_RememberCurrentBGM::NoUse' has a wrong offset!");

}

