#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_BtlNumericalValue

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Project_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_BtlNumericalValue.WB_BtlNumericalValue_C
// 0x0110 (0x0370 - 0x0260)
class UWB_BtlNumericalValue_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         Horizontal_Value;                                  // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Sign;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Value1;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Value10;                                     // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Value100;                                    // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Value1000;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Value10000;                                  // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Value100000;                                 // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Value1000000;                                // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Value10000000;                               // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_AnimHPMP;                                 // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_AnimSign;                                 // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_AnimValue1;                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_AnimValue10;                              // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_AnimValue100;                             // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_AnimValue1000;                            // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_AnimValue10000;                           // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_AnimValue100000;                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_AnimValue1000000;                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_AnimValue10000000;                        // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_HPMP;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BTL_NUMEFF                                  NumEff;                                            // 0x0314(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1C[0x3];                                     // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         ValueImages;                                       // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class USsPlayerWidget*>                ValueParents;                                      // 0x0328(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         AppearedPos;                                       // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x033C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USsPlayerWidget*>                ValidParents;                                      // 0x0340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          IsAppeared;                                        // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F1D[0x7];                                     // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnDisappearFinished;                               // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsInitialized;                                     // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTickable;                                        // 0x0369(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnDisappearFinished__DelegateSignature();
	void ExecuteUbergraph_WB_BtlNumericalValue(int32 EntryPoint);
	void BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue10000000_K2Node_ComponentBoundEvent_9_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue1000000_K2Node_ComponentBoundEvent_8_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__WB_BtlNumericalValue_SsPlayer_AnimValue100000_K2Node_ComponentBoundEvent_7_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void Disappear(float Rate, bool Immediately);
	void BndEvt__SsPlayer_AnimValue10000_K2Node_ComponentBoundEvent_6_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayer_AnimValue1000_K2Node_ComponentBoundEvent_5_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayer_AnimValue100_K2Node_ComponentBoundEvent_4_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayer_AnimValue10_K2Node_ComponentBoundEvent_3_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayer_AnimValue1_K2Node_ComponentBoundEvent_2_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayer_AnimSign_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayer_AnimHPMP_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void Appear(float Rate, bool Immediately);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void CallTick(float Delta);
	void InitDisappeared();
	void SetValue(int32 Param_Value, E_BTL_NUMEFF NumEffect);
	void GetValuePosition(int32 Position, class UImage** Image, class USsPlayerWidget** Parent);
	void GetValueSign(class UImage** Image, class USsPlayerWidget** Parent);
	void GetValueHPMP(class USsPlayerWidget** Image, class USsPlayerWidget** Parent);
	void PlayNumAnim(class USsPlayerWidget*& Anim, float Rate, int32 AnimIndex, bool IsLoop);
	void SetColor(E_BTL_NUMEFF Param_NumEff);
	void RegisterValueImages();
	void RegisterValueParents();
	void PlayHPMP_Anim(E_BTL_NUMEFF Param_NumEff, float Rate);
	void CalcValidValuePosition(int32 Param_Value, int32* Position);
	void SetAllVisibility(ESlateVisibility Param_Visibility);
	void Initialize();
	void AdjustScale(class USsPlayerWidget*& Parent);
	void SetAllWidgetTick(bool Enable);
	void IsDisappeared(bool* Param_IsDisappeared);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_BtlNumericalValue_C">();
	}
	static class UWB_BtlNumericalValue_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_BtlNumericalValue_C>();
	}
};
static_assert(alignof(UWB_BtlNumericalValue_C) == 0x000008, "Wrong alignment on UWB_BtlNumericalValue_C");
static_assert(sizeof(UWB_BtlNumericalValue_C) == 0x000370, "Wrong size on UWB_BtlNumericalValue_C");
static_assert(offsetof(UWB_BtlNumericalValue_C, UberGraphFrame) == 0x000260, "Member 'UWB_BtlNumericalValue_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, Horizontal_Value) == 0x000268, "Member 'UWB_BtlNumericalValue_C::Horizontal_Value' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, Image_Sign) == 0x000270, "Member 'UWB_BtlNumericalValue_C::Image_Sign' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, Image_Value1) == 0x000278, "Member 'UWB_BtlNumericalValue_C::Image_Value1' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, Image_Value10) == 0x000280, "Member 'UWB_BtlNumericalValue_C::Image_Value10' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, Image_Value100) == 0x000288, "Member 'UWB_BtlNumericalValue_C::Image_Value100' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, Image_Value1000) == 0x000290, "Member 'UWB_BtlNumericalValue_C::Image_Value1000' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, Image_Value10000) == 0x000298, "Member 'UWB_BtlNumericalValue_C::Image_Value10000' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, Image_Value100000) == 0x0002A0, "Member 'UWB_BtlNumericalValue_C::Image_Value100000' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, Image_Value1000000) == 0x0002A8, "Member 'UWB_BtlNumericalValue_C::Image_Value1000000' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, Image_Value10000000) == 0x0002B0, "Member 'UWB_BtlNumericalValue_C::Image_Value10000000' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, SsPlayer_AnimHPMP) == 0x0002B8, "Member 'UWB_BtlNumericalValue_C::SsPlayer_AnimHPMP' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, SsPlayer_AnimSign) == 0x0002C0, "Member 'UWB_BtlNumericalValue_C::SsPlayer_AnimSign' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, SsPlayer_AnimValue1) == 0x0002C8, "Member 'UWB_BtlNumericalValue_C::SsPlayer_AnimValue1' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, SsPlayer_AnimValue10) == 0x0002D0, "Member 'UWB_BtlNumericalValue_C::SsPlayer_AnimValue10' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, SsPlayer_AnimValue100) == 0x0002D8, "Member 'UWB_BtlNumericalValue_C::SsPlayer_AnimValue100' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, SsPlayer_AnimValue1000) == 0x0002E0, "Member 'UWB_BtlNumericalValue_C::SsPlayer_AnimValue1000' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, SsPlayer_AnimValue10000) == 0x0002E8, "Member 'UWB_BtlNumericalValue_C::SsPlayer_AnimValue10000' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, SsPlayer_AnimValue100000) == 0x0002F0, "Member 'UWB_BtlNumericalValue_C::SsPlayer_AnimValue100000' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, SsPlayer_AnimValue1000000) == 0x0002F8, "Member 'UWB_BtlNumericalValue_C::SsPlayer_AnimValue1000000' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, SsPlayer_AnimValue10000000) == 0x000300, "Member 'UWB_BtlNumericalValue_C::SsPlayer_AnimValue10000000' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, SsPlayer_HPMP) == 0x000308, "Member 'UWB_BtlNumericalValue_C::SsPlayer_HPMP' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, Value) == 0x000310, "Member 'UWB_BtlNumericalValue_C::Value' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, NumEff) == 0x000314, "Member 'UWB_BtlNumericalValue_C::NumEff' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, ValueImages) == 0x000318, "Member 'UWB_BtlNumericalValue_C::ValueImages' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, ValueParents) == 0x000328, "Member 'UWB_BtlNumericalValue_C::ValueParents' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, AppearedPos) == 0x000338, "Member 'UWB_BtlNumericalValue_C::AppearedPos' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, PlayRate) == 0x00033C, "Member 'UWB_BtlNumericalValue_C::PlayRate' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, ValidParents) == 0x000340, "Member 'UWB_BtlNumericalValue_C::ValidParents' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, IsAppeared) == 0x000350, "Member 'UWB_BtlNumericalValue_C::IsAppeared' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, OnDisappearFinished) == 0x000358, "Member 'UWB_BtlNumericalValue_C::OnDisappearFinished' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, IsInitialized) == 0x000368, "Member 'UWB_BtlNumericalValue_C::IsInitialized' has a wrong offset!");
static_assert(offsetof(UWB_BtlNumericalValue_C, IsTickable) == 0x000369, "Member 'UWB_BtlNumericalValue_C::IsTickable' has a wrong offset!");

}

