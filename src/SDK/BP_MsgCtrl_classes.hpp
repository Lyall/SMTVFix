#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MsgCtrl

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_MSGCTRL_GSTATUS_structs.hpp"
#include "Project_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MsgCtrl.BP_MsgCtrl_C
// 0x0080 (0x02A0 - 0x0220)
class ABP_MsgCtrl_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Padbutton;                                         // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Padcursor;                                         // 0x0234(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_MsgWindow_C*                        WBMsgWindow;                                       // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MSGCTRL_GSTATUS                             Maingstatus;                                       // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MSGCTRL_GSTATUS                             Changegstatus;                                     // 0x0241(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGstatusChange;                                   // 0x0242(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFinishedWindowIn;                                // 0x0243(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSetMsg;                                          // 0x0244(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsMessageFinished;                                 // 0x0245(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsMessageWindowPositionSet;                        // 0x0246(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsAlreadySetWindowIn;                              // 0x0247(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsAlreadySetWindowOut;                             // 0x0248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsCentering;                                       // 0x0249(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D58[0x6];                                     // 0x024A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptMessageAsset*                    RLabelSMA;                                         // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    RIndexSMA;                                         // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    TLabelSMA;                                         // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    TIndexSMA;                                         // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    SelectMenuLabelSMA;                                // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    SelectMenuIndexSMA;                                // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    SelectMenuIndexASMA;                               // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    SelectMenuLableASMA;                               // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Mouseconfirmedindex;                               // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelectMouseMove;                                 // 0x0294(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsMacroEnd;                                        // 0x0295(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D59[0x2];                                     // 0x0296(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ValueMacroEnd;                                     // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMouseMaskFlag;                                   // 0x029C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_MsgCtrl(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void IMsgWindowSettings(int32 InType);
	void IMsgWindowPageIconOff();
	void IExecutionMsgWindowOut();
	void IExecutionMsgWindowIn(E_WIDGET_PRIO InPriority);
	void IMsgWindowOut();
	void IMsgWindowIn(E_WIDGET_PRIO InPriority);
	void IClearSelectWindow();
	void ISetMsgEventFlag(bool InEventFlag);
	void ISetRichMsgBuildText();
	void ISetRichMsgTextByIndex(class UScriptMessageAsset* InScriptMessageAsset, int32 InIndex, bool InExecutionText, bool InShowPageIconAfterCompleted, bool InBuildText);
	void ISetRichMsgTextByLable(class UScriptMessageAsset* InScriptMessageAsset, class FName InLabel, bool InExecutionText, bool InShowPageIconAfterCompleted, bool InBuildText);
	void IExecutionMsgText();
	void IClearMsgText();
	void ISetMsgTextByIndex(class UScriptMessageAsset* ArgScriptMessageAsset, int32 Argindex, bool ArgExecutionText, bool ArgShowPageIconAfterCompleted);
	void ISetMsgText(class UScriptMessageAsset* ArgScriptMessageAsset, class FName ArgLabel, bool ArgExecutionText, bool ArgShowPageIconAfterCompleted);
	void ISetMsgSelectMenuByLabelAfterBuild(int32 InMenuNumber, int32 InInitCursorPosition, class UScriptMessageAsset* InScriptMessageAsset, const TArray<class FName>& InSelectItemName, const bool InUseNewIcon, const TArray<bool>& InSelectItemNewIcon, TArray<bool>& InSelectTextDisabledColor, const bool InBuildTextLater);
	void ISetMsgSelectBuildText();
	void ISetMsgSelectMenuByIndexAfterBuild(int32 InMenuNumber, int32 InInitCursorPosition, class UScriptMessageAsset* InScriptMessageAsset, const TArray<int32>& NSelectItemIndex, bool InUseNewIcon, const TArray<bool>& InSelectItemNewIcon, TArray<bool>& InSelectTextDisabledColor, bool InBuildTextLater);
	void ISetMsgSelectMenuByIndex(int32 InMenuNumber, int32 InInitCursorPosition, class UScriptMessageAsset* InScriptMessageAsset, const TArray<int32>& InSelectItemIndex, bool InUseNewIcon, const TArray<bool>& InSelectItemNewIcon, TArray<bool>& InSelectTextDisabledColor);
	void IMoveSelectCursor(const int32 InParam);
	void ISetMsgSelectMenu(int32 InMenuNumber, int32 InInitCursorPosition, class UScriptMessageAsset* InScriptMessageAsset, const TArray<class FName>& InSelectItemName, bool InUseNewIcon, const TArray<bool>& InSelectItemNewIcon, const TArray<bool>& InSelectTextDisabledColor);
	void IMsgSelectMenuOff();
	void IMsgWindowStopVoicePlay();
	void IMsgWindowVoiceOff();
	void IMsgWindowVoiceOn();
	void ClearAllScriptMessageAsset();
	void IMsgSetRichTextProgramValue(int32 InIndex, const class FString& InValue);
	void IMsgSetRichTextValueParam(int32 InIndex, int32 InValueParam);
	void IMsgSetRichSelectTextValueParam(int32 InSelectIndex, int32 InValueIndex, int32 InValueParam);
	void OnAnyItemSelected(int32 InIndex);
	void OnAnyItemClicked(int32 InIndex);
	void BeginPlay_SelectMouse();
	void IMsgCtrl_DrawCommonMsgSelectExIndex(class UScriptMessageAsset* SelectAsset, const TArray<int32>& SelectArray, int32 SelectNum, int32 CursorPosition, const TArray<bool>& GrayText, bool EnterDelay, bool UseCancel);
	void IMsgCtrl_DrawCommonMsgSelectEx(class UScriptMessageAsset* SelectAsset, const TArray<class FName>& SelectArray, int32 SelectNum, int32 CursorPosition, const TArray<bool>& GrayText, bool EnterDelay, bool UseCancel);
	void IMsgCtrl_DrawCommonMsgTextLipSync(class UScriptMessageAsset* ScriptMessageAsset, class FName Label, bool ExecutionText, bool ShowPageIconAfterCompleted, class AActor* SpeakingActor);
	void IMsgCtrl_DrawCommonMsgTextLabel(class UScriptMessageAsset* ScriptMessageAsset, class FName Label, bool ExecutionText, bool ShowPageIconAfterCompleted, class AActor* SpeakingActor, bool FullvoiceText);
	void IMsgCtrl_DrawCommonMsgTextIndex(class UScriptMessageAsset* MessageAsset, int32 Param_Index, bool ExecutionText, bool ShowPageIconAfterCompleted, class AActor* SpeakingActor, bool FullvoiceText);
	void PadCheck();
	void Gstatus_Init();
	void Gstatus_WaitInit();
	void ChangeGstatusParam(E_MSGCTRL_GSTATUS InGStatus);
	void Gstatus_MsgWindowIn();
	void Gstatus_WaitMsgSet();
	void Gstatus_RunningMsg();
	void CanSetMsg(bool* OutFinished);
	void SetMsgText(class UScriptMessageAsset* ArgScriptMessageAsset, class FName ArgLabel, bool ArgExecutionText);
	void Gstatus_WaitMsg();
	void Gstatus_End();
	void Gstatus_WaitEnd();
	void ExecutionMsgWindowIn();
	void MsgWindowOut();
	void IsFinishedWindowOut(bool* OutFinished);
	void AddWidget(E_WIDGET_PRIO InPriority);
	void IsCompletedMsg(bool* OutFinished);
	void SetMsgSelectMenu(int32 InMenuNumber, int32 InInitCursorPosition, class UScriptMessageAsset* InScriptMessageAsset, TArray<class FName>& InSelectItemName, TArray<bool>& InSelectItemNewIcon, TArray<bool>& InSelectTextDisabledColor);
	void MoveSelectCursor(int32 InParam);
	void MsgSelectMenuOff();
	void SetMsgTextByIndex(class UScriptMessageAsset* ArgScriptMessageAsset, int32 Argindex, bool ArgExecutionText);
	void SetMsgSelectMenuByIndex(int32 InMenuNumber, int32 InInitCursorPosition, class UScriptMessageAsset* InScriptMessageAsset, TArray<int32>& InSelectItemIndex, TArray<bool>& InSelectItemNameIcon, TArray<bool>& InSelectTextDisabledColor);
	void ClearMsgText();
	void GetSelectedCursorPosition(int32* OutIndex);
	void MsgWindowIn();
	void PlayNextPageSE();
	void IsCompletedPage(bool* Ret);
	void CalcSelectMenuWheel(bool* OutWheel);
	void CalcClickedMenu();
	void ICanSetMsg(bool* OutFinished);
	void IIsFinishedWindowOut(bool* OutFinished);
	void IGetSelectedCursorPosition(int32* OutIndex);
	void IIsFinishedWindowIn(bool* OutFinished);
	void IIsCompletedMsg(bool* OutFinished);
	void IMsgWindowGetCentering(bool* OutCentering);
	void IMsgWindowGetVoiceCompornent(class UAtomComponent** OutVoiceCompornent);
	int32 IMsgGetDrawStrLen();
	void IIsCompletedPage(bool* IsFinish);
	void IIsVisibleWindow(bool* IsVisible);
	void ISetWindowVisibility(bool IsVisible, bool* RerurnVisible);
	void IMsgSetSelectCursorMin(bool* OutParam);
	void IMsgSetSelectCursorMax(bool* OutParam);
	void IGetSelectCursorNum(int32* OutCursorNum);
	void IMsgGetStrLenExcludingTag(int32* StrLen);
	void IMsgWindowIsNextPageIconClicked(bool* OutClicked);
	void IMsgWindowIsConfirmedMouse(bool* OutFinished, int32* OutSelectedIndex);
	void IMsgWindowIsMovedCursorMouse(bool* OutMoved);
	void IMsgSetGardenTalkIcon(int32 InCursorIndex, bool* OutParam);
	void IMsgResetGardenTalkIcon(int32 InCursorIndex, bool* OutParam);
	void IMsgCtrl_GetIsMacroEnd(bool* IsEnd);
	void IMsgCtrl_GetValueMacroEnd(int32* Return);
	void IMsgWindowResetConfirmedMouse(bool* OutParam);
	void IMsg_Select_Menu_Hover_Off(bool* OutParam);
	void IMsgSetMouseMaskFlag(bool InMaskOn, bool* OutParam);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MsgCtrl_C">();
	}
	static class ABP_MsgCtrl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MsgCtrl_C>();
	}
};
static_assert(alignof(ABP_MsgCtrl_C) == 0x000008, "Wrong alignment on ABP_MsgCtrl_C");
static_assert(sizeof(ABP_MsgCtrl_C) == 0x0002A0, "Wrong size on ABP_MsgCtrl_C");
static_assert(offsetof(ABP_MsgCtrl_C, UberGraphFrame) == 0x000220, "Member 'ABP_MsgCtrl_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_MsgCtrl_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, Padbutton) == 0x000230, "Member 'ABP_MsgCtrl_C::Padbutton' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, Padcursor) == 0x000234, "Member 'ABP_MsgCtrl_C::Padcursor' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, WBMsgWindow) == 0x000238, "Member 'ABP_MsgCtrl_C::WBMsgWindow' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, Maingstatus) == 0x000240, "Member 'ABP_MsgCtrl_C::Maingstatus' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, Changegstatus) == 0x000241, "Member 'ABP_MsgCtrl_C::Changegstatus' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, IsGstatusChange) == 0x000242, "Member 'ABP_MsgCtrl_C::IsGstatusChange' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, IsFinishedWindowIn) == 0x000243, "Member 'ABP_MsgCtrl_C::IsFinishedWindowIn' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, IsSetMsg) == 0x000244, "Member 'ABP_MsgCtrl_C::IsSetMsg' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, IsMessageFinished) == 0x000245, "Member 'ABP_MsgCtrl_C::IsMessageFinished' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, IsMessageWindowPositionSet) == 0x000246, "Member 'ABP_MsgCtrl_C::IsMessageWindowPositionSet' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, IsAlreadySetWindowIn) == 0x000247, "Member 'ABP_MsgCtrl_C::IsAlreadySetWindowIn' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, IsAlreadySetWindowOut) == 0x000248, "Member 'ABP_MsgCtrl_C::IsAlreadySetWindowOut' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, IsCentering) == 0x000249, "Member 'ABP_MsgCtrl_C::IsCentering' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, RLabelSMA) == 0x000250, "Member 'ABP_MsgCtrl_C::RLabelSMA' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, RIndexSMA) == 0x000258, "Member 'ABP_MsgCtrl_C::RIndexSMA' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, TLabelSMA) == 0x000260, "Member 'ABP_MsgCtrl_C::TLabelSMA' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, TIndexSMA) == 0x000268, "Member 'ABP_MsgCtrl_C::TIndexSMA' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, SelectMenuLabelSMA) == 0x000270, "Member 'ABP_MsgCtrl_C::SelectMenuLabelSMA' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, SelectMenuIndexSMA) == 0x000278, "Member 'ABP_MsgCtrl_C::SelectMenuIndexSMA' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, SelectMenuIndexASMA) == 0x000280, "Member 'ABP_MsgCtrl_C::SelectMenuIndexASMA' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, SelectMenuLableASMA) == 0x000288, "Member 'ABP_MsgCtrl_C::SelectMenuLableASMA' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, Mouseconfirmedindex) == 0x000290, "Member 'ABP_MsgCtrl_C::Mouseconfirmedindex' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, IsSelectMouseMove) == 0x000294, "Member 'ABP_MsgCtrl_C::IsSelectMouseMove' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, IsMacroEnd) == 0x000295, "Member 'ABP_MsgCtrl_C::IsMacroEnd' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, ValueMacroEnd) == 0x000298, "Member 'ABP_MsgCtrl_C::ValueMacroEnd' has a wrong offset!");
static_assert(offsetof(ABP_MsgCtrl_C, IsMouseMaskFlag) == 0x00029C, "Member 'ABP_MsgCtrl_C::IsMouseMaskFlag' has a wrong offset!");

}

