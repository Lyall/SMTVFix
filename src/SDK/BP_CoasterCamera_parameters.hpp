#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CoasterCamera

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CoasterCamera.BP_CoasterCamera_C.ExecuteUbergraph_BP_CoasterCamera
// 0x0028 (0x0028 - 0x0000)
struct BP_CoasterCamera_C_ExecuteUbergraph_BP_CoasterCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSec;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterCamera_C_ExecuteUbergraph_BP_CoasterCamera) == 0x000008, "Wrong alignment on BP_CoasterCamera_C_ExecuteUbergraph_BP_CoasterCamera");
static_assert(sizeof(BP_CoasterCamera_C_ExecuteUbergraph_BP_CoasterCamera) == 0x000028, "Wrong size on BP_CoasterCamera_C_ExecuteUbergraph_BP_CoasterCamera");
static_assert(offsetof(BP_CoasterCamera_C_ExecuteUbergraph_BP_CoasterCamera, EntryPoint) == 0x000000, "Member 'BP_CoasterCamera_C_ExecuteUbergraph_BP_CoasterCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_ExecuteUbergraph_BP_CoasterCamera, K2Node_CustomEvent_DeltaSec) == 0x000004, "Member 'BP_CoasterCamera_C_ExecuteUbergraph_BP_CoasterCamera::K2Node_CustomEvent_DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_ExecuteUbergraph_BP_CoasterCamera, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_CoasterCamera_C_ExecuteUbergraph_BP_CoasterCamera::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_ExecuteUbergraph_BP_CoasterCamera, CallFunc_GetComponentsByTag_ReturnValue) == 0x000010, "Member 'BP_CoasterCamera_C_ExecuteUbergraph_BP_CoasterCamera::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_ExecuteUbergraph_BP_CoasterCamera, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_CoasterCamera_C_ExecuteUbergraph_BP_CoasterCamera::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_CoasterCamera.BP_CoasterCamera_C.Update
// 0x0004 (0x0004 - 0x0000)
struct BP_CoasterCamera_C_Update final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterCamera_C_Update) == 0x000004, "Wrong alignment on BP_CoasterCamera_C_Update");
static_assert(sizeof(BP_CoasterCamera_C_Update) == 0x000004, "Wrong size on BP_CoasterCamera_C_Update");
static_assert(offsetof(BP_CoasterCamera_C_Update, DeltaSec) == 0x000000, "Member 'BP_CoasterCamera_C_Update::DeltaSec' has a wrong offset!");

// Function BP_CoasterCamera.BP_CoasterCamera_C.Setting
// 0x000C (0x000C - 0x0000)
struct BP_CoasterCamera_C_Setting final
{
public:
	float                                         FOV;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RInterpSpeed;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IgnoreCameraCollision;                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterCamera_C_Setting) == 0x000004, "Wrong alignment on BP_CoasterCamera_C_Setting");
static_assert(sizeof(BP_CoasterCamera_C_Setting) == 0x00000C, "Wrong size on BP_CoasterCamera_C_Setting");
static_assert(offsetof(BP_CoasterCamera_C_Setting, FOV) == 0x000000, "Member 'BP_CoasterCamera_C_Setting::FOV' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_Setting, RInterpSpeed) == 0x000004, "Member 'BP_CoasterCamera_C_Setting::RInterpSpeed' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_Setting, Param_IgnoreCameraCollision) == 0x000008, "Member 'BP_CoasterCamera_C_Setting::Param_IgnoreCameraCollision' has a wrong offset!");

// Function BP_CoasterCamera.BP_CoasterCamera_C.RInterp
// 0x0110 (0x0110 - 0x0000)
struct BP_CoasterCamera_C_RInterp final
{
public:
	struct FRotator                               CurrentRot;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               TargetRor;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         DeltaSec;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpSpeed;                                       // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Result;                                            // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         L_TargetAngle;                                     // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_UpVecAxis;                                       // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_TargetUpVec;                                     // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_CurrentUpVec;                                    // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_ForwardAxis;                                     // 0x0054(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_TargetForward;                                   // 0x0060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_CurrentForward;                                  // 0x006C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_RotateAngle;                                     // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue_1;                // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue_1;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F4E[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterCamera_C_RInterp) == 0x000004, "Wrong alignment on BP_CoasterCamera_C_RInterp");
static_assert(sizeof(BP_CoasterCamera_C_RInterp) == 0x000110, "Wrong size on BP_CoasterCamera_C_RInterp");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CurrentRot) == 0x000000, "Member 'BP_CoasterCamera_C_RInterp::CurrentRot' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, TargetRor) == 0x00000C, "Member 'BP_CoasterCamera_C_RInterp::TargetRor' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, DeltaSec) == 0x000018, "Member 'BP_CoasterCamera_C_RInterp::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, InterpSpeed) == 0x00001C, "Member 'BP_CoasterCamera_C_RInterp::InterpSpeed' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, Result) == 0x000020, "Member 'BP_CoasterCamera_C_RInterp::Result' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, L_TargetAngle) == 0x00002C, "Member 'BP_CoasterCamera_C_RInterp::L_TargetAngle' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, L_UpVecAxis) == 0x000030, "Member 'BP_CoasterCamera_C_RInterp::L_UpVecAxis' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, L_TargetUpVec) == 0x00003C, "Member 'BP_CoasterCamera_C_RInterp::L_TargetUpVec' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, L_CurrentUpVec) == 0x000048, "Member 'BP_CoasterCamera_C_RInterp::L_CurrentUpVec' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, L_ForwardAxis) == 0x000054, "Member 'BP_CoasterCamera_C_RInterp::L_ForwardAxis' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, L_TargetForward) == 0x000060, "Member 'BP_CoasterCamera_C_RInterp::L_TargetForward' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, L_CurrentForward) == 0x00006C, "Member 'BP_CoasterCamera_C_RInterp::L_CurrentForward' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, L_RotateAngle) == 0x000078, "Member 'BP_CoasterCamera_C_RInterp::L_RotateAngle' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_GetUpVector_ReturnValue) == 0x000080, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_GetForwardVector_ReturnValue) == 0x00008C, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_GetUpVector_ReturnValue_1) == 0x000098, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_GetUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_GetForwardVector_ReturnValue_1) == 0x0000A4, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_FMax_ReturnValue) == 0x0000B0, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000B4, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000B8, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_DegAcos_ReturnValue) == 0x0000BC, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0000C0, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_DegAcos_ReturnValue_1) == 0x0000C4, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_DegAcos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000CC, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000D0, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_Cross_VectorVector_ReturnValue) == 0x0000DC, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x0000E8, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000F4, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_MakeRotFromXZ_ReturnValue) == 0x0000F8, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_RInterp, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x000104, "Member 'BP_CoasterCamera_C_RInterp::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_CoasterCamera.BP_CoasterCamera_C.CalcCameraUpVec
// 0x0080 (0x0080 - 0x0000)
struct BP_CoasterCamera_C_CalcCameraUpVec final
{
public:
	struct FVector                                UpVec;                                             // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_LimitMax;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_LimitMin;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_SlopeAngle;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue_1;           // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F4F[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue_2;           // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F50[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterCamera_C_CalcCameraUpVec) == 0x000004, "Wrong alignment on BP_CoasterCamera_C_CalcCameraUpVec");
static_assert(sizeof(BP_CoasterCamera_C_CalcCameraUpVec) == 0x000080, "Wrong size on BP_CoasterCamera_C_CalcCameraUpVec");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, UpVec) == 0x000000, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::UpVec' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, L_LimitMax) == 0x00000C, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::L_LimitMax' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, L_LimitMin) == 0x000010, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::L_LimitMin' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, L_SlopeAngle) == 0x000014, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::L_SlopeAngle' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, CallFunc_GetActorUpVector_ReturnValue) == 0x000028, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000034, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, CallFunc_GetActorUpVector_ReturnValue_1) == 0x000038, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::CallFunc_GetActorUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, CallFunc_VLerp_ReturnValue) == 0x00004C, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, CallFunc_Normal_ReturnValue) == 0x000058, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, CallFunc_GetActorUpVector_ReturnValue_2) == 0x000068, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::CallFunc_GetActorUpVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, CallFunc_Dot_VectorVector_ReturnValue) == 0x000078, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_CalcCameraUpVec, CallFunc_DegAcos_ReturnValue) == 0x00007C, "Member 'BP_CoasterCamera_C_CalcCameraUpVec::CallFunc_DegAcos_ReturnValue' has a wrong offset!");

// Function BP_CoasterCamera.BP_CoasterCamera_C.SettingSpline
// 0x0010 (0x0010 - 0x0000)
struct BP_CoasterCamera_C_SettingSpline final
{
public:
	class USplineComponent*                       Param_SplineComp;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_CharaSplineMover_C*                Param_SplineMover;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterCamera_C_SettingSpline) == 0x000008, "Wrong alignment on BP_CoasterCamera_C_SettingSpline");
static_assert(sizeof(BP_CoasterCamera_C_SettingSpline) == 0x000010, "Wrong size on BP_CoasterCamera_C_SettingSpline");
static_assert(offsetof(BP_CoasterCamera_C_SettingSpline, Param_SplineComp) == 0x000000, "Member 'BP_CoasterCamera_C_SettingSpline::Param_SplineComp' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_SettingSpline, Param_SplineMover) == 0x000008, "Member 'BP_CoasterCamera_C_SettingSpline::Param_SplineMover' has a wrong offset!");

// Function BP_CoasterCamera.BP_CoasterCamera_C.UpdateCamera
// 0x03F0 (0x03F0 - 0x0000)
struct BP_CoasterCamera_C_UpdateCamera final
{
public:
	float                                         DeltaSec;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_CurrentLook;                                     // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               L_Target_PlayerToLook;                             // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               L_CameraRot;                                       // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_CameraPos;                                       // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               L_TargetLookRot;                                   // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_TargetLookPos;                                   // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F51[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F52[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0130(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F53[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_3;              // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F54[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x0168(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F55[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x019C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F56[0x3];                                     // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F57[0x2];                                     // 0x023A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F58[0x4];                                     // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue_1;              // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x02EC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F59[0x3];                                     // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x037C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue; // 0x0390(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x03E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterCamera_C_UpdateCamera) == 0x000010, "Wrong alignment on BP_CoasterCamera_C_UpdateCamera");
static_assert(sizeof(BP_CoasterCamera_C_UpdateCamera) == 0x0003F0, "Wrong size on BP_CoasterCamera_C_UpdateCamera");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, DeltaSec) == 0x000000, "Member 'BP_CoasterCamera_C_UpdateCamera::DeltaSec' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, L_CurrentLook) == 0x000004, "Member 'BP_CoasterCamera_C_UpdateCamera::L_CurrentLook' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, L_Target_PlayerToLook) == 0x000010, "Member 'BP_CoasterCamera_C_UpdateCamera::L_Target_PlayerToLook' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, L_CameraRot) == 0x00001C, "Member 'BP_CoasterCamera_C_UpdateCamera::L_CameraRot' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, L_CameraPos) == 0x000028, "Member 'BP_CoasterCamera_C_UpdateCamera::L_CameraPos' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, L_TargetLookRot) == 0x000034, "Member 'BP_CoasterCamera_C_UpdateCamera::L_TargetLookRot' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, L_TargetLookPos) == 0x000040, "Member 'BP_CoasterCamera_C_UpdateCamera::L_TargetLookPos' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, Temp_bool_Variable) == 0x00004C, "Member 'BP_CoasterCamera_C_UpdateCamera::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_GetPlayerPawn_ReturnValue) == 0x000050, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_GetUpVector_ReturnValue) == 0x000064, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_GetRightVector_ReturnValue) == 0x000070, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakVector_X) == 0x00007C, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakVector_Y) == 0x000080, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakVector_Z) == 0x000084, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_GetForwardVector_ReturnValue) == 0x000088, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000094, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000A0, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0000AC, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_MakeVector_ReturnValue) == 0x0000B8, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C4, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D0, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000DC, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E8, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_MakeVector_ReturnValue_1) == 0x0000EC, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_GetForwardVector_ReturnValue_1) == 0x0000F8, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000108, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x000110, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000118, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000124, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, Temp_object_Variable) == 0x000130, "Member 'BP_CoasterCamera_C_UpdateCamera::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000140, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_GetPlayerPawn_ReturnValue_3) == 0x000150, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_GetPlayerPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Normal_ReturnValue) == 0x000158, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_GetComponentsByTag_ReturnValue) == 0x000168, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000178, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Array_Get_Item) == 0x000188, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000190, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_SphereTraceSingle_OutHit) == 0x00019C, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_SphereTraceSingle_ReturnValue) == 0x000224, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Vector_Distance_ReturnValue) == 0x000228, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x00022C, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakHitResult_bBlockingHit) == 0x000238, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakHitResult_bInitialOverlap) == 0x000239, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakHitResult_Time) == 0x00023C, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakHitResult_Distance) == 0x000240, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakHitResult_Location) == 0x000244, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakHitResult_ImpactPoint) == 0x000250, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakHitResult_Normal) == 0x00025C, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakHitResult_ImpactNormal) == 0x000268, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakHitResult_PhysMat) == 0x000278, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakHitResult_HitActor) == 0x000280, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakHitResult_HitComponent) == 0x000288, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakHitResult_HitBoneName) == 0x000290, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakHitResult_HitItem) == 0x000298, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakHitResult_ElementIndex) == 0x00029C, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakHitResult_FaceIndex) == 0x0002A0, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakHitResult_TraceStart) == 0x0002A4, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakHitResult_TraceEnd) == 0x0002B0, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0002BC, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0002C8, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Normal_ReturnValue_1) == 0x0002D4, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_MakeRotFromXZ_ReturnValue_1) == 0x0002E0, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_MakeRotFromXZ_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x0002EC, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000374, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Add_FloatFloat_ReturnValue) == 0x000378, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_RInterpTo_ReturnValue) == 0x00037C, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, K2Node_Select_Default) == 0x000388, "Member 'BP_CoasterCamera_C_UpdateCamera::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00038C, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue) == 0x000390, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakTransform_Location) == 0x0003C0, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakTransform_Rotation) == 0x0003CC, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_BreakTransform_Scale) == 0x0003D8, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CoasterCamera_C_UpdateCamera, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0003E4, "Member 'BP_CoasterCamera_C_UpdateCamera::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");

}

