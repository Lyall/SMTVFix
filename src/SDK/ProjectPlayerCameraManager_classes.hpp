#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProjectPlayerCameraManager

#include "Basic.hpp"

#include "PlayerCameraInitParam_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Project_structs.hpp"
#include "Project_classes.hpp"
#include "E_MAP_PLAYER_CAMERA_ANIM_TYPE_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ProjectPlayerCameraManager.ProjectPlayerCameraManager_C
// 0x0170 (0x2990 - 0x2820)
class AProjectPlayerCameraManager_C final : public ACustomPlayerCameraManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x2820(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FPlayerCameraInitParam                 PlayerCameraInit;                                  // 0x2828(0x00A4)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DEF_FOV;                                           // 0x28CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DEF_Distance;                                      // 0x28D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dush_End;                                          // 0x28D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Attack_Time;                                       // 0x28D5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_290B[0x2];                                     // 0x28D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DEF_Height;                                        // 0x28D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Atk_End;                                           // 0x28DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	E_MAP_PLAYER_CAMERA_ANIM_TYPE                 NOW_ANIM;                                          // 0x28DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_290C[0x2];                                     // 0x28DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Now_FOV;                                           // 0x28E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Now_Distance;                                      // 0x28E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Now_Height;                                        // 0x28E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MAP_PLAYER_CAMERA_ANIM_TYPE                 Next_ANIM;                                         // 0x28EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_290D[0x3];                                     // 0x28ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GoDistance;                                        // 0x28F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GoSpeed;                                           // 0x28F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GoFOV;                                             // 0x28F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GoHeight;                                          // 0x28FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ForceCounter;                                      // 0x2900(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DushShakeScale;                                    // 0x2904(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Go_DushShakeScale;                                 // 0x2908(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Go_DushShakeSpeed;                                 // 0x290C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       ShakeInstance;                                     // 0x2910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Exinit;                                            // 0x2918(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_290E[0x3];                                     // 0x2919(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Gripoffset;                                        // 0x291C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Nearlimit;                                         // 0x2920(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ManagerMeshVisibleOFF;                             // 0x2924(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ForceHidden;                                       // 0x2925(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_290F[0x2];                                     // 0x2926(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      NPC_and_MOb;                                       // 0x2928(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          MobNPC_Hidden_Once;                                // 0x2938(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RequestedCameraLagStop;                            // 0x2939(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2910[0x6];                                     // 0x293A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       PlayerCamera;                                      // 0x2940(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastFrameSocketTransform;                          // 0x2948(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2911[0x4];                                     // 0x2954(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomSpringArmComponent*              PlayerSpringArm;                                   // 0x2958(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceKeepVisible;                                  // 0x2960(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2912[0x3];                                     // 0x2961(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraViewPresetData                  Camera_Wide_Preset;                                // 0x2964(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FCameraViewPresetData                  Camera_Standard_Preset;                            // 0x2970(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FCameraViewPresetData                  Camera_Narrow_Preset;                              // 0x297C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_ProjectPlayerCameraManager(int32 EntryPoint);
	void DoManual_PlayerCameraInside();
	void MapCameraSlide_IN();
	void MapCAmeraSlide_OUT();
	void MapCameraGrip_IN();
	void MapCameraGrip_OUT();
	void SetForceKeepMeshesVisible(bool Param_ForceKeepVisible);
	void RequestFinishCameraUpdate();
	void MapCameraForce_IN(float FOV, float Distance, float Height);
	void MapCameraForce_OUT();
	void ReceiveBeginPlay();
	void MapCameraDush_OUT();
	void MapCameraDush_IN();
	void MapCameraAttack_IN();
	void ReceiveTick(float DeltaSeconds);
	void MapCameraAttack_IN_FADE();
	void MapCameraAttack_OUT();
	void SetNowCameraPos();
	void GetNowCameraPos(float* Param_Now_FOV, float* Param_Now_Distance, float* Param_Now_Height);
	void InitNowCameraPos();
	void UpdateDistance(float DeltaTime);
	void UpdateFOV(float DeltaTime);
	void UpdateHeight(float DeltaTime);
	void PlayerCameraInside();
	void NPC_MobCameraInside();
	void InitializeCamera();
	void SetCameraFOV(E_OPTION_CONTENT_FOV_TYPE FOVType);
	void SetCameraTrace(bool EnableCameraTraceLag);
	void IsRequestFinishCameraUpdateDone(bool* Done);
	void GetDefaultFOV(float* Param_DefaultFOV);
	void Player_Camera_Root_Init(bool* Dummy);
	void Player_Camera_Manual_Tick(bool* Dummy);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ProjectPlayerCameraManager_C">();
	}
	static class AProjectPlayerCameraManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProjectPlayerCameraManager_C>();
	}
};
static_assert(alignof(AProjectPlayerCameraManager_C) == 0x000010, "Wrong alignment on AProjectPlayerCameraManager_C");
static_assert(sizeof(AProjectPlayerCameraManager_C) == 0x002990, "Wrong size on AProjectPlayerCameraManager_C");
static_assert(offsetof(AProjectPlayerCameraManager_C, UberGraphFrame) == 0x002820, "Member 'AProjectPlayerCameraManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, PlayerCameraInit) == 0x002828, "Member 'AProjectPlayerCameraManager_C::PlayerCameraInit' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, DEF_FOV) == 0x0028CC, "Member 'AProjectPlayerCameraManager_C::DEF_FOV' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, DEF_Distance) == 0x0028D0, "Member 'AProjectPlayerCameraManager_C::DEF_Distance' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, Dush_End) == 0x0028D4, "Member 'AProjectPlayerCameraManager_C::Dush_End' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, Attack_Time) == 0x0028D5, "Member 'AProjectPlayerCameraManager_C::Attack_Time' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, DEF_Height) == 0x0028D8, "Member 'AProjectPlayerCameraManager_C::DEF_Height' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, Atk_End) == 0x0028DC, "Member 'AProjectPlayerCameraManager_C::Atk_End' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, NOW_ANIM) == 0x0028DD, "Member 'AProjectPlayerCameraManager_C::NOW_ANIM' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, Now_FOV) == 0x0028E0, "Member 'AProjectPlayerCameraManager_C::Now_FOV' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, Now_Distance) == 0x0028E4, "Member 'AProjectPlayerCameraManager_C::Now_Distance' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, Now_Height) == 0x0028E8, "Member 'AProjectPlayerCameraManager_C::Now_Height' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, Next_ANIM) == 0x0028EC, "Member 'AProjectPlayerCameraManager_C::Next_ANIM' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, GoDistance) == 0x0028F0, "Member 'AProjectPlayerCameraManager_C::GoDistance' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, GoSpeed) == 0x0028F4, "Member 'AProjectPlayerCameraManager_C::GoSpeed' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, GoFOV) == 0x0028F8, "Member 'AProjectPlayerCameraManager_C::GoFOV' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, GoHeight) == 0x0028FC, "Member 'AProjectPlayerCameraManager_C::GoHeight' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, ForceCounter) == 0x002900, "Member 'AProjectPlayerCameraManager_C::ForceCounter' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, DushShakeScale) == 0x002904, "Member 'AProjectPlayerCameraManager_C::DushShakeScale' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, Go_DushShakeScale) == 0x002908, "Member 'AProjectPlayerCameraManager_C::Go_DushShakeScale' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, Go_DushShakeSpeed) == 0x00290C, "Member 'AProjectPlayerCameraManager_C::Go_DushShakeSpeed' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, ShakeInstance) == 0x002910, "Member 'AProjectPlayerCameraManager_C::ShakeInstance' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, Exinit) == 0x002918, "Member 'AProjectPlayerCameraManager_C::Exinit' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, Gripoffset) == 0x00291C, "Member 'AProjectPlayerCameraManager_C::Gripoffset' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, Nearlimit) == 0x002920, "Member 'AProjectPlayerCameraManager_C::Nearlimit' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, ManagerMeshVisibleOFF) == 0x002924, "Member 'AProjectPlayerCameraManager_C::ManagerMeshVisibleOFF' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, ForceHidden) == 0x002925, "Member 'AProjectPlayerCameraManager_C::ForceHidden' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, NPC_and_MOb) == 0x002928, "Member 'AProjectPlayerCameraManager_C::NPC_and_MOb' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, MobNPC_Hidden_Once) == 0x002938, "Member 'AProjectPlayerCameraManager_C::MobNPC_Hidden_Once' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, RequestedCameraLagStop) == 0x002939, "Member 'AProjectPlayerCameraManager_C::RequestedCameraLagStop' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, PlayerCamera) == 0x002940, "Member 'AProjectPlayerCameraManager_C::PlayerCamera' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, LastFrameSocketTransform) == 0x002948, "Member 'AProjectPlayerCameraManager_C::LastFrameSocketTransform' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, PlayerSpringArm) == 0x002958, "Member 'AProjectPlayerCameraManager_C::PlayerSpringArm' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, ForceKeepVisible) == 0x002960, "Member 'AProjectPlayerCameraManager_C::ForceKeepVisible' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, Camera_Wide_Preset) == 0x002964, "Member 'AProjectPlayerCameraManager_C::Camera_Wide_Preset' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, Camera_Standard_Preset) == 0x002970, "Member 'AProjectPlayerCameraManager_C::Camera_Standard_Preset' has a wrong offset!");
static_assert(offsetof(AProjectPlayerCameraManager_C, Camera_Narrow_Preset) == 0x00297C, "Member 'AProjectPlayerCameraManager_C::Camera_Narrow_Preset' has a wrong offset!");

}

