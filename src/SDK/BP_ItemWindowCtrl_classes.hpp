#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemWindowCtrl

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_ITEMWINDOWCTRL_structs.hpp"
#include "Project_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ItemWindowCtrl.BP_ItemWindowCtrl_C
// 0x0040 (0x0260 - 0x0220)
class ABP_ItemWindowCtrl_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWB_ItemWindow_C*                       WB_ItemWindow;                                     // 0x0230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ITEMWINDOWCTRL                              Mainstatus;                                        // 0x0238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ITEMWINDOWCTRL                              Changestatus;                                      // 0x0239(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGstatusChange;                                   // 0x023A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFinishedOpenWindow;                              // 0x023B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFinishedCloseWindow;                             // 0x023C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AlreadyAddWidget;                                  // 0x023D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AlreadyRemoveWidget;                               // 0x023E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E48[0x1];                                     // 0x023F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemId;                                            // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemNum;                                           // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemAdd;                                           // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemMax;                                           // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    ItemWLabelSMA;                                     // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScriptMessageAsset*                    ItemWIndexSMA;                                     // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ItemWindowCtrl(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void IItemWindowSetItemNumber();
	void IItemWindowSetItemName();
	void IItemWindowSetParameter(int32 InItemId, int32 InItemNum, int32 InItemAdd);
	void IItemWindowCleaeMessage();
	void IItemWindowSetMessageByIndex(class UScriptMessageAsset* InScriptMessageAsset, int32 InIndex, bool InExecutionText, int32 InFrame);
	void IItemWindowSetMessage(class UScriptMessageAsset* InScriptMessageAsset, class FName InLabel, bool InExecutionText, int32 InFrame);
	void IItemWindowDelete();
	void IItemWindowExecutionClose();
	void IItemWindowClose();
	void IItemWindowExecutionOpen();
	void IItemWindowOpen();
	void IItemWindowCreate(E_WIDGET_PRIO InPrio);
	void ChangeGstatusParam(E_ITEMWINDOWCTRL InGStatus, bool InMain);
	void Gstatus_Init();
	void Gstatus_WaitWindowOpen();
	void ClearAllScriptMessageAsset();
	void Gstatus_WaitWindowClose();
	void IIsFinishedItemWindowOpen(bool* OutFinished);
	void IIsFinishedItemWindowClose(bool* OutFinished);
	void IItemWindowGetMessage(class UAtRichText** OutMessage);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemWindowCtrl_C">();
	}
	static class ABP_ItemWindowCtrl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ItemWindowCtrl_C>();
	}
};
static_assert(alignof(ABP_ItemWindowCtrl_C) == 0x000008, "Wrong alignment on ABP_ItemWindowCtrl_C");
static_assert(sizeof(ABP_ItemWindowCtrl_C) == 0x000260, "Wrong size on ABP_ItemWindowCtrl_C");
static_assert(offsetof(ABP_ItemWindowCtrl_C, UberGraphFrame) == 0x000220, "Member 'ABP_ItemWindowCtrl_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ItemWindowCtrl_C, DefaultSceneRoot) == 0x000228, "Member 'ABP_ItemWindowCtrl_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ItemWindowCtrl_C, WB_ItemWindow) == 0x000230, "Member 'ABP_ItemWindowCtrl_C::WB_ItemWindow' has a wrong offset!");
static_assert(offsetof(ABP_ItemWindowCtrl_C, Mainstatus) == 0x000238, "Member 'ABP_ItemWindowCtrl_C::Mainstatus' has a wrong offset!");
static_assert(offsetof(ABP_ItemWindowCtrl_C, Changestatus) == 0x000239, "Member 'ABP_ItemWindowCtrl_C::Changestatus' has a wrong offset!");
static_assert(offsetof(ABP_ItemWindowCtrl_C, IsGstatusChange) == 0x00023A, "Member 'ABP_ItemWindowCtrl_C::IsGstatusChange' has a wrong offset!");
static_assert(offsetof(ABP_ItemWindowCtrl_C, IsFinishedOpenWindow) == 0x00023B, "Member 'ABP_ItemWindowCtrl_C::IsFinishedOpenWindow' has a wrong offset!");
static_assert(offsetof(ABP_ItemWindowCtrl_C, IsFinishedCloseWindow) == 0x00023C, "Member 'ABP_ItemWindowCtrl_C::IsFinishedCloseWindow' has a wrong offset!");
static_assert(offsetof(ABP_ItemWindowCtrl_C, AlreadyAddWidget) == 0x00023D, "Member 'ABP_ItemWindowCtrl_C::AlreadyAddWidget' has a wrong offset!");
static_assert(offsetof(ABP_ItemWindowCtrl_C, AlreadyRemoveWidget) == 0x00023E, "Member 'ABP_ItemWindowCtrl_C::AlreadyRemoveWidget' has a wrong offset!");
static_assert(offsetof(ABP_ItemWindowCtrl_C, ItemId) == 0x000240, "Member 'ABP_ItemWindowCtrl_C::ItemId' has a wrong offset!");
static_assert(offsetof(ABP_ItemWindowCtrl_C, ItemNum) == 0x000244, "Member 'ABP_ItemWindowCtrl_C::ItemNum' has a wrong offset!");
static_assert(offsetof(ABP_ItemWindowCtrl_C, ItemAdd) == 0x000248, "Member 'ABP_ItemWindowCtrl_C::ItemAdd' has a wrong offset!");
static_assert(offsetof(ABP_ItemWindowCtrl_C, ItemMax) == 0x00024C, "Member 'ABP_ItemWindowCtrl_C::ItemMax' has a wrong offset!");
static_assert(offsetof(ABP_ItemWindowCtrl_C, ItemWLabelSMA) == 0x000250, "Member 'ABP_ItemWindowCtrl_C::ItemWLabelSMA' has a wrong offset!");
static_assert(offsetof(ABP_ItemWindowCtrl_C, ItemWIndexSMA) == 0x000258, "Member 'ABP_ItemWindowCtrl_C::ItemWIndexSMA' has a wrong offset!");

}

