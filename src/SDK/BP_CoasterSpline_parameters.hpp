#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CoasterSpline

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Project_structs.hpp"


namespace SDK::Params
{

// Function BP_CoasterSpline.BP_CoasterSpline_C.ExecuteUbergraph_BP_CoasterSpline
// 0x1390 (0x1390 - 0x0000)
struct BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87D8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87D9[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87DA[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87DB[0x1];                                     // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87DC[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	class UBPC_CharaSplineMover_C*                K2Node_CustomEvent_ThisComponent_1;                // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87DD[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      K2Node_DynamicCast_AsCapsule_Collision;            // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87DE[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CoasterCamera_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerMovementComponent*               K2Node_DynamicCast_AsPlayer_Movement_Component;    // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87DF[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87E0[0x3];                                     // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_3;              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_FromStartGimmick;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87E1[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Active;                               // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Anim_1;                               // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87E2[0x2];                                     // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UBPC_CharaSplineMover_C* ThisComponent)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0154(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_87E3[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_4;              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaAction_C>    K2Node_DynamicCast_AsBPI_Chara_Action;             // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_PlayMapAction_CanUse;                  // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87E4[0x2];                                     // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_CharaSplineMover_C*                K2Node_CustomEvent_ThisComponent;                  // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87E5[0x2];                                     // 0x01AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x01B0(0x0030)(IsPlainOldData, NoDestructor)
	class UCameraComponent*                       CallFunc_AddComponent_ReturnValue;                 // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_5;              // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87E6[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSplineForward_Forward;                 // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSplineUpVec_UpVec;                     // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Show;                                 // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Anim;                                 // 0x0223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87E7[0x3];                                     // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87E8[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87E9[0x4];                                     // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_GetSpline_Spline;                         // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_GetSpline_Spline_1;                       // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87EA[0x4];                                     // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_GetSpline_Spline_2;                       // 0x0270(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_GetSpline_Spline_3;                       // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87EB[0x4];                                     // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_GetSpline_Spline_4;                       // 0x0290(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_GetSpline_Spline_5;                       // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87EC[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_GetSpline_Spline_6;                       // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_GetSpline_Spline_7;                       // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87ED[0x4];                                     // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_GetSpline_Spline_8;                       // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_GetSpline_Spline_9;                       // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_2;    // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_3;    // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87EE[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_6;              // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn;                  // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87EF[0x3];                                     // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0324(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87F0[0x4];                                     // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_7;              // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0338(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn_1;                // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87F1[0x3];                                     // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x034C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x0358(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87F2[0xC];                                     // 0x0364(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0370(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_8;              // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPC_CharaSplineMover_C*                CallFunc_AddComponent_ReturnValue_1;               // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaAction_C>    K2Node_DynamicCast_AsBPI_Chara_Action_1;           // 0x03B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BI_EndMapAction_CanUse;                   // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87F3[0x6];                                     // 0x03C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Pla603_C>         K2Node_DynamicCast_AsBPI_Pla_603;                  // 0x03C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87F4[0x7];                                     // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_9;              // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Pla603_C>         K2Node_DynamicCast_AsBPI_Pla_603_1;                // 0x03E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87F5[0x3];                                     // 0x03F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x03FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetRideCoasterSlopeAngle_NewParam;        // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87F6[0x7];                                     // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_10;             // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87F7[0x8];                                     // 0x0418(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0420(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x045C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0468(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0474(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_11;             // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0488(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x04A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x04AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0534(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87F8[0x3];                                     // 0x0535(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CoasterGimmickBase_C*               K2Node_Select_Default;                             // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0540(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0570(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x057C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0588(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87F9[0x4];                                     // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87FA[0x8];                                     // 0x05A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x05B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x05E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x05F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0600(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFOVAngle_ReturnValue;                  // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0610(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_12;             // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSplineForward_Forward_1;               // 0x06A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x06BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87FB[0x3];                                     // 0x06BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x06C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x06CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_13;             // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x06D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87FC[0x4];                                     // 0x06E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x06E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item_1;                         // 0x06F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetPlayerCamera_PlayerCamera;             // 0x0708(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0710(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0740(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x074C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0758(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0764(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1; // 0x0770(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x07F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0804(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue_1;                      // 0x0814(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0820(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x082C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetPlayerCamera_PlayerCamera_1;           // 0x0838(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_2; // 0x0840(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_2;    // 0x08C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x08D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x08E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87FD[0x4];                                     // 0x08E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_14;             // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x08F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x08FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0904(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0908(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x090C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x0918(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87FE[0x3];                                     // 0x0919(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x091C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraseGround_OutPos;                       // 0x0920(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87FF[0x4];                                     // 0x092C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0930(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0960(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x096C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0970(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x097C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0980(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0984(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x0990(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue_2;                      // 0x099C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x09A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8800[0x4];                                     // 0x09B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_GetSpline_Spline_10;                      // 0x09B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x09C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue_1;            // 0x09CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x09D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x09DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x09E0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8801[0x3];                                     // 0x0A69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSplineForward_Forward_2;               // 0x0A6C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0A79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8802[0x2];                                     // 0x0A7A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0A7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0A84(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0A90(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0A9C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0AA8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8803[0x4];                                     // 0x0AB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0AB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0AC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0AC8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0AD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0ADC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0AE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0AE4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0AF0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x0AFC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0B08(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetPlayerCamera_PlayerCamera_2;           // 0x0B18(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_15;             // 0x0B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x0B28(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0B34(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0B40(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0B4C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0B58(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0B64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0B68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0B6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0B70(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0B7C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0B88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_2;                      // 0x0B94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinePlaneIntersection_OriginNormal_T;     // 0x0BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LinePlaneIntersection_OriginNormal_Intersection; // 0x0BA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue; // 0x0BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8804[0x3];                                     // 0x0BB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_2;         // 0x0BB4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_3; // 0x0BC0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_Select_Default_3;                           // 0x0C48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x0C54(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8805[0x3];                                     // 0x0C61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0C64(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0C70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0C74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0C7C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0C88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0C94(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0CA0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinePlaneIntersection_OriginNormal_T_1;   // 0x0CAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LinePlaneIntersection_OriginNormal_Intersection_1; // 0x0CB0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue_1; // 0x0CBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0CBD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8806[0x2];                                     // 0x0CBE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default_4;                           // 0x0CC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActive_Active;                       // 0x0CCC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0CCD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckActive_Active_1;                     // 0x0CCE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8807[0x1];                                     // 0x0CCF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0CD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8808[0x7];                                     // 0x0CD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0CE0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0CF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0CF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8809[0x6];                                     // 0x0CF2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMapGimmickTrigger_Actor;           // 0x0CF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapGimmickTrigger_C*                K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger;       // 0x0D00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0D08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_880A[0x3];                                     // 0x0D09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0D0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0D10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEventFlag_ReturnValue;               // 0x0D18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_880B[0x7];                                     // 0x0D19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_1;                    // 0x0D20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0D28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_880C[0x7];                                     // 0x0D29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_1;             // 0x0D30(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_880D[0x7];                                     // 0x0D41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BPI_GetMapGimmickTrigger_Actor_1;         // 0x0D48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapGimmickTrigger_C*                K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger_1;     // 0x0D50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0D58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_880E[0x7];                                     // 0x0D59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue;                          // 0x0D60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0D68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_880F[0x3];                                     // 0x0D69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_3;                             // 0x0D6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectSoundManager*                   CallFunc_Get_ReturnValue_1;                        // 0x0D70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0D78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8810[0x3];                                     // 0x0D79(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_4;                             // 0x0D7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0D80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8811[0x7];                                     // 0x0D81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetStartGimmick_Actor;                    // 0x0D88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CoasterGimmickBase_C*               K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base;      // 0x0D90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0D98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8812[0x3];                                     // 0x0D99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_5;                           // 0x0D9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetEndGimmick_Actor;                      // 0x0DA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetStartGimmick_Actor_1;                  // 0x0DA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CoasterGimmickBase_C*               K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_1;    // 0x0DB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0DB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8813[0x7];                                     // 0x0DB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CoasterGimmickBase_C*               K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_2;    // 0x0DC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0DC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8814[0x7];                                     // 0x0DC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEndGimmick_Actor_1;                    // 0x0DD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CoasterGimmickBase_C*               K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_3;    // 0x0DD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0DE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8815[0x3];                                     // 0x0DE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0DE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0DE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8816[0x3];                                     // 0x0DE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0DEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0DF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x0DF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNaviComponent_Valid;                   // 0x0DF2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8817[0x5];                                     // 0x0DF3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_GetNaviComponent_Comp;                    // 0x0DF8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0E00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8818[0x7];                                     // 0x0E01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharaFollower_C>  K2Node_DynamicCast_AsBPI_Chara_Follower;           // 0x0E08(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0E18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNaviComponent_Valid_1;                 // 0x0E19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8819[0x6];                                     // 0x0E1A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_GetNaviComponent_Comp_1;                  // 0x0E20(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaFollower_C>  K2Node_DynamicCast_AsBPI_Chara_Follower_1;         // 0x0E28(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x0E38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881A[0x3];                                     // 0x0E39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0E3C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable_5;                             // 0x0E4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0E50(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable_6;                             // 0x0E60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0E64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881B[0x3];                                     // 0x0E65(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0E68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_881C[0x4];                                     // 0x0E6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x0E70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x0E78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0E79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_13;                             // 0x0E7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881D[0x1];                                     // 0x0E7B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_6;                           // 0x0E7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_7;                           // 0x0E80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UBPC_CharaSplineMover_C* ThisComponent)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0E84(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0E94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x0E98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0E9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0E9D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0E9E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FadeOut_Black_ReturnValue;                // 0x0E9F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0EA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FadeIn_Black_ReturnValue;                 // 0x0EA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0EA2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881E[0x5];                                     // 0x0EA3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_16;             // 0x0EA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerBase_C*                          K2Node_DynamicCast_AsPlayer_Base;                  // 0x0EB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0EB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_14;                             // 0x0EB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881F[0x6];                                     // 0x0EBA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CoasterGimmickBase_C*               K2Node_Select_Default_8;                           // 0x0EC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_GetSpline_Spline_11;                      // 0x0EC8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_2;     // 0x0ED0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetSplineLength_ReturnValue_2;            // 0x0F00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x0F04(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0F10(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0F1C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_9;                           // 0x0F28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraseGround_OutPos_1;                     // 0x0F2C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSplineForward_Forward_3;               // 0x0F38(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0F44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue_1;              // 0x0F48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0F54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8820[0x3];                                     // 0x0F55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0F58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x0F5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0F60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0F61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8821[0x2];                                     // 0x0F62(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0F64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0F68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x0F6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8822[0x3];                                     // 0x0F6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x0F70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_10;                          // 0x0F74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_4;                         // 0x0F78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue;     // 0x0F80(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x0F8C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x0F98(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_11;                          // 0x0FA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0FB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8823[0x7];                                     // 0x0FB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_BtnHelp_GetTextByEnum_HelpText;           // 0x0FB8(0x0018)()
	struct FBtnHelpInfo                           K2Node_MakeStruct_BtnHelpInfo;                     // 0x0FD0(0x0020)()
	TArray<struct FBtnHelpInfo>                   K2Node_MakeArray_Array;                            // 0x0FF0(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Variable_16;                             // 0x1000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8824[0x7];                                     // 0x1001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CoasterGimmickBase_C*               K2Node_Select_Default_12;                          // 0x1008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x1010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8825[0x3];                                     // 0x1011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_5;    // 0x1014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x1020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x1024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_17;                             // 0x1025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8826[0x2];                                     // 0x1026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetStartGimmick_Actor_2;                  // 0x1028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CoasterGimmickBase_C*               K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_4;    // 0x1030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x1038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8827[0x3];                                     // 0x1039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_13;                          // 0x103C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetEndGimmick_Actor_2;                    // 0x1040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CoasterGimmickBase_C*               K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_5;    // 0x1048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x1050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success;                 // 0x1051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_1;               // 0x1052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_2;               // 0x1053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionPadCheck_Success_3;               // 0x1054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x1055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x1056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x1057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USplineComponent*                       CallFunc_GetSpline_Spline_12;                      // 0x1058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_17;             // 0x1060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn_2;                // 0x1068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x1070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8828[0xF];                                     // 0x1071(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x1080(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x10B0(0x0030)(IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x10E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x10E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x10F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x1100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8829[0x4];                                     // 0x110C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_SpawnSoundAttached_ReturnValue_2;         // 0x1110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x1118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_882A[0x4];                                     // 0x111C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x1120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ProjectPlayerCameraManager_C> K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager; // 0x1128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x1138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882B[0x3];                                     // 0x1139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x113C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x1140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_5;                         // 0x1148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_6;                         // 0x1150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x1158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x115C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882C[0x3];                                     // 0x115D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_7;                         // 0x1160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x1168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x116C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882D[0x3];                                     // 0x116D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CoasterGimmick_C> K2Node_DynamicCast_AsBPI_Coaster_Gimmick;          // 0x1170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x1180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckActive_WhenFlag_Active;          // 0x1181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882E[0x6];                                     // 0x1182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CoasterGimmick_C> K2Node_DynamicCast_AsBPI_Coaster_Gimmick_1;        // 0x1188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x1198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882F[0x7];                                     // 0x1199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x11A0(0x0010)(ReferenceParm)
	bool                                          CallFunc_BPI_CheckActive_WhenFlag_Active_1;        // 0x11B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8830[0x7];                                     // 0x11B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_8;                         // 0x11B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EnvCtrl_C>        K2Node_DynamicCast_AsBPI_Env_Ctrl;                 // 0x11C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x11D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8831[0x3];                                     // 0x11D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x11D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x11D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x11DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x11DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8832[0x2];                                     // 0x11DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x11E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8833[0x4];                                     // 0x11E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetMapCommon_rerutn_2;                    // 0x11E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common_2;             // 0x11F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x1200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8834[0x7];                                     // 0x1201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProjectGCManager*                      CallFunc_Get_ReturnValue_2;                        // 0x1208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProjectGCManager*                      CallFunc_Get_ReturnValue_3;                        // 0x1210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x1218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8835[0x7];                                     // 0x1219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x1220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProjectGameMode_C*                     K2Node_DynamicCast_AsProject_Game_Mode;            // 0x1228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x1230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8836[0x7];                                     // 0x1231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEndGimmick_Actor_3;                    // 0x1238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetStartGimmick_Actor_3;                  // 0x1240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Select_Default_14;                          // 0x1248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMapEventHit_Type_AAction_C*            K2Node_DynamicCast_AsMap_Event_Hit_Type_AAction;   // 0x1250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x1258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8837[0x7];                                     // 0x1259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_2;               // 0x1260(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_6;                // 0x1290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_6;                // 0x129C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_6;                   // 0x12A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x12B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8838[0x3];                                     // 0x12B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x12B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x12BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x12C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x12C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x12D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8839[0x4];                                     // 0x12DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x12E0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x1310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x1314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_15;                          // 0x1318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x131C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_883A[0x3];                                     // 0x131D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEndGimmick_Actor_4;                    // 0x1320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetStartGimmick_Actor_4;                  // 0x1328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Select_Default_16;                          // 0x1330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMapEventHit_Type_AAction_C*            K2Node_DynamicCast_AsMap_Event_Hit_Type_AAction_1; // 0x1338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_29;                    // 0x1340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_883B[0x7];                                     // 0x1341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEndGimmick_Actor_5;                    // 0x1348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetStartGimmick_Actor_5;                  // 0x1350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Select_Default_17;                          // 0x1358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMapEventHit_Type_AAction_C*            K2Node_DynamicCast_AsMap_Event_Hit_Type_AAction_2; // 0x1360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_30;                    // 0x1368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x1369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_18;                             // 0x136A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_883C[0x1];                                     // 0x136B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_18;                          // 0x136C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x1370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_883D[0x4];                                     // 0x1374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIFadeBase*                            CallFunc_GetBP_ScreenFade_ReturnValue;             // 0x1378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_9;                         // 0x1380(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x1388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x138C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline) == 0x000010, "Wrong alignment on BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline");
static_assert(sizeof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline) == 0x001390, "Wrong size on BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, EntryPoint) == 0x000000, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_object_Variable) == 0x000008, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable) == 0x000024, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_float_Variable) == 0x000028, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_1) == 0x00002C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_float_Variable_1) == 0x000030, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_2) == 0x000034, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_3) == 0x000035, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_4) == 0x000036, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeVector_ReturnValue_1) == 0x000048, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_5) == 0x000054, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_float_Variable_2) == 0x000058, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_6) == 0x00005C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_7) == 0x00005D, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_8) == 0x00005E, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_9) == 0x00005F, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_CreateDelegate_OutputDelegate_1) == 0x000060, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_CustomEvent_ThisComponent_1) == 0x000070, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_CustomEvent_ThisComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue) == 0x000078, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000080, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000C0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsCapsule_Collision) == 0x0000D0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsCapsule_Collision' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000E0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x0000E8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x0000EC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x0000F0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetMovementComponent_ReturnValue) == 0x0000F8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsPlayer_Movement_Component) == 0x000100, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsPlayer_Movement_Component' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Loop_Counter_Variable) == 0x00010C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_IsValid_ReturnValue) == 0x000114, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue_3) == 0x000118, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000120, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Array_Index_Variable) == 0x00012C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Event_FromStartGimmick) == 0x000130, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Event_FromStartGimmick' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000134, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Event_Active) == 0x000140, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Event_Active' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Event_Anim_1) == 0x000141, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Event_Anim_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Loop_Counter_Variable_1) == 0x000144, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Add_IntInt_ReturnValue_1) == 0x00014C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Length_ReturnValue_1) == 0x000150, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_CreateDelegate_OutputDelegate_2) == 0x000154, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue_4) == 0x000168, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBPI_Chara_Action) == 0x000170, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBPI_Chara_Action' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_2) == 0x000180, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BI_PlayMapAction_CanUse) == 0x000181, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BI_PlayMapAction_CanUse' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Array_Index_Variable_1) == 0x000184, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeVector_ReturnValue_2) == 0x000188, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000194, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_CustomEvent_ThisComponent) == 0x0001A0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_CustomEvent_ThisComponent' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_IsValid_ReturnValue_1) == 0x0001A8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_IsValid_ReturnValue_2) == 0x0001A9, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001AC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeTransform_ReturnValue_1) == 0x0001B0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_AddComponent_ReturnValue) == 0x0001E0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue_5) == 0x0001E8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_FMax_ReturnValue) == 0x0001F0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001F4, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_IsValid_ReturnValue_3) == 0x0001F8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSplineForward_Forward) == 0x0001FC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSplineForward_Forward' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSplineUpVec_UpVec) == 0x000208, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSplineUpVec_UpVec' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000214, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_IsValid_ReturnValue_4) == 0x000220, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000221, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Event_Show) == 0x000222, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Event_Show' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Event_Anim) == 0x000223, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Event_Anim' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Loop_Counter_Variable_2) == 0x000224, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Add_IntInt_ReturnValue_2) == 0x000228, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Loop_Counter_Variable_3) == 0x00022C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Less_IntInt_ReturnValue) == 0x000230, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Add_IntInt_ReturnValue_3) == 0x000234, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_10) == 0x000238, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Array_Index_Variable_2) == 0x00023C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Length_ReturnValue_2) == 0x000240, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Length_ReturnValue_3) == 0x000244, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Array_Index_Variable_3) == 0x000248, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Get_Item) == 0x000250, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSpline_Spline) == 0x000258, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSpline_Spline' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSpline_Spline_1) == 0x000260, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSpline_Spline_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSplineLength_ReturnValue) == 0x000268, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSpline_Spline_2) == 0x000270, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSpline_Spline_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000278, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x00027C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSpline_Spline_3) == 0x000280, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSpline_Spline_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Subtract_IntInt_ReturnValue) == 0x000288, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSpline_Spline_4) == 0x000290, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSpline_Spline_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSpline_Spline_5) == 0x000298, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSpline_Spline_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x0002A0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSpline_Spline_6) == 0x0002A8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSpline_Spline_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0002B0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x0002B4, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSpline_Spline_7) == 0x0002C0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSpline_Spline_7' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Vector_Distance_ReturnValue) == 0x0002C8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSpline_Spline_8) == 0x0002D0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSpline_Spline_8' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSpline_Spline_9) == 0x0002D8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSpline_Spline_9' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetNumberOfSplinePoints_ReturnValue_2) == 0x0002E0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetNumberOfSplinePoints_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetNumberOfSplinePoints_ReturnValue_3) == 0x0002E4, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetNumberOfSplinePoints_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0002E8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0002EC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Max_ReturnValue) == 0x0002F0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x0002F4, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Length_ReturnValue_4) == 0x000300, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Vector_Distance_ReturnValue_1) == 0x000304, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000308, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue_6) == 0x000310, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsCustom_Pawn) == 0x000318, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsCustom_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_3) == 0x000320, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeLiteralName_ReturnValue) == 0x000324, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue_7) == 0x000330, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000338, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsCustom_Pawn_1) == 0x000340, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsCustom_Pawn_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_4) == 0x000348, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeLiteralName_ReturnValue_1) == 0x00034C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Loop_Counter_Variable_4) == 0x000354, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x000358, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Add_IntInt_ReturnValue_4) == 0x000360, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_struct_Variable) == 0x000370, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue_8) == 0x0003A0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_AddComponent_ReturnValue_1) == 0x0003A8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBPI_Chara_Action_1) == 0x0003B0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBPI_Chara_Action_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_5) == 0x0003C0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BI_EndMapAction_CanUse) == 0x0003C1, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BI_EndMapAction_CanUse' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBPI_Pla_603) == 0x0003C8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBPI_Pla_603' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_6) == 0x0003D8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue_9) == 0x0003E0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBPI_Pla_603_1) == 0x0003E8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBPI_Pla_603_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_7) == 0x0003F8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeVector_ReturnValue_3) == 0x0003FC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_SetRideCoasterSlopeAngle_NewParam) == 0x000408, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_SetRideCoasterSlopeAngle_NewParam' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue_10) == 0x000410, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetTransform_ReturnValue) == 0x000420, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Location) == 0x000450, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Rotation) == 0x00045C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Scale) == 0x000468, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_VLerp_ReturnValue) == 0x000474, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue_11) == 0x000480, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_RLerp_ReturnValue) == 0x000488, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakRotator_Roll) == 0x000494, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakRotator_Pitch) == 0x000498, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakRotator_Yaw) == 0x00049C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeRotator_ReturnValue) == 0x0004A0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x0004AC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000534, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default) == 0x000538, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000540, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Location_1) == 0x000570, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Rotation_1) == 0x00057C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Scale_1) == 0x000588, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerController_ReturnValue) == 0x000598, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0005A0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetTransform_ReturnValue_1) == 0x0005B0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x0005E0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Location_2) == 0x0005E8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Rotation_2) == 0x0005F4, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Scale_2) == 0x000600, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetFOVAngle_ReturnValue) == 0x00060C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetFOVAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000610, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerController_ReturnValue_1) == 0x000698, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue_12) == 0x0006A0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSplineForward_Forward_1) == 0x0006A8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSplineForward_Forward_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Dot_VectorVector_ReturnValue) == 0x0006B4, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_DegAcos_ReturnValue) == 0x0006B8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BooleanXOR_ReturnValue) == 0x0006BC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0006C0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakRotator_Roll_1) == 0x0006C4, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakRotator_Pitch_1) == 0x0006C8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakRotator_Yaw_1) == 0x0006CC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue_13) == 0x0006D0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeRotator_ReturnValue_1) == 0x0006D8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetComponentsByTag_ReturnValue) == 0x0006E8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Get_Item_1) == 0x0006F8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerController_ReturnValue_2) == 0x000700, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerCamera_PlayerCamera) == 0x000708, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerCamera_PlayerCamera' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000710, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Location_3) == 0x000740, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Rotation_3) == 0x00074C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Scale_3) == 0x000758, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000764, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1) == 0x000770, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0007F8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000804, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Lerp_ReturnValue) == 0x000810, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_RLerp_ReturnValue_1) == 0x000814, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_RLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000820, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_VLerp_ReturnValue_1) == 0x00082C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerCamera_PlayerCamera_1) == 0x000838, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerCamera_PlayerCamera_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_2) == 0x000840, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_GetComponentRotation_ReturnValue_2) == 0x0008C8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_GetComponentRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x0008D4, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_1) == 0x0008E0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue_14) == 0x0008E8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0008F0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Lerp_ReturnValue_1) == 0x0008FC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakRotator_Roll_2) == 0x000900, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakRotator_Pitch_2) == 0x000904, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakRotator_Yaw_2) == 0x000908, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeRotator_ReturnValue_2) == 0x00090C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x000918, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00091C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_TraseGround_OutPos) == 0x000920, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_TraseGround_OutPos' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeTransform_ReturnValue_2) == 0x000930, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000960, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_VSize_ReturnValue) == 0x00096C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000970, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_VSize_ReturnValue_1) == 0x00097C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Lerp_ReturnValue_2) == 0x000980, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_FindLookAtRotation_ReturnValue) == 0x000984, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x000990, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_RLerp_ReturnValue_2) == 0x00099C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_RLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetForwardVector_ReturnValue) == 0x0009A8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSpline_Spline_10) == 0x0009B8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSpline_Spline_10' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0009C0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSplineLength_ReturnValue_1) == 0x0009CC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSplineLength_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Add_VectorVector_ReturnValue) == 0x0009D0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_2) == 0x0009DC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_SphereTraceSingle_OutHit) == 0x0009E0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_SphereTraceSingle_ReturnValue) == 0x000A68, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSplineForward_Forward_2) == 0x000A6C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSplineForward_Forward_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakHitResult_bBlockingHit) == 0x000A78, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakHitResult_bInitialOverlap) == 0x000A79, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakHitResult_Time) == 0x000A7C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakHitResult_Distance) == 0x000A80, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakHitResult_Location) == 0x000A84, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakHitResult_ImpactPoint) == 0x000A90, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakHitResult_Normal) == 0x000A9C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakHitResult_ImpactNormal) == 0x000AA8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakHitResult_PhysMat) == 0x000AB8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakHitResult_HitActor) == 0x000AC0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakHitResult_HitComponent) == 0x000AC8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakHitResult_HitBoneName) == 0x000AD0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakHitResult_HitItem) == 0x000AD8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakHitResult_ElementIndex) == 0x000ADC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakHitResult_FaceIndex) == 0x000AE0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakHitResult_TraceStart) == 0x000AE4, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakHitResult_TraceEnd) == 0x000AF0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeRotFromZX_ReturnValue) == 0x000AFC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_SelectVector_ReturnValue) == 0x000B08, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Array_Index_Variable_4) == 0x000B14, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerCamera_PlayerCamera_2) == 0x000B18, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerCamera_PlayerCamera_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue_15) == 0x000B20, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x000B28, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000B34, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetForwardVector_ReturnValue_1) == 0x000B40, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000B4C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000B58, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakVector_X) == 0x000B64, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakVector_Y) == 0x000B68, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakVector_Z) == 0x000B6C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000B70, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeVector_ReturnValue_4) == 0x000B7C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Normal_ReturnValue) == 0x000B88, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_VLerp_ReturnValue_2) == 0x000B94, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_VLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_LinePlaneIntersection_OriginNormal_T) == 0x000BA0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_LinePlaneIntersection_OriginNormal_T' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_LinePlaneIntersection_OriginNormal_Intersection) == 0x000BA4, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_LinePlaneIntersection_OriginNormal_Intersection' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue) == 0x000BB0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_FindLookAtRotation_ReturnValue_2) == 0x000BB4, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_FindLookAtRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_3) == 0x000BC0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_3) == 0x000C48, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetForwardVector_ReturnValue_2) == 0x000C54, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Not_PreBool_ReturnValue) == 0x000C60, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000C64, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakVector_X_1) == 0x000C70, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakVector_Y_1) == 0x000C74, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakVector_Z_1) == 0x000C78, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000C7C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeVector_ReturnValue_5) == 0x000C88, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000C94, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Normal_ReturnValue_1) == 0x000CA0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_LinePlaneIntersection_OriginNormal_T_1) == 0x000CAC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_LinePlaneIntersection_OriginNormal_T_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_LinePlaneIntersection_OriginNormal_Intersection_1) == 0x000CB0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_LinePlaneIntersection_OriginNormal_Intersection_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue_1) == 0x000CBC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_NotEqual_NameName_ReturnValue) == 0x000CBD, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_4) == 0x000CC0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_CheckActive_Active) == 0x000CCC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_CheckActive_Active' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Not_PreBool_ReturnValue_1) == 0x000CCD, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_CheckActive_Active_1) == 0x000CCE, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_CheckActive_Active_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetMapCommon_rerutn) == 0x000CD0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Not_PreBool_ReturnValue_2) == 0x000CD8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000CE0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_8) == 0x000CF0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BooleanOR_ReturnValue) == 0x000CF1, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BPI_GetMapGimmickTrigger_Actor) == 0x000CF8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BPI_GetMapGimmickTrigger_Actor' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger) == 0x000D00, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_9) == 0x000D08, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Array_Index_Variable_5) == 0x000D0C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Get_Item_2) == 0x000D10, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_CheckEventFlag_ReturnValue) == 0x000D18, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_CheckEventFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetMapCommon_rerutn_1) == 0x000D20, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetMapCommon_rerutn_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BooleanOR_ReturnValue_1) == 0x000D28, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBPI_Map_Common_1) == 0x000D30, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBPI_Map_Common_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_10) == 0x000D40, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BPI_GetMapGimmickTrigger_Actor_1) == 0x000D48, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BPI_GetMapGimmickTrigger_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger_1) == 0x000D50, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBP_Map_Gimmick_Trigger_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_11) == 0x000D58, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Get_ReturnValue) == 0x000D60, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_IsValid_ReturnValue_5) == 0x000D68, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_float_Variable_3) == 0x000D6C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Get_ReturnValue_1) == 0x000D70, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_IsValid_ReturnValue_6) == 0x000D78, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_float_Variable_4) == 0x000D7C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_11) == 0x000D80, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetStartGimmick_Actor) == 0x000D88, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetStartGimmick_Actor' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base) == 0x000D90, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_12) == 0x000D98, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_5) == 0x000D9C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetEndGimmick_Actor) == 0x000DA0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetEndGimmick_Actor' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetStartGimmick_Actor_1) == 0x000DA8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetStartGimmick_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_1) == 0x000DB0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_13) == 0x000DB8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_2) == 0x000DC0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_14) == 0x000DC8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetEndGimmick_Actor_1) == 0x000DD0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetEndGimmick_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_3) == 0x000DD8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_15) == 0x000DE0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Loop_Counter_Variable_5) == 0x000DE4, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Less_IntInt_ReturnValue_1) == 0x000DE8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Add_IntInt_ReturnValue_5) == 0x000DEC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Not_PreBool_ReturnValue_3) == 0x000DF0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x000DF1, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetNaviComponent_Valid) == 0x000DF2, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetNaviComponent_Valid' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetNaviComponent_Comp) == 0x000DF8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetNaviComponent_Comp' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BooleanAND_ReturnValue) == 0x000E00, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBPI_Chara_Follower) == 0x000E08, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBPI_Chara_Follower' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_16) == 0x000E18, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetNaviComponent_Valid_1) == 0x000E19, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetNaviComponent_Valid_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetNaviComponent_Comp_1) == 0x000E20, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetNaviComponent_Comp_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBPI_Chara_Follower_1) == 0x000E28, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBPI_Chara_Follower_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_17) == 0x000E38, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_CreateDelegate_OutputDelegate_3) == 0x000E3C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_float_Variable_5) == 0x000E4C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_CreateDelegate_OutputDelegate_4) == 0x000E50, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_float_Variable_6) == 0x000E60, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Not_PreBool_ReturnValue_4) == 0x000E64, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Array_Index_Variable_6) == 0x000E68, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Get_Item_3) == 0x000E70, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_12) == 0x000E78, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Not_PreBool_ReturnValue_5) == 0x000E79, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_13) == 0x000E7A, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_6) == 0x000E7C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_7) == 0x000E80, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_CreateDelegate_OutputDelegate_5) == 0x000E84, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000E94, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Lerp_ReturnValue_3) == 0x000E98, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000E9C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BooleanOR_ReturnValue_2) == 0x000E9D, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Not_PreBool_ReturnValue_6) == 0x000E9E, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_FadeOut_Black_ReturnValue) == 0x000E9F, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_FadeOut_Black_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Not_PreBool_ReturnValue_7) == 0x000EA0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_FadeIn_Black_ReturnValue) == 0x000EA1, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_FadeIn_Black_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Not_PreBool_ReturnValue_8) == 0x000EA2, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue_16) == 0x000EA8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsPlayer_Base) == 0x000EB0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsPlayer_Base' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_18) == 0x000EB8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_14) == 0x000EB9, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_8) == 0x000EC0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSpline_Spline_11) == 0x000EC8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSpline_Spline_11' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_GetComponentToWorld_ReturnValue_2) == 0x000ED0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_GetComponentToWorld_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSplineLength_ReturnValue_2) == 0x000F00, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSplineLength_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Location_4) == 0x000F04, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Rotation_4) == 0x000F10, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Scale_4) == 0x000F1C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_9) == 0x000F28, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_TraseGround_OutPos_1) == 0x000F2C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_TraseGround_OutPos_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSplineForward_Forward_3) == 0x000F38, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSplineForward_Forward_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Loop_Counter_Variable_6) == 0x000F44, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeRotFromZX_ReturnValue_1) == 0x000F48, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeRotFromZX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Less_IntInt_ReturnValue_2) == 0x000F54, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Add_IntInt_ReturnValue_6) == 0x000F58, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Loop_Counter_Variable_7) == 0x000F5C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_IsValid_ReturnValue_7) == 0x000F60, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Less_IntInt_ReturnValue_3) == 0x000F61, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Add_IntInt_ReturnValue_7) == 0x000F64, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Variable) == 0x000F68, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_15) == 0x000F6C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Array_Index_Variable_7) == 0x000F70, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_10) == 0x000F74, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Get_Item_4) == 0x000F78, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetRotationAtSplinePoint_ReturnValue) == 0x000F80, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetRotationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetForwardVector_ReturnValue_3) == 0x000F8C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x000F98, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_11) == 0x000FA4, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Not_PreBool_ReturnValue_9) == 0x000FB0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BtnHelp_GetTextByEnum_HelpText) == 0x000FB8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BtnHelp_GetTextByEnum_HelpText' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_MakeStruct_BtnHelpInfo) == 0x000FD0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_MakeStruct_BtnHelpInfo' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_MakeArray_Array) == 0x000FF0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_16) == 0x001000, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_12) == 0x001008, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Not_PreBool_ReturnValue_10) == 0x001010, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_K2_GetComponentLocation_ReturnValue_5) == 0x001014, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_K2_GetComponentLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Variable_1) == 0x001020, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Not_PreBool_ReturnValue_11) == 0x001024, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_17) == 0x001025, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetStartGimmick_Actor_2) == 0x001028, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetStartGimmick_Actor_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_4) == 0x001030, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_19) == 0x001038, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_13) == 0x00103C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetEndGimmick_Actor_2) == 0x001040, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetEndGimmick_Actor_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_5) == 0x001048, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_20) == 0x001050, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_IsActionPadCheck_Success) == 0x001051, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_IsActionPadCheck_Success' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_IsActionPadCheck_Success_1) == 0x001052, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_IsActionPadCheck_Success_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_IsActionPadCheck_Success_2) == 0x001053, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_IsActionPadCheck_Success_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_IsActionPadCheck_Success_3) == 0x001054, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_IsActionPadCheck_Success_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BooleanOR_ReturnValue_3) == 0x001055, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BooleanOR_ReturnValue_4) == 0x001056, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BooleanOR_ReturnValue_5) == 0x001057, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetSpline_Spline_12) == 0x001058, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetSpline_Spline_12' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerPawn_ReturnValue_17) == 0x001060, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerPawn_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsCustom_Pawn_2) == 0x001068, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsCustom_Pawn_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_21) == 0x001070, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeTransform_ReturnValue_3) == 0x001080, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_ComposeTransforms_ReturnValue) == 0x0010B0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeLiteralName_ReturnValue_2) == 0x0010E0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Location_5) == 0x0010E8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Rotation_5) == 0x0010F4, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Scale_5) == 0x001100, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_SpawnSoundAttached_ReturnValue_2) == 0x001110, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_SpawnSoundAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Variable_2) == 0x001118, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerController_ReturnValue_3) == 0x001120, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager) == 0x001128, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBPI_Project_Player_Camera_Manager' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_22) == 0x001138, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Array_Index_Variable_8) == 0x00113C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetPlayerController_ReturnValue_4) == 0x001140, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Get_Item_5) == 0x001148, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Get_Item_6) == 0x001150, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Length_ReturnValue_5) == 0x001158, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Less_IntInt_ReturnValue_4) == 0x00115C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Get_Item_7) == 0x001160, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Length_ReturnValue_6) == 0x001168, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Less_IntInt_ReturnValue_5) == 0x00116C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBPI_Coaster_Gimmick) == 0x001170, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBPI_Coaster_Gimmick' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_23) == 0x001180, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BPI_CheckActive_WhenFlag_Active) == 0x001181, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BPI_CheckActive_WhenFlag_Active' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBPI_Coaster_Gimmick_1) == 0x001188, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBPI_Coaster_Gimmick_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_24) == 0x001198, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetAllActorsWithTag_OutActors) == 0x0011A0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BPI_CheckActive_WhenFlag_Active_1) == 0x0011B0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BPI_CheckActive_WhenFlag_Active_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Get_Item_8) == 0x0011B8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBPI_Env_Ctrl) == 0x0011C0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBPI_Env_Ctrl' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_25) == 0x0011D0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Length_ReturnValue_7) == 0x0011D4, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_int_Loop_Counter_Variable_8) == 0x0011D8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Less_IntInt_ReturnValue_6) == 0x0011DC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Less_IntInt_ReturnValue_7) == 0x0011DD, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Add_IntInt_ReturnValue_8) == 0x0011E0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetMapCommon_rerutn_2) == 0x0011E8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetMapCommon_rerutn_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsBPI_Map_Common_2) == 0x0011F0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsBPI_Map_Common_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_26) == 0x001200, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Get_ReturnValue_2) == 0x001208, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Get_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Get_ReturnValue_3) == 0x001210, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Get_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Not_PreBool_ReturnValue_12) == 0x001218, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetGameMode_ReturnValue) == 0x001220, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsProject_Game_Mode) == 0x001228, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsProject_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_27) == 0x001230, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetEndGimmick_Actor_3) == 0x001238, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetEndGimmick_Actor_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetStartGimmick_Actor_3) == 0x001240, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetStartGimmick_Actor_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_14) == 0x001248, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsMap_Event_Hit_Type_AAction) == 0x001250, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsMap_Event_Hit_Type_AAction' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_28) == 0x001258, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetTransform_ReturnValue_2) == 0x001260, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Location_6) == 0x001290, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Location_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Rotation_6) == 0x00129C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Rotation_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakTransform_Scale_6) == 0x0012A8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakTransform_Scale_6' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Not_PreBool_ReturnValue_13) == 0x0012B4, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakRotator_Roll_3) == 0x0012B8, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakRotator_Pitch_3) == 0x0012BC, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_BreakRotator_Yaw_3) == 0x0012C0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeRotator_ReturnValue_3) == 0x0012C4, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0012D0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_MakeTransform_ReturnValue_4) == 0x0012E0, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x001310, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x001314, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_15) == 0x001318, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x00131C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetEndGimmick_Actor_4) == 0x001320, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetEndGimmick_Actor_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetStartGimmick_Actor_4) == 0x001328, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetStartGimmick_Actor_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_16) == 0x001330, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsMap_Event_Hit_Type_AAction_1) == 0x001338, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsMap_Event_Hit_Type_AAction_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_29) == 0x001340, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_29' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetEndGimmick_Actor_5) == 0x001348, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetEndGimmick_Actor_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetStartGimmick_Actor_5) == 0x001350, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetStartGimmick_Actor_5' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_17) == 0x001358, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_AsMap_Event_Hit_Type_AAction_2) == 0x001360, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_AsMap_Event_Hit_Type_AAction_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_DynamicCast_bSuccess_30) == 0x001368, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_DynamicCast_bSuccess_30' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Not_PreBool_ReturnValue_14) == 0x001369, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, Temp_bool_Variable_18) == 0x00136A, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, K2Node_Select_Default_18) == 0x00136C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_FMin_ReturnValue) == 0x001370, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_GetBP_ScreenFade_ReturnValue) == 0x001378, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_GetBP_ScreenFade_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Get_Item_9) == 0x001380, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Array_Length_ReturnValue_8) == 0x001388, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline, CallFunc_Less_IntInt_ReturnValue_8) == 0x00138C, "Member 'BP_CoasterSpline_C_ExecuteUbergraph_BP_CoasterSpline::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.EvtDis_Stop_
// 0x0008 (0x0008 - 0x0000)
struct BP_CoasterSpline_C_EvtDis_Stop_ final
{
public:
	class UBPC_CharaSplineMover_C*                ThisComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterSpline_C_EvtDis_Stop_) == 0x000008, "Wrong alignment on BP_CoasterSpline_C_EvtDis_Stop_");
static_assert(sizeof(BP_CoasterSpline_C_EvtDis_Stop_) == 0x000008, "Wrong size on BP_CoasterSpline_C_EvtDis_Stop_");
static_assert(offsetof(BP_CoasterSpline_C_EvtDis_Stop_, ThisComponent) == 0x000000, "Member 'BP_CoasterSpline_C_EvtDis_Stop_::ThisComponent' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.OnArriveSplineEnd
// 0x0008 (0x0008 - 0x0000)
struct BP_CoasterSpline_C_OnArriveSplineEnd final
{
public:
	class UBPC_CharaSplineMover_C*                ThisComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterSpline_C_OnArriveSplineEnd) == 0x000008, "Wrong alignment on BP_CoasterSpline_C_OnArriveSplineEnd");
static_assert(sizeof(BP_CoasterSpline_C_OnArriveSplineEnd) == 0x000008, "Wrong size on BP_CoasterSpline_C_OnArriveSplineEnd");
static_assert(offsetof(BP_CoasterSpline_C_OnArriveSplineEnd, ThisComponent) == 0x000000, "Member 'BP_CoasterSpline_C_OnArriveSplineEnd::ThisComponent' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.UserConstructionScript
// 0x0490 (0x0490 - 0x0000)
struct BP_CoasterSpline_C_UserConstructionScript final
{
public:
	float                                         L_CurrentEnd;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_CurrentStart;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_SplineLength;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_MeshLength;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_UpVec2;                                          // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_UpVec1;                                          // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_PrevSplineUp;                                    // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_CurrentSplineUp;                                 // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_CurrentSplineDir;                                // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Pos;                                             // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_OriginSplinePos2;                                // 0x0058(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_OriginSplinePos1;                                // 0x0064(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   L_SplineMesh;                                      // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_LoopEnd;                                         // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_883E[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0084(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_883F[0xC];                                     // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	class UArrowComponent*                        CallFunc_AddComponent_ReturnValue;                 // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IS_EDITOR_BUILD_ReturnValue;              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8840[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8841[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue; // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1; // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8842[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue; // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8843[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0160(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8844[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue_1;               // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8845[0x3];                                     // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Acos_ReturnValue;                         // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8846[0x3];                                     // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue;       // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue_1;     // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVectorAtSplinePoint_ReturnValue;     // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVectorAtSplinePoint_ReturnValue_1;   // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8847[0x3];                                     // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionAtSplinePoint_ReturnValue;    // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8848[0x3];                                     // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8849[0x8];                                     // 0x0288(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtSplinePoint_ReturnValue;    // 0x0290(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_884A[0x3];                                     // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x02DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_884B[0x8];                                     // 0x0308(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0310(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0340(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_884C[0x8];                                     // 0x03C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x03D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_1;    // 0x0400(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_CoasterSpline_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_CoasterSpline_C_UserConstructionScript");
static_assert(sizeof(BP_CoasterSpline_C_UserConstructionScript) == 0x000490, "Wrong size on BP_CoasterSpline_C_UserConstructionScript");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, L_CurrentEnd) == 0x000000, "Member 'BP_CoasterSpline_C_UserConstructionScript::L_CurrentEnd' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, L_CurrentStart) == 0x000004, "Member 'BP_CoasterSpline_C_UserConstructionScript::L_CurrentStart' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, L_SplineLength) == 0x000008, "Member 'BP_CoasterSpline_C_UserConstructionScript::L_SplineLength' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, L_MeshLength) == 0x00000C, "Member 'BP_CoasterSpline_C_UserConstructionScript::L_MeshLength' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, L_UpVec2) == 0x000010, "Member 'BP_CoasterSpline_C_UserConstructionScript::L_UpVec2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, L_UpVec1) == 0x00001C, "Member 'BP_CoasterSpline_C_UserConstructionScript::L_UpVec1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, L_PrevSplineUp) == 0x000028, "Member 'BP_CoasterSpline_C_UserConstructionScript::L_PrevSplineUp' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, L_CurrentSplineUp) == 0x000034, "Member 'BP_CoasterSpline_C_UserConstructionScript::L_CurrentSplineUp' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, L_CurrentSplineDir) == 0x000040, "Member 'BP_CoasterSpline_C_UserConstructionScript::L_CurrentSplineDir' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, L_Pos) == 0x00004C, "Member 'BP_CoasterSpline_C_UserConstructionScript::L_Pos' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, L_OriginSplinePos2) == 0x000058, "Member 'BP_CoasterSpline_C_UserConstructionScript::L_OriginSplinePos2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, L_OriginSplinePos1) == 0x000064, "Member 'BP_CoasterSpline_C_UserConstructionScript::L_OriginSplinePos1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, L_SplineMesh) == 0x000070, "Member 'BP_CoasterSpline_C_UserConstructionScript::L_SplineMesh' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, L_index) == 0x000078, "Member 'BP_CoasterSpline_C_UserConstructionScript::L_index' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, L_LoopEnd) == 0x00007C, "Member 'BP_CoasterSpline_C_UserConstructionScript::L_LoopEnd' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, Temp_bool_Variable) == 0x000080, "Member 'BP_CoasterSpline_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, Temp_float_Variable) == 0x000084, "Member 'BP_CoasterSpline_C_UserConstructionScript::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000088, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x0000D0, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_IS_EDITOR_BUILD_ReturnValue) == 0x0000DC, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_IS_EDITOR_BUILD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue) == 0x0000E0, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, Temp_int_Variable) == 0x0000E4, "Member 'BP_CoasterSpline_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x0000E8, "Member 'BP_CoasterSpline_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue) == 0x0000F4, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Normal_ReturnValue) == 0x000100, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1) == 0x00010C, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000118, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Normal_ReturnValue_1) == 0x000124, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000130, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x00013C, "Member 'BP_CoasterSpline_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_1) == 0x000140, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, Temp_int_Loop_Counter_Variable_1) == 0x000144, "Member 'BP_CoasterSpline_C_UserConstructionScript::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000148, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_2) == 0x00014C, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue) == 0x000150, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, Temp_struct_Variable) == 0x000160, "Member 'BP_CoasterSpline_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000190, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue_1) == 0x000198, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x0001A0, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x0001AC, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001B8, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0001BC, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x0001C0, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001C4, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, Temp_int_Variable_1) == 0x0001C8, "Member 'BP_CoasterSpline_C_UserConstructionScript::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Max_ReturnValue) == 0x0001CC, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0001D0, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001D4, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0001D8, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001DC, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0001E0, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Round_ReturnValue) == 0x0001E4, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_GetSplineLength_ReturnValue) == 0x0001E8, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Max_ReturnValue_1) == 0x0001EC, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Cross_VectorVector_ReturnValue) == 0x0001F0, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Dot_VectorVector_ReturnValue) == 0x0001FC, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000200, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Acos_ReturnValue) == 0x000204, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Acos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000208, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00020C, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, K2Node_Select_Default) == 0x000210, "Member 'BP_CoasterSpline_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_ProjectVectorOnToPlane_ReturnValue) == 0x000214, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_ProjectVectorOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Normal_ReturnValue_2) == 0x000220, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_ProjectVectorOnToPlane_ReturnValue_1) == 0x00022C, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_ProjectVectorOnToPlane_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, Temp_int_Array_Index_Variable_1) == 0x000238, "Member 'BP_CoasterSpline_C_UserConstructionScript::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Normal_ReturnValue_3) == 0x00023C, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000248, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000250, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_GetUpVectorAtSplinePoint_ReturnValue) == 0x000254, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_GetUpVectorAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_GetUpVectorAtSplinePoint_ReturnValue_1) == 0x000260, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_GetUpVectorAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Greater_IntInt_ReturnValue) == 0x00026C, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue_1) == 0x000270, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_GetDirectionAtSplinePoint_ReturnValue) == 0x000274, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_GetDirectionAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue_1) == 0x000280, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000284, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_GetTransformAtSplinePoint_ReturnValue) == 0x000290, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_GetTransformAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0002C0, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_BreakTransform_Location) == 0x0002C4, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_BreakTransform_Rotation) == 0x0002D0, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_BreakTransform_Scale) == 0x0002DC, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_GetUpVector_ReturnValue) == 0x0002E8, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x0002F4, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_MakeRotFromXZ_ReturnValue) == 0x0002F8, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000304, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue_1) == 0x000310, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000340, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0003D0, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_UserConstructionScript, CallFunc_K2_SetWorldTransform_SweepHitResult_1) == 0x000400, "Member 'BP_CoasterSpline_C_UserConstructionScript::CallFunc_K2_SetWorldTransform_SweepHitResult_1' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.GetSplineMeshs
// 0x0070 (0x0070 - 0x0000)
struct BP_CoasterSpline_C_GetSplineMeshs final
{
public:
	TArray<class USplineMeshComponent*>           Param_SplineMeshs;                                 // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class USplineMeshComponent*>           L_Ret;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class USceneComponent*>                L_Children;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_884D[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_884E[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   K2Node_DynamicCast_AsSpline_Mesh_Component;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_884F[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_CoasterSpline_C_GetSplineMeshs) == 0x000008, "Wrong alignment on BP_CoasterSpline_C_GetSplineMeshs");
static_assert(sizeof(BP_CoasterSpline_C_GetSplineMeshs) == 0x000070, "Wrong size on BP_CoasterSpline_C_GetSplineMeshs");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineMeshs, Param_SplineMeshs) == 0x000000, "Member 'BP_CoasterSpline_C_GetSplineMeshs::Param_SplineMeshs' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineMeshs, L_Ret) == 0x000010, "Member 'BP_CoasterSpline_C_GetSplineMeshs::L_Ret' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineMeshs, L_Children) == 0x000020, "Member 'BP_CoasterSpline_C_GetSplineMeshs::L_Children' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineMeshs, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_CoasterSpline_C_GetSplineMeshs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineMeshs, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_CoasterSpline_C_GetSplineMeshs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineMeshs, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_CoasterSpline_C_GetSplineMeshs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineMeshs, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_CoasterSpline_C_GetSplineMeshs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineMeshs, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_CoasterSpline_C_GetSplineMeshs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineMeshs, K2Node_DynamicCast_AsSpline_Mesh_Component) == 0x000050, "Member 'BP_CoasterSpline_C_GetSplineMeshs::K2Node_DynamicCast_AsSpline_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineMeshs, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_CoasterSpline_C_GetSplineMeshs::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineMeshs, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'BP_CoasterSpline_C_GetSplineMeshs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineMeshs, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'BP_CoasterSpline_C_GetSplineMeshs::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineMeshs, CallFunc_GetChildrenComponents_Children) == 0x000060, "Member 'BP_CoasterSpline_C_GetSplineMeshs::CallFunc_GetChildrenComponents_Children' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.GetSplineUpVec
// 0x00B0 (0x00B0 - 0x0000)
struct BP_CoasterSpline_C_GetSplineUpVec final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                UpVec;                                             // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_UpVec;                                           // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_UpVec2;                                          // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_UpVec1;                                          // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               L_Rot2;                                            // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               L_Rot1;                                            // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               L_Rotate;                                          // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         L_Point;                                           // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_InputKey;                                        // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVectorAtSplinePoint_ReturnValue;     // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVectorAtSplinePoint_ReturnValue_1;   // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterSpline_C_GetSplineUpVec) == 0x000004, "Wrong alignment on BP_CoasterSpline_C_GetSplineUpVec");
static_assert(sizeof(BP_CoasterSpline_C_GetSplineUpVec) == 0x0000B0, "Wrong size on BP_CoasterSpline_C_GetSplineUpVec");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, Distance) == 0x000000, "Member 'BP_CoasterSpline_C_GetSplineUpVec::Distance' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, UpVec) == 0x000004, "Member 'BP_CoasterSpline_C_GetSplineUpVec::UpVec' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, L_UpVec) == 0x000010, "Member 'BP_CoasterSpline_C_GetSplineUpVec::L_UpVec' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, L_UpVec2) == 0x00001C, "Member 'BP_CoasterSpline_C_GetSplineUpVec::L_UpVec2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, L_UpVec1) == 0x000028, "Member 'BP_CoasterSpline_C_GetSplineUpVec::L_UpVec1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, L_Rot2) == 0x000034, "Member 'BP_CoasterSpline_C_GetSplineUpVec::L_Rot2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, L_Rot1) == 0x000040, "Member 'BP_CoasterSpline_C_GetSplineUpVec::L_Rot1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, L_Rotate) == 0x00004C, "Member 'BP_CoasterSpline_C_GetSplineUpVec::L_Rotate' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, L_Point) == 0x000058, "Member 'BP_CoasterSpline_C_GetSplineUpVec::L_Point' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, L_InputKey) == 0x00005C, "Member 'BP_CoasterSpline_C_GetSplineUpVec::L_InputKey' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000060, "Member 'BP_CoasterSpline_C_GetSplineUpVec::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_CoasterSpline_C_GetSplineUpVec::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, CallFunc_VLerp_ReturnValue) == 0x000068, "Member 'BP_CoasterSpline_C_GetSplineUpVec::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_CoasterSpline_C_GetSplineUpVec::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, CallFunc_Normal_ReturnValue) == 0x000078, "Member 'BP_CoasterSpline_C_GetSplineUpVec::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, CallFunc_GetUpVectorAtSplinePoint_ReturnValue) == 0x000084, "Member 'BP_CoasterSpline_C_GetSplineUpVec::CallFunc_GetUpVectorAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, CallFunc_GetUpVectorAtSplinePoint_ReturnValue_1) == 0x000090, "Member 'BP_CoasterSpline_C_GetSplineUpVec::CallFunc_GetUpVectorAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x00009C, "Member 'BP_CoasterSpline_C_GetSplineUpVec::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, CallFunc_FFloor_ReturnValue) == 0x0000A8, "Member 'BP_CoasterSpline_C_GetSplineUpVec::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineUpVec, CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue) == 0x0000AC, "Member 'BP_CoasterSpline_C_GetSplineUpVec::CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.GetSplineForward
// 0x0048 (0x0048 - 0x0000)
struct BP_CoasterSpline_C_GetSplineForward final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reverse;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8850[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Forward;                                           // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8851[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_GetSpline_Spline;                         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDirectionatDistanceAlongSpline_ReturnValue; // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0038(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterSpline_C_GetSplineForward) == 0x000008, "Wrong alignment on BP_CoasterSpline_C_GetSplineForward");
static_assert(sizeof(BP_CoasterSpline_C_GetSplineForward) == 0x000048, "Wrong size on BP_CoasterSpline_C_GetSplineForward");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineForward, Distance) == 0x000000, "Member 'BP_CoasterSpline_C_GetSplineForward::Distance' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineForward, Reverse) == 0x000004, "Member 'BP_CoasterSpline_C_GetSplineForward::Reverse' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineForward, Forward) == 0x000008, "Member 'BP_CoasterSpline_C_GetSplineForward::Forward' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineForward, Temp_bool_Variable) == 0x000014, "Member 'BP_CoasterSpline_C_GetSplineForward::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineForward, CallFunc_GetSpline_Spline) == 0x000018, "Member 'BP_CoasterSpline_C_GetSplineForward::CallFunc_GetSpline_Spline' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineForward, CallFunc_GetDirectionatDistanceAlongSpline_ReturnValue) == 0x000020, "Member 'BP_CoasterSpline_C_GetSplineForward::CallFunc_GetDirectionatDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineForward, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00002C, "Member 'BP_CoasterSpline_C_GetSplineForward::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetSplineForward, K2Node_Select_Default) == 0x000038, "Member 'BP_CoasterSpline_C_GetSplineForward::K2Node_Select_Default' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.CalcPlayerCameraRot
// 0x006C (0x006C - 0x0000)
struct BP_CoasterSpline_C_CalcPlayerCameraRot final
{
public:
	struct FRotator                               Param_PrevCameraRot;                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               PrevPlayerRot;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               NextPlayerRot;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               NextPlayerCameraRot;                               // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterSpline_C_CalcPlayerCameraRot) == 0x000004, "Wrong alignment on BP_CoasterSpline_C_CalcPlayerCameraRot");
static_assert(sizeof(BP_CoasterSpline_C_CalcPlayerCameraRot) == 0x00006C, "Wrong size on BP_CoasterSpline_C_CalcPlayerCameraRot");
static_assert(offsetof(BP_CoasterSpline_C_CalcPlayerCameraRot, Param_PrevCameraRot) == 0x000000, "Member 'BP_CoasterSpline_C_CalcPlayerCameraRot::Param_PrevCameraRot' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcPlayerCameraRot, PrevPlayerRot) == 0x00000C, "Member 'BP_CoasterSpline_C_CalcPlayerCameraRot::PrevPlayerRot' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcPlayerCameraRot, NextPlayerRot) == 0x000018, "Member 'BP_CoasterSpline_C_CalcPlayerCameraRot::NextPlayerRot' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcPlayerCameraRot, NextPlayerCameraRot) == 0x000024, "Member 'BP_CoasterSpline_C_CalcPlayerCameraRot::NextPlayerCameraRot' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcPlayerCameraRot, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'BP_CoasterSpline_C_CalcPlayerCameraRot::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcPlayerCameraRot, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'BP_CoasterSpline_C_CalcPlayerCameraRot::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcPlayerCameraRot, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'BP_CoasterSpline_C_CalcPlayerCameraRot::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcPlayerCameraRot, CallFunc_BreakRotator_Roll_1) == 0x00003C, "Member 'BP_CoasterSpline_C_CalcPlayerCameraRot::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcPlayerCameraRot, CallFunc_BreakRotator_Pitch_1) == 0x000040, "Member 'BP_CoasterSpline_C_CalcPlayerCameraRot::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcPlayerCameraRot, CallFunc_BreakRotator_Yaw_1) == 0x000044, "Member 'BP_CoasterSpline_C_CalcPlayerCameraRot::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcPlayerCameraRot, CallFunc_BreakRotator_Roll_2) == 0x000048, "Member 'BP_CoasterSpline_C_CalcPlayerCameraRot::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcPlayerCameraRot, CallFunc_BreakRotator_Pitch_2) == 0x00004C, "Member 'BP_CoasterSpline_C_CalcPlayerCameraRot::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcPlayerCameraRot, CallFunc_BreakRotator_Yaw_2) == 0x000050, "Member 'BP_CoasterSpline_C_CalcPlayerCameraRot::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcPlayerCameraRot, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_CoasterSpline_C_CalcPlayerCameraRot::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcPlayerCameraRot, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_CoasterSpline_C_CalcPlayerCameraRot::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcPlayerCameraRot, CallFunc_NormalizeAxis_ReturnValue) == 0x00005C, "Member 'BP_CoasterSpline_C_CalcPlayerCameraRot::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcPlayerCameraRot, CallFunc_MakeRotator_ReturnValue) == 0x000060, "Member 'BP_CoasterSpline_C_CalcPlayerCameraRot::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.MakeDMI
// 0x0068 (0x0068 - 0x0000)
struct BP_CoasterSpline_C_MakeDMI final
{
public:
	TArray<class UMaterialInterface*>             L_Materials;                                       // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8852[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8853[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8854[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0058(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_CoasterSpline_C_MakeDMI) == 0x000008, "Wrong alignment on BP_CoasterSpline_C_MakeDMI");
static_assert(sizeof(BP_CoasterSpline_C_MakeDMI) == 0x000068, "Wrong size on BP_CoasterSpline_C_MakeDMI");
static_assert(offsetof(BP_CoasterSpline_C_MakeDMI, L_Materials) == 0x000000, "Member 'BP_CoasterSpline_C_MakeDMI::L_Materials' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_MakeDMI, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_CoasterSpline_C_MakeDMI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_MakeDMI, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_CoasterSpline_C_MakeDMI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_MakeDMI, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_CoasterSpline_C_MakeDMI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_MakeDMI, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BP_CoasterSpline_C_MakeDMI::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_MakeDMI, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_CoasterSpline_C_MakeDMI::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_MakeDMI, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_CoasterSpline_C_MakeDMI::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_MakeDMI, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_CoasterSpline_C_MakeDMI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_MakeDMI, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_CoasterSpline_C_MakeDMI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_MakeDMI, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_CoasterSpline_C_MakeDMI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_MakeDMI, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BP_CoasterSpline_C_MakeDMI::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_MakeDMI, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BP_CoasterSpline_C_MakeDMI::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_MakeDMI, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'BP_CoasterSpline_C_MakeDMI::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_MakeDMI, CallFunc_Less_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_CoasterSpline_C_MakeDMI::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_MakeDMI, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'BP_CoasterSpline_C_MakeDMI::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_MakeDMI, CallFunc_GetMaterials_ReturnValue) == 0x000058, "Member 'BP_CoasterSpline_C_MakeDMI::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.CalcAddSplinePoint
// 0x00A4 (0x00A4 - 0x0000)
struct BP_CoasterSpline_C_CalcAddSplinePoint final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8855[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8856[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8857[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8858[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterSpline_C_CalcAddSplinePoint) == 0x000004, "Wrong alignment on BP_CoasterSpline_C_CalcAddSplinePoint");
static_assert(sizeof(BP_CoasterSpline_C_CalcAddSplinePoint) == 0x0000A4, "Wrong size on BP_CoasterSpline_C_CalcAddSplinePoint");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_GetActorForwardVector_ReturnValue) == 0x000004, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000010, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x00001C, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000028, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000034, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00003C, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000048, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x000054, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000060, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_Vector_Distance_ReturnValue) == 0x00006C, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000070, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000074, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000080, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_IsValid_ReturnValue_1) == 0x00008C, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x000090, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_Vector_Distance_ReturnValue_1) == 0x00009C, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcAddSplinePoint, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000A0, "Member 'BP_CoasterSpline_C_CalcAddSplinePoint::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.CalcSplineForMove
// 0x00B0 (0x00B0 - 0x0000)
struct BP_CoasterSpline_C_CalcSplineForMove final
{
public:
	int32                                         L_index;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8859[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   L_SplineMesh;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_885A[0xC];                                     // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class USplineComponent*                       CallFunc_AddComponent_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEndTangent_ReturnValue;                // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEndPosition_ReturnValue;               // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetStartTangent_ReturnValue;              // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_885B[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetStartPosition_ReturnValue;             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_885C[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterSpline_C_CalcSplineForMove) == 0x000010, "Wrong alignment on BP_CoasterSpline_C_CalcSplineForMove");
static_assert(sizeof(BP_CoasterSpline_C_CalcSplineForMove) == 0x0000B0, "Wrong size on BP_CoasterSpline_C_CalcSplineForMove");
static_assert(offsetof(BP_CoasterSpline_C_CalcSplineForMove, L_index) == 0x000000, "Member 'BP_CoasterSpline_C_CalcSplineForMove::L_index' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSplineForMove, L_SplineMesh) == 0x000008, "Member 'BP_CoasterSpline_C_CalcSplineForMove::L_SplineMesh' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSplineForMove, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_CoasterSpline_C_CalcSplineForMove::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSplineForMove, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BP_CoasterSpline_C_CalcSplineForMove::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSplineForMove, CallFunc_AddComponent_ReturnValue) == 0x000050, "Member 'BP_CoasterSpline_C_CalcSplineForMove::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSplineForMove, CallFunc_GetEndTangent_ReturnValue) == 0x000058, "Member 'BP_CoasterSpline_C_CalcSplineForMove::CallFunc_GetEndTangent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSplineForMove, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_CoasterSpline_C_CalcSplineForMove::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSplineForMove, CallFunc_GetEndPosition_ReturnValue) == 0x000068, "Member 'BP_CoasterSpline_C_CalcSplineForMove::CallFunc_GetEndPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSplineForMove, CallFunc_GetStartTangent_ReturnValue) == 0x000074, "Member 'BP_CoasterSpline_C_CalcSplineForMove::CallFunc_GetStartTangent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSplineForMove, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'BP_CoasterSpline_C_CalcSplineForMove::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSplineForMove, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'BP_CoasterSpline_C_CalcSplineForMove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSplineForMove, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_CoasterSpline_C_CalcSplineForMove::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSplineForMove, CallFunc_GetStartPosition_ReturnValue) == 0x00008C, "Member 'BP_CoasterSpline_C_CalcSplineForMove::CallFunc_GetStartPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSplineForMove, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_CoasterSpline_C_CalcSplineForMove::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSplineForMove, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_CoasterSpline_C_CalcSplineForMove::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSplineForMove, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_CoasterSpline_C_CalcSplineForMove::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.GetSpline
// 0x0008 (0x0008 - 0x0000)
struct BP_CoasterSpline_C_GetSpline final
{
public:
	class USplineComponent*                       Param_Spline;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterSpline_C_GetSpline) == 0x000008, "Wrong alignment on BP_CoasterSpline_C_GetSpline");
static_assert(sizeof(BP_CoasterSpline_C_GetSpline) == 0x000008, "Wrong size on BP_CoasterSpline_C_GetSpline");
static_assert(offsetof(BP_CoasterSpline_C_GetSpline, Param_Spline) == 0x000000, "Member 'BP_CoasterSpline_C_GetSpline::Param_Spline' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.CalcSaveID
// 0x0038 (0x0038 - 0x0000)
struct BP_CoasterSpline_C_CalcSaveID final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_885D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CoasterSpline_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_885E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CoasterSpline_C*                    CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterSpline_C_CalcSaveID) == 0x000008, "Wrong alignment on BP_CoasterSpline_C_CalcSaveID");
static_assert(sizeof(BP_CoasterSpline_C_CalcSaveID) == 0x000038, "Wrong size on BP_CoasterSpline_C_CalcSaveID");
static_assert(offsetof(BP_CoasterSpline_C_CalcSaveID, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_CoasterSpline_C_CalcSaveID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSaveID, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_CoasterSpline_C_CalcSaveID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSaveID, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_CoasterSpline_C_CalcSaveID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSaveID, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_CoasterSpline_C_CalcSaveID::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSaveID, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_CoasterSpline_C_CalcSaveID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSaveID, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_CoasterSpline_C_CalcSaveID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSaveID, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_CoasterSpline_C_CalcSaveID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcSaveID, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_CoasterSpline_C_CalcSaveID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.GetGlobalSaveID
// 0x0008 (0x0008 - 0x0000)
struct BP_CoasterSpline_C_GetGlobalSaveID final
{
public:
	int32                                         SaveId;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterSpline_C_GetGlobalSaveID) == 0x000004, "Wrong alignment on BP_CoasterSpline_C_GetGlobalSaveID");
static_assert(sizeof(BP_CoasterSpline_C_GetGlobalSaveID) == 0x000008, "Wrong size on BP_CoasterSpline_C_GetGlobalSaveID");
static_assert(offsetof(BP_CoasterSpline_C_GetGlobalSaveID, SaveId) == 0x000000, "Member 'BP_CoasterSpline_C_GetGlobalSaveID::SaveId' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetGlobalSaveID, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_CoasterSpline_C_GetGlobalSaveID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.CalcCoasterCameraPos
// 0x03C0 (0x03C0 - 0x0000)
struct BP_CoasterSpline_C_CalcCoasterCameraPos final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotate;                                            // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         FOV;                                               // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_885F[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             L_CameraLocalTrans;                                // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             L_WorldTrans;                                      // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             L_PlayerTrans;                                     // 0x0080(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8860[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8861[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8862[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0144(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8863[0x1];                                     // 0x01CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8864[0x4];                                     // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0280(0x0030)(IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8865[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x02C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8866[0xC];                                     // 0x0314(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0320(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ConvertTransformToRelative_ReturnValue;   // 0x0350(0x0030)(IsPlainOldData, NoDestructor)
	class ABP_CoasterGimmickBase_C*               K2Node_Select_Default;                             // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8867[0x8];                                     // 0x0388(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0390(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterSpline_C_CalcCoasterCameraPos) == 0x000010, "Wrong alignment on BP_CoasterSpline_C_CalcCoasterCameraPos");
static_assert(sizeof(BP_CoasterSpline_C_CalcCoasterCameraPos) == 0x0003C0, "Wrong size on BP_CoasterSpline_C_CalcCoasterCameraPos");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, Location) == 0x000000, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::Location' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, Rotate) == 0x00000C, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::Rotate' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, FOV) == 0x000018, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::FOV' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, L_CameraLocalTrans) == 0x000020, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::L_CameraLocalTrans' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, L_WorldTrans) == 0x000050, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::L_WorldTrans' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, L_PlayerTrans) == 0x000080, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::L_PlayerTrans' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, Temp_object_Variable) == 0x0000B0, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, Temp_bool_Variable) == 0x0000C0, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000C8, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakTransform_Location) == 0x0000D0, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakTransform_Rotation) == 0x0000DC, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakTransform_Scale) == 0x0000E8, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, K2Node_DynamicCast_AsCustom_Pawn) == 0x0000F8, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::K2Node_DynamicCast_AsCustom_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakTransform_Location_1) == 0x000104, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakTransform_Rotation_1) == 0x000110, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakTransform_Scale_1) == 0x00011C, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000128, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_Add_VectorVector_ReturnValue) == 0x00012C, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000138, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_SphereTraceSingle_OutHit) == 0x000144, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_SphereTraceSingle_ReturnValue) == 0x0001CC, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakHitResult_bBlockingHit) == 0x0001CD, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001CE, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakHitResult_Time) == 0x0001D0, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakHitResult_Distance) == 0x0001D4, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakHitResult_Location) == 0x0001D8, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakHitResult_ImpactPoint) == 0x0001E4, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakHitResult_Normal) == 0x0001F0, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakHitResult_ImpactNormal) == 0x0001FC, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakHitResult_PhysMat) == 0x000208, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakHitResult_HitActor) == 0x000210, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakHitResult_HitComponent) == 0x000218, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakHitResult_HitBoneName) == 0x000220, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakHitResult_HitItem) == 0x000228, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakHitResult_ElementIndex) == 0x00022C, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakHitResult_FaceIndex) == 0x000230, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakHitResult_TraceStart) == 0x000234, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakHitResult_TraceEnd) == 0x000240, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_MakeTransform_ReturnValue) == 0x000250, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_ComposeTransforms_ReturnValue) == 0x000280, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x0002B0, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_GetTransform_ReturnValue) == 0x0002C0, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakTransform_Location_2) == 0x0002F0, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakTransform_Rotation_2) == 0x0002FC, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_BreakTransform_Scale_2) == 0x000308, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000320, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_ConvertTransformToRelative_ReturnValue) == 0x000350, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_ConvertTransformToRelative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, K2Node_Select_Default) == 0x000380, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcCoasterCameraPos, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000390, "Member 'BP_CoasterSpline_C_CalcCoasterCameraPos::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.DebugOpen
// 0x0001 (0x0001 - 0x0000)
struct BP_CoasterSpline_C_DebugOpen final
{
public:
	bool                                          Open;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterSpline_C_DebugOpen) == 0x000001, "Wrong alignment on BP_CoasterSpline_C_DebugOpen");
static_assert(sizeof(BP_CoasterSpline_C_DebugOpen) == 0x000001, "Wrong size on BP_CoasterSpline_C_DebugOpen");
static_assert(offsetof(BP_CoasterSpline_C_DebugOpen, Open) == 0x000000, "Member 'BP_CoasterSpline_C_DebugOpen::Open' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.GetNaviComponent
// 0x0068 (0x0068 - 0x0000)
struct BP_CoasterSpline_C_GetNaviComponent final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8868[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        Comp;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetMapCommon_rerutn;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MapCommon_C>      K2Node_DynamicCast_AsBPI_Map_Common;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8869[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_BPI_GetNaviDevilPawn_Pawn;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_886A[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorComponent*>                CallFunc_GetComponentsByInterface_ReturnValue;     // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterSpline_C_GetNaviComponent) == 0x000008, "Wrong alignment on BP_CoasterSpline_C_GetNaviComponent");
static_assert(sizeof(BP_CoasterSpline_C_GetNaviComponent) == 0x000068, "Wrong size on BP_CoasterSpline_C_GetNaviComponent");
static_assert(offsetof(BP_CoasterSpline_C_GetNaviComponent, Valid) == 0x000000, "Member 'BP_CoasterSpline_C_GetNaviComponent::Valid' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetNaviComponent, Comp) == 0x000008, "Member 'BP_CoasterSpline_C_GetNaviComponent::Comp' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetNaviComponent, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_CoasterSpline_C_GetNaviComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetNaviComponent, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_CoasterSpline_C_GetNaviComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetNaviComponent, CallFunc_GetMapCommon_rerutn) == 0x000018, "Member 'BP_CoasterSpline_C_GetNaviComponent::CallFunc_GetMapCommon_rerutn' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetNaviComponent, K2Node_DynamicCast_AsBPI_Map_Common) == 0x000020, "Member 'BP_CoasterSpline_C_GetNaviComponent::K2Node_DynamicCast_AsBPI_Map_Common' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetNaviComponent, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_CoasterSpline_C_GetNaviComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetNaviComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_CoasterSpline_C_GetNaviComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetNaviComponent, CallFunc_BPI_GetNaviDevilPawn_Pawn) == 0x000038, "Member 'BP_CoasterSpline_C_GetNaviComponent::CallFunc_BPI_GetNaviDevilPawn_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetNaviComponent, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_CoasterSpline_C_GetNaviComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetNaviComponent, CallFunc_GetComponentsByInterface_ReturnValue) == 0x000048, "Member 'BP_CoasterSpline_C_GetNaviComponent::CallFunc_GetComponentsByInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetNaviComponent, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_CoasterSpline_C_GetNaviComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetNaviComponent, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_CoasterSpline_C_GetNaviComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_GetNaviComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_CoasterSpline_C_GetNaviComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.TraseGround
// 0x0188 (0x0188 - 0x0000)
struct BP_CoasterSpline_C_TraseGround final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutPos;                                            // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_886B[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_886C[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACustomPawn*                            K2Node_DynamicCast_AsCustom_Pawn;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_886D[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x007C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_886E[0x1];                                     // 0x0107(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterSpline_C_TraseGround) == 0x000008, "Wrong alignment on BP_CoasterSpline_C_TraseGround");
static_assert(sizeof(BP_CoasterSpline_C_TraseGround) == 0x000188, "Wrong size on BP_CoasterSpline_C_TraseGround");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, Pos) == 0x000000, "Member 'BP_CoasterSpline_C_TraseGround::Pos' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, OutPos) == 0x00000C, "Member 'BP_CoasterSpline_C_TraseGround::OutPos' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_Add_VectorVector_ReturnValue) == 0x000024, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_MakeVector_ReturnValue_1) == 0x000030, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_GetPlayerPawn_ReturnValue) == 0x000040, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000048, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, K2Node_DynamicCast_AsCustom_Pawn) == 0x000058, "Member 'BP_CoasterSpline_C_TraseGround::K2Node_DynamicCast_AsCustom_Pawn' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_CoasterSpline_C_TraseGround::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_CoasterSpline_C_TraseGround::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000078, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_SphereTraceSingle_OutHit) == 0x00007C, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_SphereTraceSingle_ReturnValue) == 0x000104, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_BreakHitResult_bBlockingHit) == 0x000105, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_BreakHitResult_bInitialOverlap) == 0x000106, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_BreakHitResult_Time) == 0x000108, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_BreakHitResult_Distance) == 0x00010C, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_BreakHitResult_Location) == 0x000110, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_BreakHitResult_ImpactPoint) == 0x00011C, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_BreakHitResult_Normal) == 0x000128, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_BreakHitResult_ImpactNormal) == 0x000134, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_BreakHitResult_PhysMat) == 0x000140, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_BreakHitResult_HitActor) == 0x000148, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_BreakHitResult_HitComponent) == 0x000150, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_BreakHitResult_HitBoneName) == 0x000158, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_BreakHitResult_HitItem) == 0x000160, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_BreakHitResult_ElementIndex) == 0x000164, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_BreakHitResult_FaceIndex) == 0x000168, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_BreakHitResult_TraceStart) == 0x00016C, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_TraseGround, CallFunc_BreakHitResult_TraceEnd) == 0x000178, "Member 'BP_CoasterSpline_C_TraseGround::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.BPI_GetGlobalSaveID
// 0x0008 (0x0008 - 0x0000)
struct BP_CoasterSpline_C_BPI_GetGlobalSaveID final
{
public:
	int32                                         SaveId;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGlobalSaveID_SaveID;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterSpline_C_BPI_GetGlobalSaveID) == 0x000004, "Wrong alignment on BP_CoasterSpline_C_BPI_GetGlobalSaveID");
static_assert(sizeof(BP_CoasterSpline_C_BPI_GetGlobalSaveID) == 0x000008, "Wrong size on BP_CoasterSpline_C_BPI_GetGlobalSaveID");
static_assert(offsetof(BP_CoasterSpline_C_BPI_GetGlobalSaveID, SaveId) == 0x000000, "Member 'BP_CoasterSpline_C_BPI_GetGlobalSaveID::SaveId' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_BPI_GetGlobalSaveID, CallFunc_GetGlobalSaveID_SaveID) == 0x000004, "Member 'BP_CoasterSpline_C_BPI_GetGlobalSaveID::CallFunc_GetGlobalSaveID_SaveID' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.BPI_GetIsOpen
// 0x0002 (0x0002 - 0x0000)
struct BP_CoasterSpline_C_BPI_GetIsOpen final
{
public:
	bool                                          StartGimmickOpen;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EndGimmickOpen;                                    // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterSpline_C_BPI_GetIsOpen) == 0x000001, "Wrong alignment on BP_CoasterSpline_C_BPI_GetIsOpen");
static_assert(sizeof(BP_CoasterSpline_C_BPI_GetIsOpen) == 0x000002, "Wrong size on BP_CoasterSpline_C_BPI_GetIsOpen");
static_assert(offsetof(BP_CoasterSpline_C_BPI_GetIsOpen, StartGimmickOpen) == 0x000000, "Member 'BP_CoasterSpline_C_BPI_GetIsOpen::StartGimmickOpen' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_BPI_GetIsOpen, EndGimmickOpen) == 0x000001, "Member 'BP_CoasterSpline_C_BPI_GetIsOpen::EndGimmickOpen' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.ShowSpline
// 0x0002 (0x0002 - 0x0000)
struct BP_CoasterSpline_C_ShowSpline final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Anim;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterSpline_C_ShowSpline) == 0x000001, "Wrong alignment on BP_CoasterSpline_C_ShowSpline");
static_assert(sizeof(BP_CoasterSpline_C_ShowSpline) == 0x000002, "Wrong size on BP_CoasterSpline_C_ShowSpline");
static_assert(offsetof(BP_CoasterSpline_C_ShowSpline, Show) == 0x000000, "Member 'BP_CoasterSpline_C_ShowSpline::Show' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ShowSpline, Anim) == 0x000001, "Member 'BP_CoasterSpline_C_ShowSpline::Anim' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.ActiveSplineAnim
// 0x0002 (0x0002 - 0x0000)
struct BP_CoasterSpline_C_ActiveSplineAnim final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Anim;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterSpline_C_ActiveSplineAnim) == 0x000001, "Wrong alignment on BP_CoasterSpline_C_ActiveSplineAnim");
static_assert(sizeof(BP_CoasterSpline_C_ActiveSplineAnim) == 0x000002, "Wrong size on BP_CoasterSpline_C_ActiveSplineAnim");
static_assert(offsetof(BP_CoasterSpline_C_ActiveSplineAnim, Active) == 0x000000, "Member 'BP_CoasterSpline_C_ActiveSplineAnim::Active' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ActiveSplineAnim, Anim) == 0x000001, "Member 'BP_CoasterSpline_C_ActiveSplineAnim::Anim' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.MoveSpline
// 0x0001 (0x0001 - 0x0000)
struct BP_CoasterSpline_C_MoveSpline final
{
public:
	bool                                          Param_FromStartGimmick;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterSpline_C_MoveSpline) == 0x000001, "Wrong alignment on BP_CoasterSpline_C_MoveSpline");
static_assert(sizeof(BP_CoasterSpline_C_MoveSpline) == 0x000001, "Wrong size on BP_CoasterSpline_C_MoveSpline");
static_assert(offsetof(BP_CoasterSpline_C_MoveSpline, Param_FromStartGimmick) == 0x000000, "Member 'BP_CoasterSpline_C_MoveSpline::Param_FromStartGimmick' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.SetOpen
// 0x0078 (0x0078 - 0x0000)
struct BP_CoasterSpline_C_SetOpen final
{
public:
	bool                                          Open;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Param_StartGimmick;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Param_EndGimmick;                                  // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UpdateIcon;                                        // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UpdateNaviDeactive;                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UpdateChain;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_886F[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGlobalSaveID_SaveID;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCoasterOpenFlag_ReturnValue;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCoasterOpenFlag_ReturnValue_1;       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetGlobalSaveID_SaveID_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8870[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_NaviDevilGimmick_C> K2Node_DynamicCast_AsBPI_Navi_Devil_Gimmick;       // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8871[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_NaviDevilGimmick_C> K2Node_DynamicCast_AsBPI_Navi_Devil_Gimmick_1;     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8872[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapGimmick_C>     K2Node_DynamicCast_AsBPI_Map_Gimmick;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8873[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapGimmick_C>     K2Node_DynamicCast_AsBPI_Map_Gimmick_1;            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8874[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGlobalSaveID_SaveID_2;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterSpline_C_SetOpen) == 0x000008, "Wrong alignment on BP_CoasterSpline_C_SetOpen");
static_assert(sizeof(BP_CoasterSpline_C_SetOpen) == 0x000078, "Wrong size on BP_CoasterSpline_C_SetOpen");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, Open) == 0x000000, "Member 'BP_CoasterSpline_C_SetOpen::Open' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, Param_StartGimmick) == 0x000001, "Member 'BP_CoasterSpline_C_SetOpen::Param_StartGimmick' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, Param_EndGimmick) == 0x000002, "Member 'BP_CoasterSpline_C_SetOpen::Param_EndGimmick' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, UpdateIcon) == 0x000003, "Member 'BP_CoasterSpline_C_SetOpen::UpdateIcon' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, UpdateNaviDeactive) == 0x000004, "Member 'BP_CoasterSpline_C_SetOpen::UpdateNaviDeactive' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, UpdateChain) == 0x000005, "Member 'BP_CoasterSpline_C_SetOpen::UpdateChain' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, CallFunc_GetGlobalSaveID_SaveID) == 0x000008, "Member 'BP_CoasterSpline_C_SetOpen::CallFunc_GetGlobalSaveID_SaveID' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, CallFunc_CheckCoasterOpenFlag_ReturnValue) == 0x00000C, "Member 'BP_CoasterSpline_C_SetOpen::CallFunc_CheckCoasterOpenFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, CallFunc_CheckCoasterOpenFlag_ReturnValue_1) == 0x00000D, "Member 'BP_CoasterSpline_C_SetOpen::CallFunc_CheckCoasterOpenFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, CallFunc_BooleanOR_ReturnValue) == 0x00000E, "Member 'BP_CoasterSpline_C_SetOpen::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, CallFunc_BooleanOR_ReturnValue_1) == 0x00000F, "Member 'BP_CoasterSpline_C_SetOpen::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, CallFunc_GetGlobalSaveID_SaveID_1) == 0x000010, "Member 'BP_CoasterSpline_C_SetOpen::CallFunc_GetGlobalSaveID_SaveID_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, K2Node_DynamicCast_AsBPI_Navi_Devil_Gimmick) == 0x000018, "Member 'BP_CoasterSpline_C_SetOpen::K2Node_DynamicCast_AsBPI_Navi_Devil_Gimmick' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_CoasterSpline_C_SetOpen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, K2Node_DynamicCast_AsBPI_Navi_Devil_Gimmick_1) == 0x000030, "Member 'BP_CoasterSpline_C_SetOpen::K2Node_DynamicCast_AsBPI_Navi_Devil_Gimmick_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_CoasterSpline_C_SetOpen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_CoasterSpline_C_SetOpen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, CallFunc_IsValid_ReturnValue_1) == 0x000042, "Member 'BP_CoasterSpline_C_SetOpen::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, K2Node_DynamicCast_AsBPI_Map_Gimmick) == 0x000048, "Member 'BP_CoasterSpline_C_SetOpen::K2Node_DynamicCast_AsBPI_Map_Gimmick' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_CoasterSpline_C_SetOpen::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, K2Node_DynamicCast_AsBPI_Map_Gimmick_1) == 0x000060, "Member 'BP_CoasterSpline_C_SetOpen::K2Node_DynamicCast_AsBPI_Map_Gimmick_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'BP_CoasterSpline_C_SetOpen::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_SetOpen, CallFunc_GetGlobalSaveID_SaveID_2) == 0x000074, "Member 'BP_CoasterSpline_C_SetOpen::CallFunc_GetGlobalSaveID_SaveID_2' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.GetStartGimmick
// 0x0008 (0x0008 - 0x0000)
struct BP_CoasterSpline_C_GetStartGimmick final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterSpline_C_GetStartGimmick) == 0x000008, "Wrong alignment on BP_CoasterSpline_C_GetStartGimmick");
static_assert(sizeof(BP_CoasterSpline_C_GetStartGimmick) == 0x000008, "Wrong size on BP_CoasterSpline_C_GetStartGimmick");
static_assert(offsetof(BP_CoasterSpline_C_GetStartGimmick, Actor) == 0x000000, "Member 'BP_CoasterSpline_C_GetStartGimmick::Actor' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.GetEndGimmick
// 0x0008 (0x0008 - 0x0000)
struct BP_CoasterSpline_C_GetEndGimmick final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterSpline_C_GetEndGimmick) == 0x000008, "Wrong alignment on BP_CoasterSpline_C_GetEndGimmick");
static_assert(sizeof(BP_CoasterSpline_C_GetEndGimmick) == 0x000008, "Wrong size on BP_CoasterSpline_C_GetEndGimmick");
static_assert(offsetof(BP_CoasterSpline_C_GetEndGimmick, Actor) == 0x000000, "Member 'BP_CoasterSpline_C_GetEndGimmick::Actor' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.CalcOpen
// 0x0018 (0x0018 - 0x0000)
struct BP_CoasterSpline_C_CalcOpen final
{
public:
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8875[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGlobalSaveID_SaveID;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCoasterOpenFlag_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckCoasterOpenFlag_ReturnValue_1;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8876[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8877[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCoasterSaveBufferStart_ReturnValue;    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CoasterSpline_C_CalcOpen) == 0x000004, "Wrong alignment on BP_CoasterSpline_C_CalcOpen");
static_assert(sizeof(BP_CoasterSpline_C_CalcOpen) == 0x000018, "Wrong size on BP_CoasterSpline_C_CalcOpen");
static_assert(offsetof(BP_CoasterSpline_C_CalcOpen, CallFunc_Less_IntInt_ReturnValue) == 0x000000, "Member 'BP_CoasterSpline_C_CalcOpen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcOpen, CallFunc_GetGlobalSaveID_SaveID) == 0x000004, "Member 'BP_CoasterSpline_C_CalcOpen::CallFunc_GetGlobalSaveID_SaveID' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcOpen, CallFunc_CheckCoasterOpenFlag_ReturnValue) == 0x000008, "Member 'BP_CoasterSpline_C_CalcOpen::CallFunc_CheckCoasterOpenFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcOpen, CallFunc_CheckCoasterOpenFlag_ReturnValue_1) == 0x000009, "Member 'BP_CoasterSpline_C_CalcOpen::CallFunc_CheckCoasterOpenFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcOpen, CallFunc_GetMapID_ReturnValue) == 0x00000C, "Member 'BP_CoasterSpline_C_CalcOpen::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcOpen, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'BP_CoasterSpline_C_CalcOpen::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_CalcOpen, CallFunc_GetCoasterSaveBufferStart_ReturnValue) == 0x000014, "Member 'BP_CoasterSpline_C_CalcOpen::CallFunc_GetCoasterSaveBufferStart_ReturnValue' has a wrong offset!");

// Function BP_CoasterSpline.BP_CoasterSpline_C.ChainOpen
// 0x0060 (0x0060 - 0x0000)
struct BP_CoasterSpline_C_ChainOpen final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8878[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CoasterSpline_C*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8879[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEndGimmick_Actor;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetStartGimmick_Actor;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CoasterGimmick_C> K2Node_DynamicCast_AsBPI_Coaster_Gimmick;          // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_887A[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CoasterGimmick_C> K2Node_DynamicCast_AsBPI_Coaster_Gimmick_1;        // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckActive_WhenFlag_Active;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BPI_CheckActive_WhenFlag_Active_1;        // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterSpline_C_ChainOpen) == 0x000008, "Wrong alignment on BP_CoasterSpline_C_ChainOpen");
static_assert(sizeof(BP_CoasterSpline_C_ChainOpen) == 0x000060, "Wrong size on BP_CoasterSpline_C_ChainOpen");
static_assert(offsetof(BP_CoasterSpline_C_ChainOpen, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_CoasterSpline_C_ChainOpen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ChainOpen, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_CoasterSpline_C_ChainOpen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ChainOpen, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_CoasterSpline_C_ChainOpen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ChainOpen, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_CoasterSpline_C_ChainOpen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ChainOpen, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_CoasterSpline_C_ChainOpen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ChainOpen, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_CoasterSpline_C_ChainOpen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ChainOpen, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_CoasterSpline_C_ChainOpen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ChainOpen, CallFunc_GetEndGimmick_Actor) == 0x000020, "Member 'BP_CoasterSpline_C_ChainOpen::CallFunc_GetEndGimmick_Actor' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ChainOpen, CallFunc_GetStartGimmick_Actor) == 0x000028, "Member 'BP_CoasterSpline_C_ChainOpen::CallFunc_GetStartGimmick_Actor' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ChainOpen, K2Node_DynamicCast_AsBPI_Coaster_Gimmick) == 0x000030, "Member 'BP_CoasterSpline_C_ChainOpen::K2Node_DynamicCast_AsBPI_Coaster_Gimmick' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ChainOpen, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_CoasterSpline_C_ChainOpen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ChainOpen, K2Node_DynamicCast_AsBPI_Coaster_Gimmick_1) == 0x000048, "Member 'BP_CoasterSpline_C_ChainOpen::K2Node_DynamicCast_AsBPI_Coaster_Gimmick_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ChainOpen, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_CoasterSpline_C_ChainOpen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ChainOpen, CallFunc_BPI_CheckActive_WhenFlag_Active) == 0x000059, "Member 'BP_CoasterSpline_C_ChainOpen::CallFunc_BPI_CheckActive_WhenFlag_Active' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ChainOpen, CallFunc_BPI_CheckActive_WhenFlag_Active_1) == 0x00005A, "Member 'BP_CoasterSpline_C_ChainOpen::CallFunc_BPI_CheckActive_WhenFlag_Active_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ChainOpen, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00005B, "Member 'BP_CoasterSpline_C_ChainOpen::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterSpline_C_ChainOpen, CallFunc_Not_PreBool_ReturnValue) == 0x00005C, "Member 'BP_CoasterSpline_C_ChainOpen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

