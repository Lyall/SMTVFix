#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CoasterGimmickBase

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_CoasterGimmickBase.BP_CoasterGimmickBase_C.ExecuteUbergraph_BP_CoasterGimmickBase
// 0x0008 (0x0008 - 0x0000)
struct BP_CoasterGimmickBase_C_ExecuteUbergraph_BP_CoasterGimmickBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Open;                           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Animation;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmickBase_C_ExecuteUbergraph_BP_CoasterGimmickBase) == 0x000004, "Wrong alignment on BP_CoasterGimmickBase_C_ExecuteUbergraph_BP_CoasterGimmickBase");
static_assert(sizeof(BP_CoasterGimmickBase_C_ExecuteUbergraph_BP_CoasterGimmickBase) == 0x000008, "Wrong size on BP_CoasterGimmickBase_C_ExecuteUbergraph_BP_CoasterGimmickBase");
static_assert(offsetof(BP_CoasterGimmickBase_C_ExecuteUbergraph_BP_CoasterGimmickBase, EntryPoint) == 0x000000, "Member 'BP_CoasterGimmickBase_C_ExecuteUbergraph_BP_CoasterGimmickBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_ExecuteUbergraph_BP_CoasterGimmickBase, K2Node_CustomEvent_Open) == 0x000004, "Member 'BP_CoasterGimmickBase_C_ExecuteUbergraph_BP_CoasterGimmickBase::K2Node_CustomEvent_Open' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_ExecuteUbergraph_BP_CoasterGimmickBase, K2Node_CustomEvent_Animation) == 0x000005, "Member 'BP_CoasterGimmickBase_C_ExecuteUbergraph_BP_CoasterGimmickBase::K2Node_CustomEvent_Animation' has a wrong offset!");

// Function BP_CoasterGimmickBase.BP_CoasterGimmickBase_C.SetMeshParam
// 0x0002 (0x0002 - 0x0000)
struct BP_CoasterGimmickBase_C_SetMeshParam final
{
public:
	bool                                          Open;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Animation;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmickBase_C_SetMeshParam) == 0x000001, "Wrong alignment on BP_CoasterGimmickBase_C_SetMeshParam");
static_assert(sizeof(BP_CoasterGimmickBase_C_SetMeshParam) == 0x000002, "Wrong size on BP_CoasterGimmickBase_C_SetMeshParam");
static_assert(offsetof(BP_CoasterGimmickBase_C_SetMeshParam, Open) == 0x000000, "Member 'BP_CoasterGimmickBase_C_SetMeshParam::Open' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_SetMeshParam, Animation) == 0x000001, "Member 'BP_CoasterGimmickBase_C_SetMeshParam::Animation' has a wrong offset!");

// Function BP_CoasterGimmickBase.BP_CoasterGimmickBase_C.MakeDMI
// 0x0048 (0x0048 - 0x0000)
struct BP_CoasterGimmickBase_C_MakeDMI final
{
public:
	TArray<class UMaterialInterface*>             L_Materials;                                       // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2511[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0038(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_CoasterGimmickBase_C_MakeDMI) == 0x000008, "Wrong alignment on BP_CoasterGimmickBase_C_MakeDMI");
static_assert(sizeof(BP_CoasterGimmickBase_C_MakeDMI) == 0x000048, "Wrong size on BP_CoasterGimmickBase_C_MakeDMI");
static_assert(offsetof(BP_CoasterGimmickBase_C_MakeDMI, L_Materials) == 0x000000, "Member 'BP_CoasterGimmickBase_C_MakeDMI::L_Materials' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_MakeDMI, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_CoasterGimmickBase_C_MakeDMI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_MakeDMI, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_CoasterGimmickBase_C_MakeDMI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_MakeDMI, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_CoasterGimmickBase_C_MakeDMI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_MakeDMI, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_CoasterGimmickBase_C_MakeDMI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_MakeDMI, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_CoasterGimmickBase_C_MakeDMI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_MakeDMI, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'BP_CoasterGimmickBase_C_MakeDMI::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_MakeDMI, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_CoasterGimmickBase_C_MakeDMI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_MakeDMI, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000030, "Member 'BP_CoasterGimmickBase_C_MakeDMI::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_MakeDMI, CallFunc_GetMaterials_ReturnValue) == 0x000038, "Member 'BP_CoasterGimmickBase_C_MakeDMI::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");

// Function BP_CoasterGimmickBase.BP_CoasterGimmickBase_C.GetOtherGimmick
// 0x0048 (0x0048 - 0x0000)
struct BP_CoasterGimmickBase_C_GetOtherGimmick final
{
public:
	class ABP_CoasterGimmickBase_C*               Gimmick;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetEndGimmick_Actor;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetStartGimmick_Actor;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CoasterGimmickBase_C*               K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2512[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CoasterGimmickBase_C*               K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_1;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2513[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetStartGimmick_Actor_1;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmickBase_C_GetOtherGimmick) == 0x000008, "Wrong alignment on BP_CoasterGimmickBase_C_GetOtherGimmick");
static_assert(sizeof(BP_CoasterGimmickBase_C_GetOtherGimmick) == 0x000048, "Wrong size on BP_CoasterGimmickBase_C_GetOtherGimmick");
static_assert(offsetof(BP_CoasterGimmickBase_C_GetOtherGimmick, Gimmick) == 0x000000, "Member 'BP_CoasterGimmickBase_C_GetOtherGimmick::Gimmick' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_GetOtherGimmick, CallFunc_GetEndGimmick_Actor) == 0x000008, "Member 'BP_CoasterGimmickBase_C_GetOtherGimmick::CallFunc_GetEndGimmick_Actor' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_GetOtherGimmick, CallFunc_GetStartGimmick_Actor) == 0x000010, "Member 'BP_CoasterGimmickBase_C_GetOtherGimmick::CallFunc_GetStartGimmick_Actor' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_GetOtherGimmick, K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base) == 0x000018, "Member 'BP_CoasterGimmickBase_C_GetOtherGimmick::K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_GetOtherGimmick, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_CoasterGimmickBase_C_GetOtherGimmick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_GetOtherGimmick, K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_1) == 0x000028, "Member 'BP_CoasterGimmickBase_C_GetOtherGimmick::K2Node_DynamicCast_AsBP_Coaster_Gimmick_Base_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_GetOtherGimmick, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_CoasterGimmickBase_C_GetOtherGimmick::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_GetOtherGimmick, CallFunc_GetStartGimmick_Actor_1) == 0x000038, "Member 'BP_CoasterGimmickBase_C_GetOtherGimmick::CallFunc_GetStartGimmick_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_GetOtherGimmick, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000040, "Member 'BP_CoasterGimmickBase_C_GetOtherGimmick::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_CoasterGimmickBase.BP_CoasterGimmickBase_C.CheckActive
// 0x0001 (0x0001 - 0x0000)
struct BP_CoasterGimmickBase_C_CheckActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmickBase_C_CheckActive) == 0x000001, "Wrong alignment on BP_CoasterGimmickBase_C_CheckActive");
static_assert(sizeof(BP_CoasterGimmickBase_C_CheckActive) == 0x000001, "Wrong size on BP_CoasterGimmickBase_C_CheckActive");
static_assert(offsetof(BP_CoasterGimmickBase_C_CheckActive, Active) == 0x000000, "Member 'BP_CoasterGimmickBase_C_CheckActive::Active' has a wrong offset!");

// Function BP_CoasterGimmickBase.BP_CoasterGimmickBase_C.CheckView
// 0x0002 (0x0002 - 0x0000)
struct BP_CoasterGimmickBase_C_CheckView final
{
public:
	bool                                          View;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmickBase_C_CheckView) == 0x000001, "Wrong alignment on BP_CoasterGimmickBase_C_CheckView");
static_assert(sizeof(BP_CoasterGimmickBase_C_CheckView) == 0x000002, "Wrong size on BP_CoasterGimmickBase_C_CheckView");
static_assert(offsetof(BP_CoasterGimmickBase_C_CheckView, View) == 0x000000, "Member 'BP_CoasterGimmickBase_C_CheckView::View' has a wrong offset!");
static_assert(offsetof(BP_CoasterGimmickBase_C_CheckView, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'BP_CoasterGimmickBase_C_CheckView::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function BP_CoasterGimmickBase.BP_CoasterGimmickBase_C.ProcRelay
// 0x0001 (0x0001 - 0x0000)
struct BP_CoasterGimmickBase_C_ProcRelay final
{
public:
	bool                                          RideOn;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CoasterGimmickBase_C_ProcRelay) == 0x000001, "Wrong alignment on BP_CoasterGimmickBase_C_ProcRelay");
static_assert(sizeof(BP_CoasterGimmickBase_C_ProcRelay) == 0x000001, "Wrong size on BP_CoasterGimmickBase_C_ProcRelay");
static_assert(offsetof(BP_CoasterGimmickBase_C_ProcRelay, RideOn) == 0x000000, "Member 'BP_CoasterGimmickBase_C_ProcRelay::RideOn' has a wrong offset!");

}

