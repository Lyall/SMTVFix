#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_DifficulitySelectCtrl

#include "Basic.hpp"

#include "BPI_DifficulitySelectCtrl_classes.hpp"
#include "BPI_DifficulitySelectCtrl_parameters.hpp"


namespace SDK
{

// Function BPI_DifficulitySelectCtrl.BPI_DifficulitySelectCtrl_C.startDifficultySelect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_DifficulitySelectPlace                InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_DifficulitySelectCtrl_C::StartDifficultySelect(E_DifficulitySelectPlace InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DifficulitySelectCtrl_C", "startDifficultySelect");

	Params::BPI_DifficulitySelectCtrl_C_StartDifficultySelect Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_DifficulitySelectCtrl.BPI_DifficulitySelectCtrl_C.getDifficulitySelectEndType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_DifficulitySelectEndType              OutType                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_DifficulitySelectCtrl_C::GetDifficulitySelectEndType(E_DifficulitySelectEndType* OutType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DifficulitySelectCtrl_C", "getDifficulitySelectEndType");

	Params::BPI_DifficulitySelectCtrl_C_GetDifficulitySelectEndType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutType != nullptr)
		*OutType = Parms.OutType;
}


// Function BPI_DifficulitySelectCtrl.BPI_DifficulitySelectCtrl_C.getSelectDifficulity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_GAME_DIFFICULTY                       OutType                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_DifficulitySelectCtrl_C::GetSelectDifficulity(E_GAME_DIFFICULTY* OutType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_DifficulitySelectCtrl_C", "getSelectDifficulity");

	Params::BPI_DifficulitySelectCtrl_C_GetSelectDifficulity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutType != nullptr)
		*OutType = Parms.OutType;
}

}

