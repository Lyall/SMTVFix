#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ClockingParticleSystem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ClockingParticleSystem.ClockingParticleSystem_C
// 0x0018 (0x00C8 - 0x00B0)
class UClockingParticleSystem_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         SpendSec;                                          // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               SpawnedEmitter;                                    // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ClockingParticleSystem(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void GetSpendSec(float* Param_SpendSec);
	void SpawnEmitterAttached(class UParticleSystem* EmitterTemplate, class USceneComponent* AttachToComponent, class FName AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale, EAttachLocation LocationType, bool IsCastShadow, bool bAutoDestroy);
	void GetSpawnedEmitter(class UParticleSystemComponent** Param_SpawnedEmitter, bool* IsValid);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ClockingParticleSystem_C">();
	}
	static class UClockingParticleSystem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UClockingParticleSystem_C>();
	}
};
static_assert(alignof(UClockingParticleSystem_C) == 0x000008, "Wrong alignment on UClockingParticleSystem_C");
static_assert(sizeof(UClockingParticleSystem_C) == 0x0000C8, "Wrong size on UClockingParticleSystem_C");
static_assert(offsetof(UClockingParticleSystem_C, UberGraphFrame) == 0x0000B0, "Member 'UClockingParticleSystem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UClockingParticleSystem_C, SpendSec) == 0x0000B8, "Member 'UClockingParticleSystem_C::SpendSec' has a wrong offset!");
static_assert(offsetof(UClockingParticleSystem_C, SpawnedEmitter) == 0x0000C0, "Member 'UClockingParticleSystem_C::SpawnedEmitter' has a wrong offset!");

}

