#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapTakaraLarge

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Project_structs.hpp"


namespace SDK::Params
{

// Function BP_MapTakaraLarge.BP_MapTakaraLarge_C.ResetMesh
// 0x0001 (0x0001 - 0x0000)
struct BP_MapTakaraLarge_C_ResetMesh final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapTakaraLarge_C_ResetMesh) == 0x000001, "Wrong alignment on BP_MapTakaraLarge_C_ResetMesh");
static_assert(sizeof(BP_MapTakaraLarge_C_ResetMesh) == 0x000001, "Wrong size on BP_MapTakaraLarge_C_ResetMesh");
static_assert(offsetof(BP_MapTakaraLarge_C_ResetMesh, NewParam) == 0x000000, "Member 'BP_MapTakaraLarge_C_ResetMesh::NewParam' has a wrong offset!");

// Function BP_MapTakaraLarge.BP_MapTakaraLarge_C.PlayBreakSE
// 0x0010 (0x0010 - 0x0000)
struct BP_MapTakaraLarge_C_PlayBreakSE final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C07[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapTakaraLarge_C_PlayBreakSE) == 0x000004, "Wrong alignment on BP_MapTakaraLarge_C_PlayBreakSE");
static_assert(sizeof(BP_MapTakaraLarge_C_PlayBreakSE) == 0x000010, "Wrong size on BP_MapTakaraLarge_C_PlayBreakSE");
static_assert(offsetof(BP_MapTakaraLarge_C_PlayBreakSE, NewParam) == 0x000000, "Member 'BP_MapTakaraLarge_C_PlayBreakSE::NewParam' has a wrong offset!");
static_assert(offsetof(BP_MapTakaraLarge_C_PlayBreakSE, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_MapTakaraLarge_C_PlayBreakSE::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_MapTakaraLarge.BP_MapTakaraLarge_C.BPI_GetTakaraId
// 0x0004 (0x0004 - 0x0000)
struct BP_MapTakaraLarge_C_BPI_GetTakaraId final
{
public:
	int32                                         Param_TakaraID;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapTakaraLarge_C_BPI_GetTakaraId) == 0x000004, "Wrong alignment on BP_MapTakaraLarge_C_BPI_GetTakaraId");
static_assert(sizeof(BP_MapTakaraLarge_C_BPI_GetTakaraId) == 0x000004, "Wrong size on BP_MapTakaraLarge_C_BPI_GetTakaraId");
static_assert(offsetof(BP_MapTakaraLarge_C_BPI_GetTakaraId, Param_TakaraID) == 0x000000, "Member 'BP_MapTakaraLarge_C_BPI_GetTakaraId::Param_TakaraID' has a wrong offset!");

// Function BP_MapTakaraLarge.BP_MapTakaraLarge_C.FlagCh
// 0x0040 (0x0040 - 0x0000)
struct BP_MapTakaraLarge_C_FlagCh final
{
public:
	bool                                          OK;                                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C08[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_Ed;                                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_St;                                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMapID_ReturnValue;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTakaraData_SaveID;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTakaraData                            CallFunc_GetTakaraData_ReturnValue;                // 0x0014(0x0024)(ConstParm, NoDestructor)
	bool                                          CallFunc_CheckEventFlagValue_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FlagCh_OK;                                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEventFlagValue_ReturnValue_1;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapTakaraLarge_C_FlagCh) == 0x000004, "Wrong alignment on BP_MapTakaraLarge_C_FlagCh");
static_assert(sizeof(BP_MapTakaraLarge_C_FlagCh) == 0x000040, "Wrong size on BP_MapTakaraLarge_C_FlagCh");
static_assert(offsetof(BP_MapTakaraLarge_C_FlagCh, OK) == 0x000000, "Member 'BP_MapTakaraLarge_C_FlagCh::OK' has a wrong offset!");
static_assert(offsetof(BP_MapTakaraLarge_C_FlagCh, L_Ed) == 0x000004, "Member 'BP_MapTakaraLarge_C_FlagCh::L_Ed' has a wrong offset!");
static_assert(offsetof(BP_MapTakaraLarge_C_FlagCh, L_St) == 0x000008, "Member 'BP_MapTakaraLarge_C_FlagCh::L_St' has a wrong offset!");
static_assert(offsetof(BP_MapTakaraLarge_C_FlagCh, CallFunc_GetMapID_ReturnValue) == 0x00000C, "Member 'BP_MapTakaraLarge_C_FlagCh::CallFunc_GetMapID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapTakaraLarge_C_FlagCh, CallFunc_GetTakaraData_SaveID) == 0x000010, "Member 'BP_MapTakaraLarge_C_FlagCh::CallFunc_GetTakaraData_SaveID' has a wrong offset!");
static_assert(offsetof(BP_MapTakaraLarge_C_FlagCh, CallFunc_GetTakaraData_ReturnValue) == 0x000014, "Member 'BP_MapTakaraLarge_C_FlagCh::CallFunc_GetTakaraData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapTakaraLarge_C_FlagCh, CallFunc_CheckEventFlagValue_ReturnValue) == 0x000038, "Member 'BP_MapTakaraLarge_C_FlagCh::CallFunc_CheckEventFlagValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapTakaraLarge_C_FlagCh, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000039, "Member 'BP_MapTakaraLarge_C_FlagCh::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapTakaraLarge_C_FlagCh, CallFunc_FlagCh_OK) == 0x00003A, "Member 'BP_MapTakaraLarge_C_FlagCh::CallFunc_FlagCh_OK' has a wrong offset!");
static_assert(offsetof(BP_MapTakaraLarge_C_FlagCh, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00003B, "Member 'BP_MapTakaraLarge_C_FlagCh::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapTakaraLarge_C_FlagCh, CallFunc_CheckEventFlagValue_ReturnValue_1) == 0x00003C, "Member 'BP_MapTakaraLarge_C_FlagCh::CallFunc_CheckEventFlagValue_ReturnValue_1' has a wrong offset!");

}

