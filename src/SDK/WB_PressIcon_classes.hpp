#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PressIcon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Project_structs.hpp"
#include "Project_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_PressIcon.WB_PressIcon_C
// 0x00B0 (0x0348 - 0x0298)
class UWB_PressIcon_C final : public UUIBtlPressIconBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           PressIconCanvasPanel;                              // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_IconNumber;                               // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_Pos;                                      // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USsPlayerWidget*                        SsPlayer_PressIconPlate;                           // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_NNumberIcon05_C*                    WB_NNumberIcon05;                                  // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FPressIcon                             AddPressIcon;                                      // 0x02C8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	int32                                         NumIcon;                                           // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSlideOut;                                        // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsNumberAnimation;                                 // 0x02D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49C6[0x6];                                     // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 HalfIconReserve;                                   // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FPressIcon                             DrawPressIconNum;                                  // 0x02F0(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          IsWaitingHalfIconStarted;                          // 0x02FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsWaitingSideIn;                                   // 0x02FD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          M_IsWorking;                                       // 0x02FE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          M_IsDisappeared;                                   // 0x02FF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         NumExtend;                                         // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49C7[0x4];                                     // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPressIcon>                     AddPressIconArray;                                 // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FPressIcon>                     DrawPressIconNumArray;                             // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          M_IsIgnoreIconPlateAnim;                           // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49C8[0x7];                                     // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_BTL_PRESS_TYPE>                      M_PressTypeArray;                                  // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          M_SlideOutRequested;                               // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WB_PressIcon(int32 EntryPoint);
	void EndOfSlideIn();
	void StartHalfIcon();
	void BndEvt__SsPlayer_IconNumState_K2Node_ComponentBoundEvent_1_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BndEvt__SsPlayer_PressIconPlate_K2Node_ComponentBoundEvent_0_SsWidgetEndPlaySignature2__DelegateSignature(class FName AnimPackName, class FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex);
	void BP_SlideOutStart();
	void BP_SlideInStart();
	void Destruct();
	void BP_AddDrawPressIcon(const struct FPressIcon& Add_press_icon, E_BTL_PRESS_TYPE PressType);
	void BP_OutStart(bool Param_IsIconBreak);
	void BP_InStart();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void InitWidget();
	void Play_IconNumber_Anim(int32 AnimIndex, bool IsLoop);
	void Play_IconPlate_Anim(int32 AnimIndex, bool IsLoop);
	E_BTL_SIDE GetSide();
	void GetHalfIconWidget(class UUIBtlPressIconPartsBase** PressIconParts);
	void ReserveHalfIconStart(class UUIBtlPressIconPartsBase* Icon);
	void ReserveEndOfSlideIn(class UUIBtlPressIconPartsBase* Icon);
	void CallStartHalfIcon();
	void ClearEventBinding();
	void IsHalfIconAddEffectPerforming(bool* IsPerforming);
	void IsWorking(bool* Param_IsWorking);
	void IsDisappeared(bool* Param_IsDisappeared);
	void Update_Icons();
	void AreIconsPlaying(bool* Playing);
	void ClearPressArray();
	void IsIconBreak(const struct FPressIcon& PressIcon, E_BTL_PRESS_TYPE PressType, bool* Break);
	void AreAllIconsShown(bool* Shown);
	void AreAllIconsHide(bool* Hide);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_PressIcon_C">();
	}
	static class UWB_PressIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_PressIcon_C>();
	}
};
static_assert(alignof(UWB_PressIcon_C) == 0x000008, "Wrong alignment on UWB_PressIcon_C");
static_assert(sizeof(UWB_PressIcon_C) == 0x000348, "Wrong size on UWB_PressIcon_C");
static_assert(offsetof(UWB_PressIcon_C, UberGraphFrame) == 0x000298, "Member 'UWB_PressIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, PressIconCanvasPanel) == 0x0002A0, "Member 'UWB_PressIcon_C::PressIconCanvasPanel' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, SsPlayer_IconNumber) == 0x0002A8, "Member 'UWB_PressIcon_C::SsPlayer_IconNumber' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, SsPlayer_Pos) == 0x0002B0, "Member 'UWB_PressIcon_C::SsPlayer_Pos' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, SsPlayer_PressIconPlate) == 0x0002B8, "Member 'UWB_PressIcon_C::SsPlayer_PressIconPlate' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, WB_NNumberIcon05) == 0x0002C0, "Member 'UWB_PressIcon_C::WB_NNumberIcon05' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, AddPressIcon) == 0x0002C8, "Member 'UWB_PressIcon_C::AddPressIcon' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, NumIcon) == 0x0002D4, "Member 'UWB_PressIcon_C::NumIcon' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, IsSlideOut) == 0x0002D8, "Member 'UWB_PressIcon_C::IsSlideOut' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, IsNumberAnimation) == 0x0002D9, "Member 'UWB_PressIcon_C::IsNumberAnimation' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, HalfIconReserve) == 0x0002E0, "Member 'UWB_PressIcon_C::HalfIconReserve' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, DrawPressIconNum) == 0x0002F0, "Member 'UWB_PressIcon_C::DrawPressIconNum' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, IsWaitingHalfIconStarted) == 0x0002FC, "Member 'UWB_PressIcon_C::IsWaitingHalfIconStarted' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, IsWaitingSideIn) == 0x0002FD, "Member 'UWB_PressIcon_C::IsWaitingSideIn' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, M_IsWorking) == 0x0002FE, "Member 'UWB_PressIcon_C::M_IsWorking' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, M_IsDisappeared) == 0x0002FF, "Member 'UWB_PressIcon_C::M_IsDisappeared' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, NumExtend) == 0x000300, "Member 'UWB_PressIcon_C::NumExtend' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, AddPressIconArray) == 0x000308, "Member 'UWB_PressIcon_C::AddPressIconArray' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, DrawPressIconNumArray) == 0x000318, "Member 'UWB_PressIcon_C::DrawPressIconNumArray' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, M_IsIgnoreIconPlateAnim) == 0x000328, "Member 'UWB_PressIcon_C::M_IsIgnoreIconPlateAnim' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, M_PressTypeArray) == 0x000330, "Member 'UWB_PressIcon_C::M_PressTypeArray' has a wrong offset!");
static_assert(offsetof(UWB_PressIcon_C, M_SlideOutRequested) == 0x000340, "Member 'UWB_PressIcon_C::M_SlideOutRequested' has a wrong offset!");

}

