#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TokyoMapPlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Project_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass TokyoMapPlayer.TokyoMapPlayer_C
// 0x0060 (0x0520 - 0x04C0)
class ATokyoMapPlayer_C final : public ACharacter
{
public:
	uint8                                         Pad_2083[0x8];                                     // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       Camera;                                            // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         AreaOutTimeLine___Track_0_19A7AA5B47B6F8F476678FADC50F9C6F; // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            AreaOutTimeLine__Direction_19A7AA5B47B6F8F476678FADC50F9C6F; // 0x04DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2084[0x3];                                     // 0x04DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     AreaOutTimeLine;                                   // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AreaINTimeLine___Track_0_00FADA4E4E9ED021661DDB88CBF2B659; // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            AreaINTimeLine__Direction_00FADA4E4E9ED021661DDB88CBF2B659; // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2085[0x3];                                     // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     AreaINTimeLine;                                    // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMoving;                                          // 0x04F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2086[0x3];                                     // 0x04F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxWalkSpeed;                                      // 0x04FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewVar_0;                                          // 0x0500(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVar_1;                                          // 0x050C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2087[0x3];                                     // 0x050D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxAcceleration;                                   // 0x0510(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BrakingDeceleration;                               // 0x0514(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TokyoMapPlayer(int32 EntryPoint);
	void AreaOut();
	void AreaIN();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void AreaOutTimeLine__UpdateFunc();
	void AreaOutTimeLine__FinishedFunc();
	void AreaINTimeLine__UpdateFunc();
	void AreaINTimeLine__FinishedFunc();
	void OnMove(bool Force);
	void OnIdle(bool Force);
	void PlayAnim();
	void ChangeDash();
	void ChangeWalk();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TokyoMapPlayer_C">();
	}
	static class ATokyoMapPlayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATokyoMapPlayer_C>();
	}
};
static_assert(alignof(ATokyoMapPlayer_C) == 0x000010, "Wrong alignment on ATokyoMapPlayer_C");
static_assert(sizeof(ATokyoMapPlayer_C) == 0x000520, "Wrong size on ATokyoMapPlayer_C");
static_assert(offsetof(ATokyoMapPlayer_C, UberGraphFrame) == 0x0004C0, "Member 'ATokyoMapPlayer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATokyoMapPlayer_C, Camera) == 0x0004C8, "Member 'ATokyoMapPlayer_C::Camera' has a wrong offset!");
static_assert(offsetof(ATokyoMapPlayer_C, SpringArm) == 0x0004D0, "Member 'ATokyoMapPlayer_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ATokyoMapPlayer_C, AreaOutTimeLine___Track_0_19A7AA5B47B6F8F476678FADC50F9C6F) == 0x0004D8, "Member 'ATokyoMapPlayer_C::AreaOutTimeLine___Track_0_19A7AA5B47B6F8F476678FADC50F9C6F' has a wrong offset!");
static_assert(offsetof(ATokyoMapPlayer_C, AreaOutTimeLine__Direction_19A7AA5B47B6F8F476678FADC50F9C6F) == 0x0004DC, "Member 'ATokyoMapPlayer_C::AreaOutTimeLine__Direction_19A7AA5B47B6F8F476678FADC50F9C6F' has a wrong offset!");
static_assert(offsetof(ATokyoMapPlayer_C, AreaOutTimeLine) == 0x0004E0, "Member 'ATokyoMapPlayer_C::AreaOutTimeLine' has a wrong offset!");
static_assert(offsetof(ATokyoMapPlayer_C, AreaINTimeLine___Track_0_00FADA4E4E9ED021661DDB88CBF2B659) == 0x0004E8, "Member 'ATokyoMapPlayer_C::AreaINTimeLine___Track_0_00FADA4E4E9ED021661DDB88CBF2B659' has a wrong offset!");
static_assert(offsetof(ATokyoMapPlayer_C, AreaINTimeLine__Direction_00FADA4E4E9ED021661DDB88CBF2B659) == 0x0004EC, "Member 'ATokyoMapPlayer_C::AreaINTimeLine__Direction_00FADA4E4E9ED021661DDB88CBF2B659' has a wrong offset!");
static_assert(offsetof(ATokyoMapPlayer_C, AreaINTimeLine) == 0x0004F0, "Member 'ATokyoMapPlayer_C::AreaINTimeLine' has a wrong offset!");
static_assert(offsetof(ATokyoMapPlayer_C, IsMoving) == 0x0004F8, "Member 'ATokyoMapPlayer_C::IsMoving' has a wrong offset!");
static_assert(offsetof(ATokyoMapPlayer_C, MaxWalkSpeed) == 0x0004FC, "Member 'ATokyoMapPlayer_C::MaxWalkSpeed' has a wrong offset!");
static_assert(offsetof(ATokyoMapPlayer_C, NewVar_0) == 0x000500, "Member 'ATokyoMapPlayer_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ATokyoMapPlayer_C, NewVar_1) == 0x00050C, "Member 'ATokyoMapPlayer_C::NewVar_1' has a wrong offset!");
static_assert(offsetof(ATokyoMapPlayer_C, MaxAcceleration) == 0x000510, "Member 'ATokyoMapPlayer_C::MaxAcceleration' has a wrong offset!");
static_assert(offsetof(ATokyoMapPlayer_C, BrakingDeceleration) == 0x000514, "Member 'ATokyoMapPlayer_C::BrakingDeceleration' has a wrong offset!");

}

