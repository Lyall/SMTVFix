#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TalkCamera

#include "Basic.hpp"

#include "ST_TalkCameraOffset_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Project_structs.hpp"
#include "E_TalkCamera_structs.hpp"
#include "Engine_structs.hpp"
#include "E_TALK_DEBUG_CAMERA_structs.hpp"


namespace SDK::Params
{

// Function BP_TalkCamera.BP_TalkCamera_C.EvtDis_CameraChange__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_TalkCamera_C_EvtDis_CameraChange__DelegateSignature final
{
public:
	E_TalkCamera                                  StartType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TalkCamera                                  EndType;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AD8[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Alpha;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_EvtDis_CameraChange__DelegateSignature) == 0x000004, "Wrong alignment on BP_TalkCamera_C_EvtDis_CameraChange__DelegateSignature");
static_assert(sizeof(BP_TalkCamera_C_EvtDis_CameraChange__DelegateSignature) == 0x000008, "Wrong size on BP_TalkCamera_C_EvtDis_CameraChange__DelegateSignature");
static_assert(offsetof(BP_TalkCamera_C_EvtDis_CameraChange__DelegateSignature, StartType) == 0x000000, "Member 'BP_TalkCamera_C_EvtDis_CameraChange__DelegateSignature::StartType' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_EvtDis_CameraChange__DelegateSignature, EndType) == 0x000001, "Member 'BP_TalkCamera_C_EvtDis_CameraChange__DelegateSignature::EndType' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_EvtDis_CameraChange__DelegateSignature, Alpha) == 0x000004, "Member 'BP_TalkCamera_C_EvtDis_CameraChange__DelegateSignature::Alpha' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.ExecuteUbergraph_BP_TalkCamera
// 0x0250 (0x0250 - 0x0000)
struct BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AD9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TalkDebug_GetCamera_IsDebugMode_Out;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TalkCamera                                  CallFunc_TalkDebug_GetCamera_NormalType_Out;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TalkCamera                                  K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TALK_DEBUG_CAMERA                           CallFunc_TalkDebug_GetDebugCameraType_CameraType;  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2ADA[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_TalkDebug_GetCamera_CameraTable_Out;      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2ADB[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ADC[0xC];                                     // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_Start;                          // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             K2Node_CustomEvent_Target;                         // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_Time;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEase;                         // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TALK_CAMERA_MODEL_HIDE                      K2Node_CustomEvent_ModelHide;                      // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2ADD[0x1];                                     // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2ADE[0x1];                                     // 0x009F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2ADF[0x3];                                     // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_1;    // 0x0164(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_1;       // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AE0[0x3];                                     // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTargetHeight_Out;                      // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AE1[0xA];                                     // 0x01F6(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0200(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpenDebugMenu_ReturnValue;              // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AE2[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleCameraSeamless_C*                CallFunc_FinishSpawningActor_ReturnValue;          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera) == 0x000010, "Wrong alignment on BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera");
static_assert(sizeof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera) == 0x000250, "Wrong size on BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, EntryPoint) == 0x000000, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, Temp_bool_Variable) == 0x000004, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_Ease_ReturnValue) == 0x000008, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, K2Node_Event_DeltaSeconds) == 0x00000C, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_TalkDebug_GetCamera_IsDebugMode_Out) == 0x000010, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_TalkDebug_GetCamera_IsDebugMode_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_TalkDebug_GetCamera_NormalType_Out) == 0x000011, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_TalkDebug_GetCamera_NormalType_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, Temp_bool_Variable_1) == 0x000012, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000013, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, K2Node_Select_Default) == 0x000014, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_TalkDebug_GetDebugCameraType_CameraType) == 0x000015, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_TalkDebug_GetDebugCameraType_CameraType' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, K2Node_SwitchEnum_CmpSuccess) == 0x000016, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_TalkDebug_GetCamera_CameraTable_Out) == 0x000018, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_TalkDebug_GetCamera_CameraTable_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_SelectInt_ReturnValue) == 0x000020, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, K2Node_CustomEvent_Start) == 0x000030, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::K2Node_CustomEvent_Start' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, K2Node_CustomEvent_Target) == 0x000060, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, K2Node_CustomEvent_Time) == 0x000090, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, K2Node_CustomEvent_IsEase) == 0x000094, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::K2Node_CustomEvent_IsEase' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, K2Node_CustomEvent_ModelHide) == 0x000095, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::K2Node_CustomEvent_ModelHide' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_Not_PreBool_ReturnValue) == 0x000096, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, K2Node_Select_Default_1) == 0x000098, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00009D, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_BooleanAND_ReturnValue) == 0x00009E, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_TLerp_ReturnValue) == 0x0000A0, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_FMax_ReturnValue) == 0x0000D0, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000D4, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_K2_SetActorTransform_ReturnValue) == 0x00015C, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000160, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_K2_SetActorTransform_SweepHitResult_1) == 0x000164, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_K2_SetActorTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_K2_SetActorTransform_ReturnValue_1) == 0x0001EC, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_K2_SetActorTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_GetTargetHeight_Out) == 0x0001F0, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_GetTargetHeight_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, K2Node_Event_EndPlayReason) == 0x0001F4, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_IsValid_ReturnValue) == 0x0001F5, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_GetTransform_ReturnValue) == 0x000200, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000230, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_IsOpenDebugMenu_ReturnValue) == 0x000238, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_IsOpenDebugMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_FinishSpawningActor_ReturnValue) == 0x000240, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_BooleanAND_ReturnValue_1) == 0x000248, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000249, "Member 'BP_TalkCamera_C_ExecuteUbergraph_BP_TalkCamera::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_TalkCamera_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_TalkCamera_C_ReceiveEndPlay");
static_assert(sizeof(BP_TalkCamera_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_TalkCamera_C_ReceiveEndPlay");
static_assert(offsetof(BP_TalkCamera_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_TalkCamera_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.Evt_MoveCameraCore
// 0x0070 (0x0070 - 0x0000)
struct BP_TalkCamera_C_Evt_MoveCameraCore final
{
public:
	struct FTransform                             Start;                                             // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             Target;                                            // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         Time;                                              // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEase;                                            // 0x0064(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TALK_CAMERA_MODEL_HIDE                      ModelHide;                                         // 0x0065(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_Evt_MoveCameraCore) == 0x000010, "Wrong alignment on BP_TalkCamera_C_Evt_MoveCameraCore");
static_assert(sizeof(BP_TalkCamera_C_Evt_MoveCameraCore) == 0x000070, "Wrong size on BP_TalkCamera_C_Evt_MoveCameraCore");
static_assert(offsetof(BP_TalkCamera_C_Evt_MoveCameraCore, Start) == 0x000000, "Member 'BP_TalkCamera_C_Evt_MoveCameraCore::Start' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_Evt_MoveCameraCore, Target) == 0x000030, "Member 'BP_TalkCamera_C_Evt_MoveCameraCore::Target' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_Evt_MoveCameraCore, Time) == 0x000060, "Member 'BP_TalkCamera_C_Evt_MoveCameraCore::Time' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_Evt_MoveCameraCore, IsEase) == 0x000064, "Member 'BP_TalkCamera_C_Evt_MoveCameraCore::IsEase' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_Evt_MoveCameraCore, ModelHide) == 0x000065, "Member 'BP_TalkCamera_C_Evt_MoveCameraCore::ModelHide' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_TalkCamera_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_TalkCamera_C_ReceiveTick");
static_assert(sizeof(BP_TalkCamera_C_ReceiveTick) == 0x000004, "Wrong size on BP_TalkCamera_C_ReceiveTick");
static_assert(offsetof(BP_TalkCamera_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_TalkCamera_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.UserConstructionScript
// 0x0040 (0x0040 - 0x0000)
struct BP_TalkCamera_C_UserConstructionScript final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_TalkCamera_C_UserConstructionScript");
static_assert(sizeof(BP_TalkCamera_C_UserConstructionScript) == 0x000040, "Wrong size on BP_TalkCamera_C_UserConstructionScript");
static_assert(offsetof(BP_TalkCamera_C_UserConstructionScript, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'BP_TalkCamera_C_UserConstructionScript::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_UserConstructionScript, CallFunc_MakeLiteralInt_ReturnValue) == 0x000030, "Member 'BP_TalkCamera_C_UserConstructionScript::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.SetCameraTransform
// 0x0050 (0x0050 - 0x0000)
struct BP_TalkCamera_C_SetCameraTransform final
{
public:
	E_TalkCamera                                  Param_CameraType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AE3[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_SetCameraTransform) == 0x000010, "Wrong alignment on BP_TalkCamera_C_SetCameraTransform");
static_assert(sizeof(BP_TalkCamera_C_SetCameraTransform) == 0x000050, "Wrong size on BP_TalkCamera_C_SetCameraTransform");
static_assert(offsetof(BP_TalkCamera_C_SetCameraTransform, Param_CameraType) == 0x000000, "Member 'BP_TalkCamera_C_SetCameraTransform::Param_CameraType' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetCameraTransform, Transform) == 0x000010, "Member 'BP_TalkCamera_C_SetCameraTransform::Transform' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetCameraTransform, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000040, "Member 'BP_TalkCamera_C_SetCameraTransform::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.GetCameraTransform
// 0x0080 (0x0080 - 0x0000)
struct BP_TalkCamera_C_GetCameraTransform final
{
public:
	E_TalkCamera                                  Param_CameraType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AE4[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AE5[0xC];                                     // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_GetCameraTransform) == 0x000010, "Wrong alignment on BP_TalkCamera_C_GetCameraTransform");
static_assert(sizeof(BP_TalkCamera_C_GetCameraTransform) == 0x000080, "Wrong size on BP_TalkCamera_C_GetCameraTransform");
static_assert(offsetof(BP_TalkCamera_C_GetCameraTransform, Param_CameraType) == 0x000000, "Member 'BP_TalkCamera_C_GetCameraTransform::Param_CameraType' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraTransform, Transform) == 0x000010, "Member 'BP_TalkCamera_C_GetCameraTransform::Transform' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraTransform, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000040, "Member 'BP_TalkCamera_C_GetCameraTransform::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraTransform, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_TalkCamera_C_GetCameraTransform::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.MoveCamera_ByType
// 0x0070 (0x0070 - 0x0000)
struct BP_TalkCamera_C_MoveCamera_ByType final
{
public:
	E_TalkCamera                                  Param_CameraType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AE6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceMove;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Ease;                                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AE7[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetCameraTransform_Transform;             // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0040(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_MoveCamera_ByType) == 0x000010, "Wrong alignment on BP_TalkCamera_C_MoveCamera_ByType");
static_assert(sizeof(BP_TalkCamera_C_MoveCamera_ByType) == 0x000070, "Wrong size on BP_TalkCamera_C_MoveCamera_ByType");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByType, Param_CameraType) == 0x000000, "Member 'BP_TalkCamera_C_MoveCamera_ByType::Param_CameraType' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByType, Time) == 0x000004, "Member 'BP_TalkCamera_C_MoveCamera_ByType::Time' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByType, ForceMove) == 0x000008, "Member 'BP_TalkCamera_C_MoveCamera_ByType::ForceMove' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByType, Ease) == 0x000009, "Member 'BP_TalkCamera_C_MoveCamera_ByType::Ease' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'BP_TalkCamera_C_MoveCamera_ByType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByType, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000B, "Member 'BP_TalkCamera_C_MoveCamera_ByType::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByType, CallFunc_GetCameraTransform_Transform) == 0x000010, "Member 'BP_TalkCamera_C_MoveCamera_ByType::CallFunc_GetCameraTransform_Transform' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByType, CallFunc_GetTransform_ReturnValue) == 0x000040, "Member 'BP_TalkCamera_C_MoveCamera_ByType::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.GetCameraParam_Yoro
// 0x00F0 (0x00F0 - 0x0000)
struct BP_TalkCamera_C_GetCameraParam_Yoro final
{
public:
	struct FVector                                Eye;                                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Look;                                              // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEyeOffset_Yoro_EyeOffset;              // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLookOffset_Yoro_LookOffset;            // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRocation_Daath_ReturnValue;     // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ModifyEyeFromCameraScale_ModifiedEye;     // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_GetCameraParam_Yoro) == 0x000010, "Wrong alignment on BP_TalkCamera_C_GetCameraParam_Yoro");
static_assert(sizeof(BP_TalkCamera_C_GetCameraParam_Yoro) == 0x0000F0, "Wrong size on BP_TalkCamera_C_GetCameraParam_Yoro");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_Yoro, Eye) == 0x000000, "Member 'BP_TalkCamera_C_GetCameraParam_Yoro::Eye' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_Yoro, Look) == 0x00000C, "Member 'BP_TalkCamera_C_GetCameraParam_Yoro::Look' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_Yoro, CallFunc_GetEyeOffset_Yoro_EyeOffset) == 0x000018, "Member 'BP_TalkCamera_C_GetCameraParam_Yoro::CallFunc_GetEyeOffset_Yoro_EyeOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_Yoro, CallFunc_GetLookOffset_Yoro_LookOffset) == 0x000024, "Member 'BP_TalkCamera_C_GetCameraParam_Yoro::CallFunc_GetLookOffset_Yoro_LookOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_Yoro, CallFunc_BreakTransform_Location) == 0x000030, "Member 'BP_TalkCamera_C_GetCameraParam_Yoro::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_Yoro, CallFunc_BreakTransform_Rotation) == 0x00003C, "Member 'BP_TalkCamera_C_GetCameraParam_Yoro::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_Yoro, CallFunc_BreakTransform_Scale) == 0x000048, "Member 'BP_TalkCamera_C_GetCameraParam_Yoro::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_Yoro, CallFunc_BreakTransform_Location_1) == 0x000054, "Member 'BP_TalkCamera_C_GetCameraParam_Yoro::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_Yoro, CallFunc_BreakTransform_Rotation_1) == 0x000060, "Member 'BP_TalkCamera_C_GetCameraParam_Yoro::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_Yoro, CallFunc_BreakTransform_Scale_1) == 0x00006C, "Member 'BP_TalkCamera_C_GetCameraParam_Yoro::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_Yoro, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'BP_TalkCamera_C_GetCameraParam_Yoro::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_Yoro, CallFunc_FindLookAtRocation_Daath_ReturnValue) == 0x000084, "Member 'BP_TalkCamera_C_GetCameraParam_Yoro::CallFunc_FindLookAtRocation_Daath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_Yoro, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'BP_TalkCamera_C_GetCameraParam_Yoro::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_Yoro, CallFunc_TransformLocation_ReturnValue) == 0x0000C0, "Member 'BP_TalkCamera_C_GetCameraParam_Yoro::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_Yoro, CallFunc_TransformLocation_ReturnValue_1) == 0x0000CC, "Member 'BP_TalkCamera_C_GetCameraParam_Yoro::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_Yoro, CallFunc_ModifyEyeFromCameraScale_ModifiedEye) == 0x0000D8, "Member 'BP_TalkCamera_C_GetCameraParam_Yoro::CallFunc_ModifyEyeFromCameraScale_ModifiedEye' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.GetEyeOffset_Yoro
// 0x003C (0x003C - 0x0000)
struct BP_TalkCamera_C_GetEyeOffset_Yoro final
{
public:
	struct FVector                                EyeOffset;                                         // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param_1;      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param_2;      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_GetEyeOffset_Yoro) == 0x000004, "Wrong alignment on BP_TalkCamera_C_GetEyeOffset_Yoro");
static_assert(sizeof(BP_TalkCamera_C_GetEyeOffset_Yoro) == 0x00003C, "Wrong size on BP_TalkCamera_C_GetEyeOffset_Yoro");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_Yoro, EyeOffset) == 0x000000, "Member 'BP_TalkCamera_C_GetEyeOffset_Yoro::EyeOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_Yoro, CallFunc_TalkDebug_GetCameraUpOffset_Param) == 0x00000C, "Member 'BP_TalkCamera_C_GetEyeOffset_Yoro::CallFunc_TalkDebug_GetCameraUpOffset_Param' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_Yoro, CallFunc_TalkDebug_GetCameraUpOffset_Param_1) == 0x000010, "Member 'BP_TalkCamera_C_GetEyeOffset_Yoro::CallFunc_TalkDebug_GetCameraUpOffset_Param_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_Yoro, CallFunc_TalkDebug_GetCameraUpOffset_Param_2) == 0x000014, "Member 'BP_TalkCamera_C_GetEyeOffset_Yoro::CallFunc_TalkDebug_GetCameraUpOffset_Param_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_Yoro, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_TalkCamera_C_GetEyeOffset_Yoro::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_Yoro, CallFunc_Add_VectorVector_ReturnValue) == 0x000024, "Member 'BP_TalkCamera_C_GetEyeOffset_Yoro::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_Yoro, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000030, "Member 'BP_TalkCamera_C_GetEyeOffset_Yoro::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.GetLookOffset_Yoro
// 0x003C (0x003C - 0x0000)
struct BP_TalkCamera_C_GetLookOffset_Yoro final
{
public:
	struct FVector                                LookOffset;                                        // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param_1;      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param_2;      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_GetLookOffset_Yoro) == 0x000004, "Wrong alignment on BP_TalkCamera_C_GetLookOffset_Yoro");
static_assert(sizeof(BP_TalkCamera_C_GetLookOffset_Yoro) == 0x00003C, "Wrong size on BP_TalkCamera_C_GetLookOffset_Yoro");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_Yoro, LookOffset) == 0x000000, "Member 'BP_TalkCamera_C_GetLookOffset_Yoro::LookOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_Yoro, CallFunc_TalkDebug_GetCameraUpOffset_Param) == 0x00000C, "Member 'BP_TalkCamera_C_GetLookOffset_Yoro::CallFunc_TalkDebug_GetCameraUpOffset_Param' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_Yoro, CallFunc_TalkDebug_GetCameraUpOffset_Param_1) == 0x000010, "Member 'BP_TalkCamera_C_GetLookOffset_Yoro::CallFunc_TalkDebug_GetCameraUpOffset_Param_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_Yoro, CallFunc_TalkDebug_GetCameraUpOffset_Param_2) == 0x000014, "Member 'BP_TalkCamera_C_GetLookOffset_Yoro::CallFunc_TalkDebug_GetCameraUpOffset_Param_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_Yoro, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_TalkCamera_C_GetLookOffset_Yoro::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_Yoro, CallFunc_Add_VectorVector_ReturnValue) == 0x000024, "Member 'BP_TalkCamera_C_GetLookOffset_Yoro::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_Yoro, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000030, "Member 'BP_TalkCamera_C_GetLookOffset_Yoro::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.CheckCameraAnim
// 0x0002 (0x0002 - 0x0000)
struct BP_TalkCamera_C_CheckCameraAnim final
{
public:
	bool                                          IsMove;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_CheckCameraAnim) == 0x000001, "Wrong alignment on BP_TalkCamera_C_CheckCameraAnim");
static_assert(sizeof(BP_TalkCamera_C_CheckCameraAnim) == 0x000002, "Wrong size on BP_TalkCamera_C_CheckCameraAnim");
static_assert(offsetof(BP_TalkCamera_C_CheckCameraAnim, IsMove) == 0x000000, "Member 'BP_TalkCamera_C_CheckCameraAnim::IsMove' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CheckCameraAnim, CallFunc_IsPlaying_ReturnValue) == 0x000001, "Member 'BP_TalkCamera_C_CheckCameraAnim::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.MoveCamera
// 0x0070 (0x0070 - 0x0000)
struct BP_TalkCamera_C_MoveCamera final
{
public:
	struct FTransform                             Target;                                            // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         Time;                                              // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEase;                                            // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AE8[0xB];                                     // 0x0035(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0040(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_MoveCamera) == 0x000010, "Wrong alignment on BP_TalkCamera_C_MoveCamera");
static_assert(sizeof(BP_TalkCamera_C_MoveCamera) == 0x000070, "Wrong size on BP_TalkCamera_C_MoveCamera");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera, Target) == 0x000000, "Member 'BP_TalkCamera_C_MoveCamera::Target' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera, Time) == 0x000030, "Member 'BP_TalkCamera_C_MoveCamera::Time' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera, IsEase) == 0x000034, "Member 'BP_TalkCamera_C_MoveCamera::IsEase' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera, CallFunc_GetTransform_ReturnValue) == 0x000040, "Member 'BP_TalkCamera_C_MoveCamera::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.FindLookAtRocation_Daath
// 0x0074 (0x0074 - 0x0000)
struct BP_TalkCamera_C_FindLookAtRocation_Daath final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target;                                            // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ZOnly;                                             // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AE9[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ReturnValue;                                       // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVector                                L_Target;                                          // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_Start;                                           // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_ZOnly;                                           // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AEA[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ProjectPointOnToPlane_ReturnValue;        // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue; // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue_1; // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default;                             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_FindLookAtRocation_Daath) == 0x000004, "Wrong alignment on BP_TalkCamera_C_FindLookAtRocation_Daath");
static_assert(sizeof(BP_TalkCamera_C_FindLookAtRocation_Daath) == 0x000074, "Wrong size on BP_TalkCamera_C_FindLookAtRocation_Daath");
static_assert(offsetof(BP_TalkCamera_C_FindLookAtRocation_Daath, Start) == 0x000000, "Member 'BP_TalkCamera_C_FindLookAtRocation_Daath::Start' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_FindLookAtRocation_Daath, Target) == 0x00000C, "Member 'BP_TalkCamera_C_FindLookAtRocation_Daath::Target' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_FindLookAtRocation_Daath, ZOnly) == 0x000018, "Member 'BP_TalkCamera_C_FindLookAtRocation_Daath::ZOnly' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_FindLookAtRocation_Daath, ReturnValue) == 0x00001C, "Member 'BP_TalkCamera_C_FindLookAtRocation_Daath::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_FindLookAtRocation_Daath, L_Target) == 0x000028, "Member 'BP_TalkCamera_C_FindLookAtRocation_Daath::L_Target' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_FindLookAtRocation_Daath, L_Start) == 0x000034, "Member 'BP_TalkCamera_C_FindLookAtRocation_Daath::L_Start' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_FindLookAtRocation_Daath, L_ZOnly) == 0x000040, "Member 'BP_TalkCamera_C_FindLookAtRocation_Daath::L_ZOnly' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_FindLookAtRocation_Daath, Temp_bool_Variable) == 0x000041, "Member 'BP_TalkCamera_C_FindLookAtRocation_Daath::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_FindLookAtRocation_Daath, CallFunc_ProjectPointOnToPlane_ReturnValue) == 0x000044, "Member 'BP_TalkCamera_C_FindLookAtRocation_Daath::CallFunc_ProjectPointOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_FindLookAtRocation_Daath, CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue) == 0x000050, "Member 'BP_TalkCamera_C_FindLookAtRocation_Daath::CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_FindLookAtRocation_Daath, CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue_1) == 0x00005C, "Member 'BP_TalkCamera_C_FindLookAtRocation_Daath::CallFunc_Find_Look_at_Rotation_with_UpVec_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_FindLookAtRocation_Daath, K2Node_Select_Default) == 0x000068, "Member 'BP_TalkCamera_C_FindLookAtRocation_Daath::K2Node_Select_Default' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.ModifyEyeFromCameraScale
// 0x0058 (0x0058 - 0x0000)
struct BP_TalkCamera_C_ModifyEyeFromCameraScale final
{
public:
	struct FVector                                Eye;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Look;                                              // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraScale;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ModifiedEye;                                       // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LLookToEye;                                        // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_ModifyEyeFromCameraScale) == 0x000004, "Wrong alignment on BP_TalkCamera_C_ModifyEyeFromCameraScale");
static_assert(sizeof(BP_TalkCamera_C_ModifyEyeFromCameraScale) == 0x000058, "Wrong size on BP_TalkCamera_C_ModifyEyeFromCameraScale");
static_assert(offsetof(BP_TalkCamera_C_ModifyEyeFromCameraScale, Eye) == 0x000000, "Member 'BP_TalkCamera_C_ModifyEyeFromCameraScale::Eye' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ModifyEyeFromCameraScale, Look) == 0x00000C, "Member 'BP_TalkCamera_C_ModifyEyeFromCameraScale::Look' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ModifyEyeFromCameraScale, CameraScale) == 0x000018, "Member 'BP_TalkCamera_C_ModifyEyeFromCameraScale::CameraScale' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ModifyEyeFromCameraScale, ModifiedEye) == 0x00001C, "Member 'BP_TalkCamera_C_ModifyEyeFromCameraScale::ModifiedEye' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ModifyEyeFromCameraScale, LLookToEye) == 0x000028, "Member 'BP_TalkCamera_C_ModifyEyeFromCameraScale::LLookToEye' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ModifyEyeFromCameraScale, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000034, "Member 'BP_TalkCamera_C_ModifyEyeFromCameraScale::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ModifyEyeFromCameraScale, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000040, "Member 'BP_TalkCamera_C_ModifyEyeFromCameraScale::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ModifyEyeFromCameraScale, CallFunc_Add_VectorVector_ReturnValue) == 0x00004C, "Member 'BP_TalkCamera_C_ModifyEyeFromCameraScale::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.SetParam
// 0x0280 (0x0280 - 0x0000)
struct BP_TalkCamera_C_SetParam final
{
public:
	struct FTransform                             Param_BaseCameraTransform;                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             PlayerFace;                                        // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FTransform                             PlayerChest;                                       // 0x0060(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FTransform                             EnemyFace;                                         // 0x0090(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FTransform                             EnemyBody;                                         // 0x00C0(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FTransform                             Param_HeroTalkTransform;                           // 0x00F0(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         Param_PlayerCameraScale;                           // 0x0120(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_EnemyCameraScale;                            // 0x0124(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_PlayerLocationOffset;                        // 0x0128(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MythMode;                                          // 0x0134(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AEB[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                UpVector;                                          // 0x0138(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AEC[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Param_FriendModel;                                 // 0x0148(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           Param_EnemyModel;                                  // 0x0150(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EyeOffsetYoro;                                     // 0x0158(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookOffsetYoro;                                    // 0x0164(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TransformToString_ReturnValue;       // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_SetParam) == 0x000010, "Wrong alignment on BP_TalkCamera_C_SetParam");
static_assert(sizeof(BP_TalkCamera_C_SetParam) == 0x000280, "Wrong size on BP_TalkCamera_C_SetParam");
static_assert(offsetof(BP_TalkCamera_C_SetParam, Param_BaseCameraTransform) == 0x000000, "Member 'BP_TalkCamera_C_SetParam::Param_BaseCameraTransform' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, PlayerFace) == 0x000030, "Member 'BP_TalkCamera_C_SetParam::PlayerFace' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, PlayerChest) == 0x000060, "Member 'BP_TalkCamera_C_SetParam::PlayerChest' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, EnemyFace) == 0x000090, "Member 'BP_TalkCamera_C_SetParam::EnemyFace' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, EnemyBody) == 0x0000C0, "Member 'BP_TalkCamera_C_SetParam::EnemyBody' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, Param_HeroTalkTransform) == 0x0000F0, "Member 'BP_TalkCamera_C_SetParam::Param_HeroTalkTransform' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, Param_PlayerCameraScale) == 0x000120, "Member 'BP_TalkCamera_C_SetParam::Param_PlayerCameraScale' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, Param_EnemyCameraScale) == 0x000124, "Member 'BP_TalkCamera_C_SetParam::Param_EnemyCameraScale' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, Param_PlayerLocationOffset) == 0x000128, "Member 'BP_TalkCamera_C_SetParam::Param_PlayerLocationOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, MythMode) == 0x000134, "Member 'BP_TalkCamera_C_SetParam::MythMode' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, UpVector) == 0x000138, "Member 'BP_TalkCamera_C_SetParam::UpVector' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, Param_FriendModel) == 0x000148, "Member 'BP_TalkCamera_C_SetParam::Param_FriendModel' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, Param_EnemyModel) == 0x000150, "Member 'BP_TalkCamera_C_SetParam::Param_EnemyModel' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, EyeOffsetYoro) == 0x000158, "Member 'BP_TalkCamera_C_SetParam::EyeOffsetYoro' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, LookOffsetYoro) == 0x000164, "Member 'BP_TalkCamera_C_SetParam::LookOffsetYoro' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_Vector_Normal2D_ReturnValue) == 0x000170, "Member 'BP_TalkCamera_C_SetParam::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakVector_X) == 0x00017C, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakVector_Y) == 0x000180, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakVector_Z) == 0x000184, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000188, "Member 'BP_TalkCamera_C_SetParam::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_MakeVector_ReturnValue) == 0x00018C, "Member 'BP_TalkCamera_C_SetParam::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_Conv_TransformToString_ReturnValue) == 0x000198, "Member 'BP_TalkCamera_C_SetParam::CallFunc_Conv_TransformToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_Concat_StrStr_ReturnValue) == 0x0001A8, "Member 'BP_TalkCamera_C_SetParam::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakTransform_Location) == 0x0001B8, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakTransform_Rotation) == 0x0001C4, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakTransform_Scale) == 0x0001D0, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakVector_X_1) == 0x0001DC, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakVector_Y_1) == 0x0001E0, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakVector_Z_1) == 0x0001E4, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakTransform_Location_1) == 0x0001E8, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakTransform_Rotation_1) == 0x0001F4, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakTransform_Scale_1) == 0x000200, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakVector_X_2) == 0x00020C, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakVector_Y_2) == 0x000210, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakVector_Z_2) == 0x000214, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakTransform_Location_2) == 0x000218, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakTransform_Rotation_2) == 0x000224, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakTransform_Scale_2) == 0x000230, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00023C, "Member 'BP_TalkCamera_C_SetParam::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_Add_FloatFloat_ReturnValue) == 0x000240, "Member 'BP_TalkCamera_C_SetParam::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakTransform_Location_3) == 0x000244, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakTransform_Rotation_3) == 0x000250, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_BreakTransform_Scale_3) == 0x00025C, "Member 'BP_TalkCamera_C_SetParam::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetParam, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000268, "Member 'BP_TalkCamera_C_SetParam::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.GetCameraEye_Normal
// 0x00C8 (0x00C8 - 0x0000)
struct BP_TalkCamera_C_GetCameraEye_Normal final
{
public:
	float                                         ToEnemyRate;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Height;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Eye;                                               // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AboveGround_OutLocation;                  // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_GetCameraEye_Normal) == 0x000004, "Wrong alignment on BP_TalkCamera_C_GetCameraEye_Normal");
static_assert(sizeof(BP_TalkCamera_C_GetCameraEye_Normal) == 0x0000C8, "Wrong size on BP_TalkCamera_C_GetCameraEye_Normal");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, ToEnemyRate) == 0x000000, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::ToEnemyRate' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, Distance) == 0x000004, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::Distance' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, Height) == 0x000008, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::Height' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, Eye) == 0x00000C, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::Eye' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_BreakTransform_Location) == 0x000018, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_BreakTransform_Rotation) == 0x000024, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_BreakTransform_Scale) == 0x000030, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_BreakVector_X) == 0x00003C, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_BreakVector_Z) == 0x000044, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000048, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00005C, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_BreakTransform_Location_1) == 0x000068, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_BreakTransform_Rotation_1) == 0x000074, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_BreakTransform_Scale_1) == 0x000080, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_Add_VectorVector_ReturnValue) == 0x00008C, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000098, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_BreakVector_X_1) == 0x0000A4, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_BreakVector_Y_1) == 0x0000A8, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_BreakVector_Z_1) == 0x0000AC, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_MakeVector_ReturnValue) == 0x0000B0, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraEye_Normal, CallFunc_AboveGround_OutLocation) == 0x0000BC, "Member 'BP_TalkCamera_C_GetCameraEye_Normal::CallFunc_AboveGround_OutLocation' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.GetCameraLook_Normal
// 0x0078 (0x0078 - 0x0000)
struct BP_TalkCamera_C_GetCameraLook_Normal final
{
public:
	float                                         ToEnemyRate;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightOffset;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Look;                                              // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AboveGround_OutLocation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_GetCameraLook_Normal) == 0x000004, "Wrong alignment on BP_TalkCamera_C_GetCameraLook_Normal");
static_assert(sizeof(BP_TalkCamera_C_GetCameraLook_Normal) == 0x000078, "Wrong size on BP_TalkCamera_C_GetCameraLook_Normal");
static_assert(offsetof(BP_TalkCamera_C_GetCameraLook_Normal, ToEnemyRate) == 0x000000, "Member 'BP_TalkCamera_C_GetCameraLook_Normal::ToEnemyRate' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraLook_Normal, HeightOffset) == 0x000004, "Member 'BP_TalkCamera_C_GetCameraLook_Normal::HeightOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraLook_Normal, Look) == 0x000008, "Member 'BP_TalkCamera_C_GetCameraLook_Normal::Look' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraLook_Normal, CallFunc_BreakTransform_Location) == 0x000014, "Member 'BP_TalkCamera_C_GetCameraLook_Normal::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraLook_Normal, CallFunc_BreakTransform_Rotation) == 0x000020, "Member 'BP_TalkCamera_C_GetCameraLook_Normal::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraLook_Normal, CallFunc_BreakTransform_Scale) == 0x00002C, "Member 'BP_TalkCamera_C_GetCameraLook_Normal::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraLook_Normal, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000038, "Member 'BP_TalkCamera_C_GetCameraLook_Normal::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraLook_Normal, CallFunc_Add_VectorVector_ReturnValue) == 0x000044, "Member 'BP_TalkCamera_C_GetCameraLook_Normal::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraLook_Normal, CallFunc_BreakVector_X) == 0x000050, "Member 'BP_TalkCamera_C_GetCameraLook_Normal::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraLook_Normal, CallFunc_BreakVector_Y) == 0x000054, "Member 'BP_TalkCamera_C_GetCameraLook_Normal::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraLook_Normal, CallFunc_BreakVector_Z) == 0x000058, "Member 'BP_TalkCamera_C_GetCameraLook_Normal::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraLook_Normal, CallFunc_Add_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_TalkCamera_C_GetCameraLook_Normal::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraLook_Normal, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'BP_TalkCamera_C_GetCameraLook_Normal::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraLook_Normal, CallFunc_AboveGround_OutLocation) == 0x00006C, "Member 'BP_TalkCamera_C_GetCameraLook_Normal::CallFunc_AboveGround_OutLocation' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.UpdateCameraTransform
// 0x00C0 (0x00C0 - 0x0000)
struct BP_TalkCamera_C_UpdateCameraTransform final
{
public:
	struct FTransform                             CallFunc_CalcCameraTransform_OutTransform;         // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_CalcCameraTransform_OutTransform_1;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_CalcCameraTransform_OutTransform_2;       // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_CalcCameraTransform_OutTransform_3;       // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_UpdateCameraTransform) == 0x000010, "Wrong alignment on BP_TalkCamera_C_UpdateCameraTransform");
static_assert(sizeof(BP_TalkCamera_C_UpdateCameraTransform) == 0x0000C0, "Wrong size on BP_TalkCamera_C_UpdateCameraTransform");
static_assert(offsetof(BP_TalkCamera_C_UpdateCameraTransform, CallFunc_CalcCameraTransform_OutTransform) == 0x000000, "Member 'BP_TalkCamera_C_UpdateCameraTransform::CallFunc_CalcCameraTransform_OutTransform' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_UpdateCameraTransform, CallFunc_CalcCameraTransform_OutTransform_1) == 0x000030, "Member 'BP_TalkCamera_C_UpdateCameraTransform::CallFunc_CalcCameraTransform_OutTransform_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_UpdateCameraTransform, CallFunc_CalcCameraTransform_OutTransform_2) == 0x000060, "Member 'BP_TalkCamera_C_UpdateCameraTransform::CallFunc_CalcCameraTransform_OutTransform_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_UpdateCameraTransform, CallFunc_CalcCameraTransform_OutTransform_3) == 0x000090, "Member 'BP_TalkCamera_C_UpdateCameraTransform::CallFunc_CalcCameraTransform_OutTransform_3' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.ApplyDebug
// 0x0080 (0x0080 - 0x0000)
struct BP_TalkCamera_C_ApplyDebug final
{
public:
	struct FTalkCameraParam                       K2Node_MakeStruct_TalkCameraParam;                 // 0x0000(0x002C)(NoDestructor)
	float                                         CallFunc_TalkDebug_GetCamera_NormalLookHorizontal_Out; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCamera_NormalEyeHorizontal_Out; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCamera_NormalLookDistance_Out; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCamera_NormalLookHeight_Out; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCamera_NormalEyeHeight_Out;  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCamera_NormalEyeDistance_Out; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCamera_NormalEyeRate_Out;    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCamera_NormalLookEnemyRate_Out; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCamera_NormalLookPlayerRate_Out; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TalkDebug_GetCamera_IsDebugMode_Out;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AED[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTalkCameraParam                       K2Node_MakeStruct_TalkCameraParam_1;               // 0x0054(0x002C)(NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_ApplyDebug) == 0x000004, "Wrong alignment on BP_TalkCamera_C_ApplyDebug");
static_assert(sizeof(BP_TalkCamera_C_ApplyDebug) == 0x000080, "Wrong size on BP_TalkCamera_C_ApplyDebug");
static_assert(offsetof(BP_TalkCamera_C_ApplyDebug, K2Node_MakeStruct_TalkCameraParam) == 0x000000, "Member 'BP_TalkCamera_C_ApplyDebug::K2Node_MakeStruct_TalkCameraParam' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ApplyDebug, CallFunc_TalkDebug_GetCamera_NormalLookHorizontal_Out) == 0x00002C, "Member 'BP_TalkCamera_C_ApplyDebug::CallFunc_TalkDebug_GetCamera_NormalLookHorizontal_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ApplyDebug, CallFunc_TalkDebug_GetCamera_NormalEyeHorizontal_Out) == 0x000030, "Member 'BP_TalkCamera_C_ApplyDebug::CallFunc_TalkDebug_GetCamera_NormalEyeHorizontal_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ApplyDebug, CallFunc_TalkDebug_GetCamera_NormalLookDistance_Out) == 0x000034, "Member 'BP_TalkCamera_C_ApplyDebug::CallFunc_TalkDebug_GetCamera_NormalLookDistance_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ApplyDebug, CallFunc_TalkDebug_GetCamera_NormalLookHeight_Out) == 0x000038, "Member 'BP_TalkCamera_C_ApplyDebug::CallFunc_TalkDebug_GetCamera_NormalLookHeight_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ApplyDebug, CallFunc_TalkDebug_GetCamera_NormalEyeHeight_Out) == 0x00003C, "Member 'BP_TalkCamera_C_ApplyDebug::CallFunc_TalkDebug_GetCamera_NormalEyeHeight_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ApplyDebug, CallFunc_TalkDebug_GetCamera_NormalEyeDistance_Out) == 0x000040, "Member 'BP_TalkCamera_C_ApplyDebug::CallFunc_TalkDebug_GetCamera_NormalEyeDistance_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ApplyDebug, CallFunc_TalkDebug_GetCamera_NormalEyeRate_Out) == 0x000044, "Member 'BP_TalkCamera_C_ApplyDebug::CallFunc_TalkDebug_GetCamera_NormalEyeRate_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ApplyDebug, CallFunc_TalkDebug_GetCamera_NormalLookEnemyRate_Out) == 0x000048, "Member 'BP_TalkCamera_C_ApplyDebug::CallFunc_TalkDebug_GetCamera_NormalLookEnemyRate_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ApplyDebug, CallFunc_TalkDebug_GetCamera_NormalLookPlayerRate_Out) == 0x00004C, "Member 'BP_TalkCamera_C_ApplyDebug::CallFunc_TalkDebug_GetCamera_NormalLookPlayerRate_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ApplyDebug, CallFunc_TalkDebug_GetCamera_IsDebugMode_Out) == 0x000050, "Member 'BP_TalkCamera_C_ApplyDebug::CallFunc_TalkDebug_GetCamera_IsDebugMode_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ApplyDebug, K2Node_MakeStruct_TalkCameraParam_1) == 0x000054, "Member 'BP_TalkCamera_C_ApplyDebug::K2Node_MakeStruct_TalkCameraParam_1' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.PrintInfo
// 0x06E0 (0x06E0 - 0x0000)
struct BP_TalkCamera_C_PrintInfo final
{
public:
	struct FVector                                LLookBack;                                         // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LEyeBack;                                          // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LBaseLocation;                                     // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AEE[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AEF[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTalkCameraParam                       CallFunc_GetCameraTableData_ReturnValue;           // 0x0058(0x002C)(ConstParm, NoDestructor)
	uint8                                         Pad_2AF0[0xC];                                     // 0x0084(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcCameraTransformOfTable_Out;           // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_1;   // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_2;   // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_3;   // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_3;                      // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_4;                      // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AF1[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_5;                      // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_6;                      // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_6;           // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_7;           // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_7;                      // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AF2[0x4];                                     // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_8;           // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_8;                      // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_9;           // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_9;                      // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AF3[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_10;          // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_10;                     // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AF4[0x4];                                     // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_11;          // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_11;                     // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AF5[0x4];                                     // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_12;          // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0308(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0318(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_1;        // 0x0388(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_20;             // 0x0398(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_21;             // 0x03A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_22;             // 0x03B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_23;             // 0x03C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x03E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_2;        // 0x03F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_3;        // 0x0400(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_24;             // 0x0410(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_25;             // 0x0420(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_TALK_DEBUG_CAMERA                           CallFunc_TalkDebug_GetDebugCameraType_CameraType;  // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AF6[0x2];                                     // 0x0432(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0434(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x044C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_4;      // 0x0458(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AF7[0x4];                                     // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_4;        // 0x0468(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_26;             // 0x0478(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_5;      // 0x0488(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AF8[0x4];                                     // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_5;        // 0x0498(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_2AF9[0x8];                                     // 0x04A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x04B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_27;             // 0x04E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TransformToString_ReturnValue;       // 0x04F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_28;             // 0x0500(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_29;             // 0x0520(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0530(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_30;             // 0x0540(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x055C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0568(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_6;      // 0x0574(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0580(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x058C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0598(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AFA[0x4];                                     // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_6;        // 0x05A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_7;      // 0x05B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AFB[0x4];                                     // 0x05C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_31;             // 0x05C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_7;        // 0x05D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_32;             // 0x05E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x05F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x0604(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0610(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_8;      // 0x061C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x0628(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0634(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0640(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AFC[0x4];                                     // 0x064C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_8;        // 0x0650(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_9;      // 0x0660(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AFD[0x4];                                     // 0x066C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_33;             // 0x0670(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_9;        // 0x0680(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_34;             // 0x0690(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TransformToString_ReturnValue_1;     // 0x06A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_35;             // 0x06B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_10;       // 0x06C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_36;             // 0x06D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_PrintInfo) == 0x000010, "Wrong alignment on BP_TalkCamera_C_PrintInfo");
static_assert(sizeof(BP_TalkCamera_C_PrintInfo) == 0x0006E0, "Wrong size on BP_TalkCamera_C_PrintInfo");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, LLookBack) == 0x000000, "Member 'BP_TalkCamera_C_PrintInfo::LLookBack' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, LEyeBack) == 0x00000C, "Member 'BP_TalkCamera_C_PrintInfo::LEyeBack' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, LBaseLocation) == 0x000018, "Member 'BP_TalkCamera_C_PrintInfo::LBaseLocation' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_InverseTransformLocation_ReturnValue) == 0x000038, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_GetCameraTableData_ReturnValue) == 0x000058, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_GetCameraTableData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_CalcCameraTransformOfTable_Out) == 0x000090, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_CalcCameraTransformOfTable_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_InverseTransformLocation_ReturnValue_1) == 0x0000C0, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_InverseTransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_InverseTransformLocation_ReturnValue_2) == 0x0000CC, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_InverseTransformLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_InverseTransformLocation_ReturnValue_3) == 0x0000E4, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_InverseTransformLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakVector_X) == 0x0000F0, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakVector_Y) == 0x0000F4, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakVector_Z) == 0x0000F8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000FC, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Add_FloatFloat_ReturnValue) == 0x000108, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakVector_X_1) == 0x00010C, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakVector_Y_1) == 0x000110, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakVector_Z_1) == 0x000114, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Round_ReturnValue) == 0x000118, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00011C, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000120, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Round_ReturnValue_1) == 0x000130, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000134, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000138, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Round_ReturnValue_2) == 0x000148, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x00014C, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000150, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Round_ReturnValue_3) == 0x000160, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Round_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakVector_X_2) == 0x000164, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakVector_Y_2) == 0x000168, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakVector_Z_2) == 0x00016C, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_IntToString_ReturnValue_4) == 0x000170, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Round_ReturnValue_4) == 0x000180, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Round_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000188, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_IntToString_ReturnValue_5) == 0x000198, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Round_ReturnValue_5) == 0x0001A8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Round_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Round_ReturnValue_6) == 0x0001AC, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Round_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_IntToString_ReturnValue_6) == 0x0001B0, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_IntToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_IntToString_ReturnValue_7) == 0x0001C0, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_IntToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_VectorToString_ReturnValue) == 0x0001D0, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001E0, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0001F0, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x000200, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Round_ReturnValue_7) == 0x000204, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Round_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x000208, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_IntToString_ReturnValue_8) == 0x000210, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_IntToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Round_ReturnValue_8) == 0x000220, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Round_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakVector_X_3) == 0x000224, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakVector_Y_3) == 0x000228, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakVector_Z_3) == 0x00022C, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_IntToString_ReturnValue_9) == 0x000230, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_IntToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Round_ReturnValue_9) == 0x000240, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Round_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000248, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_IntToString_ReturnValue_10) == 0x000258, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_IntToString_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000268, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Round_ReturnValue_10) == 0x000278, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Round_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000280, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_IntToString_ReturnValue_11) == 0x000290, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_IntToString_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0002A0, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Round_ReturnValue_11) == 0x0002B0, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Round_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0002B8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_IntToString_ReturnValue_12) == 0x0002C8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_IntToString_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0002D8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0002E8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0002F8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000308, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000318, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000328, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000338, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_16) == 0x000348, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_17) == 0x000358, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_18) == 0x000368, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_19) == 0x000378, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_VectorToString_ReturnValue_1) == 0x000388, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_VectorToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_20) == 0x000398, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_21) == 0x0003A8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_22) == 0x0003B8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_23) == 0x0003C8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0003D8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x0003E4, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_VectorToString_ReturnValue_2) == 0x0003F0, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_VectorToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_VectorToString_ReturnValue_3) == 0x000400, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_VectorToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_24) == 0x000410, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_25) == 0x000420, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_TalkDebug_GetDebugCameraType_CameraType) == 0x000430, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_TalkDebug_GetDebugCameraType_CameraType' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, K2Node_SwitchEnum_CmpSuccess) == 0x000431, "Member 'BP_TalkCamera_C_PrintInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakTransform_Location) == 0x000434, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakTransform_Rotation) == 0x000440, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakTransform_Scale) == 0x00044C, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Subtract_VectorVector_ReturnValue_4) == 0x000458, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Subtract_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_VectorToString_ReturnValue_4) == 0x000468, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_VectorToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_26) == 0x000478, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Subtract_VectorVector_ReturnValue_5) == 0x000488, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Subtract_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_VectorToString_ReturnValue_5) == 0x000498, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_VectorToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_GetTransform_ReturnValue) == 0x0004B0, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_27) == 0x0004E0, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_TransformToString_ReturnValue) == 0x0004F0, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_TransformToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_28) == 0x000500, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_FloatToString_ReturnValue) == 0x000510, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_29) == 0x000520, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000530, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_30) == 0x000540, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakTransform_Location_1) == 0x000550, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakTransform_Rotation_1) == 0x00055C, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakTransform_Scale_1) == 0x000568, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Subtract_VectorVector_ReturnValue_6) == 0x000574, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Subtract_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakTransform_Location_2) == 0x000580, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakTransform_Rotation_2) == 0x00058C, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakTransform_Scale_2) == 0x000598, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_VectorToString_ReturnValue_6) == 0x0005A8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_VectorToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Subtract_VectorVector_ReturnValue_7) == 0x0005B8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Subtract_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_31) == 0x0005C8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_VectorToString_ReturnValue_7) == 0x0005D8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_VectorToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_32) == 0x0005E8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakTransform_Location_3) == 0x0005F8, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakTransform_Rotation_3) == 0x000604, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakTransform_Scale_3) == 0x000610, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Subtract_VectorVector_ReturnValue_8) == 0x00061C, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Subtract_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakTransform_Location_4) == 0x000628, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakTransform_Rotation_4) == 0x000634, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_BreakTransform_Scale_4) == 0x000640, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_VectorToString_ReturnValue_8) == 0x000650, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_VectorToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Subtract_VectorVector_ReturnValue_9) == 0x000660, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Subtract_VectorVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_33) == 0x000670, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_VectorToString_ReturnValue_9) == 0x000680, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_VectorToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_34) == 0x000690, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_TransformToString_ReturnValue_1) == 0x0006A0, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_TransformToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_35) == 0x0006B0, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Conv_VectorToString_ReturnValue_10) == 0x0006C0, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Conv_VectorToString_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_PrintInfo, CallFunc_Concat_StrStr_ReturnValue_36) == 0x0006D0, "Member 'BP_TalkCamera_C_PrintInfo::CallFunc_Concat_StrStr_ReturnValue_36' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.MoveCamera_ByTable
// 0x0120 (0x0120 - 0x0000)
struct BP_TalkCamera_C_MoveCamera_ByTable final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_TableIndex;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ModelHide;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TALK_CAMERA_MODEL_HIDE                      CallFunc_GetCameraTableModelHide_ReturnValue;      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TALK_CAMERA_MODEL_HIDE                      Temp_byte_Variable;                                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpenDebugMenu_ReturnValue;              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TALK_CAMERA_MODEL_HIDE                      CallFunc_TalkDebug_GetCamera_ModelHide_Out;        // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TalkDebug_GetCamera_IsDebugMode_Out;      // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AFE[0xE];                                     // 0x0012(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcCameraTransformOfTable_Out;           // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	E_TALK_CAMERA_MODEL_HIDE                      K2Node_Select_Default;                             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AFF[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0054(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TALK_CAMERA_MODEL_HIDE                      K2Node_Select_Default_1;                           // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B00[0x2];                                     // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00E0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCameraReverse_IsReverse;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_MoveCamera_ByTable) == 0x000010, "Wrong alignment on BP_TalkCamera_C_MoveCamera_ByTable");
static_assert(sizeof(BP_TalkCamera_C_MoveCamera_ByTable) == 0x000120, "Wrong size on BP_TalkCamera_C_MoveCamera_ByTable");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, Time) == 0x000000, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::Time' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, Param_TableIndex) == 0x000004, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::Param_TableIndex' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, ModelHide) == 0x000008, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::ModelHide' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, Temp_bool_Variable) == 0x000009, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, CallFunc_GetCameraTableModelHide_ReturnValue) == 0x00000A, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::CallFunc_GetCameraTableModelHide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, Temp_byte_Variable) == 0x00000B, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, CallFunc_IsOpenDebugMenu_ReturnValue) == 0x00000D, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::CallFunc_IsOpenDebugMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, CallFunc_TalkDebug_GetCamera_ModelHide_Out) == 0x00000E, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::CallFunc_TalkDebug_GetCamera_ModelHide_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, CallFunc_TalkDebug_GetCamera_IsDebugMode_Out) == 0x00000F, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::CallFunc_TalkDebug_GetCamera_IsDebugMode_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, CallFunc_CalcCameraTransformOfTable_Out) == 0x000020, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::CallFunc_CalcCameraTransformOfTable_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, K2Node_Select_Default) == 0x000050, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000054, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000DC, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, K2Node_Select_Default_1) == 0x0000DD, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, CallFunc_GetTransform_ReturnValue) == 0x0000E0, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_ByTable, CallFunc_IsCameraReverse_IsReverse) == 0x000110, "Member 'BP_TalkCamera_C_MoveCamera_ByTable::CallFunc_IsCameraReverse_IsReverse' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.CalcCameraTransform
// 0x03B0 (0x03B0 - 0x0000)
struct BP_TalkCamera_C_CalcCameraTransform final
{
public:
	struct FTalkCameraParam                       CameraParam;                                       // 0x0000(0x002C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	E_TalkCamera                                  Param_CameraType;                                  // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B01[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             OutTransform;                                      // 0x0030(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	E_TalkCamera                                  Temp_byte_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B02[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLook_Normal_Look;                // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLook_Normal_Look_1;              // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLook_Normal_Look_2;              // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraEye_Normal_Eye;                  // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraEye_Normal_Eye_1;                // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRocation_Daath_ReturnValue;     // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRocation_Daath_ReturnValue_1;   // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B03[0x8];                                     // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                Temp_struct_Variable;                              // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_2;                            // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_3;                            // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TalkCamera                                  Temp_byte_Variable_1;                              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B04[0xF];                                     // 0x0151(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_4;                            // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             Temp_struct_Variable_5;                            // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             Temp_struct_Variable_6;                            // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             Temp_struct_Variable_7;                            // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	E_TalkCamera                                  Temp_byte_Variable_2;                              // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B05[0x3];                                     // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable_8;                            // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_9;                            // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_10;                           // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_11;                           // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraParam_Yoro_Eye;                  // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraParam_Yoro_Look;                 // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRocation_Daath_ReturnValue_2;   // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraEye_Normal_Eye_2;                // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B06[0x8];                                     // 0x0288(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0290(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRocation_Daath_ReturnValue_3;   // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraParam_MythFriendUp_Eye;          // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraParam_MythFriendUp_Look;         // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B07[0xC];                                     // 0x02E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x02F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Select_Default;                             // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRocation_Daath_ReturnValue_4;   // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B08[0x8];                                     // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0340(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_Select_Default_1;                           // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B09[0x4];                                     // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Select_Default_2;                           // 0x0380(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_CalcCameraTransform) == 0x000010, "Wrong alignment on BP_TalkCamera_C_CalcCameraTransform");
static_assert(sizeof(BP_TalkCamera_C_CalcCameraTransform) == 0x0003B0, "Wrong size on BP_TalkCamera_C_CalcCameraTransform");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CameraParam) == 0x000000, "Member 'BP_TalkCamera_C_CalcCameraTransform::CameraParam' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, Param_CameraType) == 0x00002C, "Member 'BP_TalkCamera_C_CalcCameraTransform::Param_CameraType' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, OutTransform) == 0x000030, "Member 'BP_TalkCamera_C_CalcCameraTransform::OutTransform' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, Temp_byte_Variable) == 0x000060, "Member 'BP_TalkCamera_C_CalcCameraTransform::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_GetCameraLook_Normal_Look) == 0x000064, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_GetCameraLook_Normal_Look' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_GetCameraLook_Normal_Look_1) == 0x000070, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_GetCameraLook_Normal_Look_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_GetCameraLook_Normal_Look_2) == 0x00007C, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_GetCameraLook_Normal_Look_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_GetCameraEye_Normal_Eye) == 0x000088, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_GetCameraEye_Normal_Eye' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_GetCameraEye_Normal_Eye_1) == 0x000094, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_GetCameraEye_Normal_Eye_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_FindLookAtRocation_Daath_ReturnValue) == 0x0000A0, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_FindLookAtRocation_Daath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_FindLookAtRocation_Daath_ReturnValue_1) == 0x0000AC, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_FindLookAtRocation_Daath_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_MakeTransform_ReturnValue) == 0x0000C0, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_MakeTransform_ReturnValue_1) == 0x0000F0, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, Temp_struct_Variable) == 0x000120, "Member 'BP_TalkCamera_C_CalcCameraTransform::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, Temp_struct_Variable_1) == 0x00012C, "Member 'BP_TalkCamera_C_CalcCameraTransform::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, Temp_struct_Variable_2) == 0x000138, "Member 'BP_TalkCamera_C_CalcCameraTransform::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, Temp_struct_Variable_3) == 0x000144, "Member 'BP_TalkCamera_C_CalcCameraTransform::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, Temp_byte_Variable_1) == 0x000150, "Member 'BP_TalkCamera_C_CalcCameraTransform::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, Temp_struct_Variable_4) == 0x000160, "Member 'BP_TalkCamera_C_CalcCameraTransform::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, Temp_struct_Variable_5) == 0x000190, "Member 'BP_TalkCamera_C_CalcCameraTransform::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, Temp_struct_Variable_6) == 0x0001C0, "Member 'BP_TalkCamera_C_CalcCameraTransform::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, Temp_struct_Variable_7) == 0x0001F0, "Member 'BP_TalkCamera_C_CalcCameraTransform::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, Temp_byte_Variable_2) == 0x000220, "Member 'BP_TalkCamera_C_CalcCameraTransform::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, Temp_struct_Variable_8) == 0x000224, "Member 'BP_TalkCamera_C_CalcCameraTransform::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, Temp_struct_Variable_9) == 0x000230, "Member 'BP_TalkCamera_C_CalcCameraTransform::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, Temp_struct_Variable_10) == 0x00023C, "Member 'BP_TalkCamera_C_CalcCameraTransform::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, Temp_struct_Variable_11) == 0x000248, "Member 'BP_TalkCamera_C_CalcCameraTransform::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_GetCameraParam_Yoro_Eye) == 0x000254, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_GetCameraParam_Yoro_Eye' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_GetCameraParam_Yoro_Look) == 0x000260, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_GetCameraParam_Yoro_Look' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00026C, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_FindLookAtRocation_Daath_ReturnValue_2) == 0x000270, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_FindLookAtRocation_Daath_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_GetCameraEye_Normal_Eye_2) == 0x00027C, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_GetCameraEye_Normal_Eye_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_MakeTransform_ReturnValue_2) == 0x000290, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_FindLookAtRocation_Daath_ReturnValue_3) == 0x0002C0, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_FindLookAtRocation_Daath_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_GetCameraParam_MythFriendUp_Eye) == 0x0002CC, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_GetCameraParam_MythFriendUp_Eye' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_GetCameraParam_MythFriendUp_Look) == 0x0002D8, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_GetCameraParam_MythFriendUp_Look' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_MakeTransform_ReturnValue_3) == 0x0002F0, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, K2Node_Select_Default) == 0x000320, "Member 'BP_TalkCamera_C_CalcCameraTransform::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_FindLookAtRocation_Daath_ReturnValue_4) == 0x00032C, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_FindLookAtRocation_Daath_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, CallFunc_MakeTransform_ReturnValue_4) == 0x000340, "Member 'BP_TalkCamera_C_CalcCameraTransform::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, K2Node_Select_Default_1) == 0x000370, "Member 'BP_TalkCamera_C_CalcCameraTransform::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransform, K2Node_Select_Default_2) == 0x000380, "Member 'BP_TalkCamera_C_CalcCameraTransform::K2Node_Select_Default_2' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.IsCameraReverse
// 0x00F0 (0x00F0 - 0x0000)
struct BP_TalkCamera_C_IsCameraReverse final
{
public:
	struct FTransform                             T1;                                                // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             T2;                                                // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          IsReverse;                                         // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B0A[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_IsCameraReverse) == 0x000010, "Wrong alignment on BP_TalkCamera_C_IsCameraReverse");
static_assert(sizeof(BP_TalkCamera_C_IsCameraReverse) == 0x0000F0, "Wrong size on BP_TalkCamera_C_IsCameraReverse");
static_assert(offsetof(BP_TalkCamera_C_IsCameraReverse, T1) == 0x000000, "Member 'BP_TalkCamera_C_IsCameraReverse::T1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_IsCameraReverse, T2) == 0x000030, "Member 'BP_TalkCamera_C_IsCameraReverse::T2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_IsCameraReverse, IsReverse) == 0x000060, "Member 'BP_TalkCamera_C_IsCameraReverse::IsReverse' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_IsCameraReverse, CallFunc_BreakTransform_Location) == 0x000064, "Member 'BP_TalkCamera_C_IsCameraReverse::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_IsCameraReverse, CallFunc_BreakTransform_Rotation) == 0x000070, "Member 'BP_TalkCamera_C_IsCameraReverse::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_IsCameraReverse, CallFunc_BreakTransform_Scale) == 0x00007C, "Member 'BP_TalkCamera_C_IsCameraReverse::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_IsCameraReverse, CallFunc_BreakTransform_Location_1) == 0x000088, "Member 'BP_TalkCamera_C_IsCameraReverse::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_IsCameraReverse, CallFunc_BreakTransform_Rotation_1) == 0x000094, "Member 'BP_TalkCamera_C_IsCameraReverse::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_IsCameraReverse, CallFunc_BreakTransform_Scale_1) == 0x0000A0, "Member 'BP_TalkCamera_C_IsCameraReverse::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_IsCameraReverse, CallFunc_GetForwardVector_ReturnValue) == 0x0000AC, "Member 'BP_TalkCamera_C_IsCameraReverse::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_IsCameraReverse, CallFunc_GetForwardVector_ReturnValue_1) == 0x0000B8, "Member 'BP_TalkCamera_C_IsCameraReverse::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_IsCameraReverse, CallFunc_Normal_ReturnValue) == 0x0000C4, "Member 'BP_TalkCamera_C_IsCameraReverse::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_IsCameraReverse, CallFunc_Normal_ReturnValue_1) == 0x0000D0, "Member 'BP_TalkCamera_C_IsCameraReverse::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_IsCameraReverse, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000DC, "Member 'BP_TalkCamera_C_IsCameraReverse::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_IsCameraReverse, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000E0, "Member 'BP_TalkCamera_C_IsCameraReverse::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.ApplyModelHide
// 0x0002 (0x0002 - 0x0000)
struct BP_TalkCamera_C_ApplyModelHide final
{
public:
	E_TALK_CAMERA_MODEL_HIDE                      ModelHide;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_ApplyModelHide) == 0x000001, "Wrong alignment on BP_TalkCamera_C_ApplyModelHide");
static_assert(sizeof(BP_TalkCamera_C_ApplyModelHide) == 0x000002, "Wrong size on BP_TalkCamera_C_ApplyModelHide");
static_assert(offsetof(BP_TalkCamera_C_ApplyModelHide, ModelHide) == 0x000000, "Member 'BP_TalkCamera_C_ApplyModelHide::ModelHide' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ApplyModelHide, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_TalkCamera_C_ApplyModelHide::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.AboveGround
// 0x0190 (0x0190 - 0x0000)
struct BP_TalkCamera_C_AboveGround final
{
public:
	struct FVector                                InLocation;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OutLocation;                                       // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0064(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B0B[0x1];                                     // 0x00EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B0C[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_AboveGround) == 0x000008, "Wrong alignment on BP_TalkCamera_C_AboveGround");
static_assert(sizeof(BP_TalkCamera_C_AboveGround) == 0x000190, "Wrong size on BP_TalkCamera_C_AboveGround");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, InLocation) == 0x000000, "Member 'BP_TalkCamera_C_AboveGround::InLocation' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, OutLocation) == 0x00000C, "Member 'BP_TalkCamera_C_AboveGround::OutLocation' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, Temp_object_Variable) == 0x000018, "Member 'BP_TalkCamera_C_AboveGround::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakVector_Y) == 0x00002C, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakVector_Z) == 0x000030, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_MakeVector_ReturnValue) == 0x000034, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_MakeVector_ReturnValue_1) == 0x000040, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00004C, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_Add_VectorVector_ReturnValue) == 0x000058, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_LineTraceSingle_OutHit) == 0x000064, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_LineTraceSingle_ReturnValue) == 0x0000EC, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakHitResult_bBlockingHit) == 0x0000ED, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000EE, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakHitResult_Time) == 0x0000F0, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakHitResult_Distance) == 0x0000F4, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakHitResult_Location) == 0x0000F8, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakHitResult_ImpactPoint) == 0x000104, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakHitResult_Normal) == 0x000110, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakHitResult_ImpactNormal) == 0x00011C, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakHitResult_PhysMat) == 0x000128, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakHitResult_HitActor) == 0x000130, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakHitResult_HitComponent) == 0x000138, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakHitResult_HitBoneName) == 0x000140, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakHitResult_HitItem) == 0x000148, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakHitResult_ElementIndex) == 0x00014C, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakHitResult_FaceIndex) == 0x000150, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakHitResult_TraceStart) == 0x000154, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakHitResult_TraceEnd) == 0x000160, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakVector_X_1) == 0x00016C, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakVector_Y_1) == 0x000170, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_BreakVector_Z_1) == 0x000174, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000178, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_Add_FloatFloat_ReturnValue) == 0x00017C, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_AboveGround, CallFunc_MakeVector_ReturnValue_2) == 0x000180, "Member 'BP_TalkCamera_C_AboveGround::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.SetUnitVisibility
// 0x0010 (0x0010 - 0x0000)
struct BP_TalkCamera_C_SetUnitVisibility final
{
public:
	class ACharaBase_C*                           Chara;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_SetUnitVisibility) == 0x000008, "Wrong alignment on BP_TalkCamera_C_SetUnitVisibility");
static_assert(sizeof(BP_TalkCamera_C_SetUnitVisibility) == 0x000010, "Wrong size on BP_TalkCamera_C_SetUnitVisibility");
static_assert(offsetof(BP_TalkCamera_C_SetUnitVisibility, Chara) == 0x000000, "Member 'BP_TalkCamera_C_SetUnitVisibility::Chara' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetUnitVisibility, Visible) == 0x000008, "Member 'BP_TalkCamera_C_SetUnitVisibility::Visible' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetUnitVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_TalkCamera_C_SetUnitVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.GetCameraParam_MythFriendUp
// 0x0160 (0x0160 - 0x0000)
struct BP_TalkCamera_C_GetCameraParam_MythFriendUp final
{
public:
	struct FVector                                Eye;                                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Look;                                              // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LLookOffset;                                       // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LEyeOffset;                                        // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LLookHorizontalOffset;                             // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LEyeHorizontalOffset;                              // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTalkCameraParam                       CallFunc_GetMythFriendUpParam_ReturnValue;         // 0x0038(0x002C)(NoDestructor)
	struct FVector                                CallFunc_GetLookOffset_MythFriendUp_LookOffset;    // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEyeOffset_MythFriendUp_EyeOffset;      // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRocation_Daath_ReturnValue;     // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ModifyEyeFromCameraScale_ModifiedEye;     // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_GetCameraParam_MythFriendUp) == 0x000010, "Wrong alignment on BP_TalkCamera_C_GetCameraParam_MythFriendUp");
static_assert(sizeof(BP_TalkCamera_C_GetCameraParam_MythFriendUp) == 0x000160, "Wrong size on BP_TalkCamera_C_GetCameraParam_MythFriendUp");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, Eye) == 0x000000, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::Eye' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, Look) == 0x00000C, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::Look' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, LLookOffset) == 0x000018, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::LLookOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, LEyeOffset) == 0x000024, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::LEyeOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, LLookHorizontalOffset) == 0x000030, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::LLookHorizontalOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, LEyeHorizontalOffset) == 0x000034, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::LEyeHorizontalOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_GetMythFriendUpParam_ReturnValue) == 0x000038, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_GetMythFriendUpParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_GetLookOffset_MythFriendUp_LookOffset) == 0x000064, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_GetLookOffset_MythFriendUp_LookOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_Add_VectorVector_ReturnValue) == 0x00007C, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_MakeVector_ReturnValue_1) == 0x000088, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_GetEyeOffset_MythFriendUp_EyeOffset) == 0x000094, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_GetEyeOffset_MythFriendUp_EyeOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000A0, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_BreakTransform_Location) == 0x0000AC, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_BreakTransform_Rotation) == 0x0000B8, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_BreakTransform_Scale) == 0x0000C4, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_BreakTransform_Location_1) == 0x0000D0, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_BreakTransform_Rotation_1) == 0x0000DC, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_BreakTransform_Scale_1) == 0x0000E8, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_FindLookAtRocation_Daath_ReturnValue) == 0x0000F4, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_FindLookAtRocation_Daath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_TransformLocation_ReturnValue) == 0x000130, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_TransformLocation_ReturnValue_1) == 0x00013C, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetCameraParam_MythFriendUp, CallFunc_ModifyEyeFromCameraScale_ModifiedEye) == 0x000148, "Member 'BP_TalkCamera_C_GetCameraParam_MythFriendUp::CallFunc_ModifyEyeFromCameraScale_ModifiedEye' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.GetEyeOffset_MythFriendUp
// 0x0058 (0x0058 - 0x0000)
struct BP_TalkCamera_C_GetEyeOffset_MythFriendUp final
{
public:
	struct FVector                                EyeOffset;                                         // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetCharaParamComponent_self_CastInput; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UCharaParamComponent*                   CallFunc_BI_GetCharaParamComponent_Comp;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param_1;      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param_2;      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_GetEyeOffset_MythFriendUp) == 0x000008, "Wrong alignment on BP_TalkCamera_C_GetEyeOffset_MythFriendUp");
static_assert(sizeof(BP_TalkCamera_C_GetEyeOffset_MythFriendUp) == 0x000058, "Wrong size on BP_TalkCamera_C_GetEyeOffset_MythFriendUp");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_MythFriendUp, EyeOffset) == 0x000000, "Member 'BP_TalkCamera_C_GetEyeOffset_MythFriendUp::EyeOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_MythFriendUp, CallFunc_TalkDebug_GetCameraUpOffset_Param) == 0x00000C, "Member 'BP_TalkCamera_C_GetEyeOffset_MythFriendUp::CallFunc_TalkDebug_GetCameraUpOffset_Param' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_MythFriendUp, CallFunc_BI_GetCharaParamComponent_self_CastInput) == 0x000010, "Member 'BP_TalkCamera_C_GetEyeOffset_MythFriendUp::CallFunc_BI_GetCharaParamComponent_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_MythFriendUp, CallFunc_BI_GetCharaParamComponent_Comp) == 0x000020, "Member 'BP_TalkCamera_C_GetEyeOffset_MythFriendUp::CallFunc_BI_GetCharaParamComponent_Comp' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_MythFriendUp, CallFunc_TalkDebug_GetCameraUpOffset_Param_1) == 0x000028, "Member 'BP_TalkCamera_C_GetEyeOffset_MythFriendUp::CallFunc_TalkDebug_GetCameraUpOffset_Param_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_MythFriendUp, CallFunc_TalkDebug_GetCameraUpOffset_Param_2) == 0x00002C, "Member 'BP_TalkCamera_C_GetEyeOffset_MythFriendUp::CallFunc_TalkDebug_GetCameraUpOffset_Param_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_MythFriendUp, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'BP_TalkCamera_C_GetEyeOffset_MythFriendUp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_MythFriendUp, CallFunc_Add_VectorVector_ReturnValue) == 0x00003C, "Member 'BP_TalkCamera_C_GetEyeOffset_MythFriendUp::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_MythFriendUp, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000048, "Member 'BP_TalkCamera_C_GetEyeOffset_MythFriendUp::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.GetLookOffset_MythFriendUp
// 0x0058 (0x0058 - 0x0000)
struct BP_TalkCamera_C_GetLookOffset_MythFriendUp final
{
public:
	struct FVector                                LookOffset;                                        // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetCharaParamComponent_self_CastInput; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UCharaParamComponent*                   CallFunc_BI_GetCharaParamComponent_Comp;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param_1;      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param_2;      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_GetLookOffset_MythFriendUp) == 0x000008, "Wrong alignment on BP_TalkCamera_C_GetLookOffset_MythFriendUp");
static_assert(sizeof(BP_TalkCamera_C_GetLookOffset_MythFriendUp) == 0x000058, "Wrong size on BP_TalkCamera_C_GetLookOffset_MythFriendUp");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_MythFriendUp, LookOffset) == 0x000000, "Member 'BP_TalkCamera_C_GetLookOffset_MythFriendUp::LookOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_MythFriendUp, CallFunc_TalkDebug_GetCameraUpOffset_Param) == 0x00000C, "Member 'BP_TalkCamera_C_GetLookOffset_MythFriendUp::CallFunc_TalkDebug_GetCameraUpOffset_Param' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_MythFriendUp, CallFunc_BI_GetCharaParamComponent_self_CastInput) == 0x000010, "Member 'BP_TalkCamera_C_GetLookOffset_MythFriendUp::CallFunc_BI_GetCharaParamComponent_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_MythFriendUp, CallFunc_BI_GetCharaParamComponent_Comp) == 0x000020, "Member 'BP_TalkCamera_C_GetLookOffset_MythFriendUp::CallFunc_BI_GetCharaParamComponent_Comp' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_MythFriendUp, CallFunc_TalkDebug_GetCameraUpOffset_Param_1) == 0x000028, "Member 'BP_TalkCamera_C_GetLookOffset_MythFriendUp::CallFunc_TalkDebug_GetCameraUpOffset_Param_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_MythFriendUp, CallFunc_TalkDebug_GetCameraUpOffset_Param_2) == 0x00002C, "Member 'BP_TalkCamera_C_GetLookOffset_MythFriendUp::CallFunc_TalkDebug_GetCameraUpOffset_Param_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_MythFriendUp, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'BP_TalkCamera_C_GetLookOffset_MythFriendUp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_MythFriendUp, CallFunc_Add_VectorVector_ReturnValue) == 0x00003C, "Member 'BP_TalkCamera_C_GetLookOffset_MythFriendUp::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_MythFriendUp, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000048, "Member 'BP_TalkCamera_C_GetLookOffset_MythFriendUp::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.ResetDebug
// 0x0030 (0x0030 - 0x0000)
struct BP_TalkCamera_C_ResetDebug final
{
public:
	struct FTalkCameraParam                       K2Node_MakeStruct_TalkCameraParam;                 // 0x0000(0x002C)(NoDestructor)
	float                                         CallFunc_GetTargetHeight_Out;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_ResetDebug) == 0x000004, "Wrong alignment on BP_TalkCamera_C_ResetDebug");
static_assert(sizeof(BP_TalkCamera_C_ResetDebug) == 0x000030, "Wrong size on BP_TalkCamera_C_ResetDebug");
static_assert(offsetof(BP_TalkCamera_C_ResetDebug, K2Node_MakeStruct_TalkCameraParam) == 0x000000, "Member 'BP_TalkCamera_C_ResetDebug::K2Node_MakeStruct_TalkCameraParam' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ResetDebug, CallFunc_GetTargetHeight_Out) == 0x00002C, "Member 'BP_TalkCamera_C_ResetDebug::CallFunc_GetTargetHeight_Out' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.GetTargetHeight
// 0x006C (0x006C - 0x0000)
struct BP_TalkCamera_C_GetTargetHeight final
{
public:
	float                                         Out;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_GetTargetHeight) == 0x000004, "Wrong alignment on BP_TalkCamera_C_GetTargetHeight");
static_assert(sizeof(BP_TalkCamera_C_GetTargetHeight) == 0x00006C, "Wrong size on BP_TalkCamera_C_GetTargetHeight");
static_assert(offsetof(BP_TalkCamera_C_GetTargetHeight, Out) == 0x000000, "Member 'BP_TalkCamera_C_GetTargetHeight::Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetTargetHeight, CallFunc_BreakTransform_Location) == 0x000004, "Member 'BP_TalkCamera_C_GetTargetHeight::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetTargetHeight, CallFunc_BreakTransform_Rotation) == 0x000010, "Member 'BP_TalkCamera_C_GetTargetHeight::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetTargetHeight, CallFunc_BreakTransform_Scale) == 0x00001C, "Member 'BP_TalkCamera_C_GetTargetHeight::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetTargetHeight, CallFunc_BreakTransform_Location_1) == 0x000028, "Member 'BP_TalkCamera_C_GetTargetHeight::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetTargetHeight, CallFunc_BreakTransform_Rotation_1) == 0x000034, "Member 'BP_TalkCamera_C_GetTargetHeight::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetTargetHeight, CallFunc_BreakTransform_Scale_1) == 0x000040, "Member 'BP_TalkCamera_C_GetTargetHeight::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetTargetHeight, CallFunc_BreakVector_X) == 0x00004C, "Member 'BP_TalkCamera_C_GetTargetHeight::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetTargetHeight, CallFunc_BreakVector_Y) == 0x000050, "Member 'BP_TalkCamera_C_GetTargetHeight::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetTargetHeight, CallFunc_BreakVector_Z) == 0x000054, "Member 'BP_TalkCamera_C_GetTargetHeight::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetTargetHeight, CallFunc_BreakVector_X_1) == 0x000058, "Member 'BP_TalkCamera_C_GetTargetHeight::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetTargetHeight, CallFunc_BreakVector_Y_1) == 0x00005C, "Member 'BP_TalkCamera_C_GetTargetHeight::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetTargetHeight, CallFunc_BreakVector_Z_1) == 0x000060, "Member 'BP_TalkCamera_C_GetTargetHeight::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetTargetHeight, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_TalkCamera_C_GetTargetHeight::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetTargetHeight, CallFunc_Add_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_TalkCamera_C_GetTargetHeight::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.CalcCameraTransformOfTable
// 0x0080 (0x0080 - 0x0000)
struct BP_TalkCamera_C_CalcCameraTransformOfTable final
{
public:
	int32                                         Param_TableIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDebug;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B0D[0xB];                                     // 0x0005(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Out;                                               // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TALK_CAMERA_DATA_TYPE                       CallFunc_GetCameraTableDataType_ReturnValue;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TALK_CAMERA_DATA_TYPE                       Temp_byte_Variable;                                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TalkCamera                                  Temp_byte_Variable_1;                              // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TalkCamera                                  Temp_byte_Variable_2;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TalkCamera                                  Temp_byte_Variable_3;                              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TalkCamera                                  Temp_byte_Variable_4;                              // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TalkCamera                                  CallFunc_TalkDebug_GetCamera_TableBase_Out;        // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TalkCamera                                  K2Node_Select_Default;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_TalkCamera                                  K2Node_Select_Default_1;                           // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B0E[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_CalcCameraTransform_OutTransform;         // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_CalcCameraTransformOfTable) == 0x000010, "Wrong alignment on BP_TalkCamera_C_CalcCameraTransformOfTable");
static_assert(sizeof(BP_TalkCamera_C_CalcCameraTransformOfTable) == 0x000080, "Wrong size on BP_TalkCamera_C_CalcCameraTransformOfTable");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransformOfTable, Param_TableIndex) == 0x000000, "Member 'BP_TalkCamera_C_CalcCameraTransformOfTable::Param_TableIndex' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransformOfTable, IsDebug) == 0x000004, "Member 'BP_TalkCamera_C_CalcCameraTransformOfTable::IsDebug' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransformOfTable, Out) == 0x000010, "Member 'BP_TalkCamera_C_CalcCameraTransformOfTable::Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransformOfTable, Temp_bool_Variable) == 0x000040, "Member 'BP_TalkCamera_C_CalcCameraTransformOfTable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransformOfTable, CallFunc_GetCameraTableDataType_ReturnValue) == 0x000041, "Member 'BP_TalkCamera_C_CalcCameraTransformOfTable::CallFunc_GetCameraTableDataType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransformOfTable, Temp_byte_Variable) == 0x000042, "Member 'BP_TalkCamera_C_CalcCameraTransformOfTable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransformOfTable, Temp_byte_Variable_1) == 0x000043, "Member 'BP_TalkCamera_C_CalcCameraTransformOfTable::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransformOfTable, Temp_byte_Variable_2) == 0x000044, "Member 'BP_TalkCamera_C_CalcCameraTransformOfTable::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransformOfTable, Temp_byte_Variable_3) == 0x000045, "Member 'BP_TalkCamera_C_CalcCameraTransformOfTable::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransformOfTable, Temp_byte_Variable_4) == 0x000046, "Member 'BP_TalkCamera_C_CalcCameraTransformOfTable::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransformOfTable, CallFunc_TalkDebug_GetCamera_TableBase_Out) == 0x000047, "Member 'BP_TalkCamera_C_CalcCameraTransformOfTable::CallFunc_TalkDebug_GetCamera_TableBase_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransformOfTable, K2Node_Select_Default) == 0x000048, "Member 'BP_TalkCamera_C_CalcCameraTransformOfTable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransformOfTable, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000049, "Member 'BP_TalkCamera_C_CalcCameraTransformOfTable::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransformOfTable, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'BP_TalkCamera_C_CalcCameraTransformOfTable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransformOfTable, K2Node_Select_Default_1) == 0x00004B, "Member 'BP_TalkCamera_C_CalcCameraTransformOfTable::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcCameraTransformOfTable, CallFunc_CalcCameraTransform_OutTransform) == 0x000050, "Member 'BP_TalkCamera_C_CalcCameraTransformOfTable::CallFunc_CalcCameraTransform_OutTransform' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.SetTableDataIndex
// 0x0004 (0x0004 - 0x0000)
struct BP_TalkCamera_C_SetTableDataIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_SetTableDataIndex) == 0x000004, "Wrong alignment on BP_TalkCamera_C_SetTableDataIndex");
static_assert(sizeof(BP_TalkCamera_C_SetTableDataIndex) == 0x000004, "Wrong size on BP_TalkCamera_C_SetTableDataIndex");
static_assert(offsetof(BP_TalkCamera_C_SetTableDataIndex, Param_Index) == 0x000000, "Member 'BP_TalkCamera_C_SetTableDataIndex::Param_Index' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.UpdateShake
// 0x00E0 (0x00E0 - 0x0000)
struct BP_TalkCamera_C_UpdateShake final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TalkDebug_IsCameraShakeDisable_IsCameraShake; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B0F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCompCommon_C> CallFunc_UpdateComponent_self_CastInput;           // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateComponent_ContinueUpdate;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B10[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B11[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0054(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_TalkCamera_C_UpdateShake) == 0x000010, "Wrong alignment on BP_TalkCamera_C_UpdateShake");
static_assert(sizeof(BP_TalkCamera_C_UpdateShake) == 0x0000E0, "Wrong size on BP_TalkCamera_C_UpdateShake");
static_assert(offsetof(BP_TalkCamera_C_UpdateShake, DeltaSeconds) == 0x000000, "Member 'BP_TalkCamera_C_UpdateShake::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_UpdateShake, CallFunc_TalkDebug_IsCameraShakeDisable_IsCameraShake) == 0x000004, "Member 'BP_TalkCamera_C_UpdateShake::CallFunc_TalkDebug_IsCameraShakeDisable_IsCameraShake' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_UpdateShake, CallFunc_UpdateComponent_self_CastInput) == 0x000008, "Member 'BP_TalkCamera_C_UpdateShake::CallFunc_UpdateComponent_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_UpdateShake, CallFunc_UpdateComponent_ContinueUpdate) == 0x000018, "Member 'BP_TalkCamera_C_UpdateShake::CallFunc_UpdateComponent_ContinueUpdate' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_UpdateShake, CallFunc_GetRelativeTransform_ReturnValue) == 0x000020, "Member 'BP_TalkCamera_C_UpdateShake::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_UpdateShake, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_TalkCamera_C_UpdateShake::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_UpdateShake, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000054, "Member 'BP_TalkCamera_C_UpdateShake::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.ShakeCameraStart
// 0x00C0 (0x00C0 - 0x0000)
struct BP_TalkCamera_C_ShakeCameraStart final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TalkDebug_IsCameraShakeDisable_IsCameraShake; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B12[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0034(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_ShakeCameraStart) == 0x000010, "Wrong alignment on BP_TalkCamera_C_ShakeCameraStart");
static_assert(sizeof(BP_TalkCamera_C_ShakeCameraStart) == 0x0000C0, "Wrong size on BP_TalkCamera_C_ShakeCameraStart");
static_assert(offsetof(BP_TalkCamera_C_ShakeCameraStart, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'BP_TalkCamera_C_ShakeCameraStart::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ShakeCameraStart, CallFunc_TalkDebug_IsCameraShakeDisable_IsCameraShake) == 0x000030, "Member 'BP_TalkCamera_C_ShakeCameraStart::CallFunc_TalkDebug_IsCameraShakeDisable_IsCameraShake' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ShakeCameraStart, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_TalkCamera_C_ShakeCameraStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ShakeCameraStart, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000034, "Member 'BP_TalkCamera_C_ShakeCameraStart::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_ShakeCameraStart, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0000BC, "Member 'BP_TalkCamera_C_ShakeCameraStart::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.SetShakeParam
// 0x00A0 (0x00A0 - 0x0000)
struct BP_TalkCamera_C_SetShakeParam final
{
public:
	bool                                          Param_IsMythMode;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B13[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_5;       // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_6;       // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_7;       // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_3;               // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TalkDebug_IsCameraShakeDisable_IsCameraShake; // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_SetShakeParam) == 0x000004, "Wrong alignment on BP_TalkCamera_C_SetShakeParam");
static_assert(sizeof(BP_TalkCamera_C_SetShakeParam) == 0x0000A0, "Wrong size on BP_TalkCamera_C_SetShakeParam");
static_assert(offsetof(BP_TalkCamera_C_SetShakeParam, Param_IsMythMode) == 0x000000, "Member 'BP_TalkCamera_C_SetShakeParam::Param_IsMythMode' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetShakeParam, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'BP_TalkCamera_C_SetShakeParam::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetShakeParam, CallFunc_SelectFloat_ReturnValue_1) == 0x000008, "Member 'BP_TalkCamera_C_SetShakeParam::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetShakeParam, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00000C, "Member 'BP_TalkCamera_C_SetShakeParam::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetShakeParam, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000018, "Member 'BP_TalkCamera_C_SetShakeParam::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetShakeParam, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000024, "Member 'BP_TalkCamera_C_SetShakeParam::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetShakeParam, CallFunc_SelectVector_ReturnValue) == 0x000030, "Member 'BP_TalkCamera_C_SetShakeParam::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetShakeParam, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x00003C, "Member 'BP_TalkCamera_C_SetShakeParam::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetShakeParam, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000048, "Member 'BP_TalkCamera_C_SetShakeParam::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetShakeParam, CallFunc_SelectVector_ReturnValue_1) == 0x000054, "Member 'BP_TalkCamera_C_SetShakeParam::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetShakeParam, CallFunc_Multiply_VectorFloat_ReturnValue_5) == 0x000060, "Member 'BP_TalkCamera_C_SetShakeParam::CallFunc_Multiply_VectorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetShakeParam, CallFunc_Multiply_VectorFloat_ReturnValue_6) == 0x00006C, "Member 'BP_TalkCamera_C_SetShakeParam::CallFunc_Multiply_VectorFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetShakeParam, CallFunc_SelectVector_ReturnValue_2) == 0x000078, "Member 'BP_TalkCamera_C_SetShakeParam::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetShakeParam, CallFunc_Multiply_VectorFloat_ReturnValue_7) == 0x000084, "Member 'BP_TalkCamera_C_SetShakeParam::CallFunc_Multiply_VectorFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetShakeParam, CallFunc_SelectVector_ReturnValue_3) == 0x000090, "Member 'BP_TalkCamera_C_SetShakeParam::CallFunc_SelectVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetShakeParam, CallFunc_TalkDebug_IsCameraShakeDisable_IsCameraShake) == 0x00009C, "Member 'BP_TalkCamera_C_SetShakeParam::CallFunc_TalkDebug_IsCameraShakeDisable_IsCameraShake' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetShakeParam, CallFunc_IsValid_ReturnValue) == 0x00009D, "Member 'BP_TalkCamera_C_SetShakeParam::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.MoveCamera_Status
// 0x0270 (0x0270 - 0x0000)
struct BP_TalkCamera_C_MoveCamera_Status final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEase;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B14[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Param_StatusModel;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DevilID;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLookOffset_Status_LookOffset;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_TalkCameraOffset                   CallFunc_SearchTalkCameraOffsetTable_CameraOffset; // 0x0020(0x0028)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEyeOffset_Status_EyeOffset;            // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B15[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_1;        // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Find_Look_at_Rotation_ZOnly_ReturnValue;  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B16[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_CalcBattleCameraScale_self_CastInput;  // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BI_CalcBattleCameraScale_Scale;           // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_2;        // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B17[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_3;        // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ModifyEyeFromCameraScale_ModifiedEye;     // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B18[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Find_Look_at_Rotation_ZOnly_ReturnValue_1; // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B19[0x4];                                     // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0200(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TransformToString_ReturnValue;       // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_MoveCamera_Status) == 0x000010, "Wrong alignment on BP_TalkCamera_C_MoveCamera_Status");
static_assert(sizeof(BP_TalkCamera_C_MoveCamera_Status) == 0x000270, "Wrong size on BP_TalkCamera_C_MoveCamera_Status");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, Time) == 0x000000, "Member 'BP_TalkCamera_C_MoveCamera_Status::Time' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, IsEase) == 0x000004, "Member 'BP_TalkCamera_C_MoveCamera_Status::IsEase' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, Param_StatusModel) == 0x000008, "Member 'BP_TalkCamera_C_MoveCamera_Status::Param_StatusModel' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, DevilID) == 0x000010, "Member 'BP_TalkCamera_C_MoveCamera_Status::DevilID' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_GetLookOffset_Status_LookOffset) == 0x000014, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_GetLookOffset_Status_LookOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_SearchTalkCameraOffsetTable_CameraOffset) == 0x000020, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_SearchTalkCameraOffsetTable_CameraOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_GetEyeOffset_Status_EyeOffset) == 0x000048, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_GetEyeOffset_Status_EyeOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_MakeVector_ReturnValue) == 0x000054, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_MakeVector_ReturnValue_1) == 0x000060, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Add_VectorVector_ReturnValue) == 0x00006C, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000078, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Conv_VectorToString_ReturnValue) == 0x000088, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Conv_VectorToString_ReturnValue_1) == 0x000098, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Conv_VectorToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A8, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B8, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_BreakTransform_Location) == 0x0000C8, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_BreakTransform_Rotation) == 0x0000D4, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_BreakTransform_Scale) == 0x0000E0, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_BreakTransform_Location_1) == 0x0000EC, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_BreakTransform_Rotation_1) == 0x0000F8, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_BreakTransform_Scale_1) == 0x000104, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Find_Look_at_Rotation_ZOnly_ReturnValue) == 0x000110, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Find_Look_at_Rotation_ZOnly_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_BI_CalcBattleCameraScale_self_CastInput) == 0x000150, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_BI_CalcBattleCameraScale_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_BI_CalcBattleCameraScale_Scale) == 0x000160, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_BI_CalcBattleCameraScale_Scale' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_TransformLocation_ReturnValue) == 0x000164, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Conv_FloatToString_ReturnValue) == 0x000170, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Conv_VectorToString_ReturnValue_2) == 0x000180, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Conv_VectorToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000190, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_TransformLocation_ReturnValue_1) == 0x0001A0, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Conv_VectorToString_ReturnValue_3) == 0x0001B0, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Conv_VectorToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_ModifyEyeFromCameraScale_ModifiedEye) == 0x0001C0, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_ModifyEyeFromCameraScale_ModifiedEye' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0001D0, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Find_Look_at_Rotation_ZOnly_ReturnValue_1) == 0x0001E0, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Find_Look_at_Rotation_ZOnly_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0001F0, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_MakeTransform_ReturnValue_1) == 0x000200, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000230, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Conv_TransformToString_ReturnValue) == 0x000240, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Conv_TransformToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000250, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Status, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000260, "Member 'BP_TalkCamera_C_MoveCamera_Status::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.SearchTalkCameraOffsetTable
// 0x0078 (0x0078 - 0x0000)
struct BP_TalkCamera_C_SearchTalkCameraOffsetTable final
{
public:
	int32                                         DevilID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_TalkCameraOffset                   CameraOffset;                                      // 0x0004(0x0028)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1A[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1B[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_TalkCameraOffset                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x004C(0x0028)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_SearchTalkCameraOffsetTable) == 0x000008, "Wrong alignment on BP_TalkCamera_C_SearchTalkCameraOffsetTable");
static_assert(sizeof(BP_TalkCamera_C_SearchTalkCameraOffsetTable) == 0x000078, "Wrong size on BP_TalkCamera_C_SearchTalkCameraOffsetTable");
static_assert(offsetof(BP_TalkCamera_C_SearchTalkCameraOffsetTable, DevilID) == 0x000000, "Member 'BP_TalkCamera_C_SearchTalkCameraOffsetTable::DevilID' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SearchTalkCameraOffsetTable, CameraOffset) == 0x000004, "Member 'BP_TalkCamera_C_SearchTalkCameraOffsetTable::CameraOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SearchTalkCameraOffsetTable, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'BP_TalkCamera_C_SearchTalkCameraOffsetTable::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SearchTalkCameraOffsetTable, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'BP_TalkCamera_C_SearchTalkCameraOffsetTable::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SearchTalkCameraOffsetTable, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_TalkCamera_C_SearchTalkCameraOffsetTable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SearchTalkCameraOffsetTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x00004C, "Member 'BP_TalkCamera_C_SearchTalkCameraOffsetTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SearchTalkCameraOffsetTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000074, "Member 'BP_TalkCamera_C_SearchTalkCameraOffsetTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.CalcBaseLocationStatus
// 0x0260 (0x0260 - 0x0000)
struct BP_TalkCamera_C_CalcBaseLocationStatus final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	class FString                                 CallFunc_Conv_TransformToString_ReturnValue;       // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_Position_GetPlayerRotate_Out;   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1C[0xC];                                     // 0x0064(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Find_Look_at_Rotation_ZOnly_ReturnValue;  // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1D[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1E[0x2];                                     // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1F[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B20[0x4];                                     // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0230(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_CalcBaseLocationStatus) == 0x000010, "Wrong alignment on BP_TalkCamera_C_CalcBaseLocationStatus");
static_assert(sizeof(BP_TalkCamera_C_CalcBaseLocationStatus) == 0x000260, "Wrong size on BP_TalkCamera_C_CalcBaseLocationStatus");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, Temp_object_Variable) == 0x000000, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_Conv_TransformToString_ReturnValue) == 0x000010, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_Conv_TransformToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakTransform_Location) == 0x000030, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakTransform_Rotation) == 0x00003C, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakTransform_Scale) == 0x000048, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_TalkDebug_Position_GetPlayerRotate_Out) == 0x000054, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_TalkDebug_Position_GetPlayerRotate_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_GetActorForwardVector_ReturnValue) == 0x000058, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_GetSocketTransform_ReturnValue) == 0x000070, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_Vector_Normal2D_ReturnValue) == 0x0000A0, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000AC, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B8, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_Find_Look_at_Rotation_ZOnly_ReturnValue) == 0x0000C4, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_Find_Look_at_Rotation_ZOnly_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D0, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakRotator_Roll) == 0x0000DC, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakRotator_Pitch) == 0x0000E0, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakRotator_Yaw) == 0x0000E4, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000E8, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000F4, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_LineTraceSingle_OutHit) == 0x0000F8, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_LineTraceSingle_ReturnValue) == 0x000180, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_MakeRotator_ReturnValue) == 0x000184, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakHitResult_bBlockingHit) == 0x000190, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakHitResult_bInitialOverlap) == 0x000191, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakHitResult_Time) == 0x000194, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakHitResult_Distance) == 0x000198, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakHitResult_Location) == 0x00019C, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A8, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakHitResult_Normal) == 0x0001B4, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakHitResult_ImpactNormal) == 0x0001C0, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakHitResult_PhysMat) == 0x0001D0, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakHitResult_HitActor) == 0x0001D8, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakHitResult_HitComponent) == 0x0001E0, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakHitResult_HitBoneName) == 0x0001E8, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakHitResult_HitItem) == 0x0001F0, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakHitResult_ElementIndex) == 0x0001F4, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakHitResult_FaceIndex) == 0x0001F8, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakHitResult_TraceStart) == 0x0001FC, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_BreakHitResult_TraceEnd) == 0x000208, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_SelectVector_ReturnValue) == 0x000214, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000220, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_CalcBaseLocationStatus, CallFunc_MakeTransform_ReturnValue) == 0x000230, "Member 'BP_TalkCamera_C_CalcBaseLocationStatus::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.GetLookOffset_Status
// 0x0030 (0x0030 - 0x0000)
struct BP_TalkCamera_C_GetLookOffset_Status final
{
public:
	struct FVector                                LookOffset;                                        // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param_1;      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param_2;      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_GetLookOffset_Status) == 0x000004, "Wrong alignment on BP_TalkCamera_C_GetLookOffset_Status");
static_assert(sizeof(BP_TalkCamera_C_GetLookOffset_Status) == 0x000030, "Wrong size on BP_TalkCamera_C_GetLookOffset_Status");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_Status, LookOffset) == 0x000000, "Member 'BP_TalkCamera_C_GetLookOffset_Status::LookOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_Status, CallFunc_TalkDebug_GetCameraUpOffset_Param) == 0x00000C, "Member 'BP_TalkCamera_C_GetLookOffset_Status::CallFunc_TalkDebug_GetCameraUpOffset_Param' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_Status, CallFunc_TalkDebug_GetCameraUpOffset_Param_1) == 0x000010, "Member 'BP_TalkCamera_C_GetLookOffset_Status::CallFunc_TalkDebug_GetCameraUpOffset_Param_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_Status, CallFunc_TalkDebug_GetCameraUpOffset_Param_2) == 0x000014, "Member 'BP_TalkCamera_C_GetLookOffset_Status::CallFunc_TalkDebug_GetCameraUpOffset_Param_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_Status, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_TalkCamera_C_GetLookOffset_Status::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetLookOffset_Status, CallFunc_Add_VectorVector_ReturnValue) == 0x000024, "Member 'BP_TalkCamera_C_GetLookOffset_Status::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.GetEyeOffset_Status
// 0x0030 (0x0030 - 0x0000)
struct BP_TalkCamera_C_GetEyeOffset_Status final
{
public:
	struct FVector                                EyeOffset;                                         // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param_1;      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TalkDebug_GetCameraUpOffset_Param_2;      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_GetEyeOffset_Status) == 0x000004, "Wrong alignment on BP_TalkCamera_C_GetEyeOffset_Status");
static_assert(sizeof(BP_TalkCamera_C_GetEyeOffset_Status) == 0x000030, "Wrong size on BP_TalkCamera_C_GetEyeOffset_Status");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_Status, EyeOffset) == 0x000000, "Member 'BP_TalkCamera_C_GetEyeOffset_Status::EyeOffset' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_Status, CallFunc_TalkDebug_GetCameraUpOffset_Param) == 0x00000C, "Member 'BP_TalkCamera_C_GetEyeOffset_Status::CallFunc_TalkDebug_GetCameraUpOffset_Param' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_Status, CallFunc_TalkDebug_GetCameraUpOffset_Param_1) == 0x000010, "Member 'BP_TalkCamera_C_GetEyeOffset_Status::CallFunc_TalkDebug_GetCameraUpOffset_Param_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_Status, CallFunc_TalkDebug_GetCameraUpOffset_Param_2) == 0x000014, "Member 'BP_TalkCamera_C_GetEyeOffset_Status::CallFunc_TalkDebug_GetCameraUpOffset_Param_2' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_Status, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_TalkCamera_C_GetEyeOffset_Status::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_GetEyeOffset_Status, CallFunc_Add_VectorVector_ReturnValue) == 0x000024, "Member 'BP_TalkCamera_C_GetEyeOffset_Status::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.MoveCamera_Quiz
// 0x01B0 (0x01B0 - 0x0000)
struct BP_TalkCamera_C_MoveCamera_Quiz final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEase;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B21[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Param_StatusModel;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DevilID;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B22[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTalkQuizCameraTableRow                CallFunc_SearchQuizTable_QuizTableRow;             // 0x0018(0x0028)()
	TScriptInterface<class IBPI_CharaBaseAccessor_C> CallFunc_BI_GetCapsuleComponent_self_CastInput;    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UCapsuleComponent*                      CallFunc_BI_GetCapsuleComponent_Param;             // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B23[0xC];                                     // 0x0074(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0080(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B24[0xC];                                     // 0x0124(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_TransformToString_ReturnValue;       // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TalkCamera_C_MoveCamera_Quiz) == 0x000010, "Wrong alignment on BP_TalkCamera_C_MoveCamera_Quiz");
static_assert(sizeof(BP_TalkCamera_C_MoveCamera_Quiz) == 0x0001B0, "Wrong size on BP_TalkCamera_C_MoveCamera_Quiz");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, Time) == 0x000000, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::Time' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, IsEase) == 0x000004, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::IsEase' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, Param_StatusModel) == 0x000008, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::Param_StatusModel' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, DevilID) == 0x000010, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::DevilID' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_SearchQuizTable_QuizTableRow) == 0x000018, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_SearchQuizTable_QuizTableRow' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_BI_GetCapsuleComponent_self_CastInput) == 0x000040, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_BI_GetCapsuleComponent_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_BI_GetCapsuleComponent_Param) == 0x000050, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_BI_GetCapsuleComponent_Param' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000058, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_MakeRotator_ReturnValue) == 0x00005C, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_GetTransform_ReturnValue) == 0x000080, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_BreakTransform_Location) == 0x0000E0, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_BreakTransform_Rotation) == 0x0000EC, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_BreakTransform_Scale) == 0x0000F8, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_BreakVector_X) == 0x000104, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_BreakVector_Y) == 0x000108, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_BreakVector_Z) == 0x00010C, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000110, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_Add_FloatFloat_ReturnValue) == 0x000114, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_MakeVector_ReturnValue_1) == 0x000118, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_MakeTransform_ReturnValue_1) == 0x000130, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_Conv_TransformToString_ReturnValue) == 0x000160, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_Conv_TransformToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_ComposeTransforms_ReturnValue) == 0x000170, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_Quiz, CallFunc_Concat_StrStr_ReturnValue) == 0x0001A0, "Member 'BP_TalkCamera_C_MoveCamera_Quiz::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.SearchQuizTable
// 0x0080 (0x0080 - 0x0000)
struct BP_TalkCamera_C_SearchQuizTable final
{
public:
	int32                                         DevilID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B25[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTalkQuizCameraTableRow                QuizTableRow;                                      // 0x0008(0x0028)(Parm, OutParm)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B26[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B27[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTalkQuizCameraTableRow                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0028)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_SearchQuizTable) == 0x000008, "Wrong alignment on BP_TalkCamera_C_SearchQuizTable");
static_assert(sizeof(BP_TalkCamera_C_SearchQuizTable) == 0x000080, "Wrong size on BP_TalkCamera_C_SearchQuizTable");
static_assert(offsetof(BP_TalkCamera_C_SearchQuizTable, DevilID) == 0x000000, "Member 'BP_TalkCamera_C_SearchQuizTable::DevilID' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SearchQuizTable, QuizTableRow) == 0x000008, "Member 'BP_TalkCamera_C_SearchQuizTable::QuizTableRow' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SearchQuizTable, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'BP_TalkCamera_C_SearchQuizTable::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SearchQuizTable, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_TalkCamera_C_SearchQuizTable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SearchQuizTable, CallFunc_Conv_StringToName_ReturnValue) == 0x000044, "Member 'BP_TalkCamera_C_SearchQuizTable::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SearchQuizTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'BP_TalkCamera_C_SearchQuizTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SearchQuizTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000078, "Member 'BP_TalkCamera_C_SearchQuizTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.SetQuizTable
// 0x00A8 (0x00A8 - 0x0000)
struct BP_TalkCamera_C_SetQuizTable final
{
public:
	int32                                         DevilID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B28[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTalkQuizCameraTableRow                InTableRow;                                        // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B29[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTalkQuizCameraTableRow                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0028)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B2A[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTalkQuizCameraTableRow                K2Node_SetFieldsInStruct_StructOut;                // 0x0080(0x0028)()
};
static_assert(alignof(BP_TalkCamera_C_SetQuizTable) == 0x000008, "Wrong alignment on BP_TalkCamera_C_SetQuizTable");
static_assert(sizeof(BP_TalkCamera_C_SetQuizTable) == 0x0000A8, "Wrong size on BP_TalkCamera_C_SetQuizTable");
static_assert(offsetof(BP_TalkCamera_C_SetQuizTable, DevilID) == 0x000000, "Member 'BP_TalkCamera_C_SetQuizTable::DevilID' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetQuizTable, InTableRow) == 0x000008, "Member 'BP_TalkCamera_C_SetQuizTable::InTableRow' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetQuizTable, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'BP_TalkCamera_C_SetQuizTable::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetQuizTable, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'BP_TalkCamera_C_SetQuizTable::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetQuizTable, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_TalkCamera_C_SetQuizTable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetQuizTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'BP_TalkCamera_C_SetQuizTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetQuizTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000078, "Member 'BP_TalkCamera_C_SetQuizTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_SetQuizTable, K2Node_SetFieldsInStruct_StructOut) == 0x000080, "Member 'BP_TalkCamera_C_SetQuizTable::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.MoveCamera_UniqueSkill
// 0x00B0 (0x00B0 - 0x0000)
struct BP_TalkCamera_C_MoveCamera_UniqueSkill final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEase;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B2B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           Param_UniqueSkillModel;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DevilID;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetHeight_Out;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUniqueSkillCamera_OutLocation;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcUniqueSkillCamera_OutRotation;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B2C[0x8];                                     // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_MoveCamera_UniqueSkill) == 0x000010, "Wrong alignment on BP_TalkCamera_C_MoveCamera_UniqueSkill");
static_assert(sizeof(BP_TalkCamera_C_MoveCamera_UniqueSkill) == 0x0000B0, "Wrong size on BP_TalkCamera_C_MoveCamera_UniqueSkill");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_UniqueSkill, Time) == 0x000000, "Member 'BP_TalkCamera_C_MoveCamera_UniqueSkill::Time' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_UniqueSkill, IsEase) == 0x000004, "Member 'BP_TalkCamera_C_MoveCamera_UniqueSkill::IsEase' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_UniqueSkill, Param_UniqueSkillModel) == 0x000008, "Member 'BP_TalkCamera_C_MoveCamera_UniqueSkill::Param_UniqueSkillModel' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_UniqueSkill, DevilID) == 0x000010, "Member 'BP_TalkCamera_C_MoveCamera_UniqueSkill::DevilID' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_UniqueSkill, CallFunc_GetTargetHeight_Out) == 0x000014, "Member 'BP_TalkCamera_C_MoveCamera_UniqueSkill::CallFunc_GetTargetHeight_Out' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_UniqueSkill, CallFunc_CalcUniqueSkillCamera_OutLocation) == 0x000018, "Member 'BP_TalkCamera_C_MoveCamera_UniqueSkill::CallFunc_CalcUniqueSkillCamera_OutLocation' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_UniqueSkill, CallFunc_CalcUniqueSkillCamera_OutRotation) == 0x000024, "Member 'BP_TalkCamera_C_MoveCamera_UniqueSkill::CallFunc_CalcUniqueSkillCamera_OutRotation' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_UniqueSkill, CallFunc_BreakVector_X) == 0x000030, "Member 'BP_TalkCamera_C_MoveCamera_UniqueSkill::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_UniqueSkill, CallFunc_BreakVector_Y) == 0x000034, "Member 'BP_TalkCamera_C_MoveCamera_UniqueSkill::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_UniqueSkill, CallFunc_BreakVector_Z) == 0x000038, "Member 'BP_TalkCamera_C_MoveCamera_UniqueSkill::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_UniqueSkill, CallFunc_MakeRotator_ReturnValue) == 0x00003C, "Member 'BP_TalkCamera_C_MoveCamera_UniqueSkill::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_UniqueSkill, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'BP_TalkCamera_C_MoveCamera_UniqueSkill::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TalkCamera_C_MoveCamera_UniqueSkill, CallFunc_ComposeTransforms_ReturnValue) == 0x000080, "Member 'BP_TalkCamera_C_MoveCamera_UniqueSkill::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.ShakeCameraRestart
// 0x0001 (0x0001 - 0x0000)
struct BP_TalkCamera_C_ShakeCameraRestart final
{
public:
	bool                                          CallFunc_TalkDebug_IsCameraShakeDisable_IsCameraShake; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_ShakeCameraRestart) == 0x000001, "Wrong alignment on BP_TalkCamera_C_ShakeCameraRestart");
static_assert(sizeof(BP_TalkCamera_C_ShakeCameraRestart) == 0x000001, "Wrong size on BP_TalkCamera_C_ShakeCameraRestart");
static_assert(offsetof(BP_TalkCamera_C_ShakeCameraRestart, CallFunc_TalkDebug_IsCameraShakeDisable_IsCameraShake) == 0x000000, "Member 'BP_TalkCamera_C_ShakeCameraRestart::CallFunc_TalkDebug_IsCameraShakeDisable_IsCameraShake' has a wrong offset!");

// Function BP_TalkCamera.BP_TalkCamera_C.ShakeCameraReset
// 0x0001 (0x0001 - 0x0000)
struct BP_TalkCamera_C_ShakeCameraReset final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TalkCamera_C_ShakeCameraReset) == 0x000001, "Wrong alignment on BP_TalkCamera_C_ShakeCameraReset");
static_assert(sizeof(BP_TalkCamera_C_ShakeCameraReset) == 0x000001, "Wrong size on BP_TalkCamera_C_ShakeCameraReset");
static_assert(offsetof(BP_TalkCamera_C_ShakeCameraReset, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_TalkCamera_C_ShakeCameraReset::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

