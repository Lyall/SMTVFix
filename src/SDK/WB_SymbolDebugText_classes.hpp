#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_SymbolDebugText

#include "Basic.hpp"

#include "E_MapSymbolState_structs.hpp"
#include "Engine_structs.hpp"
#include "E_Symbol_ActPattern_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_SymbolDebugText.WB_SymbolDebugText_C
// 0x0090 (0x02F0 - 0x0260)
class UWB_SymbolDebugText_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             ActPatternText;                                    // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CounterText;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NameText;                                          // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SpeeedText;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             StateText;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_LevelDiff;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         DevilID;                                           // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Devilname;                                         // 0x02A0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<E_Symbol_ActPattern>                   ActPatternList;                                    // 0x02B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         ActIndex;                                          // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Counter;                                           // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CounterEnd;                                        // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MapSymbolState                              State;                                             // 0x02D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Speed;                                             // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PrevLocation;                                      // 0x02DC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DevilLevel;                                        // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_SymbolDebugText(int32 EntryPoint);
	void Construct();
	void Update(TArray<E_Symbol_ActPattern>& Param_ActPatternList, int32 Param_ActIndex, float Param_Counter, float Param_CounterEnd, E_MapSymbolState Param_State, float Param_Speed, bool Discovery_LevelDiff);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_SymbolDebugText_C">();
	}
	static class UWB_SymbolDebugText_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_SymbolDebugText_C>();
	}
};
static_assert(alignof(UWB_SymbolDebugText_C) == 0x000008, "Wrong alignment on UWB_SymbolDebugText_C");
static_assert(sizeof(UWB_SymbolDebugText_C) == 0x0002F0, "Wrong size on UWB_SymbolDebugText_C");
static_assert(offsetof(UWB_SymbolDebugText_C, UberGraphFrame) == 0x000260, "Member 'UWB_SymbolDebugText_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_SymbolDebugText_C, ActPatternText) == 0x000268, "Member 'UWB_SymbolDebugText_C::ActPatternText' has a wrong offset!");
static_assert(offsetof(UWB_SymbolDebugText_C, CounterText) == 0x000270, "Member 'UWB_SymbolDebugText_C::CounterText' has a wrong offset!");
static_assert(offsetof(UWB_SymbolDebugText_C, NameText) == 0x000278, "Member 'UWB_SymbolDebugText_C::NameText' has a wrong offset!");
static_assert(offsetof(UWB_SymbolDebugText_C, SpeeedText) == 0x000280, "Member 'UWB_SymbolDebugText_C::SpeeedText' has a wrong offset!");
static_assert(offsetof(UWB_SymbolDebugText_C, StateText) == 0x000288, "Member 'UWB_SymbolDebugText_C::StateText' has a wrong offset!");
static_assert(offsetof(UWB_SymbolDebugText_C, Text_LevelDiff) == 0x000290, "Member 'UWB_SymbolDebugText_C::Text_LevelDiff' has a wrong offset!");
static_assert(offsetof(UWB_SymbolDebugText_C, DevilID) == 0x000298, "Member 'UWB_SymbolDebugText_C::DevilID' has a wrong offset!");
static_assert(offsetof(UWB_SymbolDebugText_C, Devilname) == 0x0002A0, "Member 'UWB_SymbolDebugText_C::Devilname' has a wrong offset!");
static_assert(offsetof(UWB_SymbolDebugText_C, ActPatternList) == 0x0002B8, "Member 'UWB_SymbolDebugText_C::ActPatternList' has a wrong offset!");
static_assert(offsetof(UWB_SymbolDebugText_C, ActIndex) == 0x0002C8, "Member 'UWB_SymbolDebugText_C::ActIndex' has a wrong offset!");
static_assert(offsetof(UWB_SymbolDebugText_C, Counter) == 0x0002CC, "Member 'UWB_SymbolDebugText_C::Counter' has a wrong offset!");
static_assert(offsetof(UWB_SymbolDebugText_C, CounterEnd) == 0x0002D0, "Member 'UWB_SymbolDebugText_C::CounterEnd' has a wrong offset!");
static_assert(offsetof(UWB_SymbolDebugText_C, State) == 0x0002D4, "Member 'UWB_SymbolDebugText_C::State' has a wrong offset!");
static_assert(offsetof(UWB_SymbolDebugText_C, Speed) == 0x0002D8, "Member 'UWB_SymbolDebugText_C::Speed' has a wrong offset!");
static_assert(offsetof(UWB_SymbolDebugText_C, PrevLocation) == 0x0002DC, "Member 'UWB_SymbolDebugText_C::PrevLocation' has a wrong offset!");
static_assert(offsetof(UWB_SymbolDebugText_C, DevilLevel) == 0x0002E8, "Member 'UWB_SymbolDebugText_C::DevilLevel' has a wrong offset!");

}

