#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_BattleField

#include "Basic.hpp"

#include "Project_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BattleFieldTableItem_ST_structs.hpp"


namespace SDK::Params
{

// Function BPL_BattleField.BPL_BattleField_C.BattleFieldGetLoadArray
// 0x0100 (0x0100 - 0x0000)
struct BPL_BattleField_C_BattleFieldGetLoadArray final
{
public:
	int32                                         MapId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPrimaryAssetId>                LoadArray;                                         // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FPrimaryAssetId>                L_Array;                                           // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F47[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0048(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F48[0xC];                                     // 0x0064(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleFieldTableItem_ST               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0070(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F49[0x2];                                     // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_BattleField_C_BattleFieldGetLoadArray) == 0x000010, "Wrong alignment on BPL_BattleField_C_BattleFieldGetLoadArray");
static_assert(sizeof(BPL_BattleField_C_BattleFieldGetLoadArray) == 0x000100, "Wrong size on BPL_BattleField_C_BattleFieldGetLoadArray");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, MapId) == 0x000000, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::MapId' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, AreaId) == 0x000004, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::AreaId' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, __WorldContext) == 0x000008, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, LoadArray) == 0x000010, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::LoadArray' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, L_Array) == 0x000020, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::L_Array' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000048, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, CallFunc_Array_Get_Item) == 0x000058, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, CallFunc_GetDataTableRowFromName_OutRow) == 0x000070, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000E0, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, CallFunc_Less_IntInt_ReturnValue) == 0x0000E1, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E4, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000EC, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000ED, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000EE, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0000EF, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetLoadArray, CallFunc_BooleanOR_ReturnValue) == 0x0000F0, "Member 'BPL_BattleField_C_BattleFieldGetLoadArray::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BPL_BattleField.BPL_BattleField_C.BattleFieldGetDataByBattleFieldID
// 0x01B0 (0x01B0 - 0x0000)
struct BPL_BattleField_C_BattleFieldGetDataByBattleFieldID final
{
public:
	int32                                         BattleFIeldID;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattleFieldTableItem_ST               RowData;                                           // 0x0010(0x0070)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F4B[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattleFieldTableItem_ST               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0090(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F4C[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0108(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4D[0xC];                                     // 0x0124(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleFieldTableItem_ST               CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0130(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID) == 0x000010, "Wrong alignment on BPL_BattleField_C_BattleFieldGetDataByBattleFieldID");
static_assert(sizeof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID) == 0x0001B0, "Wrong size on BPL_BattleField_C_BattleFieldGetDataByBattleFieldID");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID, BattleFIeldID) == 0x000000, "Member 'BPL_BattleField_C_BattleFieldGetDataByBattleFieldID::BattleFIeldID' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID, __WorldContext) == 0x000008, "Member 'BPL_BattleField_C_BattleFieldGetDataByBattleFieldID::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID, RowData) == 0x000010, "Member 'BPL_BattleField_C_BattleFieldGetDataByBattleFieldID::RowData' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID, IsValid) == 0x000080, "Member 'BPL_BattleField_C_BattleFieldGetDataByBattleFieldID::IsValid' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID, Temp_int_Array_Index_Variable) == 0x000084, "Member 'BPL_BattleField_C_BattleFieldGetDataByBattleFieldID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'BPL_BattleField_C_BattleFieldGetDataByBattleFieldID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BPL_BattleField_C_BattleFieldGetDataByBattleFieldID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID, CallFunc_GetDataTableRowFromName_OutRow) == 0x000090, "Member 'BPL_BattleField_C_BattleFieldGetDataByBattleFieldID::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000100, "Member 'BPL_BattleField_C_BattleFieldGetDataByBattleFieldID::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000108, "Member 'BPL_BattleField_C_BattleFieldGetDataByBattleFieldID::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID, CallFunc_Array_Get_Item) == 0x000118, "Member 'BPL_BattleField_C_BattleFieldGetDataByBattleFieldID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BPL_BattleField_C_BattleFieldGetDataByBattleFieldID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000130, "Member 'BPL_BattleField_C_BattleFieldGetDataByBattleFieldID::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0001A0, "Member 'BPL_BattleField_C_BattleFieldGetDataByBattleFieldID::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID, CallFunc_Less_IntInt_ReturnValue) == 0x0001A1, "Member 'BPL_BattleField_C_BattleFieldGetDataByBattleFieldID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByBattleFieldID, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001A2, "Member 'BPL_BattleField_C_BattleFieldGetDataByBattleFieldID::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BPL_BattleField.BPL_BattleField_C.BattleFieldGetDataByMapID
// 0x01B0 (0x01B0 - 0x0000)
struct BPL_BattleField_C_BattleFieldGetDataByMapID final
{
public:
	int32                                         MapId;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattleFieldTableItem_ST               RowData;                                           // 0x0010(0x0070)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F4E[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattleFieldTableItem_ST               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0090(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F4F[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0108(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F50[0xC];                                     // 0x0124(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleFieldTableItem_ST               CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0130(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPL_BattleField_C_BattleFieldGetDataByMapID) == 0x000010, "Wrong alignment on BPL_BattleField_C_BattleFieldGetDataByMapID");
static_assert(sizeof(BPL_BattleField_C_BattleFieldGetDataByMapID) == 0x0001B0, "Wrong size on BPL_BattleField_C_BattleFieldGetDataByMapID");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByMapID, MapId) == 0x000000, "Member 'BPL_BattleField_C_BattleFieldGetDataByMapID::MapId' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByMapID, AreaId) == 0x000004, "Member 'BPL_BattleField_C_BattleFieldGetDataByMapID::AreaId' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByMapID, __WorldContext) == 0x000008, "Member 'BPL_BattleField_C_BattleFieldGetDataByMapID::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByMapID, RowData) == 0x000010, "Member 'BPL_BattleField_C_BattleFieldGetDataByMapID::RowData' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByMapID, IsValid) == 0x000080, "Member 'BPL_BattleField_C_BattleFieldGetDataByMapID::IsValid' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByMapID, Temp_int_Array_Index_Variable) == 0x000084, "Member 'BPL_BattleField_C_BattleFieldGetDataByMapID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByMapID, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'BPL_BattleField_C_BattleFieldGetDataByMapID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByMapID, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BPL_BattleField_C_BattleFieldGetDataByMapID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByMapID, CallFunc_GetDataTableRowFromName_OutRow) == 0x000090, "Member 'BPL_BattleField_C_BattleFieldGetDataByMapID::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByMapID, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000100, "Member 'BPL_BattleField_C_BattleFieldGetDataByMapID::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByMapID, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000108, "Member 'BPL_BattleField_C_BattleFieldGetDataByMapID::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByMapID, CallFunc_Array_Get_Item) == 0x000118, "Member 'BPL_BattleField_C_BattleFieldGetDataByMapID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByMapID, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BPL_BattleField_C_BattleFieldGetDataByMapID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByMapID, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000130, "Member 'BPL_BattleField_C_BattleFieldGetDataByMapID::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByMapID, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0001A0, "Member 'BPL_BattleField_C_BattleFieldGetDataByMapID::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByMapID, CallFunc_Less_IntInt_ReturnValue) == 0x0001A1, "Member 'BPL_BattleField_C_BattleFieldGetDataByMapID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetDataByMapID, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001A2, "Member 'BPL_BattleField_C_BattleFieldGetDataByMapID::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BPL_BattleField.BPL_BattleField_C.BattleFieldGetRandomRotationZ
// 0x0100 (0x0100 - 0x0000)
struct BPL_BattleField_C_BattleFieldGetRandomRotationZ final
{
public:
	bool                                          IsRandomRotate;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F51[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotateZ;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F52[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugMenuItemData                     CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue; // 0x0018(0x00D0)()
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F53[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_BattleField_C_BattleFieldGetRandomRotationZ) == 0x000008, "Wrong alignment on BPL_BattleField_C_BattleFieldGetRandomRotationZ");
static_assert(sizeof(BPL_BattleField_C_BattleFieldGetRandomRotationZ) == 0x000100, "Wrong size on BPL_BattleField_C_BattleFieldGetRandomRotationZ");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetRandomRotationZ, IsRandomRotate) == 0x000000, "Member 'BPL_BattleField_C_BattleFieldGetRandomRotationZ::IsRandomRotate' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetRandomRotationZ, __WorldContext) == 0x000008, "Member 'BPL_BattleField_C_BattleFieldGetRandomRotationZ::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetRandomRotationZ, RotateZ) == 0x000010, "Member 'BPL_BattleField_C_BattleFieldGetRandomRotationZ::RotateZ' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetRandomRotationZ, CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue) == 0x000018, "Member 'BPL_BattleField_C_BattleFieldGetRandomRotationZ::CallFunc_GetDebugMenuItemFromPathName_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetRandomRotationZ, CallFunc_RandomInteger_ReturnValue) == 0x0000E8, "Member 'BPL_BattleField_C_BattleFieldGetRandomRotationZ::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetRandomRotationZ, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000EC, "Member 'BPL_BattleField_C_BattleFieldGetRandomRotationZ::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetRandomRotationZ, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F0, "Member 'BPL_BattleField_C_BattleFieldGetRandomRotationZ::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetRandomRotationZ, CallFunc_SelectInt_ReturnValue) == 0x0000F4, "Member 'BPL_BattleField_C_BattleFieldGetRandomRotationZ::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetRandomRotationZ, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000F8, "Member 'BPL_BattleField_C_BattleFieldGetRandomRotationZ::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_BattleField_C_BattleFieldGetRandomRotationZ, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000FC, "Member 'BPL_BattleField_C_BattleFieldGetRandomRotationZ::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

}

