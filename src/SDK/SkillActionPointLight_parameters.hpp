#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SkillActionPointLight

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function SkillActionPointLight.SkillActionPointLight_C.ExecuteUbergraph_SkillActionPointLight
// 0x0220 (0x0220 - 0x0000)
struct SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D0E[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_X;                                // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y;                                // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z;                                // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D0F[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      K2Node_CustomEvent_Color;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_OverrideColor;                  // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            K2Node_CustomEvent_Intensity;                      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OverrideIntensity;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D10[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            K2Node_CustomEvent_Radius;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OverrideRadius;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D11[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            K2Node_CustomEvent_FalloffExponent;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OverrideFalloffExponent;        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D12[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D13[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime_1;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime_1;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D14[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime_2;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime_2;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D15[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime_3;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime_3;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0110(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0194(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight) == 0x000010, "Wrong alignment on SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight");
static_assert(sizeof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight) == 0x000220, "Wrong size on SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, EntryPoint) == 0x000000, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::EntryPoint' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_BreakTransform_Location) == 0x000040, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_GetAxes_X) == 0x000064, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_GetAxes_X' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_GetAxes_Y) == 0x000070, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_GetAxes_Y' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_GetAxes_Z) == 0x00007C, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_GetAxes_Z' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, K2Node_Event_DeltaSeconds) == 0x000088, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, K2Node_CustomEvent_Color) == 0x000090, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, K2Node_CustomEvent_OverrideColor) == 0x000098, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::K2Node_CustomEvent_OverrideColor' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, K2Node_CustomEvent_Intensity) == 0x0000A8, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::K2Node_CustomEvent_Intensity' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, K2Node_CustomEvent_OverrideIntensity) == 0x0000B0, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::K2Node_CustomEvent_OverrideIntensity' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, K2Node_CustomEvent_Radius) == 0x0000B8, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::K2Node_CustomEvent_Radius' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, K2Node_CustomEvent_OverrideRadius) == 0x0000C0, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::K2Node_CustomEvent_OverrideRadius' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, K2Node_CustomEvent_FalloffExponent) == 0x0000C8, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::K2Node_CustomEvent_FalloffExponent' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, K2Node_CustomEvent_OverrideFalloffExponent) == 0x0000D0, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::K2Node_CustomEvent_OverrideFalloffExponent' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_IsValid_ReturnValue) == 0x0000D4, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_GetTimeRange_MinTime) == 0x0000D8, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_GetTimeRange_MaxTime) == 0x0000DC, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_IsValid_ReturnValue_1) == 0x0000E0, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_GetTimeRange_MinTime_1) == 0x0000E4, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_GetTimeRange_MinTime_1' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_GetTimeRange_MaxTime_1) == 0x0000E8, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_GetTimeRange_MaxTime_1' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_IsValid_ReturnValue_2) == 0x0000EC, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_GetTimeRange_MinTime_2) == 0x0000F0, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_GetTimeRange_MinTime_2' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_GetTimeRange_MaxTime_2) == 0x0000F4, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_GetTimeRange_MaxTime_2' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_IsValid_ReturnValue_3) == 0x0000F8, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_GetTimeRange_MinTime_3) == 0x0000FC, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_GetTimeRange_MinTime_3' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_GetTimeRange_MaxTime_3) == 0x000100, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_GetTimeRange_MaxTime_3' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_Array_Add_ReturnValue) == 0x000104, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_Array_Add_ReturnValue_1) == 0x000108, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_Array_Add_ReturnValue_2) == 0x00010C, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, Temp_float_Variable) == 0x000110, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_Array_Add_ReturnValue_3) == 0x000114, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_Array_Add_ReturnValue_4) == 0x000118, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_SelectFloat_ReturnValue) == 0x00011C, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_SelectFloat_ReturnValue_1) == 0x000120, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x000124, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_MaxOfFloatArray_MaxValue) == 0x000128, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_SelectFloat_ReturnValue_2) == 0x00012C, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_BreakVector_X) == 0x000130, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_BreakVector_Y) == 0x000134, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_BreakVector_Z) == 0x000138, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00013C, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_SelectColor_ReturnValue) == 0x000148, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000158, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000164, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_Add_VectorVector_ReturnValue) == 0x000170, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00017C, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000188, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000194, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight, CallFunc_K2_SetActorLocation_ReturnValue) == 0x00021C, "Member 'SkillActionPointLight_C_ExecuteUbergraph_SkillActionPointLight::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function SkillActionPointLight.SkillActionPointLight_C.ActivateUpdateTimeline
// 0x0048 (0x0048 - 0x0000)
struct SkillActionPointLight_C_ActivateUpdateTimeline final
{
public:
	class UCurveLinearColor*                      Color;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OverrideColor;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Intensity;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverrideIntensity;                                 // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D16[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Radius;                                            // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverrideRadius;                                    // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D17[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            FalloffExponent;                                   // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OverrideFalloffExponent;                           // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkillActionPointLight_C_ActivateUpdateTimeline) == 0x000008, "Wrong alignment on SkillActionPointLight_C_ActivateUpdateTimeline");
static_assert(sizeof(SkillActionPointLight_C_ActivateUpdateTimeline) == 0x000048, "Wrong size on SkillActionPointLight_C_ActivateUpdateTimeline");
static_assert(offsetof(SkillActionPointLight_C_ActivateUpdateTimeline, Color) == 0x000000, "Member 'SkillActionPointLight_C_ActivateUpdateTimeline::Color' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ActivateUpdateTimeline, OverrideColor) == 0x000008, "Member 'SkillActionPointLight_C_ActivateUpdateTimeline::OverrideColor' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ActivateUpdateTimeline, Intensity) == 0x000018, "Member 'SkillActionPointLight_C_ActivateUpdateTimeline::Intensity' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ActivateUpdateTimeline, OverrideIntensity) == 0x000020, "Member 'SkillActionPointLight_C_ActivateUpdateTimeline::OverrideIntensity' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ActivateUpdateTimeline, Radius) == 0x000028, "Member 'SkillActionPointLight_C_ActivateUpdateTimeline::Radius' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ActivateUpdateTimeline, OverrideRadius) == 0x000030, "Member 'SkillActionPointLight_C_ActivateUpdateTimeline::OverrideRadius' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ActivateUpdateTimeline, FalloffExponent) == 0x000038, "Member 'SkillActionPointLight_C_ActivateUpdateTimeline::FalloffExponent' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_ActivateUpdateTimeline, OverrideFalloffExponent) == 0x000040, "Member 'SkillActionPointLight_C_ActivateUpdateTimeline::OverrideFalloffExponent' has a wrong offset!");

// Function SkillActionPointLight.SkillActionPointLight_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct SkillActionPointLight_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkillActionPointLight_C_ReceiveTick) == 0x000004, "Wrong alignment on SkillActionPointLight_C_ReceiveTick");
static_assert(sizeof(SkillActionPointLight_C_ReceiveTick) == 0x000004, "Wrong size on SkillActionPointLight_C_ReceiveTick");
static_assert(offsetof(SkillActionPointLight_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'SkillActionPointLight_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function SkillActionPointLight.SkillActionPointLight_C.UpdateLocation
// 0x0138 (0x0138 - 0x0000)
struct SkillActionPointLight_C_UpdateLocation final
{
public:
	float                                         CallFunc_BreakVector_X;                            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D18[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D19[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_BI_GetMeshComponent_MeshComp;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_X;                                // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Y;                                // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAxes_Z;                                // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x00AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SkillActionPointLight_C_UpdateLocation) == 0x000008, "Wrong alignment on SkillActionPointLight_C_UpdateLocation");
static_assert(sizeof(SkillActionPointLight_C_UpdateLocation) == 0x000138, "Wrong size on SkillActionPointLight_C_UpdateLocation");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, CallFunc_BreakVector_X) == 0x000000, "Member 'SkillActionPointLight_C_UpdateLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, CallFunc_BreakVector_Y) == 0x000004, "Member 'SkillActionPointLight_C_UpdateLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, CallFunc_BreakVector_Z) == 0x000008, "Member 'SkillActionPointLight_C_UpdateLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, K2Node_DynamicCast_AsChara_Base) == 0x000010, "Member 'SkillActionPointLight_C_UpdateLocation::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'SkillActionPointLight_C_UpdateLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'SkillActionPointLight_C_UpdateLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, CallFunc_BI_GetMeshComponent_MeshComp) == 0x000020, "Member 'SkillActionPointLight_C_UpdateLocation::CallFunc_BI_GetMeshComponent_MeshComp' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, CallFunc_GetSocketRotation_ReturnValue) == 0x000028, "Member 'SkillActionPointLight_C_UpdateLocation::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, CallFunc_GetSocketLocation_ReturnValue) == 0x000034, "Member 'SkillActionPointLight_C_UpdateLocation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, CallFunc_GetAxes_X) == 0x000040, "Member 'SkillActionPointLight_C_UpdateLocation::CallFunc_GetAxes_X' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, CallFunc_GetAxes_Y) == 0x00004C, "Member 'SkillActionPointLight_C_UpdateLocation::CallFunc_GetAxes_Y' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, CallFunc_GetAxes_Z) == 0x000058, "Member 'SkillActionPointLight_C_UpdateLocation::CallFunc_GetAxes_Z' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000064, "Member 'SkillActionPointLight_C_UpdateLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000070, "Member 'SkillActionPointLight_C_UpdateLocation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x00007C, "Member 'SkillActionPointLight_C_UpdateLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000088, "Member 'SkillActionPointLight_C_UpdateLocation::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000094, "Member 'SkillActionPointLight_C_UpdateLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000A0, "Member 'SkillActionPointLight_C_UpdateLocation::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_UpdateLocation, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x0000AC, "Member 'SkillActionPointLight_C_UpdateLocation::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");

// Function SkillActionPointLight.SkillActionPointLight_C.GetGroupID
// 0x0004 (0x0004 - 0x0000)
struct SkillActionPointLight_C_GetGroupID final
{
public:
	int32                                         Param_GroupID;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkillActionPointLight_C_GetGroupID) == 0x000004, "Wrong alignment on SkillActionPointLight_C_GetGroupID");
static_assert(sizeof(SkillActionPointLight_C_GetGroupID) == 0x000004, "Wrong size on SkillActionPointLight_C_GetGroupID");
static_assert(offsetof(SkillActionPointLight_C_GetGroupID, Param_GroupID) == 0x000000, "Member 'SkillActionPointLight_C_GetGroupID::Param_GroupID' has a wrong offset!");

// Function SkillActionPointLight.SkillActionPointLight_C.CalcLightScale
// 0x0018 (0x0018 - 0x0000)
struct SkillActionPointLight_C_CalcLightScale final
{
public:
	float                                         RetVal;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BI_GetEffectScale_EffectScale;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharaBase_C*                           K2Node_DynamicCast_AsChara_Base;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SkillActionPointLight_C_CalcLightScale) == 0x000008, "Wrong alignment on SkillActionPointLight_C_CalcLightScale");
static_assert(sizeof(SkillActionPointLight_C_CalcLightScale) == 0x000018, "Wrong size on SkillActionPointLight_C_CalcLightScale");
static_assert(offsetof(SkillActionPointLight_C_CalcLightScale, RetVal) == 0x000000, "Member 'SkillActionPointLight_C_CalcLightScale::RetVal' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_CalcLightScale, CallFunc_BI_GetEffectScale_EffectScale) == 0x000004, "Member 'SkillActionPointLight_C_CalcLightScale::CallFunc_BI_GetEffectScale_EffectScale' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_CalcLightScale, K2Node_DynamicCast_AsChara_Base) == 0x000008, "Member 'SkillActionPointLight_C_CalcLightScale::K2Node_DynamicCast_AsChara_Base' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_CalcLightScale, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'SkillActionPointLight_C_CalcLightScale::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_CalcLightScale, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'SkillActionPointLight_C_CalcLightScale::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function SkillActionPointLight.SkillActionPointLight_C.SetLightParam
// 0x0024 (0x0024 - 0x0000)
struct SkillActionPointLight_C_SetLightParam final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Intensity;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FalloffExponent;                                   // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcLightScale_RetVal;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkillActionPointLight_C_SetLightParam) == 0x000004, "Wrong alignment on SkillActionPointLight_C_SetLightParam");
static_assert(sizeof(SkillActionPointLight_C_SetLightParam) == 0x000024, "Wrong size on SkillActionPointLight_C_SetLightParam");
static_assert(offsetof(SkillActionPointLight_C_SetLightParam, Color) == 0x000000, "Member 'SkillActionPointLight_C_SetLightParam::Color' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_SetLightParam, Intensity) == 0x000010, "Member 'SkillActionPointLight_C_SetLightParam::Intensity' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_SetLightParam, Radius) == 0x000014, "Member 'SkillActionPointLight_C_SetLightParam::Radius' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_SetLightParam, FalloffExponent) == 0x000018, "Member 'SkillActionPointLight_C_SetLightParam::FalloffExponent' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_SetLightParam, CallFunc_CalcLightScale_RetVal) == 0x00001C, "Member 'SkillActionPointLight_C_SetLightParam::CallFunc_CalcLightScale_RetVal' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_SetLightParam, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'SkillActionPointLight_C_SetLightParam::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function SkillActionPointLight.SkillActionPointLight_C.SetFollowSocket
// 0x0018 (0x0018 - 0x0000)
struct SkillActionPointLight_C_SetFollowSocket final
{
public:
	TScriptInterface<class IBPI_CharaBaseAccessor_C> Param_FollowActor;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   Param_FollowSocketName;                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkillActionPointLight_C_SetFollowSocket) == 0x000008, "Wrong alignment on SkillActionPointLight_C_SetFollowSocket");
static_assert(sizeof(SkillActionPointLight_C_SetFollowSocket) == 0x000018, "Wrong size on SkillActionPointLight_C_SetFollowSocket");
static_assert(offsetof(SkillActionPointLight_C_SetFollowSocket, Param_FollowActor) == 0x000000, "Member 'SkillActionPointLight_C_SetFollowSocket::Param_FollowActor' has a wrong offset!");
static_assert(offsetof(SkillActionPointLight_C_SetFollowSocket, Param_FollowSocketName) == 0x000010, "Member 'SkillActionPointLight_C_SetFollowSocket::Param_FollowSocketName' has a wrong offset!");

// Function SkillActionPointLight.SkillActionPointLight_C.SetPlayRate
// 0x0004 (0x0004 - 0x0000)
struct SkillActionPointLight_C_SetPlayRate final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkillActionPointLight_C_SetPlayRate) == 0x000004, "Wrong alignment on SkillActionPointLight_C_SetPlayRate");
static_assert(sizeof(SkillActionPointLight_C_SetPlayRate) == 0x000004, "Wrong size on SkillActionPointLight_C_SetPlayRate");
static_assert(offsetof(SkillActionPointLight_C_SetPlayRate, Rate) == 0x000000, "Member 'SkillActionPointLight_C_SetPlayRate::Rate' has a wrong offset!");

}

